<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<doc>
  <members>
    <assembly>
      <name>UnityEngine.Physics2DModule</name>
    </assembly>
    <member name="T:UnityEngine.AnchoredJoint2D">
      <summary>
        <para>Родительский класс для всех соединений, имеющих опорные точки.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnchoredJoint2D.anchor">
      <summary>
        <para>Точка привязки соединения к объекту, имеющему компонент соединения.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnchoredJoint2D.autoConfigureConnectedAnchor">
      <summary>
        <para>Должен ли connectAnchor рассчитываться автоматически?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnchoredJoint2D.connectedAnchor">
      <summary>
        <para>Точка привязки соединения ко второму объекту (т. е. тому, который не имеет компонента соединения).</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AreaEffector2D">
      <summary>
        <para>Применяет силы в области.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AreaEffector2D.angularDrag">
      <summary>
        <para>Угловое сопротивление, применяемое к твердым телам.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AreaEffector2D.drag">
      <summary>
        <para>Линейное сопротивление, применяемое к твердым телам.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AreaEffector2D.forceAngle">
      <summary>
        <para>Угол приложения силы.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AreaEffector2D.forceMagnitude">
      <summary>
        <para>Величина прилагаемой силы.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AreaEffector2D.forceTarget">
      <summary>
        <para>Цель, к которой исполнитель прикладывает любую силу.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AreaEffector2D.forceVariation">
      <summary>
        <para>Изменение величины прилагаемой силы.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AreaEffector2D.useGlobalAngle">
      <summary>
        <para>Должен ли forceAngle использовать глобальное пространство?</para>
      </summary>
    </member>
    <member name="T:UnityEngine.BoxCollider2D">
      <summary>
        <para>Коллайдер для 2D-физики, представляющий выровненный по оси прямоугольник.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.BoxCollider2D.autoTiling">
      <summary>
        <para>Определяет, будет ли форма BoxCollider2D автоматически обновляться на основе свойств мозаичных элементов SpriteRenderer.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.BoxCollider2D.center">
      <summary>
        <para>Центральная точка коллайдера в локальном пространстве.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.BoxCollider2D.edgeRadius">
      <summary>
        <para>Управляет радиусом всех ребер, созданных коллайдером.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.BoxCollider2D.size">
      <summary>
        <para>Ширина и высота прямоугольника.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.BuoyancyEffector2D">
      <summary>
        <para>Применяет силы для имитации плавучести, течения жидкости и сопротивления жидкости.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.BuoyancyEffector2D.angularDrag">
      <summary>
        <para>Сила, применяемая для медленного углового движения любого Collider2D, находящегося в контакте с эффектором.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.BuoyancyEffector2D.density">
      <summary>
        <para>Плотность жидкости, используемая для расчета выталкивающей силы.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.BuoyancyEffector2D.flowAngle">
      <summary>
        <para>Угол силы, используемый для моделирования потока жидкости.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.BuoyancyEffector2D.flowMagnitude">
      <summary>
        <para>Величина силы, используемой для моделирования потока жидкости.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.BuoyancyEffector2D.flowVariation">
      <summary>
        <para>Случайное изменение силы, используемой для моделирования потока жидкости.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.BuoyancyEffector2D.linearDrag">
      <summary>
        <para>Сила, применяемая для замедления линейного движения любого Collider2D, находящегося в контакте с эффектором.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.BuoyancyEffector2D.surfaceLevel">
      <summary>
        <para>Определяет произвольную горизонтальную линию, представляющую уровень поверхности жидкости.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.CapsuleCollider2D">
      <summary>
        <para>Примитивный коллайдер в форме капсулы.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CapsuleCollider2D.direction">
      <summary>
        <para>Направление, в котором могут расширяться стороны капсулы.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CapsuleCollider2D.size">
      <summary>
        <para>Ширина и высота области капсулы.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.CapsuleDirection2D">
      <summary>
        <para>Направление, в котором могут расширяться стороны капсулы.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CapsuleDirection2D.Horizontal">
      <summary>
        <para>Стороны капсулы вытянуты горизонтально.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CapsuleDirection2D.Vertical">
      <summary>
        <para>Стороны капсулы вытянуты вертикально.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.CircleCollider2D">
      <summary>
        <para>Коллайдер для 2D-физики, представляющий круг.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CircleCollider2D.center">
      <summary>
        <para>Центральная точка коллайдера в локальном пространстве.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CircleCollider2D.radius">
      <summary>
        <para>Радиус круга.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Collider2D">
      <summary>
        <para>Родительский класс для типов коллайдеров, используемых в 2D-геймплее.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collider2D.attachedRigidbody">
      <summary>
        <para>Rigidbody2D, прикрепленный к Collider2D.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collider2D.bounciness">
      <summary>
        <para>Получите отскок, используемый коллайдером.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collider2D.bounds">
      <summary>
        <para>Мировое пространство, ограничивающее область коллайдера.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collider2D.composite">
      <summary>
        <para>Получите CompositeCollider2D, доступный для подключения к коллайдеру.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collider2D.density">
      <summary>
        <para>Плотность коллайдера, используемая для расчета его массы (когда включена автоматическая масса).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collider2D.errorState">
      <summary>
        <para>Состояние ошибки, указывающее на состояние физических форм, которые пытался создать 2D-коллайдер. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collider2D.friction">
      <summary>
        <para>Получить трение, используемое коллайдером.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collider2D.isTrigger">
      <summary>
        <para>Этот коллайдер настроен как триггер?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collider2D.offset">
      <summary>
        <para>Локальное смещение геометрии коллайдера.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collider2D.shapeCount">
      <summary>
        <para>Количество активных PhysicsShape2D, которые в настоящее время использует Collider2D.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collider2D.sharedMaterial">
      <summary>
        <para>PhysicsMaterial2D, применяемый к этому коллайдеру.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collider2D.usedByComposite">
      <summary>
        <para>Устанавливает, будет ли коллайдер использоваться или не использоваться CompositeCollider2D.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collider2D.usedByEffector">
      <summary>
        <para>Независимо от того, используется ли коллайдер прикрепленным эффектором или нет.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Collider2D.Cast(UnityEngine.Vector2,UnityEngine.RaycastHit2D[],System.Single,System.Boolean)">
      <summary>
        <para>Добавляет форму коллайдера в сцену, начиная с позиции коллайдера, игнорируя сам коллайдер.</para>
      </summary>
      <param name="direction">Вектор, представляющий направление приведения формы.</param>
      <param name="results">Массив для получения результатов.</param>
      <param name="distance">Максимальное расстояние, на которое можно передать форму.</param>
      <param name="ignoreSiblingColliders">Определяет, должно ли приведение игнорировать коллайдеры, прикрепленные к одному и тому же Rigidbody2D (известные как родственные коллайдеры).</param>
      <returns>
        <para>Количество возвращенных результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Collider2D.Cast(UnityEngine.Vector2,UnityEngine.ContactFilter2D,UnityEngine.RaycastHit2D[],System.Single,System.Boolean)">
      <summary>
        <para>Добавляет форму коллайдера в сцену, начиная с позиции коллайдера, игнорируя сам коллайдер.</para>
      </summary>
      <param name="direction">Вектор, представляющий направление приведения формы.</param>
      <param name="contactFilter">Результаты фильтрации определяются фильтром контактов.</param>
      <param name="results">Массив для получения результатов.</param>
      <param name="distance">Максимальное расстояние, на которое можно передать форму.</param>
      <param name="ignoreSiblingColliders">Определяет, должно ли приведение игнорировать коллайдеры, прикрепленные к одному и тому же Rigidbody2D (известные как родственные коллайдеры).</param>
      <returns>
        <para>Количество возвращенных результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Collider2D.Cast(UnityEngine.Vector2,UnityEngine.ContactFilter2D,System.Collections.Generic.List`1&lt;UnityEngine.RaycastHit2D&gt;,System.Single,System.Boolean)">
      <summary>
        <para>Добавляет форму коллайдера в сцену, начиная с позиции коллайдера, игнорируя сам коллайдер.</para>
      </summary>
      <param name="direction">Вектор, представляющий направление приведения формы.</param>
      <param name="contactFilter">Результаты фильтрации определяются фильтром контактов.</param>
      <param name="results">Список для получения результатов.</param>
      <param name="distance">Максимальное расстояние, на которое можно передать форму.</param>
      <param name="ignoreSiblingColliders">Определяет, должно ли приведение игнорировать коллайдеры, прикрепленные к одному и тому же Rigidbody2D (известные как родственные коллайдеры).</param>
      <returns>
        <para>Количество возвращенных результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Collider2D.ClosestPoint(UnityEngine.Vector2)">
      <summary>
        <para>Возвращает точку на периметре этого коллайдера, ближайшую к указанной позиции.</para>
      </summary>
      <param name="position">Позиция, из которой можно найти ближайшую точку на этом коллайдере.</param>
      <returns>
        <para>Точка на периметре этого коллайдера, ближайшая к указанной позиции.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Collider2D.CreateMesh(System.Boolean,System.Boolean)">
      <summary>
        <para>Создает плоскую сетку, идентичную области, заданной геометрией Collider2D.</para>
      </summary>
      <param name="useBodyPosition">Должна ли сетка трансформироваться по положению прикрепленного Rigidbody2D?</param>
      <param name="useBodyRotation">Должна ли сетка трансформироваться вращением прикрепленного Rigidbody2D?</param>
      <returns>
        <para>Созданная плоская сетка, соответствующая геометрии коллайдера, или NULL, если сетка не может быть создана.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Collider2D.Distance(UnityEngine.Collider2D)">
      <summary>
        <para>Вычисляет минимальное расстояние между этим коллайдером и другим коллайдером.</para>
      </summary>
      <param name="collider">Коллайдер, используемый для расчета минимального расстояния от этого коллайдера.</param>
      <returns>
        <para>Минимальное разделение коллайдера и этого коллайдера.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Collider2D.GetContacts(UnityEngine.ContactPoint2D[])">
      <summary>
        <para>Извлекает все точки контакта для этого коллайдера.</para>
      </summary>
      <param name="contacts">Массив ContactPoint2D, используемый для получения результатов.</param>
      <returns>
        <para>Возвращает количество контактов, помещенных в массив контактов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Collider2D.GetContacts(UnityEngine.Collider2D[])">
      <summary>
        <para>Извлекает все коллайдеры, находящиеся в контакте с этим коллайдером.</para>
      </summary>
      <param name="colliders">Массив Collider2D, используемый для получения результатов.</param>
      <returns>
        <para>Возвращает количество контактов, помещенных в массив коллайдеров.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Collider2D.GetContacts(UnityEngine.ContactFilter2D,UnityEngine.ContactPoint2D[])">
      <summary>
        <para>Извлекает все точки контакта для этого коллайдера, результаты отфильтровываются с помощью contactFilter.</para>
      </summary>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <param name="contacts">Массив ContactPoint2D, используемый для получения результатов.</param>
      <returns>
        <para>Возвращает количество контактов, помещенных в массив контактов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Collider2D.GetContacts(UnityEngine.ContactFilter2D,UnityEngine.Collider2D[])">
      <summary>
        <para>Извлекает все коллайдеры, находящиеся в контакте с этим коллайдером, с фильтрацией результатов с помощью contactFilter.</para>
      </summary>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <param name="colliders">Массив Collider2D, используемый для получения результатов.</param>
      <returns>
        <para>Возвращает количество коллайдеров, размещенных в массиве коллайдеров.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Collider2D.GetContacts(System.Collections.Generic.List`1&lt;UnityEngine.ContactPoint2D&gt;)">
      <summary>
        <para>Извлекает все точки контакта для этого коллайдера.</para>
      </summary>
      <param name="contacts">Список ContactPoint2D, используемых для получения результатов.</param>
      <returns>
        <para>Возвращает количество контактов, помещенных в список контактов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Collider2D.GetContacts(System.Collections.Generic.List`1&lt;UnityEngine.Collider2D&gt;)">
      <summary>
        <para>Извлекает все коллайдеры, находящиеся в контакте с этим коллайдером.</para>
      </summary>
      <param name="colliders">Список Collider2D, использованных для получения результатов.</param>
      <returns>
        <para>Возвращает количество контактов, помещенных в список коллайдеров.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Collider2D.GetContacts(UnityEngine.ContactFilter2D,System.Collections.Generic.List`1&lt;UnityEngine.ContactPoint2D&gt;)">
      <summary>
        <para>Извлекает все точки контакта для этого коллайдера, результаты отфильтровываются с помощью contactFilter.</para>
      </summary>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <param name="contacts">Список ContactPoint2D, используемых для получения результатов.</param>
      <returns>
        <para>Возвращает количество контактов, помещенных в список контактов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Collider2D.GetContacts(UnityEngine.ContactFilter2D,System.Collections.Generic.List`1&lt;UnityEngine.Collider2D&gt;)">
      <summary>
        <para>Извлекает все коллайдеры, находящиеся в контакте с этим коллайдером, с фильтрацией результатов с помощью contactFilter.</para>
      </summary>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <param name="colliders">Список Collider2D, использованных для получения результатов.</param>
      <returns>
        <para>Возвращает количество контактов, помещенных в список коллайдеров.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Collider2D.GetShapeHash">
      <summary>
        <para>Генерирует простое хеш-значение на основе геометрии Collider2D.</para>
      </summary>
      <returns>
        <para>Хэш-значение, которое однозначно идентифицирует сконфигурированную геометрию Collider2D.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Collider2D.GetShapes(UnityEngine.PhysicsShapeGroup2D)">
      <summary>
        <para>Получает все PhysicsShape2D, используемые Collider2D.</para>
      </summary>
      <param name="physicsShapeGroup">PhysicsShapeGroup2D для хранения извлеченного PhysicsShape2D.</param>
      <returns>
        <para>Возвращает количество объектов PhysicsShape2D, полученных из Collider2D.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Collider2D.GetShapes(UnityEngine.PhysicsShapeGroup2D,System.Int32,System.Int32)">
      <summary>
        <para>Получает указанный диапазон PhysicsShape2D, используемый Collider2D.</para>
      </summary>
      <param name="physicsShapeGroup">PhysicsShapeGroup2D для хранения извлеченного PhysicsShape2D.</param>
      <param name="shapeIndex">Индекс первой извлекаемой фигуры. Это должно быть в диапазоне от 0 до Collider2D.shapeCount-1.</param>
      <param name="shapeCount">Количество форм для извлечения. Параметр shapeIndex + shapeCount должен быть меньше или равен Collider2D.shapeCount.</param>
      <returns>
        <para>Возвращает количество объектов PhysicsShape2D, полученных из Collider2D. Во всех случаях это должно быть то же число, что и shapeCount .</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Collider2D.IsTouching(UnityEngine.Collider2D)">
      <summary>
        <para>Проверьте, касается ли этот коллайдер коллайдера или нет.</para>
      </summary>
      <param name="collider">Коллайдер, чтобы проверить, касается ли он этого коллайдера.</param>
      <returns>
        <para>Соприкасается ли этот коллайдер с коллайдером или нет.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Collider2D.IsTouching(UnityEngine.Collider2D,UnityEngine.ContactFilter2D)">
      <summary>
        <para>Проверьте, касается ли этот коллайдер коллайдера или нет, с результатами, отфильтрованными с помощью contactFilter.</para>
      </summary>
      <param name="collider">Коллайдер, чтобы проверить, касается ли он этого коллайдера.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <returns>
        <para>Соприкасается ли этот коллайдер с коллайдером или нет.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Collider2D.IsTouching(UnityEngine.ContactFilter2D)">
      <summary>
        <para>Проверьте, касается ли этот коллайдер других коллайдеров или нет, с результатами, отфильтрованными с помощью contactFilter.</para>
      </summary>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <returns>
        <para>Соприкасается ли этот коллайдер с коллайдером или нет.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Collider2D.IsTouchingLayers(System.Int32)">
      <summary>
        <para>Проверяет, касается ли этот коллайдер каких-либо коллайдеров в указанной маске слоя или нет.</para>
      </summary>
      <param name="layerMask">Любые коллайдеры на любом из этих слоев считаются соприкасающимися.</param>
      <returns>
        <para>Касается ли этот коллайдер какого-либо коллайдера в указанной маске слоя или нет.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Collider2D.OverlapCollider(UnityEngine.ContactFilter2D,UnityEngine.Collider2D[])">
      <summary>
        <para>Получите список всех коллайдеров, которые перекрывают этот коллайдер.</para>
      </summary>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z. Обратите внимание, что нормальный угол не используется для проверки перекрытия.</param>
      <param name="results">Массив для получения результатов. Размер массива определяет максимальное количество возвращаемых результатов.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в массив результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Collider2D.OverlapCollider(UnityEngine.ContactFilter2D,System.Collections.Generic.List`1&lt;UnityEngine.Collider2D&gt;)">
      <summary>
        <para>Получить список всех коллайдеров, перекрывающих этот коллайдер.</para>
      </summary>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z. Обратите внимание, что нормальный угол не используется для проверки перекрытия.</param>
      <param name="results">Список для получения результатов.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в список результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Collider2D.OverlapPoint(UnityEngine.Vector2)">
      <summary>
        <para>Проверить, не перекрывает ли коллайдер точку в пространстве.</para>
      </summary>
      <param name="point">Точка в мировом пространстве.</param>
      <returns>
        <para>Перекрывает ли точка коллайдер?</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Collider2D.Raycast(UnityEngine.Vector2,UnityEngine.RaycastHit2D[],System.Single,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Направляет в сцену луч, который начинается с позиции коллайдера и игнорирует сам коллайдер.</para>
      </summary>
      <param name="direction">Вектор, представляющий направление луча.</param>
      <param name="results">Массив для получения результатов.</param>
      <param name="distance">Максимальное расстояние, на которое можно передать луч.</param>
      <param name="layerMask">Фильтр для проверки объектов только на определенных слоях.</param>
      <param name="minDepth">Включать только объекты с координатой Z (глубиной) больше этого значения.</param>
      <param name="maxDepth">Включать только объекты с координатой Z (глубиной) меньше этого значения.</param>
      <param name="contactFilter">Результаты фильтрации определяются фильтром контактов.</param>
      <returns>
        <para>Количество возвращенных результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Collider2D.Raycast(UnityEngine.Vector2,UnityEngine.ContactFilter2D,UnityEngine.RaycastHit2D[],System.Single)">
      <summary>
        <para>Направляет в сцену луч, который начинается с позиции коллайдера и игнорирует сам коллайдер.</para>
      </summary>
      <param name="direction">Вектор, представляющий направление луча.</param>
      <param name="results">Массив для получения результатов.</param>
      <param name="distance">Максимальное расстояние, на которое можно передать луч.</param>
      <param name="layerMask">Фильтр для проверки объектов только на определенных слоях.</param>
      <param name="minDepth">Включать только объекты с координатой Z (глубиной) больше этого значения.</param>
      <param name="maxDepth">Включать только объекты с координатой Z (глубиной) меньше этого значения.</param>
      <param name="contactFilter">Результаты фильтрации определяются фильтром контактов.</param>
      <returns>
        <para>Количество возвращенных результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Collider2D.Raycast(UnityEngine.Vector2,UnityEngine.ContactFilter2D,System.Collections.Generic.List`1&lt;UnityEngine.RaycastHit2D&gt;,System.Single)">
      <summary>
        <para>Направляет в сцену луч, который начинается с позиции коллайдера и игнорирует сам коллайдер.</para>
      </summary>
      <param name="direction">Вектор, представляющий направление луча.</param>
      <param name="contactFilter">Результаты фильтрации определяются фильтром контактов.</param>
      <param name="results">Список для получения результатов.</param>
      <param name="distance">Максимальное расстояние, на которое можно передать луч.</param>
      <returns>
        <para>Количество возвращенных результатов.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.ColliderDistance2D">
      <summary>
        <para>Представляет разделение или перекрытие двух объектов Collider2D.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ColliderDistance2D.distance">
      <summary>
        <para>Получает расстояние между двумя коллайдерами.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ColliderDistance2D.isOverlapped">
      <summary>
        <para>Получает, представляет ли расстояние перекрытие или нет.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ColliderDistance2D.isValid">
      <summary>
        <para>Получает, является ли расстояние допустимым или нет.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ColliderDistance2D.normal">
      <summary>
        <para>Нормализованный вектор, указывающий из точки B в точку A.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ColliderDistance2D.pointA">
      <summary>
        <para>Точка на Collider2D, которая находится на определенном расстоянии от точки B.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ColliderDistance2D.pointB">
      <summary>
        <para>Точка на Collider2D, которая находится на определенном расстоянии от точки A.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ColliderErrorState2D">
      <summary>
        <para>Указывает, какая (если есть) ошибка возникла при создании 2D-коллайдера.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ColliderErrorState2D.None">
      <summary>
        <para>Указывает, что ошибок не возникло, поэтому 2D-коллайдер успешно создан.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ColliderErrorState2D.NoShapes">
      <summary>
        <para>Указывает, что 2D-коллайдер не создал никаких физических фигур, потому что состояние 2D-коллайдера привело к тому, что вершины оказались слишком близко или область слишком мала для обработки физическим движком.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ColliderErrorState2D.RemovedShapes">
      <summary>
        <para>Указывает, что некоторые физические формы не были созданы 2D-коллайдером, потому что состояние 2D-коллайдера привело к тому, что вершины оказались слишком близкими или область слишком мала для обработки физическим движком.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Collision2D">
      <summary>
        <para>Детали столкновения, возвращаемые функциями обратного вызова 2D-физики.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collision2D.collider">
      <summary>
        <para>Входящий Collider2D участвует в столкновении с другим Collider.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collision2D.contactCount">
      <summary>
        <para>Получает количество контактов для этой коллизии.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collision2D.contacts">
      <summary>
        <para>Конкретные точки соприкосновения с поступающим Collider2D. Вам следует избегать использования этого, поскольку он создает мусор в памяти. Вместо этого используйте GetContact или GetContacts.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collision2D.enabled">
      <summary>
        <para>Указывает, включена или отключена реакция или ответ на коллизию.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collision2D.gameObject">
      <summary>
        <para>Входящий GameObject участвует в столкновении.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collision2D.otherCollider">
      <summary>
        <para>Другой Collider2D участвует в столкновении с коллайдером.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collision2D.otherRigidbody">
      <summary>
        <para>Другой Rigidbody2D участвует в столкновении с твердым телом.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collision2D.relativeVelocity">
      <summary>
        <para>Относительная линейная скорость двух сталкивающихся объектов (только для чтения).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collision2D.rigidbody">
      <summary>
        <para>Входящий Rigidbody2D столкнулся с другим Rigidbody.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Collision2D.transform">
      <summary>
        <para>Преобразование входящего объекта, участвующего в столкновении.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Collision2D.GetContact(System.Int32)">
      <summary>
        <para>Получает точку контакта по указанному индексу.</para>
      </summary>
      <param name="index">Индекс контакта для извлечения.</param>
      <returns>
        <para>Контакт по указанному индексу.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Collision2D.GetContacts(UnityEngine.ContactPoint2D[])">
      <summary>
        <para>Извлекает все точки контакта для контактов между коллайдером и другим коллайдером.</para>
      </summary>
      <param name="contacts">Массив ContactPoint2D, используемый для получения результатов.</param>
      <returns>
        <para>Возвращает количество контактов, помещенных в массив контактов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Collision2D.GetContacts(System.Collections.Generic.List`1&lt;UnityEngine.ContactPoint2D&gt;)">
      <summary>
        <para>Извлекает все точки контакта для контактов между коллайдером и другим коллайдером.</para>
      </summary>
      <param name="contacts">Список ContactPoint2D, используемых для получения результатов.</param>
      <returns>
        <para>Возвращает количество контактов, помещенных в список контактов.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.CollisionDetectionMode2D">
      <summary>
        <para>Управляет обнаружением столкновений при движении Rigidbody2D.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CollisionDetectionMode2D.Continuous">
      <summary>
        <para>Гарантирует обнаружение всех столкновений при движении Rigidbody2D.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CollisionDetectionMode2D.Discrete">
      <summary>
        <para>При перемещении Rigidbody2D обнаруживаются только столкновения в новой позиции.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CollisionDetectionMode2D.None">
      <summary>
        <para>Этот режим устарел. Вы должны использовать Дискретный режим.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.CompositeCollider2D">
      <summary>
        <para>Коллайдер, который может объединять другие коллайдеры.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CompositeCollider2D.edgeRadius">
      <summary>
        <para>Управляет радиусом всех ребер, созданных коллайдером.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CompositeCollider2D.generationType">
      <summary>
        <para>Указывает, когда создавать геометрию композитного коллайдера.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CompositeCollider2D.geometryType">
      <summary>
        <para>Указывает тип геометрии, которую должен генерировать композитный коллайдер.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CompositeCollider2D.offsetDistance">
      <summary>
        <para>Вершины смещаются на это расстояние при компоновке нескольких физических фигур. Любые вершины между фигурами в пределах этого расстояния объединяются.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CompositeCollider2D.pathCount">
      <summary>
        <para>Количество путей в коллайдере.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CompositeCollider2D.pointCount">
      <summary>
        <para>Получает общее количество точек на всех путях внутри коллайдера.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CompositeCollider2D.vertexDistance">
      <summary>
        <para>Управляет минимально допустимым расстоянием между сгенерированными вершинами.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.CompositeCollider2D.GenerateGeometry">
      <summary>
        <para>Регенерирует геометрию составного коллайдера.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.CompositeCollider2D.GenerationType">
      <summary>
        <para>Указывает, когда создавать геометрию композитного коллайдера.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CompositeCollider2D.GenerationType.Manual">
      <summary>
        <para>Отключает автоматическое обновление геометрии составного коллайдера при изменении коллайдера, используемого составным коллайдером.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CompositeCollider2D.GenerationType.Synchronous">
      <summary>
        <para>Задает синхронное обновление геометрии составного коллайдера сразу же при изменении коллайдера, используемого составным коллайдером.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.CompositeCollider2D.GeometryType">
      <summary>
        <para>Указывает тип геометрии, создаваемой композитным коллайдером.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CompositeCollider2D.GeometryType.Outlines">
      <summary>
        <para>Настраивает составной коллайдер на создание замкнутых контуров объединенной геометрии коллайдера, состоящей только из ребер.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.CompositeCollider2D.GeometryType.Polygons">
      <summary>
        <para>Настраивает составной коллайдер на создание замкнутых контуров объединенной геометрии коллайдера, состоящей из выпуклых многоугольников.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.CompositeCollider2D.GetPath(System.Int32,UnityEngine.Vector2[])">
      <summary>
        <para>Получает путь из коллайдера по его индексу.</para>
      </summary>
      <param name="index">Индекс пути от 0 до pathCount минус 1.</param>
      <param name="points">Упорядоченный массив вершин (точек) выбранного пути.</param>
      <returns>
        <para>Возвращает количество точек, помещенных в массив точек.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.CompositeCollider2D.GetPath(System.Int32,System.Collections.Generic.List`1&lt;UnityEngine.Vector2&gt;)">
      <summary>
        <para>Получает путь из коллайдера по его индексу.</para>
      </summary>
      <param name="index">Индекс пути от 0 до pathCount минус 1.</param>
      <param name="points">Упорядоченный список вершин (точек) выбранного пути.</param>
      <returns>
        <para>Возвращает количество точек, помещенных в список точек.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.CompositeCollider2D.GetPathPointCount(System.Int32)">
      <summary>
        <para>Получает количество точек указанного пути от Коллайдера по его индексу.</para>
      </summary>
      <param name="index">Индекс пути от 0 до pathCount минус 1.</param>
      <returns>
        <para>Возвращает количество точек пути, указанного индексом.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.ConstantForce2D">
      <summary>
        <para>Непрерывно применяет как линейные, так и угловые (крутящие) силы к твердому телу при каждом обновлении физики.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ConstantForce2D.force">
      <summary>
        <para>Линейная сила, применяемая к твердому телу при каждом обновлении физики.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ConstantForce2D.relativeForce">
      <summary>
        <para>Линейная сила относительно системы координат твердого тела применялась при каждом обновлении физики.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ConstantForce2D.torque">
      <summary>
        <para>Крутящий момент, применяемый к твердому телу при каждом обновлении физики.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ContactFilter2D">
      <summary>
        <para>Набор параметров для фильтрации результатов контакта. Определите угол, ссылаясь на их положение в мировом пространстве, где 0 градусов параллелен положительной оси x, 90 градусов параллелен положительной оси y, 180 градусов параллелен отрицательной оси x, а 270 градусов параллелен положительной оси x. параллельно отрицательной оси Y.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ContactFilter2D.isFiltering">
      <summary>
        <para>Учитывая текущее состояние фильтра контактов, определите, будет ли он что-либо фильтровать.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ContactFilter2D.layerMask">
      <summary>
        <para>Устанавливает контактный фильтр для фильтрации результатов, которые включают только Collider2D на слоях, определенных маской слоя.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ContactFilter2D.maxDepth">
      <summary>
        <para>Устанавливает контактный фильтр для фильтрации результатов, чтобы включить только Collider2D с координатой Z (глубиной) меньше этого значения.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ContactFilter2D.maxNormalAngle">
      <summary>
        <para>Устанавливает контактный фильтр для фильтрации результатов, чтобы включить только контакты с нормальными углами столкновения, которые меньше этого угла.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ContactFilter2D.minDepth">
      <summary>
        <para>Устанавливает контактный фильтр для фильтрации результатов, чтобы включить только Collider2D с координатой Z (глубиной), превышающей это значение.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ContactFilter2D.minNormalAngle">
      <summary>
        <para>Устанавливает контактный фильтр для фильтрации результатов, чтобы включить только контакты с нормальными углами столкновения, которые больше этого угла.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ContactFilter2D.useDepth">
      <summary>
        <para>Устанавливает контактный фильтр для фильтрации результатов по глубине с помощью minDepth и maxDepth.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ContactFilter2D.useLayerMask">
      <summary>
        <para>Устанавливает контактный фильтр для фильтрации результатов по маске слоя.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ContactFilter2D.useNormalAngle">
      <summary>
        <para>Устанавливает контактный фильтр для фильтрации результатов по нормальному углу столкновения с использованием minNormalAngle и maxNormalAngle.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ContactFilter2D.useOutsideDepth">
      <summary>
        <para>Устанавливает фильтр контактов для фильтрации в диапазоне minDepth и maxDepth или вне этого диапазона.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ContactFilter2D.useOutsideNormalAngle">
      <summary>
        <para>Устанавливает контактный фильтр для фильтрации в диапазоне minNormalAngle и maxNormalAngle или вне этого диапазона.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ContactFilter2D.useTriggers">
      <summary>
        <para>Устанавливает фильтрацию результатов контакта на основе участия триггерного коллайдера.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ContactFilter2D.ClearDepth">
      <summary>
        <para>Отключает фильтрацию глубины, устанавливая для useDepth значение false. Связанные значения minDepth и maxDepth не изменяются.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ContactFilter2D.ClearLayerMask">
      <summary>
        <para>Отключает фильтрацию маски слоя, устанавливая для useLayerMask значение false. Связанное значение layerMask не изменяется.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ContactFilter2D.ClearNormalAngle">
      <summary>
        <para>Отключает фильтрацию нормального угла, устанавливая для useNormalAngle значение false. Связанные значения minNormalAngle и maxNormalAngle не изменяются.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.ContactFilter2D.IsFilteringDepth(UnityEngine.GameObject)">
      <summary>
        <para>Проверяет, находится ли преобразование для объекта в пределах диапазона глубины, подлежащего фильтрации.</para>
      </summary>
      <param name="obj">GameObject, используемый для проверки z-позиции (глубины) Transform.position.</param>
      <returns>
        <para>Возвращает true, если obj исключается фильтром, и false, если нет.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.ContactFilter2D.IsFilteringLayerMask(UnityEngine.GameObject)">
      <summary>
        <para>Проверяет, включен ли GameObject.layer для obj в фильтруемую маску слоя.</para>
      </summary>
      <param name="obj">GameObject, используемый для проверки GameObject.layer.</param>
      <returns>
        <para>Возвращает true, если obj исключается фильтром, и false, если нет.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.ContactFilter2D.IsFilteringNormalAngle(UnityEngine.Vector2)">
      <summary>
        <para>Проверяет, находится ли угол нормали в пределах диапазона угла нормали, подлежащего фильтрации.</para>
      </summary>
      <param name="normal">Нормаль, используемая для вычисления угла.</param>
      <returns>
        <para>Возвращает true, если фильтр исключает normal, и false в противном случае.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.ContactFilter2D.IsFilteringNormalAngle(System.Single)">
      <summary>
        <para>Проверяет, находится ли угол в пределах нормального диапазона углов для фильтрации.</para>
      </summary>
      <param name="angle">Угол, используемый для сравнения в фильтре.</param>
      <returns>
        <para>Возвращает true, если угол исключен фильтром, и false в противном случае.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.ContactFilter2D.IsFilteringTrigger(UnityEngine.Collider2D)">
      <summary>
        <para>Проверяет, является ли коллайдер триггером и должен ли фильтроваться с помощью useTriggers для фильтрации.</para>
      </summary>
      <param name="collider">Collider2D раньше проверял наличие триггера.</param>
      <returns>
        <para>Возвращает true, если коллайдер исключен фильтром, и false в противном случае.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.ContactFilter2D.NoFilter">
      <summary>
        <para>Устанавливает фильтр контактов, чтобы не фильтровать любые ContactPoint2D.</para>
      </summary>
      <returns>
        <para>Копия фильтра контактов, настроенного так, чтобы не фильтровать никакие ContactPoint2D.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.ContactFilter2D.SetDepth(System.Single,System.Single)">
      <summary>
        <para>Задает свойства фильтра minDepth и maxDepth и включает фильтрацию глубины, устанавливая для useDepth значение true.</para>
      </summary>
      <param name="minDepth">Значение, используемое для установки minDepth.</param>
      <param name="maxDepth">Значение, используемое для установки maxDepth.</param>
    </member>
    <member name="M:UnityEngine.ContactFilter2D.SetLayerMask(UnityEngine.LayerMask)">
      <summary>
        <para>Задает свойство фильтра layerMask с помощью предоставленного параметра layerMask, а также включает фильтрацию маски слоя, задав для useLayerMask значение true.</para>
      </summary>
      <param name="layerMask">Значение, используемое для установки LayerMask.</param>
    </member>
    <member name="M:UnityEngine.ContactFilter2D.SetNormalAngle(System.Single,System.Single)">
      <summary>
        <para>Задает свойства фильтра minNormalAngle и maxNormalAngle и включает фильтрацию нормального угла, задав для useNormalAngle значение true.</para>
      </summary>
      <param name="minNormalAngle">Значение, используемое для установки minNormalAngle.</param>
      <param name="maxNormalAngle">Значение, используемое для установки maxNormalAngle.</param>
    </member>
    <member name="T:UnityEngine.ContactPoint2D">
      <summary>
        <para>Подробная информация о конкретной точке контакта, связанной с 2D-физическим столкновением.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ContactPoint2D.collider">
      <summary>
        <para>Входящий Collider2D участвует в столкновении с другим Collider.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ContactPoint2D.enabled">
      <summary>
        <para>Указывает, включена или отключена реакция или ответ на коллизию.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ContactPoint2D.normal">
      <summary>
        <para>Нормаль поверхности в точке контакта.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ContactPoint2D.normalImpulse">
      <summary>
        <para>Получает импульс, приложенный к точке контакта вдоль ContactPoint2D.normal.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ContactPoint2D.otherCollider">
      <summary>
        <para>Другой Collider2D участвует в столкновении с коллайдером.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ContactPoint2D.otherRigidbody">
      <summary>
        <para>Другой Rigidbody2D участвует в столкновении с твердым телом.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ContactPoint2D.point">
      <summary>
        <para>Точка соприкосновения двух коллайдеров в мировом пространстве.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ContactPoint2D.relativeVelocity">
      <summary>
        <para>Получает относительную скорость двух коллайдеров в точке контакта (только для чтения).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ContactPoint2D.rigidbody">
      <summary>
        <para>Входящий Rigidbody2D столкнулся с другим Rigidbody.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ContactPoint2D.separation">
      <summary>
        <para>Получает расстояние между коллайдерами в точке контакта.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.ContactPoint2D.tangentImpulse">
      <summary>
        <para>Получает импульс, приложенный к точке контакта, перпендикулярной ContactPoint2D.normal.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.CustomCollider2D">
      <summary>
        <para>Представляет Collider2D, настроенный путем назначения ему геометрии PhysicsShape2D через PhysicsShapeGroup2D.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CustomCollider2D.customShapeCount">
      <summary>
        <para>Общее количество пользовательских PhysicsShape2D, назначенных коллайдеру. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.CustomCollider2D.customVertexCount">
      <summary>
        <para>Общее количество вершин Vector2|, используемых коллайдером. (Только чтение)</para>
      </summary>
    </member>
    <member name="M:UnityEngine.CustomCollider2D.ClearCustomShapes">
      <summary>
        <para>Удаляет все фигуры и связанные с ними вершины из коллайдера.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.CustomCollider2D.ClearCustomShapes(System.Int32,System.Int32)">
      <summary>
        <para>Удаляет определенное количество фигур, определенных shapeCount, начиная с shapeIndex вместе со всеми связанными вершинами, которые используют эти фигуры.</para>
      </summary>
      <param name="shapeIndex">Индекс формы, хранящейся в коллайдере.</param>
      <param name="shapeCount">Количество фигур для удаления, начиная с указанного индекса.</param>
    </member>
    <member name="M:UnityEngine.CustomCollider2D.GetCustomShapes(UnityEngine.PhysicsShapeGroup2D)">
      <summary>
        <para>Получает все физические фигуры и вершины в коллайдере и помещает их в указанный объект PhysicsShapeGroup2D.</para>
      </summary>
      <param name="physicsShapeGroup">Группа физических фигур, которая получит все физические фигуры PhysicsShape2D|и Vector2|вершины из коллайдера.</param>
      <returns>
        <para>Возвращает общее количество физических фигур PhysicsShape2D|, размещенных в указанной группе physicsShapeGroup.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.CustomCollider2D.GetCustomShapes(UnityEngine.PhysicsShapeGroup2D,System.Int32,System.Int32)">
      <summary>
        <para>Получает указанное количество физических фигур, определенных byshapeCount, начиная с shapeIndex, вместе со всеми связанными вершинами, которые используют эти фигуры, и помещает их в указанный объект PhysicsShapeGroup2D.</para>
      </summary>
      <param name="physicsShapeGroup">Группа физических фигур, которая получит PhysicsShape2D|физические формы и Vector2|вершины от коллайдера.</param>
      <param name="shapeIndex">Индекс формы в коллайдере, с которого начинается извлечение фигур.</param>
      <param name="shapeCount">Общее количество извлекаемых фигур, начиная с shapeIndex.</param>
      <returns>
        <para>Общее количество физических фигур PhysicsShape2D|, помещенных в указанную physicsShapeGroup.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.CustomCollider2D.GetCustomShapes(Unity.Collections.NativeArray`1&lt;UnityEngine.PhysicsShape2D&gt;,Unity.Collections.NativeArray`1&lt;UnityEngine.Vector2&gt;)">
      <summary>
        <para>Получает все физические фигуры и вершины в коллайдере и помещает их в указанные массивы.</para>
      </summary>
      <param name="shapes">Массив, который будет заполнен копиями всех фигур в PhysicsShapeGroup2D.</param>
      <param name="vertices">Массив, который будет заполнен копиями всех вершин в PhysicsShapeGroup2D.</param>
      <returns>
        <para>Возвращает общее количество физических фигур PhysicsShape2D|, помещенных в указанные массивы.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.CustomCollider2D.SetCustomShape(UnityEngine.PhysicsShapeGroup2D,System.Int32,System.Int32)">
      <summary>
        <para>Устанавливает одну фигуру и все связанные вершины формы из указанной physicsShapeGroup в коллайдер.</para>
      </summary>
      <param name="physicsShapeGroup">PhysicsShapeGroup2D для использования в качестве источника фигур и вершин.</param>
      <param name="srcShapeIndex">Индекс исходной формы в группе physicsShapeGroup, используемый для назначения коллайдеру.</param>
      <param name="dstShapeIndex">Индекс фигуры назначения в коллайдере, в который копируется исходная фигура.</param>
    </member>
    <member name="M:UnityEngine.CustomCollider2D.SetCustomShape(Unity.Collections.NativeArray`1&lt;UnityEngine.PhysicsShape2D&gt;,Unity.Collections.NativeArray`1&lt;UnityEngine.Vector2&gt;,System.Int32,System.Int32)">
      <summary>
        <para>Устанавливает одну фигуру и все связанные вершины фигур из указанных фигур и массивов вершин в коллайдер.</para>
      </summary>
      <param name="shapes">Массив для использования в качестве источника фигур.</param>
      <param name="vertices">Массив для использования в качестве источника вершин.</param>
      <param name="srcShapeIndex">Индекс исходной формы в массиве фигур, который используется для назначения коллайдеру.</param>
      <param name="dstShapeIndex">Индекс фигуры назначения в коллайдере, в который копируется исходная фигура.</param>
    </member>
    <member name="M:UnityEngine.CustomCollider2D.SetCustomShapes(UnityEngine.PhysicsShapeGroup2D)">
      <summary>
        <para>Устанавливает все формы и вершины в коллайдере на те, которые представлены указанным PhysicsShapeGroup2D.</para>
      </summary>
      <param name="physicsShapeGroup">PhysicsShapeGroup2D для использования в качестве источника фигур и вершин.</param>
    </member>
    <member name="M:UnityEngine.CustomCollider2D.SetCustomShapes(Unity.Collections.NativeArray`1&lt;UnityEngine.PhysicsShape2D&gt;,Unity.Collections.NativeArray`1&lt;UnityEngine.Vector2&gt;)">
      <summary>
        <para>Устанавливает все формы и вершины в коллайдере на те, которые представлены указанными массивами.</para>
      </summary>
      <param name="shapes">Массив, содержащий все фигуры, используемые для назначения коллайдеру.</param>
      <param name="vertices">Массив, содержащий все вершины, используемые для назначения коллайдеру.</param>
    </member>
    <member name="T:UnityEngine.DistanceJoint2D">
      <summary>
        <para>Соединение, которое удерживает два объекта Rigidbody2D на фиксированном расстоянии друг от друга.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.DistanceJoint2D.autoConfigureDistance">
      <summary>
        <para>Должно ли расстояние рассчитываться автоматически?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.DistanceJoint2D.distance">
      <summary>
        <para>Расстояние, разделяющее два конца соединения.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.DistanceJoint2D.maxDistanceOnly">
      <summary>
        <para>Следует ли поддерживать только максимальное расстояние или нет. Если нет, то вместо этого будет поддерживаться абсолютное расстояние.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.EdgeCollider2D">
      <summary>
        <para>Коллайдер для 2D-физики, представляющий произвольный набор соединенных ребер (линий), определяемых его вершинами.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EdgeCollider2D.adjacentEndPoint">
      <summary>
        <para>Определяет положение виртуальной точки рядом с конечной точкой EdgeCollider2D.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EdgeCollider2D.adjacentStartPoint">
      <summary>
        <para>Определяет положение виртуальной точки рядом с начальной точкой EdgeCollider2D.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EdgeCollider2D.edgeCount">
      <summary>
        <para>Получает количество ребер.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EdgeCollider2D.edgeRadius">
      <summary>
        <para>Управляет радиусом всех ребер, созданных коллайдером.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EdgeCollider2D.pointCount">
      <summary>
        <para>Получает количество баллов.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EdgeCollider2D.points">
      <summary>
        <para>Получите или задайте точки, определяющие несколько непрерывных ребер.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EdgeCollider2D.useAdjacentEndPoint">
      <summary>
        <para>Установите для этого параметра значение true, чтобы использовать смежную конечную точку для формирования нормали столкновения, которая используется для расчета реакции на столкновение, когда столкновение происходит в конечной точке краевого коллайдера. Установите значение false, чтобы не использовать смежную конечную точку, и нормаль столкновения становится направлением движения столкновения.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.EdgeCollider2D.useAdjacentStartPoint">
      <summary>
        <para>Установите для этого параметра значение true, чтобы использовать смежныйStartPoint для формирования нормали столкновения, которая используется для расчета реакции на столкновение, когда столкновение происходит в начальной точке Edge Collider. Установите для этого параметра значение false, чтобы не использовать соседнюю начальную точку, и нормаль столкновения становится направлением движения столкновения.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EdgeCollider2D.GetPoints(System.Collections.Generic.List`1&lt;UnityEngine.Vector2&gt;)">
      <summary>
        <para>Получает все точки, определяющие набор непрерывных ребер.</para>
      </summary>
      <param name="points">Список Vector2, используемых для получения баллов.</param>
      <returns>
        <para>Возвращает количество точек, помещенных в список точек.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.EdgeCollider2D.Reset">
      <summary>
        <para>Сброс к одному ребру, состоящему из двух точек.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.EdgeCollider2D.SetPoints(System.Collections.Generic.List`1&lt;UnityEngine.Vector2&gt;)">
      <summary>
        <para>Задает все точки, определяющие набор непрерывных ребер.</para>
      </summary>
      <param name="points">Список Vector2, используемый для установки точек. Этот список должен содержать не менее двух пунктов.</param>
      <returns>
        <para>Возвращает true, если список содержит две или более точек и точки заданы правильно. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.Effector2D">
      <summary>
        <para>Базовый класс для всех 2D-эффекторов.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Effector2D.colliderMask">
      <summary>
        <para>Маска, используемая для выбора определенных слоев, позволяет взаимодействовать с эффектором.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Effector2D.useColliderMask">
      <summary>
        <para>Следует ли использовать коллайдер-маску или глобальную матрицу коллизий?</para>
      </summary>
    </member>
    <member name="T:UnityEngine.EffectorForceMode2D">
      <summary>
        <para>Режим, используемый для применения сил Effector2D.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EffectorForceMode2D.Constant">
      <summary>
        <para>Сила прикладывается с постоянной скоростью.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EffectorForceMode2D.InverseLinear">
      <summary>
        <para>Сила прикладывается обратно пропорционально точке.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EffectorForceMode2D.InverseSquared">
      <summary>
        <para>Сила прикладывается обратно пропорционально квадрату относительно точки.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.EffectorSelection2D">
      <summary>
        <para>Выбирает источник и/или цель для использования Effector2D.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EffectorSelection2D.Collider">
      <summary>
        <para>Источник/цель определяется Collider2D.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EffectorSelection2D.Rigidbody">
      <summary>
        <para>Источник/цель определяется Rigidbody2D.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.FixedJoint2D">
      <summary>
        <para>Соединяет два Rigidbody2D вместе в их опорных точках с помощью настраиваемой пружины.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.FixedJoint2D.dampingRatio">
      <summary>
        <para>Величина, на которую сила пружины уменьшается пропорционально скорости движения.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.FixedJoint2D.frequency">
      <summary>
        <para>Частота колебаний пружины на расстоянии между объектами.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.FixedJoint2D.referenceAngle">
      <summary>
        <para>Угол между двумя телами, используемый в качестве зависимости для соединения.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ForceMode2D">
      <summary>
        <para>Вариант применения силы с помощью Rigidbody2D.AddForce.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ForceMode2D.Force">
      <summary>
        <para>Добавьте силу к Rigidbody2D, используя его массу.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ForceMode2D.Impulse">
      <summary>
        <para>Добавьте мгновенный импульс силы к hardbody2D, используя его массу.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.FrictionJoint2D">
      <summary>
        <para>Применяет как силу, так и крутящий момент, чтобы уменьшить как линейную, так и угловую скорость до нуля.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.FrictionJoint2D.maxForce">
      <summary>
        <para>Максимальное усилие, которое может быть создано при попытке сохранить зависимость фрикционного соединения.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.FrictionJoint2D.maxTorque">
      <summary>
        <para>Максимальный крутящий момент, который может быть создан при попытке сохранить зависимость фрикционного соединения.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.HingeJoint2D">
      <summary>
        <para>Соединение, которое позволяет объекту Rigidbody2D вращаться вокруг точки в пространстве или точки на другом объекте.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HingeJoint2D.jointAngle">
      <summary>
        <para>Текущий угол соединения (в градусах) по отношению к эталонному углу.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HingeJoint2D.jointSpeed">
      <summary>
        <para>Текущая скорость соединения.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HingeJoint2D.limits">
      <summary>
        <para>Предел углового поворота (в градусах) на шарнире.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HingeJoint2D.limitState">
      <summary>
        <para>Получает состояние ограничения соединения.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HingeJoint2D.motor">
      <summary>
        <para>Параметры силы двигателя, приложенной к суставу.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HingeJoint2D.referenceAngle">
      <summary>
        <para>Угол (в градусах) между двумя телами, используемый в качестве зависимости для соединения.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HingeJoint2D.useLimits">
      <summary>
        <para>Должны ли быть установлены ограничения на диапазон вращения?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HingeJoint2D.useMotor">
      <summary>
        <para>Должен ли шарнир вращаться автоматически за счет крутящего момента двигателя?</para>
      </summary>
    </member>
    <member name="M:UnityEngine.HingeJoint2D.GetMotorTorque(System.Single)">
      <summary>
        <para>Получает крутящий момент двигателя соединения с учетом указанного временного шага.</para>
      </summary>
      <param name="timeStep">Время для расчета крутящего момента двигателя.</param>
    </member>
    <member name="T:UnityEngine.Joint2D">
      <summary>
        <para>Родительский класс для соединений для соединения объектов Rigidbody2D.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Joint2D.attachedRigidbody">
      <summary>
        <para>Rigidbody2D, присоединенный к Joint2D.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Joint2D.breakForce">
      <summary>
        <para>Сила, которую нужно приложить, чтобы этот сустав сломался.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Joint2D.breakTorque">
      <summary>
        <para>Крутящий момент, который необходимо приложить для разрушения этого соединения.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Joint2D.collideConnected">
      <summary>
        <para>Может ли соединение столкнуться с другим объектом Rigidbody2D, к которому оно прикреплено?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Joint2D.connectedBody">
      <summary>
        <para>Объект Rigidbody2D, к которому присоединен другой конец соединения (т. е. объект без компонента соединения).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Joint2D.enableCollision">
      <summary>
        <para>Должны ли два твердых тела, соединенных этим соединением, столкнуться друг с другом?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Joint2D.reactionForce">
      <summary>
        <para>Получает силу реакции соединения.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Joint2D.reactionTorque">
      <summary>
        <para>Получает реактивный крутящий момент соединения.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Joint2D.GetReactionForce(System.Single)">
      <summary>
        <para>Получает силу реакции соединения с заданным значением timeStep.</para>
      </summary>
      <param name="timeStep">Время для расчета силы реакции.</param>
      <returns>
        <para>Сила реакции сустава за указанный timeStep.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Joint2D.GetReactionTorque(System.Single)">
      <summary>
        <para>Получает реактивный крутящий момент соединения с заданным значением timeStep.</para>
      </summary>
      <param name="timeStep">Время для расчета реактивного крутящего момента.</param>
      <returns>
        <para>Момент реакции соединения за указанный timeStep.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.JointAngleLimits2D">
      <summary>
        <para>Угловые ограничения на вращение объекта Rigidbody2D вокруг HingeJoint2D.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.JointAngleLimits2D.max">
      <summary>
        <para>Верхний угловой предел поворота.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.JointAngleLimits2D.min">
      <summary>
        <para>Нижний угловой предел поворота.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.JointLimitState2D">
      <summary>
        <para>Представляет состояние совместного предела.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.JointLimitState2D.EqualLimits">
      <summary>
        <para>Представляет состояние, в котором предел соединения находится на указанных нижнем и верхнем пределах (они идентичны).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.JointLimitState2D.Inactive">
      <summary>
        <para>Представляет состояние, в котором предел соединения неактивен.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.JointLimitState2D.LowerLimit">
      <summary>
        <para>Представляет состояние, в котором предел соединения находится на указанном нижнем пределе.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.JointLimitState2D.UpperLimit">
      <summary>
        <para>Представляет состояние, в котором предел соединения находится на указанном верхнем пределе.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.JointMotor2D">
      <summary>
        <para>Параметры дополнительной силы двигателя, применяемой к Joint2D.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.JointMotor2D.maxMotorTorque">
      <summary>
        <para>Максимальное усилие, которое можно приложить к Rigidbody2D в соединении для достижения заданной скорости.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.JointMotor2D.motorSpeed">
      <summary>
        <para>Желаемая скорость, которой Rigidbody2D достигает при движении вместе с соединением.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.JointSuspension2D">
      <summary>
        <para>Совместная подвеска используется для определения того, как работает подвеска на WheelJoint2D.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.JointSuspension2D.angle">
      <summary>
        <para>Мировой угол (в градусах), по которому будет двигаться подвеска.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.JointSuspension2D.dampingRatio">
      <summary>
        <para>Величина, на которую сила пружины подвески уменьшается пропорционально скорости движения.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.JointSuspension2D.frequency">
      <summary>
        <para>Частота колебаний пружины подвески.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.JointTranslationLimits2D">
      <summary>
        <para>Пределы движения объекта Rigidbody2D вдоль SliderJoint2D.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.JointTranslationLimits2D.max">
      <summary>
        <para>Максимальное расстояние, на которое объект Rigidbody2D может перемещаться от привязки ползункового соединения.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.JointTranslationLimits2D.min">
      <summary>
        <para>Минимальное расстояние, на которое объект Rigidbody2D может перемещаться от привязки ползункового соединения.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Physics2D">
      <summary>
        <para>Глобальные настройки и помощники для 2D-физики.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.alwaysShowColliders">
      <summary>
        <para>Включите, чтобы всегда отображать гизмо коллайдера, даже если они не выбраны.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.angularSleepTolerance">
      <summary>
        <para>Rigidbody не может заснуть, если его угловая скорость превышает этот порог допуска.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.autoSimulation">
      <summary>
        <para>Установите, должна ли физика моделироваться автоматически или нет.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.autoSyncTransforms">
      <summary>
        <para>Укажите, следует ли автоматически синхронизировать изменения компонента Transform с физическим движком.
</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.baumgarteScale">
      <summary>
        <para>Масштабный коэффициент, определяющий скорость разрешения перекрытий.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.baumgarteTOIScale">
      <summary>
        <para>Масштабный коэффициент, определяющий, насколько быстро разрешаются перекрытия TOI.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.callbacksOnDisable">
      <summary>
        <para>Используйте это, чтобы контролировать, должны ли вызываться соответствующие обратные вызовы OnCollisionExit2D или OnTriggerExit2D, когда Collider2D отключен.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.changeStopsCallbacks">
      <summary>
        <para>Установите, будет ли немедленно останавливаться отчет о обратных вызовах столкновений, если какой-либо из объектов, вовлеченных в столкновение, удален или перемещен. </para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.colliderAABBColor">
      <summary>
        <para>Установите цвет, используемый гизмо для отображения всех ограничивающих рамок коллайдера, выровненных по осям (AABB).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.colliderAsleepColor">
      <summary>
        <para>Цвет, используемый Gizmos для отображения всех спящих коллайдеров (коллайдер спит, когда тело спит).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.colliderAwakeColor">
      <summary>
        <para>Цвет, используемый Гизмо для отображения всех бодрствующих коллайдеров (коллайдер активен, когда тело бодрствует).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.colliderContactColor">
      <summary>
        <para>Цвет, используемый Gizmos для отображения всех контактов Collider.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.contactArrowScale">
      <summary>
        <para>Масштаб контактной стрелки, используемой Collider Gizmos.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.defaultContactOffset">
      <summary>
        <para>Смещение контакта по умолчанию вновь созданных коллайдеров.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.defaultPhysicsScene">
      <summary>
        <para>PhysicsScene2D создается автоматически при запуске Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.deleteStopsCallbacks">
      <summary>
        <para>Установите, продолжать или останавливать обработку обратных вызовов коллизии, если какой-либо из объектов, вовлеченных в коллизию, удален.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.gravity">
      <summary>
        <para>Ускорение под действием силы тяжести.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.jobOptions">
      <summary>
        <para>Набор параметров, управляющих работой физики при использовании системы заданий для многопоточного моделирования физики.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.linearSleepTolerance">
      <summary>
        <para>Твердое тело не может заснуть, если его линейная скорость превышает этот допуск.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.maxAngularCorrection">
      <summary>
        <para>Максимальная коррекция углового положения, используемая при решении ограничений. Это помогает предотвратить перерегулирование.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.maxLinearCorrection">
      <summary>
        <para>Максимальная линейная коррекция положения, используемая при решении ограничений. Это помогает предотвратить перерегулирование.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.maxRotationSpeed">
      <summary>
        <para>Максимальная угловая скорость твердого тела на обновление физики. Увеличение этого значения может привести к проблемам с числами.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.maxTranslationSpeed">
      <summary>
        <para>Максимальная линейная скорость твердого тела на обновление физики. Увеличение этого значения может привести к проблемам с числами.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.minPenetrationForPenalty">
      <summary>
        <para>Это свойство устарело. Вместо этого следует использовать defaultContactOffset.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.positionIterations">
      <summary>
        <para>Количество итераций физического решателя при рассмотрении положения объектов.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.queriesHitTriggers">
      <summary>
        <para>Обнаруживают ли рейкасты коллайдеры, настроенные как триггеры?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.queriesStartInColliders">
      <summary>
        <para>Настройте raycasts или linecasts, которые начинаются внутри коллайдеров, чтобы обнаруживать или не обнаруживать эти коллайдеры.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.raycastsHitTriggers">
      <summary>
        <para>Настройте raycasts на обнаружение или не обнаружение триггеров.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.raycastsStartInColliders">
      <summary>
        <para>Обнаруживают ли приведения лучей/линий, которые начинаются внутри коллайдера(ов), эти коллайдеры?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.reuseCollisionCallbacks">
      <summary>
        <para>Определяет, должен ли сборщик мусора повторно использовать только один экземпляр типа Collision2D для всех обратных вызовов коллизий.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.showColliderAABB">
      <summary>
        <para>Должны ли инструменты коллайдера показывать AABB для каждого коллайдера?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.showColliderContacts">
      <summary>
        <para>Должны ли Collider Gizmos показывать текущие контакты для каждого Collider?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.showColliderSleep">
      <summary>
        <para>Должны ли коллайдерные штуковины показывать состояние сна для каждого коллайдера?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.simulationMode">
      <summary>
        <para>Определяет, когда Unity выполняет симуляцию 2D-физики.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.timeToSleep">
      <summary>
        <para>Время в секундах, в течение которого твердое тело должно оставаться неподвижным, прежде чем оно перейдет в спящий режим.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.velocityIterations">
      <summary>
        <para>Количество итераций физического решателя при учете скоростей объектов.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Physics2D.velocityThreshold">
      <summary>
        <para>Любые столкновения с относительной линейной скоростью ниже этого порога будут рассматриваться как неупругие.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Physics2D.AllLayers">
      <summary>
        <para>Константа маски слоя, включающая все слои.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Physics2D.BoxCast(UnityEngine.Vector2,UnityEngine.Vector2,System.Single,UnityEngine.Vector2,System.Single,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Создает коробку против коллайдеров в сцене, возвращая первый коллайдер, который с ним соприкоснется.</para>
      </summary>
      <param name="origin">Точка в 2D-пространстве, где начинается прямоугольник.</param>
      <param name="size">Размер коробки.</param>
      <param name="angle">Угол поля (в градусах).</param>
      <param name="direction">Вектор, представляющий направление прямоугольника.</param>
      <param name="distance">Максимальное расстояние, на которое можно бросить ящик.</param>
      <param name="layerMask">Фильтр для обнаружения коллайдеров только на определенных слоях.</param>
      <param name="minDepth">Включать только объекты с координатой Z (глубиной) больше или равной этому значению.</param>
      <param name="maxDepth">Включать только объекты с координатой Z (глубиной) меньше или равной этому значению.</param>
      <returns>
        <para>Возвращены результаты приведения.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.BoxCast(UnityEngine.Vector2,UnityEngine.Vector2,System.Single,UnityEngine.Vector2,UnityEngine.ContactFilter2D,UnityEngine.RaycastHit2D[],System.Single)">
      <summary>
        <para>Создает коробку напротив коллайдеров в сцене и возвращает все коллайдеры, которые с ней соприкасаются.</para>
      </summary>
      <param name="origin">Точка в 2D-пространстве, где начинается прямоугольник.</param>
      <param name="size">Размер коробки.</param>
      <param name="angle">Угол поля (в градусах).</param>
      <param name="direction">Вектор, представляющий направление прямоугольника.</param>
      <param name="distance">Максимальное расстояние, на которое можно бросить ящик.</param>
      <param name="results">Массив для получения результатов. Размер массива определяет максимальное количество возвращаемых результатов.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в массив результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.BoxCast(UnityEngine.Vector2,UnityEngine.Vector2,System.Single,UnityEngine.Vector2,UnityEngine.ContactFilter2D,System.Collections.Generic.List`1&lt;UnityEngine.RaycastHit2D&gt;,System.Single)">
      <summary>
        <para>Создает коробку напротив коллайдеров в сцене и возвращает все коллайдеры, которые с ней соприкасаются.</para>
      </summary>
      <param name="origin">Точка в 2D-пространстве, где начинается прямоугольник.</param>
      <param name="size">Размер коробки.</param>
      <param name="angle">Угол поля (в градусах).</param>
      <param name="direction">Вектор, представляющий направление прямоугольника.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <param name="results">Список для получения результатов.</param>
      <param name="distance">Максимальное расстояние, на которое можно бросить ящик.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в список результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.BoxCastAll(UnityEngine.Vector2,UnityEngine.Vector2,System.Single,UnityEngine.Vector2,System.Single,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Создает коробку против коллайдеров в сцене, возвращая все коллайдеры, которые с ней соприкасаются.</para>
      </summary>
      <param name="origin">Точка в 2D-пространстве, где начинается прямоугольник.</param>
      <param name="size">Размер коробки.</param>
      <param name="angle">Угол поля (в градусах).</param>
      <param name="direction">Вектор, представляющий направление прямоугольника.</param>
      <param name="distance">Максимальное расстояние, на которое можно бросить ящик.</param>
      <param name="layerMask">Фильтр для обнаружения коллайдеров только на определенных слоях.</param>
      <param name="minDepth">Включать только объекты с координатой Z (глубиной) больше или равной этому значению.</param>
      <param name="maxDepth">Включать только объекты с координатой Z (глубиной) меньше или равной этому значению.</param>
      <returns>
        <para>Возвращены результаты приведения.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.BoxCastNonAlloc(UnityEngine.Vector2,UnityEngine.Vector2,System.Single,UnityEngine.Vector2,UnityEngine.RaycastHit2D[],System.Single,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Добавляет блок в сцену, возвращая коллайдеры, которые соприкасаются с ним, в предоставленный массив результатов. Примечание. Этот метод будет объявлен устаревшим в будущей сборке, вместо него рекомендуется использовать BoxCast.</para>
      </summary>
      <param name="origin">Точка в 2D-пространстве, где начинается прямоугольник.</param>
      <param name="size">Размер коробки.</param>
      <param name="angle">Угол поля (в градусах).</param>
      <param name="direction">Вектор, представляющий направление прямоугольника.</param>
      <param name="results">Массив для получения результатов.</param>
      <param name="distance">Максимальное расстояние, на которое можно бросить ящик.</param>
      <param name="layerMask">Фильтр для обнаружения коллайдеров только на определенных слоях.</param>
      <param name="minDepth">Включать только объекты с координатой Z (глубиной) больше или равной этому значению.</param>
      <param name="maxDepth">Включать только объекты с координатой Z (глубиной) меньше или равной этому значению.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в массив результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.CapsuleCast(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.CapsuleDirection2D,System.Single,UnityEngine.Vector2,System.Single,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Бросает капсулу на коллайдеры в сцене, возвращая первый коллайдер, чтобы с ним соприкоснуться.</para>
      </summary>
      <param name="origin">Точка в двухмерном пространстве, откуда начинается капсула.</param>
      <param name="size">Размер капсулы.</param>
      <param name="capsuleDirection">Направление капсулы.</param>
      <param name="angle">Угол наклона капсулы (в градусах).</param>
      <param name="direction">Вектор, представляющий направление броска капсулы.</param>
      <param name="distance">Максимальное расстояние, на которое можно забросить капсулу.</param>
      <param name="layerMask">Фильтр для обнаружения коллайдеров только на определенных слоях.</param>
      <param name="minDepth">Включать только объекты с координатой Z (глубиной) больше этого значения.</param>
      <param name="maxDepth">Включать только объекты с координатой Z (глубиной) меньше этого значения.</param>
      <returns>
        <para>Возвращены результаты приведения.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.CapsuleCast(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.CapsuleDirection2D,System.Single,UnityEngine.Vector2,UnityEngine.ContactFilter2D,UnityEngine.RaycastHit2D[],System.Single)">
      <summary>
        <para>Отбрасывает капсулу на коллайдеры в сцене и возвращает все коллайдеры, соприкасающиеся с ней.</para>
      </summary>
      <param name="origin">Точка в двухмерном пространстве, откуда начинается капсула.</param>
      <param name="size">Размер капсулы.</param>
      <param name="capsuleDirection">Направление капсулы.</param>
      <param name="angle">Угол наклона капсулы (в градусах).</param>
      <param name="direction">Вектор, представляющий направление броска капсулы.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <param name="results">Массив для получения результатов. Размер массива определяет максимальное количество возвращаемых результатов.</param>
      <param name="distance">Максимальное расстояние, на которое можно забросить капсулу.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в массив результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.CapsuleCast(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.CapsuleDirection2D,System.Single,UnityEngine.Vector2,UnityEngine.ContactFilter2D,System.Collections.Generic.List`1&lt;UnityEngine.RaycastHit2D&gt;,System.Single)">
      <summary>
        <para>Отбрасывает капсулу на коллайдеры в сцене и возвращает все коллайдеры, соприкасающиеся с ней.</para>
      </summary>
      <param name="origin">Точка в двухмерном пространстве, откуда начинается капсула.</param>
      <param name="size">Размер капсулы.</param>
      <param name="capsuleDirection">Направление капсулы.</param>
      <param name="angle">Угол наклона капсулы (в градусах).</param>
      <param name="direction">Вектор, представляющий направление броска капсулы.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <param name="results">Список для получения результатов.</param>
      <param name="distance">Максимальное расстояние, на которое можно забросить капсулу.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в список результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.CapsuleCastAll(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.CapsuleDirection2D,System.Single,UnityEngine.Vector2,System.Single,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Бросает капсулу на коллайдеры в сцене, возвращая все коллайдеры, которые с ней соприкасаются.</para>
      </summary>
      <param name="origin">Точка в двухмерном пространстве, откуда начинается капсула.</param>
      <param name="size">Размер капсулы.</param>
      <param name="capsuleDirection">Направление капсулы.</param>
      <param name="angle">Угол наклона капсулы (в градусах).</param>
      <param name="direction">Вектор, представляющий направление броска капсулы.</param>
      <param name="distance">Максимальное расстояние, на которое можно забросить капсулу.</param>
      <param name="layerMask">Фильтр для обнаружения коллайдеров только на определенных слоях.</param>
      <param name="minDepth">Включать только объекты с координатой Z (глубиной) больше этого значения.</param>
      <param name="maxDepth">Включать только объекты с координатой Z (глубиной) меньше этого значения.</param>
      <returns>
        <para>Возвращены результаты приведения.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.CapsuleCastNonAlloc(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.CapsuleDirection2D,System.Single,UnityEngine.Vector2,UnityEngine.RaycastHit2D[],System.Single,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Отбрасывает капсулу в сцену, возвращая коллайдеры, которые с ней соприкасаются, в предоставленный массив результатов. Примечание. Этот метод будет объявлен устаревшим в будущей сборке, вместо него рекомендуется использовать CapsuleCast.</para>
      </summary>
      <param name="origin">Точка в двухмерном пространстве, откуда начинается капсула.</param>
      <param name="size">Размер капсулы.</param>
      <param name="capsuleDirection">Направление капсулы.</param>
      <param name="angle">Угол наклона капсулы (в градусах).</param>
      <param name="direction">Вектор, представляющий направление броска капсулы.</param>
      <param name="results">Массив для получения результатов.</param>
      <param name="distance">Максимальное расстояние, на которое можно забросить капсулу.</param>
      <param name="layerMask">Фильтр для обнаружения коллайдеров только на определенных слоях.</param>
      <param name="minDepth">Включать только объекты с координатой Z (глубиной) больше этого значения.</param>
      <param name="maxDepth">Включать только объекты с координатой Z (глубиной) меньше этого значения.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в массив результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.CircleCast(UnityEngine.Vector2,System.Single,UnityEngine.Vector2,System.Single,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Создает круг против коллайдеров в сцене, возвращая первый коллайдер, который с ним соприкоснется.</para>
      </summary>
      <param name="origin">Точка в 2D-пространстве, где начинается окружность.</param>
      <param name="radius">Радиус круга.</param>
      <param name="direction">Вектор, представляющий направление окружности.</param>
      <param name="distance">Максимальное расстояние, на которое можно бросить круг.</param>
      <param name="layerMask">Фильтр для обнаружения коллайдеров только на определенных слоях.</param>
      <param name="minDepth">Включать только объекты с координатой Z (глубиной) больше или равной этому значению.</param>
      <param name="maxDepth">Включать только объекты с координатой Z (глубиной) меньше или равной этому значению.</param>
      <returns>
        <para>Возвращены результаты приведения.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.CircleCast(UnityEngine.Vector2,System.Single,UnityEngine.Vector2,UnityEngine.ContactFilter2D,UnityEngine.RaycastHit2D[],System.Single)">
      <summary>
        <para>Создает круг против коллайдеров в сцене, возвращая все коллайдеры, которые с ним соприкасаются.</para>
      </summary>
      <param name="origin">Точка в 2D-пространстве, где начинается окружность.</param>
      <param name="radius">Радиус круга.</param>
      <param name="direction">Вектор, представляющий направление окружности.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <param name="results">Массив для получения результатов. Размер массива определяет максимальное количество возвращаемых результатов.</param>
      <param name="distance">Максимальное расстояние, на которое можно бросить круг.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в массив результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.CircleCast(UnityEngine.Vector2,System.Single,UnityEngine.Vector2,UnityEngine.ContactFilter2D,System.Collections.Generic.List`1&lt;UnityEngine.RaycastHit2D&gt;,System.Single)">
      <summary>
        <para>Создает круг против коллайдеров в сцене, возвращая все коллайдеры, которые с ним соприкасаются.</para>
      </summary>
      <param name="origin">Точка в 2D-пространстве, где начинается окружность.</param>
      <param name="radius">Радиус круга.</param>
      <param name="direction">Вектор, представляющий направление окружности.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <param name="results">Список для получения результатов.</param>
      <param name="distance">Максимальное расстояние, на которое можно бросить круг.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в список результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.CircleCastAll(UnityEngine.Vector2,System.Single,UnityEngine.Vector2,System.Single,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Создает круг против коллайдеров в сцене, возвращая все коллайдеры, которые с ним соприкасаются.</para>
      </summary>
      <param name="origin">Точка в 2D-пространстве, где начинается окружность.</param>
      <param name="radius">Радиус круга.</param>
      <param name="direction">Вектор, представляющий направление окружности.</param>
      <param name="distance">Максимальное расстояние, на которое можно бросить круг.</param>
      <param name="layerMask">Фильтр для обнаружения коллайдеров только на определенных слоях.</param>
      <param name="minDepth">Включать только объекты с координатой Z (глубиной) больше или равной этому значению.</param>
      <param name="maxDepth">Включать только объекты с координатой Z (глубиной) меньше или равной этому значению.</param>
      <returns>
        <para>Возвращены результаты приведения.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.CircleCastNonAlloc(UnityEngine.Vector2,System.Single,UnityEngine.Vector2,UnityEngine.RaycastHit2D[],System.Single,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Отбрасывает круг в сцену, возвращая коллайдеры, которые соприкасаются с ним, в предоставленный массив результатов. Примечание. Этот метод будет объявлен устаревшим в будущей сборке, вместо него рекомендуется использовать CircleCast.</para>
      </summary>
      <param name="origin">Точка в 2D-пространстве, где начинается окружность.</param>
      <param name="radius">Радиус круга.</param>
      <param name="direction">Вектор, представляющий направление окружности.</param>
      <param name="results">Массив для получения результатов.</param>
      <param name="distance">Максимальное расстояние, на которое можно бросить круг.</param>
      <param name="layerMask">Фильтр для обнаружения коллайдеров только на определенных слоях.</param>
      <param name="minDepth">Включать только объекты с координатой Z (глубиной) больше или равной этому значению.</param>
      <param name="maxDepth">Включать только объекты с координатой Z (глубиной) меньше или равной этому значению.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в массив результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.ClosestPoint(UnityEngine.Vector2,UnityEngine.Collider2D)">
      <summary>
        <para>Возвращает точку на периметре коллайдера, ближайшую к указанной позиции.</para>
      </summary>
      <param name="position">Позиция, из которой следует найти ближайшую точку на указанном коллайдере.</param>
      <param name="Collider">Коллайдер, на котором нужно найти ближайшую указанную позицию.</param>
      <param name="collider">
      </param>
      <returns>
        <para>Точка на периметре коллайдера, ближайшая к указанной позиции.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.ClosestPoint(UnityEngine.Vector2,UnityEngine.Rigidbody2D)">
      <summary>
        <para>Возвращает точку на периметре всех включенных коллайдеров, прикрепленных к твердому телу, ближайшую к указанной позиции.</para>
      </summary>
      <param name="position">Положение, из которого следует найти ближайшую точку на указанном твердом теле.</param>
      <param name="rigidbody">Rigidbody, на котором нужно найти ближайшую указанную позицию.</param>
      <returns>
        <para>Точка на периметре коллайдера, прикрепленного к твердому телу, ближайшая к указанной позиции.</para>
      </returns>
    </member>
    <member name="F:UnityEngine.Physics2D.DefaultRaycastLayers">
      <summary>
        <para>Константа маски слоя, которая по умолчанию включает все слои, участвующие в raycasts.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Physics2D.Distance(UnityEngine.Collider2D,UnityEngine.Collider2D)">
      <summary>
        <para>Вычисляет минимальное расстояние между двумя коллайдерами.</para>
      </summary>
      <param name="colliderA">Коллайдер, используемый для расчета минимального расстояния до коллайдера B.</param>
      <param name="colliderB">Коллайдер, используемый для расчета минимального расстояния до коллайдераA.</param>
      <returns>
        <para>Минимальное расстояние между коллайдером A и коллайдером B.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.GetContacts(UnityEngine.Collider2D,UnityEngine.Collider2D[])">
      <summary>
        <para>Извлекает все коллайдеры, находящиеся в контакте с коллайдером.</para>
      </summary>
      <param name="Collider">Коллайдер для получения контактов.</param>
      <param name="Colliders">Массив Collider2D, используемый для получения результатов.</param>
      <param name="collider">
      </param>
      <param name="colliders">
      </param>
      <returns>
        <para>Возвращает количество коллайдеров, размещенных в массиве коллайдеров.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.GetContacts(UnityEngine.Collider2D,UnityEngine.ContactPoint2D[])">
      <summary>
        <para>Извлекает все точки контакта с коллайдером.</para>
      </summary>
      <param name="Collider">Коллайдер для получения контактов.</param>
      <param name="contacts">Массив ContactPoint2D, используемый для получения результатов.</param>
      <param name="collider">
      </param>
      <returns>
        <para>Возвращает количество контактов, помещенных в массив контактов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.GetContacts(UnityEngine.Collider2D,UnityEngine.ContactFilter2D,UnityEngine.ContactPoint2D[])">
      <summary>
        <para>Извлекает все контактные точки, находящиеся в контакте с коллайдером, с результатами, отфильтрованными с помощью ContactFilter2D.</para>
      </summary>
      <param name="Collider">Коллайдер для получения контактов.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <param name="contacts">Массив ContactPoint2D, используемый для получения результатов.</param>
      <param name="collider">
      </param>
      <returns>
        <para>Возвращает количество контактов, помещенных в массив контактов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.GetContacts(UnityEngine.Collider2D,UnityEngine.ContactFilter2D,UnityEngine.Collider2D[])">
      <summary>
        <para>Извлекает все коллайдеры, находящиеся в контакте с коллайдером, с результатами, отфильтрованными с помощью ContactFilter2D.</para>
      </summary>
      <param name="Collider">Коллайдер для получения контактов.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <param name="Colliders">Массив Collider2D, используемый для получения результатов.</param>
      <param name="collider">
      </param>
      <param name="colliders">
      </param>
      <returns>
        <para>Возвращает количество коллайдеров, размещенных в массиве коллайдеров.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.GetContacts(UnityEngine.Collider2D,UnityEngine.Collider2D,UnityEngine.ContactFilter2D,UnityEngine.ContactPoint2D[])">
      <summary>
        <para>Извлекает все точки контакта для контактов между коллайдером1 и коллайдером2, результаты фильтруются фильтром ContactFilter2D.</para>
      </summary>
      <param name="collider1">Коллайдер, чтобы проверить, есть ли у него контакты с collider2.</param>
      <param name="collider2">Коллайдер, чтобы проверить, есть ли у него контакты с collider1.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <param name="contacts">Массив ContactPoint2D, используемый для получения результатов.</param>
      <returns>
        <para>Возвращает количество контактов, помещенных в массив контактов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.GetContacts(UnityEngine.Rigidbody2D,UnityEngine.ContactPoint2D[])">
      <summary>
        <para>Извлекает все точки контакта с любым из коллайдеров, прикрепленных к этому твердому телу.</para>
      </summary>
      <param name="rigidbody">Твердое тело, для которого извлекаются контакты. Будут проверены все коллайдеры, прикрепленные к этому твердому телу.</param>
      <param name="contacts">Массив ContactPoint2D, используемый для получения результатов.</param>
      <returns>
        <para>Возвращает количество контактов, помещенных в массив контактов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.GetContacts(UnityEngine.Rigidbody2D,UnityEngine.Collider2D[])">
      <summary>
        <para>Извлекает все коллайдеры, находящиеся в контакте с любым из коллайдеров, прикрепленных к этому твердому телу.</para>
      </summary>
      <param name="rigidbody">Твердое тело, для которого извлекаются контакты. Будут проверены все коллайдеры, прикрепленные к этому твердому телу.</param>
      <param name="Colliders">Массив Collider2D, используемый для получения результатов.</param>
      <param name="colliders">
      </param>
      <returns>
        <para>Возвращает количество коллайдеров, размещенных в массиве коллайдеров.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.GetContacts(UnityEngine.Rigidbody2D,UnityEngine.ContactFilter2D,UnityEngine.ContactPoint2D[])">
      <summary>
        <para>Извлекает все точки контакта, находящиеся в контакте с любым из коллайдеров, прикрепленных к этому твердому телу, с фильтрацией результатов с помощью ContactFilter2D.</para>
      </summary>
      <param name="rigidbody">Твердое тело, для которого извлекаются контакты. Будут проверены все коллайдеры, прикрепленные к этому твердому телу.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <param name="contacts">Массив ContactPoint2D, используемый для получения результатов.</param>
      <returns>
        <para>Возвращает количество контактов, помещенных в массив контактов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.GetContacts(UnityEngine.Rigidbody2D,UnityEngine.ContactFilter2D,UnityEngine.Collider2D[])">
      <summary>
        <para>Извлекает все коллайдеры, находящиеся в контакте с любым из коллайдеров, прикрепленных к этому твердому телу, с фильтрацией результатов с помощью ContactFilter2D.</para>
      </summary>
      <param name="rigidbody">Твердое тело, для которого извлекаются контакты. Будут проверены все коллайдеры, прикрепленные к этому твердому телу.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <param name="Colliders">Массив Collider2D, используемый для получения результатов.</param>
      <param name="colliders">
      </param>
      <returns>
        <para>Возвращает количество коллайдеров, размещенных в массиве коллайдеров.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.GetContacts(UnityEngine.Collider2D,System.Collections.Generic.List`1&lt;UnityEngine.Collider2D&gt;)">
      <summary>
        <para>Извлекает все коллайдеры, находящиеся в контакте с коллайдером.</para>
      </summary>
      <param name="Collider">Коллайдер для получения контактов.</param>
      <param name="Colliders">Список Collider2D, использованных для получения результатов.</param>
      <param name="collider">
      </param>
      <param name="colliders">
      </param>
      <returns>
        <para>Возвращает количество коллайдеров, помещенных в список коллайдеров.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.GetContacts(UnityEngine.Collider2D,UnityEngine.ContactFilter2D,System.Collections.Generic.List`1&lt;UnityEngine.Collider2D&gt;)">
      <summary>
        <para>Извлекает все коллайдеры, находящиеся в контакте с коллайдером, с фильтрацией результатов с помощью contactFilter2D.</para>
      </summary>
      <param name="Collider">Коллайдер для получения контактов.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <param name="Colliders">Список Collider2D, использованных для получения результатов.</param>
      <param name="collider">
      </param>
      <param name="colliders">
      </param>
      <returns>
        <para>Возвращает количество коллайдеров, помещенных в список коллайдеров.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.GetContacts(UnityEngine.Collider2D,System.Collections.Generic.List`1&lt;UnityEngine.ContactPoint2D&gt;)">
      <summary>
        <para>Извлекает все точки контакта с коллайдером.</para>
      </summary>
      <param name="Collider">Коллайдер для получения контактов.</param>
      <param name="contacts">Список ContactPoint2D, используемых для получения результатов.</param>
      <param name="collider">
      </param>
      <returns>
        <para>Возвращает количество контактов, помещенных в список контактов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.GetContacts(UnityEngine.Collider2D,UnityEngine.ContactFilter2D,System.Collections.Generic.List`1&lt;UnityEngine.ContactPoint2D&gt;)">
      <summary>
        <para>Извлекает все контактные точки, находящиеся в контакте с коллайдером, с результатами, отфильтрованными с помощью contactFilter2D.</para>
      </summary>
      <param name="Collider">Коллайдер для получения контактов.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <param name="contacts">Список ContactPoint2D, используемых для получения результатов.</param>
      <param name="collider">
      </param>
      <returns>
        <para>Возвращает количество контактов, помещенных в список контактов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.GetContacts(UnityEngine.Collider2D,UnityEngine.Collider2D,UnityEngine.ContactFilter2D,System.Collections.Generic.List`1&lt;UnityEngine.ContactPoint2D&gt;)">
      <summary>
        <para>Извлекает все точки контакта для контактов между коллайдером1 и коллайдером2, результаты отфильтровываются с помощью contactFilter2D.</para>
      </summary>
      <param name="collider1">Коллайдер, чтобы проверить, есть ли у него контакты с collider2.</param>
      <param name="collider2">Коллайдер, чтобы проверить, есть ли у него контакты с collider1.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <param name="contacts">Список ContactPoint2D, используемых для получения результатов.</param>
      <returns>
        <para>Возвращает количество контактов, помещенных в список контактов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.GetContacts(UnityEngine.Rigidbody2D,System.Collections.Generic.List`1&lt;UnityEngine.Collider2D&gt;)">
      <summary>
        <para>Извлекает все коллайдеры, соприкасающиеся с любым из коллайдеров, прикрепленных к этому Rigidbody.</para>
      </summary>
      <param name="rigidbody">Rigidbody, для которого нужно получить контакты. Будут проверены все коллайдеры, прикрепленные к этому Rigidbody.</param>
      <param name="Colliders">Список Collider2D, использованных для получения результатов.</param>
      <param name="colliders">
      </param>
      <returns>
        <para>Возвращает количество коллайдеров, помещенных в список коллайдеров.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.GetContacts(UnityEngine.Rigidbody2D,UnityEngine.ContactFilter2D,System.Collections.Generic.List`1&lt;UnityEngine.Collider2D&gt;)">
      <summary>
        <para>Извлекает все коллайдеры, соприкасающиеся с любым из коллайдеров, прикрепленных к этому Rigidbody, с фильтрацией результатов с помощью contactFilter2D.</para>
      </summary>
      <param name="rigidbody">Rigidbody, для которого нужно получить контакты. Будут проверены все коллайдеры, прикрепленные к этому Rigidbody.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <param name="Colliders">Список Collider2D, использованных для получения результатов.</param>
      <param name="colliders">
      </param>
      <returns>
        <para>Возвращает количество коллайдеров, помещенных в список коллайдеров.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.GetContacts(UnityEngine.Rigidbody2D,System.Collections.Generic.List`1&lt;UnityEngine.ContactPoint2D&gt;)">
      <summary>
        <para>Извлекает все точки контакта с любым из коллайдеров, прикрепленных к этому твердому телу.</para>
      </summary>
      <param name="rigidbody">Rigidbody, для которого нужно получить контакты. Будут проверены все коллайдеры, прикрепленные к этому Rigidbody.</param>
      <param name="contacts">Список ContactPoint2D, используемых для получения результатов.</param>
      <returns>
        <para>Возвращает количество контактов, помещенных в список контактов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.GetContacts(UnityEngine.Rigidbody2D,UnityEngine.ContactFilter2D,System.Collections.Generic.List`1&lt;UnityEngine.ContactPoint2D&gt;)">
      <summary>
        <para>Извлекает все коллайдеры, соприкасающиеся с любым из коллайдеров, прикрепленных к этому Rigidbody, с фильтрацией результатов с помощью contactFilter2D.</para>
      </summary>
      <param name="rigidbody">Rigidbody, для которого нужно получить контакты. Будут проверены все коллайдеры, прикрепленные к этому Rigidbody.</param>
      <param name="contactFilter">Возвращает количество контактов, помещенных в список контактов.</param>
      <param name="contacts">Список ContactPoint2D, используемых для получения результатов.</param>
      <returns>
        <para>Возвращает количество контактов, помещенных в список контактов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.GetIgnoreCollision(UnityEngine.Collider2D,UnityEngine.Collider2D)">
      <summary>
        <para>Проверяет, будет ли система обнаружения столкновений игнорировать все триггеры столкновений между collider1 и collider2/ или нет.</para>
      </summary>
      <param name="collider1">Первый коллайдер для сравнения с collider2.</param>
      <param name="collider2">Второй коллайдер для сравнения с collider1.</param>
      <returns>
        <para>Будет ли система обнаружения столкновений игнорировать все триггеры столкновений между collider1 и collider2/ или нет.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.GetIgnoreLayerCollision(System.Int32,System.Int32)">
      <summary>
        <para>Проверяет, игнорируются ли коллизии между указанными слоями.</para>
      </summary>
      <param name="layer1">ID первого слоя.</param>
      <param name="layer2">ID второго слоя.</param>
      <returns>
        <para>Следует ли игнорировать коллизии между указанными слоями.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.GetLayerCollisionMask(System.Int32)">
      <summary>
        <para>Получите маску слоя столкновения, которая указывает, с какими слоями указанный слой может сталкиваться.</para>
      </summary>
      <param name="layer">Слой, для которого требуется получить маску слоя столкновения.</param>
      <returns>
        <para>Маска, в которой каждый бит указывает слой и может ли он конфликтовать со слоем или нет.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.GetRayIntersection(UnityEngine.Ray,System.Single,System.Int32)">
      <summary>
        <para>Направьте 3D-луч на коллайдеры в сцене, возвращая первый коллайдер вдоль луча.</para>
      </summary>
      <param name="ray">Трехмерный луч, определяющий исходную точку и направление для проверки.</param>
      <param name="distance">Максимальное расстояние, на которое можно передать луч.</param>
      <param name="layerMask">Фильтр для обнаружения коллайдеров только на определенных слоях.</param>
      <returns>
        <para>Возвращены результаты приведения.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.GetRayIntersectionAll(UnityEngine.Ray,System.Single,System.Int32)">
      <summary>
        <para>Направьте 3D-луч на коллайдеры в сцене, возвращая все коллайдеры вдоль луча.</para>
      </summary>
      <param name="ray">Трехмерный луч, определяющий исходную точку и направление для проверки.</param>
      <param name="distance">Максимальное расстояние, на которое можно передать луч.</param>
      <param name="layerMask">Фильтр для обнаружения коллайдеров только на определенных слоях.</param>
      <returns>
        <para>Возвращены результаты приведения.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.GetRayIntersectionNonAlloc(UnityEngine.Ray,UnityEngine.RaycastHit2D[],System.Single,System.Int32)">
      <summary>
        <para>Направьте 3D-луч на коллайдеры в сцене, возвращая коллайдеры вдоль луча. Примечание. Этот метод будет объявлен устаревшим в будущих сборках, вместо него рекомендуется использовать GetRayIntersection.</para>
      </summary>
      <param name="ray">Трехмерный луч, определяющий исходную точку и направление для проверки.</param>
      <param name="distance">Максимальное расстояние, на которое можно передать луч.</param>
      <param name="layerMask">Фильтр для обнаружения коллайдеров только на определенных слоях.</param>
      <param name="results">Массив для получения результатов.</param>
      <returns>
        <para>Количество возвращенных результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.IgnoreCollision(UnityEngine.Collider2D,UnityEngine.Collider2D,System.Boolean)">
      <summary>
        <para>Заставляет систему обнаружения столкновений игнорировать все триггеры столкновений между collider1 и collider2/.</para>
      </summary>
      <param name="collider1">Первый коллайдер для сравнения с collider2.</param>
      <param name="collider2">Второй коллайдер для сравнения с collider1.</param>
      <param name="ignore">Должны ли игнорироваться триггеры столкновений между collider1 и collider2/.</param>
    </member>
    <member name="M:UnityEngine.Physics2D.IgnoreLayerCollision(System.Int32,System.Int32,System.Boolean)">
      <summary>
        <para>Выберите, следует ли обнаруживать или игнорировать конфликты между указанной парой слоев.</para>
      </summary>
      <param name="layer1">ID первого слоя.</param>
      <param name="layer2">ID второго слоя.</param>
      <param name="ignore">Следует ли игнорировать коллизии между этими слоями?</param>
    </member>
    <member name="F:UnityEngine.Physics2D.IgnoreRaycastLayer">
      <summary>
        <para>Константа маски слоя для слоя по умолчанию, который игнорирует raycasts.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Physics2D.IsTouching(UnityEngine.Collider2D,UnityEngine.Collider2D)">
      <summary>
        <para>Проверяет, находятся ли пройденные коллайдеры в контакте или нет.</para>
      </summary>
      <param name="collider1">Коллайдер, чтобы проверить, касается ли он collider2.</param>
      <param name="collider2">Коллайдер, чтобы проверить, касается ли он collider1.</param>
      <returns>
        <para>Соприкасается ли коллайдер1 с коллайдером2 или нет.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.IsTouching(UnityEngine.Collider2D,UnityEngine.ContactFilter2D)">
      <summary>
        <para>Проверяет, находятся ли пройденные коллайдеры в контакте или нет.</para>
      </summary>
      <param name="Collider">Коллайдер для проверки, не касается ли он какого-либо другого коллайдера, отфильтрованного с помощью contactFilter.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <param name="collider">
      </param>
      <returns>
        <para>Касается ли коллайдер любого другого коллайдера, отфильтрованного с помощью contactFilter, или нет.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.IsTouching(UnityEngine.Collider2D,UnityEngine.Collider2D,UnityEngine.ContactFilter2D)">
      <summary>
        <para>Проверяет, находятся ли пройденные коллайдеры в контакте или нет.</para>
      </summary>
      <param name="collider1">Коллайдер, чтобы проверить, касается ли он collider2.</param>
      <param name="collider2">Коллайдер, чтобы проверить, касается ли он collider1.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <returns>
        <para>Соприкасается ли коллайдер1 с коллайдером2 или нет.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.IsTouchingLayers(UnityEngine.Collider2D,System.Int32)">
      <summary>
        <para>Проверяет, касается ли коллайдер каких-либо коллайдеров на указанной маске слоя или нет.</para>
      </summary>
      <param name="Collider">Коллайдер, чтобы проверить, касается ли он коллайдеров на маске слоя.</param>
      <param name="layerMask">Любые коллайдеры на любом из этих слоев считаются соприкасающимися.</param>
      <param name="collider">
      </param>
      <returns>
        <para>Соприкасается ли коллайдер с какими-либо коллайдерами на указанной маске слоя или нет.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.Linecast(UnityEngine.Vector2,UnityEngine.Vector2,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Отбрасывает сегмент линии против коллайдеров в сцене.</para>
      </summary>
      <param name="start">Начальная точка линии в мировом пространстве.</param>
      <param name="end">Конечная точка линии в мировом пространстве.</param>
      <param name="layerMask">Фильтр для обнаружения коллайдеров только на определенных слоях.</param>
      <param name="minDepth">Включать только объекты с координатой Z (глубиной) больше или равной этому значению.</param>
      <param name="maxDepth">Включать только объекты с координатой Z (глубиной) меньше или равной этому значению.</param>
      <returns>
        <para>Возвращены результаты приведения.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.Linecast(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.ContactFilter2D,UnityEngine.RaycastHit2D[])">
      <summary>
        <para>Отбрасывает сегмент линии на коллайдеры в сцене с результатами, отфильтрованными с помощью ContactFilter2D.</para>
      </summary>
      <param name="start">Начальная точка линии в мировом пространстве.</param>
      <param name="end">Конечная точка линии в мировом пространстве.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <param name="results">Массив для получения результатов. Размер массива определяет максимальное количество возвращаемых результатов.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в массив результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.Linecast(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.ContactFilter2D,System.Collections.Generic.List`1&lt;UnityEngine.RaycastHit2D&gt;)">
      <summary>
        <para>Отбрасывает сегмент линии на коллайдеры в сцене с результатами, отфильтрованными с помощью ContactFilter2D.</para>
      </summary>
      <param name="start">Начальная точка линии в мировом пространстве.</param>
      <param name="end">Конечная точка линии в мировом пространстве.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <param name="results">Список для получения результатов.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в список результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.LinecastAll(UnityEngine.Vector2,UnityEngine.Vector2,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Накладывает линию на коллайдеры в сцене.</para>
      </summary>
      <param name="start">Начальная точка линии в мировом пространстве.</param>
      <param name="end">Конечная точка линии в мировом пространстве.</param>
      <param name="layerMask">Фильтр для обнаружения коллайдеров только на определенных слоях.</param>
      <param name="minDepth">Включать только объекты с координатой Z (глубиной) больше или равной этому значению.</param>
      <param name="maxDepth">Включать только объекты с координатой Z (глубиной) меньше или равной этому значению.</param>
      <returns>
        <para>Возвращены результаты приведения.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.LinecastNonAlloc(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.RaycastHit2D[],System.Int32,System.Single,System.Single)">
      <summary>
        <para>Бросает линию против коллайдеров в сцене. Примечание. Этот метод будет объявлен устаревшим в будущей сборке, вместо него рекомендуется использовать Linecast.</para>
      </summary>
      <param name="minDepth">Включать только объекты с координатой Z (глубиной) больше или равной этому значению.</param>
      <param name="maxDepth">Включать только объекты с координатой Z (глубиной) меньше или равной этому значению.</param>
      <param name="start">Начальная точка линии в мировом пространстве.</param>
      <param name="end">Конечная точка линии в мировом пространстве.</param>
      <param name="results">Возвращаемый массив объектов, пересекающих линию.</param>
      <param name="layerMask">Фильтр для обнаружения коллайдеров только на определенных слоях.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в массив результатов.</para>
      </returns>
    </member>
    <member name="F:UnityEngine.Physics2D.MaxPolygonShapeVertices">
      <summary>
        <para>Максимальное количество вершин, разрешенное для одного типа формы примитивного многоугольника (PhysicsShapeType2D.Polygon). (Только чтение)</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapArea(UnityEngine.Vector2,UnityEngine.Vector2,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Проверяет, попадает ли коллайдер в прямоугольную область.</para>
      </summary>
      <param name="pointA">Один угол прямоугольника.</param>
      <param name="pointB">По диагонали напротив точки A угла прямоугольника.</param>
      <param name="layerMask">Фильтр для проверки объектов только на определенных слоях.</param>
      <param name="minDepth">Включать только объекты с координатой Z (глубиной) больше или равной этому значению.</param>
      <param name="maxDepth">Включать только объекты с координатой Z (глубиной) меньше или равной этому значению.</param>
      <returns>
        <para>Коллайдер перекрывает область.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapArea(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.ContactFilter2D,UnityEngine.Collider2D[])">
      <summary>
        <para>Проверяет, попадает ли коллайдер в прямоугольную область.</para>
      </summary>
      <param name="pointA">Один угол прямоугольника.</param>
      <param name="pointB">По диагонали напротив точки A угла прямоугольника.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z. Обратите внимание, что нормальный угол не используется для проверки перекрытия.</param>
      <param name="results">Массив для получения результатов. Размер массива определяет максимальное количество возвращаемых результатов.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в массив результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapArea(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.ContactFilter2D,System.Collections.Generic.List`1&lt;UnityEngine.Collider2D&gt;)">
      <summary>
        <para>Проверяет, попадает ли коллайдер в прямоугольную область.</para>
      </summary>
      <param name="pointA">Один угол прямоугольника.</param>
      <param name="pointB">По диагонали напротив точки A угла прямоугольника.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z. Обратите внимание, что нормальный угол не используется для проверки перекрытия.</param>
      <param name="results">Список для получения результатов.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в список результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapAreaAll(UnityEngine.Vector2,UnityEngine.Vector2,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Получите список всех коллайдеров, попадающих в прямоугольную область.</para>
      </summary>
      <param name="pointA">Один угол прямоугольника.</param>
      <param name="pointB">По диагонали напротив точки A угла прямоугольника.</param>
      <param name="layerMask">Фильтр для проверки объектов только на определенных слоях.</param>
      <param name="minDepth">Включать только объекты с координатой Z (глубиной) больше или равной этому значению.</param>
      <param name="maxDepth">Включать только объекты с координатой Z (глубиной) меньше или равной этому значению.</param>
      <returns>
        <para>Возвращены результаты приведения.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapAreaNonAlloc(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Collider2D[],System.Int32,System.Single,System.Single)">
      <summary>
        <para>Получить список всех коллайдеров, попадающих в указанную область. Примечание. Этот метод будет объявлен устаревшим в будущей сборке, и вместо него рекомендуется использовать OverlapArea.</para>
      </summary>
      <param name="pointA">Один угол прямоугольника.</param>
      <param name="pointB">По диагонали напротив точки A угла прямоугольника.</param>
      <param name="results">Массив для получения результатов.</param>
      <param name="layerMask">Фильтр для проверки объектов только на указанных слоях.</param>
      <param name="minDepth">Включать только объекты с координатой Z (глубиной) больше или равной этому значению.</param>
      <param name="maxDepth">Включать только объекты с координатой Z (глубиной) меньше или равной этому значению.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в массив результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapBox(UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Проверяет, попадает ли коллайдер в область прямоугольника.</para>
      </summary>
      <param name="point">Центр поля.</param>
      <param name="size">Размер коробки.</param>
      <param name="angle">Угол коробки.</param>
      <param name="layerMask">Фильтр для проверки объектов только на определенных слоях.</param>
      <param name="minDepth">Включать только объекты с координатой Z (глубиной) больше этого значения.</param>
      <param name="maxDepth">Включать только объекты с координатой Z (глубиной) меньше этого значения.</param>
      <returns>
        <para>Коллайдер, перекрывающий поле.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapBox(UnityEngine.Vector2,UnityEngine.Vector2,System.Single,UnityEngine.ContactFilter2D,UnityEngine.Collider2D[])">
      <summary>
        <para>Проверяет, попадает ли коллайдер в область прямоугольника.</para>
      </summary>
      <param name="point">Центр поля.</param>
      <param name="size">Размер коробки.</param>
      <param name="angle">Угол коробки.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z. Обратите внимание, что нормальный угол не используется для проверки перекрытия.</param>
      <param name="results">Массив для получения результатов. Размер массива определяет максимальное количество возвращаемых результатов.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в массив результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapBox(UnityEngine.Vector2,UnityEngine.Vector2,System.Single,UnityEngine.ContactFilter2D,System.Collections.Generic.List`1&lt;UnityEngine.Collider2D&gt;)">
      <summary>
        <para>Проверяет, попадает ли коллайдер в область прямоугольника.</para>
      </summary>
      <param name="point">Центр поля.</param>
      <param name="size">Размер коробки.</param>
      <param name="angle">Угол коробки.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z. Обратите внимание, что нормальный угол не используется для проверки перекрытия.</param>
      <param name="results">Список для получения результатов.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в список результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapBoxAll(UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Получите список всех коллайдеров, которые попадают в область прямоугольника.</para>
      </summary>
      <param name="point">Центр поля.</param>
      <param name="size">Размер коробки.</param>
      <param name="angle">Угол коробки.</param>
      <param name="layerMask">Фильтр для проверки объектов только на определенных слоях.</param>
      <param name="minDepth">Включать только объекты с координатой Z (глубиной) больше этого значения.</param>
      <param name="maxDepth">Включать только объекты с координатой Z (глубиной) меньше этого значения.</param>
      <returns>
        <para>Возвращены результаты приведения.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapBoxNonAlloc(UnityEngine.Vector2,UnityEngine.Vector2,System.Single,UnityEngine.Collider2D[],System.Int32,System.Single,System.Single)">
      <summary>
        <para>Получите список всех коллайдеров, которые попадают в область прямоугольника. Примечание. Этот метод будет объявлен устаревшим в будущих сборках, вместо него рекомендуется использовать OverlapBox.</para>
      </summary>
      <param name="point">Центр поля.</param>
      <param name="size">Размер коробки.</param>
      <param name="angle">Угол коробки.</param>
      <param name="results">Массив для получения результатов.</param>
      <param name="layerMask">Фильтр для проверки объектов только на определенных слоях.</param>
      <param name="minDepth">Включать только объекты с координатой Z (глубиной) больше этого значения.</param>
      <param name="maxDepth">Включать только объекты с координатой Z (глубиной) меньше этого значения.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в массив результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapCapsule(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.CapsuleDirection2D,System.Single,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Проверяет, попадает ли коллайдер в область капсулы.</para>
      </summary>
      <param name="point">Центр капсулы.</param>
      <param name="size">Размер капсулы.</param>
      <param name="direction">Направление капсулы.</param>
      <param name="angle">Угол капсюля.</param>
      <param name="layerMask">Фильтр для проверки объектов только на определенных слоях.</param>
      <param name="minDepth">Включать только объекты с координатой Z (глубиной) больше этого значения.</param>
      <param name="maxDepth">Включать только объекты с координатой Z (глубиной) меньше этого значения.</param>
      <returns>
        <para>Коллайдер перекрывает капсулу.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapCapsule(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.CapsuleDirection2D,System.Single,UnityEngine.ContactFilter2D,UnityEngine.Collider2D[])">
      <summary>
        <para>Проверяет, попадает ли коллайдер в область капсулы.</para>
      </summary>
      <param name="point">Центр капсулы.</param>
      <param name="size">Размер капсулы.</param>
      <param name="direction">Направление капсулы.</param>
      <param name="angle">Угол капсюля.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z. Обратите внимание, что нормальный угол не используется для проверки перекрытия.</param>
      <param name="results">Массив для получения результатов. Размер массива определяет максимальное количество возвращаемых результатов.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в массив результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapCapsule(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.CapsuleDirection2D,System.Single,UnityEngine.ContactFilter2D,System.Collections.Generic.List`1&lt;UnityEngine.Collider2D&gt;)">
      <summary>
        <para>Проверяет, попадает ли коллайдер в область капсулы.</para>
      </summary>
      <param name="point">Центр капсулы.</param>
      <param name="size">Размер капсулы.</param>
      <param name="direction">Направление капсулы.</param>
      <param name="angle">Угол капсюля.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z. Обратите внимание, что нормальный угол не используется для проверки перекрытия.</param>
      <param name="results">Список для получения результатов.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в список результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapCapsuleAll(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.CapsuleDirection2D,System.Single,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Получить список всех коллайдеров, попадающих в зону действия капсулы.</para>
      </summary>
      <param name="point">Центр капсулы.</param>
      <param name="size">Размер капсулы.</param>
      <param name="direction">Направление капсулы.</param>
      <param name="angle">Угол капсюля.</param>
      <param name="layerMask">Фильтр для проверки объектов только на определенных слоях.</param>
      <param name="minDepth">Включать только объекты с координатой Z (глубиной) больше этого значения.</param>
      <param name="maxDepth">Включать только объекты с координатой Z (глубиной) меньше этого значения.</param>
      <returns>
        <para>Возвращены результаты приведения.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapCapsuleNonAlloc(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.CapsuleDirection2D,System.Single,UnityEngine.Collider2D[],System.Int32,System.Single,System.Single)">
      <summary>
        <para>Получите список всех коллайдеров, попадающих в зону действия капсулы. Примечание. Этот метод будет объявлен устаревшим в будущей сборке, вместо него рекомендуется использовать OverlapCapsule.</para>
      </summary>
      <param name="point">Центр капсулы.</param>
      <param name="size">Размер капсулы.</param>
      <param name="direction">Направление капсулы.</param>
      <param name="angle">Угол капсюля.</param>
      <param name="results">Массив для получения результатов.</param>
      <param name="layerMask">Фильтр для проверки объектов только на определенных слоях.</param>
      <param name="minDepth">Включать только объекты с координатой Z (глубиной) больше этого значения.</param>
      <param name="maxDepth">Включать только объекты с координатой Z (глубиной) меньше этого значения.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в массив результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapCircle(UnityEngine.Vector2,System.Single,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Проверяет, попадает ли коллайдер в круглую область.</para>
      </summary>
      <param name="point">Центр круга.</param>
      <param name="radius">Радиус круга.</param>
      <param name="layerMask">Фильтр для проверки объектов только на определенных слоях.</param>
      <param name="minDepth">Включать только объекты с координатой Z (глубиной) больше или равной этому значению.</param>
      <param name="maxDepth">Включать только объекты с координатой Z (глубиной) меньше или равной этому значению.</param>
      <returns>
        <para>Коллайдер перекрывает круг.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapCircle(UnityEngine.Vector2,System.Single,UnityEngine.ContactFilter2D,UnityEngine.Collider2D[])">
      <summary>
        <para>Проверяет, находится ли коллайдер в круглой области.</para>
      </summary>
      <param name="point">Центр круга.</param>
      <param name="radius">Радиус круга.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z. Обратите внимание, что нормальный угол не используется для проверки перекрытия.</param>
      <param name="results">Массив для получения результатов. Размер массива определяет максимальное количество возвращаемых результатов.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в массив результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapCircle(UnityEngine.Vector2,System.Single,UnityEngine.ContactFilter2D,System.Collections.Generic.List`1&lt;UnityEngine.Collider2D&gt;)">
      <summary>
        <para>Проверяет, находится ли коллайдер в круглой области.</para>
      </summary>
      <param name="point">Центр круга.</param>
      <param name="radius">Радиус круга.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z. Обратите внимание, что нормальный угол не используется для проверки перекрытия.</param>
      <param name="results">Список для получения результатов.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в список результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapCircleAll(UnityEngine.Vector2,System.Single,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Получите список всех коллайдеров, попадающих в круглую область.</para>
      </summary>
      <param name="point">Центр круга.</param>
      <param name="radius">Радиус круга.</param>
      <param name="layerMask">Фильтр для проверки объектов только на указанных слоях.</param>
      <param name="minDepth">Включать только объекты с координатой Z (глубиной) больше или равной этому значению.</param>
      <param name="maxDepth">Включать только объекты с координатой Z (глубиной) меньше или равной этому значению.</param>
      <returns>
        <para>Результаты приведения.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapCircleNonAlloc(UnityEngine.Vector2,System.Single,UnityEngine.Collider2D[],System.Int32,System.Single,System.Single)">
      <summary>
        <para>Получите список всех коллайдеров, попадающих в круглую область. Примечание. Этот метод будет объявлен устаревшим в будущей сборке, вместо него рекомендуется использовать OverlapCircle.</para>
      </summary>
      <param name="point">Центр круга.</param>
      <param name="radius">Радиус круга.</param>
      <param name="results">Массив для получения результатов.</param>
      <param name="layerMask">Фильтр для проверки объектов только на определенных слоях.</param>
      <param name="minDepth">Включать только объекты с координатой Z (глубиной) больше или равной этому значению.</param>
      <param name="maxDepth">Включать только объекты с координатой Z (глубиной) меньше или равной этому значению.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в массив результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapCollider(UnityEngine.Collider2D,UnityEngine.ContactFilter2D,UnityEngine.Collider2D[])">
      <summary>
        <para>Получает список всех коллайдеров, перекрывающих данный коллайдер.</para>
      </summary>
      <param name="Collider">Коллайдер, определяющий область, используемую для запроса перекрытий других коллайдеров.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z. Обратите внимание, что нормальный угол не используется для проверки перекрытия.</param>
      <param name="results">Массив для получения результатов. Размер массива определяет максимальное количество возвращаемых результатов.</param>
      <param name="collider">
      </param>
      <returns>
        <para>Возвращает количество результатов, помещенных в массив результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapCollider(UnityEngine.Collider2D,UnityEngine.ContactFilter2D,System.Collections.Generic.List`1&lt;UnityEngine.Collider2D&gt;)">
      <summary>
        <para>Получает список всех коллайдеров, перекрывающих данный коллайдер.</para>
      </summary>
      <param name="Collider">Коллайдер, определяющий область, используемую для запроса перекрытий других коллайдеров.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z. Обратите внимание, что нормальный угол не используется для проверки перекрытия.</param>
      <param name="results">Список для получения результатов.</param>
      <param name="collider">
      </param>
      <returns>
        <para>Возвращает количество результатов, помещенных в список результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapPoint(UnityEngine.Vector2,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Проверяет, не перекрывает ли коллайдер точку в пространстве.</para>
      </summary>
      <param name="point">Точка в мировом пространстве.</param>
      <param name="layerMask">Фильтр для проверки объектов только на определенных слоях.</param>
      <param name="minDepth">Включать только объекты с координатой Z (глубиной) больше или равной этому значению.</param>
      <param name="maxDepth">Включать только объекты с координатой Z (глубиной) меньше или равной этому значению.</param>
      <returns>
        <para>Коллайдер перекрывает точку.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapPoint(UnityEngine.Vector2,UnityEngine.ContactFilter2D,UnityEngine.Collider2D[])">
      <summary>
        <para>Проверяет, перекрывает ли Коллайдер точку в мировом пространстве.</para>
      </summary>
      <param name="point">Точка в мировом пространстве.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z. Обратите внимание, что нормальный угол не используется для проверки перекрытия.</param>
      <param name="results">Массив для получения результатов. Размер массива определяет максимальное количество возвращаемых результатов.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в массив результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapPoint(UnityEngine.Vector2,UnityEngine.ContactFilter2D,System.Collections.Generic.List`1&lt;UnityEngine.Collider2D&gt;)">
      <summary>
        <para>Проверяет, перекрывает ли Коллайдер точку в мировом пространстве.</para>
      </summary>
      <param name="point">Точка в мировом пространстве.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z. Обратите внимание, что нормальный угол не используется для проверки перекрытия.</param>
      <param name="results">Список для получения результатов.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в список результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapPointAll(UnityEngine.Vector2,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Получить список всех коллайдеров, перекрывающих точку в пространстве.</para>
      </summary>
      <param name="minDepth">Включать только объекты с координатой Z (глубиной) больше или равной этому значению.</param>
      <param name="maxDepth">Включать только объекты с координатой Z (глубиной) меньше или равной этому значению.</param>
      <param name="point">Точка в пространстве.</param>
      <param name="layerMask">Фильтр для проверки объектов только на определенных слоях.</param>
      <returns>
        <para>Возвращены результаты приведения.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.OverlapPointNonAlloc(UnityEngine.Vector2,UnityEngine.Collider2D[],System.Int32,System.Single,System.Single)">
      <summary>
        <para>Получите список всех коллайдеров, которые перекрывают точку в пространстве. Примечание. Этот метод будет объявлен устаревшим в будущей сборке, вместо него рекомендуется использовать OverlapPoint.</para>
      </summary>
      <param name="minDepth">Включать только объекты с координатой Z (глубиной) больше или равной этому значению.</param>
      <param name="maxDepth">Включать только объекты с координатой Z (глубиной) меньше или равной этому значению.</param>
      <param name="point">Точка в пространстве.</param>
      <param name="results">Массив для получения результатов.</param>
      <param name="layerMask">Фильтр для проверки объектов только на определенных слоях.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в массив результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.Raycast(UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Направляет луч на коллайдеры в сцене.</para>
      </summary>
      <param name="origin">Точка в 2D-пространстве, где начинается луч.</param>
      <param name="direction">Вектор, представляющий направление луча.</param>
      <param name="distance">Максимальное расстояние, на которое можно передать луч.</param>
      <param name="layerMask">Фильтр для обнаружения коллайдеров только на определенных слоях.</param>
      <param name="minDepth">Включать только объекты с координатой Z (глубиной) больше или равной этому значению.</param>
      <param name="maxDepth">Включать только объекты с координатой Z (глубиной) меньше или равной этому значению.</param>
      <returns>
        <para>Возвращены результаты приведения.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.Raycast(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.ContactFilter2D,UnityEngine.RaycastHit2D[],System.Single)">
      <summary>
        <para>Направляет луч на коллайдеры в сцене.</para>
      </summary>
      <param name="origin">Точка в 2D-пространстве, где начинается луч.</param>
      <param name="direction">Вектор, представляющий направление луча.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <param name="results">Массив для получения результатов. Размер массива определяет максимальное количество возвращаемых результатов.</param>
      <param name="distance">Максимальное расстояние, на которое можно передать луч.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в массив результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.Raycast(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.ContactFilter2D,System.Collections.Generic.List`1&lt;UnityEngine.RaycastHit2D&gt;,System.Single)">
      <summary>
        <para>Направляет луч на коллайдеры в сцене.</para>
      </summary>
      <param name="origin">Точка в 2D-пространстве, где начинается луч.</param>
      <param name="direction">Вектор, представляющий направление луча.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <param name="results">Список для получения результатов.</param>
      <param name="distance">Максимальное расстояние, на которое можно передать луч.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в список результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.RaycastAll(UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Направляет луч на коллайдеры в сцене, возвращая все коллайдеры, которые с ним соприкасаются.</para>
      </summary>
      <param name="origin">Точка в 2D-пространстве, где начинается луч.</param>
      <param name="direction">Вектор, представляющий направление луча.</param>
      <param name="distance">Максимальное расстояние, на которое можно передать луч.</param>
      <param name="layerMask">Фильтр для обнаружения коллайдеров только на определенных слоях.</param>
      <param name="minDepth">Включать только объекты с координатой Z (глубиной) больше или равной этому значению.</param>
      <param name="maxDepth">Включать только объекты с координатой Z (глубиной) меньше или равной этому значению.</param>
      <returns>
        <para>Возвращены результаты приведения.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.RaycastNonAlloc(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.RaycastHit2D[],System.Single,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Направляет луч в сцену. Примечание. Этот метод будет объявлен устаревшим в будущей сборке, вместо него рекомендуется использовать Raycast.</para>
      </summary>
      <param name="minDepth">Включать только объекты с координатой Z (глубиной) больше или равной этому значению.</param>
      <param name="maxDepth">Включать только объекты с координатой Z (глубиной) меньше или равной этому значению.</param>
      <param name="origin">Точка в 2D-пространстве, где начинается луч.</param>
      <param name="direction">Вектор, представляющий направление луча.</param>
      <param name="results">Массив для получения результатов.</param>
      <param name="distance">Максимальное расстояние, на которое можно передать луч.</param>
      <param name="layerMask">Фильтр для проверки объектов только на определенных слоях.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в массив результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.SetLayerCollisionMask(System.Int32,System.Int32)">
      <summary>
        <para>Задайте маску слоя столкновения, указывающую, с какими слоями указанный слой может столкнуться.</para>
      </summary>
      <param name="layer">Слой, для которого устанавливается маска слоя столкновения.</param>
      <param name="layerMask">Маска, в которой каждый бит указывает слой и может ли он конфликтовать со слоем или нет.</param>
    </member>
    <member name="M:UnityEngine.Physics2D.Simulate(System.Single)">
      <summary>
        <para>Имитация физики в сцене.</para>
      </summary>
      <param name="step">Настало время продвинуть физику.</param>
      <returns>
        <para>Была ли запущена симуляция или нет. Запуск симуляции во время обратных вызовов физики всегда завершается ошибкой.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Physics2D.SyncTransforms">
      <summary>
        <para>Синхронизируется.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.PhysicsJobOptions2D">
      <summary>
        <para>Набор параметров, управляющих работой физики при использовании системы заданий для многопоточного моделирования физики.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PhysicsJobOptions2D.clearBodyForcesPerJob">
      <summary>
        <para>Управляет минимальным количеством тел, подлежащих очистке в каждом задании моделирования.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PhysicsJobOptions2D.clearFlagsPerJob">
      <summary>
        <para>Управляет минимальным количеством флагов, которые должны быть очищены в каждом задании моделирования.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PhysicsJobOptions2D.collideContactsPerJob">
      <summary>
        <para>Управляет минимальным количеством контактов, с которыми приходится сталкиваться в каждом задании моделирования.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PhysicsJobOptions2D.findNearestContactsPerJob">
      <summary>
        <para>Управляет минимальным количеством ближайших контактов для поиска в каждом задании моделирования.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PhysicsJobOptions2D.interpolationPosesPerJob">
      <summary>
        <para>Управляет минимальным количеством Rigidbody2D, интерполируемым в каждом задании моделирования.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PhysicsJobOptions2D.islandSolverBodiesPerJob">
      <summary>
        <para>Управляет минимальным количеством тел, которые необходимо решить в каждом задании моделирования при выполнении решения острова.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PhysicsJobOptions2D.islandSolverBodyCostScale">
      <summary>
        <para>Масштабирует стоимость каждого тела во время решения отдельных островов.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PhysicsJobOptions2D.islandSolverContactCostScale">
      <summary>
        <para>Масштабирует стоимость каждого контакта во время дискретного островного решения.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PhysicsJobOptions2D.islandSolverContactsPerJob">
      <summary>
        <para>Определяет минимальное количество контактов для решения в каждом задании моделирования при решении островков.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PhysicsJobOptions2D.islandSolverCostThreshold">
      <summary>
        <para>Минимальная пороговая стоимость всех тел, контактов и соединений на острове при решении дискретного острова.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PhysicsJobOptions2D.islandSolverJointCostScale">
      <summary>
        <para>Масштабирует стоимость каждого соединения во время решения дискретных островов.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PhysicsJobOptions2D.newContactsPerJob">
      <summary>
        <para>Управляет минимальным количеством новых контактов, которые нужно найти в каждом задании моделирования.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PhysicsJobOptions2D.syncContinuousFixturesPerJob">
      <summary>
        <para>Управляет минимальным количеством приборов для синхронизации в широкой фазе во время непрерывного решения островков в каждом задании моделирования.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PhysicsJobOptions2D.syncDiscreteFixturesPerJob">
      <summary>
        <para>Управляет минимальным количеством приборов для синхронизации в широкой фазе во время решения дискретных островков в каждом задании моделирования.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PhysicsJobOptions2D.updateTriggerContactsPerJob">
      <summary>
        <para>Управляет минимальным количеством триггерных контактов для обновления в каждом задании моделирования.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PhysicsJobOptions2D.useConsistencySorting">
      <summary>
        <para>Должна ли физическая симуляция сортировать многопоточные результаты для обеспечения согласованности порядка обработки?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PhysicsJobOptions2D.useMultithreading">
      <summary>
        <para>Должна ли симуляция физики использовать многопоточность?</para>
      </summary>
    </member>
    <member name="T:UnityEngine.PhysicsMaterial2D">
      <summary>
        <para>Тип актива, определяющий свойства поверхности Collider2D.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PhysicsMaterial2D.bounciness">
      <summary>
        <para>Степень эластичности при столкновениях.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PhysicsMaterial2D.friction">
      <summary>
        <para>Коэффициент трения.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.PhysicsScene2D">
      <summary>
        <para>Представляет один экземпляр 2D-сцены физики.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.BoxCast(UnityEngine.Vector2,UnityEngine.Vector2,System.Single,UnityEngine.Vector2,System.Single,System.Int32)">
      <summary>
        <para>Создает поле против коллайдеров в PhysicsScene2D, возвращая только первое пересечение.</para>
      </summary>
      <param name="origin">Точка в 2D-пространстве, где начинается прямоугольник.</param>
      <param name="size">Размер коробки.</param>
      <param name="angle">Угол поля (в градусах).</param>
      <param name="direction">Вектор, представляющий направление броска ящика.</param>
      <param name="distance">Максимальное расстояние, на которое можно бросить ящик.</param>
      <param name="layerMask">Фильтр для обнаружения коллайдеров только на определенных слоях.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <returns>
        <para>Возвращены результаты приведения.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.BoxCast(UnityEngine.Vector2,UnityEngine.Vector2,System.Single,UnityEngine.Vector2,System.Single,UnityEngine.ContactFilter2D)">
      <summary>
        <para>Создает поле против коллайдеров в PhysicsScene2D, возвращая только первое пересечение.</para>
      </summary>
      <param name="origin">Точка в 2D-пространстве, где начинается прямоугольник.</param>
      <param name="size">Размер коробки.</param>
      <param name="angle">Угол поля (в градусах).</param>
      <param name="direction">Вектор, представляющий направление броска ящика.</param>
      <param name="distance">Максимальное расстояние, на которое можно бросить ящик.</param>
      <param name="layerMask">Фильтр для обнаружения коллайдеров только на определенных слоях.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <returns>
        <para>Возвращены результаты приведения.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.BoxCast(UnityEngine.Vector2,UnityEngine.Vector2,System.Single,UnityEngine.Vector2,System.Single,UnityEngine.RaycastHit2D[],System.Int32)">
      <summary>
        <para>Создает поле против коллайдеров в PhysicsScene2D, возвращая все пересечения.</para>
      </summary>
      <param name="origin">Точка в 2D-пространстве, где начинается прямоугольник.</param>
      <param name="size">Размер коробки.</param>
      <param name="angle">Угол поля (в градусах).</param>
      <param name="direction">Вектор, представляющий направление броска ящика.</param>
      <param name="distance">Максимальное расстояние, на которое можно бросить ящик.</param>
      <param name="results">Массив для получения результатов. Размер массива определяет максимальное количество возвращаемых результатов.</param>
      <param name="layerMask">Фильтр для обнаружения коллайдеров только на определенных слоях.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в массив результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.BoxCast(UnityEngine.Vector2,UnityEngine.Vector2,System.Single,UnityEngine.Vector2,System.Single,UnityEngine.ContactFilter2D,UnityEngine.RaycastHit2D[])">
      <summary>
        <para>Создает поле против коллайдеров в PhysicsScene2D, возвращая все пересечения.</para>
      </summary>
      <param name="origin">Точка в 2D-пространстве, где начинается прямоугольник.</param>
      <param name="size">Размер коробки.</param>
      <param name="angle">Угол поля (в градусах).</param>
      <param name="direction">Вектор, представляющий направление броска ящика.</param>
      <param name="distance">Максимальное расстояние, на которое можно бросить ящик.</param>
      <param name="results">Массив для получения результатов. Размер массива определяет максимальное количество возвращаемых результатов.</param>
      <param name="layerMask">Фильтр для обнаружения коллайдеров только на определенных слоях.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в массив результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.BoxCast(UnityEngine.Vector2,UnityEngine.Vector2,System.Single,UnityEngine.Vector2,System.Single,UnityEngine.ContactFilter2D,System.Collections.Generic.List`1&lt;UnityEngine.RaycastHit2D&gt;)">
      <summary>
        <para>Создает поле против коллайдеров в PhysicsScene2D, возвращая все пересечения.</para>
      </summary>
      <param name="origin">Точка в 2D-пространстве, где начинается прямоугольник.</param>
      <param name="size">Размер коробки.</param>
      <param name="angle">Угол поля (в градусах).</param>
      <param name="direction">Вектор, представляющий направление броска ящика.</param>
      <param name="distance">Максимальное расстояние, на которое можно бросить ящик.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <param name="results">Список для получения результатов.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в список результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.CapsuleCast(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.CapsuleDirection2D,System.Single,UnityEngine.Vector2,System.Single,System.Int32)">
      <summary>
        <para>Отбрасывает капсулу на коллайдеры в PhysicsScene2D, возвращая только первое пересечение.</para>
      </summary>
      <param name="origin">Точка в двухмерном пространстве, откуда начинается капсула.</param>
      <param name="size">Размер капсулы.</param>
      <param name="capsuleDirection">Направление капсулы.</param>
      <param name="angle">Угол наклона капсулы (в градусах).</param>
      <param name="direction">Вектор, представляющий направление броска капсулы.</param>
      <param name="distance">Максимальное расстояние, на которое можно забросить капсулу.</param>
      <param name="layerMask">Фильтр, используемый для обнаружения коллайдеров только на определенных слоях.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <returns>
        <para>Возвращены результаты приведения.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.CapsuleCast(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.CapsuleDirection2D,System.Single,UnityEngine.Vector2,System.Single,UnityEngine.ContactFilter2D)">
      <summary>
        <para>Отбрасывает капсулу на коллайдеры в PhysicsScene2D, возвращая только первое пересечение.</para>
      </summary>
      <param name="origin">Точка в двухмерном пространстве, откуда начинается капсула.</param>
      <param name="size">Размер капсулы.</param>
      <param name="capsuleDirection">Направление капсулы.</param>
      <param name="angle">Угол наклона капсулы (в градусах).</param>
      <param name="direction">Вектор, представляющий направление броска капсулы.</param>
      <param name="distance">Максимальное расстояние, на которое можно забросить капсулу.</param>
      <param name="layerMask">Фильтр, используемый для обнаружения коллайдеров только на определенных слоях.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <returns>
        <para>Возвращены результаты приведения.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.CapsuleCast(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.CapsuleDirection2D,System.Single,UnityEngine.Vector2,System.Single,UnityEngine.RaycastHit2D[],System.Int32)">
      <summary>
        <para>Отбрасывает капсулу на коллайдеры в PhysicsScene2D, возвращая все пересечения.</para>
      </summary>
      <param name="origin">Точка в двухмерном пространстве, откуда начинается капсула.</param>
      <param name="size">Размер капсулы.</param>
      <param name="capsuleDirection">Направление капсулы.</param>
      <param name="angle">Угол наклона капсулы (в градусах).</param>
      <param name="direction">Вектор, представляющий направление броска капсулы.</param>
      <param name="distance">Максимальное расстояние, на которое можно забросить капсулу.</param>
      <param name="results">Массив для получения результатов. Размер массива определяет максимальное количество возвращаемых результатов.</param>
      <param name="layerMask">Фильтр, используемый для обнаружения коллайдеров только на определенных слоях.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в массив результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.CapsuleCast(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.CapsuleDirection2D,System.Single,UnityEngine.Vector2,System.Single,UnityEngine.ContactFilter2D,UnityEngine.RaycastHit2D[])">
      <summary>
        <para>Отбрасывает капсулу на коллайдеры в PhysicsScene2D, возвращая все пересечения.</para>
      </summary>
      <param name="origin">Точка в двухмерном пространстве, откуда начинается капсула.</param>
      <param name="size">Размер капсулы.</param>
      <param name="capsuleDirection">Направление капсулы.</param>
      <param name="angle">Угол наклона капсулы (в градусах).</param>
      <param name="direction">Вектор, представляющий направление броска капсулы.</param>
      <param name="distance">Максимальное расстояние, на которое можно забросить капсулу.</param>
      <param name="results">Массив для получения результатов. Размер массива определяет максимальное количество возвращаемых результатов.</param>
      <param name="layerMask">Фильтр, используемый для обнаружения коллайдеров только на определенных слоях.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в массив результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.CapsuleCast(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.CapsuleDirection2D,System.Single,UnityEngine.Vector2,System.Single,UnityEngine.ContactFilter2D,System.Collections.Generic.List`1&lt;UnityEngine.RaycastHit2D&gt;)">
      <summary>
        <para>Отбрасывает капсулу на коллайдеры в PhysicsScene2D, возвращая все пересечения.</para>
      </summary>
      <param name="origin">Точка в двухмерном пространстве, откуда начинается капсула.</param>
      <param name="size">Размер капсулы.</param>
      <param name="capsuleDirection">Направление капсулы.</param>
      <param name="angle">Угол наклона капсулы (в градусах).</param>
      <param name="direction">Вектор, представляющий направление броска капсулы.</param>
      <param name="distance">Максимальное расстояние, на которое можно забросить капсулу.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <param name="results">Список для получения результатов.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в список результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.CircleCast(UnityEngine.Vector2,System.Single,UnityEngine.Vector2,System.Single,System.Int32)">
      <summary>
        <para>Отбрасывает круг против коллайдеров в PhysicsScene2D, возвращая только первое пересечение.</para>
      </summary>
      <param name="origin">Точка в 2D-пространстве, где начинается окружность.</param>
      <param name="radius">Радиус круга.</param>
      <param name="direction">Вектор, представляющий направление создания круга.</param>
      <param name="distance">Максимальное расстояние, на которое можно бросить круг.</param>
      <param name="layerMask">Фильтр, используемый для обнаружения коллайдеров только на определенных слоях.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <returns>
        <para>Возвращены результаты приведения.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.CircleCast(UnityEngine.Vector2,System.Single,UnityEngine.Vector2,System.Single,UnityEngine.ContactFilter2D)">
      <summary>
        <para>Отбрасывает круг против коллайдеров в PhysicsScene2D, возвращая только первое пересечение.</para>
      </summary>
      <param name="origin">Точка в 2D-пространстве, где начинается окружность.</param>
      <param name="radius">Радиус круга.</param>
      <param name="direction">Вектор, представляющий направление создания круга.</param>
      <param name="distance">Максимальное расстояние, на которое можно бросить круг.</param>
      <param name="layerMask">Фильтр, используемый для обнаружения коллайдеров только на определенных слоях.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <returns>
        <para>Возвращены результаты приведения.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.CircleCast(UnityEngine.Vector2,System.Single,UnityEngine.Vector2,System.Single,UnityEngine.RaycastHit2D[],System.Int32)">
      <summary>
        <para>Отбрасывает круг против коллайдеров в PhysicsScene2D, возвращая все пересечения.</para>
      </summary>
      <param name="origin">Точка в 2D-пространстве, где начинается окружность.</param>
      <param name="radius">Радиус круга.</param>
      <param name="direction">Вектор, представляющий направление создания круга.</param>
      <param name="distance">Максимальное расстояние, на которое можно бросить круг.</param>
      <param name="results">Массив для получения результатов. Размер массива определяет максимальное количество возвращаемых результатов.</param>
      <param name="layerMask">Фильтр, используемый для обнаружения коллайдеров только на определенных слоях.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в массив результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.CircleCast(UnityEngine.Vector2,System.Single,UnityEngine.Vector2,System.Single,UnityEngine.ContactFilter2D,UnityEngine.RaycastHit2D[])">
      <summary>
        <para>Отбрасывает круг против коллайдеров в PhysicsScene2D, возвращая все пересечения.</para>
      </summary>
      <param name="origin">Точка в 2D-пространстве, где начинается окружность.</param>
      <param name="radius">Радиус круга.</param>
      <param name="direction">Вектор, представляющий направление создания круга.</param>
      <param name="distance">Максимальное расстояние, на которое можно бросить круг.</param>
      <param name="results">Массив для получения результатов. Размер массива определяет максимальное количество возвращаемых результатов.</param>
      <param name="layerMask">Фильтр, используемый для обнаружения коллайдеров только на определенных слоях.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в массив результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.CircleCast(UnityEngine.Vector2,System.Single,UnityEngine.Vector2,System.Single,UnityEngine.ContactFilter2D,System.Collections.Generic.List`1&lt;UnityEngine.RaycastHit2D&gt;)">
      <summary>
        <para>Отбрасывает круг против коллайдеров в PhysicsScene2D, возвращая все пересечения.</para>
      </summary>
      <param name="origin">Точка в 2D-пространстве, где начинается окружность.</param>
      <param name="radius">Радиус круга.</param>
      <param name="direction">Вектор, представляющий направление создания круга.</param>
      <param name="distance">Максимальное расстояние, на которое можно бросить круг.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <param name="results">Список для получения результатов.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в список результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.GetRayIntersection(UnityEngine.Ray,System.Single,System.Int32)">
      <summary>
        <para>Направьте 3D-луч на коллайдеры в PhysicsScene2D, возвращая только первое пересечение.</para>
      </summary>
      <param name="ray">Трехмерный луч, определяющий исходную точку и направление для проверки.</param>
      <param name="distance">Максимальное расстояние, на которое можно передать луч.</param>
      <param name="layerMask">Фильтр для обнаружения коллайдеров только на определенных слоях.</param>
      <returns>
        <para>Возвращены результаты приведения.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.GetRayIntersection(UnityEngine.Ray,System.Single,UnityEngine.RaycastHit2D[],System.Int32)">
      <summary>
        <para>Направьте 3D-луч на коллайдеры в PhysicsScene2D, возвращая все пересечения.</para>
      </summary>
      <param name="ray">Трехмерный луч, определяющий исходную точку и направление для проверки.</param>
      <param name="distance">Максимальное расстояние, на которое можно передать луч.</param>
      <param name="results">Массив для получения результатов. Размер массива определяет максимальное количество возвращаемых результатов.</param>
      <param name="layerMask">Фильтр для обнаружения коллайдеров только на определенных слоях.</param>
      <returns>
        <para>Количество возвращенных результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.IsEmpty">
      <summary>
        <para>Определяет, пуста ли сцена физики.</para>
      </summary>
      <returns>
        <para>Истинно, когда сцена физики пуста.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.IsValid">
      <summary>
        <para>Определяет, допустима ли сцена физики.</para>
      </summary>
      <returns>
        <para>Истинно, когда физическая сцена действительна.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.Linecast(UnityEngine.Vector2,UnityEngine.Vector2,System.Int32)">
      <summary>
        <para>Отбрасывает сегмент линии против коллайдеров в PhysicsScene2D, возвращая только первое пересечение.</para>
      </summary>
      <param name="start">Начальная точка линии в мировом пространстве.</param>
      <param name="end">Конечная точка линии в мировом пространстве.</param>
      <param name="layerMask">Фильтр, используемый для обнаружения коллайдеров только на определенных слоях.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <returns>
        <para>Возвращены результаты приведения.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.Linecast(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.ContactFilter2D)">
      <summary>
        <para>Отбрасывает сегмент линии против коллайдеров в PhysicsScene2D, возвращая только первое пересечение.</para>
      </summary>
      <param name="start">Начальная точка линии в мировом пространстве.</param>
      <param name="end">Конечная точка линии в мировом пространстве.</param>
      <param name="layerMask">Фильтр, используемый для обнаружения коллайдеров только на определенных слоях.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <returns>
        <para>Возвращены результаты приведения.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.Linecast(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.RaycastHit2D[],System.Int32)">
      <summary>
        <para>Отбрасывает сегмент линии против коллайдеров в PhysicsScene2D.</para>
      </summary>
      <param name="start">Начальная точка линии в мировом пространстве.</param>
      <param name="end">Конечная точка линии в мировом пространстве.</param>
      <param name="results">Массив для получения результатов. Размер массива определяет максимальное количество возвращаемых результатов.</param>
      <param name="layerMask">Фильтр, используемый для обнаружения коллайдеров только на определенных слоях.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в массив результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.Linecast(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.ContactFilter2D,UnityEngine.RaycastHit2D[])">
      <summary>
        <para>Отбрасывает сегмент линии против коллайдеров в PhysicsScene2D.</para>
      </summary>
      <param name="start">Начальная точка линии в мировом пространстве.</param>
      <param name="end">Конечная точка линии в мировом пространстве.</param>
      <param name="results">Массив для получения результатов. Размер массива определяет максимальное количество возвращаемых результатов.</param>
      <param name="layerMask">Фильтр, используемый для обнаружения коллайдеров только на определенных слоях.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в массив результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.Linecast(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.ContactFilter2D,System.Collections.Generic.List`1&lt;UnityEngine.RaycastHit2D&gt;)">
      <summary>
        <para>Отбрасывает сегмент линии против коллайдеров в PhysicsScene2D.</para>
      </summary>
      <param name="start">Начальная точка линии в мировом пространстве.</param>
      <param name="end">Конечная точка линии в мировом пространстве.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <param name="results">Список для получения результатов.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в список результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.OverlapArea(UnityEngine.Vector2,UnityEngine.Vector2,System.Int32)">
      <summary>
        <para>Проверяет область (неповернутый прямоугольник) на наличие коллайдеров в PhysicsScene2D, возвращая только первое пересечение.</para>
      </summary>
      <param name="pointA">Один угол прямоугольника.</param>
      <param name="pointB">Угол прямоугольника, диагонально противоположный углу точки A.</param>
      <param name="layerMask">Фильтр для проверки объектов только на определенных слоях.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя и глубине Z. Обратите внимание, что нормальный угол не используется для проверки перекрытия.</param>
      <returns>
        <para>Коллайдер перекрывает область.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.OverlapArea(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.ContactFilter2D)">
      <summary>
        <para>Проверяет область (неповернутый прямоугольник) на наличие коллайдеров в PhysicsScene2D, возвращая только первое пересечение.</para>
      </summary>
      <param name="pointA">Один угол прямоугольника.</param>
      <param name="pointB">Угол прямоугольника, диагонально противоположный углу точки A.</param>
      <param name="layerMask">Фильтр для проверки объектов только на определенных слоях.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя и глубине Z. Обратите внимание, что нормальный угол не используется для проверки перекрытия.</param>
      <returns>
        <para>Коллайдер перекрывает область.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.OverlapArea(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Collider2D[],System.Int32)">
      <summary>
        <para>Проверяет область (неповернутый прямоугольник) на наличие коллайдеров в PhysicsScene2D, возвращая все пересечения.</para>
      </summary>
      <param name="pointA">Один угол прямоугольника.</param>
      <param name="pointB">Угол прямоугольника, диагонально противоположный углу точки A.</param>
      <param name="results">Массив для получения результатов. Размер массива определяет максимальное количество возвращаемых результатов.</param>
      <param name="layerMask">Фильтр для проверки объектов только на определенных слоях.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя и глубине Z. Обратите внимание, что нормальный угол не используется для проверки перекрытия.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в массив результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.OverlapArea(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.ContactFilter2D,UnityEngine.Collider2D[])">
      <summary>
        <para>Проверяет область (неповернутый прямоугольник) на наличие коллайдеров в PhysicsScene2D, возвращая все пересечения.</para>
      </summary>
      <param name="pointA">Один угол прямоугольника.</param>
      <param name="pointB">Угол прямоугольника, диагонально противоположный углу точки A.</param>
      <param name="results">Массив для получения результатов. Размер массива определяет максимальное количество возвращаемых результатов.</param>
      <param name="layerMask">Фильтр для проверки объектов только на определенных слоях.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя и глубине Z. Обратите внимание, что нормальный угол не используется для проверки перекрытия.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в массив результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.OverlapArea(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.ContactFilter2D,System.Collections.Generic.List`1&lt;UnityEngine.Collider2D&gt;)">
      <summary>
        <para>Проверяет область (неповернутый прямоугольник) на наличие коллайдеров в PhysicsScene2D, возвращая все пересечения.</para>
      </summary>
      <param name="pointA">Один угол прямоугольника.</param>
      <param name="pointB">Угол прямоугольника, диагонально противоположный углу точки A.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя и глубине Z. Обратите внимание, что нормальный угол не используется для проверки перекрытия.</param>
      <param name="results">Список для получения результатов.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в список результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.OverlapBox(UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Int32)">
      <summary>
        <para>Устанавливает флажок напротив Colliders в PhysicsScene2D, возвращая только первое пересечение.</para>
      </summary>
      <param name="point">Центр поля.</param>
      <param name="size">Размер коробки.</param>
      <param name="angle">Угол коробки.</param>
      <param name="layerMask">Фильтр для проверки объектов только на определенных слоях.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя и глубине Z. Обратите внимание, что нормальный угол не используется для проверки перекрытия.</param>
      <returns>
        <para>Коллайдер, перекрывающий поле.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.OverlapBox(UnityEngine.Vector2,UnityEngine.Vector2,System.Single,UnityEngine.ContactFilter2D)">
      <summary>
        <para>Устанавливает флажок напротив Colliders в PhysicsScene2D, возвращая только первое пересечение.</para>
      </summary>
      <param name="point">Центр поля.</param>
      <param name="size">Размер коробки.</param>
      <param name="angle">Угол коробки.</param>
      <param name="layerMask">Фильтр для проверки объектов только на определенных слоях.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя и глубине Z. Обратите внимание, что нормальный угол не используется для проверки перекрытия.</param>
      <returns>
        <para>Коллайдер, перекрывающий поле.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.OverlapBox(UnityEngine.Vector2,UnityEngine.Vector2,System.Single,UnityEngine.Collider2D[],System.Int32)">
      <summary>
        <para>Устанавливает флажок напротив Colliders в PhysicsScene2D, возвращая все пересечения.</para>
      </summary>
      <param name="point">Центр поля.</param>
      <param name="size">Размер коробки.</param>
      <param name="angle">Угол коробки.</param>
      <param name="results">Массив для получения результатов. Размер массива определяет максимальное количество возвращаемых результатов.</param>
      <param name="layerMask">Фильтр для проверки объектов только на определенных слоях.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя и глубине Z. Обратите внимание, что нормальный угол не используется для проверки перекрытия.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в массив результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.OverlapBox(UnityEngine.Vector2,UnityEngine.Vector2,System.Single,UnityEngine.ContactFilter2D,UnityEngine.Collider2D[])">
      <summary>
        <para>Устанавливает флажок напротив Colliders в PhysicsScene2D, возвращая все пересечения.</para>
      </summary>
      <param name="point">Центр поля.</param>
      <param name="size">Размер коробки.</param>
      <param name="angle">Угол коробки.</param>
      <param name="results">Массив для получения результатов. Размер массива определяет максимальное количество возвращаемых результатов.</param>
      <param name="layerMask">Фильтр для проверки объектов только на определенных слоях.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя и глубине Z. Обратите внимание, что нормальный угол не используется для проверки перекрытия.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в массив результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.OverlapBox(UnityEngine.Vector2,UnityEngine.Vector2,System.Single,UnityEngine.ContactFilter2D,System.Collections.Generic.List`1&lt;UnityEngine.Collider2D&gt;)">
      <summary>
        <para>Устанавливает флажок напротив Colliders в PhysicsScene2D, возвращая все пересечения.</para>
      </summary>
      <param name="point">Центр поля.</param>
      <param name="size">Размер коробки.</param>
      <param name="angle">Угол коробки.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя и глубине Z. Обратите внимание, что нормальный угол не используется для проверки перекрытия.</param>
      <param name="results">Список для получения результатов.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в список результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.OverlapCapsule(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.CapsuleDirection2D,System.Single,System.Int32)">
      <summary>
        <para>Проверяет капсулу на наличие коллайдеров в PhysicsScene2D, возвращая только первое пересечение.</para>
      </summary>
      <param name="point">Центр капсулы.</param>
      <param name="size">Размер капсулы.</param>
      <param name="direction">Направление капсулы.</param>
      <param name="angle">Угол капсюля.</param>
      <param name="layerMask">Фильтр для проверки объектов только на определенных слоях.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя и глубине Z. Обратите внимание, что нормальный угол не используется для проверки перекрытия.</param>
      <returns>
        <para>Коллайдер перекрывает капсулу.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.OverlapCapsule(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.CapsuleDirection2D,System.Single,UnityEngine.ContactFilter2D)">
      <summary>
        <para>Проверяет капсулу на наличие коллайдеров в PhysicsScene2D, возвращая только первое пересечение.</para>
      </summary>
      <param name="point">Центр капсулы.</param>
      <param name="size">Размер капсулы.</param>
      <param name="direction">Направление капсулы.</param>
      <param name="angle">Угол капсюля.</param>
      <param name="layerMask">Фильтр для проверки объектов только на определенных слоях.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя и глубине Z. Обратите внимание, что нормальный угол не используется для проверки перекрытия.</param>
      <returns>
        <para>Коллайдер перекрывает капсулу.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.OverlapCapsule(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.CapsuleDirection2D,System.Single,UnityEngine.Collider2D[],System.Int32)">
      <summary>
        <para>Проверяет капсулу на наличие коллайдеров в PhysicsScene2D, возвращая все пересечения.</para>
      </summary>
      <param name="point">Центр капсулы.</param>
      <param name="size">Размер капсулы.</param>
      <param name="direction">Направление капсулы.</param>
      <param name="angle">Угол капсюля.</param>
      <param name="results">Массив для получения результатов. Размер массива определяет максимальное количество возвращаемых результатов.</param>
      <param name="layerMask">Фильтр для проверки объектов только на определенных слоях.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя и глубине Z. Обратите внимание, что нормальный угол не используется для проверки перекрытия.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в массив результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.OverlapCapsule(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.CapsuleDirection2D,System.Single,UnityEngine.ContactFilter2D,UnityEngine.Collider2D[])">
      <summary>
        <para>Проверяет капсулу на наличие коллайдеров в PhysicsScene2D, возвращая все пересечения.</para>
      </summary>
      <param name="point">Центр капсулы.</param>
      <param name="size">Размер капсулы.</param>
      <param name="direction">Направление капсулы.</param>
      <param name="angle">Угол капсюля.</param>
      <param name="results">Массив для получения результатов. Размер массива определяет максимальное количество возвращаемых результатов.</param>
      <param name="layerMask">Фильтр для проверки объектов только на определенных слоях.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя и глубине Z. Обратите внимание, что нормальный угол не используется для проверки перекрытия.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в массив результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.OverlapCapsule(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.CapsuleDirection2D,System.Single,UnityEngine.ContactFilter2D,System.Collections.Generic.List`1&lt;UnityEngine.Collider2D&gt;)">
      <summary>
        <para>Проверяет капсулу на наличие коллайдеров в PhysicsScene2D, возвращая все пересечения.</para>
      </summary>
      <param name="point">Центр капсулы.</param>
      <param name="size">Размер капсулы.</param>
      <param name="direction">Направление капсулы.</param>
      <param name="angle">Угол капсюля.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя и глубине Z. Обратите внимание, что нормальный угол не используется для проверки перекрытия.</param>
      <param name="results">Список для получения результатов.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в список результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.OverlapCircle(UnityEngine.Vector2,System.Single,System.Int32)">
      <summary>
        <para>Проверяет окружность на наличие коллайдеров в PhysicsScene2D, возвращая только первое пересечение.</para>
      </summary>
      <param name="point">Центр круга.</param>
      <param name="radius">Радиус круга.</param>
      <param name="layerMask">Фильтр для проверки объектов только на определенных слоях.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя и глубине Z. Обратите внимание, что нормальный угол не используется для проверки перекрытия.</param>
      <returns>
        <para>Коллайдер перекрывает круг.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.OverlapCircle(UnityEngine.Vector2,System.Single,UnityEngine.ContactFilter2D)">
      <summary>
        <para>Проверяет окружность на наличие коллайдеров в PhysicsScene2D, возвращая только первое пересечение.</para>
      </summary>
      <param name="point">Центр круга.</param>
      <param name="radius">Радиус круга.</param>
      <param name="layerMask">Фильтр для проверки объектов только на определенных слоях.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя и глубине Z. Обратите внимание, что нормальный угол не используется для проверки перекрытия.</param>
      <returns>
        <para>Коллайдер перекрывает круг.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.OverlapCircle(UnityEngine.Vector2,System.Single,UnityEngine.Collider2D[],System.Int32)">
      <summary>
        <para>Проверяет окружность на наличие коллайдеров в PhysicsScene2D, возвращая все пересечения.</para>
      </summary>
      <param name="point">Центр круга.</param>
      <param name="radius">Радиус круга.</param>
      <param name="results">Массив для получения результатов. Размер массива определяет максимальное количество возвращаемых результатов.</param>
      <param name="layerMask">Фильтр для проверки объектов только на определенных слоях.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя и глубине Z. Обратите внимание, что нормальный угол не используется для проверки перекрытия.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в массив результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.OverlapCircle(UnityEngine.Vector2,System.Single,UnityEngine.ContactFilter2D,UnityEngine.Collider2D[])">
      <summary>
        <para>Проверяет окружность на наличие коллайдеров в PhysicsScene2D, возвращая все пересечения.</para>
      </summary>
      <param name="point">Центр круга.</param>
      <param name="radius">Радиус круга.</param>
      <param name="results">Массив для получения результатов. Размер массива определяет максимальное количество возвращаемых результатов.</param>
      <param name="layerMask">Фильтр для проверки объектов только на определенных слоях.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя и глубине Z. Обратите внимание, что нормальный угол не используется для проверки перекрытия.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в массив результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.OverlapCircle(UnityEngine.Vector2,System.Single,UnityEngine.ContactFilter2D,System.Collections.Generic.List`1&lt;UnityEngine.Collider2D&gt;)">
      <summary>
        <para>Проверяет окружность на наличие коллайдеров в PhysicsScene2D, возвращая все пересечения.</para>
      </summary>
      <param name="point">Центр круга.</param>
      <param name="radius">Радиус круга.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя и глубине Z. Обратите внимание, что нормальный угол не используется для проверки перекрытия.</param>
      <param name="results">Список для получения результатов.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в список результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.OverlapCollider(UnityEngine.Collider2D,UnityEngine.Collider2D[],System.Int32)">
      <summary>
        <para>Проверяет коллайдер на наличие коллайдеров в PhysicsScene2D, возвращая все пересечения.</para>
      </summary>
      <param name="collider">Коллайдер, определяющий область, используемую для запроса перекрытий других коллайдеров.</param>
      <param name="results">Массив для получения результатов. Размер массива определяет максимальное количество возвращаемых результатов.</param>
      <param name="layerMask">Фильтр для проверки объектов только на определенных слоях.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя и глубине Z. Обратите внимание, что нормальный угол не используется для проверки перекрытия.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в массив результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.OverlapCollider(UnityEngine.Collider2D,UnityEngine.ContactFilter2D,UnityEngine.Collider2D[])">
      <summary>
        <para>Проверяет коллайдер на наличие коллайдеров в PhysicsScene2D, возвращая все пересечения.</para>
      </summary>
      <param name="collider">Коллайдер, определяющий область, используемую для запроса перекрытий других коллайдеров.</param>
      <param name="results">Массив для получения результатов. Размер массива определяет максимальное количество возвращаемых результатов.</param>
      <param name="layerMask">Фильтр для проверки объектов только на определенных слоях.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя и глубине Z. Обратите внимание, что нормальный угол не используется для проверки перекрытия.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в массив результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.OverlapCollider(UnityEngine.Collider2D,UnityEngine.ContactFilter2D,System.Collections.Generic.List`1&lt;UnityEngine.Collider2D&gt;)">
      <summary>
        <para>Проверяет коллайдер на наличие коллайдеров в PhysicsScene2D, возвращая все пересечения.</para>
      </summary>
      <param name="collider">Коллайдер, определяющий область, используемую для запроса перекрытий других коллайдеров.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя и глубине Z. Обратите внимание, что нормальный угол не используется для проверки перекрытия.</param>
      <param name="results">Список для получения результатов.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в список результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.OverlapPoint(UnityEngine.Vector2,System.Int32)">
      <summary>
        <para>Проверяет точку относительно коллайдеров в PhysicsScene2D, возвращая только первое пересечение.</para>
      </summary>
      <param name="point">Точка в мировом пространстве.</param>
      <param name="layerMask">Фильтр для проверки объектов только на определенных слоях.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя и глубине Z. Обратите внимание, что нормальный угол не используется для проверки перекрытия.</param>
      <returns>
        <para>Коллайдер перекрывает точку.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.OverlapPoint(UnityEngine.Vector2,UnityEngine.ContactFilter2D)">
      <summary>
        <para>Проверяет точку относительно коллайдеров в PhysicsScene2D, возвращая только первое пересечение.</para>
      </summary>
      <param name="point">Точка в мировом пространстве.</param>
      <param name="layerMask">Фильтр для проверки объектов только на определенных слоях.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя и глубине Z. Обратите внимание, что нормальный угол не используется для проверки перекрытия.</param>
      <returns>
        <para>Коллайдер перекрывает точку.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.OverlapPoint(UnityEngine.Vector2,UnityEngine.Collider2D[],System.Int32)">
      <summary>
        <para>Проверяет точку относительно коллайдеров в PhysicsScene2D, возвращая все пересечения.</para>
      </summary>
      <param name="point">Точка в мировом пространстве.</param>
      <param name="results">Массив для получения результатов. Размер массива определяет максимальное количество возвращаемых результатов.</param>
      <param name="layerMask">Фильтр для проверки объектов только на определенных слоях.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя и глубине Z. Обратите внимание, что нормальный угол не используется для проверки перекрытия.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в массив результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.OverlapPoint(UnityEngine.Vector2,UnityEngine.ContactFilter2D,UnityEngine.Collider2D[])">
      <summary>
        <para>Проверяет точку относительно коллайдеров в PhysicsScene2D, возвращая все пересечения.</para>
      </summary>
      <param name="point">Точка в мировом пространстве.</param>
      <param name="results">Массив для получения результатов. Размер массива определяет максимальное количество возвращаемых результатов.</param>
      <param name="layerMask">Фильтр для проверки объектов только на определенных слоях.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя и глубине Z. Обратите внимание, что нормальный угол не используется для проверки перекрытия.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в массив результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.OverlapPoint(UnityEngine.Vector2,UnityEngine.ContactFilter2D,System.Collections.Generic.List`1&lt;UnityEngine.Collider2D&gt;)">
      <summary>
        <para>Проверяет точку относительно коллайдеров в PhysicsScene2D, возвращая все пересечения.</para>
      </summary>
      <param name="point">Точка в мировом пространстве.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя и глубине Z. Обратите внимание, что нормальный угол не используется для проверки перекрытия.</param>
      <param name="results">Список для получения результатов.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в список результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.Raycast(UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Int32)">
      <summary>
        <para>Направляет луч на коллайдеры в PhysicsScene2D, возвращая только первое пересечение.</para>
      </summary>
      <param name="origin">Точка в 2D-пространстве, где начинается луч.</param>
      <param name="direction">Вектор, представляющий направление луча.</param>
      <param name="distance">Максимальное расстояние, на которое можно передать луч.</param>
      <param name="layerMask">Фильтр, используемый для обнаружения коллайдеров только на определенных слоях.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя и глубине Z или нормальному углу.</param>
      <returns>
        <para>Возвращены результаты приведения.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.Raycast(UnityEngine.Vector2,UnityEngine.Vector2,System.Single,UnityEngine.ContactFilter2D)">
      <summary>
        <para>Направляет луч на коллайдеры в PhysicsScene2D, возвращая только первое пересечение.</para>
      </summary>
      <param name="origin">Точка в 2D-пространстве, где начинается луч.</param>
      <param name="direction">Вектор, представляющий направление луча.</param>
      <param name="distance">Максимальное расстояние, на которое можно передать луч.</param>
      <param name="layerMask">Фильтр, используемый для обнаружения коллайдеров только на определенных слоях.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя и глубине Z или нормальному углу.</param>
      <returns>
        <para>Возвращены результаты приведения.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.Raycast(UnityEngine.Vector2,UnityEngine.Vector2,System.Single,UnityEngine.RaycastHit2D[],System.Int32)">
      <summary>
        <para>Отбрасывает луч против коллайдеров PhysicsScene2D, возвращая все пересечения.</para>
      </summary>
      <param name="origin">Точка в 2D-пространстве, где начинается луч.</param>
      <param name="direction">Вектор, представляющий направление луча.</param>
      <param name="distance">Максимальное расстояние, на которое можно передать луч.</param>
      <param name="layerMask">Фильтр, используемый для обнаружения коллайдеров только на определенных слоях.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя и глубине Z или нормальному углу.</param>
      <param name="results">Массив для получения результатов. Размер массива определяет максимальное количество возвращаемых результатов.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в массив результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.Raycast(UnityEngine.Vector2,UnityEngine.Vector2,System.Single,UnityEngine.ContactFilter2D,UnityEngine.RaycastHit2D[])">
      <summary>
        <para>Отбрасывает луч против коллайдеров PhysicsScene2D, возвращая все пересечения.</para>
      </summary>
      <param name="origin">Точка в 2D-пространстве, где начинается луч.</param>
      <param name="direction">Вектор, представляющий направление луча.</param>
      <param name="distance">Максимальное расстояние, на которое можно передать луч.</param>
      <param name="layerMask">Фильтр, используемый для обнаружения коллайдеров только на определенных слоях.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя и глубине Z или нормальному углу.</param>
      <param name="results">Массив для получения результатов. Размер массива определяет максимальное количество возвращаемых результатов.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в массив результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.Raycast(UnityEngine.Vector2,UnityEngine.Vector2,System.Single,UnityEngine.ContactFilter2D,System.Collections.Generic.List`1&lt;UnityEngine.RaycastHit2D&gt;)">
      <summary>
        <para>Отбрасывает луч против Colliders PhysicsScene2D, возвращая все пересечения.</para>
      </summary>
      <param name="origin">Точка в 2D-пространстве, где начинается луч.</param>
      <param name="direction">Вектор, представляющий направление луча.</param>
      <param name="distance">Максимальное расстояние, на которое можно передать луч.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя и глубине Z или нормальному углу.</param>
      <param name="results">Список для получения результатов.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в список результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsScene2D.Simulate(System.Single)">
      <summary>
        <para>Имитировать физику, связанную с этой PhysicsScene.</para>
      </summary>
      <param name="step">Настало время продвинуть физику.</param>
      <returns>
        <para>Была ли запущена симуляция или нет. Запуск симуляции во время обратных вызовов физики всегда завершается ошибкой.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.PhysicsSceneExtensions2D">
      <summary>
        <para>Расширения сцены для доступа к базовой физической сцене.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.PhysicsSceneExtensions2D.GetPhysicsScene2D(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Метод расширения, возвращающий 2D-физическую сцену из сцены.</para>
      </summary>
      <param name="scene">Сцена, из которой возвращается сцена 2D-физики.</param>
      <returns>
        <para>Сцена 2D-физики, используемая сценой.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.PhysicsShape2D">
      <summary>
        <para>Представляет эффективную низкоуровневую физическую форму, используемую физическим движком.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PhysicsShape2D.adjacentEnd">
      <summary>
        <para>Определяет положение виртуальной точки рядом с конечной вершиной формы ребра.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PhysicsShape2D.adjacentStart">
      <summary>
        <para>Определяет положение виртуальной точки рядом с начальной вершиной формы ребра.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PhysicsShape2D.radius">
      <summary>
        <para>Радиус формы.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PhysicsShape2D.shapeType">
      <summary>
        <para>Тип формы определяет, как вершины и радиус используются этим PhysicsShape2D.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PhysicsShape2D.useAdjacentEnd">
      <summary>
        <para>Когда значение равно true, фигура будет использовать функцию PhysicsShape2D.adjacentEnd|adjacentEnd. Если значение равно false, фигура не будет использовать функцию PhysicsShape2D.adjacentEnd|adjacentEnd.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PhysicsShape2D.useAdjacentStart">
      <summary>
        <para>Когда значение равно true, фигура будет использовать функцию PhysicsShape2D.adjacentStart|adjacentStart. Если значение равно false, фигура не будет использовать функцию PhysicsShape2D.adjacentEnd|adjacentStart.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PhysicsShape2D.vertexCount">
      <summary>
        <para>Общее количество вершин, используемых для представления типа фигуры PhysicsShape2D.shapeType|.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PhysicsShape2D.vertexStartIndex">
      <summary>
        <para>Начальный индекс геометрии этой формы в PhysicsShapeGroup2D.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.PhysicsShapeGroup2D">
      <summary>
        <para>Представляет группу PhysicsShape2D и их геометрию.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PhysicsShapeGroup2D.localToWorldMatrix">
      <summary>
        <para>Получает или задает матрицу, преобразующую вершины PhysicsShapeGroup2D из локального пространства в мировое.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PhysicsShapeGroup2D.shapeCount">
      <summary>
        <para>Общее количество объектов PhysicsShape2D в группе фигур. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PhysicsShapeGroup2D.vertexCount">
      <summary>
        <para>Общее количество вершин в группе форм, используемых для представления всех объектов PhysicsShape2D в ней. (Только чтение)</para>
      </summary>
    </member>
    <member name="M:UnityEngine.PhysicsShapeGroup2D.Add(UnityEngine.PhysicsShapeGroup2D)">
      <summary>
        <para>Добавляет копию всех PhysicsShape2D и их геометрию из указанной physicsShapeGroup в эту группу фигур. Указанная физикаShapeGroup не изменена.</para>
      </summary>
      <param name="physicsShapeGroup">PhysicsShapeGroup2D для добавления в эту группу фигур. (Только чтение)</param>
    </member>
    <member name="M:UnityEngine.PhysicsShapeGroup2D.AddBox(UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Single)">
      <summary>
        <para>Добавляет фигуру блока (PhysicsShapeType2D.Polygon) в группу фигур.</para>
      </summary>
      <param name="center">Центральная точка формы коробки. Это аналогично Collider2D.offset.</param>
      <param name="size">Размер коробки. Это идентично BoxCollider2D.size.</param>
      <param name="angle">Угол в градусах, на который блок должен быть повернут вокруг центра.</param>
      <param name="edgeRadius">Радиус, охватывающий края коробки. Это идентично BoxCollider2D.edgeRadius.</param>
      <returns>
        <para>Возвращает индекс формы, к которой была добавлена ​​форма в PhysicsShapeGroup2D. Этот индекс используется в качестве основной ссылки при извлечении формы.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsShapeGroup2D.AddCapsule(UnityEngine.Vector2,UnityEngine.Vector2,System.Single)">
      <summary>
        <para>Добавляет фигуру-капсулу (PhysicsShapeType2D.Capsule) в группу фигур.</para>
      </summary>
      <param name="vertex0">Положение одного конца формы капсулы. Эта точка представляет собой центральную точку логического круга на конце капсулы.</param>
      <param name="vertex1">Положение противоположного конца формы капсулы. Эта точка представляет собой центральную точку логического круга на противоположном конце капсулы.</param>
      <param name="radius">Радиус капсулы, определяющий радиус вокруг вершин 0 и vertex1 и площадь между ними.</param>
      <returns>
        <para>Возвращает индекс формы, к которой была добавлена ​​форма в PhysicsShapeGroup2D. Этот индекс используется в качестве основной ссылки при извлечении формы.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsShapeGroup2D.AddCircle(UnityEngine.Vector2,System.Single)">
      <summary>
        <para>Добавляет фигуру круга (PhysicsShapeType2D.Circle) в группу фигур.</para>
      </summary>
      <param name="center">Центральная точка формы круга. Это аналогично Collider2D.offset.</param>
      <param name="radius">Радиус окружности, определяющий радиус вокруг центра. Это идентично CircleCollider2D.radius.</param>
      <returns>
        <para>Возвращает индекс формы, к которой была добавлена ​​форма в PhysicsShapeGroup2D. Этот индекс используется в качестве основной ссылки при извлечении формы.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsShapeGroup2D.AddEdges(System.Collections.Generic.List`1&lt;UnityEngine.Vector2&gt;,System.Single)">
      <summary>
        <para>Добавляет фигуру ребер (PhysicsShapeType2D.Edges) в группу фигур.</para>
      </summary>
      <param name="vertices">Список вершин, представляющих непрерывный набор ребер, где каждая вершина соединяется со следующей вершиной, образуя каждое ребро.</param>
      <param name="edgeRadius">Радиус, охватывающий каждое ребро. Это идентично EdgeCollider2D.edgeRadius.</param>
      <returns>
        <para>Возвращает индекс формы, к которой была добавлена ​​форма в PhysicsShapeGroup2D. Этот индекс используется в качестве основной ссылки при извлечении формы.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsShapeGroup2D.AddEdges(System.Collections.Generic.List`1&lt;UnityEngine.Vector2&gt;,System.Boolean,System.Boolean,UnityEngine.Vector2,UnityEngine.Vector2,System.Single)">
      <summary>
        <para>Добавляет форму ребра (PhysicsShapeType2D.Edges) в группу фигур, поддерживающую соседние начальную и конечную вершины.</para>
      </summary>
      <param name="vertices">Список вершин, представляющих непрерывный набор ребер, где каждая вершина соединяется со следующей вершиной, образуя каждое ребро.</param>
      <param name="edgeRadius">Радиус, охватывающий каждое ребро. Это идентично EdgeCollider2D.edgeRadius.</param>
      <param name="useAdjacentStart">Когда значение равно true, используется аргумент смежныйстарт. Если значение равно false, аргумент смежныйстарт не используется.</param>
      <param name="useAdjacentEnd">Когда значение равно true, используется аргумент смежный конец. Если значение равно false, аргумент смежныйКонец не используется.</param>
      <param name="adjacentStart">Определяет положение виртуальной точки рядом с начальной вершиной формы ребра.</param>
      <param name="adjacentEnd">Определяет положение виртуальной точки рядом с конечной вершиной формы ребра.</param>
      <returns>
        <para>Возвращает индекс формы, к которой была добавлена ​​форма в PhysicsShapeGroup2D. Этот индекс используется в качестве основной ссылки при извлечении формы.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsShapeGroup2D.AddPolygon(System.Collections.Generic.List`1&lt;UnityEngine.Vector2&gt;)">
      <summary>
        <para>Добавляет фигуру многоугольника (PhysicsShapeType2D.Polygon) в группу фигур.</para>
      </summary>
      <param name="vertices">Список вершин, представляющих непрерывный набор ребер выпуклого многоугольника, где каждая вершина соединяется со следующей вершиной, образуя каждое ребро. Последняя вершина неявно соединяется с первой вершиной. Максимально допустимая длина списка определяется Physics2D.MaxPolygonShapeVertices.</param>
      <returns>
        <para>Возвращает индекс формы, к которой была добавлена ​​форма в PhysicsShapeGroup2D. Этот индекс используется в качестве основной ссылки при извлечении формы.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsShapeGroup2D.Clear">
      <summary>
        <para>Удаляет все вершины и фигуры из PhysicsShapeGroup.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.PhysicsShapeGroup2D.#ctor(System.Int32,System.Int32)">
      <summary>
        <para>Инициализирует и возвращает экземпляр PhysicsShapeGroup2D. Группа фигур будет пустой и готова к использованию Collider2D.GetShapes, Rigidbody2D.GetShapes или добавлению фигур вручную.</para>
      </summary>
      <param name="shapeCapacity">Исходная емкость списка PhysicsShape2D, используемая для хранения фигур.</param>
      <param name="vertexCapacity">Исходная емкость списка Vector2|vertices, используемого для хранения геометрии формы.</param>
    </member>
    <member name="M:UnityEngine.PhysicsShapeGroup2D.DeleteShape(System.Int32)">
      <summary>
        <para>При уничтожении фигуры с указанным shapeIndex индексы фигур всех других фигур, которые существуют выше указанного shapeIndex, будут соответствующим образом обновлены.</para>
      </summary>
      <param name="shapeIndex">Индекс формы, в которой хранится PhysicsShapeGroup2D.</param>
    </member>
    <member name="M:UnityEngine.PhysicsShapeGroup2D.GetShape(System.Int32)">
      <summary>
        <para>Получает PhysicsShape2D, хранящийся в указанном shapeIndex.</para>
      </summary>
      <param name="shapeIndex">Индекс формы, в которой хранится PhysicsShapeGroup2D. Индекс формы начинается с нуля, а группа фигур имеет количество фигур, указанное в PhysicsShapeGroup2D.shapeCount|shapeCount.</param>
      <returns>
        <para>Возвращает форму, сохраненную в указанном shapeIndex.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsShapeGroup2D.GetShapeData(System.Collections.Generic.List`1&lt;UnityEngine.PhysicsShape2D&gt;,System.Collections.Generic.List`1&lt;UnityEngine.Vector2&gt;)">
      <summary>
        <para>Получает копию фигур и вершин в PhysicsShapeGroup2D.</para>
      </summary>
      <param name="shapes">Список, который будет заполнен копиями всех фигур в PhysicsShapeGroup2D.</param>
      <param name="vertices">Список, который будет заполнен копиями всех вершин в PhysicsShapeGroup2D.</param>
    </member>
    <member name="M:UnityEngine.PhysicsShapeGroup2D.GetShapeData(Unity.Collections.NativeArray`1&lt;UnityEngine.PhysicsShape2D&gt;,Unity.Collections.NativeArray`1&lt;UnityEngine.Vector2&gt;)">
      <summary>
        <para>Получает копию фигур и вершин в PhysicsShapeGroup2D.</para>
      </summary>
      <param name="shapes">Массив NativeArray, который будет заполнен копиями всех фигур в PhysicsShapeGroup2D.</param>
      <param name="vertices">NativeArray, который будет заполнен копиями всех вершин в PhysicsShapeGroup2D.</param>
    </member>
    <member name="M:UnityEngine.PhysicsShapeGroup2D.GetShapeVertex(System.Int32,System.Int32)">
      <summary>
        <para>Получает одну вершину фигуры. Индекс вершины отсчитывается от нуля, а фигура имеет количество вершин, указанное в PhysicsShape2D.vertexCount.</para>
      </summary>
      <param name="shapeIndex">Индекс формы, хранящийся в PhysicsShapeGroup2D. Индекс формы начинается с нуля, а группа фигур имеет количество фигур, указанное в PhysicsShapeGroup2D.shapeCount|shapeCount.</param>
      <param name="vertexIndex">Индекс вершины формы, хранящийся в PhysicsShapeGroup2D. Индекс вершины отсчитывается от нуля, а фигура имеет количество вершин, указанное в PhysicsShape2D.vertexCount.</param>
      <returns>
        <para>Возвращает указанную вершину формы.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PhysicsShapeGroup2D.GetShapeVertices(System.Int32,System.Collections.Generic.List`1&lt;UnityEngine.Vector2&gt;)">
      <summary>
        <para>Получает копию вершин фигуры в PhysicsShapeGroup2D.</para>
      </summary>
      <param name="shapeIndex">Индекс формы, хранящийся в PhysicsShapeGroup2D. Индекс формы начинается с нуля, а группа фигур имеет количество фигур, указанное в PhysicsShapeGroup2D.shapeCount|shapeCount.</param>
      <param name="vertices">Список, который будет заполнен копиями всех вершин формы в PhysicsShapeGroup2D.</param>
    </member>
    <member name="M:UnityEngine.PhysicsShapeGroup2D.SetShapeAdjacentVertices(System.Int32,System.Boolean,System.Boolean,UnityEngine.Vector2,UnityEngine.Vector2)">
      <summary>
        <para>Задает смежные вершины фигуры.</para>
      </summary>
      <param name="shapeIndex">Индекс изменяемой формы, хранящийся в PhysicsShapeGroup2D.</param>
      <param name="useAdjacentStart">Задает свойство PhysicsShape2D.useAdjacentStart выбранной фигуры.</param>
      <param name="useAdjacentEnd">Задает свойство PhysicsShape2D.useAdjacentEnd выбранной фигуры.</param>
      <param name="adjacentStart">Задает свойство PhysicsShape2D.adjacentStart выбранной фигуры.</param>
      <param name="adjacentEnd">Задает свойство PhysicsShape2D.adjacentEnd выбранной фигуры.</param>
    </member>
    <member name="M:UnityEngine.PhysicsShapeGroup2D.SetShapeRadius(System.Int32,System.Single)">
      <summary>
        <para>Устанавливает радиус формы.</para>
      </summary>
      <param name="shapeIndex">Индекс формы, хранящийся в PhysicsShapeGroup2D. Индекс формы начинается с нуля, а группа фигур имеет количество фигур, указанное в PhysicsShapeGroup2D.shapeCount|shapeCount.</param>
      <param name="radius">Значение для установки радиуса формы.</param>
    </member>
    <member name="M:UnityEngine.PhysicsShapeGroup2D.SetShapeVertex(System.Int32,System.Int32,UnityEngine.Vector2)">
      <summary>
        <para>Задает одну вершину фигуры.</para>
      </summary>
      <param name="shapeIndex">Индекс формы, хранящийся в PhysicsShapeGroup2D. Индекс формы начинается с нуля, а группа фигур имеет количество фигур, указанное в PhysicsShapeGroup2D.shapeCount|shapeCount.</param>
      <param name="vertexIndex">Индекс вершины формы, хранящийся в PhysicsShapeGroup2D. Индекс вершины отсчитывается от нуля, а фигура имеет количество вершин, указанное в PhysicsShape2D.vertexCount.</param>
      <param name="vertex">Значение для установки вершины формы.</param>
    </member>
    <member name="T:UnityEngine.PhysicsShapeType2D">
      <summary>
        <para>Параметры для указания, какой тип примитивной формы используется для интерпретации геометрии, содержащейся в объекте PhysicsShape2D.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.PhysicsShapeType2D.Capsule">
      <summary>
        <para>Используйте форму капсулы для интерпретации геометрии PhysicsShape2D.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.PhysicsShapeType2D.Circle">
      <summary>
        <para>Используйте форму круга для интерпретации геометрии PhysicsShape2D.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.PhysicsShapeType2D.Edges">
      <summary>
        <para>Используйте несколько ребер для интерпретации геометрии PhysicsShape2D.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.PhysicsShapeType2D.Polygon">
      <summary>
        <para>Используйте форму выпуклого многоугольника для интерпретации геометрии PhysicsShape2D.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.PhysicsUpdateBehaviour2D">
      <summary>
        <para>Базовый тип для компонентов 2D-физики, требующих обратного вызова во время FixedUpdate.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.PlatformEffector2D">
      <summary>
        <para>Применяет «платформенное» поведение, такое как односторонние столкновения и т. д.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PlatformEffector2D.oneWay">
      <summary>
        <para>Следует ли использовать одностороннее столкновение или нет.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PlatformEffector2D.rotationalOffset">
      <summary>
        <para>Угол смещения от локального «вверх».</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PlatformEffector2D.sideAngleVariance">
      <summary>
        <para>Угловая дисперсия сосредоточена по бокам платформы. Нулевой угол соответствует только сторонам под углом 90 градусов к «верху» платформы.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PlatformEffector2D.sideArc">
      <summary>
        <para>Угол дуги, которая определяет стороны платформы с центром в локальных точках «слева» и «справа» от эффектора. Любые нормали столкновений в пределах этой дуги учитываются для «бокового» поведения.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PlatformEffector2D.sideBounce">
      <summary>
        <para>Должен ли использоваться отскок на сторонах платформы или нет.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PlatformEffector2D.sideFriction">
      <summary>
        <para>Следует ли использовать трение по бокам платформы или нет.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PlatformEffector2D.surfaceArc">
      <summary>
        <para>Угол дуги, определяющей поверхность платформы с центром в локальном «верху» эффектора.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PlatformEffector2D.useOneWay">
      <summary>
        <para>Следует ли использовать одностороннее столкновение?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PlatformEffector2D.useOneWayGrouping">
      <summary>
        <para>Гарантирует, что все контакты, управляемые односторонним поведением, действуют одинаково.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PlatformEffector2D.useSideBounce">
      <summary>
        <para>Следует ли использовать отскок на сторонах платформы?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PlatformEffector2D.useSideFriction">
      <summary>
        <para>Следует ли использовать трение по бокам платформы?</para>
      </summary>
    </member>
    <member name="T:UnityEngine.PointEffector2D">
      <summary>
        <para>Применяет силы для притяжения/отталкивания точки.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PointEffector2D.angularDrag">
      <summary>
        <para>Угловое сопротивление, применяемое к твердым телам.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PointEffector2D.distanceScale">
      <summary>
        <para>Масштаб, применяемый к расчетному расстоянию между источником и целью.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PointEffector2D.drag">
      <summary>
        <para>Линейное сопротивление, применяемое к твердым телам.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PointEffector2D.forceMagnitude">
      <summary>
        <para>Величина прилагаемой силы.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PointEffector2D.forceMode">
      <summary>
        <para>Режим, используемый для приложения силы эффектора.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PointEffector2D.forceSource">
      <summary>
        <para>Источник, который используется для расчета центральной точки эффектора. От этой точки определяется расстояние до цели.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PointEffector2D.forceTarget">
      <summary>
        <para>Цель, к которой исполнитель прикладывает любую силу.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PointEffector2D.forceVariation">
      <summary>
        <para>Изменение величины прилагаемой силы.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.PolygonCollider2D">
      <summary>
        <para>Коллайдер для 2D-физики, представляющий произвольный многоугольник, определяемый его вершинами.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PolygonCollider2D.autoTiling">
      <summary>
        <para>Определяет, будет ли форма PolygonCollider2D автоматически обновляться на основе свойств листов SpriteRenderer.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PolygonCollider2D.pathCount">
      <summary>
        <para>Количество путей в полигоне.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.PolygonCollider2D.points">
      <summary>
        <para>Угловые точки, определяющие форму коллайдера в локальном пространстве.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.PolygonCollider2D.CreatePrimitive(System.Int32,UnityEngine.Vector2,UnityEngine.Vector2)">
      <summary>
        <para>Создается как обычный примитивный многоугольник с указанным количеством сторон.</para>
      </summary>
      <param name="sides">Количество сторон в многоугольнике. Должно быть больше двух.</param>
      <param name="scale">Масштаб X/Y многоугольника. Они должны быть больше нуля.</param>
      <param name="offset">Смещение многоугольника по осям X/Y.</param>
    </member>
    <member name="M:UnityEngine.PolygonCollider2D.GetPath(System.Int32)">
      <summary>
        <para>Получает путь из коллайдера по его индексу.</para>
      </summary>
      <param name="index">Индекс пути для получения.</param>
      <returns>
        <para>Упорядоченный массив вершин (точек) выбранного пути.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PolygonCollider2D.GetPath(System.Int32,System.Collections.Generic.List`1&lt;UnityEngine.Vector2&gt;)">
      <summary>
        <para>Получает путь из коллайдера по его индексу.</para>
      </summary>
      <param name="index">Индекс пути для получения.</param>
      <param name="points">Упорядоченный список вершин (точек) выбранного пути.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в список точек.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.PolygonCollider2D.GetTotalPointCount">
      <summary>
        <para>Возвращает общее количество точек в многоугольнике во всех путях.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.PolygonCollider2D.SetPath(System.Int32,UnityEngine.Vector2[])">
      <summary>
        <para>Определите путь по его составляющим точкам.</para>
      </summary>
      <param name="index">Индекс пути для установки.</param>
      <param name="points">Упорядоченный массив вершин (точек), определяющих путь.</param>
    </member>
    <member name="M:UnityEngine.PolygonCollider2D.SetPath(System.Int32,System.Collections.Generic.List`1&lt;UnityEngine.Vector2&gt;)">
      <summary>
        <para>Определите путь по его составляющим точкам.</para>
      </summary>
      <param name="index">Индекс пути для установки.</param>
      <param name="points">Упорядоченный список вершин (точек), определяющих путь.</param>
    </member>
    <member name="T:UnityEngine.RaycastHit2D">
      <summary>
        <para>Возвращаемая информация об объекте, обнаруженном raycast в 2D-физике.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RaycastHit2D.centroid">
      <summary>
        <para>Центр тяжести примитива, используемого для выполнения приведения.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RaycastHit2D.collider">
      <summary>
        <para>Коллайдер поражен лучом.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RaycastHit2D.distance">
      <summary>
        <para>Расстояние от начала луча до точки падения.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RaycastHit2D.fraction">
      <summary>
        <para>Доля расстояния вдоль луча, на котором произошло попадание.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RaycastHit2D.normal">
      <summary>
        <para>Вектор нормали к поверхности, на которую падает луч.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RaycastHit2D.point">
      <summary>
        <para>Точка в мировом пространстве, где луч попадает на поверхность коллайдера.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RaycastHit2D.rigidbody">
      <summary>
        <para>Rigidbody2D, прикрепленный к объекту, в который попали.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RaycastHit2D.transform">
      <summary>
        <para>Преобразование объекта, в который попали.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.RelativeJoint2D">
      <summary>
        <para>Сохраняет два Rigidbody2D в их относительной ориентации.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RelativeJoint2D.angularOffset">
      <summary>
        <para>Текущее угловое смещение между Rigidbody2D, которое соединяет соединение.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RelativeJoint2D.autoConfigureOffset">
      <summary>
        <para>Должны ли и linearOffset, и angularOffset рассчитываться автоматически?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RelativeJoint2D.correctionScale">
      <summary>
        <para>Масштабирует как линейные, так и угловые силы, используемые для корректировки требуемой относительной ориентации.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RelativeJoint2D.linearOffset">
      <summary>
        <para>Текущее линейное смещение между Rigidbody2D, которое соединяет соединение.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RelativeJoint2D.maxForce">
      <summary>
        <para>Максимальное усилие, которое может быть создано при попытке сохранить относительное ограничение соединения.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RelativeJoint2D.maxTorque">
      <summary>
        <para>Максимальный крутящий момент, который может быть создан при попытке сохранить относительное ограничение соединения.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RelativeJoint2D.target">
      <summary>
        <para>Позиция в мировом пространстве, которую в настоящее время пытаются сохранить.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Rigidbody2D">
      <summary>
        <para>Компонент физики твердого тела для 2D-спрайтов.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.angularDrag">
      <summary>
        <para>Коэффициент углового сопротивления.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.angularVelocity">
      <summary>
        <para>Угловая скорость в градусах в секунду.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.attachedColliderCount">
      <summary>
        <para>Возвращает количество Collider2D, прикрепленных к этому Rigidbody2D.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.bodyType">
      <summary>
        <para>Тип физического поведения Rigidbody2D.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.centerOfMass">
      <summary>
        <para>Центр масс RigidBody в локальном пространстве.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.collisionDetectionMode">
      <summary>
        <para>Метод, используемый физическим движком для проверки столкновения двух объектов.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.constraints">
      <summary>
        <para>Определяет, какие степени свободы разрешены для моделирования этого Rigidbody2D.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.drag">
      <summary>
        <para>Коэффициент аэродинамического сопротивления.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.fixedAngle">
      <summary>
        <para>Следует ли предотвратить вращение твердого тела?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.freezeRotation">
      <summary>
        <para>Определяет, будет ли физика изменять вращение объекта.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.gravityScale">
      <summary>
        <para>Степень воздействия гравитации на этот объект.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.inertia">
      <summary>
        <para>Сопротивление Rigidbody изменению угловой скорости (вращению).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.interpolation">
      <summary>
        <para>Между обновлениями используется физическая интерполяция.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.isKinematic">
      <summary>
        <para>Следует ли вывести это твердое тело из-под контроля физики?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.mass">
      <summary>
        <para>Масса твердого тела.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.position">
      <summary>
        <para>Положение твердого тела.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.rotation">
      <summary>
        <para>Вращение твердого тела.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.sharedMaterial">
      <summary>
        <para>PhysicsMaterial2D, который применяется ко всем Collider2D, присоединенным к этому Rigidbody2D.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.simulated">
      <summary>
        <para>Указывает, должно ли физическое тело моделировать твердое тело или нет.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.sleepMode">
      <summary>
        <para>Состояние сна, в котором первоначально будет находиться твердое тело.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.useAutoMass">
      <summary>
        <para>Должна ли общая масса твердого тела автоматически рассчитываться из Collider2D.density прикрепленных коллайдеров?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.useFullKinematicContacts">
      <summary>
        <para>Должны ли быть разрешены кинематикинематические и кинематикостатические столкновения?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.velocity">
      <summary>
        <para>Линейная скорость Rigidbody в единицах в секунду.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Rigidbody2D.worldCenterOfMass">
      <summary>
        <para>Получает центр масс RigidBody в глобальном пространстве.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.AddForce(UnityEngine.Vector2,UnityEngine.ForceMode2D)">
      <summary>
        <para>Примените силу к твердому телу.</para>
      </summary>
      <param name="force">Составляющие силы по осям X и Y.</param>
      <param name="mode">Метод, используемый для приложения указанной силы.</param>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.AddForceAtPosition(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.ForceMode2D)">
      <summary>
        <para>Применить силу в заданной точке пространства.</para>
      </summary>
      <param name="force">Составляющие силы по осям X и Y.</param>
      <param name="position">Позиция в мировом пространстве для применения силы.</param>
      <param name="mode">Метод, используемый для приложения указанной силы.</param>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.AddRelativeForce(UnityEngine.Vector2,UnityEngine.ForceMode2D)">
      <summary>
        <para>Добавляет силу к hardbody2D относительно его системы координат.</para>
      </summary>
      <param name="relativeForce">Составляющие силы по осям X и Y.</param>
      <param name="mode">Метод, используемый для приложения указанной силы.</param>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.AddTorque(System.Single,UnityEngine.ForceMode2D)">
      <summary>
        <para>Примените крутящий момент к центру масс твердого тела.</para>
      </summary>
      <param name="torque">Крутящий момент для применения.</param>
      <param name="mode">Используемый принудительный режим.</param>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.Cast(UnityEngine.Vector2,UnityEngine.RaycastHit2D[],System.Single)">
      <summary>
        <para>Все формы Collider2D, прикрепленные к Rigidbody2D, отбрасываются в сцену, начиная с каждой позиции коллайдера, игнорируя коллайдеры, прикрепленные к тому же Rigidbody2D.</para>
      </summary>
      <param name="direction">Вектор, представляющий направление приведения каждой формы Collider2D.</param>
      <param name="results">Массив для получения результатов.</param>
      <param name="distance">Максимальное расстояние, на которое можно применить коллайдер(ы).</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в массив результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.Cast(UnityEngine.Vector2,UnityEngine.ContactFilter2D,UnityEngine.RaycastHit2D[],System.Single)">
      <summary>
        <para>Все формы Collider2D, прикрепленные к Rigidbody2D, отбрасываются в сцену, начиная с каждой позиции коллайдера, игнорируя коллайдеры, прикрепленные к тому же Rigidbody2D.</para>
      </summary>
      <param name="direction">Вектор, представляющий направление приведения каждой формы Collider2D.</param>
      <param name="contactFilter">Результаты фильтрации определяются фильтром контактов.</param>
      <param name="results">Массив для получения результатов.</param>
      <param name="distance">Максимальное расстояние, на которое можно применить коллайдер(ы).</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в массив результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.Cast(UnityEngine.Vector2,System.Collections.Generic.List`1&lt;UnityEngine.RaycastHit2D&gt;,System.Single)">
      <summary>
        <para>Все формы Collider2D, прикрепленные к Rigidbody2D, отбрасываются в сцену, начиная с каждой позиции коллайдера, игнорируя коллайдеры, прикрепленные к тому же Rigidbody2D.</para>
      </summary>
      <param name="direction">Вектор, представляющий направление приведения каждой формы Collider2D.</param>
      <param name="results">Список для получения результатов.</param>
      <param name="distance">Максимальное расстояние, на которое можно применить коллайдер(ы).</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в список результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.Cast(UnityEngine.Vector2,UnityEngine.ContactFilter2D,System.Collections.Generic.List`1&lt;UnityEngine.RaycastHit2D&gt;,System.Single)">
      <summary>
        <para>Все формы Collider2D, прикрепленные к Rigidbody2D, отбрасываются в сцену, начиная с каждой позиции коллайдера, игнорируя коллайдеры, прикрепленные к тому же Rigidbody2D.</para>
      </summary>
      <param name="direction">Вектор, представляющий направление приведения каждой формы Collider2D.</param>
      <param name="contactFilter">Результаты фильтрации определяются фильтром контактов.</param>
      <param name="results">Список для получения результатов.</param>
      <param name="distance">Максимальное расстояние, на которое можно применить коллайдер(ы).</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в список результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.ClosestPoint(UnityEngine.Vector2)">
      <summary>
        <para>Возвращает точку на периметре всех включенных коллайдеров, прикрепленных к этому Rigidbody, ближайшую к указанной позиции.</para>
      </summary>
      <param name="position">Позиция, из которой можно найти ближайшую точку на этом Rigidbody.</param>
      <returns>
        <para>Точка на периметре коллайдера, прикрепленного к этому твердому телу, ближайшая к указанной позиции.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.Distance(UnityEngine.Collider2D)">
      <summary>
        <para>Вычисляет минимальное расстояние этого коллайдера относительно всех Collider2D, прикрепленных к этому Rigidbody2D.</para>
      </summary>
      <param name="collider">Коллайдер, используемый для расчета минимального расстояния от всех коллайдеров, прикрепленных к этому Rigidbody2D.</param>
      <returns>
        <para>Минимальное расстояние коллайдера от всех коллайдеров, прикрепленных к этому Rigidbody2D.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.GetAttachedColliders(UnityEngine.Collider2D[])">
      <summary>
        <para>Возвращает все Collider2D, прикрепленные к этому Rigidbody2D.</para>
      </summary>
      <param name="results">Массив Collider2D, используемый для получения результатов.</param>
      <returns>
        <para>Возвращает количество объектов Collider2D, помещенных в массив результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.GetAttachedColliders(System.Collections.Generic.List`1&lt;UnityEngine.Collider2D&gt;)">
      <summary>
        <para>Возвращает все Collider2D, прикрепленные к этому Rigidbody2D.</para>
      </summary>
      <param name="results">Список Collider2D, использованных для получения результатов.</param>
      <returns>
        <para>Возвращает количество объектов Collider2D, помещенных в список результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.GetContacts(UnityEngine.ContactPoint2D[])">
      <summary>
        <para>Извлекает все точки контакта для всех коллайдеров, прикрепленных к этому Rigidbody.</para>
      </summary>
      <param name="contacts">Массив ContactPoint2D, используемый для получения результатов.</param>
      <returns>
        <para>Возвращает количество контактов, помещенных в массив контактов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.GetContacts(UnityEngine.Collider2D[])">
      <summary>
        <para>Извлекает все коллайдеры, соприкасающиеся с любым из коллайдеров, прикрепленных к этому Rigidbody.</para>
      </summary>
      <param name="colliders">Массив Collider2D, используемый для получения результатов.</param>
      <returns>
        <para>Возвращает количество коллайдеров, размещенных в массиве коллайдеров.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.GetContacts(UnityEngine.ContactFilter2D,UnityEngine.ContactPoint2D[])">
      <summary>
        <para>Извлекает все точки контакта для всех коллайдеров, прикрепленных к этому Rigidbody, с результатами, отфильтрованными с помощью ContactFilter2D.</para>
      </summary>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <param name="contacts">Массив ContactPoint2D, используемый для получения результатов.</param>
      <returns>
        <para>Возвращает количество контактов, помещенных в массив контактов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.GetContacts(UnityEngine.ContactFilter2D,UnityEngine.Collider2D[])">
      <summary>
        <para>Извлекает все коллайдеры, находящиеся в контакте с любым из коллайдеров, прикрепленных к этому твердому телу, с фильтрацией результатов с помощью ContactFilter2D.</para>
      </summary>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <param name="colliders">Массив Collider2D, используемый для получения результатов.</param>
      <returns>
        <para>Возвращает количество коллайдеров, размещенных в массиве коллайдеров.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.GetContacts(System.Collections.Generic.List`1&lt;UnityEngine.ContactPoint2D&gt;)">
      <summary>
        <para>Извлекает все точки контакта для всех коллайдеров, прикрепленных к этому Rigidbody.</para>
      </summary>
      <param name="contacts">Список ContactPoint2D, используемых для получения результатов.</param>
      <returns>
        <para>Возвращает количество контактов, помещенных в список контактов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.GetContacts(UnityEngine.ContactFilter2D,System.Collections.Generic.List`1&lt;UnityEngine.ContactPoint2D&gt;)">
      <summary>
        <para>Извлекает все точки контакта для всех коллайдеров, прикрепленных к этому Rigidbody.</para>
      </summary>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <param name="contacts">Список ContactPoint2D, используемых для получения результатов.</param>
      <returns>
        <para>Возвращает количество контактов, помещенных в список контактов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.GetContacts(System.Collections.Generic.List`1&lt;UnityEngine.Collider2D&gt;)">
      <summary>
        <para>Извлекает все коллайдеры, соприкасающиеся с любым из коллайдеров, прикрепленных к этому Rigidbody.</para>
      </summary>
      <param name="colliders">Список Collider2D, использованных для получения результатов.</param>
      <returns>
        <para>Возвращает количество коллайдеров, помещенных в список коллайдеров.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.GetContacts(UnityEngine.ContactFilter2D,System.Collections.Generic.List`1&lt;UnityEngine.Collider2D&gt;)">
      <summary>
        <para>Извлекает все коллайдеры, соприкасающиеся с любым из коллайдеров, прикрепленных к этому Rigidbody.</para>
      </summary>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <param name="colliders">Список Collider2D, использованных для получения результатов.</param>
      <returns>
        <para>Возвращает количество коллайдеров, помещенных в список коллайдеров.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.GetPoint(UnityEngine.Vector2)">
      <summary>
        <para>Получить точку локального пространства, учитывая точку точки в глобальном пространстве RigidBody.</para>
      </summary>
      <param name="point">Точка глобального пространства для преобразования в локальное пространство.</param>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.GetPointVelocity(UnityEngine.Vector2)">
      <summary>
        <para>Скорость твердого тела в точке Point в глобальном пространстве.</para>
      </summary>
      <param name="point">Глобальная космическая точка, для которой вычисляется скорость.</param>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.GetRelativePoint(UnityEngine.Vector2)">
      <summary>
        <para>Получить точку глобального пространства по заданной точке относительной точки в локальном пространстве RigidBody.</para>
      </summary>
      <param name="relativePoint">Точка локального пространства для преобразования в глобальное пространство.</param>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.GetRelativePointVelocity(UnityEngine.Vector2)">
      <summary>
        <para>Скорость твердого тела в точке Point локального пространства.</para>
      </summary>
      <param name="relativePoint">Локальная точка пространства, для которой вычисляется скорость.</param>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.GetRelativeVector(UnityEngine.Vector2)">
      <summary>
        <para>Получить глобальный пространственный вектор по заданному вектору relativeVector в локальном пространстве RigidBody.</para>
      </summary>
      <param name="relativeVector">Локальный пространственный вектор для преобразования в глобальный пространственный вектор.</param>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.GetShapes(UnityEngine.PhysicsShapeGroup2D)">
      <summary>
        <para>Получает все PhysicsShape2D, используемые всеми Collider2D, прикрепленными к Rigidbody2D.</para>
      </summary>
      <param name="physicsShapeGroup">PhysicsShapeGroup2D для хранения извлеченного PhysicsShape2D.</param>
      <returns>
        <para>Возвращает количество объектов PhysicsShape2D, полученных из Rigidbody2D.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.GetVector(UnityEngine.Vector2)">
      <summary>
        <para>Получить вектор локального пространства по заданному вектору-вектору в глобальном пространстве RigidBody.</para>
      </summary>
      <param name="vector">Глобальный пространственный вектор для преобразования в локальный пространственный вектор.</param>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.IsAwake">
      <summary>
        <para>Твердое тело «бодрствует»?</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.IsSleeping">
      <summary>
        <para>Твердое тело «спит»?</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.IsTouching(UnityEngine.Collider2D)">
      <summary>
        <para>Проверяет, касается ли коллайдер какого-либо из коллайдеров, прикрепленных к этому твердому телу, или нет.</para>
      </summary>
      <param name="collider">Коллайдер, чтобы проверить, касается ли он какого-либо из коллайдеров, прикрепленных к этому твердому телу.</param>
      <returns>
        <para>Касается ли коллайдер любого из коллайдеров, прикрепленных к этому твердому телу, или нет.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.IsTouching(UnityEngine.Collider2D,UnityEngine.ContactFilter2D)">
      <summary>
        <para>Проверяет, касается ли коллайдер каких-либо коллайдеров, прикрепленных к этому твердому телу, с результатами, отфильтрованными ContactFilter2D.</para>
      </summary>
      <param name="collider">Коллайдер, чтобы проверить, касается ли он какого-либо из коллайдеров, прикрепленных к этому твердому телу.</param>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <returns>
        <para>Касается ли коллайдер любого из коллайдеров, прикрепленных к этому твердому телу, или нет.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.IsTouching(UnityEngine.ContactFilter2D)">
      <summary>
        <para>Проверяет, касается ли какой-либо коллайдер любого из коллайдеров, прикрепленных к этому твердому телу, с результатами, отфильтрованными ContactFilter2D.</para>
      </summary>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z или нормальному углу.</param>
      <returns>
        <para>Касается ли какой-либо коллайдер любого из коллайдеров, прикрепленных к этому твердому телу, или нет.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.IsTouchingLayers(System.Int32)">
      <summary>
        <para>Проверяет, касается ли какой-либо из коллайдеров, прикрепленных к этому твердому телу, какие-либо коллайдеры на указанной маске слоя или нет.</para>
      </summary>
      <param name="layerMask">Любые коллайдеры на любом из этих слоев считаются соприкасающимися.</param>
      <returns>
        <para>Соприкасается ли какой-либо из коллайдеров, прикрепленных к этому твердому телу, с какими-либо коллайдерами на указанной маске слоя или нет.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.MovePosition(UnityEngine.Vector2)">
      <summary>
        <para>Перемещает твердое тело в нужное положение.</para>
      </summary>
      <param name="position">Новая позиция для объекта Rigidbody.</param>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.MoveRotation(System.Single)">
      <summary>
        <para>Поворачивает Rigidbody на угол (указывается в градусах).</para>
      </summary>
      <param name="angle">Новый угол поворота для объекта Rigidbody.</param>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.MoveRotation(UnityEngine.Quaternion)">
      <summary>
        <para>Перегруженная версия MoveRotation, которая разрешает полный трехмерный поворот в качестве аргумента.</para>
      </summary>
      <param name="rotation">Полное трехмерное вращение используется для извлечения только поворота по оси Z.</param>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.OverlapCollider(UnityEngine.ContactFilter2D,UnityEngine.Collider2D[])">
      <summary>
        <para>Получите список всех коллайдеров, которые перекрывают все коллайдеры, прикрепленные к этому Rigidbody2D.</para>
      </summary>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z. Обратите внимание, что нормальный угол не используется для проверки перекрытия.</param>
      <param name="results">Массив для получения результатов. Размер массива определяет максимальное количество возвращаемых результатов.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в массив результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.OverlapCollider(UnityEngine.ContactFilter2D,System.Collections.Generic.List`1&lt;UnityEngine.Collider2D&gt;)">
      <summary>
        <para>Получите список всех коллайдеров, которые перекрывают все коллайдеры, прикрепленные к этому Rigidbody2D.</para>
      </summary>
      <param name="contactFilter">Контактный фильтр, используемый для различной фильтрации результатов, например, по маске слоя, глубине Z. Обратите внимание, что нормальный угол не используется для проверки перекрытия.</param>
      <param name="results">Список для получения результатов.</param>
      <returns>
        <para>Возвращает количество результатов, помещенных в список результатов.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.OverlapPoint(UnityEngine.Vector2)">
      <summary>
        <para>Проверьте, не перекрывает ли какой-либо из коллайдеров Rigidbody2D точку в пространстве.</para>
      </summary>
      <param name="point">Точка в мировом пространстве.</param>
      <returns>
        <para>Перекрывает ли точка какой-либо из коллайдеров Rigidbody2D.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.SetRotation(System.Single)">
      <summary>
        <para>Устанавливает угол поворота Rigidbody2D (указывается в градусах).</para>
      </summary>
      <param name="angle">Поворот Rigidbody (в градусах).</param>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.SetRotation(UnityEngine.Quaternion)">
      <summary>
        <para>Устанавливает вращение Rigidbody2D на вращение по оси Z, извлеченное из полного 3D-вращения.</para>
      </summary>
      <param name="rotation">Полное трехмерное вращение используется для извлечения только поворота по оси Z.</param>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.Sleep">
      <summary>
        <para>Сделайте твердое тело «спящим».</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Rigidbody2D.WakeUp">
      <summary>
        <para>Отключает «спящее» состояние твердого тела.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.RigidbodyConstraints2D">
      <summary>
        <para>Используйте эти флаги для ограничения движения Rigidbody2D.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RigidbodyConstraints2D.FreezeAll">
      <summary>
        <para>Заморозить вращение и движение по всем осям.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RigidbodyConstraints2D.FreezePosition">
      <summary>
        <para>Заморозить движение по осям X и Y.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RigidbodyConstraints2D.FreezePositionX">
      <summary>
        <para>Заморозить движение по оси X.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RigidbodyConstraints2D.FreezePositionY">
      <summary>
        <para>Заморозить движение по оси Y.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RigidbodyConstraints2D.FreezeRotation">
      <summary>
        <para>Заморозить вращение по оси Z.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RigidbodyConstraints2D.None">
      <summary>
        <para>Нет ограничений.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.RigidbodyInterpolation2D">
      <summary>
        <para>Режим интерполяции для объектов Rigidbody2D.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RigidbodyInterpolation2D.Extrapolate">
      <summary>
        <para>Сглаживание движения объекта на основе оценки его положения в следующем кадре.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RigidbodyInterpolation2D.Interpolate">
      <summary>
        <para>Плавное движение на основе положения объекта в предыдущих кадрах.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RigidbodyInterpolation2D.None">
      <summary>
        <para>Не применяйте сглаживание к движению объекта.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.RigidbodySleepMode2D">
      <summary>
        <para>Настройки начального состояния сна Rigidbody2D.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RigidbodySleepMode2D.NeverSleep">
      <summary>
        <para>Rigidbody2D никогда не переходит в спящий режим автоматически.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RigidbodySleepMode2D.StartAsleep">
      <summary>
        <para>Изначально Rigidbody2D находится в спящем режиме.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RigidbodySleepMode2D.StartAwake">
      <summary>
        <para>Изначально Rigidbody2D активен.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.RigidbodyType2D">
      <summary>
        <para>Тип физического поведения Rigidbody2D.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RigidbodyType2D.Dynamic">
      <summary>
        <para>Задает динамическое поведение Rigidbody2D.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RigidbodyType2D.Kinematic">
      <summary>
        <para>Задает кинематическое поведение Rigidbody2D.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.RigidbodyType2D.Static">
      <summary>
        <para>Задает статическое поведение Rigidbody2D.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.SimulationMode2D">
      <summary>
        <para>Набор режимов, которые управляют выполнением Unity 2D-моделирования физики.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SimulationMode2D.FixedUpdate">
      <summary>
        <para>Используйте это перечисление, чтобы указать Unity, что симуляция физики должна выполняться сразу после MonoBehaviour.FixedUpdate.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SimulationMode2D.Script">
      <summary>
        <para>Используйте это перечисление, чтобы указать Unity, что симуляция физики должна выполняться вручную при вызове Physics2D.Simulate.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SimulationMode2D.Update">
      <summary>
        <para>Используйте это перечисление, чтобы указать Unity, что симуляция физики должна выполняться сразу после MonoBehaviour.Update.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.SliderJoint2D">
      <summary>
        <para>Соединение, ограничивающее движение объекта Rigidbody2D одной линией.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SliderJoint2D.angle">
      <summary>
        <para>Угол линии в пространстве (в градусах).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SliderJoint2D.autoConfigureAngle">
      <summary>
        <para>Должен ли угол рассчитываться автоматически?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SliderJoint2D.jointSpeed">
      <summary>
        <para>Текущая скорость соединения.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SliderJoint2D.jointTranslation">
      <summary>
        <para>Текущий совместный перевод.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SliderJoint2D.limits">
      <summary>
        <para>Ограничения на то, как далеко сустав может скользить в каждом направлении вдоль линии.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SliderJoint2D.limitState">
      <summary>
        <para>Получает состояние ограничения соединения.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SliderJoint2D.motor">
      <summary>
        <para>Параметры силы двигателя, которая автоматически применяется к Rigibody2D вдоль линии.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SliderJoint2D.referenceAngle">
      <summary>
        <para>Угол (в градусах) между двумя телами, используемый в качестве зависимости для соединения.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SliderJoint2D.useLimits">
      <summary>
        <para>Следует ли использовать ограничения движения?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SliderJoint2D.useMotor">
      <summary>
        <para>Следует ли автоматически прикладывать силу двигателя к Rigidbody2D?</para>
      </summary>
    </member>
    <member name="M:UnityEngine.SliderJoint2D.GetMotorForce(System.Single)">
      <summary>
        <para>Получает двигательную силу сустава с учетом указанного временного шага.</para>
      </summary>
      <param name="timeStep">Время для расчета силы двигателя.</param>
    </member>
    <member name="T:UnityEngine.SpringJoint2D">
      <summary>
        <para>Соединение, которое пытается удерживать два объекта Rigidbody2D на заданном расстоянии друг от друга, применяя силу между ними.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SpringJoint2D.autoConfigureDistance">
      <summary>
        <para>Должно ли расстояние рассчитываться автоматически?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SpringJoint2D.dampingRatio">
      <summary>
        <para>Величина, на которую сила пружины уменьшается пропорционально скорости движения.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SpringJoint2D.distance">
      <summary>
        <para>Расстояние, которое пружина попытается сохранить между двумя объектами.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SpringJoint2D.frequency">
      <summary>
        <para>Частота, с которой пружина колеблется на расстоянии между объектами.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.SurfaceEffector2D">
      <summary>
        <para>Применяет касательные силы вдоль поверхностей коллайдеров.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SurfaceEffector2D.forceScale">
      <summary>
        <para>Шкала импульсной силы, применяемой при попытке достичь поверхностной скорости.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SurfaceEffector2D.speed">
      <summary>
        <para>Скорость, которую необходимо поддерживать вдоль поверхности.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SurfaceEffector2D.speedVariation">
      <summary>
        <para>Изменение скорости (от нуля до изменения), добавляемое к применяемой базовой скорости.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SurfaceEffector2D.useBounce">
      <summary>
        <para>Следует ли использовать отскок при любом контакте с поверхностью?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SurfaceEffector2D.useContactForce">
      <summary>
        <para>Должна ли сила импульса прикладываться к точке контакта?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.SurfaceEffector2D.useFriction">
      <summary>
        <para>Следует ли использовать трение при любом контакте с поверхностью?</para>
      </summary>
    </member>
    <member name="T:UnityEngine.TargetJoint2D">
      <summary>
        <para>Соединение пытается переместить Rigidbody2D в определенную целевую позицию.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TargetJoint2D.anchor">
      <summary>
        <para>Якорь в локальном пространстве на твердом теле, к которому прикреплен шарнир.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TargetJoint2D.autoConfigureTarget">
      <summary>
        <para>Должна ли цель рассчитываться автоматически?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TargetJoint2D.dampingRatio">
      <summary>
        <para>Величина, на которую целевое усилие пружины уменьшается пропорционально скорости движения.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TargetJoint2D.frequency">
      <summary>
        <para>Частота, с которой целевая пружина колеблется вокруг целевого положения.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TargetJoint2D.maxForce">
      <summary>
        <para>Максимальное усилие, которое может быть создано при попытке сохранить целевое ограничение соединения.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.TargetJoint2D.target">
      <summary>
        <para>Положение в мировом пространстве, в которое сустав попытается переместить тело.</para>
      </summary>
    </member>
    <member name="A:UnityEngine.Physics2DModule">
      <summary>
        <para>Модуль Physics2d реализует 2D-физику в Unity.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.WheelJoint2D">
      <summary>
        <para>Соединение колес позволяет имитировать колеса, ограничивая движение подвески с помощью дополнительного двигателя.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WheelJoint2D.jointAngle">
      <summary>
        <para>Текущий угол соединения (в градусах), определяемый как относительный угол между двумя объектами Rigidbody2D, к которым соединяется соединение.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WheelJoint2D.jointLinearSpeed">
      <summary>
        <para>Текущая линейная скорость соединения в метрах/сек</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WheelJoint2D.jointSpeed">
      <summary>
        <para>Текущая скорость вращения сустава в градусах/сек</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WheelJoint2D.jointTranslation">
      <summary>
        <para>Текущий совместный перевод.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WheelJoint2D.motor">
      <summary>
        <para>Параметры силы двигателя, которая автоматически применяется к Rigibody2D вдоль линии.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WheelJoint2D.suspension">
      <summary>
        <para>Задайте конфигурацию совместной подвески.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WheelJoint2D.useMotor">
      <summary>
        <para>Следует ли автоматически прикладывать силу двигателя к Rigidbody2D?</para>
      </summary>
    </member>
    <member name="M:UnityEngine.WheelJoint2D.GetMotorTorque(System.Single)">
      <summary>
        <para>Получает крутящий момент двигателя соединения с учетом указанного временного шага.</para>
      </summary>
      <param name="timeStep">Время для расчета крутящего момента двигателя.</param>
    </member>
  </members>
</doc>