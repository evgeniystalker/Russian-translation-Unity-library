<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<doc>
  <members>
    <assembly>
      <name>UnityEngine.AnimationModule</name>
    </assembly>
    <member name="T:UnityEngine.Animation">
      <summary>
        <para>Компонент анимации используется для воспроизведения анимации.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animation.animateOnlyIfVisible">
      <summary>
        <para>При включении Unity может прекратить анимацию, если посчитает, что результаты анимации не будут видны пользователю.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animation.animatePhysics">
      <summary>
        <para>При включении анимации будут выполняться в физическом цикле. Это полезно только в сочетании с кинематическими жесткими телами.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animation.clip">
      <summary>
        <para>Анимация по умолчанию.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animation.cullingType">
      <summary>
        <para>Управляет отбраковкой этого компонента анимации.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animation.isPlaying">
      <summary>
        <para>Воспроизводится ли в данный момент анимация?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animation.localBounds">
      <summary>
        <para>AABB этого компонента анимации Animation в локальном пространстве.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animation.playAutomatically">
      <summary>
        <para>Должен ли анимационный клип по умолчанию (свойство Animation.clip) автоматически запускаться при запуске?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animation.wrapMode">
      <summary>
        <para>Как следует обрабатывать время за пределами диапазона воспроизведения клипа?</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animation.AddClip(UnityEngine.AnimationClip,System.String)">
      <summary>
        <para>Добавляет в анимацию клип с именем newName.</para>
      </summary>
      <param name="clip">
      </param>
      <param name="newName">
      </param>
    </member>
    <member name="M:UnityEngine.Animation.AddClip(UnityEngine.AnimationClip,System.String,System.Int32,System.Int32)">
      <summary>
        <para>Добавляет клип к воспроизведению только между firstFrame и lastFrame. Новый клип также будет добавлен в анимацию с именем newName.</para>
      </summary>
      <param name="addLoopFrame">Должен ли быть вставлен дополнительный кадр в конце, который соответствует первому кадру? Включите этот параметр, если вы создаете циклическую анимацию.</param>
      <param name="clip">
      </param>
      <param name="newName">
      </param>
      <param name="firstFrame">
      </param>
      <param name="lastFrame">
      </param>
    </member>
    <member name="M:UnityEngine.Animation.AddClip(UnityEngine.AnimationClip,System.String,System.Int32,System.Int32,System.Boolean)">
      <summary>
        <para>Добавляет клип к воспроизведению только между firstFrame и lastFrame. Новый клип также будет добавлен в анимацию с именем newName.</para>
      </summary>
      <param name="addLoopFrame">Должен ли быть вставлен дополнительный кадр в конце, который соответствует первому кадру? Включите этот параметр, если вы создаете циклическую анимацию.</param>
      <param name="clip">
      </param>
      <param name="newName">
      </param>
      <param name="firstFrame">
      </param>
      <param name="lastFrame">
      </param>
    </member>
    <member name="M:UnityEngine.Animation.Blend(System.String)">
      <summary>
        <para>Смешивает анимацию с именем animation с targetWeight в течение следующих секунд.</para>
      </summary>
      <param name="animation">
      </param>
      <param name="targetWeight">
      </param>
      <param name="fadeLength">
      </param>
    </member>
    <member name="M:UnityEngine.Animation.Blend(System.String,System.Single)">
      <summary>
        <para>Смешивает анимацию с именем animation с targetWeight в течение следующих секунд.</para>
      </summary>
      <param name="animation">
      </param>
      <param name="targetWeight">
      </param>
      <param name="fadeLength">
      </param>
    </member>
    <member name="M:UnityEngine.Animation.Blend(System.String,System.Single,System.Single)">
      <summary>
        <para>Смешивает анимацию с именем animation с targetWeight в течение следующих секунд.</para>
      </summary>
      <param name="animation">
      </param>
      <param name="targetWeight">
      </param>
      <param name="fadeLength">
      </param>
    </member>
    <member name="M:UnityEngine.Animation.CrossFade(System.String)">
      <summary>
        <para>Затухает анимация с именем animation в течение периода времени, определяемого параметром fadeLength.</para>
      </summary>
      <param name="animation">
      </param>
      <param name="fadeLength">
      </param>
      <param name="mode">
      </param>
    </member>
    <member name="M:UnityEngine.Animation.CrossFade(System.String,System.Single)">
      <summary>
        <para>Затухает анимация с именем animation в течение периода времени, определяемого параметром fadeLength.</para>
      </summary>
      <param name="animation">
      </param>
      <param name="fadeLength">
      </param>
      <param name="mode">
      </param>
    </member>
    <member name="M:UnityEngine.Animation.CrossFade(System.String,System.Single,UnityEngine.PlayMode)">
      <summary>
        <para>Затухает анимация с именем animation в течение периода времени, определяемого параметром fadeLength.</para>
      </summary>
      <param name="animation">
      </param>
      <param name="fadeLength">
      </param>
      <param name="mode">
      </param>
    </member>
    <member name="M:UnityEngine.Animation.CrossFadeQueued(System.String)">
      <summary>
        <para>Перекрестное затухание анимации после завершения воспроизведения предыдущих анимаций.</para>
      </summary>
      <param name="animation">
      </param>
      <param name="fadeLength">
      </param>
      <param name="queue">
      </param>
      <param name="mode">
      </param>
    </member>
    <member name="M:UnityEngine.Animation.CrossFadeQueued(System.String,System.Single)">
      <summary>
        <para>Перекрестное затухание анимации после завершения воспроизведения предыдущих анимаций.</para>
      </summary>
      <param name="animation">
      </param>
      <param name="fadeLength">
      </param>
      <param name="queue">
      </param>
      <param name="mode">
      </param>
    </member>
    <member name="M:UnityEngine.Animation.CrossFadeQueued(System.String,System.Single,UnityEngine.QueueMode)">
      <summary>
        <para>Перекрестное затухание анимации после завершения воспроизведения предыдущих анимаций.</para>
      </summary>
      <param name="animation">
      </param>
      <param name="fadeLength">
      </param>
      <param name="queue">
      </param>
      <param name="mode">
      </param>
    </member>
    <member name="M:UnityEngine.Animation.CrossFadeQueued(System.String,System.Single,UnityEngine.QueueMode,UnityEngine.PlayMode)">
      <summary>
        <para>Перекрестное затухание анимации после завершения воспроизведения предыдущих анимаций.</para>
      </summary>
      <param name="animation">
      </param>
      <param name="fadeLength">
      </param>
      <param name="queue">
      </param>
      <param name="mode">
      </param>
    </member>
    <member name="M:UnityEngine.Animation.GetClipCount">
      <summary>
        <para>Получить количество клипов, назначенных в данный момент для этой анимации.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animation.IsPlaying(System.String)">
      <summary>
        <para>Воспроизводится ли анимация с именем name?</para>
      </summary>
      <param name="name">
      </param>
    </member>
    <member name="M:UnityEngine.Animation.Play()">
      <summary>
        <para>Воспроизводит анимацию без смешивания.</para>
      </summary>
      <param name="mode">
      </param>
      <param name="animation">
      </param>
    </member>
    <member name="M:UnityEngine.Animation.Play(System.String)">
      <summary>
        <para>Воспроизводит анимацию без смешивания.</para>
      </summary>
      <param name="mode">
      </param>
      <param name="animation">
      </param>
    </member>
    <member name="M:UnityEngine.Animation.Play(UnityEngine.PlayMode)">
      <summary>
        <para>Воспроизводит анимацию без смешивания.</para>
      </summary>
      <param name="mode">
      </param>
      <param name="animation">
      </param>
    </member>
    <member name="M:UnityEngine.Animation.Play(System.String,UnityEngine.PlayMode)">
      <summary>
        <para>Воспроизводит анимацию без смешивания.</para>
      </summary>
      <param name="mode">
      </param>
      <param name="animation">
      </param>
    </member>
    <member name="M:UnityEngine.Animation.PlayQueued(System.String)">
      <summary>
        <para>Воспроизводит анимацию после завершения воспроизведения предыдущих анимаций.</para>
      </summary>
      <param name="animation">
      </param>
      <param name="queue">
      </param>
      <param name="mode">
      </param>
    </member>
    <member name="M:UnityEngine.Animation.PlayQueued(System.String,UnityEngine.QueueMode)">
      <summary>
        <para>Воспроизводит анимацию после завершения воспроизведения предыдущих анимаций.</para>
      </summary>
      <param name="animation">
      </param>
      <param name="queue">
      </param>
      <param name="mode">
      </param>
    </member>
    <member name="M:UnityEngine.Animation.PlayQueued(System.String,UnityEngine.QueueMode,UnityEngine.PlayMode)">
      <summary>
        <para>Воспроизводит анимацию после завершения воспроизведения предыдущих анимаций.</para>
      </summary>
      <param name="animation">
      </param>
      <param name="queue">
      </param>
      <param name="mode">
      </param>
    </member>
    <member name="M:UnityEngine.Animation.RemoveClip(UnityEngine.AnimationClip)">
      <summary>
        <para>Удалить клип из списка анимаций.</para>
      </summary>
      <param name="clip">
      </param>
    </member>
    <member name="M:UnityEngine.Animation.RemoveClip(System.String)">
      <summary>
        <para>Удалить клип из списка анимаций.</para>
      </summary>
      <param name="clipName">
      </param>
    </member>
    <member name="M:UnityEngine.Animation.Rewind(System.String)">
      <summary>
        <para>Перематывает анимацию с именем name.</para>
      </summary>
      <param name="name">
      </param>
    </member>
    <member name="M:UnityEngine.Animation.Rewind">
      <summary>
        <para>Перематывает все анимации назад.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animation.Sample">
      <summary>
        <para>Образцы анимации в текущем состоянии.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animation.Stop">
      <summary>
        <para>Останавливает воспроизведение всех анимаций, запущенных с помощью этой анимации.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animation.Stop(System.String)">
      <summary>
        <para>Останавливает анимацию с именем name.</para>
      </summary>
      <param name="name">
      </param>
    </member>
    <member name="P:UnityEngine.Animation.this">
      <summary>
        <para>Возвращает состояние анимации с именем name.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AnimationBlendMode">
      <summary>
        <para>Используется функцией Animation.Play.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AnimationBlendMode.Additive">
      <summary>
        <para>Будут добавлены анимации.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AnimationBlendMode.Blend">
      <summary>
        <para>Анимации будут смешаны.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AnimationClip">
      <summary>
        <para>Сохраняет анимацию на основе ключевых кадров.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationClip.empty">
      <summary>
        <para>Возвращает true, если в анимационном клипе нет кривых и событий.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationClip.events">
      <summary>
        <para>События анимации для этого анимационного клипа.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationClip.frameRate">
      <summary>
        <para>Частота кадров, с которой отбираются ключевые кадры. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationClip.hasGenericRootTransform">
      <summary>
        <para>Возвращает true, если у анимации есть анимация на корневом преобразовании.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationClip.hasMotionCurves">
      <summary>
        <para>Возвращает значение true, если AnimationClip имеет корневые кривые движения.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationClip.hasMotionFloatCurves">
      <summary>
        <para>Возвращает true, если AnimationClip имеет кривые редактора для основного движения.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationClip.hasRootCurves">
      <summary>
        <para>Возвращает true, если AnimationClip имеет корневые кривые.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationClip.humanMotion">
      <summary>
        <para>Возвращает true, если анимация содержит кривую, управляющую гуманоидной установкой.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationClip.legacy">
      <summary>
        <para>Установите значение true, если AnimationClip будет использоваться с компонентом Legacy Animation (вместо Animator).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationClip.length">
      <summary>
        <para>Продолжительность анимации в секундах. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationClip.localBounds">
      <summary>
        <para>AABB этого анимационного клипа в локальном пространстве компонента анимации, к которому он тоже присоединен.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationClip.wrapMode">
      <summary>
        <para>Задает режим переноса по умолчанию, используемый в состоянии анимации.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AnimationClip.AddEvent(UnityEngine.AnimationEvent)">
      <summary>
        <para>Добавляет событие анимации в клип.</para>
      </summary>
      <param name="evt">AnimationEvent для добавления.</param>
    </member>
    <member name="M:UnityEngine.AnimationClip.ClearCurves">
      <summary>
        <para>Удаление всех кривых из клипа.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AnimationClip.#ctor">
      <summary>
        <para>Создает новый анимационный клип.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AnimationClip.EnsureQuaternionContinuity">
      <summary>
        <para>Выравнивает ключи кватерниона для обеспечения кратчайших путей интерполяции.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AnimationClip.SampleAnimation(UnityEngine.GameObject,System.Single)">
      <summary>
        <para>Образцы анимации в заданное время для любых анимированных свойств.</para>
      </summary>
      <param name="go">Анимированный игровой объект.</param>
      <param name="time">Время выборки анимации.</param>
    </member>
    <member name="M:UnityEngine.AnimationClip.SetCurve(System.String,System.Type,System.String,UnityEngine.AnimationCurve)">
      <summary>
        <para>Назначает кривую для анимации определенного свойства.</para>
      </summary>
      <param name="relativePath">Путь к игровому объекту, к которому относится эта кривая. относительный путь
имеет формат, аналогичный пути, например, "rootspineleftArm". Если относительный путь
пусто, оно относится к игровому объекту, к которому прикреплен анимационный клип.</param>
      <param name="type">Тип класса анимируемого компонента.</param>
      <param name="propertyName">Имя или путь к анимируемому свойству.</param>
      <param name="curve">Кривая анимации.</param>
    </member>
    <member name="T:UnityEngine.AnimationClipPair">
      <summary>
        <para>Этот класс определяет пару клипов, используемых AnimatorOverrideController.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AnimationClipPair.originalClip">
      <summary>
        <para>Оригинальный клип с контроллера.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AnimationClipPair.overrideClip">
      <summary>
        <para>Замещающий анимационный клип.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AnimationCullingType">
      <summary>
        <para>Это перечисление управляет отбраковкой компонента анимации.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AnimationCullingType.AlwaysAnimate">
      <summary>
        <para>Отсечение анимации отключено — объект анимируется даже за пределами экрана.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AnimationCullingType.BasedOnRenderers">
      <summary>
        <para>Анимация отключается, когда средства визуализации не видны.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AnimationEvent">
      <summary>
        <para>AnimationEvent позволяет вызывать функцию сценария, аналогичную SendMessage, как часть воспроизведения анимации.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationEvent.animationState">
      <summary>
        <para>Состояние анимации, вызвавшее это событие (только для чтения).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationEvent.animatorClipInfo">
      <summary>
        <para>Информация о клипе аниматора, относящаяся к этому событию (только для чтения).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationEvent.animatorStateInfo">
      <summary>
        <para>Информация о состоянии аниматора, связанная с этим событием (только для чтения).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationEvent.floatParameter">
      <summary>
        <para>Плавающий параметр, который хранится в событии и будет отправлен в функцию.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationEvent.functionName">
      <summary>
        <para>Имя функции, которая будет вызываться.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationEvent.intParameter">
      <summary>
        <para>Параметр Int, который хранится в событии и будет отправлен в функцию.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationEvent.isFiredByAnimator">
      <summary>
        <para>Возвращает true, если это событие Animation было запущено компонентом Animator.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationEvent.isFiredByLegacy">
      <summary>
        <para>Возвращает true, если это событие анимации было запущено компонентом анимации.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationEvent.messageOptions">
      <summary>
        <para>Варианты вызова функции.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationEvent.objectReferenceParameter">
      <summary>
        <para>Параметр ссылки на объект, который хранится в событии и будет отправлен в функцию.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationEvent.stringParameter">
      <summary>
        <para>Строковый параметр, который хранится в событии и будет отправлен в функцию.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationEvent.time">
      <summary>
        <para>Время запуска события.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AnimationEvent.#ctor">
      <summary>
        <para>Создает новое событие анимации.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AnimationInfo">
      <summary>
        <para>Информация о том, какие анимационные ролики воспроизводятся и их вес.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationInfo.clip">
      <summary>
        <para>Воспроизводимый анимационный клип.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationInfo.weight">
      <summary>
        <para>Вес анимационного клипа.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Animations.AimConstraint">
      <summary>
        <para>Ограничивает ориентацию объекта относительно положения одного или нескольких исходных объектов, чтобы объект был обращен к среднему положению источников.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.AimConstraint.aimVector">
      <summary>
        <para>Ось, по которой ориентируется ограниченный объект.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.AimConstraint.constraintActive">
      <summary>
        <para>Активирует или деактивирует ограничение.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.AimConstraint.locked">
      <summary>
        <para>Блокирует смещение и вращение в состоянии покоя.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.AimConstraint.rotationAtRest">
      <summary>
        <para>Поворот, используемый, когда источники имеют общий вес 0.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.AimConstraint.rotationAxis">
      <summary>
        <para>Оси, затронутые AimConstraint.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.AimConstraint.rotationOffset">
      <summary>
        <para>Представляет смещение от ограниченной ориентации.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.AimConstraint.sourceCount">
      <summary>
        <para>Количество источников, установленных на компоненте (только для чтения).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.AimConstraint.upVector">
      <summary>
        <para>Верхний вектор.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.AimConstraint.weight">
      <summary>
        <para>Вес компонента ограничения.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.AimConstraint.worldUpObject">
      <summary>
        <para>Объект World Up, используемый для вычисления вектора World Up, когда World Up Type имеет значение AimConstraint.WorldUpType.ObjectUp или AimConstraint.WorldUpType.ObjectRotationUp.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.AimConstraint.worldUpType">
      <summary>
        <para>Тип мирового восходящего вектора.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.AimConstraint.worldUpVector">
      <summary>
        <para>Мир вверх Вектор, используемый, когда тип мира вверх — AimConstraint.WorldUpType.Vector или AimConstraint.WorldUpType.ObjectRotationUp.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animations.AimConstraint.AddSource(UnityEngine.Animations.ConstraintSource)">
      <summary>
        <para>Добавляет источник ограничения.</para>
      </summary>
      <param name="source">Исходный объект и его вес.</param>
      <returns>
        <para>Возвращает индекс добавленного источника.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AimConstraint.GetSource(System.Int32)">
      <summary>
        <para>Получает источник ограничения по индексу.</para>
      </summary>
      <param name="index">Индекс источника.</param>
      <returns>
        <para>Исходный объект и его вес.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AimConstraint.GetSources(System.Collections.Generic.List`1&lt;UnityEngine.Animations.ConstraintSource&gt;)">
      <summary>
        <para>Получает список источников.</para>
      </summary>
      <param name="sources">Список источников для заполнения компонентом.</param>
    </member>
    <member name="M:UnityEngine.Animations.AimConstraint.RemoveSource(System.Int32)">
      <summary>
        <para>Удаляет источник из компонента.</para>
      </summary>
      <param name="index">Индекс удаляемого источника.</param>
    </member>
    <member name="M:UnityEngine.Animations.AimConstraint.SetSource(System.Int32,UnityEngine.Animations.ConstraintSource)">
      <summary>
        <para>Устанавливает источник по указанному индексу.</para>
      </summary>
      <param name="index">Индекс источника для установки.</param>
      <param name="source">Исходный объект и его вес.</param>
    </member>
    <member name="M:UnityEngine.Animations.AimConstraint.SetSources(System.Collections.Generic.List`1&lt;UnityEngine.Animations.ConstraintSource&gt;)">
      <summary>
        <para>Задает список источников компонента.</para>
      </summary>
      <param name="sources">Список источников для установки.</param>
    </member>
    <member name="T:UnityEngine.Animations.AimConstraint.WorldUpType">
      <summary>
        <para>Указывает, как определяется вектор мира вверх, используемый ограничением цели.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Animations.AimConstraint.WorldUpType.None">
      <summary>
        <para>Не определяет и не использует мировой вектор вверх.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Animations.AimConstraint.WorldUpType.ObjectRotationUp">
      <summary>
        <para>Использует и определяет вектор мира вверх относительно локального пространства объекта.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Animations.AimConstraint.WorldUpType.ObjectUp">
      <summary>
        <para>Использует и определяет вектор мира вверх как вектор от ограниченного объекта в направлении объекта вверх.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Animations.AimConstraint.WorldUpType.SceneUp">
      <summary>
        <para>Использует и определяет вектор мира вверх как вектор вверх сцены Unity (ось Y).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Animations.AimConstraint.WorldUpType.Vector">
      <summary>
        <para>Использует и определяет мировой вектор вверх как вектор, заданный пользователем.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Animations.AnimationClipPlayable">
      <summary>
        <para>Объект Playable, управляющий AnimationClip.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animations.AnimationClipPlayable.Create(UnityEngine.Playables.PlayableGraph,UnityEngine.AnimationClip)">
      <summary>
        <para>Создает AnimationClipPlayable в PlayableGraph.</para>
      </summary>
      <param name="graph">Объект PlayableGraph, которому будет принадлежать AnimationClipPlayable.</param>
      <param name="clip">AnimationClip, который будет добавлен в PlayableGraph.</param>
      <returns>
        <para>AnimationClipPlayable, связанный с PlayableGraph.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AnimationClipPlayable.GetAnimationClip">
      <summary>
        <para>Возвращает AnimationClip, сохраненный в AnimationClipPlayable.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animations.AnimationClipPlayable.GetApplyFootIK">
      <summary>
        <para>Возвращает состояние флага ApplyFootIK.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animations.AnimationClipPlayable.GetApplyPlayableIK">
      <summary>
        <para>Возвращает состояние флага ApplyPlayableIK.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animations.AnimationClipPlayable.SetApplyFootIK(System.Boolean)">
      <summary>
        <para>Задает значение флага ApplyFootIK.</para>
      </summary>
      <param name="value">Новое значение флага ApplyFootIK.</param>
    </member>
    <member name="M:UnityEngine.Animations.AnimationClipPlayable.SetApplyPlayableIK(System.Boolean)">
      <summary>
        <para>Запрашивает вызов OnAnimatorIK для анимированного GameObject.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="T:UnityEngine.Animations.AnimationHumanStream">
      <summary>
        <para>Гуманоидный поток данных анимации, передаваемый от одного Playable к другому.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.AnimationHumanStream.bodyLocalPosition">
      <summary>
        <para>Положение центра масс тела относительно корня.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.AnimationHumanStream.bodyLocalRotation">
      <summary>
        <para>Вращение центра масс тела относительно корня.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.AnimationHumanStream.bodyPosition">
      <summary>
        <para>Положение центра масс тела в мировом пространстве.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.AnimationHumanStream.bodyRotation">
      <summary>
        <para>Вращение центра масс тела в мировом пространстве.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.AnimationHumanStream.humanScale">
      <summary>
        <para>Масштаб Аватара. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.AnimationHumanStream.isValid">
      <summary>
        <para>Возвращает true, если поток действителен; ложно в противном случае. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.AnimationHumanStream.leftFootHeight">
      <summary>
        <para>Левая нога на высоте от пола. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.AnimationHumanStream.leftFootVelocity">
      <summary>
        <para>Скорость левой ноги из последнего оцененного кадра. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.AnimationHumanStream.rightFootHeight">
      <summary>
        <para>Высота правой стопы от пола. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.AnimationHumanStream.rightFootVelocity">
      <summary>
        <para>Скорость правой ноги из последнего оцененного кадра. (Только чтение)</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animations.AnimationHumanStream.GetGoalLocalPosition(UnityEngine.AvatarIKGoal)">
      <summary>
        <para>Возвращает положение этой цели IK относительно корня.</para>
      </summary>
      <param name="index">Запрошенная цель AvatarIKGoal.</param>
      <returns>
        <para>Позиция этой цели IK.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AnimationHumanStream.GetGoalLocalRotation(UnityEngine.AvatarIKGoal)">
      <summary>
        <para>Возвращает поворот этой цели IK относительно корня.</para>
      </summary>
      <param name="index">Запрошенная цель AvatarIKGoal.</param>
      <returns>
        <para>Вращение этой цели IK.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AnimationHumanStream.GetGoalPosition(UnityEngine.AvatarIKGoal)">
      <summary>
        <para>Возвращает положение этой цели IK в мировом пространстве.</para>
      </summary>
      <param name="index">Запрошенная цель AvatarIKGoal.</param>
      <returns>
        <para>Позиция этой цели IK.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AnimationHumanStream.GetGoalPositionFromPose(UnityEngine.AvatarIKGoal)">
      <summary>
        <para>Возвращает позицию этой цели IK в мировом пространстве, вычисленную из текущей позы потока.</para>
      </summary>
      <param name="index">Запрошенная цель AvatarIKGoal.</param>
      <returns>
        <para>Позиция этой цели IK.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AnimationHumanStream.GetGoalRotation(UnityEngine.AvatarIKGoal)">
      <summary>
        <para>Возвращает вращение этой цели IK в мировом пространстве.</para>
      </summary>
      <param name="index">Запрошенная цель AvatarIKGoal.</param>
      <returns>
        <para>Вращение этой цели IK.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AnimationHumanStream.GetGoalRotationFromPose(UnityEngine.AvatarIKGoal)">
      <summary>
        <para>Возвращает вращение этой цели IK в мировом пространстве, вычисленное из текущей позы потока.</para>
      </summary>
      <param name="index">Запрошенная цель AvatarIKGoal.</param>
      <returns>
        <para>Вращение этой цели IK.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AnimationHumanStream.GetGoalWeightPosition(UnityEngine.AvatarIKGoal)">
      <summary>
        <para>Возвращает вес позиции цели IK.</para>
      </summary>
      <param name="index">Запрошенная цель AvatarIKGoal.</param>
      <returns>
        <para>Вес позиции цели IK.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AnimationHumanStream.GetGoalWeightRotation(UnityEngine.AvatarIKGoal)">
      <summary>
        <para>Возвращает вес вращения цели IK.</para>
      </summary>
      <param name="index">Запрошенная цель AvatarIKGoal.</param>
      <returns>
        <para>Вес вращения цели IK.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AnimationHumanStream.GetHintPosition(UnityEngine.AvatarIKHint)">
      <summary>
        <para>Возвращает позицию этой подсказки IK в мировом пространстве.</para>
      </summary>
      <param name="index">Запрошенный AvatarIKHint.</param>
      <returns>
        <para>Позиция этого IK Hint.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AnimationHumanStream.GetHintWeightPosition(UnityEngine.AvatarIKHint)">
      <summary>
        <para>Возвращает вес позиции подсказки IK.</para>
      </summary>
      <param name="index">Запрошенный AvatarIKHint.</param>
      <returns>
        <para>Вес позиции IK Hint.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AnimationHumanStream.GetMuscle(UnityEngine.Animations.MuscleHandle)">
      <summary>
        <para>Возвращает значение мускула.</para>
      </summary>
      <param name="muscle">Запрашиваемая мышца.</param>
      <returns>
        <para>Значение мускула.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AnimationHumanStream.ResetToStancePose">
      <summary>
        <para>Сбросить текущую позу в позу стойки (T-поза).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animations.AnimationHumanStream.SetGoalLocalPosition(UnityEngine.AvatarIKGoal,UnityEngine.Vector3)">
      <summary>
        <para>Устанавливает положение этой цели IK относительно корня.</para>
      </summary>
      <param name="index">Запрошенная цель AvatarIKGoal.</param>
      <param name="pos">Позиция этой цели IK.</param>
    </member>
    <member name="M:UnityEngine.Animations.AnimationHumanStream.SetGoalLocalRotation(UnityEngine.AvatarIKGoal,UnityEngine.Quaternion)">
      <summary>
        <para>Устанавливает поворот этой цели IK относительно корня.</para>
      </summary>
      <param name="index">Запрошенная цель AvatarIKGoal.</param>
      <param name="rot">Вращение этой цели IK.</param>
    </member>
    <member name="M:UnityEngine.Animations.AnimationHumanStream.SetGoalPosition(UnityEngine.AvatarIKGoal,UnityEngine.Vector3)">
      <summary>
        <para>Устанавливает положение этой цели IK в мировом пространстве.</para>
      </summary>
      <param name="index">Запрошенная цель AvatarIKGoal.</param>
      <param name="pos">Позиция этой цели IK.</param>
    </member>
    <member name="M:UnityEngine.Animations.AnimationHumanStream.SetGoalRotation(UnityEngine.AvatarIKGoal,UnityEngine.Quaternion)">
      <summary>
        <para>Устанавливает вращение этой цели IK в мировом пространстве.</para>
      </summary>
      <param name="index">Запрошенная цель AvatarIKGoal.</param>
      <param name="rot">Вращение этой цели IK.</param>
    </member>
    <member name="M:UnityEngine.Animations.AnimationHumanStream.SetGoalWeightPosition(UnityEngine.AvatarIKGoal,System.Single)">
      <summary>
        <para>Устанавливает вес позиции цели IK.</para>
      </summary>
      <param name="index">Запрошенная цель AvatarIKGoal.</param>
      <param name="value">Вес позиции цели IK.</param>
    </member>
    <member name="M:UnityEngine.Animations.AnimationHumanStream.SetGoalWeightRotation(UnityEngine.AvatarIKGoal,System.Single)">
      <summary>
        <para>Устанавливает вес вращения цели IK.</para>
      </summary>
      <param name="index">Запрошенная цель AvatarIKGoal.</param>
      <param name="value">Вес вращения цели IK.</param>
    </member>
    <member name="M:UnityEngine.Animations.AnimationHumanStream.SetHintPosition(UnityEngine.AvatarIKHint,UnityEngine.Vector3)">
      <summary>
        <para>Устанавливает положение этой подсказки IK в мировом пространстве.</para>
      </summary>
      <param name="index">Запрошенный AvatarIKHint.</param>
      <param name="pos">Позиция этой подсказки IK.</param>
    </member>
    <member name="M:UnityEngine.Animations.AnimationHumanStream.SetHintWeightPosition(UnityEngine.AvatarIKHint,System.Single)">
      <summary>
        <para>Устанавливает вес позиции подсказки IK.</para>
      </summary>
      <param name="index">Запрошенный AvatarIKHint.</param>
      <param name="value">Вес позиции IK Hint.</param>
    </member>
    <member name="M:UnityEngine.Animations.AnimationHumanStream.SetLookAtBodyWeight(System.Single)">
      <summary>
        <para>Устанавливает собственный вес LookAt.</para>
      </summary>
      <param name="weight">Масса тела LookAt.</param>
    </member>
    <member name="M:UnityEngine.Animations.AnimationHumanStream.SetLookAtClampWeight(System.Single)">
      <summary>
        <para>Устанавливает вес зажима LookAt.</para>
      </summary>
      <param name="weight">Вес зажима LookAt.</param>
    </member>
    <member name="M:UnityEngine.Animations.AnimationHumanStream.SetLookAtEyesWeight(System.Single)">
      <summary>
        <para>Устанавливает вес глаз LookAt.</para>
      </summary>
      <param name="weight">Вес глаз LookAt.</param>
    </member>
    <member name="M:UnityEngine.Animations.AnimationHumanStream.SetLookAtHeadWeight(System.Single)">
      <summary>
        <para>Устанавливает вес головки LookAt.</para>
      </summary>
      <param name="weight">Вес головки LookAt.</param>
    </member>
    <member name="M:UnityEngine.Animations.AnimationHumanStream.SetLookAtPosition(UnityEngine.Vector3)">
      <summary>
        <para>Устанавливает позицию взгляда в мировом пространстве.</para>
      </summary>
      <param name="lookAtPosition">Взгляд на позицию.</param>
    </member>
    <member name="M:UnityEngine.Animations.AnimationHumanStream.SetMuscle(UnityEngine.Animations.MuscleHandle,System.Single)">
      <summary>
        <para>Устанавливает значение мускула.</para>
      </summary>
      <param name="muscle">Запрашиваемая мышца.</param>
      <param name="value">Значение мускула.</param>
    </member>
    <member name="M:UnityEngine.Animations.AnimationHumanStream.SolveIK">
      <summary>
        <para>Запустите решатель IK.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Animations.AnimationLayerMixerPlayable">
      <summary>
        <para>Реализация IPlayable, управляющая микшером слоев анимации.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animations.AnimationLayerMixerPlayable.Create(UnityEngine.Playables.PlayableGraph,System.Int32,System.Boolean)">
      <summary>
        <para>Создает AnimationLayerMixerPlayable в PlayableGraph.</para>
      </summary>
      <param name="graph">PlayableGraph, который будет содержать новый AnimationLayerMixerPlayable.</param>
      <param name="inputCount">Количество слоев.</param>
      <param name="singleLayerOptimization">Эта оптимизация автоматически устанавливает вес первого слоя анимации равным 1. Установите значение true, если ваш микшер слоев имеет один слой анимации и вы хотите обойти ненужные вычисления веса. Для этой оптимизации автоматически устанавливается значение false, если ваш микшер слоев имеет несколько слоев анимации.</param>
      <returns>
        <para>Новый объект AnimationLayerMixerPlayable, связанный с PlayableGraph.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AnimationLayerMixerPlayable.IsLayerAdditive(System.UInt32)">
      <summary>
        <para>Возвращает true, если слой является аддитивным, иначе false.</para>
      </summary>
      <param name="layerIndex">Индекс слоя.</param>
      <returns>
        <para>True, если слой является аддитивным, иначе false.</para>
      </returns>
    </member>
    <member name="P:UnityEngine.Animations.AnimationLayerMixerPlayable.Null">
      <summary>
        <para>Возвращает недопустимый AnimationLayerMixerPlayable.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animations.AnimationLayerMixerPlayable.SetLayerAdditive(System.UInt32,System.Boolean)">
      <summary>
        <para>Указывает, является ли слой аддитивным или нет. Дополнительные слои смешиваются с предыдущими слоями.</para>
      </summary>
      <param name="layerIndex">Индекс слоя.</param>
      <param name="value">Является ли слой аддитивным или нет. Установите значение true для аддитивной смеси или false для обычной смеси.</param>
    </member>
    <member name="M:UnityEngine.Animations.AnimationLayerMixerPlayable.SetLayerMaskFromAvatarMask(System.UInt32,UnityEngine.AvatarMask)">
      <summary>
        <para>Задает маску для текущего слоя.</para>
      </summary>
      <param name="layerIndex">Индекс слоя.</param>
      <param name="mask">AvatarMask, использованный для создания новой LayerMask.</param>
    </member>
    <member name="T:UnityEngine.Animations.AnimationMixerPlayable">
      <summary>
        <para>Реализация IPlayable, управляющая микшером анимации.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animations.AnimationMixerPlayable.Create(UnityEngine.Playables.PlayableGraph,System.Int32)">
      <summary>
        <para>Создает AnimationMixerPlayable в PlayableGraph.</para>
      </summary>
      <param name="graph">PlayableGraph, который будет содержать новый AnimationMixerPlayable.</param>
      <param name="inputCount">Количество входов, которые микшер будет обновлять.</param>
      <returns>
        <para>Возвращает новый AnimationMixerPlayable, связанный с PlayableGraph.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AnimationMixerPlayable.Create(UnityEngine.Playables.PlayableGraph,System.Int32,System.Boolean)">
      <summary>
        <para>Создает AnimationMixerPlayable в PlayableGraph.</para>
      </summary>
      <param name="graph">PlayableGraph, который будет содержать новый AnimationMixerPlayable.</param>
      <param name="inputCount">Количество входов, которые микшер будет обновлять.</param>
      <param name="normalizeWeights">NormalizeWeights устарел. Это не имеет никакого эффекта и будет удалено.</param>
      <returns>
        <para>Возвращает новый AnimationMixerPlayable, связанный с PlayableGraph.</para>
      </returns>
    </member>
    <member name="P:UnityEngine.Animations.AnimationMixerPlayable.Null">
      <summary>
        <para>Возвращает недопустимый AnimationMixerPlayable.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Animations.AnimationPlayableBinding">
      <summary>
        <para>PlayableBinding, содержащий информацию, представляющую AnimationPlayableOutput.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animations.AnimationPlayableBinding.Create(System.String,UnityEngine.Object)">
      <summary>
        <para>Создает PlayableBinding, который содержит информацию, представляющую AnimationPlayableOutput.</para>
      </summary>
      <param name="name">Имя AnimationPlayableOutput.</param>
      <param name="key">Ссылка на UnityEngine.Object, который действует как ключ для этой привязки.</param>
      <returns>
        <para>Возвращает PlayableBinding, содержащий информацию, используемую для создания AnimationPlayableOutput.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.Animations.AnimationPlayableOutput">
      <summary>
        <para>Реализация IPlayableOutput, которая соединяет PlayableGraph с Animator в сцене.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animations.AnimationPlayableOutput.Create(UnityEngine.Playables.PlayableGraph,System.String,UnityEngine.Animator)">
      <summary>
        <para>Создает AnimationPlayableOutput в PlayableGraph.</para>
      </summary>
      <param name="graph">PlayableGraph, который будет содержать AnimationPlayableOutput.</param>
      <param name="name">Имя вывода.</param>
      <param name="target">Аниматор, который будет обрабатывать PlayableGraph.</param>
      <returns>
        <para>Новый AnimationPlayableOutput, прикрепленный к PlayableGraph.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AnimationPlayableOutput.GetTarget">
      <summary>
        <para>Возвращает Animator, который воспроизводит график анимации.</para>
      </summary>
      <returns>
        <para>Целевой аниматор.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AnimationPlayableOutput.SetTarget(UnityEngine.Animator)">
      <summary>
        <para>Задает аниматор, который воспроизводит график анимации.</para>
      </summary>
      <param name="value">Целевой аниматор.</param>
    </member>
    <member name="T:UnityEngine.Animations.AnimationSceneHandleUtility">
      <summary>
        <para>Статический класс, предоставляющий служебные функции для дескрипторов сцены анимации.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animations.AnimationSceneHandleUtility.ReadFloats(UnityEngine.Animations.AnimationStream,Unity.Collections.NativeArray`1&lt;UnityEngine.Animations.PropertySceneHandle&gt;,Unity.Collections.NativeArray`1&lt;System.Single&gt;)">
      <summary>
        <para>Считывает свойства с плавающей запятой из массива PropertySceneHandle (дескрипторы) и сохраняет значения с плавающей запятой в предоставленном буфере. В буфере должно быть достаточно места для хранения всех значений.</para>
      </summary>
      <param name="stream">Поток анимации.</param>
      <param name="handles">Массив PropertySceneHandle для чтения.</param>
      <param name="buffer">Буфер, в котором хранятся значения с плавающей запятой.</param>
    </member>
    <member name="M:UnityEngine.Animations.AnimationSceneHandleUtility.ReadInts(UnityEngine.Animations.AnimationStream,Unity.Collections.NativeArray`1&lt;UnityEngine.Animations.PropertySceneHandle&gt;,Unity.Collections.NativeArray`1&lt;System.Int32&gt;)">
      <summary>
        <para>Считывает целочисленные свойства из массива PropertySceneHandle (дескрипторы) и сохраняет целые числа в предоставленном буфере. В буфере должно быть достаточно места для хранения всех значений.</para>
      </summary>
      <param name="stream">Поток анимации.</param>
      <param name="handles">Массив PropertySceneHandle для чтения.</param>
      <param name="buffer">Буфер, в котором хранятся целочисленные значения.</param>
    </member>
    <member name="T:UnityEngine.Animations.AnimationScriptPlayable">
      <summary>
        <para>Playable, который может запускать пользовательское многопоточное задание анимации.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animations.AnimationScriptPlayable.Create(UnityEngine.Playables.PlayableGraph,T,System.Int32)">
      <summary>
        <para>Создает AnimationScriptPlayable в PlayableGraph.</para>
      </summary>
      <param name="graph">Объект PlayableGraph, которому будет принадлежать AnimationScriptPlayable.</param>
      <param name="job">IAnimationJob для выполнения при обработке playable.</param>
      <param name="inputCount">Количество входов на playable.</param>
      <param name="jobData">
      </param>
      <returns>
        <para>Новый AnimationScriptPlayable, связанный с PlayableGraph.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AnimationScriptPlayable.GetJobData">
      <summary>
        <para>Получает данные задания, содержащиеся в playable.</para>
      </summary>
      <returns>
        <para>Возвращает данные IAnimationJob, содержащиеся в воспроизводимом объекте.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AnimationScriptPlayable.GetProcessInputs">
      <summary>
        <para>Возвращает, будут ли обработаны воспроизводимые входы.</para>
      </summary>
      <returns>
        <para>true, если входные данные будут обработаны; false в противном случае.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AnimationScriptPlayable.SetJobData(T)">
      <summary>
        <para>Устанавливает новые данные задания в playable.</para>
      </summary>
      <param name="jobData">Новые данные IAnimationJob для установки в воспроизводимом объекте.</param>
    </member>
    <member name="M:UnityEngine.Animations.AnimationScriptPlayable.SetProcessInputs(System.Boolean)">
      <summary>
        <para>Устанавливает новое значение для обработки входных данных или нет.</para>
      </summary>
      <param name="value">Новое значение для обработки входных данных или нет.</param>
    </member>
    <member name="T:UnityEngine.Animations.AnimationStream">
      <summary>
        <para>Поток данных анимации, передаваемый от одного Playable к другому.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.AnimationStream.angularVelocity">
      <summary>
        <para>Получает или задает угловую скорость аватара для оцениваемого кадра.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.AnimationStream.deltaTime">
      <summary>
        <para>Получает дельта-время для оцениваемого кадра. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.AnimationStream.inputStreamCount">
      <summary>
        <para>Получает количество входных потоков. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.AnimationStream.isHumanStream">
      <summary>
        <para>Возвращает true, если поток исходит от гуманоидного аватара; ложно в противном случае. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.AnimationStream.isValid">
      <summary>
        <para>Возвращает true, если поток действителен; ложно в противном случае. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.AnimationStream.rootMotionPosition">
      <summary>
        <para>Получает корневую позицию движения для оцениваемого кадра. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.AnimationStream.rootMotionRotation">
      <summary>
        <para>Получает вращение корневого движения для оцениваемого кадра. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.AnimationStream.velocity">
      <summary>
        <para>Получает или задает скорость аватара для оцениваемого кадра.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animations.AnimationStream.AsHuman">
      <summary>
        <para>Получает тот же поток, но как AnimationHumanStream.</para>
      </summary>
      <returns>
        <para>Возвращает тот же поток, но как AnimationHumanStream.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AnimationStream.CopyAnimationStreamMotion(UnityEngine.Animations.AnimationStream)">
      <summary>
        <para>Глубокое копирование движения из исходного потока анимации в текущий поток анимации.</para>
      </summary>
      <param name="animationStream">Исходный поток анимации с движением для глубокого копирования.</param>
    </member>
    <member name="M:UnityEngine.Animations.AnimationStream.GetInputStream(System.Int32)">
      <summary>
        <para>Получает AnimationStream воспроизводимого ввода по индексу.</para>
      </summary>
      <param name="index">Входной индекс.</param>
      <returns>
        <para>Возвращает AnimationStream воспроизводимого ввода по индексу. Возвращает недопустимый поток, если входные данные не являются воспроизводимой анимацией.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AnimationStream.GetInputWeight(System.Int32)">
      <summary>
        <para>Получает вес объекта Playable, подключенного к определенному входному индексу.</para>
      </summary>
      <param name="index">Входной индекс.</param>
      <returns>
        <para>Возвращает вес входных данных Playable в виде числа с плавающей запятой.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.Animations.AnimationStreamHandleUtility">
      <summary>
        <para>Статический класс, предоставляющий служебные функции для дескрипторов потока анимации.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animations.AnimationStreamHandleUtility.ReadFloats(UnityEngine.Animations.AnimationStream,Unity.Collections.NativeArray`1&lt;UnityEngine.Animations.PropertyStreamHandle&gt;,Unity.Collections.NativeArray`1&lt;System.Single&gt;)">
      <summary>
        <para>Считывает свойства с плавающей запятой из массива PropertyStreamHandle (дескрипторы) и сохраняет значения с плавающей запятой в предоставленном буфере. В буфере должно быть достаточно места для хранения всех значений.</para>
      </summary>
      <param name="stream">Поток анимации.</param>
      <param name="handles">Массив PropertyStreamHandle для чтения.</param>
      <param name="buffer">Буфер, в котором хранятся значения с плавающей запятой.</param>
    </member>
    <member name="M:UnityEngine.Animations.AnimationStreamHandleUtility.ReadInts(UnityEngine.Animations.AnimationStream,Unity.Collections.NativeArray`1&lt;UnityEngine.Animations.PropertyStreamHandle&gt;,Unity.Collections.NativeArray`1&lt;System.Int32&gt;)">
      <summary>
        <para>Считывает целочисленные свойства из массива PropertyStreamHandle (дескрипторы) и сохраняет целые числа в предоставленном буфере. В буфере должно быть достаточно места для хранения всех значений.</para>
      </summary>
      <param name="stream">Поток анимации.</param>
      <param name="handles">Массив PropertyStreamHandle для чтения.</param>
      <param name="buffer">Буфер, в котором хранятся целочисленные значения.</param>
    </member>
    <member name="M:UnityEngine.Animations.AnimationStreamHandleUtility.WriteFloats(UnityEngine.Animations.AnimationStream,Unity.Collections.NativeArray`1&lt;UnityEngine.Animations.PropertyStreamHandle&gt;,Unity.Collections.NativeArray`1&lt;System.Single&gt;,System.Boolean)">
      <summary>
        <para>Записывает свойства с плавающей запятой из буфера в массив PropertyStreamHandle (дескрипторы).</para>
      </summary>
      <param name="stream">Поток анимации.</param>
      <param name="handles">Массив PropertyStreamHandle для записи.</param>
      <param name="buffer">Буфер свойств float.</param>
      <param name="useMask">Установите значение true, чтобы записать новые значения, если соответствующие дескрипторы потока еще не были изменены.</param>
    </member>
    <member name="M:UnityEngine.Animations.AnimationStreamHandleUtility.WriteInts(UnityEngine.Animations.AnimationStream,Unity.Collections.NativeArray`1&lt;UnityEngine.Animations.PropertyStreamHandle&gt;,Unity.Collections.NativeArray`1&lt;System.Int32&gt;,System.Boolean)">
      <summary>
        <para>Записывайте целые числа из буфера в дескрипторы потока свойств.</para>
      </summary>
      <param name="stream">Поток анимации.</param>
      <param name="handles">Массив PropertyStreamHandle для записи.</param>
      <param name="buffer">Буфер целочисленных свойств.</param>
      <param name="useMask">Установите значение true, чтобы записать новые значения, если соответствующие дескрипторы потока еще не были изменены.</param>
    </member>
    <member name="T:UnityEngine.Animations.AnimatorControllerPlayable">
      <summary>
        <para>Реализация IPlayable, управляющая анимацией RuntimeAnimatorController.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorControllerPlayable.Create(UnityEngine.Playables.PlayableGraph,UnityEngine.RuntimeAnimatorController)">
      <summary>
        <para>Создает AnimatorControllerPlayable в PlayableGraph.</para>
      </summary>
      <param name="graph">Объект PlayableGraph, которому будет принадлежать AnimatorControllerPlayable.</param>
      <param name="controller">RuntimeAnimatorController, который будет добавлен в граф.</param>
      <returns>
        <para>AnimatorControllerPlayable.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorControllerPlayable.CrossFade">
      <summary>
        <para>Создает переход от текущего состояния к любому другому состоянию, используя нормализованное время.</para>
      </summary>
      <param name="stateName">Название штата.</param>
      <param name="stateHashName">Хэш-имя состояния.</param>
      <param name="normalizedTransitionDuration">Продолжительность перехода (нормированная).</param>
      <param name="layer">Слой, на котором происходит кроссфейд.</param>
      <param name="normalizedTimeOffset">Время состояния (нормализованное).</param>
      <param name="normalizedTransitionTime">Время перехода (нормировано).</param>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorControllerPlayable.CrossFade">
      <summary>
        <para>Создает переход от текущего состояния к любому другому состоянию, используя нормализованное время.</para>
      </summary>
      <param name="stateName">Название штата.</param>
      <param name="stateHashName">Хэш-имя состояния.</param>
      <param name="normalizedTransitionDuration">Продолжительность перехода (нормированная).</param>
      <param name="layer">Слой, на котором происходит кроссфейд.</param>
      <param name="normalizedTimeOffset">Время состояния (нормализованное).</param>
      <param name="normalizedTransitionTime">Время перехода (нормировано).</param>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorControllerPlayable.CrossFadeInFixedTime">
      <summary>
        <para>Создает переход от текущего состояния к любому другому состоянию, используя время в секундах.</para>
      </summary>
      <param name="stateName">Название штата.</param>
      <param name="stateHashName">Хэш-имя состояния.</param>
      <param name="fixedTransitionDuration">Продолжительность перехода (в секундах).</param>
      <param name="layer">Слой, на котором происходит кроссфейд.</param>
      <param name="fixedTimeOffset">Время состояния (в секундах).</param>
      <param name="normalizedTransitionTime">Время перехода (нормировано).</param>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorControllerPlayable.CrossFadeInFixedTime">
      <summary>
        <para>Создает переход от текущего состояния к любому другому состоянию, используя время в секундах.</para>
      </summary>
      <param name="stateName">Название штата.</param>
      <param name="stateHashName">Хэш-имя состояния.</param>
      <param name="fixedTransitionDuration">Продолжительность перехода (в секундах).</param>
      <param name="layer">Слой, на котором происходит кроссфейд.</param>
      <param name="fixedTimeOffset">Время состояния (в секундах).</param>
      <param name="normalizedTransitionTime">Время перехода (нормировано).</param>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorControllerPlayable.GetAnimatorTransitionInfo(System.Int32)">
      <summary>
        <para>Возвращает AnimatorTransitionInfo с информацией о текущем переходе.</para>
      </summary>
      <param name="layerIndex">Индекс слоя.</param>
      <returns>
        <para>AnimatorTransitionInfo с информацией о текущем переходе.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorControllerPlayable.GetBool(System.String)">
      <summary>
        <para>Возвращает значение заданного логического параметра.</para>
      </summary>
      <param name="name">Имя параметра.</param>
      <param name="id">Идентификатор параметра.</param>
      <returns>
        <para>Значение параметра.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorControllerPlayable.GetBool(System.Int32)">
      <summary>
        <para>Возвращает значение заданного логического параметра.</para>
      </summary>
      <param name="name">Имя параметра.</param>
      <param name="id">Идентификатор параметра.</param>
      <returns>
        <para>Значение параметра.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorControllerPlayable.GetCurrentAnimatorClipInfo(System.Int32)">
      <summary>
        <para>Возвращает массив всех AnimatorClipInfo в текущем состоянии данного слоя.</para>
      </summary>
      <param name="layerIndex">Индекс слоя.</param>
      <returns>
        <para>Массив всех AnimatorClipInfo в текущем состоянии.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorControllerPlayable.GetCurrentAnimatorClipInfoCount(System.Int32)">
      <summary>
        <para>Возвращает количество AnimatorClipInfo в текущем состоянии.</para>
      </summary>
      <param name="layerIndex">Индекс слоя.</param>
      <returns>
        <para>Количество AnimatorClipInfo в текущем состоянии.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorControllerPlayable.GetCurrentAnimatorStateInfo(System.Int32)">
      <summary>
        <para>Возвращает AnimatorStateInfo с информацией о текущем состоянии.</para>
      </summary>
      <param name="layerIndex">Индекс слоя.</param>
      <returns>
        <para>AnimatorStateInfo с информацией о текущем состоянии.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorControllerPlayable.GetFloat(System.String)">
      <summary>
        <para>Возвращает значение заданного параметра float.</para>
      </summary>
      <param name="name">Имя параметра.</param>
      <param name="id">Идентификатор параметра.</param>
      <returns>
        <para>Значение параметра.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorControllerPlayable.GetFloat(System.Int32)">
      <summary>
        <para>Возвращает значение заданного параметра float.</para>
      </summary>
      <param name="name">Имя параметра.</param>
      <param name="id">Идентификатор параметра.</param>
      <returns>
        <para>Значение параметра.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorControllerPlayable.GetInteger(System.String)">
      <summary>
        <para>Возвращает значение заданного целочисленного параметра.</para>
      </summary>
      <param name="name">Имя параметра.</param>
      <param name="id">Идентификатор параметра.</param>
      <returns>
        <para>Значение параметра.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorControllerPlayable.GetInteger(System.Int32)">
      <summary>
        <para>Возвращает значение заданного целочисленного параметра.</para>
      </summary>
      <param name="name">Имя параметра.</param>
      <param name="id">Идентификатор параметра.</param>
      <returns>
        <para>Значение параметра.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorControllerPlayable.GetLayerIndex(System.String)">
      <summary>
        <para>Возвращает индекс слоя с заданным именем.</para>
      </summary>
      <param name="layerName">Имя слоя.</param>
      <returns>
        <para>Индекс слоя.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorControllerPlayable.GetLayerName(System.Int32)">
      <summary>
        <para>Возвращает имя слоя.</para>
      </summary>
      <param name="layerIndex">Индекс слоя.</param>
      <returns>
        <para>Имя слоя.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorControllerPlayable.GetLayerWeight(System.Int32)">
      <summary>
        <para>Возвращает вес слоя по указанному индексу.</para>
      </summary>
      <param name="layerIndex">Индекс слоя.</param>
      <returns>
        <para>Вес слоя.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorControllerPlayable.GetNextAnimatorClipInfo(System.Int32)">
      <summary>
        <para>Возвращает массив всех AnimatorClipInfo в следующем состоянии данного слоя.</para>
      </summary>
      <param name="layerIndex">Индекс слоя.</param>
      <returns>
        <para>Массив всех AnimatorClipInfo в следующем состоянии.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorControllerPlayable.GetNextAnimatorClipInfoCount(System.Int32)">
      <summary>
        <para>Возвращает номер AnimatorClipInfo в следующем состоянии.</para>
      </summary>
      <param name="layerIndex">Индекс слоя.</param>
      <returns>
        <para>Количество AnimatorClipInfo в следующем состоянии.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorControllerPlayable.GetNextAnimatorStateInfo(System.Int32)">
      <summary>
        <para>Возвращает AnimatorStateInfo с информацией о следующем состоянии.</para>
      </summary>
      <param name="layerIndex">Индекс слоя.</param>
      <returns>
        <para>AnimatorStateInfo с информацией о следующем состоянии.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorControllerPlayable.GetParameter(System.Int32)">
      <summary>
        <para>См. AnimatorController.parameters.</para>
      </summary>
      <param name="index">
      </param>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorControllerPlayable.HasState(System.Int32,System.Int32)">
      <summary>
        <para>Возвращает true, если состояние существует в этом слое, иначе false.</para>
      </summary>
      <param name="layerIndex">Индекс слоя.</param>
      <param name="stateID">Идентификатор состояния.</param>
      <returns>
        <para>Истина, если состояние существует на этом уровне, в противном случае — ложь.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorControllerPlayable.IsInTransition(System.Int32)">
      <summary>
        <para>Возвращает true, если на данном слое есть переход, иначе false.</para>
      </summary>
      <param name="layerIndex">Индекс слоя.</param>
      <returns>
        <para>Истина, если на данном слое есть переход, в противном случае — ложь.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorControllerPlayable.IsParameterControlledByCurve(System.String)">
      <summary>
        <para>Возвращает true, если параметр управляется кривой, иначе false.</para>
      </summary>
      <param name="name">Имя параметра.</param>
      <param name="id">Идентификатор параметра.</param>
      <returns>
        <para>Истина, если параметр управляется кривой, в противном случае — ложь.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorControllerPlayable.IsParameterControlledByCurve(System.Int32)">
      <summary>
        <para>Возвращает true, если параметр управляется кривой, иначе false.</para>
      </summary>
      <param name="name">Имя параметра.</param>
      <param name="id">Идентификатор параметра.</param>
      <returns>
        <para>Истина, если параметр управляется кривой, в противном случае — ложь.</para>
      </returns>
    </member>
    <member name="P:UnityEngine.Animations.AnimatorControllerPlayable.Null">
      <summary>
        <para>Возвращает недопустимый AnimatorControllerPlayable.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorControllerPlayable.Play(System.String,System.Int32,System.Single)">
      <summary>
        <para>Воспроизведение состояния.</para>
      </summary>
      <param name="stateName">Название штата.</param>
      <param name="stateNameHash">Имя хэша состояния. Если stateNameHash равен 0, изменяется текущее время состояния.</param>
      <param name="layer">Индекс слоя. Если слой равен -1, воспроизводится первое состояние с заданным именем состояния или хешем.</param>
      <param name="normalizedTime">Смещение времени между нулем и единицей.</param>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorControllerPlayable.Play(System.Int32,System.Int32,System.Single)">
      <summary>
        <para>Воспроизведение состояния.</para>
      </summary>
      <param name="stateName">Название штата.</param>
      <param name="stateNameHash">Имя хэша состояния. Если stateNameHash равен 0, изменяется текущее время состояния.</param>
      <param name="layer">Индекс слоя. Если слой равен -1, воспроизводится первое состояние с заданным именем состояния или хешем.</param>
      <param name="normalizedTime">Смещение времени между нулем и единицей.</param>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorControllerPlayable.PlayInFixedTime(System.String,System.Int32,System.Single)">
      <summary>
        <para>Воспроизведение состояния.</para>
      </summary>
      <param name="stateName">Название штата.</param>
      <param name="stateNameHash">Имя хэша состояния. Если stateNameHash равен 0, изменяется текущее время состояния.</param>
      <param name="layer">Индекс слоя. Если слой равен -1, воспроизводится первое состояние с заданным именем состояния или хешем.</param>
      <param name="fixedTime">Смещение времени (в секундах).</param>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorControllerPlayable.PlayInFixedTime(System.Int32,System.Int32,System.Single)">
      <summary>
        <para>Воспроизведение состояния.</para>
      </summary>
      <param name="stateName">Название штата.</param>
      <param name="stateNameHash">Имя хэша состояния. Если stateNameHash равен 0, изменяется текущее время состояния.</param>
      <param name="layer">Индекс слоя. Если слой равен -1, воспроизводится первое состояние с заданным именем состояния или хешем.</param>
      <param name="fixedTime">Смещение времени (в секундах).</param>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorControllerPlayable.ResetTrigger(System.String)">
      <summary>
        <para>Сбрасывает значение данного параметра триггера.</para>
      </summary>
      <param name="name">Имя параметра.</param>
      <param name="id">Идентификатор параметра.</param>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorControllerPlayable.ResetTrigger(System.Int32)">
      <summary>
        <para>Сбрасывает значение данного параметра триггера.</para>
      </summary>
      <param name="name">Имя параметра.</param>
      <param name="id">Идентификатор параметра.</param>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorControllerPlayable.SetBool(System.String,System.Boolean)">
      <summary>
        <para>Устанавливает значение данного логического параметра.</para>
      </summary>
      <param name="name">Имя параметра.</param>
      <param name="id">Идентификатор параметра.</param>
      <param name="value">Новое значение параметра.</param>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorControllerPlayable.SetBool(System.Int32,System.Boolean)">
      <summary>
        <para>Устанавливает значение данного логического параметра.</para>
      </summary>
      <param name="name">Имя параметра.</param>
      <param name="id">Идентификатор параметра.</param>
      <param name="value">Новое значение параметра.</param>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorControllerPlayable.SetFloat(System.String,System.Single)">
      <summary>
        <para>Отправлять плавающие значения в AnimatorController, чтобы влиять на переходы.</para>
      </summary>
      <param name="name">Имя параметра.</param>
      <param name="id">Идентификатор параметра.</param>
      <param name="value">Новое значение параметра.</param>
      <param name="dampTime">Общее время заслонки.</param>
      <param name="deltaTime">Дельта-время, отдаваемое демпферу.</param>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorControllerPlayable.SetFloat">
      <summary>
        <para>Отправлять плавающие значения в AnimatorController, чтобы влиять на переходы.</para>
      </summary>
      <param name="name">Имя параметра.</param>
      <param name="id">Идентификатор параметра.</param>
      <param name="value">Новое значение параметра.</param>
      <param name="dampTime">Общее время заслонки.</param>
      <param name="deltaTime">Дельта-время, отдаваемое демпферу.</param>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorControllerPlayable.SetFloat(System.Int32,System.Single)">
      <summary>
        <para>Отправлять плавающие значения в AnimatorController, чтобы влиять на переходы.</para>
      </summary>
      <param name="name">Имя параметра.</param>
      <param name="id">Идентификатор параметра.</param>
      <param name="value">Новое значение параметра.</param>
      <param name="dampTime">Общее время заслонки.</param>
      <param name="deltaTime">Дельта-время, отдаваемое демпферу.</param>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorControllerPlayable.SetFloat">
      <summary>
        <para>Отправлять плавающие значения в AnimatorController, чтобы влиять на переходы.</para>
      </summary>
      <param name="name">Имя параметра.</param>
      <param name="id">Идентификатор параметра.</param>
      <param name="value">Новое значение параметра.</param>
      <param name="dampTime">Общее время заслонки.</param>
      <param name="deltaTime">Дельта-время, отдаваемое демпферу.</param>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorControllerPlayable.SetInteger(System.String,System.Int32)">
      <summary>
        <para>Задает значение заданного целочисленного параметра.</para>
      </summary>
      <param name="name">Имя параметра.</param>
      <param name="id">Идентификатор параметра.</param>
      <param name="value">Новое значение параметра.</param>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorControllerPlayable.SetInteger(System.Int32,System.Int32)">
      <summary>
        <para>Задает значение заданного целочисленного параметра.</para>
      </summary>
      <param name="name">Имя параметра.</param>
      <param name="id">Идентификатор параметра.</param>
      <param name="value">Новое значение параметра.</param>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorControllerPlayable.SetLayerWeight(System.Int32,System.Single)">
      <summary>
        <para>Устанавливает вес слоя по заданному индексу.</para>
      </summary>
      <param name="layerIndex">Индекс слоя.</param>
      <param name="weight">Вес нового слоя.</param>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorControllerPlayable.SetTrigger(System.String)">
      <summary>
        <para>Устанавливает значение данного параметра триггера.</para>
      </summary>
      <param name="name">Имя параметра.</param>
      <param name="id">Идентификатор параметра.</param>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorControllerPlayable.SetTrigger(System.Int32)">
      <summary>
        <para>Устанавливает значение данного параметра триггера.</para>
      </summary>
      <param name="name">Имя параметра.</param>
      <param name="id">Идентификатор параметра.</param>
    </member>
    <member name="T:UnityEngine.Animations.AnimatorJobExtensions">
      <summary>
        <para>Статический класс, предоставляющий методы расширения для Animator и заданий анимации C#.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorJobExtensions.AddJobDependency(UnityEngine.Animator,Unity.Jobs.JobHandle)">
      <summary>
        <para>Создает зависимость между заданиями аниматора и заданием, представленным предоставленным дескриптором задания. Чтобы добавить несколько зависимостей заданий, вызовите этот метод для каждого задания, которое необходимо запустить перед заданиями Animator.</para>
      </summary>
      <param name="animator">Экземпляр Animator, вызывающий этот метод.</param>
      <param name="jobHandle">JobHandle задания, которое необходимо запустить перед заданиями аниматора.</param>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorJobExtensions.BindCustomStreamProperty(UnityEngine.Animator,System.String,UnityEngine.Animations.CustomStreamPropertyType)">
      <summary>
        <para>Создайте пользовательское свойство в AnimationStream, чтобы передавать дополнительные данные нижестоящим заданиям анимации в графе. Пользовательские свойства, созданные в AnimationStream, не существуют в сцене.</para>
      </summary>
      <param name="animator">Экземпляр Animator, вызывающий этот метод.</param>
      <param name="name">Имя свойства.</param>
      <param name="type">Тип создаваемого свойства (с плавающей запятой, целое число или логическое значение).</param>
      <param name="property">
      </param>
      <returns>
        <para>Возвращает PropertyStreamHandle, представляющий новую привязку.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorJobExtensions.BindSceneProperty(UnityEngine.Animator,UnityEngine.Transform,System.Type,System.String)">
      <summary>
        <para>Создайте PropertySceneHandle, представляющий новую привязку свойства Component объекта Transform в сцене.</para>
      </summary>
      <param name="animator">Экземпляр Animator, вызывающий этот метод.</param>
      <param name="transform">Преобразование в цель.</param>
      <param name="type">Тип компонента.</param>
      <param name="property">Свойство для привязки.</param>
      <param name="isObjectReference">Для isObjectReference необходимо установить значение true, если свойство для привязки действительно обращается к объекту, такому как SpriteRenderer.sprite.</param>
      <returns>
        <para>Возвращает PropertySceneHandle, представляющий новую привязку.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorJobExtensions.BindSceneProperty(UnityEngine.Animator,UnityEngine.Transform,System.Type,System.String,System.Boolean)">
      <summary>
        <para>Создайте PropertySceneHandle, представляющий новую привязку свойства Component объекта Transform в сцене.</para>
      </summary>
      <param name="animator">Экземпляр Animator, вызывающий этот метод.</param>
      <param name="transform">Преобразование в цель.</param>
      <param name="type">Тип компонента.</param>
      <param name="property">Свойство для привязки.</param>
      <param name="isObjectReference">Для isObjectReference необходимо установить значение true, если свойство для привязки действительно обращается к объекту, такому как SpriteRenderer.sprite.</param>
      <returns>
        <para>Возвращает PropertySceneHandle, представляющий новую привязку.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorJobExtensions.BindSceneTransform(UnityEngine.Animator,UnityEngine.Transform)">
      <summary>
        <para>Создайте TransformSceneHandle, представляющий новую привязку между Animator и Transform в сцене.</para>
      </summary>
      <param name="animator">Экземпляр Animator, вызывающий этот метод.</param>
      <param name="transform">Преобразование для привязки.</param>
      <returns>
        <para>Возвращает TransformSceneHandle, представляющий новую привязку.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorJobExtensions.BindStreamProperty(UnityEngine.Animator,UnityEngine.Transform,System.Type,System.String)">
      <summary>
        <para>Создайте PropertyStreamHandle, представляющий новую привязку свойства Component объекта Transform, уже привязанного к Animator.</para>
      </summary>
      <param name="animator">Экземпляр Animator, вызывающий этот метод.</param>
      <param name="transform">Преобразование в цель.</param>
      <param name="type">Тип компонента.</param>
      <param name="property">Свойство для привязки.</param>
      <param name="isObjectReference">Для параметра isObjectReference необходимо установить значение true, если свойство для привязки действительно анимирует объект, например SpriteRenderer.sprite.</param>
      <returns>
        <para>Возвращает PropertyStreamHandle, представляющий новую привязку.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorJobExtensions.BindStreamProperty(UnityEngine.Animator,UnityEngine.Transform,System.Type,System.String,System.Boolean)">
      <summary>
        <para>Создайте PropertyStreamHandle, представляющий новую привязку свойства Component объекта Transform, уже привязанного к Animator.</para>
      </summary>
      <param name="animator">Экземпляр Animator, вызывающий этот метод.</param>
      <param name="transform">Преобразование в цель.</param>
      <param name="type">Тип компонента.</param>
      <param name="property">Свойство для привязки.</param>
      <param name="isObjectReference">Для параметра isObjectReference необходимо установить значение true, если свойство для привязки действительно анимирует объект, например SpriteRenderer.sprite.</param>
      <returns>
        <para>Возвращает PropertyStreamHandle, представляющий новую привязку.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorJobExtensions.BindStreamTransform(UnityEngine.Animator,UnityEngine.Transform)">
      <summary>
        <para>Создайте TransformStreamHandle, представляющий новую привязку между Animator и Transform, уже привязанным к Animator.</para>
      </summary>
      <param name="animator">Экземпляр Animator, вызывающий этот метод.</param>
      <param name="transform">Преобразование для привязки.</param>
      <returns>
        <para>Возвращает TransformStreamHandle, представляющий новую привязку.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorJobExtensions.CloseAnimationStream(UnityEngine.Animator,UnityEngine.Animations.AnimationStream&amp;)">
      <summary>
        <para>Закройте поток, который был открыт с помощью OpenAnimationStream.</para>
      </summary>
      <param name="animator">Экземпляр Animator, вызывающий этот метод.</param>
      <param name="stream">Поток, который необходимо закрыть.</param>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorJobExtensions.OpenAnimationStream(UnityEngine.Animator,UnityEngine.Animations.AnimationStream&amp;)">
      <summary>
        <para>Откройте новый поток в Animator.</para>
      </summary>
      <param name="animator">Экземпляр Animator, вызывающий этот метод.</param>
      <param name="stream">Новый поток.</param>
      <returns>
        <para>Возвращает, был ли открыт поток.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorJobExtensions.ResolveAllSceneHandles(UnityEngine.Animator)">
      <summary>
        <para>Вновь созданные дескрипторы всегда лениво разрешаются при следующем доступе при запуске заданий. Чтобы избежать всплеска загрузки ЦП при оценке заданий, вы можете вручную разрешить все дескрипторы из основного потока.</para>
      </summary>
      <param name="animator">Экземпляр Animator, вызывающий этот метод.</param>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorJobExtensions.ResolveAllStreamHandles(UnityEngine.Animator)">
      <summary>
        <para>Вновь созданные дескрипторы всегда лениво разрешаются при следующем доступе при запуске заданий. Чтобы избежать всплеска загрузки ЦП при оценке заданий, вы можете вручную разрешить все дескрипторы из основного потока.</para>
      </summary>
      <param name="animator">Экземпляр Animator, вызывающий этот метод.</param>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorJobExtensions.UnbindAllSceneHandles(UnityEngine.Animator)">
      <summary>
        <para>Удаляет все PropertySceneHandles и TransformSceneHandles, связанные с экземпляром Animator. Используйте этот метод для управления жизненным циклом дескрипторов сцены при изменении анимированной иерархии.</para>
      </summary>
      <param name="animator">Экземпляр Animator, вызывающий этот метод.</param>
    </member>
    <member name="M:UnityEngine.Animations.AnimatorJobExtensions.UnbindAllStreamHandles(UnityEngine.Animator)">
      <summary>
        <para>Удаляет все PropertyStreamHandles и TransformStreamHandles, связанные с экземпляром Animator. Используйте этот метод для управления жизненным циклом дескрипторов потока при изменении анимированной иерархии.</para>
      </summary>
      <param name="animator">Экземпляр Animator, вызывающий этот метод.</param>
    </member>
    <member name="T:UnityEngine.Animations.Axis">
      <summary>
        <para>Представляет оси, используемые в 3D-пространстве.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Animations.Axis.None">
      <summary>
        <para>Представляет случай, когда ось не указана.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Animations.Axis.X">
      <summary>
        <para>Представляет ось X.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Animations.Axis.Y">
      <summary>
        <para>Представляет ось Y.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Animations.Axis.Z">
      <summary>
        <para>Представляет ось Z.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Animations.ConstraintSource">
      <summary>
        <para>Представляет источник ограничения.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.ConstraintSource.sourceTransform">
      <summary>
        <para>Компонент преобразования исходного объекта.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.ConstraintSource.weight">
      <summary>
        <para>Вес источника при оценке ограничения.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Animations.CustomStreamPropertyType">
      <summary>
        <para>Тип пользовательского свойства потока для создания с помощью BindCustomStreamProperty</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Animations.CustomStreamPropertyType.Bool">
      <summary>
        <para>Логическое значение.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Animations.CustomStreamPropertyType.Float">
      <summary>
        <para>Значение с плавающей запятой.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Animations.CustomStreamPropertyType.Int">
      <summary>
        <para>Целочисленное значение.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Animations.DiscreteEvaluationAttribute">
      <summary>
        <para>Используйте этот атрибут, чтобы указать, что свойство будет оцениваться как дискретное значение во время воспроизведения анимации.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animations.DiscreteEvaluationAttribute.#ctor">
      <summary>
        <para>Используйте этот атрибут, чтобы указать, что свойство будет оцениваться как дискретное значение во время воспроизведения анимации.</para>
      </summary>
    </member>
    <member name="?:UnityEngine.Animations.IAnimationJob">
      <summary>
        <para>Интерфейс, определяющий задание анимации для использования с IAnimationJobPlayable.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animations.IAnimationJob.ProcessAnimation(UnityEngine.Animations.AnimationStream)">
      <summary>
        <para>Определяет, что делать при обработке анимации.</para>
      </summary>
      <param name="stream">Поток анимации для работы.</param>
    </member>
    <member name="M:UnityEngine.Animations.IAnimationJob.ProcessRootMotion(UnityEngine.Animations.AnimationStream)">
      <summary>
        <para>Определяет, что делать при обработке корневого движения.</para>
      </summary>
      <param name="stream">Поток анимации для работы.</param>
    </member>
    <member name="?:UnityEngine.Animations.IAnimationJobPlayable">
      <summary>
        <para>Интерфейс, определяющий воспроизводимую анимацию, использующую IAnimationJob.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animations.IAnimationJobPlayable.GetJobData">
      <summary>
        <para>Получает данные задания, содержащиеся в playable.</para>
      </summary>
      <returns>
        <para>Возвращает данные IAnimationJob, содержащиеся в воспроизводимом объекте.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.IAnimationJobPlayable.SetJobData(T)">
      <summary>
        <para>Устанавливает новые данные задания в playable.</para>
      </summary>
      <param name="jobData">Новые данные IAnimationJob для установки в воспроизводимом объекте.</param>
    </member>
    <member name="?:UnityEngine.Animations.IAnimationWindowPreview">
      <summary>
        <para>Позволяет классу изменять способ выборки AnimationClip в окне анимации путем предоставления собственных узлов Playable для окна анимации PlayableGraph. Класс также должен наследоваться от MonoBehaviour.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animations.IAnimationWindowPreview.BuildPreviewGraph(UnityEngine.Playables.PlayableGraph,UnityEngine.Playables.Playable)">
      <summary>
        <para>Добавляет пользовательские узлы Playable в окно анимации PlayableGraph.</para>
      </summary>
      <param name="graph">Окно анимации PlayableGraph.</param>
      <param name="inputPlayable">Текущий корень PlayableGraph.</param>
      <returns>
        <para>Возвращает новый корень PlayableGraph.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.IAnimationWindowPreview.StartPreview">
      <summary>
        <para>Обратный вызов уведомления, когда окно анимации начинает предварительный просмотр AnimationClip.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animations.IAnimationWindowPreview.StopPreview">
      <summary>
        <para>Обратный вызов уведомления, когда окно анимации прекращает предварительный просмотр AnimationClip.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animations.IAnimationWindowPreview.UpdatePreviewGraph(UnityEngine.Playables.PlayableGraph)">
      <summary>
        <para>Обратный вызов уведомления, когда окно анимации обновляет свой PlayableGraph перед выборкой AnimationClip.</para>
      </summary>
      <param name="graph">Окно анимации PlayableGraph.</param>
    </member>
    <member name="?:UnityEngine.Animations.IConstraint">
      <summary>
        <para>Общий интерфейс для компонентов ограничений.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.IConstraint.constraintActive">
      <summary>
        <para>Активируйте или деактивируйте ограничение.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.IConstraint.locked">
      <summary>
        <para>Заблокируйте или разблокируйте смещение и положение в состоянии покоя.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.IConstraint.sourceCount">
      <summary>
        <para>Получает количество источников, установленных в данный момент для компонента.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.IConstraint.weight">
      <summary>
        <para>Вес компонента ограничения.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animations.IConstraint.AddSource(UnityEngine.Animations.ConstraintSource)">
      <summary>
        <para>Добавьте источник ограничений.</para>
      </summary>
      <param name="source">Исходный объект и его вес.</param>
      <returns>
        <para>Возвращает индекс добавленного источника.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.IConstraint.GetSource(System.Int32)">
      <summary>
        <para>Получает источник ограничения по индексу.</para>
      </summary>
      <param name="index">Индекс источника.</param>
      <returns>
        <para>Исходный объект и его вес.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.IConstraint.GetSources(System.Collections.Generic.List`1&lt;UnityEngine.Animations.ConstraintSource&gt;)">
      <summary>
        <para>Получает список источников.</para>
      </summary>
      <param name="sources">Список источников для заполнения компонентом.</param>
    </member>
    <member name="M:UnityEngine.Animations.IConstraint.RemoveSource(System.Int32)">
      <summary>
        <para>Удаляет источник из компонента.</para>
      </summary>
      <param name="index">Индекс удаляемого источника.</param>
    </member>
    <member name="M:UnityEngine.Animations.IConstraint.SetSource(System.Int32,UnityEngine.Animations.ConstraintSource)">
      <summary>
        <para>Устанавливает источник по указанному индексу.</para>
      </summary>
      <param name="index">Индекс источника для установки.</param>
      <param name="source">Исходный объект и его вес.</param>
    </member>
    <member name="M:UnityEngine.Animations.IConstraint.SetSources(System.Collections.Generic.List`1&lt;UnityEngine.Animations.ConstraintSource&gt;)">
      <summary>
        <para>Задает список источников компонента.</para>
      </summary>
      <param name="sources">Список источников для установки.</param>
    </member>
    <member name="T:UnityEngine.Animations.LookAtConstraint">
      <summary>
        <para>
Ограничивает ориентацию объекта относительно положения одного или нескольких исходных объектов, чтобы объект был обращен к среднему положению источников.
LookAtConstraint — это упрощенный Animations.AimConstraint, обычно используемый с камерой.
</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.LookAtConstraint.constraintActive">
      <summary>
        <para>Активирует или деактивирует ограничение.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.LookAtConstraint.locked">
      <summary>
        <para>Блокирует смещение и вращение в состоянии покоя.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.LookAtConstraint.roll">
      <summary>
        <para>Угол поворота по оси z объекта. Ограничение использует это свойство для вычисления вектора мира вверх, когда Animations.LookAtConstraint.UseUpObject имеет значение false.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.LookAtConstraint.rotationAtRest">
      <summary>
        <para>Поворот, используемый, когда источники имеют общий вес 0.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.LookAtConstraint.rotationOffset">
      <summary>
        <para>Представляет смещение от ограниченной ориентации.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.LookAtConstraint.sourceCount">
      <summary>
        <para>Количество источников, установленных на компоненте (только для чтения).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.LookAtConstraint.useUpObject">
      <summary>
        <para>Определяет, как рассчитывается вектор вверх.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.LookAtConstraint.weight">
      <summary>
        <para>Вес компонента ограничения.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.LookAtConstraint.worldUpObject">
      <summary>
        <para>Объект мирового уровня, используемый для вычисления вектора мирового уровня, когда Animations.LookAtConstraint.UseUpObject имеет значение true.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animations.LookAtConstraint.AddSource(UnityEngine.Animations.ConstraintSource)">
      <summary>
        <para>Добавляет источник ограничения.</para>
      </summary>
      <param name="source">Исходный объект и его вес.</param>
      <returns>
        <para>Возвращает индекс добавленного источника.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.LookAtConstraint.GetSource(System.Int32)">
      <summary>
        <para>Получает источник ограничения по индексу.</para>
      </summary>
      <param name="index">Индекс источника.</param>
      <returns>
        <para>Возвращает исходный объект и его вес.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.LookAtConstraint.GetSources(System.Collections.Generic.List`1&lt;UnityEngine.Animations.ConstraintSource&gt;)">
      <summary>
        <para>Получает список источников.</para>
      </summary>
      <param name="sources">Список источников для заполнения компонентом.</param>
    </member>
    <member name="M:UnityEngine.Animations.LookAtConstraint.RemoveSource(System.Int32)">
      <summary>
        <para>Удаляет источник из компонента.</para>
      </summary>
      <param name="index">Индекс удаляемого источника.</param>
    </member>
    <member name="M:UnityEngine.Animations.LookAtConstraint.SetSource(System.Int32,UnityEngine.Animations.ConstraintSource)">
      <summary>
        <para>Устанавливает источник по указанному индексу.</para>
      </summary>
      <param name="index">Индекс источника для установки.</param>
      <param name="source">Исходный объект и его вес.</param>
    </member>
    <member name="M:UnityEngine.Animations.LookAtConstraint.SetSources(System.Collections.Generic.List`1&lt;UnityEngine.Animations.ConstraintSource&gt;)">
      <summary>
        <para>Задает список источников компонента.</para>
      </summary>
      <param name="sources">Список источников для установки.</param>
    </member>
    <member name="T:UnityEngine.Animations.MuscleHandle">
      <summary>
        <para>Дескриптор мышцы в AnimationHumanStream.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.MuscleHandle.dof">
      <summary>
        <para>Мышечная часть человека. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.MuscleHandle.humanPartDof">
      <summary>
        <para>Мышечная часть человека. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.MuscleHandle.muscleHandleCount">
      <summary>
        <para>Общее количество частей DoF у гуманоида. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.MuscleHandle.name">
      <summary>
        <para>Название мышцы. (Только чтение)</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animations.MuscleHandle.#ctor(UnityEngine.BodyDof)">
      <summary>
        <para>Различные конструкторы, создающие дескриптор мускула.</para>
      </summary>
      <param name="bodyDof">Подчасть мышечного тела.</param>
      <param name="headDof">Подчасть мышечной головки.</param>
      <param name="partDof">Мышечная часть человека.</param>
      <param name="legDof">Мышечная часть ноги.</param>
      <param name="armDof">Часть мускула руки.</param>
      <param name="fingerDof">Подчасть мышечного пальца.</param>
    </member>
    <member name="M:UnityEngine.Animations.MuscleHandle.#ctor(UnityEngine.HeadDof)">
      <summary>
        <para>Различные конструкторы, создающие дескриптор мускула.</para>
      </summary>
      <param name="bodyDof">Подчасть мышечного тела.</param>
      <param name="headDof">Подчасть мышечной головки.</param>
      <param name="partDof">Мышечная часть человека.</param>
      <param name="legDof">Мышечная часть ноги.</param>
      <param name="armDof">Часть мускула руки.</param>
      <param name="fingerDof">Подчасть мышечного пальца.</param>
    </member>
    <member name="M:UnityEngine.Animations.MuscleHandle.#ctor">
      <summary>
        <para>Различные конструкторы, создающие дескриптор мускула.</para>
      </summary>
      <param name="bodyDof">Подчасть мышечного тела.</param>
      <param name="headDof">Подчасть мышечной головки.</param>
      <param name="partDof">Мышечная часть человека.</param>
      <param name="legDof">Мышечная часть ноги.</param>
      <param name="armDof">Часть мускула руки.</param>
      <param name="fingerDof">Подчасть мышечного пальца.</param>
    </member>
    <member name="M:UnityEngine.Animations.MuscleHandle.#ctor">
      <summary>
        <para>Различные конструкторы, создающие дескриптор мускула.</para>
      </summary>
      <param name="bodyDof">Подчасть мышечного тела.</param>
      <param name="headDof">Подчасть мышечной головки.</param>
      <param name="partDof">Мышечная часть человека.</param>
      <param name="legDof">Мышечная часть ноги.</param>
      <param name="armDof">Часть мускула руки.</param>
      <param name="fingerDof">Подчасть мышечного пальца.</param>
    </member>
    <member name="M:UnityEngine.Animations.MuscleHandle.#ctor(UnityEngine.HumanPartDof,UnityEngine.LegDof)">
      <summary>
        <para>Различные конструкторы, создающие дескриптор мускула.</para>
      </summary>
      <param name="bodyDof">Подчасть мышечного тела.</param>
      <param name="headDof">Подчасть мышечной головки.</param>
      <param name="partDof">Мышечная часть человека.</param>
      <param name="legDof">Мышечная часть ноги.</param>
      <param name="armDof">Часть мускула руки.</param>
      <param name="fingerDof">Подчасть мышечного пальца.</param>
    </member>
    <member name="M:UnityEngine.Animations.MuscleHandle.#ctor(UnityEngine.HumanPartDof,UnityEngine.ArmDof)">
      <summary>
        <para>Различные конструкторы, создающие дескриптор мускула.</para>
      </summary>
      <param name="bodyDof">Подчасть мышечного тела.</param>
      <param name="headDof">Подчасть мышечной головки.</param>
      <param name="partDof">Мышечная часть человека.</param>
      <param name="legDof">Мышечная часть ноги.</param>
      <param name="armDof">Часть мускула руки.</param>
      <param name="fingerDof">Подчасть мышечного пальца.</param>
    </member>
    <member name="M:UnityEngine.Animations.MuscleHandle.#ctor(UnityEngine.HumanPartDof,UnityEngine.FingerDof)">
      <summary>
        <para>Различные конструкторы, создающие дескриптор мускула.</para>
      </summary>
      <param name="bodyDof">Подчасть мышечного тела.</param>
      <param name="headDof">Подчасть мышечной головки.</param>
      <param name="partDof">Мышечная часть человека.</param>
      <param name="legDof">Мышечная часть ноги.</param>
      <param name="armDof">Часть мускула руки.</param>
      <param name="fingerDof">Подчасть мышечного пальца.</param>
    </member>
    <member name="M:UnityEngine.Animations.MuscleHandle.GetMuscleHandles(UnityEngine.Animations.MuscleHandle[])">
      <summary>
        <para>Заполняет массив всеми возможными дескрипторами мышц гуманоида.</para>
      </summary>
      <param name="muscleHandles">Массив MuscleHandle.</param>
    </member>
    <member name="T:UnityEngine.Animations.NotKeyableAttribute">
      <summary>
        <para>Используйте этот атрибут в скрипте, чтобы пометить свойство как неанимируемое.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animations.NotKeyableAttribute.#ctor">
      <summary>
        <para>Используйте этот атрибут в скрипте, чтобы пометить свойство как неанимируемое.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Animations.ParentConstraint">
      <summary>
        <para>Ограничивает ориентацию и перемещение объекта в один или несколько исходных объектов. Ограниченный объект ведет себя так, как будто он находится в иерархии источников.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.ParentConstraint.constraintActive">
      <summary>
        <para>Активирует или деактивирует ограничение.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.ParentConstraint.locked">
      <summary>
        <para>Блокирует смещения и положение (перемещение и вращение) в состоянии покоя.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.ParentConstraint.rotationAtRest">
      <summary>
        <para>Поворот, используемый, когда источники имеют общий вес 0.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.ParentConstraint.rotationAxis">
      <summary>
        <para>Оси вращения, на которые влияет ParentConstraint.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.ParentConstraint.rotationOffsets">
      <summary>
        <para>Поворот смещается от ограниченной ориентации.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.ParentConstraint.sourceCount">
      <summary>
        <para>Количество источников, установленных на компоненте (только для чтения).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.ParentConstraint.translationAtRest">
      <summary>
        <para>Положение объекта в локальном пространстве, используемое, когда источники имеют общий вес 0.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.ParentConstraint.translationAxis">
      <summary>
        <para>Оси перевода, затронутые ParentConstraint.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.ParentConstraint.translationOffsets">
      <summary>
        <para>Перевод смещается от ограниченной ориентации.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.ParentConstraint.weight">
      <summary>
        <para>Вес компонента ограничения.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animations.ParentConstraint.AddSource(UnityEngine.Animations.ConstraintSource)">
      <summary>
        <para>Добавляет источник ограничения.</para>
      </summary>
      <param name="source">Исходный объект и его вес.</param>
      <returns>
        <para>Возвращает индекс добавленного источника.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.ParentConstraint.GetRotationOffset(System.Int32)">
      <summary>
        <para>Получает смещение поворота, связанное с источником по индексу.</para>
      </summary>
      <param name="index">Индекс источника ограничения.</param>
      <returns>
        <para>Смещение поворота в виде углов Эйлера.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.ParentConstraint.GetSource(System.Int32)">
      <summary>
        <para>Получает источник ограничения по индексу.</para>
      </summary>
      <param name="index">Индекс источника.</param>
      <returns>
        <para>Исходный объект и его вес.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.ParentConstraint.GetSources(System.Collections.Generic.List`1&lt;UnityEngine.Animations.ConstraintSource&gt;)">
      <summary>
        <para>Получает список источников.</para>
      </summary>
      <param name="sources">Список источников, заполняемый компонентом.</param>
    </member>
    <member name="M:UnityEngine.Animations.ParentConstraint.GetTranslationOffset(System.Int32)">
      <summary>
        <para>Получает смещение поворота, связанное с источником по индексу.</para>
      </summary>
      <param name="index">Индекс источника ограничения.</param>
      <returns>
        <para>Смещение перевода.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.ParentConstraint.RemoveSource(System.Int32)">
      <summary>
        <para>Удаляет источник из компонента.</para>
      </summary>
      <param name="index">Индекс удаляемого источника.</param>
    </member>
    <member name="M:UnityEngine.Animations.ParentConstraint.SetRotationOffset(System.Int32,UnityEngine.Vector3)">
      <summary>
        <para>Задает смещение поворота, связанное с источником по индексу.</para>
      </summary>
      <param name="index">Индекс источника ограничения.</param>
      <param name="value">Новое смещение поворота.</param>
    </member>
    <member name="M:UnityEngine.Animations.ParentConstraint.SetSource(System.Int32,UnityEngine.Animations.ConstraintSource)">
      <summary>
        <para>Устанавливает источник по указанному индексу.</para>
      </summary>
      <param name="index">Индекс источника для установки.</param>
      <param name="source">Исходный объект и его вес.</param>
    </member>
    <member name="M:UnityEngine.Animations.ParentConstraint.SetSources(System.Collections.Generic.List`1&lt;UnityEngine.Animations.ConstraintSource&gt;)">
      <summary>
        <para>Задает список источников компонента.</para>
      </summary>
      <param name="sources">Список источников для установки.</param>
    </member>
    <member name="M:UnityEngine.Animations.ParentConstraint.SetTranslationOffset(System.Int32,UnityEngine.Vector3)">
      <summary>
        <para>Задает смещение перевода, связанное с источником по индексу.</para>
      </summary>
      <param name="index">Индекс источника ограничения.</param>
      <param name="value">Новое смещение перевода.</param>
    </member>
    <member name="T:UnityEngine.Animations.PositionConstraint">
      <summary>
        <para>Ограничивает положение объекта относительно положения одного или нескольких исходных объектов.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.PositionConstraint.constraintActive">
      <summary>
        <para>Активирует или деактивирует ограничение.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.PositionConstraint.locked">
      <summary>
        <para>Блокирует смещение и положение в состоянии покоя.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.PositionConstraint.sourceCount">
      <summary>
        <para>Количество источников, установленных на компоненте (только для чтения).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.PositionConstraint.translationAtRest">
      <summary>
        <para>Перевод, используемый, когда общий вес источников равен 0.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.PositionConstraint.translationAxis">
      <summary>
        <para>Оси, на которые влияет PositionConstraint.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.PositionConstraint.translationOffset">
      <summary>
        <para>Смещение от ограниченной позиции.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.PositionConstraint.weight">
      <summary>
        <para>Вес компонента ограничения.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animations.PositionConstraint.AddSource(UnityEngine.Animations.ConstraintSource)">
      <summary>
        <para>Добавляет источник ограничения.</para>
      </summary>
      <param name="source">Исходный объект и его вес.</param>
      <returns>
        <para>Возвращает индекс добавленного источника.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.PositionConstraint.GetSource(System.Int32)">
      <summary>
        <para>Получает источник ограничения по индексу.</para>
      </summary>
      <param name="index">Индекс источника.</param>
      <returns>
        <para>Исходный объект и его вес.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.PositionConstraint.GetSources(System.Collections.Generic.List`1&lt;UnityEngine.Animations.ConstraintSource&gt;)">
      <summary>
        <para>Получает список источников.</para>
      </summary>
      <param name="sources">Список источников для заполнения компонентом.</param>
    </member>
    <member name="M:UnityEngine.Animations.PositionConstraint.RemoveSource(System.Int32)">
      <summary>
        <para>Удаляет источник из компонента.</para>
      </summary>
      <param name="index">Индекс удаляемого источника.</param>
    </member>
    <member name="M:UnityEngine.Animations.PositionConstraint.SetSource(System.Int32,UnityEngine.Animations.ConstraintSource)">
      <summary>
        <para>Устанавливает источник по указанному индексу.</para>
      </summary>
      <param name="index">Индекс источника для установки.</param>
      <param name="source">Исходный объект и его вес.</param>
    </member>
    <member name="M:UnityEngine.Animations.PositionConstraint.SetSources(System.Collections.Generic.List`1&lt;UnityEngine.Animations.ConstraintSource&gt;)">
      <summary>
        <para>Задает список источников компонента.</para>
      </summary>
      <param name="sources">Список источников для установки.</param>
    </member>
    <member name="T:UnityEngine.Animations.PropertySceneHandle">
      <summary>
        <para>Дескриптор для чтения свойства компонента объекта в сцене.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animations.PropertySceneHandle.GetBool(UnityEngine.Animations.AnimationStream)">
      <summary>
        <para>Получает логическое значение свойства объекта в сцене.</para>
      </summary>
      <param name="stream">AnimationStream, управляющий этим дескриптором.</param>
      <returns>
        <para>Логическое значение свойства.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.PropertySceneHandle.GetFloat(UnityEngine.Animations.AnimationStream)">
      <summary>
        <para>Получает значение свойства float из объекта в сцене.</para>
      </summary>
      <param name="stream">AnimationStream, управляющий этим дескриптором.</param>
      <returns>
        <para>Значение свойства float.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.PropertySceneHandle.GetInt(UnityEngine.Animations.AnimationStream)">
      <summary>
        <para>Получает целочисленное значение свойства объекта в сцене.</para>
      </summary>
      <param name="stream">AnimationStream, управляющий этим дескриптором.</param>
      <returns>
        <para>Целочисленное значение свойства.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.PropertySceneHandle.IsResolved(UnityEngine.Animations.AnimationStream)">
      <summary>
        <para>Возвращает, разрешен ли дескриптор.</para>
      </summary>
      <param name="stream">AnimationStream, управляющий этим дескриптором.</param>
      <returns>
        <para>Возвращает true, если дескриптор разрешен, иначе false.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.PropertySceneHandle.IsValid(UnityEngine.Animations.AnimationStream)">
      <summary>
        <para>Возвращает значение допустимого дескриптора.</para>
      </summary>
      <param name="stream">AnimationStream, управляющий этим дескриптором.</param>
      <returns>
        <para>Является ли дескриптор действительным.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.PropertySceneHandle.Resolve(UnityEngine.Animations.AnimationStream)">
      <summary>
        <para>Разрешает дескриптор.</para>
      </summary>
      <param name="stream">AnimationStream, управляющий этим дескриптором.</param>
    </member>
    <member name="M:UnityEngine.Animations.PropertySceneHandle.SetBool(UnityEngine.Animations.AnimationStream,System.Boolean)">
      <summary>
        <para>Устанавливает логическое значение свойства для объекта в сцене.</para>
      </summary>
      <param name="stream">AnimationStream, управляющий этим дескриптором.</param>
      <param name="value">Новое логическое значение свойства.</param>
    </member>
    <member name="M:UnityEngine.Animations.PropertySceneHandle.SetFloat(UnityEngine.Animations.AnimationStream,System.Single)">
      <summary>
        <para>Устанавливает значение свойства float для объекта в сцене.</para>
      </summary>
      <param name="stream">AnimationStream, управляющий этим дескриптором.</param>
      <param name="value">Новое значение свойства float.</param>
    </member>
    <member name="M:UnityEngine.Animations.PropertySceneHandle.SetInt(UnityEngine.Animations.AnimationStream,System.Int32)">
      <summary>
        <para>Устанавливает целочисленное значение свойства для объекта в сцене.</para>
      </summary>
      <param name="stream">AnimationStream, управляющий этим дескриптором.</param>
      <param name="value">Новое целочисленное значение свойства.</param>
    </member>
    <member name="T:UnityEngine.Animations.PropertyStreamHandle">
      <summary>
        <para>Дескриптор свойства Component объекта в AnimationStream.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animations.PropertyStreamHandle.GetBool(UnityEngine.Animations.AnimationStream)">
      <summary>
        <para>Получает логическое значение свойства из потока.</para>
      </summary>
      <param name="stream">AnimationStream, содержащий анимированные значения.</param>
      <returns>
        <para>Логическое значение свойства.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.PropertyStreamHandle.GetFloat(UnityEngine.Animations.AnimationStream)">
      <summary>
        <para>Получает значение свойства float из потока.</para>
      </summary>
      <param name="stream">AnimationStream, содержащий анимированные значения.</param>
      <returns>
        <para>Значение свойства float.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.PropertyStreamHandle.GetInt(UnityEngine.Animations.AnimationStream)">
      <summary>
        <para>Получает целочисленное значение свойства из потока.</para>
      </summary>
      <param name="stream">AnimationStream, содержащий анимированные значения.</param>
      <returns>
        <para>Целочисленное значение свойства.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.PropertyStreamHandle.GetReadMask(UnityEngine.Animations.AnimationStream)">
      <summary>
        <para>Получает маску чтения свойства.</para>
      </summary>
      <param name="stream">AnimationStream, содержащий анимированные значения.</param>
      <returns>
        <para>Возвращает true, если свойство может быть прочитано.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.PropertyStreamHandle.IsResolved(UnityEngine.Animations.AnimationStream)">
      <summary>
        <para>Возвращает, разрешен ли дескриптор.</para>
      </summary>
      <param name="stream">AnimationStream, содержащий анимированные значения.</param>
      <returns>
        <para>Возвращает true, если дескриптор разрешен, иначе false.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.PropertyStreamHandle.IsValid(UnityEngine.Animations.AnimationStream)">
      <summary>
        <para>Возвращает значение допустимого дескриптора.</para>
      </summary>
      <param name="stream">AnimationStream, содержащий анимированные значения.</param>
      <returns>
        <para>Является ли дескриптор действительным.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.PropertyStreamHandle.Resolve(UnityEngine.Animations.AnimationStream)">
      <summary>
        <para>Разрешает дескриптор.</para>
      </summary>
      <param name="stream">AnimationStream, содержащий анимированные значения.</param>
    </member>
    <member name="M:UnityEngine.Animations.PropertyStreamHandle.SetBool(UnityEngine.Animations.AnimationStream,System.Boolean)">
      <summary>
        <para>Устанавливает логическое значение свойства в поток.</para>
      </summary>
      <param name="stream">AnimationStream, содержащий анимированные значения.</param>
      <param name="value">Новое логическое значение свойства.</param>
    </member>
    <member name="M:UnityEngine.Animations.PropertyStreamHandle.SetFloat(UnityEngine.Animations.AnimationStream,System.Single)">
      <summary>
        <para>Устанавливает значение свойства float в поток.</para>
      </summary>
      <param name="stream">AnimationStream, содержащий анимированные значения.</param>
      <param name="value">Новое значение свойства float.</param>
    </member>
    <member name="M:UnityEngine.Animations.PropertyStreamHandle.SetInt(UnityEngine.Animations.AnimationStream,System.Int32)">
      <summary>
        <para>Устанавливает целочисленное значение свойства в поток.</para>
      </summary>
      <param name="stream">AnimationStream, содержащий анимированные значения.</param>
      <param name="value">Новое целочисленное значение свойства.</param>
    </member>
    <member name="T:UnityEngine.Animations.RotationConstraint">
      <summary>
        <para>Ограничивает вращение объекта относительно вращения одного или нескольких исходных объектов.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.RotationConstraint.constraintActive">
      <summary>
        <para>Активирует или деактивирует ограничение.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.RotationConstraint.locked">
      <summary>
        <para>Блокирует смещение и вращение в состоянии покоя.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.RotationConstraint.rotationAtRest">
      <summary>
        <para>Поворот, используемый, когда источники имеют общий вес 0.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.RotationConstraint.rotationAxis">
      <summary>
        <para>Оси, на которые влияет RotationConstraint.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.RotationConstraint.rotationOffset">
      <summary>
        <para>Смещение от ограниченного поворота.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.RotationConstraint.sourceCount">
      <summary>
        <para>Количество источников, установленных на компоненте (только для чтения).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.RotationConstraint.weight">
      <summary>
        <para>Вес компонента ограничения.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animations.RotationConstraint.AddSource(UnityEngine.Animations.ConstraintSource)">
      <summary>
        <para>Добавляет источник ограничения.</para>
      </summary>
      <param name="source">Исходный объект и его вес.</param>
      <returns>
        <para>Возвращает индекс добавленного источника.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.RotationConstraint.GetSource(System.Int32)">
      <summary>
        <para>Получает источник ограничения по индексу.</para>
      </summary>
      <param name="index">Индекс источника.</param>
      <returns>
        <para>Исходный объект и его вес.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.RotationConstraint.GetSources(System.Collections.Generic.List`1&lt;UnityEngine.Animations.ConstraintSource&gt;)">
      <summary>
        <para>Получает список источников.</para>
      </summary>
      <param name="sources">Список источников для заполнения компонентом.</param>
    </member>
    <member name="M:UnityEngine.Animations.RotationConstraint.RemoveSource(System.Int32)">
      <summary>
        <para>Удаляет источник из компонента.</para>
      </summary>
      <param name="index">Индекс удаляемого источника.</param>
    </member>
    <member name="M:UnityEngine.Animations.RotationConstraint.SetSource(System.Int32,UnityEngine.Animations.ConstraintSource)">
      <summary>
        <para>Устанавливает источник по указанному индексу.</para>
      </summary>
      <param name="index">Индекс источника для установки.</param>
      <param name="source">Исходный объект и его вес.</param>
    </member>
    <member name="M:UnityEngine.Animations.RotationConstraint.SetSources(System.Collections.Generic.List`1&lt;UnityEngine.Animations.ConstraintSource&gt;)">
      <summary>
        <para>Задает список источников компонента.</para>
      </summary>
      <param name="sources">Список источников для установки.</param>
    </member>
    <member name="T:UnityEngine.Animations.ScaleConstraint">
      <summary>
        <para>Ограничивает масштаб объекта относительно масштаба одного или нескольких исходных объектов.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.ScaleConstraint.constraintActive">
      <summary>
        <para>Активирует или деактивирует ограничение.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.ScaleConstraint.locked">
      <summary>
        <para>Блокирует смещение и масштаб в состоянии покоя.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.ScaleConstraint.scaleAtRest">
      <summary>
        <para>Шкала, используемая, когда общий вес источников равен 0.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.ScaleConstraint.scaleOffset">
      <summary>
        <para>Смещение от ограниченного масштаба.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.ScaleConstraint.scalingAxis">
      <summary>
        <para>Оси, затронутые ScaleConstraint.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.ScaleConstraint.sourceCount">
      <summary>
        <para>Количество источников, установленных на компоненте (только для чтения).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animations.ScaleConstraint.weight">
      <summary>
        <para>Вес компонента ограничения.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animations.ScaleConstraint.AddSource(UnityEngine.Animations.ConstraintSource)">
      <summary>
        <para>Добавляет источник ограничения.</para>
      </summary>
      <param name="source">Исходный объект и его вес.</param>
      <returns>
        <para>Возвращает индекс добавленного источника.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.ScaleConstraint.GetSource(System.Int32)">
      <summary>
        <para>Получает источник ограничения по индексу.</para>
      </summary>
      <param name="index">Индекс источника.</param>
      <returns>
        <para>Исходный объект и его вес.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.ScaleConstraint.GetSources(System.Collections.Generic.List`1&lt;UnityEngine.Animations.ConstraintSource&gt;)">
      <summary>
        <para>Получает список источников.</para>
      </summary>
      <param name="sources">Список источников для заполнения компонентом.</param>
    </member>
    <member name="M:UnityEngine.Animations.ScaleConstraint.RemoveSource(System.Int32)">
      <summary>
        <para>Удаляет источник из компонента.</para>
      </summary>
      <param name="index">Индекс удаляемого источника.</param>
    </member>
    <member name="M:UnityEngine.Animations.ScaleConstraint.SetSource(System.Int32,UnityEngine.Animations.ConstraintSource)">
      <summary>
        <para>Устанавливает источник по указанному индексу.</para>
      </summary>
      <param name="index">Индекс источника для установки.</param>
      <param name="source">Исходный объект и его вес.</param>
    </member>
    <member name="M:UnityEngine.Animations.ScaleConstraint.SetSources(System.Collections.Generic.List`1&lt;UnityEngine.Animations.ConstraintSource&gt;)">
      <summary>
        <para>Задает список источников компонента.</para>
      </summary>
      <param name="sources">Список источников для установки.</param>
    </member>
    <member name="T:UnityEngine.Animations.TransformSceneHandle">
      <summary>
        <para>Дескриптор для чтения положения, поворота и масштаба объекта в сцене.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animations.TransformSceneHandle.GetGlobalTR(UnityEngine.Animations.AnimationStream,UnityEngine.Vector3&amp;,UnityEngine.Quaternion&amp;)">
      <summary>
        <para>Получает положение и масштабированный поворот преобразования в мировом пространстве.</para>
      </summary>
      <param name="stream">AnimationStream, который управляет этим дескриптором.</param>
      <param name="position">Положение преобразования в мировом пространстве.</param>
      <param name="rotation">Вращение преобразования в мировом пространстве.</param>
    </member>
    <member name="M:UnityEngine.Animations.TransformSceneHandle.GetLocalPosition(UnityEngine.Animations.AnimationStream)">
      <summary>
        <para>Получает положение преобразования относительно родителя.</para>
      </summary>
      <param name="stream">AnimationStream, который управляет этим дескриптором.</param>
      <returns>
        <para>Положение преобразования относительно родителя.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.TransformSceneHandle.GetLocalRotation(UnityEngine.Animations.AnimationStream)">
      <summary>
        <para>Получает поворот преобразования относительно родителя.</para>
      </summary>
      <param name="stream">AnimationStream, который управляет этим дескриптором.</param>
      <returns>
        <para>Поворот преобразования относительно родителя.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.TransformSceneHandle.GetLocalScale(UnityEngine.Animations.AnimationStream)">
      <summary>
        <para>Получает масштаб преобразования относительно родителя.</para>
      </summary>
      <param name="stream">AnimationStream, который управляет этим дескриптором.</param>
      <returns>
        <para>Масштаб преобразования относительно родителя.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.TransformSceneHandle.GetLocalTRS(UnityEngine.Animations.AnimationStream,UnityEngine.Vector3&amp;,UnityEngine.Quaternion&amp;,UnityEngine.Vector3&amp;)">
      <summary>
        <para>Получает положение, поворот и масштаб преобразования относительно родителя.</para>
      </summary>
      <param name="stream">AnimationStream, который управляет этим дескриптором.</param>
      <param name="position">Положение преобразования относительно родителя.</param>
      <param name="rotation">Поворот преобразования относительно родителя.</param>
      <param name="scale">Масштаб преобразования относительно родителя.</param>
    </member>
    <member name="M:UnityEngine.Animations.TransformSceneHandle.GetPosition(UnityEngine.Animations.AnimationStream)">
      <summary>
        <para>Получает положение преобразования в мировом пространстве.</para>
      </summary>
      <param name="stream">AnimationStream, который управляет этим дескриптором.</param>
      <returns>
        <para>Положение преобразования в мировом пространстве.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.TransformSceneHandle.GetRotation(UnityEngine.Animations.AnimationStream)">
      <summary>
        <para>Получает вращение преобразования в мировом пространстве.</para>
      </summary>
      <param name="stream">AnimationStream, который управляет этим дескриптором.</param>
      <returns>
        <para>Вращение преобразования в мировом пространстве.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.TransformSceneHandle.IsValid(UnityEngine.Animations.AnimationStream)">
      <summary>
        <para>Возвращает, является ли это допустимым дескриптором.</para>
      </summary>
      <param name="stream">AnimationStream, который управляет этим дескриптором.</param>
      <returns>
        <para>Является ли это допустимым дескриптором.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.TransformSceneHandle.SetLocalPosition(UnityEngine.Animations.AnimationStream,UnityEngine.Vector3)">
      <summary>
        <para>Задает положение преобразования относительно родителя.</para>
      </summary>
      <param name="stream">AnimationStream, который управляет этим дескриптором.</param>
      <param name="position">Положение преобразования относительно родителя.</param>
    </member>
    <member name="M:UnityEngine.Animations.TransformSceneHandle.SetLocalRotation(UnityEngine.Animations.AnimationStream,UnityEngine.Quaternion)">
      <summary>
        <para>Задает поворот преобразования относительно родителя.</para>
      </summary>
      <param name="stream">AnimationStream, который управляет этим дескриптором.</param>
      <param name="rotation">Поворот преобразования относительно родителя.</param>
    </member>
    <member name="M:UnityEngine.Animations.TransformSceneHandle.SetLocalScale(UnityEngine.Animations.AnimationStream,UnityEngine.Vector3)">
      <summary>
        <para>Задает масштаб преобразования относительно родителя.</para>
      </summary>
      <param name="stream">AnimationStream, который управляет этим дескриптором.</param>
      <param name="scale">Масштаб преобразования относительно родителя.</param>
    </member>
    <member name="M:UnityEngine.Animations.TransformSceneHandle.SetPosition(UnityEngine.Animations.AnimationStream,UnityEngine.Vector3)">
      <summary>
        <para>Задает положение преобразования в мировом пространстве.</para>
      </summary>
      <param name="stream">AnimationStream, который управляет этим дескриптором.</param>
      <param name="position">Положение преобразования в мировом пространстве.</param>
    </member>
    <member name="M:UnityEngine.Animations.TransformSceneHandle.SetRotation(UnityEngine.Animations.AnimationStream,UnityEngine.Quaternion)">
      <summary>
        <para>Задает вращение преобразования в мировом пространстве.</para>
      </summary>
      <param name="stream">AnimationStream, который управляет этим дескриптором.</param>
      <param name="rotation">Вращение преобразования в мировом пространстве.</param>
    </member>
    <member name="T:UnityEngine.Animations.TransformStreamHandle">
      <summary>
        <para>Положение, поворот и масштаб объекта в AnimationStream.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animations.TransformStreamHandle.GetGlobalTR(UnityEngine.Animations.AnimationStream,UnityEngine.Vector3&amp;,UnityEngine.Quaternion&amp;)">
      <summary>
        <para>Получает положение и масштабированный поворот преобразования в мировом пространстве.</para>
      </summary>
      <param name="stream">AnimationStream, содержащий анимированные значения.</param>
      <param name="position">Положение преобразования в мировом пространстве.</param>
      <param name="rotation">Вращение преобразования в мировом пространстве.</param>
    </member>
    <member name="M:UnityEngine.Animations.TransformStreamHandle.GetLocalPosition(UnityEngine.Animations.AnimationStream)">
      <summary>
        <para>Получает положение преобразования относительно родителя.</para>
      </summary>
      <param name="stream">AnimationStream, содержащий анимированные значения.</param>
      <returns>
        <para>Положение преобразования относительно родителя.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.TransformStreamHandle.GetLocalRotation(UnityEngine.Animations.AnimationStream)">
      <summary>
        <para>Получает поворот преобразования относительно родителя.</para>
      </summary>
      <param name="stream">AnimationStream, содержащий анимированные значения.</param>
      <returns>
        <para>Поворот преобразования относительно родителя.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.TransformStreamHandle.GetLocalScale(UnityEngine.Animations.AnimationStream)">
      <summary>
        <para>Получает масштаб преобразования относительно родителя.</para>
      </summary>
      <param name="stream">AnimationStream, содержащий анимированные значения.</param>
      <returns>
        <para>Масштаб преобразования относительно родителя.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.TransformStreamHandle.GetLocalTRS(UnityEngine.Animations.AnimationStream,UnityEngine.Vector3&amp;,UnityEngine.Quaternion&amp;,UnityEngine.Vector3&amp;)">
      <summary>
        <para>Получает положение, поворот и масштаб преобразования относительно родителя.</para>
      </summary>
      <param name="stream">AnimationStream, содержащий анимированные значения.</param>
      <param name="position">Положение преобразования относительно родителя.</param>
      <param name="rotation">Поворот преобразования относительно родителя.</param>
      <param name="scale">Масштаб преобразования относительно родителя.</param>
    </member>
    <member name="M:UnityEngine.Animations.TransformStreamHandle.GetPosition(UnityEngine.Animations.AnimationStream)">
      <summary>
        <para>Получает положение преобразования в мировом пространстве.</para>
      </summary>
      <param name="stream">AnimationStream, содержащий анимированные значения.</param>
      <returns>
        <para>Положение преобразования в мировом пространстве.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.TransformStreamHandle.GetPositionReadMask(UnityEngine.Animations.AnimationStream)">
      <summary>
        <para>Получает маску чтения позиции преобразования.</para>
      </summary>
      <param name="stream">AnimationStream, содержащий анимированные значения.</param>
      <returns>
        <para>Возвращает true, если позицию можно прочитать.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.TransformStreamHandle.GetRotation(UnityEngine.Animations.AnimationStream)">
      <summary>
        <para>Получает вращение преобразования в мировом пространстве.</para>
      </summary>
      <param name="stream">AnimationStream, содержащий анимированные значения.</param>
      <returns>
        <para>Вращение преобразования в мировом пространстве.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.TransformStreamHandle.GetRotationReadMask(UnityEngine.Animations.AnimationStream)">
      <summary>
        <para>Получает маску чтения поворота преобразования.</para>
      </summary>
      <param name="stream">AnimationStream, содержащий анимированные значения.</param>
      <returns>
        <para>Возвращает true, если поворот можно прочитать.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.TransformStreamHandle.GetScaleReadMask(UnityEngine.Animations.AnimationStream)">
      <summary>
        <para>Получает маску чтения шкалы преобразования.</para>
      </summary>
      <param name="stream">AnimationStream, содержащий анимированные значения.</param>
      <returns>
        <para>Возвращает true, если шкала читается.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.TransformStreamHandle.IsResolved(UnityEngine.Animations.AnimationStream)">
      <summary>
        <para>Возвращает, разрешен ли этот дескриптор.</para>
      </summary>
      <param name="stream">AnimationStream, содержащий анимированные значения.</param>
      <returns>
        <para>Возвращает true, если дескриптор разрешен, иначе false.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.TransformStreamHandle.IsValid(UnityEngine.Animations.AnimationStream)">
      <summary>
        <para>Возвращает, является ли это допустимым дескриптором.</para>
      </summary>
      <param name="stream">AnimationStream, содержащий анимированные значения.</param>
      <returns>
        <para>Является ли это допустимым дескриптором.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animations.TransformStreamHandle.Resolve(UnityEngine.Animations.AnimationStream)">
      <summary>
        <para>Свяжите этот дескриптор с анимированными значениями из AnimationStream.</para>
      </summary>
      <param name="stream">AnimationStream, содержащий анимированные значения.</param>
    </member>
    <member name="M:UnityEngine.Animations.TransformStreamHandle.SetGlobalTR(UnityEngine.Animations.AnimationStream,UnityEngine.Vector3,UnityEngine.Quaternion,System.Boolean)">
      <summary>
        <para>Задает положение и поворот преобразования в мировом пространстве.</para>
      </summary>
      <param name="stream">AnimationStream, содержащий анимированные значения.</param>
      <param name="position">Положение преобразования в мировом пространстве.</param>
      <param name="rotation">Вращение преобразования в мировом пространстве.</param>
      <param name="useMask">Установите значение true, чтобы записать указанные параметры, если соответствующие параметры потока еще не были изменены.</param>
    </member>
    <member name="M:UnityEngine.Animations.TransformStreamHandle.SetLocalPosition(UnityEngine.Animations.AnimationStream,UnityEngine.Vector3)">
      <summary>
        <para>Задает положение преобразования относительно родителя.</para>
      </summary>
      <param name="stream">AnimationStream, содержащий анимированные значения.</param>
      <param name="position">Положение преобразования относительно родителя.</param>
    </member>
    <member name="M:UnityEngine.Animations.TransformStreamHandle.SetLocalRotation(UnityEngine.Animations.AnimationStream,UnityEngine.Quaternion)">
      <summary>
        <para>Задает поворот преобразования относительно родителя.</para>
      </summary>
      <param name="stream">AnimationStream, содержащий анимированные значения.</param>
      <param name="rotation">Поворот преобразования относительно родителя.</param>
    </member>
    <member name="M:UnityEngine.Animations.TransformStreamHandle.SetLocalScale(UnityEngine.Animations.AnimationStream,UnityEngine.Vector3)">
      <summary>
        <para>Задает масштаб преобразования относительно родителя.</para>
      </summary>
      <param name="scale">Масштаб преобразования относительно родителя.</param>
      <param name="stream">AnimationStream, содержащий анимированные значения.</param>
    </member>
    <member name="M:UnityEngine.Animations.TransformStreamHandle.SetLocalTRS(UnityEngine.Animations.AnimationStream,UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.Vector3,System.Boolean)">
      <summary>
        <para>Задает положение, поворот и масштаб преобразования относительно родителя.</para>
      </summary>
      <param name="stream">AnimationStream, содержащий анимированные значения.</param>
      <param name="position">Положение преобразования относительно родителя.</param>
      <param name="rotation">Поворот преобразования относительно родителя.</param>
      <param name="scale">Масштаб преобразования относительно родителя.</param>
      <param name="useMask">Установите значение true, чтобы записать указанные параметры, если соответствующие параметры потока еще не были изменены.</param>
    </member>
    <member name="M:UnityEngine.Animations.TransformStreamHandle.SetPosition(UnityEngine.Animations.AnimationStream,UnityEngine.Vector3)">
      <summary>
        <para>Задает положение преобразования в мировом пространстве.</para>
      </summary>
      <param name="position">Положение преобразования в мировом пространстве.</param>
      <param name="stream">AnimationStream, содержащий анимированные значения.</param>
    </member>
    <member name="M:UnityEngine.Animations.TransformStreamHandle.SetRotation(UnityEngine.Animations.AnimationStream,UnityEngine.Quaternion)">
      <summary>
        <para>Задает вращение преобразования в мировом пространстве.</para>
      </summary>
      <param name="stream">AnimationStream, содержащий анимированные значения.</param>
      <param name="rotation">Вращение преобразования в мировом пространстве.</param>
    </member>
    <member name="T:UnityEngine.AnimationState">
      <summary>
        <para>AnimationState дает полный контроль над смешиванием анимации.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationState.blendMode">
      <summary>
        <para>Какой режим наложения следует использовать?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationState.clip">
      <summary>
        <para>Клип, воспроизводимый этим состоянием анимации.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationState.enabled">
      <summary>
        <para>Включает/выключает анимацию.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationState.length">
      <summary>
        <para>Длина анимационного клипа в секундах.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationState.name">
      <summary>
        <para>Имя анимации.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationState.normalizedSpeed">
      <summary>
        <para>Нормализованная скорость воспроизведения.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationState.normalizedTime">
      <summary>
        <para>Нормализованное время анимации.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationState.speed">
      <summary>
        <para>Скорость воспроизведения анимации. 1 — нормальная скорость воспроизведения.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationState.time">
      <summary>
        <para>Текущее время анимации.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationState.weight">
      <summary>
        <para>Вес анимации.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimationState.wrapMode">
      <summary>
        <para>Режим обтекания анимации.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AnimationState.AddMixingTransform(UnityEngine.Transform)">
      <summary>
        <para>Добавляет преобразование, которое должно быть анимировано. Это позволяет сократить количество создаваемых анимаций.</para>
      </summary>
      <param name="mix">Преобразование для анимации.</param>
      <param name="recursive">Следует ли также анимировать все дочерние элементы указанного преобразования.</param>
    </member>
    <member name="M:UnityEngine.AnimationState.AddMixingTransform(UnityEngine.Transform,System.Boolean)">
      <summary>
        <para>Добавляет преобразование, которое должно быть анимировано. Это позволяет сократить количество создаваемых анимаций.</para>
      </summary>
      <param name="mix">Преобразование для анимации.</param>
      <param name="recursive">Следует ли также анимировать все дочерние элементы указанного преобразования.</param>
    </member>
    <member name="M:UnityEngine.AnimationState.RemoveMixingTransform(UnityEngine.Transform)">
      <summary>
        <para>Удаляет преобразование, которое должно быть анимировано.</para>
      </summary>
      <param name="mix">
      </param>
    </member>
    <member name="T:UnityEngine.Animator">
      <summary>
        <para>Интерфейс для управления системой анимации Mecanim.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.angularVelocity">
      <summary>
        <para>Получает угловую скорость аватара для последнего оцениваемого кадра.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.animatePhysics">
      <summary>
        <para>При включении анимации будут выполняться в физическом цикле. Это полезно только в сочетании с кинематическими жесткими телами.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.applyRootMotion">
      <summary>
        <para>Нужно ли применять корневое движение?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.avatar">
      <summary>
        <para>Получает/устанавливает текущий аватар.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.bodyPosition">
      <summary>
        <para>Положение центра масс тела.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.bodyRotation">
      <summary>
        <para>Вращение центра масс тела.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.cullingMode">
      <summary>
        <para>Управляет отбраковкой этого компонента Animator.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.deltaPosition">
      <summary>
        <para>Получает дельта-позицию аватара для последнего оцениваемого кадра.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.deltaRotation">
      <summary>
        <para>Получает дельта-поворот аватара для последнего оцениваемого кадра.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.feetPivotActive">
      <summary>
        <para>Совмещает точку вращения между центром масс тела и осью вращения стопы.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.fireEvents">
      <summary>
        <para>Определяет, будет ли Animator отправлять события типа AnimationEvent.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.gravityWeight">
      <summary>
        <para>Текущий гравитационный вес на основе текущей воспроизводимой анимации.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.hasBoundPlayables">
      <summary>
        <para>Возвращает true, если Animator имеет какие-либо игровые объекты, назначенные ему.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.hasRootMotion">
      <summary>
        <para>Возвращает true, если текущая установка имеет корневое движение.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.hasTransformHierarchy">
      <summary>
        <para>Возвращает true, если объект имеет иерархию преобразования.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.humanScale">
      <summary>
        <para>Возвращает масштаб текущего Аватара для гуманоидного рига (по умолчанию 1, если риг обычный).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.isHuman">
      <summary>
        <para>Возвращает true, если текущая установка гуманоидная, и false, если универсальная.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.isInitialized">
      <summary>
        <para>Возвращает информацию об успешной инициализации аниматора.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.isMatchingTarget">
      <summary>
        <para>Если автоматическое сопоставление активно.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.isOptimizable">
      <summary>
        <para>Возвращает true, если текущую установку можно оптимизировать с помощью AnimatorUtility.OptimizeTransformHierarchy.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.keepAnimatorControllerStateOnDisable">
      <summary>
        <para>Управляет поведением компонента Animator, когда GameObject отключен.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.layerCount">
      <summary>
        <para>Возвращает количество слоев в контроллере.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.layersAffectMassCenter">
      <summary>
        <para>Дополнительные слои влияют на центр масс.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.leftFeetBottomHeight">
      <summary>
        <para>Получить высоту основания левой ноги.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.linearVelocityBlending">
      <summary>
        <para>Если для linearVelocityBlending установлено значение true, скорость корневого движения и угловая скорость будут смешиваться линейно.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.parameterCount">
      <summary>
        <para>Возвращает количество параметров в контроллере.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.parameters">
      <summary>
        <para>Список AnimatorControllerParameter, используемый аниматором. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.pivotPosition">
      <summary>
        <para>Получить текущую позицию сводной точки.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.pivotWeight">
      <summary>
        <para>Получает вес поворота.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.playableGraph">
      <summary>
        <para>PlayableGraph, созданный Animator.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.playbackTime">
      <summary>
        <para>Устанавливает позицию воспроизведения в буфере записи.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.recorderMode">
      <summary>
        <para>Получает режим записи Animator.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.recorderStartTime">
      <summary>
        <para>Время начала первого кадра буфера относительно кадра, в котором был вызван StartRecording.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.recorderStopTime">
      <summary>
        <para>Время окончания записанного клипа относительно момента вызова StartRecording.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.rightFeetBottomHeight">
      <summary>
        <para>Получите высоту основания правой ноги.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.rootPosition">
      <summary>
        <para>Корневая позиция, позиция игрового объекта.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.rootRotation">
      <summary>
        <para>Корневой поворот, поворот игрового объекта.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.runtimeAnimatorController">
      <summary>
        <para>Представление AnimatorController во время выполнения, которое управляет Animator.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.speed">
      <summary>
        <para>Скорость воспроизведения аниматора. 1 — нормальная скорость воспроизведения.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.stabilizeFeet">
      <summary>
        <para>Автоматическая стабилизация стоп при переходе и смешивании.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.targetPosition">
      <summary>
        <para>Возвращает положение цели, указанной SetTarget.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.targetRotation">
      <summary>
        <para>Возвращает поворот цели, указанной SetTarget.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.updateMode">
      <summary>
        <para>Указывает режим обновления Animator.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Animator.velocity">
      <summary>
        <para>Получает скорость аватара для последнего оцениваемого кадра.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animator.ApplyBuiltinRootMotion">
      <summary>
        <para>Примените корневое движение по умолчанию.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animator.CrossFade(System.String,System.Single,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Создает переход от текущего состояния к любому другому состоянию, используя нормализованное время.</para>
      </summary>
      <param name="stateName">Название штата.</param>
      <param name="stateHashName">Хэш-имя состояния.</param>
      <param name="normalizedTransitionDuration">Продолжительность перехода (нормированная).</param>
      <param name="layer">Слой, на котором происходит кроссфейд.</param>
      <param name="normalizedTimeOffset">Время состояния (нормализованное).</param>
      <param name="normalizedTransitionTime">Время перехода (нормировано).</param>
    </member>
    <member name="M:UnityEngine.Animator.CrossFade(System.Int32,System.Single,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Создает переход от текущего состояния к любому другому состоянию, используя нормализованное время.</para>
      </summary>
      <param name="stateName">Название штата.</param>
      <param name="stateHashName">Хэш-имя состояния.</param>
      <param name="normalizedTransitionDuration">Продолжительность перехода (нормированная).</param>
      <param name="layer">Слой, на котором происходит кроссфейд.</param>
      <param name="normalizedTimeOffset">Время состояния (нормализованное).</param>
      <param name="normalizedTransitionTime">Время перехода (нормировано).</param>
    </member>
    <member name="M:UnityEngine.Animator.CrossFadeInFixedTime(System.Int32,System.Single,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Создает переход от текущего состояния к любому другому состоянию, используя время в секундах.</para>
      </summary>
      <param name="stateName">Название штата.</param>
      <param name="stateHashName">Хэш-имя состояния.</param>
      <param name="fixedTransitionDuration">Продолжительность перехода (в секундах).</param>
      <param name="layer">Слой, на котором происходит кроссфейд.</param>
      <param name="fixedTimeOffset">Время состояния (в секундах).</param>
      <param name="normalizedTransitionTime">Время перехода (нормировано).</param>
    </member>
    <member name="M:UnityEngine.Animator.CrossFadeInFixedTime(System.String,System.Single,System.Int32,System.Single,System.Single)">
      <summary>
        <para>Создает переход от текущего состояния к любому другому состоянию, используя время в секундах.</para>
      </summary>
      <param name="stateName">Название штата.</param>
      <param name="stateHashName">Хэш-имя состояния.</param>
      <param name="fixedTransitionDuration">Продолжительность перехода (в секундах).</param>
      <param name="layer">Слой, на котором происходит кроссфейд.</param>
      <param name="fixedTimeOffset">Время состояния (в секундах).</param>
      <param name="normalizedTransitionTime">Время перехода (нормировано).</param>
    </member>
    <member name="M:UnityEngine.Animator.GetAnimatorTransitionInfo(System.Int32)">
      <summary>
        <para>Возвращает AnimatorTransitionInfo с информацией о текущем переходе.</para>
      </summary>
      <param name="layerIndex">Индекс слоя.</param>
      <returns>
        <para>AnimatorTransitionInfo с информацией о текущем переходе.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animator.GetBehaviour">
      <summary>
        <para>Возвращает первое поведение StateMachineBehaviour, соответствующее типу T или производное от T. Возвращает значение null, если ничего не найдено.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animator.GetBehaviours">
      <summary>
        <para>Возвращает все StateMachineBehaviour, которые соответствуют типу T или являются производными от T. Возвращает значение null, если ничего не найдено.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animator.GetBoneTransform(UnityEngine.HumanBodyBones)">
      <summary>
        <para>Возвращает преобразование, сопоставленное с этим идентификатором человеческой кости. Возвращает null, если аниматор отключен, если у него нет человеческого описания или если идентификатор кости недействителен.</para>
      </summary>
      <param name="humanBoneId">Запрошенная человеческая кость, список возможных значений см. в enum HumanBodyBones.</param>
    </member>
    <member name="M:UnityEngine.Animator.GetBool(System.String)">
      <summary>
        <para>Возвращает значение заданного логического параметра.</para>
      </summary>
      <param name="name">Имя параметра.</param>
      <param name="id">Идентификатор параметра.</param>
      <returns>
        <para>Значение параметра.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animator.GetBool(System.Int32)">
      <summary>
        <para>Возвращает значение заданного логического параметра.</para>
      </summary>
      <param name="name">Имя параметра.</param>
      <param name="id">Идентификатор параметра.</param>
      <returns>
        <para>Значение параметра.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animator.GetCurrentAnimationClipState(System.Int32)">
      <summary>
        <para>Получает список AnimatorClipInfo, воспроизводимых в данный момент в текущем состоянии.</para>
      </summary>
      <param name="layerIndex">Индекс слоя.</param>
    </member>
    <member name="M:UnityEngine.Animator.GetCurrentAnimatorClipInfo(System.Int32)">
      <summary>
        <para>Возвращает массив всех AnimatorClipInfo в текущем состоянии данного слоя.</para>
      </summary>
      <param name="layerIndex">Индекс слоя.</param>
      <returns>
        <para>Массив всех AnimatorClipInfo в текущем состоянии.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animator.GetCurrentAnimatorClipInfo(System.Int32,System.Collections.Generic.List`1&lt;UnityEngine.AnimatorClipInfo&gt;)">
      <summary>
        <para>Заполняет клипы списком всех AnimatorClipInfo в текущем состоянии данного слоя.</para>
      </summary>
      <param name="layerIndex">Индекс слоя.</param>
      <param name="clips">Список AnimatorClipInfo для заполнения.</param>
    </member>
    <member name="M:UnityEngine.Animator.GetCurrentAnimatorClipInfoCount(System.Int32)">
      <summary>
        <para>Возвращает количество AnimatorClipInfo в текущем состоянии.</para>
      </summary>
      <param name="layerIndex">Индекс слоя.</param>
      <returns>
        <para>Количество AnimatorClipInfo в текущем состоянии.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animator.GetCurrentAnimatorStateInfo(System.Int32)">
      <summary>
        <para>Возвращает AnimatorStateInfo с информацией о текущем состоянии.</para>
      </summary>
      <param name="layerIndex">Индекс слоя.</param>
      <returns>
        <para>AnimatorStateInfo с информацией о текущем состоянии.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animator.GetFloat(System.String)">
      <summary>
        <para>Возвращает значение заданного параметра float.</para>
      </summary>
      <param name="name">Имя параметра.</param>
      <param name="id">Идентификатор параметра.</param>
      <returns>
        <para>Значение параметра.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animator.GetFloat(System.Int32)">
      <summary>
        <para>Возвращает значение заданного параметра float.</para>
      </summary>
      <param name="name">Имя параметра.</param>
      <param name="id">Идентификатор параметра.</param>
      <returns>
        <para>Значение параметра.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animator.GetIKHintPosition(UnityEngine.AvatarIKHint)">
      <summary>
        <para>Получает позицию подсказки IK.</para>
      </summary>
      <param name="hint">Запрошенный AvatarIKHint.</param>
      <returns>
        <para>Возвращает текущую позицию этой подсказки IK в мировом пространстве.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animator.GetIKHintPositionWeight(UnityEngine.AvatarIKHint)">
      <summary>
        <para>Получает трансляционный вес подсказки IK (0 = исходная анимация до IK, 1 = подсказка).</para>
      </summary>
      <param name="hint">Запрошенный AvatarIKHint.</param>
      <returns>
        <para>Возвращает относительный вес.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animator.GetIKPosition(UnityEngine.AvatarIKGoal)">
      <summary>
        <para>Получает позицию цели IK.</para>
      </summary>
      <param name="goal">Запрошенная цель AvatarIKGoal.</param>
      <returns>
        <para>Возвращает текущую позицию этой цели IK в мировом пространстве.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animator.GetIKPositionWeight(UnityEngine.AvatarIKGoal)">
      <summary>
        <para>Получает трансляционный вес цели ОК (0 = исходная анимация до ОК, 1 = цель).</para>
      </summary>
      <param name="goal">Запрошенная цель AvatarIKGoal.</param>
    </member>
    <member name="M:UnityEngine.Animator.GetIKRotation(UnityEngine.AvatarIKGoal)">
      <summary>
        <para>Получает вращение цели IK.</para>
      </summary>
      <param name="goal">Запрошен объект AvatarIKGoal.</param>
    </member>
    <member name="M:UnityEngine.Animator.GetIKRotationWeight(UnityEngine.AvatarIKGoal)">
      <summary>
        <para>Получает вес вращения цели IK (0 = вращение перед IK, 1 = вращение перед целью IK).</para>
      </summary>
      <param name="goal">Запрошенная цель AvatarIKGoal.</param>
    </member>
    <member name="M:UnityEngine.Animator.GetInteger(System.String)">
      <summary>
        <para>Возвращает значение заданного целочисленного параметра.</para>
      </summary>
      <param name="name">Имя параметра.</param>
      <param name="id">Идентификатор параметра.</param>
      <returns>
        <para>Значение параметра.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animator.GetInteger(System.Int32)">
      <summary>
        <para>Возвращает значение заданного целочисленного параметра.</para>
      </summary>
      <param name="name">Имя параметра.</param>
      <param name="id">Идентификатор параметра.</param>
      <returns>
        <para>Значение параметра.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animator.GetLayerIndex(System.String)">
      <summary>
        <para>Возвращает индекс слоя с заданным именем.</para>
      </summary>
      <param name="layerName">Имя слоя.</param>
      <returns>
        <para>Индекс слоя.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animator.GetLayerName(System.Int32)">
      <summary>
        <para>Возвращает имя слоя.</para>
      </summary>
      <param name="layerIndex">Индекс слоя.</param>
      <returns>
        <para>Имя слоя.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animator.GetLayerWeight(System.Int32)">
      <summary>
        <para>Возвращает вес слоя по указанному индексу.</para>
      </summary>
      <param name="layerIndex">Индекс слоя.</param>
      <returns>
        <para>Вес слоя.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animator.GetNextAnimationClipState(System.Int32)">
      <summary>
        <para>Получает список AnimatorClipInfo, воспроизводимых в настоящее время в следующем состоянии.</para>
      </summary>
      <param name="layerIndex">Индекс слоя.</param>
    </member>
    <member name="M:UnityEngine.Animator.GetNextAnimatorClipInfo(System.Int32)">
      <summary>
        <para>Возвращает массив всех AnimatorClipInfo в следующем состоянии данного слоя.</para>
      </summary>
      <param name="layerIndex">Индекс слоя.</param>
      <returns>
        <para>Массив всех AnimatorClipInfo в следующем состоянии.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animator.GetNextAnimatorClipInfo(System.Int32,System.Collections.Generic.List`1&lt;UnityEngine.AnimatorClipInfo&gt;)">
      <summary>
        <para>Заполняет клипы списком всех AnimatorClipInfo в следующем состоянии данного слоя.</para>
      </summary>
      <param name="layerIndex">Индекс слоя.</param>
      <param name="clips">Список AnimatorClipInfo для заполнения.</param>
    </member>
    <member name="M:UnityEngine.Animator.GetNextAnimatorClipInfoCount(System.Int32)">
      <summary>
        <para>Возвращает номер AnimatorClipInfo в следующем состоянии.</para>
      </summary>
      <param name="layerIndex">Индекс слоя.</param>
      <returns>
        <para>Количество AnimatorClipInfo в следующем состоянии.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animator.GetNextAnimatorStateInfo(System.Int32)">
      <summary>
        <para>Возвращает AnimatorStateInfo с информацией о следующем состоянии.</para>
      </summary>
      <param name="layerIndex">Индекс слоя.</param>
      <returns>
        <para>AnimatorStateInfo с информацией о следующем состоянии.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animator.GetParameter(System.Int32)">
      <summary>
        <para>См. AnimatorController.parameters.</para>
      </summary>
      <param name="index">
      </param>
    </member>
    <member name="M:UnityEngine.Animator.GetQuaternion(System.String)">
      <summary>
        <para>Получает значение параметра кватерниона.</para>
      </summary>
      <param name="name">Имя параметра.</param>
    </member>
    <member name="M:UnityEngine.Animator.GetQuaternion(System.Int32)">
      <summary>
        <para>Получает значение параметра кватерниона.</para>
      </summary>
      <param name="id">Идентификатор параметра. Идентификатор создается с помощью Animator::StringToHash.</param>
    </member>
    <member name="M:UnityEngine.Animator.GetVector(System.String)">
      <summary>
        <para>Получает значение параметра вектора.</para>
      </summary>
      <param name="name">Имя параметра.</param>
    </member>
    <member name="M:UnityEngine.Animator.GetVector(System.Int32)">
      <summary>
        <para>Получает значение параметра вектора.</para>
      </summary>
      <param name="id">Идентификатор параметра. Идентификатор создается с помощью Animator::StringToHash.</param>
    </member>
    <member name="M:UnityEngine.Animator.HasState(System.Int32,System.Int32)">
      <summary>
        <para>Возвращает true, если состояние существует в этом слое, иначе false.</para>
      </summary>
      <param name="layerIndex">Индекс слоя.</param>
      <param name="stateID">Идентификатор состояния.</param>
      <returns>
        <para>Истина, если состояние существует на этом уровне, в противном случае — ложь.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animator.InterruptMatchTarget">
      <summary>
        <para>Прерывает автоматическое сопоставление целей.</para>
      </summary>
      <param name="completeMatch">
      </param>
    </member>
    <member name="M:UnityEngine.Animator.InterruptMatchTarget(System.Boolean)">
      <summary>
        <para>Прерывает автоматическое сопоставление целей.</para>
      </summary>
      <param name="completeMatch">
      </param>
    </member>
    <member name="M:UnityEngine.Animator.IsControlled(UnityEngine.Transform)">
      <summary>
        <para>Возвращает true, если трансформацией управляет Animator\.</para>
      </summary>
      <param name="transform">Запрашиваемое преобразование.</param>
    </member>
    <member name="M:UnityEngine.Animator.IsInTransition(System.Int32)">
      <summary>
        <para>Возвращает true, если на данном слое есть переход, иначе false.</para>
      </summary>
      <param name="layerIndex">Индекс слоя.</param>
      <returns>
        <para>Истина, если на данном слое есть переход, в противном случае — ложь.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animator.IsParameterControlledByCurve(System.String)">
      <summary>
        <para>Возвращает true, если параметр управляется кривой, иначе false.</para>
      </summary>
      <param name="name">Имя параметра.</param>
      <param name="id">Идентификатор параметра.</param>
      <returns>
        <para>Истина, если параметр управляется кривой, в противном случае — ложь.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animator.IsParameterControlledByCurve(System.Int32)">
      <summary>
        <para>Возвращает true, если параметр управляется кривой, иначе false.</para>
      </summary>
      <param name="name">Имя параметра.</param>
      <param name="id">Идентификатор параметра.</param>
      <returns>
        <para>Истина, если параметр управляется кривой, в противном случае — ложь.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Animator.MatchTarget(UnityEngine.Vector3,UnityEngine.Quaternion,UnityEngine.AvatarTarget,UnityEngine.MatchTargetWeightMask,System.Single,System.Single)">
      <summary>
        <para>Автоматически корректируйте положение и поворот GameObject.</para>
      </summary>
      <param name="matchPosition">Позиция, которую мы хотим, чтобы часть тела достигла.</param>
      <param name="matchRotation">Поворот, в котором мы хотим, чтобы часть тела была.</param>
      <param name="targetBodyPart">Часть тела, участвующая в совпадении.</param>
      <param name="weightMask">Структура, содержащая веса для сопоставления положения и поворота.</param>
      <param name="startNormalizedTime">Время начала в анимационном клипе (0 - начало клипа, 1 - конец клипа).</param>
      <param name="targetNormalizedTime">Время окончания в анимационном клипе (0 — начало клипа, 1 — конец клипа), значения больше 1 могут быть установлены для запуска совпадения после определенного количества циклов. Пример: 2.3 означает 30% 2-го цикла.</param>
      <param name="completeMatch">Позволяет указать, что должно произойти, если функция MatchTarget будет прервана. Значение true заставляет GameObject немедленно перемещаться в matchPosition, если его прерывают. Значение false заставляет GameObject оставаться в своей текущей позиции, если его прервать.</param>
    </member>
    <member name="M:UnityEngine.Animator.Play(System.String,System.Int32,System.Single)">
      <summary>
        <para>Воспроизведение состояния.</para>
      </summary>
      <param name="stateName">Название штата.</param>
      <param name="stateNameHash">Имя хэша состояния. Если stateNameHash равен 0, изменяется текущее время состояния.</param>
      <param name="layer">Индекс слоя. Если слой равен -1, воспроизводится первое состояние с заданным именем состояния или хешем.</param>
      <param name="normalizedTime">Смещение времени между нулем и единицей.</param>
    </member>
    <member name="M:UnityEngine.Animator.Play(System.Int32,System.Int32,System.Single)">
      <summary>
        <para>Воспроизведение состояния.</para>
      </summary>
      <param name="stateName">Название штата.</param>
      <param name="stateNameHash">Имя хэша состояния. Если stateNameHash равен 0, изменяется текущее время состояния.</param>
      <param name="layer">Индекс слоя. Если слой равен -1, воспроизводится первое состояние с заданным именем состояния или хешем.</param>
      <param name="normalizedTime">Смещение времени между нулем и единицей.</param>
    </member>
    <member name="M:UnityEngine.Animator.PlayInFixedTime(System.String,System.Int32,System.Single)">
      <summary>
        <para>Воспроизведение состояния.</para>
      </summary>
      <param name="stateName">Название штата.</param>
      <param name="stateNameHash">Имя хэша состояния. Если stateNameHash равен 0, изменяется текущее время состояния.</param>
      <param name="layer">Индекс слоя. Если слой равен -1, воспроизводится первое состояние с заданным именем состояния или хешем.</param>
      <param name="fixedTime">Смещение времени (в секундах).</param>
    </member>
    <member name="M:UnityEngine.Animator.PlayInFixedTime(System.Int32,System.Int32,System.Single)">
      <summary>
        <para>Воспроизведение состояния.</para>
      </summary>
      <param name="stateName">Название штата.</param>
      <param name="stateNameHash">Имя хэша состояния. Если stateNameHash равен 0, изменяется текущее время состояния.</param>
      <param name="layer">Индекс слоя. Если слой равен -1, воспроизводится первое состояние с заданным именем состояния или хешем.</param>
      <param name="fixedTime">Смещение времени (в секундах).</param>
    </member>
    <member name="M:UnityEngine.Animator.Rebind">
      <summary>
        <para>Повторно привяжите все анимированные свойства и данные сетки с помощью Animator.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animator.ResetTrigger(System.String)">
      <summary>
        <para>Сбрасывает значение данного параметра триггера.</para>
      </summary>
      <param name="name">Имя параметра.</param>
      <param name="id">Идентификатор параметра.</param>
    </member>
    <member name="M:UnityEngine.Animator.ResetTrigger(System.Int32)">
      <summary>
        <para>Сбрасывает значение данного параметра триггера.</para>
      </summary>
      <param name="name">Имя параметра.</param>
      <param name="id">Идентификатор параметра.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetBoneLocalRotation(UnityEngine.HumanBodyBones,UnityEngine.Quaternion)">
      <summary>
        <para>Устанавливает локальное вращение кости человека во время прохода IK.</para>
      </summary>
      <param name="humanBoneId">Идентификатор человеческой кости.</param>
      <param name="rotation">Локальная ротация.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetBool(System.String,System.Boolean)">
      <summary>
        <para>Устанавливает значение данного логического параметра.</para>
      </summary>
      <param name="name">Имя параметра.</param>
      <param name="id">Идентификатор параметра.</param>
      <param name="value">Новое значение параметра.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetBool(System.Int32,System.Boolean)">
      <summary>
        <para>Устанавливает значение данного логического параметра.</para>
      </summary>
      <param name="name">Имя параметра.</param>
      <param name="id">Идентификатор параметра.</param>
      <param name="value">Новое значение параметра.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetFloat(System.String,System.Single)">
      <summary>
        <para>Отправлять плавающие значения в Animator, чтобы влиять на переходы.</para>
      </summary>
      <param name="name">Имя параметра.</param>
      <param name="id">Идентификатор параметра.</param>
      <param name="value">Новое значение параметра.</param>
      <param name="dampTime">Общее время заслонки.</param>
      <param name="deltaTime">Дельта-время, отдаваемое демпферу.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetFloat(System.String,System.Single,System.Single,System.Single)">
      <summary>
        <para>Отправлять плавающие значения в Animator, чтобы влиять на переходы.</para>
      </summary>
      <param name="name">Имя параметра.</param>
      <param name="id">Идентификатор параметра.</param>
      <param name="value">Новое значение параметра.</param>
      <param name="dampTime">Общее время заслонки.</param>
      <param name="deltaTime">Дельта-время, отдаваемое демпферу.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetFloat(System.Int32,System.Single)">
      <summary>
        <para>Отправлять плавающие значения в Animator, чтобы влиять на переходы.</para>
      </summary>
      <param name="name">Имя параметра.</param>
      <param name="id">Идентификатор параметра.</param>
      <param name="value">Новое значение параметра.</param>
      <param name="dampTime">Общее время заслонки.</param>
      <param name="deltaTime">Дельта-время, отдаваемое демпферу.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetFloat(System.Int32,System.Single,System.Single,System.Single)">
      <summary>
        <para>Отправлять плавающие значения в Animator, чтобы влиять на переходы.</para>
      </summary>
      <param name="name">Имя параметра.</param>
      <param name="id">Идентификатор параметра.</param>
      <param name="value">Новое значение параметра.</param>
      <param name="dampTime">Общее время заслонки.</param>
      <param name="deltaTime">Дельта-время, отдаваемое демпферу.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetIKHintPosition(UnityEngine.AvatarIKHint,UnityEngine.Vector3)">
      <summary>
        <para>Устанавливает позицию подсказки IK.</para>
      </summary>
      <param name="hint">Установленный AvatarIKHint.</param>
      <param name="hintPosition">Положение в мировом пространстве.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetIKHintPositionWeight(UnityEngine.AvatarIKHint,System.Single)">
      <summary>
        <para>Устанавливает трансляционный вес подсказки IK (0 = исходная анимация до IK, 1 = подсказка).</para>
      </summary>
      <param name="hint">Установленный AvatarIKHint.</param>
      <param name="value">Поступательный вес.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetIKPosition(UnityEngine.AvatarIKGoal,UnityEngine.Vector3)">
      <summary>
        <para>Устанавливает положение цели IK.</para>
      </summary>
      <param name="goal">Установленная цель AvatarIKGoal.</param>
      <param name="goalPosition">Положение в мировом пространстве.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetIKPositionWeight(UnityEngine.AvatarIKGoal,System.Single)">
      <summary>
        <para>Устанавливает трансляционный вес цели IK (0 = исходная анимация до IK, 1 = цель).</para>
      </summary>
      <param name="goal">Установленная цель AvatarIKGoal.</param>
      <param name="value">Поступательный вес.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetIKRotation(UnityEngine.AvatarIKGoal,UnityEngine.Quaternion)">
      <summary>
        <para>Устанавливает ротацию цели IK.</para>
      </summary>
      <param name="goal">Установленная цель AvatarIKGoal.</param>
      <param name="goalRotation">Вращение в мировом пространстве.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetIKRotationWeight(UnityEngine.AvatarIKGoal,System.Single)">
      <summary>
        <para>Устанавливает вес вращения цели IK (0 = вращение перед IK, 1 = вращение перед IK целью).</para>
      </summary>
      <param name="goal">Установленная цель AvatarIKGoal.</param>
      <param name="value">Вес вращения.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetInteger(System.String,System.Int32)">
      <summary>
        <para>Задает значение заданного целочисленного параметра.</para>
      </summary>
      <param name="name">Имя параметра.</param>
      <param name="id">Идентификатор параметра.</param>
      <param name="value">Новое значение параметра.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetInteger(System.Int32,System.Int32)">
      <summary>
        <para>Задает значение заданного целочисленного параметра.</para>
      </summary>
      <param name="name">Имя параметра.</param>
      <param name="id">Идентификатор параметра.</param>
      <param name="value">Новое значение параметра.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetLayerWeight(System.Int32,System.Single)">
      <summary>
        <para>Устанавливает вес слоя по заданному индексу.</para>
      </summary>
      <param name="layerIndex">Индекс слоя.</param>
      <param name="weight">Вес нового слоя.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetLookAtPosition(UnityEngine.Vector3)">
      <summary>
        <para>Устанавливает позицию взгляда.</para>
      </summary>
      <param name="lookAtPosition">Позиция для просмотра.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetLookAtWeight(System.Single)">
      <summary>
        <para>Установить просмотр весов.</para>
      </summary>
      <param name="weight">(0-1) глобальный вес LookAt, множитель для других параметров.</param>
      <param name="bodyWeight">(0-1) определяет, насколько тело участвует в LookAt.</param>
      <param name="headWeight">(0-1) определяет, насколько голова участвует в LookAt.</param>
      <param name="eyesWeight">(0-1) определяет, насколько глаза участвуют в LookAt.</param>
      <param name="clampWeight">(0-1) 0.0 означает, что персонаж не ограничен в движении. 1.0 означает, что персонаж зажат (смотреть становится невозможно). 0.5 означает, что персонаж может двигаться на половину возможного диапазона (180 градусов).</param>
    </member>
    <member name="M:UnityEngine.Animator.SetLookAtWeight(System.Single,System.Single)">
      <summary>
        <para>Установить просмотр весов.</para>
      </summary>
      <param name="weight">(0-1) глобальный вес LookAt, множитель для других параметров.</param>
      <param name="bodyWeight">(0-1) определяет, насколько тело участвует в LookAt.</param>
      <param name="headWeight">(0-1) определяет, насколько голова участвует в LookAt.</param>
      <param name="eyesWeight">(0-1) определяет, насколько глаза участвуют в LookAt.</param>
      <param name="clampWeight">(0-1) 0.0 означает, что персонаж не ограничен в движении. 1.0 означает, что персонаж зажат (смотреть становится невозможно). 0.5 означает, что персонаж может двигаться на половину возможного диапазона (180 градусов).</param>
    </member>
    <member name="M:UnityEngine.Animator.SetLookAtWeight(System.Single,System.Single,System.Single)">
      <summary>
        <para>Установить просмотр весов.</para>
      </summary>
      <param name="weight">(0-1) глобальный вес LookAt, множитель для других параметров.</param>
      <param name="bodyWeight">(0-1) определяет, насколько тело участвует в LookAt.</param>
      <param name="headWeight">(0-1) определяет, насколько голова участвует в LookAt.</param>
      <param name="eyesWeight">(0-1) определяет, насколько глаза участвуют в LookAt.</param>
      <param name="clampWeight">(0-1) 0.0 означает, что персонаж не ограничен в движении. 1.0 означает, что персонаж зажат (смотреть становится невозможно). 0.5 означает, что персонаж может двигаться на половину возможного диапазона (180 градусов).</param>
    </member>
    <member name="M:UnityEngine.Animator.SetLookAtWeight(System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Установить просмотр весов.</para>
      </summary>
      <param name="weight">(0-1) глобальный вес LookAt, множитель для других параметров.</param>
      <param name="bodyWeight">(0-1) определяет, насколько тело участвует в LookAt.</param>
      <param name="headWeight">(0-1) определяет, насколько голова участвует в LookAt.</param>
      <param name="eyesWeight">(0-1) определяет, насколько глаза участвуют в LookAt.</param>
      <param name="clampWeight">(0-1) 0.0 означает, что персонаж не ограничен в движении. 1.0 означает, что персонаж зажат (смотреть становится невозможно). 0.5 означает, что персонаж может двигаться на половину возможного диапазона (180 градусов).</param>
    </member>
    <member name="M:UnityEngine.Animator.SetLookAtWeight(System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Установить просмотр весов.</para>
      </summary>
      <param name="weight">(0-1) глобальный вес LookAt, множитель для других параметров.</param>
      <param name="bodyWeight">(0-1) определяет, насколько тело участвует в LookAt.</param>
      <param name="headWeight">(0-1) определяет, насколько голова участвует в LookAt.</param>
      <param name="eyesWeight">(0-1) определяет, насколько глаза участвуют в LookAt.</param>
      <param name="clampWeight">(0-1) 0.0 означает, что персонаж не ограничен в движении. 1.0 означает, что персонаж зажат (смотреть становится невозможно). 0.5 означает, что персонаж может двигаться на половину возможного диапазона (180 градусов).</param>
    </member>
    <member name="M:UnityEngine.Animator.SetQuaternion(System.String,UnityEngine.Quaternion)">
      <summary>
        <para>Задает значение параметра кватерниона.</para>
      </summary>
      <param name="name">Имя параметра.</param>
      <param name="value">Новое значение параметра.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetQuaternion(System.Int32,UnityEngine.Quaternion)">
      <summary>
        <para>Задает значение параметра кватерниона.</para>
      </summary>
      <param name="id">Из параметра. Идентификатор создается с помощью Animator::StringToHash.</param>
      <param name="value">Новое значение параметра.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetTarget(UnityEngine.AvatarTarget,System.Single)">
      <summary>
        <para>Устанавливает AvatarTarget и targetNormalizedTime для текущего состояния.</para>
      </summary>
      <param name="targetIndex">Запрошенная часть тела аватара.</param>
      <param name="targetNormalizedTime">Текущее состояние Время, которое запрашивается.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetTrigger(System.String)">
      <summary>
        <para>Устанавливает значение данного параметра триггера.</para>
      </summary>
      <param name="name">Имя параметра.</param>
      <param name="id">Идентификатор параметра.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetTrigger(System.Int32)">
      <summary>
        <para>Устанавливает значение данного параметра триггера.</para>
      </summary>
      <param name="name">Имя параметра.</param>
      <param name="id">Идентификатор параметра.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetVector(System.String,UnityEngine.Vector3)">
      <summary>
        <para>Задает значение векторного параметра.</para>
      </summary>
      <param name="name">Имя параметра.</param>
      <param name="value">Новое значение параметра.</param>
    </member>
    <member name="M:UnityEngine.Animator.SetVector(System.Int32,UnityEngine.Vector3)">
      <summary>
        <para>Задает значение векторного параметра.</para>
      </summary>
      <param name="id">Идентификатор параметра. Идентификатор создается с помощью Animator::StringToHash.</param>
      <param name="value">Новое значение параметра.</param>
    </member>
    <member name="M:UnityEngine.Animator.StartPlayback">
      <summary>
        <para>Устанавливает аниматор в режим воспроизведения.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animator.StartRecording(System.Int32)">
      <summary>
        <para>Переводит аниматор в режим записи и выделяет круговой буфер размером frameCount.</para>
      </summary>
      <param name="frameCount">Количество кадров (обновлений), которые будут записаны. Если frameCount равен 0, запись будет продолжаться до тех пор, пока пользователь не вызовет StopRecording. Максимальное значение для frameCount — 10000.</param>
    </member>
    <member name="M:UnityEngine.Animator.StopPlayback">
      <summary>
        <para>Останавливает режим воспроизведения аниматора. Когда воспроизведение останавливается, аватар снова получает управление от игровой логики.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animator.StopRecording">
      <summary>
        <para>Останавливает режим записи аниматора.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Animator.StringToHash(System.String)">
      <summary>
        <para>Генерирует идентификатор параметра из строки.</para>
      </summary>
      <param name="name">Строка для преобразования в идентификатор.</param>
    </member>
    <member name="M:UnityEngine.Animator.Update(System.Single)">
      <summary>
        <para>Оценивает аниматор на основе deltaTime.</para>
      </summary>
      <param name="deltaTime">Дельта времени.</param>
    </member>
    <member name="M:UnityEngine.Animator.WriteDefaultValues">
      <summary>
        <para>Принудительно записывает значения по умолчанию, хранящиеся в аниматоре.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AnimatorClipInfo">
      <summary>
        <para>Информация о клипе, воспроизводимом и микшируемом аниматором.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorClipInfo.clip">
      <summary>
        <para>Возвращает анимационный клип, воспроизведенный Animator.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorClipInfo.weight">
      <summary>
        <para>Возвращает вес смешивания, используемый Animator для смешивания этого клипа.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AnimatorControllerParameter">
      <summary>
        <para>Используется для связи между сценарием и контроллером. Некоторые параметры могут быть установлены в сценариях и использоваться контроллером, в то время как другие параметры основаны на пользовательских кривых в анимационных клипах и могут быть выбраны с помощью API сценариев.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorControllerParameter.defaultBool">
      <summary>
        <para>Логическое значение по умолчанию для параметра.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorControllerParameter.defaultFloat">
      <summary>
        <para>Значение с плавающей запятой по умолчанию для параметра.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorControllerParameter.defaultInt">
      <summary>
        <para>Значение int по умолчанию для параметра.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorControllerParameter.name">
      <summary>
        <para>Имя параметра.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorControllerParameter.nameHash">
      <summary>
        <para>Возвращает хэш параметра на основе его имени.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorControllerParameter.type">
      <summary>
        <para>Тип параметра.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AnimatorControllerParameterType">
      <summary>
        <para>Тип параметра.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AnimatorControllerParameterType.Bool">
      <summary>
        <para>Параметр логического типа.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AnimatorControllerParameterType.Float">
      <summary>
        <para>Параметр типа с плавающей запятой.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AnimatorControllerParameterType.Int">
      <summary>
        <para>Параметр типа Int.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AnimatorControllerParameterType.Trigger">
      <summary>
        <para>Параметр типа триггера.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AnimatorCullingMode">
      <summary>
        <para>Режим отсечения для Animator.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AnimatorCullingMode.AlwaysAnimate">
      <summary>
        <para>Всегда анимируйте всего персонажа. Объект анимируется даже за пределами экрана.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AnimatorCullingMode.CullCompletely">
      <summary>
        <para>Анимация полностью отключается, когда визуализаторы не видны.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AnimatorCullingMode.CullUpdateTransforms">
      <summary>
        <para>Перенацеливание, IK и запись преобразований отключаются, когда визуализаторы не видны.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AnimatorOverrideController">
      <summary>
        <para>Интерфейс для управления Animator Override Controller.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorOverrideController.clips">
      <summary>
        <para>Возвращает список исходных анимационных клипов из контроллера и их переопределение анимационных клипов.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorOverrideController.overridesCount">
      <summary>
        <para>Возвращает количество переопределений.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorOverrideController.runtimeAnimatorController">
      <summary>
        <para>Контроллер среды выполнения Animator, который переопределяет контроллер переопределения Animator.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AnimatorOverrideController.ApplyOverrides(System.Collections.Generic.IList`1&lt;System.Collections.Generic.KeyValuePair`2&lt;UnityEngine.AnimationClip,UnityEngine.AnimationClip&gt;&gt;)">
      <summary>
        <para>Применяет список переопределений к этому контроллеру переопределения Animator.</para>
      </summary>
      <param name="overrides">Список переопределений для применения.</param>
    </member>
    <member name="M:UnityEngine.AnimatorOverrideController.#ctor">
      <summary>
        <para>Создает пустой контроллер переопределения аниматора.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AnimatorOverrideController.#ctor(UnityEngine.RuntimeAnimatorController)">
      <summary>
        <para>Создает контроллер переопределения аниматора, который переопределяет контроллер.</para>
      </summary>
      <param name="controller">Контроллер Runtime Animator для переопределения.</param>
    </member>
    <member name="M:UnityEngine.AnimatorOverrideController.GetOverrides(System.Collections.Generic.List`1&lt;System.Collections.Generic.KeyValuePair`2&lt;UnityEngine.AnimationClip,UnityEngine.AnimationClip&gt;&gt;)">
      <summary>
        <para>Получает список переопределений анимационного клипа, определенных в данный момент в этом контроллере переопределения аниматора.</para>
      </summary>
      <param name="overrides">Массив для получения результатов.</param>
    </member>
    <member name="P:UnityEngine.AnimatorOverrideController.this">
      <summary>
        <para>Возвращает либо переопределяющий анимационный клип, если он задан, либо исходный анимационный клип с именем name.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorOverrideController.this">
      <summary>
        <para>Возвращает либо переопределяющий анимационный клип, если он задан, либо исходный анимационный клип с именем name.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AnimatorRecorderMode">
      <summary>
        <para>Режим диктофона Аниматора.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AnimatorRecorderMode.Offline">
      <summary>
        <para>Рекордер Animator отключен.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AnimatorRecorderMode.Playback">
      <summary>
        <para>Рекордер Animator находится в режиме воспроизведения.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AnimatorRecorderMode.Record">
      <summary>
        <para>Рекордер Animator находится в режиме записи.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AnimatorStateInfo">
      <summary>
        <para>Информация о текущем или следующем состоянии.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorStateInfo.fullPathHash">
      <summary>
        <para>Хэш полного пути для этого состояния.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorStateInfo.length">
      <summary>
        <para>Текущая продолжительность состояния.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorStateInfo.loop">
      <summary>
        <para>Зацикливается ли состояние.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorStateInfo.nameHash">
      <summary>
        <para>Хэшированное имя штата.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorStateInfo.normalizedTime">
      <summary>
        <para>Нормализованное время состояния.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorStateInfo.shortNameHash">
      <summary>
        <para>Хэш создается с помощью Animator.StringToHash. Хэш не включает имя родительского слоя.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorStateInfo.speed">
      <summary>
        <para>Скорость воспроизведения анимации. 1 — нормальная скорость воспроизведения.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorStateInfo.speedMultiplier">
      <summary>
        <para>Множитель скорости для этого состояния.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorStateInfo.tagHash">
      <summary>
        <para>Тег состояния.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AnimatorStateInfo.IsName(System.String)">
      <summary>
        <para>Соответствует ли имя имени активного состояния в машине состояний?</para>
      </summary>
      <param name="name">
      </param>
    </member>
    <member name="M:UnityEngine.AnimatorStateInfo.IsTag(System.String)">
      <summary>
        <para>Соответствует ли тег тегу активного состояния в машине состояний.</para>
      </summary>
      <param name="tag">
      </param>
    </member>
    <member name="T:UnityEngine.AnimatorTransitionInfo">
      <summary>
        <para>Информация о текущем переходе.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorTransitionInfo.anyState">
      <summary>
        <para>Возвращает true, если переход осуществляется из узла AnyState или из Animator.CrossFade.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorTransitionInfo.duration">
      <summary>
        <para>Продолжительность перехода.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorTransitionInfo.durationUnit">
      <summary>
        <para>Единица длительности перехода.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorTransitionInfo.fullPathHash">
      <summary>
        <para>Хэш-имя перехода.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorTransitionInfo.nameHash">
      <summary>
        <para>Упрощенное название Перехода.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorTransitionInfo.normalizedTime">
      <summary>
        <para>Нормированное время Перехода.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AnimatorTransitionInfo.userNameHash">
      <summary>
        <para>Заданное пользователем имя перехода.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AnimatorTransitionInfo.IsName(System.String)">
      <summary>
        <para>Соответствует ли имя имени активного перехода.</para>
      </summary>
      <param name="name">
      </param>
    </member>
    <member name="M:UnityEngine.AnimatorTransitionInfo.IsUserName(System.String)">
      <summary>
        <para>Соответствует ли userName имени активного перехода.</para>
      </summary>
      <param name="name">
      </param>
    </member>
    <member name="T:UnityEngine.AnimatorUpdateMode">
      <summary>
        <para>Режим обновления аниматора.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AnimatorUpdateMode.AnimatePhysics">
      <summary>
        <para>Обновляет аниматор во время физического цикла, чтобы система анимации синхронизировалась с физическим движком.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AnimatorUpdateMode.Normal">
      <summary>
        <para>Обычное обновление аниматора.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AnimatorUpdateMode.UnscaledTime">
      <summary>
        <para>Animator обновляется независимо от Time.timeScale.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AnimatorUtility">
      <summary>
        <para>Различные утилиты для работы с аниматором.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AnimatorUtility.DeoptimizeTransformHierarchy(UnityEngine.GameObject)">
      <summary>
        <para>Эта функция воссоздает всю иерархию преобразований в GameObject.</para>
      </summary>
      <param name="go">GameObject для деоптимизации.</param>
    </member>
    <member name="M:UnityEngine.AnimatorUtility.OptimizeTransformHierarchy(UnityEngine.GameObject,System.String[])">
      <summary>
        <para>Эта функция удалит всю иерархию преобразования в GameObject, аниматор запишет матрицы преобразования непосредственно в матрицы меша скина, что сэкономит много циклов процессора.</para>
      </summary>
      <param name="go">GameObject для оптимизации.</param>
      <param name="exposedTransforms">Список имен преобразований для предоставления.</param>
    </member>
    <member name="T:UnityEngine.ArmDof">
      <summary>
        <para>Перечисление всех мышц руки.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ArmDof.ArmDownUp">
      <summary>
        <para>Мышца руки вниз-вверх.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ArmDof.ArmFrontBack">
      <summary>
        <para>Передне-задняя мышца руки.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ArmDof.ArmRollInOut">
      <summary>
        <para>Мышца вращения руки внутрь-наружу.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ArmDof.ForeArmCloseOpen">
      <summary>
        <para>Мышца предплечья закрыто-открыта.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ArmDof.ForeArmRollInOut">
      <summary>
        <para>Мышца перекатывания предплечья внутрь-наружу.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ArmDof.HandDownUp">
      <summary>
        <para>Мышца руки вниз-вверх.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ArmDof.HandInOut">
      <summary>
        <para>Мышца руки внутрь-наружу.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ArmDof.LastArmDof">
      <summary>
        <para>Последнее значение перечисления ArmDof.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ArmDof.ShoulderDownUp">
      <summary>
        <para>Мышца плеча вниз-вверх.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ArmDof.ShoulderFrontBack">
      <summary>
        <para>Плечевая переднезадняя мышца.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Avatar">
      <summary>
        <para>Определение аватара.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Avatar.humanDescription">
      <summary>
        <para>Возвращает HumanDescription, использованный для создания этого аватара.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Avatar.isHuman">
      <summary>
        <para>Возвратите true, если этот аватар является допустимым человеческим аватаром.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Avatar.isValid">
      <summary>
        <para>Возвратите true, если этот аватар является действительным аватаром mecanim. Это может быть обычный аватар или человеческий аватар.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AvatarBuilder">
      <summary>
        <para>Класс для создания аватаров из пользовательских скриптов.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AvatarBuilder.BuildGenericAvatar(UnityEngine.GameObject,System.String)">
      <summary>
        <para>Создайте новый общий аватар.</para>
      </summary>
      <param name="go">Корневой объект вашей иерархии преобразования.</param>
      <param name="rootMotionTransformName">Имя преобразования корневого преобразования движения. Если пусто, корневое движение не определено, и вы должны сами позаботиться о движении аватара.</param>
    </member>
    <member name="M:UnityEngine.AvatarBuilder.BuildHumanAvatar(UnityEngine.GameObject,UnityEngine.HumanDescription)">
      <summary>
        <para>Создайте гуманоидный аватар.</para>
      </summary>
      <param name="go">Корневой объект вашей иерархии преобразования. Он должен быть самым верхним игровым объектом при создании аватара.</param>
      <param name="humanDescription">Гуманоидное описание аватара.</param>
      <returns>
        <para>Возвращает аватар, вы всегда должны проверять, действителен ли аватар, прежде чем использовать его с Avatar.isValid.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.AvatarIKGoal">
      <summary>
        <para>ИК-гол.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarIKGoal.LeftFoot">
      <summary>
        <para>Левая нога.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarIKGoal.LeftHand">
      <summary>
        <para>Левая рука.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarIKGoal.RightFoot">
      <summary>
        <para>Правая нога.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarIKGoal.RightHand">
      <summary>
        <para>Правая рука.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AvatarIKHint">
      <summary>
        <para>ИК-подсказка.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarIKHint.LeftElbow">
      <summary>
        <para>Подсказка IK левого локтя.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarIKHint.LeftKnee">
      <summary>
        <para>Подсказка IK левого колена.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarIKHint.RightElbow">
      <summary>
        <para>Подсказка IK правого локтя.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarIKHint.RightKnee">
      <summary>
        <para>Подсказка IK правого колена.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AvatarMask">
      <summary>
        <para>AvatarMask используется для маскировки частей тела и трансформаций гуманоидов.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AvatarMask.humanoidBodyPartCount">
      <summary>
        <para>Количество частей тела гуманоида.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AvatarMask.transformCount">
      <summary>
        <para>Количество преобразований.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AvatarMask.AddTransformPath(UnityEngine.Transform,System.Boolean)">
      <summary>
        <para>Добавляет путь преобразования в AvatarMask.</para>
      </summary>
      <param name="transform">Преобразование для добавления в AvatarMask.</param>
      <param name="recursive">Добавлять ли также все дочерние элементы указанного преобразования.</param>
    </member>
    <member name="M:UnityEngine.AvatarMask.#ctor">
      <summary>
        <para>Создает новую маску аватара.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AvatarMask.GetHumanoidBodyPartActive(UnityEngine.AvatarMaskBodyPart)">
      <summary>
        <para>Возвращает true, если часть тела гуманоида с заданным индексом активна.</para>
      </summary>
      <param name="index">Индекс части тела гуманоида.</param>
    </member>
    <member name="M:UnityEngine.AvatarMask.GetTransformActive(System.Int32)">
      <summary>
        <para>Возвращает true, если преобразование по данному индексу активно.</para>
      </summary>
      <param name="index">Индекс преобразования.</param>
    </member>
    <member name="M:UnityEngine.AvatarMask.GetTransformPath(System.Int32)">
      <summary>
        <para>Возвращает путь преобразования по заданному индексу.</para>
      </summary>
      <param name="index">Индекс преобразования.</param>
    </member>
    <member name="M:UnityEngine.AvatarMask.RemoveTransformPath(UnityEngine.Transform,System.Boolean)">
      <summary>
        <para>Удаляет путь преобразования из AvatarMask.</para>
      </summary>
      <param name="transform">Преобразование, которое следует удалить из AvatarMask.</param>
      <param name="recursive">Следует ли также удалить все дочерние элементы указанного преобразования.</param>
    </member>
    <member name="M:UnityEngine.AvatarMask.SetHumanoidBodyPartActive(UnityEngine.AvatarMaskBodyPart,System.Boolean)">
      <summary>
        <para>Делает часть тела гуманоида с заданным индексом активной или нет.</para>
      </summary>
      <param name="index">Индекс части тела гуманоида.</param>
      <param name="value">Активен или нет.</param>
    </member>
    <member name="M:UnityEngine.AvatarMask.SetTransformActive(System.Int32,System.Boolean)">
      <summary>
        <para>Устанавливает преобразование по данному индексу в активное или нет.</para>
      </summary>
      <param name="index">Индекс преобразования.</param>
      <param name="value">Активен или нет.</param>
    </member>
    <member name="M:UnityEngine.AvatarMask.SetTransformPath(System.Int32,System.String)">
      <summary>
        <para>Задает путь преобразования по заданному индексу.</para>
      </summary>
      <param name="index">Индекс преобразования.</param>
      <param name="path">Путь преобразования.</param>
    </member>
    <member name="T:UnityEngine.AvatarMaskBodyPart">
      <summary>
        <para>Часть тела аватара.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarMaskBodyPart.Body">
      <summary>
        <para>Тело.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarMaskBodyPart.Head">
      <summary>
        <para>Глава.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarMaskBodyPart.LastBodyPart">
      <summary>
        <para>Общее количество частей тела.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarMaskBodyPart.LeftArm">
      <summary>
        <para>Левая рука.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarMaskBodyPart.LeftFingers">
      <summary>
        <para>Левые пальцы.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarMaskBodyPart.LeftFootIK">
      <summary>
        <para>Левая нога IK.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarMaskBodyPart.LeftHandIK">
      <summary>
        <para>Левая рука IK.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarMaskBodyPart.LeftLeg">
      <summary>
        <para>Левая нога.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarMaskBodyPart.RightArm">
      <summary>
        <para>Правая рука.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarMaskBodyPart.RightFingers">
      <summary>
        <para>Правые пальцы.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarMaskBodyPart.RightFootIK">
      <summary>
        <para>Правая нога IK.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarMaskBodyPart.RightHandIK">
      <summary>
        <para>Правая рука IK.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarMaskBodyPart.RightLeg">
      <summary>
        <para>Правая нога.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarMaskBodyPart.Root">
      <summary>
        <para>Корень.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AvatarTarget">
      <summary>
        <para>Цель.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarTarget.Body">
      <summary>
        <para>Корпус, центр масс.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarTarget.LeftFoot">
      <summary>
        <para>Левая нога.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarTarget.LeftHand">
      <summary>
        <para>Левая рука.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarTarget.RightFoot">
      <summary>
        <para>Правая нога.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarTarget.RightHand">
      <summary>
        <para>Правая рука.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AvatarTarget.Root">
      <summary>
        <para>Корень, позиция игрового объекта.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.BodyDof">
      <summary>
        <para>Перечисление всех мышц тела.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.BodyDof.ChestFrontBack">
      <summary>
        <para>Грудная передне-задняя мышца.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.BodyDof.ChestLeftRight">
      <summary>
        <para>Грудная левая-правая мышца.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.BodyDof.ChestRollLeftRight">
      <summary>
        <para>Перекатывание грудной клетки влево-вправо.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.BodyDof.LastBodyDof">
      <summary>
        <para>Последнее значение перечисления BodyDof.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.BodyDof.SpineFrontBack">
      <summary>
        <para>Передне-задняя мышца позвоночника.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.BodyDof.SpineLeftRight">
      <summary>
        <para>Левая-правая мышца позвоночника.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.BodyDof.SpineRollLeftRight">
      <summary>
        <para>Позвоночник вращается влево-вправо мышцей.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.BodyDof.UpperChestFrontBack">
      <summary>
        <para>Верхняя грудная передне-задняя мышца.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.BodyDof.UpperChestLeftRight">
      <summary>
        <para>Верхняя грудная мышца слева-справа.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.BodyDof.UpperChestRollLeftRight">
      <summary>
        <para>Верхняя грудная мышца перекатывается влево-вправо.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.DurationUnit">
      <summary>
        <para>Опишите единицу длительности.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DurationUnit.Fixed">
      <summary>
        <para>Фиксированная продолжительность — это продолжительность, выраженная в секундах.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.DurationUnit.Normalized">
      <summary>
        <para>Нормализованная продолжительность — это продолжительность, выраженная в процентах.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Experimental.Animations.AnimationPlayableOutputExtensions">
      <summary>
        <para>Статический класс, предоставляющий экспериментальные методы расширения для AnimationPlayableOutput .</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Experimental.Animations.AnimationPlayableOutputExtensions.GetAnimationStreamSource(UnityEngine.Animations.AnimationPlayableOutput)">
      <summary>
        <para>Получает источник потока указанного AnimationPlayableOutput.</para>
      </summary>
      <param name="output">Экземпляр AnimationPlayableOutput, вызывающий этот метод.</param>
      <returns>
        <para>Возвращает AnimationStreamSource вывода.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Experimental.Animations.AnimationPlayableOutputExtensions.GetSortingOrder(UnityEngine.Animations.AnimationPlayableOutput)">
      <summary>
        <para>Получает индекс приоритета указанного AnimationPlayableOutput.</para>
      </summary>
      <param name="output">Экземпляр AnimationPlayableOutput, вызывающий этот метод.</param>
      <returns>
        <para>Возвращает порядок сортировки вывода.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Experimental.Animations.AnimationPlayableOutputExtensions.SetAnimationStreamSource(UnityEngine.Animations.AnimationPlayableOutput,UnityEngine.Experimental.Animations.AnimationStreamSource)">
      <summary>
        <para>Задает источник потока для указанного AnimationPlayableOutput.</para>
      </summary>
      <param name="output">Экземпляр AnimationPlayableOutput, вызывающий этот метод.</param>
      <param name="streamSource">AnimationStreamSource для применения к этому выводу.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Animations.AnimationPlayableOutputExtensions.SetSortingOrder">
      <summary>
        <para>Задает порядок сортировки для указанного AnimationPlayableOutput.</para>
      </summary>
      <param name="output">Экземпляр AnimationPlayableOutput, вызывающий этот метод.</param>
      <param name="sortingOrder">Порядок сортировки для этого вывода.</param>
    </member>
    <member name="T:UnityEngine.Experimental.Animations.AnimationStreamSource">
      <summary>
        <para>Описывает, как инициализируется AnimationStream</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Animations.AnimationStreamSource.DefaultValues">
      <summary>
        <para>AnimationStream будет инициализирован со значениями по умолчанию из Animator.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Experimental.Animations.AnimationStreamSource.PreviousInputs">
      <summary>
        <para>AnimationStream будет инициализирован значениями из предыдущего AnimationPlayableOutput, подключенного к тому же Animator.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.FingerDof">
      <summary>
        <para>Перечисление всех мышц пальца.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.FingerDof.DistalCloseOpen">
      <summary>
        <para>Дистальная закрыто-открытая мышца.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.FingerDof.IntermediateCloseOpen">
      <summary>
        <para>Промежуточная закрыто-открытая мышца.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.FingerDof.LastFingerDof">
      <summary>
        <para>Последнее значение перечисления FingerDof.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.FingerDof.ProximalDownUp">
      <summary>
        <para>Проксимальная мышца вниз-вверх.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.FingerDof.ProximalInOut">
      <summary>
        <para>Проксимальная мышца внутрь-наружу.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.HeadDof">
      <summary>
        <para>Перечисление всех мышц головы.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HeadDof.HeadFrontBack">
      <summary>
        <para>Передне-задняя мышца головы.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HeadDof.HeadLeftRight">
      <summary>
        <para>Головная лево-правая мышца.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HeadDof.HeadRollLeftRight">
      <summary>
        <para>Поворот головы влево-вправо.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HeadDof.JawDownUp">
      <summary>
        <para>Мышца челюсти вниз-вверх.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HeadDof.JawLeftRight">
      <summary>
        <para>Лево-правая мышца челюсти.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HeadDof.LastHeadDof">
      <summary>
        <para>Последнее значение перечисления HeadDof.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HeadDof.LeftEyeDownUp">
      <summary>
        <para>Мышца левого глаза вниз-вверх.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HeadDof.LeftEyeInOut">
      <summary>
        <para>Мышца входа-выхода левого глаза.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HeadDof.NeckFrontBack">
      <summary>
        <para>Передне-задняя мышца шеи.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HeadDof.NeckLeftRight">
      <summary>
        <para>Левая-правая мышца шеи.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HeadDof.NeckRollLeftRight">
      <summary>
        <para>Шея вращается влево-вправо мышцей.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HeadDof.RightEyeDownUp">
      <summary>
        <para>Мышца правого глаза вниз-вверх.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HeadDof.RightEyeInOut">
      <summary>
        <para>Мышца входа-выхода правого глаза.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.HumanBodyBones">
      <summary>
        <para>Кости человеческого тела.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.Chest">
      <summary>
        <para>Это грудная кость.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.Head">
      <summary>
        <para>Это головная кость.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.Hips">
      <summary>
        <para>Это бедренная кость.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.Jaw">
      <summary>
        <para>Это челюстная кость.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.LastBone">
      <summary>
        <para>Это последний ограничитель индекса костей.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.LeftEye">
      <summary>
        <para>Это кость левого глаза.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.LeftFoot">
      <summary>
        <para>Это кость левой лодыжки.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.LeftHand">
      <summary>
        <para>Это кость левого запястья.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.LeftIndexDistal">
      <summary>
        <para>Это левая указательная 3-я фаланга.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.LeftIndexIntermediate">
      <summary>
        <para>Это левая указательная 2-я фаланга.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.LeftIndexProximal">
      <summary>
        <para>Это левая указательная 1-я фаланга.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.LeftLittleDistal">
      <summary>
        <para>Это левая маленькая 3-я фаланга.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.LeftLittleIntermediate">
      <summary>
        <para>Это левая маленькая 2-я фаланга.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.LeftLittleProximal">
      <summary>
        <para>Это левая маленькая 1-я фаланга.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.LeftLowerArm">
      <summary>
        <para>Это левая локтевая кость.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.LeftLowerLeg">
      <summary>
        <para>Это кость левого колена.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.LeftMiddleDistal">
      <summary>
        <para>Это левая средняя третья фаланга.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.LeftMiddleIntermediate">
      <summary>
        <para>Это левая средняя 2-я фаланга.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.LeftMiddleProximal">
      <summary>
        <para>Это левая средняя 1-я фаланга.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.LeftRingDistal">
      <summary>
        <para>Это левая кольцевая 3-я фаланга.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.LeftRingIntermediate">
      <summary>
        <para>Это левая кольцевая 2-я фаланга.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.LeftRingProximal">
      <summary>
        <para>Это левая кольцевая 1-я фаланга.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.LeftShoulder">
      <summary>
        <para>Это левая плечевая кость.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.LeftThumbDistal">
      <summary>
        <para>Это третья фаланга большого пальца левой руки.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.LeftThumbIntermediate">
      <summary>
        <para>Это вторая фаланга большого пальца левой руки.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.LeftThumbProximal">
      <summary>
        <para>Это первая фаланга большого пальца левой руки.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.LeftToes">
      <summary>
        <para>Это кость левого пальца ноги.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.LeftUpperArm">
      <summary>
        <para>Это кость левого плеча.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.LeftUpperLeg">
      <summary>
        <para>Это кость левой верхней части ноги.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.Neck">
      <summary>
        <para>Это шейная кость.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.RightEye">
      <summary>
        <para>Это кость правого глаза.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.RightFoot">
      <summary>
        <para>Это правая лодыжка.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.RightHand">
      <summary>
        <para>Это кость правого запястья.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.RightIndexDistal">
      <summary>
        <para>Это правая указательная третья фаланга.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.RightIndexIntermediate">
      <summary>
        <para>Это правая указательная 2-я фаланга.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.RightIndexProximal">
      <summary>
        <para>Это правая указательная 1-я фаланга.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.RightLittleDistal">
      <summary>
        <para>Это правая маленькая третья фаланга.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.RightLittleIntermediate">
      <summary>
        <para>Это правая маленькая 2-я фаланга.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.RightLittleProximal">
      <summary>
        <para>Это правая маленькая 1-я фаланга.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.RightLowerArm">
      <summary>
        <para>Это правая локтевая кость.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.RightLowerLeg">
      <summary>
        <para>Это кость правого колена.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.RightMiddleDistal">
      <summary>
        <para>Это правая средняя третья фаланга.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.RightMiddleIntermediate">
      <summary>
        <para>Это правая средняя 2-я фаланга.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.RightMiddleProximal">
      <summary>
        <para>Это правая средняя 1-я фаланга.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.RightRingDistal">
      <summary>
        <para>Это правое кольцо 3-й фаланги.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.RightRingIntermediate">
      <summary>
        <para>Это правое кольцо 2-й фаланги.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.RightRingProximal">
      <summary>
        <para>Это правое кольцо 1-й фаланги.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.RightShoulder">
      <summary>
        <para>Это правая плечевая кость.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.RightThumbDistal">
      <summary>
        <para>Это 3-я фаланга большого пальца правой руки.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.RightThumbIntermediate">
      <summary>
        <para>Это вторая фаланга большого пальца правой руки.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.RightThumbProximal">
      <summary>
        <para>Это 1-я фаланга большого пальца правой руки.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.RightToes">
      <summary>
        <para>Это кость правого пальца ноги.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.RightUpperArm">
      <summary>
        <para>Это кость правого плеча.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.RightUpperLeg">
      <summary>
        <para>Это кость правой голени.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.Spine">
      <summary>
        <para>Это первая кость позвоночника.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBodyBones.UpperChest">
      <summary>
        <para>Это верхняя часть грудной клетки.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.HumanBone">
      <summary>
        <para>Сопоставление кости в модели и концептуальной кости в анатомии человека Mecanim.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HumanBone.boneName">
      <summary>
        <para>Название кости, с которой сопоставлена ​​человеческая кость Mecanim.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HumanBone.humanName">
      <summary>
        <para>Имя человеческой кости Mecanim, с которой сопоставлена ​​кость из модели.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanBone.limit">
      <summary>
        <para>Пределы вращения, которые определяют мышцу для этой кости.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.HumanDescription">
      <summary>
        <para>Класс, содержащий параметры гуманоидного аватара для передачи в функцию AvatarBuilder.BuildHumanAvatar.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HumanDescription.armStretch">
      <summary>
        <para>Величина, на которую допускается растягивание руки при использовании IK.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HumanDescription.feetSpacing">
      <summary>
        <para>Модификация на минимальное расстояние между ступнями гуманоидной модели.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HumanDescription.hasTranslationDoF">
      <summary>
        <para>Верно для любого человека, у которого есть степень свободы перевода (DoF). По умолчанию установлено значение false.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanDescription.human">
      <summary>
        <para>Сопоставление названий костей Mecanim и названий костей в риге.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HumanDescription.legStretch">
      <summary>
        <para>Величина, на которую длина ноги может растягиваться при использовании IK.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HumanDescription.lowerArmTwist">
      <summary>
        <para>Определяет, как перекат/скручивание предплечья распределяется между локтевым и лучезапястным суставами.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HumanDescription.lowerLegTwist">
      <summary>
        <para>Определяет, как перекат/скручивание голени распределяется между коленом и лодыжкой.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanDescription.skeleton">
      <summary>
        <para>Список трансформаций костей для включения в модель.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HumanDescription.upperArmTwist">
      <summary>
        <para>Определяет, как перекат/скручивание плеча распределяется между плечевым и локтевым суставами.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HumanDescription.upperLegTwist">
      <summary>
        <para>Определяет, как перекат/скручивание бедра распределяется между бедренным и коленным суставами.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.HumanLimit">
      <summary>
        <para>Этот класс хранит пределы вращения, которые определяют мышцу для одной человеческой кости.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HumanLimit.axisLength">
      <summary>
        <para>Длина кости, к которой применяется ограничение.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HumanLimit.center">
      <summary>
        <para>Ориентация кости по умолчанию, когда не применяется мышечное действие.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HumanLimit.max">
      <summary>
        <para>Максимальное вращение от начального значения, которое может применить этот мускул.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HumanLimit.min">
      <summary>
        <para>Максимальное отрицательное вращение от начального значения, которое может применить этот мускул.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HumanLimit.useDefaultValues">
      <summary>
        <para>Должен ли этот лимит использовать значения по умолчанию?</para>
      </summary>
    </member>
    <member name="T:UnityEngine.HumanPartDof">
      <summary>
        <para>Перечисление всех частей человека.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanPartDof.Body">
      <summary>
        <para>Часть человеческого тела.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanPartDof.Head">
      <summary>
        <para>Часть головы человека.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanPartDof.LeftArm">
      <summary>
        <para>Часть левой руки человека.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanPartDof.LeftIndex">
      <summary>
        <para>Часть указательного пальца левой руки человека.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanPartDof.LeftLeg">
      <summary>
        <para>Часть левой ноги человека.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanPartDof.LeftLittle">
      <summary>
        <para>Часть левого мизинца человека.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanPartDof.LeftMiddle">
      <summary>
        <para>Часть среднего пальца левой руки человека.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanPartDof.LeftRing">
      <summary>
        <para>Часть безымянного пальца левой руки человека.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanPartDof.LeftThumb">
      <summary>
        <para>Часть большого пальца левой руки человека.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanPartDof.RightArm">
      <summary>
        <para>Часть правой руки человека.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanPartDof.RightIndex">
      <summary>
        <para>Часть указательного пальца правой руки человека.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanPartDof.RightLeg">
      <summary>
        <para>Часть правой ноги человека.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanPartDof.RightLittle">
      <summary>
        <para>Часть правого мизинца человека.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanPartDof.RightMiddle">
      <summary>
        <para>Часть правого среднего пальца человека.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanPartDof.RightRing">
      <summary>
        <para>Часть безымянного пальца правой руки человека.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanPartDof.RightThumb">
      <summary>
        <para>Часть большого пальца правой руки человека.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.HumanPose">
      <summary>
        <para>Поза гуманоида с возможностью перенацеливания.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanPose.bodyPosition">
      <summary>
        <para>Положение человеческого тела для этой позы.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanPose.bodyRotation">
      <summary>
        <para>Ориентация человеческого тела для этой позы.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.HumanPose.muscles">
      <summary>
        <para>Массив значений мышц для этой позы.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.HumanPoseHandler">
      <summary>
        <para>Используйте этот класс для создания, чтения и записи HumanPose для иерархии скелета гуманоидного аватара или позы аватара.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.HumanPoseHandler.#ctor(UnityEngine.Avatar,UnityEngine.Transform)">
      <summary>
        <para>Создает обработчик позы человека из аватара и корневого преобразования, а также из списка путей соединения.</para>
      </summary>
      <param name="avatar">Аватар, с которого будет считываться или записываться HumanPose. Аватар должен быть гуманоидом.</param>
      <param name="root">Самый верхний родительский элемент иерархии скелетов, определенный в гуманоидном аватаре. Это должно соответствовать определению аватара.</param>
      <param name="jointPaths">Список, который определяет пути соединения аватара. Каждый объединенный путь начинается с узла после корневого преобразования и продолжается вниз по иерархии скелета аватара. Путь соединения корневого преобразования представляет собой пустую строку.</param>
    </member>
    <member name="M:UnityEngine.HumanPoseHandler.#ctor(UnityEngine.Avatar,System.String[])">
      <summary>
        <para>Создает обработчик позы человека из аватара и корневого преобразования, а также из списка путей соединения.</para>
      </summary>
      <param name="avatar">Аватар, с которого будет считываться или записываться HumanPose. Аватар должен быть гуманоидом.</param>
      <param name="root">Самый верхний родительский элемент иерархии скелетов, определенный в гуманоидном аватаре. Это должно соответствовать определению аватара.</param>
      <param name="jointPaths">Список, который определяет пути соединения аватара. Каждый объединенный путь начинается с узла после корневого преобразования и продолжается вниз по иерархии скелета аватара. Путь соединения корневого преобразования представляет собой пустую строку.</param>
    </member>
    <member name="M:UnityEngine.HumanPoseHandler.GetHumanPose(UnityEngine.HumanPose&amp;)">
      <summary>
        <para>Вычисляет позу человека из скелета аватара, сохраняет позу в обработчике позы человека и возвращает позу человека.</para>
      </summary>
      <param name="humanPose">Выходная человеческая поза. В позе человека bodyPosition и bodyRotation являются положением и вращением приблизительного центра масс гуманоида в мировом пространстве. bodyPosition нормализовано: позиция делится по человеческому масштабу аватара.</param>
    </member>
    <member name="M:UnityEngine.HumanPoseHandler.GetInternalAvatarPose(Unity.Collections.NativeArray`1&lt;System.Single&gt;)">
      <summary>
        <para>Получает внутреннюю позу человека, хранящуюся в обработчике позы человека, и преобразует ее в позу аватара.</para>
      </summary>
      <param name="avatarPose">Выходная поза аватара. Поза аватара выражается в виде массива чисел с плавающей запятой. Поплавки представляют перемещение и вращение суставов как локальные преобразования.
Каждое совместное локальное преобразование представлено 3 числами с плавающей запятой для перевода и 4 числами с плавающей запятой для вращения (выражено в виде кватерниона). Преобразование соединения хранится в массиве в том же порядке, что и пути соединения в параметреjoinPaths, используемом для создания обработчика позы человека. Например, если обработчик позы человека был создан с 20 путями соединения, параметр avatarPose должен быть массивом из 140 чисел с плавающей запятой.</param>
    </member>
    <member name="M:UnityEngine.HumanPoseHandler.GetInternalHumanPose(UnityEngine.HumanPose&amp;)">
      <summary>
        <para>Получает внутреннюю позу человека, хранящуюся в обработчике позы человека.</para>
      </summary>
      <param name="humanPose">Выходная человеческая поза. В позе человека bodyPosition и bodyRotation являются положением и вращением приблизительного центра масс гуманоида в мировом пространстве. bodyPosition нормализовано: позиция делится по человеческому масштабу аватара.</param>
    </member>
    <member name="M:UnityEngine.HumanPoseHandler.SetHumanPose(UnityEngine.HumanPose&amp;)">
      <summary>
        <para>Сохраняет указанную позу человека внутри обработчика позы человека.</para>
      </summary>
      <param name="humanPose">Человеческая поза для установки. В позе человека bodyPosition и bodyRotation являются положением и вращением приблизительного центра масс гуманоида. Это относительно корневого преобразования гуманоида и нормализовано: локальное положение разделено по масштабу человека аватара.</param>
    </member>
    <member name="M:UnityEngine.HumanPoseHandler.SetInternalAvatarPose(Unity.Collections.NativeArray`1&lt;System.Single&gt;)">
      <summary>
        <para>Преобразует позу аватара в позу человека и сохраняет ее как внутреннюю позу человека в обработчике позы человека.</para>
      </summary>
      <param name="avatarPose">Входная поза аватара. Поза аватара выражается в виде массива чисел с плавающей запятой. Поплавки представляют перемещение и вращение суставов как локальные преобразования.
Каждое совместное локальное преобразование представлено 3 числами с плавающей запятой для перевода и 4 числами с плавающей запятой для вращения (выражено в виде кватерниона). Преобразование соединения хранится в массиве в том же порядке, что и пути соединения в параметреjoinPaths, используемом для создания обработчика позы человека. Например, если обработчик позы человека был создан с 20 путями соединения, параметр avatarPose должен быть массивом из 140 чисел с плавающей запятой.</param>
    </member>
    <member name="M:UnityEngine.HumanPoseHandler.SetInternalHumanPose(UnityEngine.HumanPose&amp;)">
      <summary>
        <para>Сохраняет указанную позу человека как внутреннюю позу человека внутри обработчика позы человека.</para>
      </summary>
      <param name="humanPose">Человеческая поза для установки. В позе человека bodyPosition и bodyRotation являются положением и вращением приблизительного центра масс гуманоида. Это относительно корневого преобразования гуманоида и нормализовано: локальное положение разделено по масштабу человека аватара.</param>
    </member>
    <member name="T:UnityEngine.HumanTrait">
      <summary>
        <para>Подробная информация обо всех типах костей и мышц человека, определенных Mecanim.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.HumanTrait.BoneCount">
      <summary>
        <para>Количество типов человеческих костей, определенных Mecanim.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.HumanTrait.BoneFromMuscle(System.Int32)">
      <summary>
        <para>Вернуть кость, с которой связана конкретная мышца.</para>
      </summary>
      <param name="i">Мышечный индекс.</param>
    </member>
    <member name="P:UnityEngine.HumanTrait.BoneName">
      <summary>
        <para>Массив названий всех типов человеческих костей, определенных Mecanim.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.HumanTrait.GetBoneDefaultHierarchyMass(System.Int32)">
      <summary>
        <para>Получает массу иерархии костей.</para>
      </summary>
      <param name="i">Индекс костей гуманоида.</param>
      <returns>
        <para>Масса костной иерархии.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.HumanTrait.GetMuscleDefaultMax(System.Int32)">
      <summary>
        <para>Получите максимальное значение вращения мышцы по умолчанию в градусах.</para>
      </summary>
      <param name="i">Мышечный индекс.</param>
    </member>
    <member name="M:UnityEngine.HumanTrait.GetMuscleDefaultMin(System.Int32)">
      <summary>
        <para>Получить минимальное значение поворота мышцы по умолчанию в градусах.</para>
      </summary>
      <param name="i">Мышечный индекс.</param>
    </member>
    <member name="M:UnityEngine.HumanTrait.GetParentBone(System.Int32)">
      <summary>
        <para>Возвращает индекс кости родительского гуманоида.</para>
      </summary>
      <param name="i">Индекс кости гуманоида, из которого нужно получить родителя.</param>
      <returns>
        <para>Гуманоидный костный индекс родителя.</para>
      </returns>
    </member>
    <member name="P:UnityEngine.HumanTrait.MuscleCount">
      <summary>
        <para>Количество типов мышц человека, определенных Mecanim.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.HumanTrait.MuscleFromBone(System.Int32,System.Int32)">
      <summary>
        <para>Получите мышечный индекс для определенного костного индекса и «степени свободы».</para>
      </summary>
      <param name="i">Индекс кости.</param>
      <param name="dofIndex">Число, представляющее «степень свободы»: 0 для оси X, 1 для оси Y, 2 для оси Z.</param>
    </member>
    <member name="P:UnityEngine.HumanTrait.MuscleName">
      <summary>
        <para>Массив названий всех типов мышц человека, определенных Mecanim.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.HumanTrait.RequiredBone(System.Int32)">
      <summary>
        <para>Является ли кость членом минимального набора костей, который требуется Mecanim для модели человека?</para>
      </summary>
      <param name="i">Индекс кости для тестирования.</param>
    </member>
    <member name="P:UnityEngine.HumanTrait.RequiredBoneCount">
      <summary>
        <para>Количество типов костей, необходимых Mecanim для любой модели человека.</para>
      </summary>
    </member>
    <member name="?:UnityEngine.IAnimationClipSource">
      <summary>
        <para>Используйте этот интерфейс, чтобы класс предоставил свой собственный список анимационных клипов в окно анимации. Класс должен наследоваться от MonoBehaviour.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.IAnimationClipSource.GetAnimationClips(System.Collections.Generic.List`1&lt;UnityEngine.AnimationClip&gt;)">
      <summary>
        <para>Возвращает список анимационных клипов.</para>
      </summary>
      <param name="results">
      </param>
    </member>
    <member name="T:UnityEngine.LegDof">
      <summary>
        <para>Перечисление всех мышц ноги.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LegDof.FootCloseOpen">
      <summary>
        <para>Мышца стопы закрыто-открыта.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LegDof.FootInOut">
      <summary>
        <para>Мышца стопы внутрь-наружу.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LegDof.LastLegDof">
      <summary>
        <para>Последнее значение перечисления LegDof.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LegDof.LegCloseOpen">
      <summary>
        <para>Мышца ноги закрыто-открыта.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LegDof.LegRollInOut">
      <summary>
        <para>Мышца перекатывания ноги внутрь-наружу.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LegDof.ToesUpDown">
      <summary>
        <para>Мышца пальцев стопы вверх-вниз.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LegDof.UpperLegFrontBack">
      <summary>
        <para>Переднезадняя мышца бедра.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LegDof.UpperLegInOut">
      <summary>
        <para>Мышца бедра внутрь-наружу.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.LegDof.UpperLegRollInOut">
      <summary>
        <para>Мышца перекатывания бедра внутрь-наружу.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.MatchTargetWeightMask">
      <summary>
        <para>Используйте эту структуру, чтобы указать положение и маску веса поворота для Animator.MatchTarget.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.MatchTargetWeightMask.positionXYZWeight">
      <summary>
        <para>Позиция веса XYZ.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.MatchTargetWeightMask.rotationWeight">
      <summary>
        <para>Вес вращения.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.MatchTargetWeightMask.#ctor(UnityEngine.Vector3,System.Single)">
      <summary>
        <para>Конструктор MatchTargetWeightMask.</para>
      </summary>
      <param name="positionXYZWeight">Позиция веса XYZ.</param>
      <param name="rotationWeight">Вес вращения.</param>
    </member>
    <member name="T:UnityEngine.Motion">
      <summary>
        <para>Базовый класс для AnimationClips и BlendTrees.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Playables.AnimationPlayableUtilities">
      <summary>
        <para>Реализует служебные методы высокого уровня для упрощения использования Playable API с анимацией.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Playables.AnimationPlayableUtilities.Play(UnityEngine.Animator,UnityEngine.Playables.Playable,UnityEngine.Playables.PlayableGraph)">
      <summary>
        <para>Воспроизведение Playable на заданном аниматоре.</para>
      </summary>
      <param name="animator">Целевой аниматор.</param>
      <param name="playable">Playable, который будет воспроизводиться.</param>
      <param name="graph">Граф, которому принадлежит Playable.</param>
    </member>
    <member name="M:UnityEngine.Playables.AnimationPlayableUtilities.PlayAnimatorController(UnityEngine.Animator,UnityEngine.RuntimeAnimatorController,UnityEngine.Playables.PlayableGraph&amp;)">
      <summary>
        <para>Создает PlayableGraph для воспроизведения на данном аниматоре. AnimatorControllerPlayable также создается для заданного RuntimeAnimatorController.</para>
      </summary>
      <param name="animator">Целевой аниматор.</param>
      <param name="controller">RuntimeAnimatorController, для которого создается AnimatorControllerPlayable.</param>
      <param name="graph">Созданный PlayableGraph.</param>
      <returns>
        <para>Дескриптор только что созданного AnimatorControllerPlayable.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Playables.AnimationPlayableUtilities.PlayClip(UnityEngine.Animator,UnityEngine.AnimationClip,UnityEngine.Playables.PlayableGraph&amp;)">
      <summary>
        <para>Создает PlayableGraph для воспроизведения на данном аниматоре. AnimationClipPlayable также создается для данного AnimationClip.</para>
      </summary>
      <param name="animator">Целевой аниматор.</param>
      <param name="clip">AnimationClip, для которого создается AnimationClipPlayable.</param>
      <param name="graph">Созданный PlayableGraph.</param>
      <returns>
        <para>Дескриптор только что созданного AnimationClipPlayable.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Playables.AnimationPlayableUtilities.PlayLayerMixer(UnityEngine.Animator,System.Int32,UnityEngine.Playables.PlayableGraph&amp;)">
      <summary>
        <para>Создает PlayableGraph для воспроизведения на данном аниматоре. Также создается AnimationLayerMixerPlayable.</para>
      </summary>
      <param name="animator">Целевой аниматор.</param>
      <param name="inputCount">Количество входных данных для AnimationLayerMixerPlayable. Определяет количество слоев.</param>
      <param name="graph">Созданный PlayableGraph.</param>
      <returns>
        <para>Дескриптор только что созданного AnimationLayerMixerPlayable.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Playables.AnimationPlayableUtilities.PlayMixer(UnityEngine.Animator,System.Int32,UnityEngine.Playables.PlayableGraph&amp;)">
      <summary>
        <para>Создает PlayableGraph для воспроизведения на данном аниматоре. Также создается AnimationMixerPlayable.</para>
      </summary>
      <param name="animator">Целевой аниматор.</param>
      <param name="inputCount">Количество входных данных для AnimationMixerPlayable.</param>
      <param name="graph">Созданный PlayableGraph.</param>
      <returns>
        <para>Дескриптор только что созданного AnimationMixerPlayable.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.PlayMode">
      <summary>
        <para>Используется функцией Animation.Play.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.PlayMode.StopAll">
      <summary>
        <para>Остановит все анимации, которые были запущены с этим компонентом перед воспроизведением.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.PlayMode.StopSameLayer">
      <summary>
        <para>Остановит все анимации, которые были запущены в том же слое. Это значение по умолчанию при воспроизведении анимации.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.QueueMode">
      <summary>
        <para>Используется функцией Animation.Play.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.QueueMode.CompleteOthers">
      <summary>
        <para>Начнет воспроизводиться после того, как все остальные анимации перестанут воспроизводиться.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.QueueMode.PlayNow">
      <summary>
        <para>Сразу начинает играть. Это можно использовать, если вы просто хотите быстро создать дубликат анимации.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.RuntimeAnimatorController">
      <summary>
        <para>Представление AnimatorController во время выполнения. Используйте это представление для изменения контроллера аниматора во время выполнения.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.RuntimeAnimatorController.animationClips">
      <summary>
        <para>Извлекает все AnimationClip, используемые контроллером.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.SharedBetweenAnimatorsAttribute">
      <summary>
        <para>SharedBetweenAnimatorsAttribute указывает, что экземпляр StateMachineBehaviour создается только один раз и используется всеми экземплярами Animator. Этот атрибут уменьшает объем памяти для каждого экземпляра контроллера.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.SkeletonBone">
      <summary>
        <para>Подробная информация об имени преобразования, сопоставленном с костью скелета модели, а также о его положении по умолчанию и вращении в Т-позе.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SkeletonBone.name">
      <summary>
        <para>Имя Преобразования, привязанного к кости.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SkeletonBone.position">
      <summary>
        <para>Т-образное положение кости в локальном пространстве.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SkeletonBone.rotation">
      <summary>
        <para>Т-образное вращение кости в локальном пространстве.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.SkeletonBone.scale">
      <summary>
        <para>Т-образное масштабирование кости в локальном пространстве.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.StateMachineBehaviour">
      <summary>
        <para>StateMachineBehaviour — это компонент, который можно добавить в состояние конечного автомата. Это базовый класс, от которого наследуется каждый скрипт состояния.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.StateMachineBehaviour.OnStateEnter">
      <summary>
        <para>Вызывается в первом кадре обновления, когда конечный автомат оценивает это состояние.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.StateMachineBehaviour.OnStateExit">
      <summary>
        <para>Вызывается в последнем кадре обновления, когда конечный автомат оценивает это состояние.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.StateMachineBehaviour.OnStateIK">
      <summary>
        <para>Вызывается сразу после MonoBehaviour.OnAnimatorIK.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.StateMachineBehaviour.OnStateMachineEnter(UnityEngine.Animator,System.Int32)">
      <summary>
        <para>Вызывается в первом кадре обновления при переходе к конечному автомату. Это не вызывается при переходе в подсостояние конечного автомата.</para>
      </summary>
      <param name="animator">Аниматор, играющий с этим конечным автоматом.</param>
      <param name="stateMachinePathHash">Хэш полного пути для этого конечного автомата.</param>
    </member>
    <member name="M:UnityEngine.StateMachineBehaviour.OnStateMachineExit(UnityEngine.Animator,System.Int32)">
      <summary>
        <para>Вызывается в последнем кадре обновления при переходе из StateMachine. Это не вызывается при переходе в подсостояние StateMachine.</para>
      </summary>
      <param name="animator">Аниматор, играющий с этим конечным автоматом.</param>
      <param name="stateMachinePathHash">Хэш полного пути для этого конечного автомата.</param>
    </member>
    <member name="M:UnityEngine.StateMachineBehaviour.OnStateMove">
      <summary>
        <para>Вызывается сразу после MonoBehaviour.OnAnimatorMove.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.StateMachineBehaviour.OnStateUpdate">
      <summary>
        <para>Вызывается в каждом кадре обновления, за исключением первого и последнего кадра.</para>
      </summary>
    </member>
    <member name="A:UnityEngine.AnimationModule">
      <summary>
        <para>Модуль Animation реализует систему анимации Unity.</para>
      </summary>
    </member>
  </members>
</doc>