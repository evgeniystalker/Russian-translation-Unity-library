<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<doc>
  <members>
    <assembly>
      <name>UnityEditor.CoreModule</name>
    </assembly>
    <member name="T:UnityEditor.ActionOnDotNetUnhandledException">
      <summary>
        <para>Поведение в случае необработанного исключения .NET.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ActionOnDotNetUnhandledException.Crash">
      <summary>
        <para>Сбой в случае необработанного исключения .NET (будет создан отчет о сбое).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ActionOnDotNetUnhandledException.SilentExit">
      <summary>
        <para>Тихий выход в случае необработанного исключения .NET (отчет о сбое не создается).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Advertisements.AdvertisementSettings">
      <summary>
        <para>API редактора для функции редактора Unity Services. Обычно UnityAds включается из окна «Службы», но при написании собственного расширения редактора можно использовать этот API.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Advertisements.AdvertisementSettings.enabled">
      <summary>
        <para>Глобальное логическое значение для включения или отключения функции рекламы.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Advertisements.AdvertisementSettings.initializeOnStartup">
      <summary>
        <para>Определяет, должна ли рекламная система инициализироваться сразу при запуске.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Advertisements.AdvertisementSettings.testMode">
      <summary>
        <para>Определяет, используются ли тестовые рекламные объявления вместо производственных.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Advertisements.AdvertisementSettings.GetGameId(UnityEngine.RuntimePlatform)">
      <summary>
        <para>Получает идентификатор игры, указанный для платформы среды выполнения.</para>
      </summary>
      <param name="platform">
      </param>
      <returns>
        <para>Идентификатор игры для конкретной платформы.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Advertisements.AdvertisementSettings.GetPlatformGameId(System.String)">
      <summary>
        <para>Получает идентификатор игры, указанный для платформы среды выполнения.</para>
      </summary>
      <param name="platformName">
      </param>
      <returns>
        <para>Идентификатор игры для конкретной платформы.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Advertisements.AdvertisementSettings.IsPlatformEnabled(UnityEngine.RuntimePlatform)">
      <summary>
        <para>Возвращает, включена ли конкретная платформа.</para>
      </summary>
      <param name="platform">Платформа для проверки.</param>
      <returns>
        <para>Логическое значение для платформы.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Advertisements.AdvertisementSettings.SetGameId(UnityEngine.RuntimePlatform,System.String)">
      <summary>
        <para>Задает идентификатор игры для указанной платформы.</para>
      </summary>
      <param name="platform">
      </param>
      <param name="gameId">
      </param>
    </member>
    <member name="M:UnityEditor.Advertisements.AdvertisementSettings.SetPlatformEnabled(UnityEngine.RuntimePlatform,System.Boolean)">
      <summary>
        <para>Включить конкретную платформу.</para>
      </summary>
      <param name="platform">
      </param>
      <param name="value">
      </param>
    </member>
    <member name="M:UnityEditor.Advertisements.AdvertisementSettings.SetPlatformGameId(System.String,System.String)">
      <summary>
        <para>Задает идентификатор игры для указанной платформы.</para>
      </summary>
      <param name="platformName">
      </param>
      <param name="gameId">
      </param>
    </member>
    <member name="T:UnityEditor.AI.NavMeshBuilder">
      <summary>
        <para>Интерфейс построителя сетки навигации.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AI.NavMeshBuilder.isRunning">
      <summary>
        <para>Возвращает true, если асинхронная сборка все еще выполняется. (Редактор Unity)</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AI.NavMeshBuilder.BuildNavMesh">
      <summary>
        <para>Постройте навигационную сетку. (Редактор Unity)</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AI.NavMeshBuilder.BuildNavMeshAsync">
      <summary>
        <para>Создайте навигационную сетку асинхронно. (Редактор Unity)</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AI.NavMeshBuilder.BuildNavMeshForMultipleScenes(System.String[])">
      <summary>
        <para>Создает комбинированную навигационную сетку для содержимого нескольких сцен. (Редактор Unity)</para>
      </summary>
      <param name="paths">Массив путей к сценам, которые используются для построения навигационной сетки.</param>
    </member>
    <member name="M:UnityEditor.AI.NavMeshBuilder.Cancel">
      <summary>
        <para>Отменить построение навигационной сетки. (UnityEditor) См. также: NavMeshBuilder.BuildNavMeshAsync</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AI.NavMeshBuilder.Cancel(UnityEngine.AI.NavMeshData)">
      <summary>
        <para>Отменяет асинхронное обновление указанных данных NavMesh. (UnityEngine) См. также: NavMeshBuilder.UpdateNavMeshDataAsync.</para>
      </summary>
      <param name="data">Данные, связанные с асинхронным обновлением.</param>
    </member>
    <member name="M:UnityEditor.AI.NavMeshBuilder.ClearAllNavMeshes">
      <summary>
        <para>Очистить все навигационные сетки. (Редактор Unity)</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AI.NavMeshBuilder.CollectSourcesInStage(UnityEngine.Bounds,System.Int32,UnityEngine.AI.NavMeshCollectGeometry,System.Int32,System.Collections.Generic.List`1&lt;UnityEngine.AI.NavMeshBuildMarkup&gt;,UnityEngine.SceneManagement.Scene,System.Collections.Generic.List`1&lt;UnityEngine.AI.NavMeshBuildSource&gt;)">
      <summary>
        <para>Собирает средства визуализации или физические коллайдеры, а также ландшафты внутри объема. (Редактор Unity)</para>
      </summary>
      <param name="includedWorldBounds">Запрошенные объекты должны перекрывать эти границы, чтобы быть включенными в результаты.</param>
      <param name="includedLayerMask">Указывает, какие слои включены в запрос.</param>
      <param name="geometry">Какой тип геометрии собирать — например, физические коллайдеры.</param>
      <param name="defaultArea">Тип области, назначаемый результатам, если он не изменен NavMeshMarkup.</param>
      <param name="markups">Список пометок, позволяющих лучше контролировать сбор объектов.</param>
      <param name="stageProxy">Результаты выбираются только со сцены, к которой принадлежит данная сцена.</param>
      <param name="results">Список, где хранятся результаты, список очищается в начале звонка.</param>
    </member>
    <member name="M:UnityEditor.AI.NavMeshBuilder.CollectSourcesInStage(UnityEngine.Transform,System.Int32,UnityEngine.AI.NavMeshCollectGeometry,System.Int32,System.Collections.Generic.List`1&lt;UnityEngine.AI.NavMeshBuildMarkup&gt;,UnityEngine.SceneManagement.Scene,System.Collections.Generic.List`1&lt;UnityEngine.AI.NavMeshBuildSource&gt;)">
      <summary>
        <para>Собирает средства визуализации или физические коллайдеры, а также ландшафты в иерархии преобразования. (Редактор Unity)</para>
      </summary>
      <param name="root">Если не нуль, рассматривать в запросе только root и его дочерние элементы; если null, включает все загруженное.</param>
      <param name="includedLayerMask">Указывает, какие слои включены в запрос.</param>
      <param name="geometry">Какой тип геометрии собирать — например, физические коллайдеры.</param>
      <param name="defaultArea">Тип области, назначаемый результатам, если он не изменен NavMeshMarkup.</param>
      <param name="markups">Список пометок, позволяющих лучше контролировать сбор объектов.</param>
      <param name="stageProxy">Результаты выбираются только со сцены, к которой принадлежит данная сцена.</param>
      <param name="results">Список, где хранятся результаты, список очищается в начале звонка.</param>
    </member>
    <member name="T:UnityEditor.AI.NavMeshEditorHelpers">
      <summary>
        <para>Функционал утилиты NavMesh работает только в редакторе.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AI.NavMeshEditorHelpers.DrawBuildDebug(UnityEngine.AI.NavMeshData,UnityEngine.AI.NavMeshBuildDebugFlags)">
      <summary>
        <para>Отображает в редакторе точные промежуточные данные, использованные в процессе сборки указанной NavMesh.</para>
      </summary>
      <param name="navMeshData">Объект NavMesh, для которого были намеренно собраны отладочные данные в процессе сборки.</param>
      <param name="flags">Битовая маска, определяющая типы данных, отображаемые одновременно.</param>
    </member>
    <member name="T:UnityEditor.AI.NavMeshVisualizationSettings">
      <summary>
        <para>Представляет состояние визуализации графики отладки навигации.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AI.NavMeshVisualizationSettings.showNavigation">
      <summary>
        <para>Количество пользователей, запрашивающих включение графики отладки навигации.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Analytics.AnalyticsSettings">
      <summary>
        <para>API редактора для функции редактора Unity Services. Обычно аналитика включается из окна «Службы», но при написании собственного расширения редактора можно использовать этот API.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Analytics.AnalyticsSettings.configUrl">
      <summary>
        <para>Установите конечную точку конфигурации Google Analytics.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Analytics.AnalyticsSettings.dashboardUrl">
      <summary>
        <para>Получите конечную точку панели управления Analytics.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Analytics.AnalyticsSettings.deviceStatsEnabledInBuild">
      <summary>
        <para>Сообщает, включена ли статистика устройства во время выполнения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Analytics.AnalyticsSettings.enabled">
      <summary>
        <para>Если установлено значение true, это логическое поле включает функцию аналитики в Unity. Он отключает функцию, если для нее задано значение false.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Analytics.AnalyticsSettings.eventUrl">
      <summary>
        <para>Установите конечную точку события Analytics.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Analytics.AnalyticsSettings.initializeOnStartup">
      <summary>
        <para>Определяет, инициализирует ли Unity Analytics сразу при запуске.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Analytics.AnalyticsSettings.testMode">
      <summary>
        <para>Установите значение true для тестирования интеграции Google Analytics только в редакторе.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Analytics.AnalyticsSettings.OnRequireInBuildHandler(UnityEditor.Analytics.AnalyticsSettings/RequireInBuildDelegate)">
      <summary>
        <para>Отправляется всякий раз, когда начинается сборка платформы. Используйте это событие, чтобы включить Google Analytics в сборке платформы.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="T:UnityEditor.Analytics.AnalyticsSettings.RequireInBuildDelegate">
      <summary>
        <para>Определяет подпись делегата для обработки событий AnalyticsSettings.RequireInBuildDelegate.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Analytics.PerformanceReportingSettings">
      <summary>
        <para>Обычно отчеты о производительности включаются в окне «Службы», но при написании собственного расширения редактора можно использовать этот API.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Analytics.PerformanceReportingSettings.enabled">
      <summary>
        <para>Это логическое поле включает функцию отчетов о производительности в Unity, если она равна true, или отключает ее, если false.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Android.IPostGenerateGradleAndroidProject">
      <summary>
        <para>Реализуйте этот интерфейс для получения обратного вызова после создания проекта Android Gradle. Унаследовано от UnityEditor.Build.IOrderedCallback.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Android.IPostGenerateGradleAndroidProject.OnPostGenerateGradleAndroidProject(System.String)">
      <summary>
        <para>Реализуйте эту функцию для получения обратного вызова после создания проекта Android Gradle и до начала сборки. Он не вызывается при выполнении внутренней сборки.</para>
      </summary>
      <param name="path">Путь к корню проекта Gradle библиотеки Unity. Примечание: при экспорте проекта этот параметр содержит путь к библиотеке Unity в папке, указанной для экспорта.</param>
    </member>
    <member name="T:UnityEditor.AndroidArchitecture">
      <summary>
        <para>Архитектура процессора Android.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidArchitecture.All">
      <summary>
        <para>Все архитектуры.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidArchitecture.ARM64">
      <summary>
        <para>64-битная архитектура ARM.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidArchitecture.ARMv7">
      <summary>
        <para>32-разрядная архитектура ARM.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidArchitecture.None">
      <summary>
        <para>Неверная архитектура.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidArchitecture.X86">
      <summary>
        <para>32-разрядная архитектура Intel.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidArchitecture.X86_64">
      <summary>
        <para>64-разрядная архитектура Intel.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AndroidAssetPackImporter">
      <summary>
        <para>Представляет каталог пакета ресурсов Android в проекте.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AndroidAssetPackImporter.GetAllImporters">
      <summary>
        <para>Получает все средства импорта пакетов ресурсов Android.</para>
      </summary>
      <returns>
        <para>Возвращает массив со всеми импортерами пакетов ресурсов Android.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.AndroidBlitType">
      <summary>
        <para>Описывает способ отображения контента на экране.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidBlitType.Always">
      <summary>
        <para>Всегда выполняйте рендеринг вне экрана и переносите его в задний буфер.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidBlitType.Auto">
      <summary>
        <para>Автоматически определять наиболее подходящий способ рисования на экране.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidBlitType.Never">
      <summary>
        <para>Никогда не выполняйте рендеринг вне экрана и не переносите его в задний буфер. Всегда выполняйте рендеринг непосредственно в резервный буфер.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AndroidBuildSystem">
      <summary>
        <para>Тип системы сборки Android.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidBuildSystem.ADT">
      <summary>
        <para>Экспорт проекта ADT (устаревший). Этот параметр устарел и больше не поддерживается. Вместо этого используйте экспорт AndroidBuildSystem.Gradle.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidBuildSystem.Gradle">
      <summary>
        <para>Создайте APK с помощью Gradle или экспортируйте проект Gradle.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidBuildSystem.Internal">
      <summary>
        <para>Соберите APK, используя внутреннюю систему сборки.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AndroidBuildType">
      <summary>
        <para>Создайте конфигурации для сгенерированного проекта.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidBuildType.Debug">
      <summary>
        <para>Конфигурация сборки настроена на отладку для сгенерированного проекта.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidBuildType.Development">
      <summary>
        <para>Конфигурация сборки настроена на разработку для сгенерированного проекта.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidBuildType.Release">
      <summary>
        <para>Для конфигурации сборки задано значение Release для сгенерированного проекта.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AndroidCreateSymbols">
      <summary>
        <para>Определяет параметры, доступные для выбора типа файла символов для создания в сборке Android.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidCreateSymbols.Debugging">
      <summary>
        <para>Создайте zip-пакет, содержащий символы отладки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidCreateSymbols.Disabled">
      <summary>
        <para>Не создавайте пакет символов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidCreateSymbols.Public">
      <summary>
        <para>Создайте zip-пакет, содержащий общедоступные символы.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AndroidETC2Fallback">
      <summary>
        <para>Это перечисление имеет значения для различных качеств для распаковки текстур ETC2 на устройствах Android, которые не поддерживают формат текстур ETC2.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidETC2Fallback.Quality16Bit">
      <summary>
        <para>Текстуры распаковываются в подходящий 16-битный формат.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidETC2Fallback.Quality32Bit">
      <summary>
        <para>Текстуры распаковываются в формат TextureFormat.RGBA32.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidETC2Fallback.Quality32BitDownscaled">
      <summary>
        <para>Текстуры распаковываются в формат TextureFormat.RGBA32 и уменьшаются до половины исходной ширины и высоты текстуры.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AndroidETC2FallbackOverride">
      <summary>
        <para>Это перечисление имеет значения для различных качеств для распаковки текстуры ETC2 на устройствах Android, которые не поддерживают формат текстуры ETC2.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidETC2FallbackOverride.Quality16Bit">
      <summary>
        <para>Текстура распаковывается в подходящий 16-битный формат.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidETC2FallbackOverride.Quality32Bit">
      <summary>
        <para>Текстура распаковывается в формат TextureFormat.RGBA32.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidETC2FallbackOverride.Quality32BitDownscaled">
      <summary>
        <para>Текстура распаковывается в формат TextureFormat.RGBA32 и масштабируется до половины исходной ширины и высоты текстуры.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidETC2FallbackOverride.UseBuildSettings">
      <summary>
        <para>Используйте значение, указанное в настройках сборки проигрывателя.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AndroidGamepadSupportLevel">
      <summary>
        <para>Уровень поддержки геймпада для Android TV.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidGamepadSupportLevel.RequiresGamepad">
      <summary>
        <para>Для игры требуется геймпад.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidGamepadSupportLevel.SupportsDPad">
      <summary>
        <para>Игра полностью работает с крестовиной, геймпад не нужен.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidGamepadSupportLevel.SupportsGamepad">
      <summary>
        <para>Работает с геймпадом, но не требует его.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AndroidMinification">
      <summary>
        <para>Как минимизировать код Java вашего двоичного файла.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidMinification.Gradle">
      <summary>
        <para>Используйте экспериментальную внутреннюю минификацию gradle.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidMinification.None">
      <summary>
        <para>Не использовать минимизацию.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidMinification.Proguard">
      <summary>
        <para>Используйте минификацию proguard.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AndroidPreferredInstallLocation">
      <summary>
        <para>Предпочтительное место установки приложения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidPreferredInstallLocation.Auto">
      <summary>
        <para>Пусть ОС решает, у приложения нет предпочтений.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidPreferredInstallLocation.ForceInternal">
      <summary>
        <para>Принудительная установка во внутреннюю память. Требуется для таких вещей, как живые обои.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidPreferredInstallLocation.PreferExternal">
      <summary>
        <para>Если есть возможность, предпочтите внешний. В противном случае установить во внутреннюю папку.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AndroidSdkVersions">
      <summary>
        <para>Уровни API, которые можно указать в скриптах. Обратите внимание, что самый низкий уровень API здесь строго соответствует самому низкому поддерживаемому уровню API, однако эти значения не следует использовать для определения самого высокого поддерживаемого уровня API.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSdkVersions.AndroidApiLevel16">
      <summary>
        <para>Android 4.1, "Jelly Bean", уровень API 16.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSdkVersions.AndroidApiLevel17">
      <summary>
        <para>Android 4.2, "Jelly Bean", уровень API 17.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSdkVersions.AndroidApiLevel18">
      <summary>
        <para>Android 4.3, "Jelly Bean", уровень API 18.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSdkVersions.AndroidApiLevel19">
      <summary>
        <para>Android 4.4, "KitKat", уровень API 19.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSdkVersions.AndroidApiLevel21">
      <summary>
        <para>Android 5.0, "Lollipop", уровень API 21.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSdkVersions.AndroidApiLevel22">
      <summary>
        <para>Android 5.1, "Lollipop", уровень API 22.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSdkVersions.AndroidApiLevel23">
      <summary>
        <para>Android 6.0, «Зефир», уровень API 23.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSdkVersions.AndroidApiLevel24">
      <summary>
        <para>Android 7.0, Nougat, уровень API 24.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSdkVersions.AndroidApiLevel25">
      <summary>
        <para>Android 7.1, Nougat, уровень API 25.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSdkVersions.AndroidApiLevel26">
      <summary>
        <para>Android 8.0, "Oreo", уровень API 26.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSdkVersions.AndroidApiLevel27">
      <summary>
        <para>Android 8.1, "Oreo", уровень API 27.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSdkVersions.AndroidApiLevel28">
      <summary>
        <para>Android 9.0, "Pie", уровень API 28.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSdkVersions.AndroidApiLevel29">
      <summary>
        <para>Android 10.0, уровень API 29.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSdkVersions.AndroidApiLevel30">
      <summary>
        <para>Android 11.0, уровень API 30.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSdkVersions.AndroidApiLevelAuto">
      <summary>
        <para>Автоматически устанавливает целевой уровень API в соответствии с последним установленным пакетом SDK на вашем компьютере.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AndroidShowActivityIndicatorOnLoading">
      <summary>
        <para>Приложение должно отображать ActivityIndicator при загрузке.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidShowActivityIndicatorOnLoading.DontShow">
      <summary>
        <para>Не показывать.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidShowActivityIndicatorOnLoading.InversedLarge">
      <summary>
        <para>Перевернутый большой.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidShowActivityIndicatorOnLoading.InversedSmall">
      <summary>
        <para>Перевернутый малый.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidShowActivityIndicatorOnLoading.Large">
      <summary>
        <para>Большой.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidShowActivityIndicatorOnLoading.Small">
      <summary>
        <para>Маленький.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AndroidSplashScreenScale">
      <summary>
        <para>Режимы масштабирования экрана-заставки Android.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSplashScreenScale.Center">
      <summary>
        <para>Центр.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSplashScreenScale.ScaleToFill">
      <summary>
        <para>Масштаб для заполнения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSplashScreenScale.ScaleToFit">
      <summary>
        <para>Масштабируйте по размеру.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AndroidTargetDevice">
      <summary>
        <para>Целевая архитектура устройства Android.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidTargetDevice.ARMv7">
      <summary>
        <para>Только ARMv7.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidTargetDevice.FAT">
      <summary>
        <para>Все поддерживаемые архитектуры.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AndroidTargetDevices">
      <summary>
        <para>Определяет типы устройств, на которых разрешено запускать приложение Android. Используется для свойства PlayerSettings.Android._androidTargetDevices.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidTargetDevices.AllDevices">
      <summary>
        <para>Сборку Android разрешено запускать на всех целевых устройствах.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidTargetDevices.ChromeOSDevicesOnly">
      <summary>
        <para>Сборку Android можно запускать только на устройствах с Chrome OS.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidTargetDevices.PhonesTabletsAndTVDevicesOnly">
      <summary>
        <para>Сборку Android можно запускать только на телефонах, планшетах и ​​телевизорах Android, а не на любых устройствах с Chrome OS.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AnimatedValues.AnimBool">
      <summary>
        <para>Лерп от 0 до 1.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AnimatedValues.AnimBool.faded">
      <summary>
        <para>Возвращает плавающее значение анимации движения.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AnimatedValues.AnimBool.#ctor">
      <summary>
        <para>Конструктор.</para>
      </summary>
      <param name="value">Начальное значение.</param>
      <param name="callback">
      </param>
    </member>
    <member name="M:UnityEditor.AnimatedValues.AnimBool.#ctor(System.Boolean)">
      <summary>
        <para>Конструктор.</para>
      </summary>
      <param name="value">Начальное значение.</param>
      <param name="callback">
      </param>
    </member>
    <member name="M:UnityEditor.AnimatedValues.AnimBool.#ctor(UnityEngine.Events.UnityAction)">
      <summary>
        <para>Конструктор.</para>
      </summary>
      <param name="value">Начальное значение.</param>
      <param name="callback">
      </param>
    </member>
    <member name="M:UnityEditor.AnimatedValues.AnimBool.#ctor(System.Boolean,UnityEngine.Events.UnityAction)">
      <summary>
        <para>Конструктор.</para>
      </summary>
      <param name="value">Начальное значение.</param>
      <param name="callback">
      </param>
    </member>
    <member name="M:UnityEditor.AnimatedValues.AnimBool.Fade(System.Single,System.Single)">
      <summary>
        <para>Возвращает значение между from и to в зависимости от текущего значения анимации bools.</para>
      </summary>
      <param name="from">Значение для lerp.</param>
      <param name="to">Значение для lerp.</param>
    </member>
    <member name="M:UnityEditor.AnimatedValues.AnimBool.GetValue">
      <summary>
        <para>Типовая реализация BaseAnimValue_1.GetValue.</para>
      </summary>
      <returns>
        <para>Текущее значение.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.AnimatedValues.AnimFloat">
      <summary>
        <para>Анимированное значение с плавающей запятой.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AnimatedValues.AnimFloat.#ctor(System.Single)">
      <summary>
        <para>Конструктор.</para>
      </summary>
      <param name="value">Начальное значение.</param>
      <param name="callback">
      </param>
    </member>
    <member name="M:UnityEditor.AnimatedValues.AnimFloat.#ctor(System.Single,UnityEngine.Events.UnityAction)">
      <summary>
        <para>Конструктор.</para>
      </summary>
      <param name="value">Начальное значение.</param>
      <param name="callback">
      </param>
    </member>
    <member name="M:UnityEditor.AnimatedValues.AnimFloat.GetValue">
      <summary>
        <para>Типовая реализация BaseAnimValue_1.GetValue.</para>
      </summary>
      <returns>
        <para>Текущее значение.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.AnimatedValues.AnimQuaternion">
      <summary>
        <para>Анимированное значение кватерниона.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AnimatedValues.AnimQuaternion.#ctor(UnityEngine.Quaternion)">
      <summary>
        <para>Конструктор.</para>
      </summary>
      <param name="value">Начальное значение.</param>
      <param name="callback">
      </param>
    </member>
    <member name="M:UnityEditor.AnimatedValues.AnimQuaternion.#ctor(UnityEngine.Quaternion,UnityEngine.Events.UnityAction)">
      <summary>
        <para>Конструктор.</para>
      </summary>
      <param name="value">Начальное значение.</param>
      <param name="callback">
      </param>
    </member>
    <member name="M:UnityEditor.AnimatedValues.AnimQuaternion.GetValue">
      <summary>
        <para>Типовая реализация BaseAnimValue_1.GetValue.</para>
      </summary>
      <returns>
        <para>Текущее значение.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.AnimatedValues.AnimVector3">
      <summary>
        <para>Анимированное значение Vector3.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AnimatedValues.AnimVector3.#ctor">
      <summary>
        <para>Конструктор.</para>
      </summary>
      <param name="value">Начальное значение.</param>
      <param name="callback">
      </param>
    </member>
    <member name="M:UnityEditor.AnimatedValues.AnimVector3.#ctor(UnityEngine.Vector3)">
      <summary>
        <para>Конструктор.</para>
      </summary>
      <param name="value">Начальное значение.</param>
      <param name="callback">
      </param>
    </member>
    <member name="M:UnityEditor.AnimatedValues.AnimVector3.#ctor(UnityEngine.Vector3,UnityEngine.Events.UnityAction)">
      <summary>
        <para>Конструктор.</para>
      </summary>
      <param name="value">Начальное значение.</param>
      <param name="callback">
      </param>
    </member>
    <member name="M:UnityEditor.AnimatedValues.AnimVector3.GetValue">
      <summary>
        <para>Типовая реализация BaseAnimValue_1.GetValue.</para>
      </summary>
      <returns>
        <para>Текущее значение.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.AnimatedValues.BaseAnimValue`1">
      <summary>
        <para>Абстрактный базовый класс для анимированных значений.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AnimatedValues.BaseAnimValue_1.isAnimating">
      <summary>
        <para>Значение, которое в данный момент анимируется.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AnimatedValues.BaseAnimValue_1.speed">
      <summary>
        <para>Скорость анимации.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AnimatedValues.BaseAnimValue_1.target">
      <summary>
        <para>Нацельтесь на анимацию в направлении.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AnimatedValues.BaseAnimValue_1.value">
      <summary>
        <para>Текущее значение анимации.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AnimatedValues.BaseAnimValue_1.valueChanged">
      <summary>
        <para>Обратный вызов при изменении значения.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AnimatedValues.BaseAnimValue_1.BeginAnimating(T,T)">
      <summary>
        <para>Начните анимацию, двигаясь от начального значения к целевому значению.</para>
      </summary>
      <param name="newTarget">Целевое значение.</param>
      <param name="newStart">Начальное значение.</param>
    </member>
    <member name="M:UnityEditor.AnimatedValues.BaseAnimValue_1.GetValue">
      <summary>
        <para>Абстрактная функция, которая будет переопределена в производных типах. Должно возвращать текущее значение анимированного значения.</para>
      </summary>
      <returns>
        <para>Текущее значение.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AnimatedValues.BaseAnimValue_1.StopAnim(T)">
      <summary>
        <para>Остановить анимацию и присвоить заданное значение.</para>
      </summary>
      <param name="newValue">Значение для присвоения.</param>
    </member>
    <member name="T:UnityEditor.AnimatedValues.BaseAnimValueNonAlloc`1">
      <summary>
        <para>Абстрактный базовый класс, предоставляющий бесплатную версию BaseAnimValue.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AnimationClipCurveData">
      <summary>
        <para>Объект AnimationClipCurveData содержит всю информацию, необходимую для идентификации конкретной кривой в AnimationClip. Кривая анимирует определенное свойство материала компонента, прикрепленного к анимированной кости игрового объекта.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AnimationClipCurveData.curve">
      <summary>
        <para>Фактическая кривая анимации.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AnimationClipCurveData.path">
      <summary>
        <para>Путь анимируемого игрового объекта/кости.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AnimationClipCurveData.propertyName">
      <summary>
        <para>Имя анимируемого свойства.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AnimationClipCurveData.type">
      <summary>
        <para>Тип анимируемого компонента/материала.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AnimationMode">
      <summary>
        <para>AnimationMode используется AnimationWindow для хранения измененных свойств.
при воспроизведении AnimationClip.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AnimationMode.animatedPropertyColor">
      <summary>
        <para>Цвет, используемый для обозначения того, что свойство в данный момент анимируется.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AnimationMode.candidatePropertyColor">
      <summary>
        <para>Цвет, используемый для обозначения того, что анимированное свойство было изменено.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AnimationMode.recordedPropertyColor">
      <summary>
        <para>Цвет, используемый для обозначения того, что анимированное свойство автоматически записывает изменения в анимационном клипе.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AnimationMode.AddEditorCurveBinding(UnityEngine.GameObject,UnityEditor.EditorCurveBinding)">
      <summary>
        <para>Помечает свойство, определенное EditorCurveBinding, как анимируемое в данный момент.</para>
      </summary>
      <param name="gameObject">Модифицируемый GameObject.</param>
      <param name="binding">Привязка для изменяемого свойства.</param>
    </member>
    <member name="M:UnityEditor.AnimationMode.AddPropertyModification(UnityEditor.EditorCurveBinding,UnityEditor.PropertyModification,System.Boolean)">
      <summary>
        <para>Помечает свойство как анимируемое в данный момент.</para>
      </summary>
      <param name="binding">Описание изменяемой кривой анимационного клипа.</param>
      <param name="modification">Свойство объекта изменяется.</param>
      <param name="keepPrefabOverride">Указывает, следует ли сохранять изменения, когда целевой объект является экземпляром Prefab.</param>
    </member>
    <member name="M:UnityEditor.AnimationMode.BeginSampling">
      <summary>
        <para>Инициализировать начало выборки анимационного клипа.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AnimationMode.EndSampling">
      <summary>
        <para>Завершите выборку анимационного клипа.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AnimationMode.InAnimationMode">
      <summary>
        <para>Проверяет, находится ли редактор в режиме анимации.</para>
      </summary>
      <param name="driver">Объект AnimationModeDriver, который проверяет, заблокирован ли AnimationMode специально для этого драйвера.</param>
    </member>
    <member name="M:UnityEditor.AnimationMode.InAnimationMode(UnityEditor.AnimationModeDriver)">
      <summary>
        <para>Проверяет, находится ли редактор в режиме анимации.</para>
      </summary>
      <param name="driver">Объект AnimationModeDriver, который проверяет, заблокирован ли AnimationMode специально для этого драйвера.</param>
    </member>
    <member name="M:UnityEditor.AnimationMode.IsPropertyAnimated(UnityEngine.Object,System.String)">
      <summary>
        <para>Проверяет, находится ли указанное свойство в режиме анимации и анимируется ли оно.</para>
      </summary>
      <param name="target">Объект, чтобы определить, содержит ли он анимацию.</param>
      <param name="propertyPath">Имя анимации для поиска.</param>
      <returns>
        <para>Найден ли поиск свойства или нет.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AnimationMode.SampleAnimationClip(UnityEngine.GameObject,UnityEngine.AnimationClip,System.Single)">
      <summary>
        <para>Демонстрирует AnimationClip для GameObject, а также записывает измененные свойства в режиме анимации.</para>
      </summary>
      <param name="gameObject">Корневой GameObject для анимации.</param>
      <param name="clip">Образец AnimationClip.</param>
      <param name="time">Время выборки.</param>
      <returns>
        <para>Возвращает true, когда редактор находится в режиме анимации. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AnimationMode.SamplePlayableGraph">
      <summary>
        <para>Выполняет выборку указанного выходного индекса PlayableGraph, а также записывает измененные свойства в режиме анимации.</para>
      </summary>
      <param name="graph">PlayableGraph для выборки.</param>
      <param name="index">Выходной индекс для выборки в Playable Graph.</param>
      <param name="time">Время выборки.</param>
    </member>
    <member name="M:UnityEditor.AnimationMode.StartAnimationMode">
      <summary>
        <para>Запускает режим анимации.</para>
      </summary>
      <param name="driver">Укажите объект AnimationModeDriver, чтобы привязать AnimationMode к драйверу.</param>
    </member>
    <member name="M:UnityEditor.AnimationMode.StartAnimationMode(UnityEditor.AnimationModeDriver)">
      <summary>
        <para>Запускает режим анимации.</para>
      </summary>
      <param name="driver">Укажите объект AnimationModeDriver, чтобы привязать AnimationMode к драйверу.</param>
    </member>
    <member name="M:UnityEditor.AnimationMode.StopAnimationMode">
      <summary>
        <para>Останавливает режим анимации и возвращает все свойства, которые были анимированы в режиме анимации.</para>
      </summary>
      <param name="driver">Должен быть указан объект AnimationModeDriver, если он был указан при запуске режима анимации (StartAnimationMode.)</param>
    </member>
    <member name="M:UnityEditor.AnimationMode.StopAnimationMode(UnityEditor.AnimationModeDriver)">
      <summary>
        <para>Останавливает режим анимации и возвращает все свойства, которые были анимированы в режиме анимации.</para>
      </summary>
      <param name="driver">Должен быть указан объект AnimationModeDriver, если он был указан при запуске режима анимации (StartAnimationMode.)</param>
    </member>
    <member name="T:UnityEditor.AnimationModeDriver">
      <summary>
        <para>AnimationMode использует AnimationModeDriver для идентификации драйвера анимации.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Animations.AnimatorCondition">
      <summary>
        <para>Условие, используемое для определения необходимости перехода.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorCondition.mode">
      <summary>
        <para>Режим условия.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorCondition.parameter">
      <summary>
        <para>Имя параметра, используемого в условии.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorCondition.threshold">
      <summary>
        <para>Пороговое значение AnimatorParameter для истинности условия.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Animations.AnimatorConditionMode">
      <summary>
        <para>Режим условия.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.AnimatorConditionMode.Equals">
      <summary>
        <para>Условие истинно, когда значение параметра равно порогу.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.AnimatorConditionMode.Greater">
      <summary>
        <para>Условие истинно, когда значение параметра превышает пороговое значение.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.AnimatorConditionMode.If">
      <summary>
        <para>Условие истинно, когда значение параметра истинно.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.AnimatorConditionMode.IfNot">
      <summary>
        <para>Условие истинно, когда значение параметра ложно.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.AnimatorConditionMode.Less">
      <summary>
        <para>Условие истинно, когда значение параметра меньше порогового значения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.AnimatorConditionMode.NotEqual">
      <summary>
        <para>Условие истинно, если значение параметра не равно порогу.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Animations.AnimatorController">
      <summary>
        <para>Контроллер аниматора управляет анимацией через слои с помощью конечных автоматов, управляемых параметрами.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorController.layers">
      <summary>
        <para>Слои в контроллере.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorController.parameters">
      <summary>
        <para>Параметры используются для связи между сценарием и контроллером. Например, они используются для управления переходами и деревьями смешения.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.AddEffectiveStateMachineBehaviour(UnityEditor.Animations.AnimatorState,System.Int32)">
      <summary>
        <para>Добавляет класс поведения конечного автомата определенного типа в AnimatorState для слоя layerIndex.
Этот метод следует использовать, когда вы имеете дело с синхронизированным слоем и хотите добавить поведение конечного автомата на синхронизированный слой.
Обратите внимание, что нет соответствующего метода «Удалить». Чтобы удалить поведение конечного автомата, используйте Object.Destroy.</para>
      </summary>
      <param name="state">AnimatorState, к которому добавляется Behavior.</param>
      <param name="layerIndex">Индекс слоя.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.AddEffectiveStateMachineBehaviour(System.Type,UnityEditor.Animations.AnimatorState,System.Int32)">
      <summary>
        <para>Неуниверсальная версия этого метода.</para>
      </summary>
      <param name="stateMachineBehaviourType">Добавляемый тип поведения конечного автомата.</param>
      <param name="state">AnimatorState, к которому добавляется Behavior.</param>
      <param name="layerIndex">Индекс слоя.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.AddLayer(System.String)">
      <summary>
        <para>Вспомогательная функция для добавления слоя в контроллер.</para>
      </summary>
      <param name="name">Имя слоя.</param>
      <param name="layer">Добавляемый слой.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.AddLayer(UnityEditor.Animations.AnimatorControllerLayer)">
      <summary>
        <para>Вспомогательная функция для добавления слоя в контроллер.</para>
      </summary>
      <param name="name">Имя слоя.</param>
      <param name="layer">Добавляемый слой.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.AddMotion(UnityEngine.Motion)">
      <summary>
        <para>Вспомогательная функция, которая создает новое состояние с движением в нем.</para>
      </summary>
      <param name="motion">Движение, которое будет в AnimatorState.</param>
      <param name="layerIndex">Слой, на который будет добавлено движение.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.AddMotion(UnityEngine.Motion,System.Int32)">
      <summary>
        <para>Вспомогательная функция, которая создает новое состояние с движением в нем.</para>
      </summary>
      <param name="motion">Движение, которое будет в AnimatorState.</param>
      <param name="layerIndex">Слой, на который будет добавлено движение.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.AddParameter(System.String,UnityEngine.AnimatorControllerParameterType)">
      <summary>
        <para>Вспомогательная функция для добавления параметра в контроллер.</para>
      </summary>
      <param name="name">Имя параметра.</param>
      <param name="type">Тип параметра.</param>
      <param name="parameter">Добавляемый параметр.</param>
      <param name="paramater">
      </param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.AddParameter(UnityEngine.AnimatorControllerParameter)">
      <summary>
        <para>Вспомогательная функция для добавления параметра в контроллер.</para>
      </summary>
      <param name="name">Имя параметра.</param>
      <param name="type">Тип параметра.</param>
      <param name="parameter">Добавляемый параметр.</param>
      <param name="paramater">
      </param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.CreateAnimatorControllerAtPath(System.String)">
      <summary>
        <para>Создает AnimatorController по указанному пути.</para>
      </summary>
      <param name="path">Путь, по которому будет создан ресурс AnimatorController.</param>
      <returns>
        <para>Созданный AnimationController или null, если произошла ошибка.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.CreateAnimatorControllerAtPathWithClip(System.String,UnityEngine.AnimationClip)">
      <summary>
        <para>Создает AnimatorController по указанному пути и автоматически создает AnimatorLayer с AnimatorStateMachine, который добавит состояние с AnimationClip в нем.</para>
      </summary>
      <param name="path">Путь, по которому будет создан AnimatorController.</param>
      <param name="clip">Клип по умолчанию, который будет воспроизводиться AnimatorController.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.CreateBlendTreeInController(System.String,UnityEditor.Animations.BlendTree&amp;)">
      <summary>
        <para>Создает BlendTree в новом AnimatorState.</para>
      </summary>
      <param name="name">Имя BlendTree.</param>
      <param name="tree">Созданное дерево BlendTree.</param>
      <param name="layerIndex">Индекс, в котором будет создан BlendTree.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.CreateBlendTreeInController(System.String,UnityEditor.Animations.BlendTree&amp;,System.Int32)">
      <summary>
        <para>Создает BlendTree в новом AnimatorState.</para>
      </summary>
      <param name="name">Имя BlendTree.</param>
      <param name="tree">Созданное дерево BlendTree.</param>
      <param name="layerIndex">Индекс, в котором будет создан BlendTree.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.CreateStateMachineBehaviour(UnityEditor.MonoScript)">
      <summary>
        <para>Эта функция создаст экземпляр StateMachineBehaviour на основе класса, определенного в этом скрипте.</para>
      </summary>
      <param name="script">Класс MonoScript для создания экземпляра.</param>
      <returns>
        <para>Возвращает идентификатор экземпляра созданного объекта, возвращает 0, если что-то не так.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.#ctor">
      <summary>
        <para>Конструктор.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.FindStateMachineBehaviourContext(UnityEngine.StateMachineBehaviour)">
      <summary>
        <para>Используйте эту функцию, чтобы получить владельца этого поведения.</para>
      </summary>
      <param name="behaviour">Поведение конечного автомата, для которого нужно получить контекст.</param>
      <returns>
        <para>Возвращает контекст редакции State Machine Behavior.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.GetBehaviours">
      <summary>
        <para>Возвращает все StateMachineBehaviour, которые соответствуют типу T или являются производными от T.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.GetStateEffectiveBehaviours(UnityEditor.Animations.AnimatorState,System.Int32)">
      <summary>
        <para>Получает список эффективных действий конечного автомата для AnimatorState. Поведения хранятся либо в AnimatorStateMachine, либо в ovverrides AnimatorLayer. Используйте эту функцию, чтобы получить список поведения, который эффективно используется.</para>
      </summary>
      <param name="state">AnimatorState, для которого мы хотим получить список Behavior.</param>
      <param name="layerIndex">Запрошенный слой.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.GetStateEffectiveMotion(UnityEditor.Animations.AnimatorState)">
      <summary>
        <para>Получает эффективное движение для AnimatorState. Движение сохраняется либо в AnimatorStateMachine, либо в ovverrides AnimatorLayer. Используйте эту функцию, чтобы получить движение, которое эффективно используется.</para>
      </summary>
      <param name="state">AnimatorState, для которого мы хотим движение.</param>
      <param name="layerIndex">Запрошенный слой.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.GetStateEffectiveMotion(UnityEditor.Animations.AnimatorState,System.Int32)">
      <summary>
        <para>Получает эффективное движение для AnimatorState. Движение сохраняется либо в AnimatorStateMachine, либо в ovverrides AnimatorLayer. Используйте эту функцию, чтобы получить движение, которое эффективно используется.</para>
      </summary>
      <param name="state">AnimatorState, для которого мы хотим движение.</param>
      <param name="layerIndex">Запрошенный слой.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.MakeUniqueLayerName(System.String)">
      <summary>
        <para>Создает уникальное имя для слоев.</para>
      </summary>
      <param name="name">Желаемое имя AnimatorLayer.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.MakeUniqueParameterName(System.String)">
      <summary>
        <para>Создает уникальное имя для параметра.</para>
      </summary>
      <param name="name">Желаемое имя AnimatorParameter.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.RemoveLayer(System.Int32)">
      <summary>
        <para>Вспомогательная функция для удаления слоя из контроллера.</para>
      </summary>
      <param name="index">Индекс AnimatorLayer.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.RemoveParameter(System.Int32)">
      <summary>
        <para>Вспомогательная функция для удаления параметра из контроллера.</para>
      </summary>
      <param name="index">Индекс AnimatorParameter.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.SetStateEffectiveBehaviours">
      <summary>
        <para>Задает эффективный список поведения конечного автомата для AnimatorState. Список Behavior хранится либо в AnimatorStateMachine, либо в ovverrides AnimatorLayer. Используйте эту функцию, чтобы установить список поведения, который будет эффективно использоваться.</para>
      </summary>
      <param name="state">AnimatorState, которому мы хотим задать список поведения.</param>
      <param name="layerIndex">Слой для установки списка поведения.</param>
      <param name="behaviours">Список поведения, который будет установлен.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.SetStateEffectiveMotion(UnityEditor.Animations.AnimatorState,UnityEngine.Motion)">
      <summary>
        <para>Задает эффективное движение для AnimatorState. Движение сохраняется либо в AnimatorStateMachine, либо в ovverrides AnimatorLayer. Используйте эту функцию, чтобы установить движение, которое эффективно используется.</para>
      </summary>
      <param name="state">AnimatorState, которому мы хотим задать движение.</param>
      <param name="motion">Движение, которое будет установлено.</param>
      <param name="layerIndex">Слой для установки движения.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.SetStateEffectiveMotion(UnityEditor.Animations.AnimatorState,UnityEngine.Motion,System.Int32)">
      <summary>
        <para>Задает эффективное движение для AnimatorState. Движение сохраняется либо в AnimatorStateMachine, либо в ovverrides AnimatorLayer. Используйте эту функцию, чтобы установить движение, которое эффективно используется.</para>
      </summary>
      <param name="state">AnimatorState, которому мы хотим задать движение.</param>
      <param name="motion">Движение, которое будет установлено.</param>
      <param name="layerIndex">Слой для установки движения.</param>
    </member>
    <member name="T:UnityEditor.Animations.AnimatorControllerLayer">
      <summary>
        <para>Уровень анимации содержит конечный автомат, управляющий анимацией модели или ее части.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorControllerLayer.avatarMask">
      <summary>
        <para>AvatarMask, который используется для маскирования анимации на данном слое.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorControllerLayer.blendingMode">
      <summary>
        <para>Режим наложения, используемый слоем. Для первого слоя не учитывается.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorControllerLayer.defaultWeight">
      <summary>
        <para>Вес смешивания по умолчанию, который имеют слои. Для первого слоя не учитывается.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorControllerLayer.iKPass">
      <summary>
        <para>Когда слой активен, он будет иметь проход IK при оценке. Это вызовет обратный вызов OnAnimatorIK.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorControllerLayer.name">
      <summary>
        <para>Имя слоя.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorControllerLayer.stateMachine">
      <summary>
        <para>Конечный автомат для слоя.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorControllerLayer.syncedLayerAffectsTiming">
      <summary>
        <para>Активный слой будет управлять продолжительностью синхронизированного слоя.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorControllerLayer.syncedLayerIndex">
      <summary>
        <para>Задает индекс синхронизированного слоя.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorControllerLayer.GetOverrideBehaviours(UnityEditor.Animations.AnimatorState)">
      <summary>
        <para>Получает список поведения переопределения для состояния на данном слое.</para>
      </summary>
      <param name="state">Состояние, которое мы хотим получить в списке поведения.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorControllerLayer.GetOverrideMotion(UnityEditor.Animations.AnimatorState)">
      <summary>
        <para>Получает переопределяющее движение для состояния на данном слое.</para>
      </summary>
      <param name="state">Состояние, в котором мы хотим получить движение.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorControllerLayer.SetOverrideBehaviours">
      <summary>
        <para>Задает список поведения переопределения для состояния на данном слое.</para>
      </summary>
      <param name="state">Состояние, которое мы хотим установить в списке поведения.</param>
      <param name="behaviours">Список поведения, который будет установлен.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorControllerLayer.SetOverrideMotion(UnityEditor.Animations.AnimatorState,UnityEngine.Motion)">
      <summary>
        <para>Устанавливает переопределяющее движение для состояния на данном слое.</para>
      </summary>
      <param name="state">Состояние, в котором мы хотим установить движение.</param>
      <param name="motion">Движение, которое будет задано.</param>
    </member>
    <member name="T:UnityEditor.Animations.AnimatorLayerBlendingMode">
      <summary>
        <para>Указывает, как слой смешивается с предыдущими слоями.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.AnimatorLayerBlendingMode.Additive">
      <summary>
        <para>Анимации добавляются к предыдущим слоям.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.AnimatorLayerBlendingMode.Override">
      <summary>
        <para>Анимации переопределяют предыдущие слои.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Animations.AnimatorState">
      <summary>
        <para>Состояния являются основными строительными блоками конечной машины. Каждое состояние содержит движение (AnimationClip или BlendTree), которое будет воспроизводиться, пока персонаж находится в этом состоянии. Когда событие в игре вызывает переход состояния, персонаж остается в новом состоянии, чья анимационная последовательность затем вступает во владение.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.behaviours">
      <summary>
        <para>Список поведения, назначенный этому состоянию.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.cycleOffset">
      <summary>
        <para>Смещение, с которого начинается цикл анимации. Полезно для синхронизации зацикленных анимаций.
Единицы — нормализованное время.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.cycleOffsetParameter">
      <summary>
        <para>Параметр контроллера аниматора, который управляет значением смещения цикла.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.cycleOffsetParameterActive">
      <summary>
        <para>Определите, управляется ли значение смещения цикла параметром контроллера Animator или значением, установленным в редакторе.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.iKOnFeet">
      <summary>
        <para>Следует ли уважать Foot IK для этого состояния.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.mirror">
      <summary>
        <para>Должно ли состояние быть зеркальным.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.mirrorParameter">
      <summary>
        <para>Параметр контроллера аниматора, управляющий зеркальным значением.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.mirrorParameterActive">
      <summary>
        <para>Определите, управляется ли зеркальное значение параметром контроллера Animator или значением, установленным в редакторе.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.motion">
      <summary>
        <para>Движение, назначенное этому состоянию.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.nameHash">
      <summary>
        <para>Хэшированное имя состояния.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.speed">
      <summary>
        <para>Скорость движения по умолчанию.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.speedParameter">
      <summary>
        <para>Параметр контроллера аниматора, управляющий значением скорости.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.speedParameterActive">
      <summary>
        <para>Определите, управляется ли значение скорости параметром контроллера Animator или значением, установленным в редакторе.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.tag">
      <summary>
        <para>Тег может использоваться для идентификации состояния.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.timeParameter">
      <summary>
        <para>Если timeParameterActive имеет значение true, значение этого параметра будет использоваться вместо нормализованного времени.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.timeParameterActive">
      <summary>
        <para>Если true, использовать значение данного параметра как нормализованное время.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.transitions">
      <summary>
        <para>Переходы, которые выходят из состояния.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.writeDefaultValues">
      <summary>
        <para>Независимо от того, записывает ли AnimatorStates обратно значения по умолчанию для свойств, которые не анимируются его движением.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorState.AddExitTransition">
      <summary>
        <para>Вспомогательная функция для добавления исходящего перехода к выходу родительского конечного автомата состояния.</para>
      </summary>
      <param name="defaultExitTime">Если true, время выхода будет эквивалентно 0,25 секунды.</param>
      <returns>
        <para>Добавленный Animations.AnimatorStateTransition.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorState.AddExitTransition(System.Boolean)">
      <summary>
        <para>Вспомогательная функция для добавления исходящего перехода к выходу родительского конечного автомата состояния.</para>
      </summary>
      <param name="defaultExitTime">Если true, время выхода будет эквивалентно 0,25 секунды.</param>
      <returns>
        <para>Добавленный Animations.AnimatorStateTransition.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorState.AddStateMachineBehaviour">
      <summary>
        <para>Добавляет класс поведения конечного автомата типа T в AnimatorState.
Обратите внимание, что нет соответствующего метода «Удалить». Чтобы удалить поведение конечного автомата, используйте Object.Destroy.</para>
      </summary>
      <returns>
        <para>Добавляемый тип поведения конечного автомата.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorState.AddStateMachineBehaviour(System.Type)">
      <summary>
        <para>Неуниверсальная версия этого метода.</para>
      </summary>
      <param name="stateMachineBehaviourType">
      </param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorState.AddTransition(UnityEditor.Animations.AnimatorState)">
      <summary>
        <para>Вспомогательная функция для добавления исходящего перехода в состояние назначения.</para>
      </summary>
      <param name="defaultExitTime">Если true, время выхода будет эквивалентно 0,25 секунды.</param>
      <param name="destinationState">Состояние назначения.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorState.AddTransition(UnityEditor.Animations.AnimatorState,System.Boolean)">
      <summary>
        <para>Вспомогательная функция для добавления исходящего перехода в состояние назначения.</para>
      </summary>
      <param name="defaultExitTime">Если true, время выхода будет эквивалентно 0,25 секунды.</param>
      <param name="destinationState">Состояние назначения.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorState.AddTransition(UnityEditor.Animations.AnimatorStateMachine)">
      <summary>
        <para>Вспомогательная функция для добавления исходящего перехода к конечному автомату назначения.</para>
      </summary>
      <param name="defaultExitTime">Если true, время выхода будет эквивалентно 0,25 секунды.</param>
      <param name="destinationStateMachine">Конечный автомат назначения.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorState.AddTransition(UnityEditor.Animations.AnimatorStateMachine,System.Boolean)">
      <summary>
        <para>Вспомогательная функция для добавления исходящего перехода к конечному автомату назначения.</para>
      </summary>
      <param name="defaultExitTime">Если true, время выхода будет эквивалентно 0,25 секунды.</param>
      <param name="destinationStateMachine">Конечный автомат назначения.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorState.AddTransition(UnityEditor.Animations.AnimatorStateTransition)">
      <summary>
        <para>Вспомогательная функция для добавления исходящего перехода.</para>
      </summary>
      <param name="transition">Переход для добавления.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorState.RemoveTransition(UnityEditor.Animations.AnimatorStateTransition)">
      <summary>
        <para>Вспомогательная функция для удаления перехода из состояния.</para>
      </summary>
      <param name="transition">Переход для удаления.</param>
    </member>
    <member name="T:UnityEditor.Animations.AnimatorStateMachine">
      <summary>
        <para>Граф, управляющий взаимодействием состояний. Каждое состояние ссылается на движение.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateMachine.anyStatePosition">
      <summary>
        <para>Положение узла AnyState.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateMachine.anyStateTransitions">
      <summary>
        <para>Список переходов AnyState.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateMachine.behaviours">
      <summary>
        <para>Список поведения, назначенный этому конечному автомату.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateMachine.defaultState">
      <summary>
        <para>Состояние, в котором будет находиться конечный автомат при запуске.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateMachine.entryPosition">
      <summary>
        <para>Позиция узла входа.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateMachine.entryTransitions">
      <summary>
        <para>Список входных переходов в автомате.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateMachine.exitPosition">
      <summary>
        <para>Положение выходного узла.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateMachine.parentStateMachinePosition">
      <summary>
        <para>Позиция узла родительского конечного автомата. Действителен только в иерархическом автомате состояний.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateMachine.stateMachines">
      <summary>
        <para>Список подконечных автоматов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateMachine.states">
      <summary>
        <para>Список состояний.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.AddAnyStateTransition(UnityEditor.Animations.AnimatorState)">
      <summary>
        <para>Вспомогательная функция для добавления перехода AnyState в указанное состояние или конечный автомат.</para>
      </summary>
      <param name="destinationState">Состояние назначения.</param>
      <param name="destinationStateMachine">Конечный автомат назначения.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.AddAnyStateTransition(UnityEditor.Animations.AnimatorStateMachine)">
      <summary>
        <para>Вспомогательная функция для добавления перехода AnyState в указанное состояние или конечный автомат.</para>
      </summary>
      <param name="destinationState">Состояние назначения.</param>
      <param name="destinationStateMachine">Конечный автомат назначения.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.AddEntryTransition(UnityEditor.Animations.AnimatorState)">
      <summary>
        <para>Вспомогательная функция для добавления входящего перехода к выходу его родительского конечного автомата.</para>
      </summary>
      <param name="destinationState">Состояние назначения Animations.AnimatorState.</param>
      <param name="destinationStateMachine">Конечный автомат Animations.AnimatorStateMachine.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.AddEntryTransition(UnityEditor.Animations.AnimatorStateMachine)">
      <summary>
        <para>Вспомогательная функция для добавления входящего перехода к выходу его родительского конечного автомата.</para>
      </summary>
      <param name="destinationState">Состояние назначения Animations.AnimatorState.</param>
      <param name="destinationStateMachine">Конечный автомат Animations.AnimatorStateMachine.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.AddState(System.String)">
      <summary>
        <para>Вспомогательная функция для добавления состояния в конечный автомат.</para>
      </summary>
      <param name="name">Имя нового состояния.</param>
      <param name="position">Позиция узла состояния.</param>
      <returns>
        <para>AnimatorState, созданный для этого состояния.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.AddState(System.String,UnityEngine.Vector3)">
      <summary>
        <para>Вспомогательная функция для добавления состояния в конечный автомат.</para>
      </summary>
      <param name="name">Имя нового состояния.</param>
      <param name="position">Позиция узла состояния.</param>
      <returns>
        <para>AnimatorState, созданный для этого состояния.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.AddState(UnityEditor.Animations.AnimatorState,UnityEngine.Vector3)">
      <summary>
        <para>Вспомогательная функция для добавления состояния в конечный автомат.</para>
      </summary>
      <param name="state">Состояние для добавления.</param>
      <param name="position">Позиция узла состояния.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.AddStateMachine(System.String)">
      <summary>
        <para>Вспомогательная функция для добавления конечного автомата в конечный автомат.</para>
      </summary>
      <param name="name">Имя нового конечного автомата.</param>
      <param name="position">Позиция узла конечного автомата.</param>
      <returns>
        <para>Недавно созданный конечный автомат Animations.AnimatorStateMachine.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.AddStateMachine(System.String,UnityEngine.Vector3)">
      <summary>
        <para>Вспомогательная функция для добавления конечного автомата в конечный автомат.</para>
      </summary>
      <param name="name">Имя нового конечного автомата.</param>
      <param name="position">Позиция узла конечного автомата.</param>
      <returns>
        <para>Недавно созданный конечный автомат Animations.AnimatorStateMachine.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.AddStateMachine(UnityEditor.Animations.AnimatorStateMachine,UnityEngine.Vector3)">
      <summary>
        <para>Вспомогательная функция для добавления конечного автомата в конечный автомат.</para>
      </summary>
      <param name="stateMachine">Конечный автомат для добавления.</param>
      <param name="position">Позиция узла конечного автомата.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.AddStateMachineBehaviour">
      <summary>
        <para>Добавляет класс поведения конечного автомата типа T в AnimatorStateMachine.
Обратите внимание, что нет соответствующего метода «Удалить». Чтобы удалить поведение конечного автомата, используйте Object.Destroy.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.AddStateMachineBehaviour(System.Type)">
      <summary>
        <para>Неуниверсальная версия этого метода.</para>
      </summary>
      <param name="stateMachineBehaviourType">Тип добавляемого класса поведения конечного автомата.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.AddStateMachineExitTransition(UnityEditor.Animations.AnimatorStateMachine)">
      <summary>
        <para>Вспомогательная функция для добавления исходящего перехода от исходного конечного автомата к выходу его родительского конечного автомата.</para>
      </summary>
      <param name="sourceStateMachine">Исходный конечный автомат.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.AddStateMachineTransition(UnityEditor.Animations.AnimatorStateMachine)">
      <summary>
        <para>Вспомогательная функция для добавления исходящего перехода от исходного конечного автомата к целевому.</para>
      </summary>
      <param name="sourceStateMachine">Исходный конечный автомат.</param>
      <param name="destinationStateMachine">Конечный автомат назначения.</param>
      <param name="destinationState">Состояние назначения.</param>
      <returns>
        <para>Созданный переход Animations.AnimatorTransition.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.AddStateMachineTransition(UnityEditor.Animations.AnimatorStateMachine,UnityEditor.Animations.AnimatorStateMachine)">
      <summary>
        <para>Вспомогательная функция для добавления исходящего перехода от исходного конечного автомата к целевому.</para>
      </summary>
      <param name="sourceStateMachine">Исходный конечный автомат.</param>
      <param name="destinationStateMachine">Конечный автомат назначения.</param>
      <param name="destinationState">Состояние назначения.</param>
      <returns>
        <para>Созданный переход Animations.AnimatorTransition.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.AddStateMachineTransition(UnityEditor.Animations.AnimatorStateMachine,UnityEditor.Animations.AnimatorState)">
      <summary>
        <para>Вспомогательная функция для добавления исходящего перехода от исходного конечного автомата к целевому.</para>
      </summary>
      <param name="sourceStateMachine">Исходный конечный автомат.</param>
      <param name="destinationStateMachine">Конечный автомат назначения.</param>
      <param name="destinationState">Состояние назначения.</param>
      <returns>
        <para>Созданный переход Animations.AnimatorTransition.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.GetStateMachineTransitions(UnityEditor.Animations.AnimatorStateMachine)">
      <summary>
        <para>Получает список всех исходящих переходов конечного автомата из заданного конечного автомата.</para>
      </summary>
      <param name="sourceStateMachine">Исходный конечный автомат.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.MakeUniqueStateMachineName(System.String)">
      <summary>
        <para>Создает уникальное имя конечного автомата в контексте родительского конечного автомата.</para>
      </summary>
      <param name="name">Желаемое имя конечного автомата.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.MakeUniqueStateName(System.String)">
      <summary>
        <para>Создает уникальное имя состояния в контексте родительского конечного автомата.</para>
      </summary>
      <param name="name">Желаемое имя для состояния.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.RemoveAnyStateTransition(UnityEditor.Animations.AnimatorStateTransition)">
      <summary>
        <para>Вспомогательная функция для удаления перехода AnyState из конечного автомата.</para>
      </summary>
      <param name="transition">Переход AnyStat для удаления.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.RemoveEntryTransition(UnityEditor.Animations.AnimatorTransition)">
      <summary>
        <para>Вспомогательная функция для удаления входного перехода из конечного автомата.</para>
      </summary>
      <param name="transition">Переход для удаления.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.RemoveState(UnityEditor.Animations.AnimatorState)">
      <summary>
        <para>Вспомогательная функция для удаления состояния из конечного автомата.</para>
      </summary>
      <param name="state">Состояние для удаления.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.RemoveStateMachine(UnityEditor.Animations.AnimatorStateMachine)">
      <summary>
        <para>Вспомогательная функция для удаления конечного автомата из его родительского конечного автомата.</para>
      </summary>
      <param name="stateMachine">Конечный автомат для удаления.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.RemoveStateMachineTransition(UnityEditor.Animations.AnimatorStateMachine,UnityEditor.Animations.AnimatorTransition)">
      <summary>
        <para>Вспомогательная функция для удаления исходящего перехода из исходного конечного автомата.</para>
      </summary>
      <param name="transition">Переход для удаления.</param>
      <param name="sourceStateMachine">Исходный конечный автомат.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.SetStateMachineTransitions(UnityEditor.Animations.AnimatorStateMachine,UnityEditor.Animations.AnimatorTransition[])">
      <summary>
        <para>Устанавливает список всех исходящих переходов конечного автомата из данного конечного автомата.</para>
      </summary>
      <param name="stateMachine">Исходный конечный автомат.</param>
      <param name="transitions">Исходящие переходы.</param>
      <param name="sourceStateMachine">
      </param>
    </member>
    <member name="T:UnityEditor.Animations.AnimatorStateTransition">
      <summary>
        <para>Переходы определяют, когда и как конечный автомат переключается из одного состояния в другое. AnimatorStateTransition всегда исходит из состояния Animator (или AnyState) и имеет временные параметры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateTransition.canTransitionToSelf">
      <summary>
        <para>Установите значение true, чтобы разрешить или запретить переход к себе во время перехода AnyState.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateTransition.duration">
      <summary>
        <para>Продолжительность перехода.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateTransition.exitTime">
      <summary>
        <para>Если AnimatorStateTransition.hasExitTime имеет значение true, exitTime представляет точное время, когда переход может вступить в силу.

Это представлено в нормализованном времени, поэтому, например, время выхода 0,75 означает, что в первом кадре, где воспроизведено 75% анимации, условие времени выхода будет истинным. В следующем кадре условие будет ложным.

Для зацикленных анимаций переходы со временем выхода меньше 1 будут оцениваться в каждом цикле, поэтому вы можете использовать это, чтобы синхронизировать переход с правильным временем в анимации, в каждом цикле.

Переходы со временем выхода больше единицы будут оцениваться только один раз, поэтому их можно использовать для выхода в определенное время после фиксированного количества циклов. Например, переход со временем выхода 3,5 будет оцениваться один раз после трех с половиной циклов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateTransition.hasExitTime">
      <summary>
        <para>Когда переход активен, он будет иметь условие времени выхода.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateTransition.hasFixedDuration">
      <summary>
        <para>Определяет, указывается ли продолжительность перехода в виде фиксированной длительности в секундах или в виде нормализованного времени.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateTransition.interruptionSource">
      <summary>
        <para>Какие переходы AnimatorState могут прерывать переход.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateTransition.offset">
      <summary>
        <para>Время начала состояния назначения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateTransition.orderedInterruption">
      <summary>
        <para>Переход может быть прерван переходом с более высоким приоритетом.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateTransition.#ctor">
      <summary>
        <para>Создает новый переход состояния аниматора.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Animations.AnimatorTransition">
      <summary>
        <para>Переходы определяют, когда и как конечный автомат переключается из одного состояния в другое. AnimatorTransition всегда происходят из StateMachine или записи StateMachine. Они не определяют параметры синхронизации.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorTransition.#ctor">
      <summary>
        <para>Создает новый переход аниматора.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Animations.AnimatorTransitionBase">
      <summary>
        <para>Базовый класс для переходов аниматора. Переходы определяют, когда и как конечный автомат переключается из одного состояния в другое.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorTransitionBase.conditions">
      <summary>
        <para>Условия Animations.AnimatorCondition, которые должны быть выполнены для выполнения перехода.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorTransitionBase.destinationState">
      <summary>
        <para>Состояние назначения перехода.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorTransitionBase.destinationStateMachine">
      <summary>
        <para>Конечный автомат перехода.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorTransitionBase.isExit">
      <summary>
        <para>Является ли пункт назначения перехода выходом из текущего конечного автомата.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorTransitionBase.mute">
      <summary>
        <para>Заглушает переход. Переход никогда не произойдет.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorTransitionBase.solo">
      <summary>
        <para>Отключает все остальные переходы в исходном состоянии.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorTransitionBase.AddCondition(UnityEditor.Animations.AnimatorConditionMode,System.Single,System.String)">
      <summary>
        <para>Вспомогательная функция для добавления условия к переходу.</para>
      </summary>
      <param name="mode">Режим Animations.AnimatorCondition условия.</param>
      <param name="threshold">Пороговое значение условия.</param>
      <param name="parameter">Имя параметра.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorTransitionBase.RemoveCondition(UnityEditor.Animations.AnimatorCondition)">
      <summary>
        <para>Вспомогательная функция для удаления условия из перехода.</para>
      </summary>
      <param name="condition">Условие для удаления.</param>
    </member>
    <member name="T:UnityEditor.Animations.BlendTree">
      <summary>
        <para>Деревья смешивания используются для непрерывного смешивания анимации между их дочерними элементами. Они могут быть одномерными или двухмерными.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.BlendTree.blendParameter">
      <summary>
        <para>Параметр, который используется для вычисления веса смешивания дочерних элементов в 1D-деревах смешивания или по оси X 2D-дерева смешивания.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.BlendTree.blendParameterY">
      <summary>
        <para>Параметр, используемый для вычисления веса смешивания дочерних элементов по оси Y 2D-дерева смешивания.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.BlendTree.blendType">
      <summary>
        <para>Тип смешивания может быть либо 1D, либо различными типами 2D.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.BlendTree.children">
      <summary>
        <para>Копия списка дочерних движений дерева наложения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.BlendTree.maxThreshold">
      <summary>
        <para>Устанавливает максимальный порог, который будет использоваться ChildMotion. Используется только в том случае, если для useAutomaticThresholds установлено значение true.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.BlendTree.minThreshold">
      <summary>
        <para>Устанавливает минимальный порог, который будет использоваться ChildMotion. Используется только в том случае, если для useAutomaticThresholds установлено значение true.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.BlendTree.useAutomaticThresholds">
      <summary>
        <para>При активации дочерние пороги автоматически распределяются между 0 и 1.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Animations.BlendTree.AddChild(UnityEngine.Motion)">
      <summary>
        <para>Вспомогательная функция для добавления дочернего движения в деревья наложения.</para>
      </summary>
      <param name="motion">Движение, которое нужно добавить как дочернее.</param>
      <param name="position">Положение ребенка. При использовании 2D-деревьев смешивания.</param>
      <param name="threshold">Порог ребенка. При использовании одномерных деревьев перехода.</param>
    </member>
    <member name="M:UnityEditor.Animations.BlendTree.AddChild(UnityEngine.Motion,UnityEngine.Vector2)">
      <summary>
        <para>Вспомогательная функция для добавления дочернего движения в деревья наложения.</para>
      </summary>
      <param name="motion">Движение, которое нужно добавить как дочернее.</param>
      <param name="position">Положение ребенка. При использовании 2D-деревьев смешивания.</param>
      <param name="threshold">Порог ребенка. При использовании одномерных деревьев перехода.</param>
    </member>
    <member name="M:UnityEditor.Animations.BlendTree.AddChild(UnityEngine.Motion,System.Single)">
      <summary>
        <para>Вспомогательная функция для добавления дочернего движения в деревья наложения.</para>
      </summary>
      <param name="motion">Движение, которое нужно добавить как дочернее.</param>
      <param name="position">Положение ребенка. При использовании 2D-деревьев смешивания.</param>
      <param name="threshold">Порог ребенка. При использовании одномерных деревьев перехода.</param>
    </member>
    <member name="M:UnityEditor.Animations.BlendTree.CreateBlendTreeChild(System.Single)">
      <summary>
        <para>Вспомогательная функция для добавления дочернего дерева перехода к дереву перехода.</para>
      </summary>
      <param name="position">Положение ребенка. При использовании 2D-деревьев смешивания.</param>
      <param name="threshold">Порог ребенка. При использовании одномерных деревьев перехода.</param>
    </member>
    <member name="M:UnityEditor.Animations.BlendTree.CreateBlendTreeChild(UnityEngine.Vector2)">
      <summary>
        <para>Вспомогательная функция для добавления дочернего дерева перехода к дереву перехода.</para>
      </summary>
      <param name="position">Положение ребенка. При использовании 2D-деревьев смешивания.</param>
      <param name="threshold">Порог ребенка. При использовании одномерных деревьев перехода.</param>
    </member>
    <member name="M:UnityEditor.Animations.BlendTree.RemoveChild(System.Int32)">
      <summary>
        <para>Вспомогательная функция для удаления дочернего элемента дерева наложения.</para>
      </summary>
      <param name="index">Индекс удаляемого дерева наложения.</param>
    </member>
    <member name="T:UnityEditor.Animations.BlendTreeType">
      <summary>
        <para>Тип алгоритма смешивания, который использует дерево смешивания.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.BlendTreeType.Direct">
      <summary>
        <para>Прямой контроль веса смешивания для каждого узла.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.BlendTreeType.FreeformCartesian2D">
      <summary>
        <para>Лучше всего использовать, когда ваши движения не представляют разные направления.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.BlendTreeType.FreeformDirectional2D">
      <summary>
        <para>Этот тип наложения используется, когда ваши движения представляют разные направления, однако вы можете иметь несколько движений в одном и том же направлении, например, "идти вперед" и "бежать вперед".</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.BlendTreeType.Simple1D">
      <summary>
        <para>Базовое смешивание с использованием одного параметра.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.BlendTreeType.SimpleDirectional2D">
      <summary>
        <para>Лучше всего использовать, когда ваши движения представляют разные направления, например, «идти вперед», «идти назад», «идти влево» и «идти вправо» или «целиться вверх», «целиться вниз», «целиться влево» и « цельтесь вправо".</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Animations.ChildAnimatorState">
      <summary>
        <para>Структура, представляющая состояние в контексте его родительского конечного автомата.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.ChildAnimatorState.position">
      <summary>
        <para>Положение узла состояния в контексте его родительского конечного автомата.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.ChildAnimatorState.state">
      <summary>
        <para>Состояние.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Animations.ChildAnimatorStateMachine">
      <summary>
        <para>Структура, представляющая конечный автомат в контексте его родительского конечного автомата.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.ChildAnimatorStateMachine.position">
      <summary>
        <para>Положение узла конечного автомата в контексте его родительского конечного автомата.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.ChildAnimatorStateMachine.stateMachine">
      <summary>
        <para>Конечный автомат.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Animations.ChildMotion">
      <summary>
        <para>Структура, представляющая движение в контексте родительского дерева перехода.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.ChildMotion.cycleOffset">
      <summary>
        <para>Нормализованное смещение времени дочернего элемента.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.ChildMotion.directBlendParameter">
      <summary>
        <para>Параметр, используемый дочерним элементом при использовании в BlendTree типа BlendTreeType.Direct.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.ChildMotion.mirror">
      <summary>
        <para>Зеркало ребенка.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.ChildMotion.motion">
      <summary>
        <para>Само движение.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.ChildMotion.position">
      <summary>
        <para>Положение ребенка. Используется в 2D-деревьях перехода.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.ChildMotion.threshold">
      <summary>
        <para>Порог ребенка. Используется в одномерных деревьях перехода.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.ChildMotion.timeScale">
      <summary>
        <para>Относительная скорость ребенка.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Animations.CurveFilterOptions">
      <summary>
        <para>Параметры сокращения ключевых кадров для сжатия кривых анимации.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.CurveFilterOptions.floatError">
      <summary>
        <para>Величина, на которую кривая плавающей анимации может отклоняться от исходной кривой. Эта сумма выражается в процентах: положительное значение от 0 до 100.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.CurveFilterOptions.keyframeReduction">
      <summary>
        <para>Применять ли сокращение ключевых кадров.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.CurveFilterOptions.positionError">
      <summary>
        <para>Величина, на которую кривая анимации положения может отклоняться от исходной кривой. Эта сумма выражается в процентах: положительное значение от 0 до 100.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.CurveFilterOptions.rotationError">
      <summary>
        <para>Величина, на которую кривая анимации вращения может отклоняться от исходной кривой. Это количество выражается в градусах. Это должно быть положительное значение от 0 до 180.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.CurveFilterOptions.scaleError">
      <summary>
        <para>Величина, на которую кривая анимации масштаба может отклоняться от исходной кривой. Эта сумма выражается в процентах: положительное значение от 0 до 100.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.CurveFilterOptions.unrollRotation">
      <summary>
        <para>Применять ли развертывание вращения. Этот параметр включен по умолчанию.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Animations.GameObjectRecorder">
      <summary>
        <para>Записывает изменяющиеся свойства GameObject по мере запуска сцены и сохраняет информацию в AnimationClip.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.GameObjectRecorder.currentTime">
      <summary>
        <para>Возвращает текущее время записи. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.GameObjectRecorder.isRecording">
      <summary>
        <para>Возвращает true, когда рекордер записывает. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.GameObjectRecorder.root">
      <summary>
        <para>Корень GameObject анимированной иерархии. (Только чтение)</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Animations.GameObjectRecorder.Bind(UnityEditor.EditorCurveBinding)">
      <summary>
        <para>Связывает свойство GameObject, как определено EditorCurveBinding.</para>
      </summary>
      <param name="binding">Определение привязки.</param>
    </member>
    <member name="M:UnityEditor.Animations.GameObjectRecorder.BindAll(UnityEngine.GameObject,System.Boolean)">
      <summary>
        <para>Добавляет привязки для всех свойств цели, а также для всех дочерних свойств цели, если для рекурсивного значения задано значение true.</para>
      </summary>
      <param name="target">.root или любой из его дочерних элементов.</param>
      <param name="recursive">Также связывает все дочерние свойства цели, если установлено значение true.</param>
    </member>
    <member name="M:UnityEditor.Animations.GameObjectRecorder.BindComponent(UnityEngine.Component)">
      <summary>
        <para>Добавляет привязки для всех свойств компонента.</para>
      </summary>
      <param name="component">Компонент для привязки.</param>
    </member>
    <member name="M:UnityEditor.Animations.GameObjectRecorder.BindComponent(UnityEngine.GameObject,System.Type,System.Boolean)">
      <summary>
        <para>ЗАДАЧА.</para>
      </summary>
      <param name="target">
      </param>
      <param name="componentType">
      </param>
      <param name="recursive">
      </param>
    </member>
    <member name="M:UnityEditor.Animations.GameObjectRecorder.BindComponent(UnityEngine.GameObject,System.Boolean)">
      <summary>
        <para>ЗАДАЧА.</para>
      </summary>
      <param name="target">
      </param>
      <param name="componentType">
      </param>
      <param name="recursive">
      </param>
    </member>
    <member name="M:UnityEditor.Animations.GameObjectRecorder.BindComponentsOfType(UnityEngine.GameObject,System.Boolean)">
      <summary>
        <para>Добавляет привязки для всех свойств первого компонента типа T, найденного в целевом объекте, а также для всех дочерних элементов целевого объекта, если для параметра recursive установлено значение true.</para>
      </summary>
      <param name="target">.root или любой из его дочерних элементов.</param>
      <param name="recursive">Привязывает также дочерние свойства преобразования цели, если установлено значение true.</param>
      <param name="componentType">Тип компонента.</param>
    </member>
    <member name="M:UnityEditor.Animations.GameObjectRecorder.BindComponentsOfType(UnityEngine.GameObject,System.Type,System.Boolean)">
      <summary>
        <para>Добавляет привязки для всех свойств первого компонента типа T, найденного в целевом объекте, а также для всех дочерних элементов целевого объекта, если для параметра recursive установлено значение true.</para>
      </summary>
      <param name="target">.root или любой из его дочерних элементов.</param>
      <param name="recursive">Привязывает также дочерние свойства преобразования цели, если установлено значение true.</param>
      <param name="componentType">Тип компонента.</param>
    </member>
    <member name="M:UnityEditor.Animations.GameObjectRecorder.#ctor(UnityEngine.GameObject)">
      <summary>
        <para>Создайте новый GameObjectRecorder.</para>
      </summary>
      <param name="root">Корневой GameObject для анимированной иерархии.</param>
    </member>
    <member name="M:UnityEditor.Animations.GameObjectRecorder.#ctor">
      <summary>
        <para>ЗАДАЧА.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Animations.GameObjectRecorder.GetBindings">
      <summary>
        <para>Возвращает массив всех привязок, добавленных в рекордер.</para>
      </summary>
      <returns>
        <para>Массив привязок.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Animations.GameObjectRecorder.ResetRecording">
      <summary>
        <para>Сбросить запись.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Animations.GameObjectRecorder.SaveToClip(UnityEngine.AnimationClip)">
      <summary>
        <para>Сохраняет записанную анимацию в целевой клип.</para>
      </summary>
      <param name="clip">Целевой клип. Если в этом клипе есть кривые анимации, они будут удалены.</param>
      <param name="fps">Количество кадров в секунду (FPS) для клипа. Если значение не указано, по умолчанию этот метод использует 60 кадров в секунду.</param>
      <param name="filterOptions">Параметры фильтрации для обработки кривых анимации при сохранении в целевой клип. Если параметры не указаны, по умолчанию этот метод отфильтровывает ненужные ключи, применяя легкое сжатие 0,5 для positionError, rotateError, scaleError и floatError.</param>
    </member>
    <member name="M:UnityEditor.Animations.GameObjectRecorder.SaveToClip(UnityEngine.AnimationClip,System.Single)">
      <summary>
        <para>Сохраняет записанную анимацию в целевой клип.</para>
      </summary>
      <param name="clip">Целевой клип. Если в этом клипе есть кривые анимации, они будут удалены.</param>
      <param name="fps">Количество кадров в секунду (FPS) для клипа. Если значение не указано, по умолчанию этот метод использует 60 кадров в секунду.</param>
      <param name="filterOptions">Параметры фильтрации для обработки кривых анимации при сохранении в целевой клип. Если параметры не указаны, по умолчанию этот метод отфильтровывает ненужные ключи, применяя легкое сжатие 0,5 для positionError, rotateError, scaleError и floatError.</param>
    </member>
    <member name="M:UnityEditor.Animations.GameObjectRecorder.SaveToClip(UnityEngine.AnimationClip,System.Single,UnityEditor.Animations.CurveFilterOptions)">
      <summary>
        <para>Сохраняет записанную анимацию в целевой клип.</para>
      </summary>
      <param name="clip">Целевой клип. Если в этом клипе есть кривые анимации, они будут удалены.</param>
      <param name="fps">Количество кадров в секунду (FPS) для клипа. Если значение не указано, по умолчанию этот метод использует 60 кадров в секунду.</param>
      <param name="filterOptions">Параметры фильтрации для обработки кривых анимации при сохранении в целевой клип. Если параметры не указаны, по умолчанию этот метод отфильтровывает ненужные ключи, применяя легкое сжатие 0,5 для positionError, rotateError, scaleError и floatError.</param>
    </member>
    <member name="M:UnityEditor.Animations.GameObjectRecorder.TakeSnapshot(System.Single)">
      <summary>
        <para>Перематывает анимацию вперед на dt секунд, затем записывает значения добавленных привязок.</para>
      </summary>
      <param name="dt">Дельта времени.</param>
    </member>
    <member name="T:UnityEditor.Animations.StateMachineBehaviourContext">
      <summary>
        <para>Этот класс содержит всю информацию о владельце для этого поведения конечного автомата.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.StateMachineBehaviourContext.animatorController">
      <summary>
        <para>Animations.AnimatorController, которому принадлежит это поведение конечного автомата.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.StateMachineBehaviourContext.animatorObject">
      <summary>
        <para>Объект, которому принадлежит это поведение конечного автомата. Может быть Animations.AnimatorState или Animations.AnimatorStateMachine.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.StateMachineBehaviourContext.layerIndex">
      <summary>
        <para>Индекс слоя аниматора, которому принадлежит это поведение конечного автомата.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Animations.TransitionInterruptionSource">
      <summary>
        <para>Какие переходы AnimatorState могут прерывать переход.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.TransitionInterruptionSource.Destination">
      <summary>
        <para>Переход может быть прерван переходами в целевом AnimatorState.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.TransitionInterruptionSource.DestinationThenSource">
      <summary>
        <para>Переход может быть прерван переходами в исходном или целевом AnimatorState.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.TransitionInterruptionSource.None">
      <summary>
        <para>Переход не может быть прерван. Ранее известный как Atomic.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.TransitionInterruptionSource.Source">
      <summary>
        <para>Переход может быть прерван переходами в исходном AnimatorState.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.TransitionInterruptionSource.SourceThenDestination">
      <summary>
        <para>Переход может быть прерван переходами в исходном или целевом AnimatorState.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AnimationUtility">
      <summary>
        <para>Утилиты редактора для изменения анимационных клипов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AnimationUtility.onCurveWasModified">
      <summary>
        <para>Вызывается при изменении кривой анимации в анимационном клипе.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AnimationUtility.CalculateTransformPath(UnityEngine.Transform,UnityEngine.Transform)">
      <summary>
        <para>Извлекает путь от корневого преобразования к целевому преобразованию.</para>
      </summary>
      <param name="targetTransform">
      </param>
      <param name="root">
      </param>
      <returns>
        <para>Возвращает строку, представляющую путь в иерархии преобразования.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.AnimationUtility.CurveModifiedType">
      <summary>
        <para>Описывает тип модификации, вызвавшей срабатывание OnCurveWasModified.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetAllCurves(UnityEngine.AnimationClip)">
      <summary>
        <para>Извлекает все кривые из определенного анимационного клипа.</para>
      </summary>
      <param name="clip">
      </param>
      <param name="includeCurveData">
      </param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetAllCurves(UnityEngine.AnimationClip,System.Boolean)">
      <summary>
        <para>Извлекает все кривые из определенного анимационного клипа.</para>
      </summary>
      <param name="clip">
      </param>
      <param name="includeCurveData">
      </param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetAnimatableBindings(UnityEngine.GameObject,UnityEngine.GameObject)">
      <summary>
        <para>Извлекает анимационные привязки для определенного GameObject.</para>
      </summary>
      <param name="targetObject">
      </param>
      <param name="root">
      </param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetAnimatedObject(UnityEngine.GameObject,UnityEditor.EditorCurveBinding)">
      <summary>
        <para>Извлекает анимированный объект, на который указывает привязка.</para>
      </summary>
      <param name="root">
      </param>
      <param name="binding">
      </param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetAnimationClips(UnityEngine.Animation)">
      <summary>
        <para>Извлекает массив анимационных клипов, связанных с GameObject или компонентом.</para>
      </summary>
      <param name="component">
      </param>
      <param name="gameObject">
      </param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetAnimationClips(UnityEngine.GameObject)">
      <summary>
        <para>Извлекает массив анимационных клипов, связанных с GameObject или компонентом.</para>
      </summary>
      <param name="component">
      </param>
      <param name="gameObject">
      </param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetAnimationEvents(UnityEngine.AnimationClip)">
      <summary>
        <para>Извлекает все события анимации, связанные с анимационным клипом.</para>
      </summary>
      <param name="clip">
      </param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetCurveBindings(UnityEngine.AnimationClip)">
      <summary>
        <para>Извлекает привязки плавающей кривой в анимационном клипе.</para>
      </summary>
      <param name="clip">
      </param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetEditorCurve(UnityEngine.AnimationClip,System.String,System.Type,System.String)">
      <summary>
        <para>Извлекает плавающую кривую, на которую указывает привязка.</para>
      </summary>
      <param name="clip">
      </param>
      <param name="relativePath">
      </param>
      <param name="type">
      </param>
      <param name="propertyName">
      </param>
      <param name="binding">
      </param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetEditorCurve(UnityEngine.AnimationClip,UnityEditor.EditorCurveBinding)">
      <summary>
        <para>Извлекает плавающую кривую, на которую указывает привязка.</para>
      </summary>
      <param name="clip">
      </param>
      <param name="relativePath">
      </param>
      <param name="type">
      </param>
      <param name="propertyName">
      </param>
      <param name="binding">
      </param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetFloatValue(UnityEngine.GameObject,System.String,System.Type,System.String,System.Single&amp;)">
      <summary>
        <para>Получает текущее значение с плавающей запятой путем выборки значения кривой на определенном игровом объекте.</para>
      </summary>
      <param name="root">
      </param>
      <param name="relativePath">
      </param>
      <param name="type">
      </param>
      <param name="propertyName">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetGenerateMotionCurves(UnityEngine.AnimationClip)">
      <summary>
        <para>Определяет, установлен ли анимационный клип для создания корневых кривых движения.</para>
      </summary>
      <param name="clip">AnimationClip для запроса.</param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetKeyBroken(UnityEngine.AnimationCurve,System.Int32)">
      <summary>
        <para>Извлекает флаг сломанной касательной для определенного ключевого кадра.</para>
      </summary>
      <param name="curve">Кривая для запроса.</param>
      <param name="index">Индекс ключевого кадра.</param>
      <returns>
        <para>Сломанный флаг по указанному индексу.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetKeyLeftTangentMode(UnityEngine.AnimationCurve,System.Int32)">
      <summary>
        <para>Извлекает режим левой касательной ключевого кадра по определенному индексу.</para>
      </summary>
      <param name="curve">Кривая для запроса.</param>
      <param name="index">Индекс ключевого кадра.</param>
      <returns>
        <para>Возвращает режим касательной.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetKeyRightTangentMode(UnityEngine.AnimationCurve,System.Int32)">
      <summary>
        <para>Извлекает режим правой касательной ключевого кадра по определенному индексу.</para>
      </summary>
      <param name="curve">Кривая для запроса.</param>
      <param name="index">Индекс ключевого кадра.</param>
      <returns>
        <para>Возвращает режим касательной.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetObjectReferenceCurve(UnityEngine.AnimationClip,UnityEditor.EditorCurveBinding)">
      <summary>
        <para>Получает опорную кривую объекта, на которую указывает привязка.</para>
      </summary>
      <param name="clip">
      </param>
      <param name="binding">
      </param>
      <returns>
        <para>Возвращает массив ключевых кадров.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetObjectReferenceCurveBindings(UnityEngine.AnimationClip)">
      <summary>
        <para>Извлекает привязки эталонной кривой объекта, хранящиеся в анимационном клипе.</para>
      </summary>
      <param name="clip">
      </param>
    </member>
    <member name="T:UnityEditor.AnimationUtility.OnCurveWasModified">
      <summary>
        <para>Запускается при изменении кривой анимации в анимационном клипе.</para>
      </summary>
      <param name="clip">
      </param>
      <param name="binding">
      </param>
      <param name="type">
      </param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.SetAdditiveReferencePose(UnityEngine.AnimationClip,UnityEngine.AnimationClip,System.Single)">
      <summary>
        <para>Устанавливает аддитивную эталонную позу из referenceClip во время для клипа анимационного клипа.</para>
      </summary>
      <param name="clip">Используемый анимационный клип.</param>
      <param name="referenceClip">Клип анимации, содержащий эталонную позу.</param>
      <param name="time">Время, когда эталонная поза возникает в referenceClip.</param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.SetAnimationClips(UnityEngine.Animation,UnityEngine.AnimationClip[])">
      <summary>
        <para>Задает массив анимационных клипов, на которые будет ссылаться компонент Animation.</para>
      </summary>
      <param name="animation">
      </param>
      <param name="clips">
      </param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.SetAnimationEvents(UnityEngine.AnimationClip,UnityEngine.AnimationEvent[])">
      <summary>
        <para>Заменяет все события анимации в анимационном клипе.</para>
      </summary>
      <param name="clip">
      </param>
      <param name="events">
      </param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.SetEditorCurve(UnityEngine.AnimationClip,UnityEditor.EditorCurveBinding,UnityEngine.AnimationCurve)">
      <summary>
        <para>Добавляет, изменяет или удаляет плавающую кривую редактора в анимационном клипе.</para>
      </summary>
      <param name="clip">Анимационный клип для изменения.</param>
      <param name="binding">Привязка, определяющая путь и свойства кривой.</param>
      <param name="curve">Кривая для добавления. Установите значение null, чтобы удалить кривую.</param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.SetEditorCurves(UnityEngine.AnimationClip,UnityEditor.EditorCurveBinding[],UnityEngine.AnimationCurve[])">
      <summary>
        <para>Добавляет, изменяет или удаляет несколько плавающих кривых редактора в анимационном клипе.</para>
      </summary>
      <param name="clip">Анимационный клип для изменения.</param>
      <param name="binding">Привязка, определяющая путь и свойства каждой кривой.</param>
      <param name="curves">Кривые, которые нужно добавить. Установка для кривых в массиве значения null приведет к удалению этих кривых из клипа.</param>
      <param name="bindings">
      </param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.SetGenerateMotionCurves(UnityEngine.AnimationClip,System.Boolean)">
      <summary>
        <para>Определяет, будет ли анимационный клип генерировать корневые кривые движения.</para>
      </summary>
      <param name="clip">AnimationClip для изменения.</param>
      <param name="value">Установите значение true, чтобы включить создание кривых движения корня.</param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.SetKeyBroken(UnityEngine.AnimationCurve,System.Int32,System.Boolean)">
      <summary>
        <para>Изменить флаг ломаной касательной указанного ключевого кадра.</para>
      </summary>
      <param name="curve">Кривая для изменения.</param>
      <param name="index">Индекс ключевого кадра.</param>
      <param name="broken">Сломанный флаг.</param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.SetKeyLeftTangentMode(UnityEngine.AnimationCurve,System.Int32,UnityEditor.AnimationUtility/TangentMode)">
      <summary>
        <para>Измените режим касания указанного ключевого кадра.</para>
      </summary>
      <param name="curve">Кривая для изменения.</param>
      <param name="index">Индекс ключевого кадра.</param>
      <param name="tangentMode">Тангенциальный режим.</param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.SetKeyRightTangentMode(UnityEngine.AnimationCurve,System.Int32,UnityEditor.AnimationUtility/TangentMode)">
      <summary>
        <para>Измените режим касания указанного ключевого кадра.</para>
      </summary>
      <param name="curve">Кривая для изменения.</param>
      <param name="index">Индекс ключевого кадра.</param>
      <param name="tangentMode">Тангенциальный режим.</param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.SetObjectReferenceCurve(UnityEngine.AnimationClip,UnityEditor.EditorCurveBinding,UnityEditor.ObjectReferenceKeyframe[])">
      <summary>
        <para>Добавляет, изменяет или удаляет опорную кривую объекта в анимационном клипе.</para>
      </summary>
      <param name="clip">Анимационный клип для изменения.</param>
      <param name="binding">Привязки, определяющие пути и свойства каждой кривой.</param>
      <param name="keyframes">Массив эталонных значений объекта с течением времени. Установка значения null удалит кривую.</param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.SetObjectReferenceCurves(UnityEngine.AnimationClip,UnityEditor.EditorCurveBinding[],UnityEditor.ObjectReferenceKeyframe[][])">
      <summary>
        <para>Добавляет, изменяет или удаляет кривую ссылок на объекты в анимационном клипе.</para>
      </summary>
      <param name="clip">Анимационный клип для изменения.</param>
      <param name="bindings">Привязки, определяющие пути и свойства каждой кривой.</param>
      <param name="keyframes">Массив массивов ссылок на объекты, по одному на привязку.</param>
    </member>
    <member name="T:UnityEditor.AnimationUtility.TangentMode">
      <summary>
        <para>Касательные ограничения для ключевого кадра.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AnimationUtility.TangentMode.Auto">
      <summary>
        <para>Касательные устанавливаются автоматически, чтобы кривая плавно проходила через клавишу.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AnimationUtility.TangentMode.ClampedAuto">
      <summary>
        <para>Касательные устанавливаются автоматически, чтобы кривая плавно проходила через клавишу.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AnimationUtility.TangentMode.Constant">
      <summary>
        <para>Кривая сохраняет постоянное значение между двумя ключами.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AnimationUtility.TangentMode.Free">
      <summary>
        <para>Тангенс можно свободно задать, перетащив маркер касательной.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AnimationUtility.TangentMode.Linear">
      <summary>
        <para>Касательная указывает на соседний ключ.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AnimationWindow">
      <summary>
        <para>Используйте класс AnimationWindow для выбора и редактирования анимационных клипов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AnimationWindow.animationClip">
      <summary>
        <para>Анимационный клип, выбранный в окне «Анимация».</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AnimationWindow.canPreview">
      <summary>
        <para>Истинно, если окно анимации может включать режим предварительного просмотра. Ложь в противном случае. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AnimationWindow.canRecord">
      <summary>
        <para>Истинно, если окно анимации может включить режим записи. Ложь в противном случае. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AnimationWindow.frame">
      <summary>
        <para>Номер кадра, в котором находится указатель воспроизведения окна анимации.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AnimationWindow.playing">
      <summary>
        <para>Это свойство включает воспроизведение анимации в окне анимации.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AnimationWindow.previewing">
      <summary>
        <para>Это свойство включает предварительный просмотр в окне анимации.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AnimationWindow.recording">
      <summary>
        <para>Это свойство включает запись в окне анимации.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AnimationWindow.time">
      <summary>
        <para>Значение времени, в котором находится указатель воспроизведения окна анимации.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ApiCompatibilityLevel">
      <summary>
        <para>Уровень совместимости .NET API.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ApiCompatibilityLevel.NET_2_0">
      <summary>
        <para>.NET 2.0.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ApiCompatibilityLevel.NET_2_0_Subset">
      <summary>
        <para>Подмножество .NET 2.0.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ApiCompatibilityLevel.NET_4_6">
      <summary>
        <para>Устарело, вместо этого используйте ApiCompatibilityLevel.NET_Unity_4_8.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ApiCompatibilityLevel.NET_Micro">
      <summary>
        <para>Профиль Micro, используемый серверной частью сценариев Mono на iOS, tvOS и Android, если для уровня разделения установлено значение «Использовать микро mscorlib».</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ApiCompatibilityLevel.NET_Standard">
      <summary>
        <para>Профиль, предназначенный для .NET Standard 2.1.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ApiCompatibilityLevel.NET_Standard_2_0">
      <summary>
        <para>Устарело, вместо этого используйте ApiCompatibilityLevel.NET_Standard.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ApiCompatibilityLevel.NET_Unity_4_8">
      <summary>
        <para>Профиль, предназначенный для объединения API .NET Framework 4.8 и .NET Standard 2.1</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ApiCompatibilityLevel.NET_Web">
      <summary>
        <para>Веб-профиль, ранее использовавшийся только на телевизорах Samsung.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AppleMobileArchitecture">
      <summary>
        <para>Архитектура ЦП Apple Mobile.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AppleMobileArchitecture.ARM64">
      <summary>
        <para>64-битная архитектура ARM.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AppleMobileArchitecture.ARMv7">
      <summary>
        <para>32-разрядная архитектура ARM.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AppleMobileArchitecture.Universal">
      <summary>
        <para>Все архитектуры.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ArrayUtility">
      <summary>
        <para>Помощники для встроенных массивов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ArrayUtility.Add(T[]&amp;,T)">
      <summary>
        <para>Добавляет элемент в конец массива.</para>
      </summary>
      <param name="array">
      </param>
      <param name="item">
      </param>
    </member>
    <member name="M:UnityEditor.ArrayUtility.AddRange(T[]&amp;,T[])">
      <summary>
        <para>Добавляет элементы в конец массива.</para>
      </summary>
      <param name="array">
      </param>
      <param name="items">
      </param>
    </member>
    <member name="M:UnityEditor.ArrayUtility.ArrayEquals(T[],T[])">
      <summary>
        <para>Сравнивает два массива.</para>
      </summary>
      <param name="lhs">
      </param>
      <param name="rhs">
      </param>
      <returns>
        <para>Истинно, если оба имеют одинаковое количество элементов и содержимое равно.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ArrayUtility.ArrayReferenceEquals(T[],T[])">
      <summary>
        <para>Сравнивает две ссылки на массив.</para>
      </summary>
      <param name="lhs">
      </param>
      <param name="rhs">
      </param>
      <returns>
        <para>Истинно, если оба имеют одинаковое количество элементов и являются одними и теми же экземплярами.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ArrayUtility.Clear(T[]&amp;)">
      <summary>
        <para>Очищает массив.</para>
      </summary>
      <param name="array">
      </param>
    </member>
    <member name="M:UnityEditor.ArrayUtility.Contains(T[],T)">
      <summary>
        <para>Определяет, содержит ли массив элемент.</para>
      </summary>
      <param name="array">
      </param>
      <param name="item">
      </param>
      <returns>
        <para>Истина, если элемент находится в массиве, иначе ложь.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ArrayUtility.FindIndex(T[],System.Predicate`1&lt;T&gt;)">
      <summary>
        <para>Найдите индекс первого элемента, удовлетворяющего предикату.</para>
      </summary>
      <param name="array">
      </param>
      <param name="match">
      </param>
      <returns>
        <para>Отсчитываемый от нуля индекс первого вхождения элемента, если он найден; иначе �1.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ArrayUtility.IndexOf(T[],T)">
      <summary>
        <para>Индекс первого элемента со значением value.</para>
      </summary>
      <param name="array">
      </param>
      <param name="value">
      </param>
      <returns>
        <para>Отсчитываемый от нуля индекс элемента, если он найден; иначе -1.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ArrayUtility.Insert(T[]&amp;,System.Int32,T)">
      <summary>
        <para>Вставляет элемент элемента в индекс позиции.</para>
      </summary>
      <param name="array">
      </param>
      <param name="index">
      </param>
      <param name="item">
      </param>
    </member>
    <member name="M:UnityEditor.ArrayUtility.LastIndexOf(T[],T)">
      <summary>
        <para>Индекс последнего элемента со значением value.</para>
      </summary>
      <param name="array">
      </param>
      <param name="value">
      </param>
      <returns>
        <para>Отсчитываемый от нуля индекс элемента, если он найден; иначе -1.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ArrayUtility.Remove(T[]&amp;,T)">
      <summary>
        <para>Удаляет элемент из массива.</para>
      </summary>
      <param name="array">
      </param>
      <param name="item">
      </param>
    </member>
    <member name="M:UnityEditor.ArrayUtility.RemoveAt(T[]&amp;,System.Int32)">
      <summary>
        <para>Удалить элемент в позиции index.</para>
      </summary>
      <param name="array">
      </param>
      <param name="index">
      </param>
    </member>
    <member name="T:UnityEditor.AscentCalculationMode">
      <summary>
        <para>Метод, используемый для расчета подъема шрифта.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AscentCalculationMode.FaceAscender">
      <summary>
        <para>Метод по возрастанию.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AscentCalculationMode.FaceBoundingBox">
      <summary>
        <para>Метод ограничивающей рамки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AscentCalculationMode.Legacy2x">
      <summary>
        <para>Устаревший метод ограничивающей рамки.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AspectRatio">
      <summary>
        <para>Соотношение сторон.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AspectRatio.Aspect16by10">
      <summary>
        <para>Соотношение сторон 16:10.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AspectRatio.Aspect16by9">
      <summary>
        <para>Соотношение сторон 16:9.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AspectRatio.Aspect4by3">
      <summary>
        <para>Соотношение сторон 4:3.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AspectRatio.Aspect5by4">
      <summary>
        <para>Соотношение сторон 5:4.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AspectRatio.AspectOthers">
      <summary>
        <para>Неопределенные соотношения сторон.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AssemblyReloadEvents">
      <summary>
        <para>Этот класс имеет диспетчеры событий для событий перезагрузки сборки.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.AssemblyReloadEvents.afterAssemblyReload(UnityEditor.AssemblyReloadEvents/AssemblyReloadCallback)">
      <summary>
        <para>Это событие отправляется сразу после того, как Unity перезагрузит все сборки.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="?:UnityEditor.AssemblyReloadEvents.beforeAssemblyReload(UnityEditor.AssemblyReloadEvents/AssemblyReloadCallback)">
      <summary>
        <para>Это событие отправляется непосредственно перед тем, как Unity перезагрузит все сборки.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="T:UnityEditor.AssemblyReloadEvents.AssemblyReloadCallback">
      <summary>
        <para>Делегат, используемый для событий перезагрузки сборки.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AssetBundleBuild">
      <summary>
        <para>Запись карты здания AssetBundle.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetBundleBuild.addressableNames">
      <summary>
        <para>Адресное имя, используемое для загрузки актива.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetBundleBuild.assetBundleName">
      <summary>
        <para>Имя AssetBundle.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetBundleBuild.assetBundleVariant">
      <summary>
        <para>Вариант AssetBundle.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetBundleBuild.assetNames">
      <summary>
        <para>Имена активов, которые принадлежат данному AssetBundle.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AssetDatabase">
      <summary>
        <para>Интерфейс для доступа к активам и выполнения операций с активами.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.AssetDatabase.cacheServerConnectionChanged(System.Action`1&lt;UnityEditor.CacheServerConnectionChangedParameters&gt;)">
      <summary>
        <para>Unity вызывает это событие при изменении подключения к Cache Server.</para>
      </summary>
      <param name="value">Используйте CacheServerConnectionChangedParameters для этого события.</param>
    </member>
    <member name="?:UnityEditor.AssetDatabase.importPackageCancelled(UnityEditor.AssetDatabase/ImportPackageCallback)">
      <summary>
        <para>Обратный вызов возникает всякий раз, когда пользователь отменяет импорт пакета.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="?:UnityEditor.AssetDatabase.importPackageCompleted(UnityEditor.AssetDatabase/ImportPackageCallback)">
      <summary>
        <para>Обратный вызов возникает всякий раз, когда импорт пакета успешно завершается.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="?:UnityEditor.AssetDatabase.importPackageFailed(UnityEditor.AssetDatabase/ImportPackageFailedCallback)">
      <summary>
        <para>Обратный вызов возникает при сбое импорта пакета.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="?:UnityEditor.AssetDatabase.importPackageStarted(UnityEditor.AssetDatabase/ImportPackageCallback)">
      <summary>
        <para>Обратный вызов возникает всякий раз, когда начинается импорт пакета.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="F:UnityEditor.AssetDatabase.onImportPackageItemsCompleted">
      <summary>
        <para>Обратный вызов возникает всякий раз, когда успешно завершается импорт пакета, в котором перечислены элементы, выбранные для импорта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetDatabase.ActiveRefreshImportMode">
      <summary>
        <para>Получает режим импорта обновления, используемый в настоящее время базой данных активов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetDatabase.AddObjectToAsset(UnityEngine.Object,System.String)">
      <summary>
        <para>Добавляет objectToAdd к существующему активу по пути.</para>
      </summary>
      <param name="objectToAdd">Объект для добавления к существующему активу.</param>
      <param name="path">Путь файловой системы к ресурсу.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.AddObjectToAsset(UnityEngine.Object,UnityEngine.Object)">
      <summary>
        <para>Добавляет objectToAdd к существующему активу, указанному в assetsObject.</para>
      </summary>
      <param name="objectToAdd">
      </param>
      <param name="assetObject">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.AllowAutoRefresh">
      <summary>
        <para>Уменьшает значение внутреннего счетчика, который Unity использует, чтобы определить, следует ли разрешить автоматическое обновление AssetDatabase.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetDatabase.AssetPathToGUID(System.String)">
      <summary>
        <para>Получите GUID ресурса по пути.</para>
      </summary>
      <param name="path">Путь в файловой системе для ресурса.</param>
      <param name="options">Указывает, должен ли этот метод возвращать GUID для недавно удаленных ресурсов. Значение по умолчанию — AssetPathToGUIDOptions.IncludeRecentlyDeletedAssets.</param>
      <returns>
        <para>GUID.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.AssetPathToGUID(System.String,UnityEditor.AssetPathToGUIDOptions)">
      <summary>
        <para>Получите GUID ресурса по пути.</para>
      </summary>
      <param name="path">Путь в файловой системе для ресурса.</param>
      <param name="options">Указывает, должен ли этот метод возвращать GUID для недавно удаленных ресурсов. Значение по умолчанию — AssetPathToGUIDOptions.IncludeRecentlyDeletedAssets.</param>
      <returns>
        <para>GUID.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.CanConnectToCacheServer(System.String,System.UInt16)">
      <summary>
        <para>Проверяет доступность Cache Server.</para>
      </summary>
      <param name="ip">IP-адрес сервера кэширования.</param>
      <param name="port">Номер порта кэш-сервера.</param>
      <returns>
        <para>Возвращает true, если Editor может подключиться к Cache Server. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.CanOpenAssetInEditor(System.Int32)">
      <summary>
        <para>Проверяет, может ли Unity открыть ресурс в редакторе.</para>
      </summary>
      <param name="instanceID">Идентификатор экземпляра актива.</param>
      <returns>
        <para>Возвращает true, если Unity может успешно открыть ресурс в редакторе, в противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.CanOpenForEdit(UnityEngine.Object,UnityEditor.StatusQueryOptions)">
      <summary>
        <para>Запросите, можно ли открыть файл актива для редактирования в системе управления версиями и не заблокирован ли он исключительно другим пользователем или недоступен по иным причинам.</para>
      </summary>
      <param name="assetObject">Объект, представляющий актив, статус которого вы хотите запросить.</param>
      <param name="assetOrMetaFilePath">Путь к файлу ресурса или его метафайлу на диске относительно папки проекта.</param>
      <param name="message">Возвращает причину, по которой ресурс недоступен для редактирования.</param>
      <param name="statusOptions">Варианты того, как следует запрашивать систему контроля версий. Эти параметры могут повлиять на скорость и точность запроса. По умолчанию используется StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>Истинно, если актив считается доступным для редактирования выбранной системой контроля версий.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.CanOpenForEdit(System.String,UnityEditor.StatusQueryOptions)">
      <summary>
        <para>Запросите, можно ли открыть файл актива для редактирования в системе управления версиями и не заблокирован ли он исключительно другим пользователем или недоступен по иным причинам.</para>
      </summary>
      <param name="assetObject">Объект, представляющий актив, статус которого вы хотите запросить.</param>
      <param name="assetOrMetaFilePath">Путь к файлу ресурса или его метафайлу на диске относительно папки проекта.</param>
      <param name="message">Возвращает причину, по которой ресурс недоступен для редактирования.</param>
      <param name="statusOptions">Варианты того, как следует запрашивать систему контроля версий. Эти параметры могут повлиять на скорость и точность запроса. По умолчанию используется StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>Истинно, если актив считается доступным для редактирования выбранной системой контроля версий.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.CanOpenForEdit(UnityEngine.Object,System.String&amp;,UnityEditor.StatusQueryOptions)">
      <summary>
        <para>Запросите, можно ли открыть файл актива для редактирования в системе управления версиями и не заблокирован ли он исключительно другим пользователем или недоступен по иным причинам.</para>
      </summary>
      <param name="assetObject">Объект, представляющий актив, статус которого вы хотите запросить.</param>
      <param name="assetOrMetaFilePath">Путь к файлу ресурса или его метафайлу на диске относительно папки проекта.</param>
      <param name="message">Возвращает причину, по которой ресурс недоступен для редактирования.</param>
      <param name="statusOptions">Варианты того, как следует запрашивать систему контроля версий. Эти параметры могут повлиять на скорость и точность запроса. По умолчанию используется StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>Истинно, если актив считается доступным для редактирования выбранной системой контроля версий.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.CanOpenForEdit(System.String,System.String&amp;,UnityEditor.StatusQueryOptions)">
      <summary>
        <para>Запросите, можно ли открыть файл актива для редактирования в системе управления версиями и не заблокирован ли он исключительно другим пользователем или недоступен по иным причинам.</para>
      </summary>
      <param name="assetObject">Объект, представляющий актив, статус которого вы хотите запросить.</param>
      <param name="assetOrMetaFilePath">Путь к файлу ресурса или его метафайлу на диске относительно папки проекта.</param>
      <param name="message">Возвращает причину, по которой ресурс недоступен для редактирования.</param>
      <param name="statusOptions">Варианты того, как следует запрашивать систему контроля версий. Эти параметры могут повлиять на скорость и точность запроса. По умолчанию используется StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>Истинно, если актив считается доступным для редактирования выбранной системой контроля версий.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.CanOpenForEdit(UnityEngine.Object)">
      <summary>
        <para>Запросите, можно ли открыть файл актива для редактирования в системе управления версиями и не заблокирован ли он исключительно другим пользователем или недоступен по иным причинам.</para>
      </summary>
      <param name="assetObject">Объект, представляющий актив, статус которого вы хотите запросить.</param>
      <param name="assetOrMetaFilePath">Путь к файлу ресурса или его метафайлу на диске относительно папки проекта.</param>
      <param name="message">Возвращает причину, по которой ресурс недоступен для редактирования.</param>
      <param name="statusOptions">Варианты того, как следует запрашивать систему контроля версий. Эти параметры могут повлиять на скорость и точность запроса. По умолчанию используется StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>Истинно, если актив считается доступным для редактирования выбранной системой контроля версий.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.CanOpenForEdit(System.String)">
      <summary>
        <para>Запросите, можно ли открыть файл актива для редактирования в системе управления версиями и не заблокирован ли он исключительно другим пользователем или недоступен по иным причинам.</para>
      </summary>
      <param name="assetObject">Объект, представляющий актив, статус которого вы хотите запросить.</param>
      <param name="assetOrMetaFilePath">Путь к файлу ресурса или его метафайлу на диске относительно папки проекта.</param>
      <param name="message">Возвращает причину, по которой ресурс недоступен для редактирования.</param>
      <param name="statusOptions">Варианты того, как следует запрашивать систему контроля версий. Эти параметры могут повлиять на скорость и точность запроса. По умолчанию используется StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>Истинно, если актив считается доступным для редактирования выбранной системой контроля версий.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.CanOpenForEdit(UnityEngine.Object,System.String&amp;)">
      <summary>
        <para>Запросите, можно ли открыть файл актива для редактирования в системе управления версиями и не заблокирован ли он исключительно другим пользователем или недоступен по иным причинам.</para>
      </summary>
      <param name="assetObject">Объект, представляющий актив, статус которого вы хотите запросить.</param>
      <param name="assetOrMetaFilePath">Путь к файлу ресурса или его метафайлу на диске относительно папки проекта.</param>
      <param name="message">Возвращает причину, по которой ресурс недоступен для редактирования.</param>
      <param name="statusOptions">Варианты того, как следует запрашивать систему контроля версий. Эти параметры могут повлиять на скорость и точность запроса. По умолчанию используется StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>Истинно, если актив считается доступным для редактирования выбранной системой контроля версий.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.CanOpenForEdit(System.String,System.String&amp;)">
      <summary>
        <para>Запросите, можно ли открыть файл актива для редактирования в системе управления версиями и не заблокирован ли он исключительно другим пользователем или недоступен по иным причинам.</para>
      </summary>
      <param name="assetObject">Объект, представляющий актив, статус которого вы хотите запросить.</param>
      <param name="assetOrMetaFilePath">Путь к файлу ресурса или его метафайлу на диске относительно папки проекта.</param>
      <param name="message">Возвращает причину, по которой ресурс недоступен для редактирования.</param>
      <param name="statusOptions">Варианты того, как следует запрашивать систему контроля версий. Эти параметры могут повлиять на скорость и точность запроса. По умолчанию используется StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>Истинно, если актив считается доступным для редактирования выбранной системой контроля версий.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.CanOpenForEdit(System.String[],System.Collections.Generic.List`1&lt;System.String&gt;,UnityEditor.StatusQueryOptions)">
      <summary>
        <para>Запросите, какие из предоставленных файлов ресурсов можно открыть для редактирования в системе управления версиями, и какие из них не заблокированы удаленно или недоступны по какой-либо иной причине.</para>
      </summary>
      <param name="assetOrMetaFilePaths">Пути к ресурсам или их метафайлам относительно папки проекта.</param>
      <param name="outNotEditablePaths">Целевой список нередактируемых путей ресурсов.</param>
      <param name="statusQueryOptions">Указывает, как Unity должен запрашивать систему контроля версий. Значение по умолчанию — StatusQueryOptions.UseCachedIfPossible.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.ClearImporterOverride(System.String)">
      <summary>
        <para>Отменяет переопределение импортера для актива.</para>
      </summary>
      <param name="path">Путь объекта.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.ClearLabels(UnityEngine.Object)">
      <summary>
        <para>Удаляет все ярлыки, прикрепленные к активу.</para>
      </summary>
      <param name="obj">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.CloseCacheServerConnection">
      <summary>
        <para>Закрывает активное подключение к кэш-серверу. Если ни одно соединение не активно, ничего не происходит.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetDatabase.Contains(UnityEngine.Object)">
      <summary>
        <para>Является ли объект активом?</para>
      </summary>
      <param name="obj">
      </param>
      <param name="instanceID">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.Contains(System.Int32)">
      <summary>
        <para>Является ли объект активом?</para>
      </summary>
      <param name="obj">
      </param>
      <param name="instanceID">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.CopyAsset(System.String,System.String)">
      <summary>
        <para>Дублирует ресурс по пути и сохраняет его по адресу newPath.</para>
      </summary>
      <param name="path">Путь к исходному ресурсу в файловой системе.</param>
      <param name="newPath">Путь к файловой системе нового ресурса для создания.</param>
      <returns>
        <para>Возвращает true, если операция копирования выполнена успешно, или false, если часть процесса завершается сбоем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.CreateAsset(UnityEngine.Object,System.String)">
      <summary>
        <para>Создает новый исходный ресурс Unity.</para>
      </summary>
      <param name="asset">Объект для использования при создании актива.</param>
      <param name="path">Путь в файловой системе для нового актива.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.CreateFolder(System.String,System.String)">
      <summary>
        <para>Создает новую папку в указанной родительской папке.

Строка родительской папки должна начинаться с папки «Активы», и все папки в строке родительской папки должны уже существовать. Например, при указании «AssetsParentFolder1Parentfolder2/» новая папка будет создана в «ParentFolder2», только если ParentFolder1 и ParentFolder2 уже существуют.</para>
      </summary>
      <param name="parentFolder">Путь к родительской папке. Должен начинаться с «Активы/».</param>
      <param name="newFolderName">Имя новой папки.</param>
      <returns>
        <para>GUID вновь созданной папки, если папка была создана успешно. В противном случае возвращает пустую строку.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.DeleteAsset(System.String)">
      <summary>
        <para>Удаляет указанный ресурс или папку.</para>
      </summary>
      <param name="path">Относительный путь проекта к удаляемому ресурсу или папке.</param>
      <returns>
        <para>Возвращает true, если актив был успешно удален, и false, если он не существует или не может быть удален.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.DeleteAssets(System.String[],System.Collections.Generic.List`1&lt;System.String&gt;)">
      <summary>
        <para>Позволяет удалять сразу несколько ресурсов или папок с повышением производительности при управлении версиями.</para>
      </summary>
      <param name="paths">Относительные пути проекта к ресурсам или папкам, которые необходимо удалить.</param>
      <param name="outFailedPaths">Относительные пути проекта, которые не удалось удалить.</param>
      <returns>
        <para>Возвращает true, если все ресурсы в путях были успешно удалены, и false, если какой-либо из указанных путей не существует или не может быть удален.</para>
      </returns>
    </member>
    <member name="P:UnityEditor.AssetDatabase.DesiredWorkerCount">
      <summary>
        <para>Желаемое количество процессов для использования при импорте активов во время обновления базы данных активов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetDatabase.DisallowAutoRefresh">
      <summary>
        <para>Увеличивает внутренний счетчик, который Unity использует, чтобы определить, следует ли разрешить автоматическое обновление AssetDatabase.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetDatabase.ExportPackage(System.String[],System.String)">
      <summary>
        <para>Экспортирует активы, идентифицированные с помощью assetsPathNames, в файл unitypackage в fileName.</para>
      </summary>
      <param name="assetPathNames">
      </param>
      <param name="fileName">
      </param>
      <param name="flags">
      </param>
      <param name="assetPathName">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.ExportPackage(System.String,System.String)">
      <summary>
        <para>Экспортирует активы, идентифицированные с помощью assetsPathNames, в файл unitypackage в fileName.</para>
      </summary>
      <param name="assetPathNames">
      </param>
      <param name="fileName">
      </param>
      <param name="flags">
      </param>
      <param name="assetPathName">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.ExportPackage(System.String,System.String,UnityEditor.ExportPackageOptions)">
      <summary>
        <para>Экспортирует активы, идентифицированные с помощью assetsPathNames, в файл unitypackage в fileName.</para>
      </summary>
      <param name="assetPathNames">
      </param>
      <param name="fileName">
      </param>
      <param name="flags">
      </param>
      <param name="assetPathName">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.ExportPackage(System.String[],System.String,UnityEditor.ExportPackageOptions)">
      <summary>
        <para>Экспортирует активы, идентифицированные с помощью assetsPathNames, в файл unitypackage в fileName.</para>
      </summary>
      <param name="assetPathNames">
      </param>
      <param name="fileName">
      </param>
      <param name="flags">
      </param>
      <param name="assetPathName">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.ExtractAsset(UnityEngine.Object,System.String)">
      <summary>
        <para>Создает внешний актив из объекта (например, материала), извлекая его из импортированного актива (например, из файла FBX).</para>
      </summary>
      <param name="asset">Подактив для извлечения.</param>
      <param name="newPath">Путь к файлу нового актива.</param>
      <returns>
        <para>Пустая строка, если Unity успешно извлекла актив, или сообщение об ошибке, если нет.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.FindAssets(System.String)">
      <summary>
        <para>Выполните поиск в базе данных активов, используя строку фильтра поиска.</para>
      </summary>
      <param name="filter">Строка фильтра может содержать данные поиска. Подробнее об этой строке см. ниже.</param>
      <param name="searchInFolders">Папки, в которых начнется поиск.</param>
      <returns>
        <para>Массив соответствующих активов. Обратите внимание, что идентификаторы GUID будут возвращены. Если подходящие активы не найдены, возвращает пустой массив.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.FindAssets(System.String,System.String[])">
      <summary>
        <para>Выполните поиск в базе данных активов, используя строку фильтра поиска.</para>
      </summary>
      <param name="filter">Строка фильтра может содержать данные поиска. Подробнее об этой строке см. ниже.</param>
      <param name="searchInFolders">Папки, в которых начнется поиск.</param>
      <returns>
        <para>Массив соответствующих активов. Обратите внимание, что идентификаторы GUID будут возвращены. Если подходящие активы не найдены, возвращает пустой массив.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.ForceReserializeAssets">
      <summary>
        <para>Принудительно загрузить и повторно сериализовать заданные активы, сбрасывая на диск все незавершенные изменения данных.</para>
      </summary>
      <param name="assetPaths">Пути к активам, которые должны быть повторно сериализованы. Если этот параметр не указан, будут повторно сериализованы все активы в проекте.</param>
      <param name="options">Укажите, хотите ли вы повторно сериализовать сами активы, их метафайлы или и то, и другое. Если опущено, по умолчанию используются оба.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.ForceReserializeAssets">
      <summary>
        <para>Принудительно загрузить и повторно сериализовать заданные активы, сбрасывая на диск все незавершенные изменения данных.</para>
      </summary>
      <param name="assetPaths">Пути к активам, которые должны быть повторно сериализованы. Если этот параметр не указан, будут повторно сериализованы все активы в проекте.</param>
      <param name="options">Укажите, хотите ли вы повторно сериализовать сами активы, их метафайлы или и то, и другое. Если опущено, по умолчанию используются оба.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.ForceReserializeAssets">
      <summary>
        <para>Принудительно загрузить и повторно сериализовать заданные активы, сбрасывая на диск все незавершенные изменения данных.</para>
      </summary>
      <param name="assetPaths">Пути к активам, которые должны быть повторно сериализованы. Если этот параметр не указан, будут повторно сериализованы все активы в проекте.</param>
      <param name="options">Укажите, хотите ли вы повторно сериализовать сами активы, их метафайлы или и то, и другое. Если опущено, по умолчанию используются оба.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.ForceToDesiredWorkerCount">
      <summary>
        <para>Заставляет редактор использовать желаемое количество рабочих процессов. Unity либо создаст новые рабочие процессы, либо закроет бездействующие рабочие процессы, чтобы достичь желаемого числа.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GenerateUniqueAssetPath(System.String)">
      <summary>
        <para>Создает новый уникальный путь для актива.</para>
      </summary>
      <param name="path">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetAllAssetBundleNames">
      <summary>
        <para>Вернуть все имена AssetBundle в базе данных активов.</para>
      </summary>
      <returns>
        <para>Массив имен пакетов ресурсов.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetAssetBundleDependencies(System.String,System.Boolean)">
      <summary>
        <para>При наличии объекта assetsBundleName возвращает список пакетов AssetBundle, от которых он зависит.</para>
      </summary>
      <param name="assetBundleName">Имя AssetBundle, для которого требуются зависимости.</param>
      <param name="recursive">Если false, возвращает только AssetBundles, которые являются прямыми зависимостями ввода; если true, включает все косвенные зависимости ввода.</param>
      <returns>
        <para>Имена всех AssetBundles, от которых зависит вход.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetAssetDependencyHash(System.String)">
      <summary>
        <para>Возвращает хэш всех зависимостей актива.</para>
      </summary>
      <param name="path">Путь к ресурсу.</param>
      <param name="guid">GUID актива.</param>
      <returns>
        <para>Совокупный хеш.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetAssetDependencyHash(UnityEditor.GUID)">
      <summary>
        <para>Возвращает хэш всех зависимостей актива.</para>
      </summary>
      <param name="path">Путь к ресурсу.</param>
      <param name="guid">GUID актива.</param>
      <returns>
        <para>Совокупный хеш.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetAssetOrScenePath(UnityEngine.Object)">
      <summary>
        <para>Возвращает путь относительно папки проекта, в которой хранится ресурс.</para>
      </summary>
      <param name="assetObject">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetAssetPath(System.Int32)">
      <summary>
        <para>Возвращает путь относительно папки проекта, в которой хранится ресурс.</para>
      </summary>
      <param name="instanceID">Идентификатор экземпляра актива.</param>
      <param name="assetObject">Ссылка на ресурс.</param>
      <returns>
        <para>Путь к активу, или null, или пустая строка, если актив не существует.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetAssetPath(UnityEngine.Object)">
      <summary>
        <para>Возвращает путь относительно папки проекта, в которой хранится ресурс.</para>
      </summary>
      <param name="instanceID">Идентификатор экземпляра актива.</param>
      <param name="assetObject">Ссылка на ресурс.</param>
      <returns>
        <para>Путь к активу, или null, или пустая строка, если актив не существует.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetAssetPathFromTextMetaFilePath(System.String)">
      <summary>
        <para>Получает путь к файлу актива, связанному с текстовым файлом .meta.</para>
      </summary>
      <param name="path">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetAssetPathsFromAssetBundle(System.String)">
      <summary>
        <para>Возвращает массив, содержащий пути ко всем ресурсам, помеченным указанным именем набора ресурсов.</para>
      </summary>
      <param name="assetBundleName">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetAssetPathsFromAssetBundleAndAssetName(System.String,System.String)">
      <summary>
        <para>Получите пути к активам для всех активов, помеченных с помощью assetsBundleName и
названный активИмя.</para>
      </summary>
      <param name="assetBundleName">
      </param>
      <param name="assetName">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetAvailableImporterTypes(System.String)">
      <summary>
        <para>Получает типы импортера, связанные с данным типом актива.</para>
      </summary>
      <param name="path">Путь объекта.</param>
      <returns>
        <para>Возвращает массив типов импортеров, которые могут обрабатывать указанный Актив.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetCachedIcon(System.String)">
      <summary>
        <para>Извлекает значок ресурса по указанному пути к ресурсу.</para>
      </summary>
      <param name="path">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetCacheServerAddress">
      <summary>
        <para>Получает IP-адрес сервера кэширования в настройках редактора.</para>
      </summary>
      <returns>
        <para>Возвращает IP-адрес кэш-сервера в настройках редактора. Возвращает пустую строку, если IP-адрес не указан в настройках редактора.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetCacheServerEnableDownload">
      <summary>
        <para>Получает параметр загрузки сервера кэша из настроек редактора.</para>
      </summary>
      <returns>
        <para>Возвращает true, если включена загрузка с сервера кэша. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetCacheServerEnableUpload">
      <summary>
        <para>Получает параметр загрузки сервера кэширования из настроек редактора.</para>
      </summary>
      <returns>
        <para>Возвращает true, если включена загрузка на сервер кэширования. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetCacheServerNamespacePrefix">
      <summary>
        <para>Получает префикс пространства имен сервера кэширования, установленный в настройках редактора.</para>
      </summary>
      <returns>
        <para>Возвращает префикс пространства имен для кэш-сервера.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetCacheServerPort">
      <summary>
        <para>Получает номер порта сервера кэширования в настройках редактора.</para>
      </summary>
      <returns>
        <para>Возвращает номер порта кэш-сервера в настройках редактора. Возвращает 0, если номер порта не задан в настройках редактора.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetCurrentCacheServerIp">
      <summary>
        <para>Получает IP-адрес кэш-сервера, который в данный момент используется редактором.</para>
      </summary>
      <returns>
        <para>Возвращает строковое представление текущего IP-адреса Cache Server.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetDependencies(System.String)">
      <summary>
        <para>Возвращает массив всех ресурсов, которые являются зависимостями ресурса по указанному пути.

Примечание. GetDependencies() получает активы, на которые ссылаются другие активы. Например, сцена может содержать множество игровых объектов с прикрепленным к ним материалом. В этом случае GetDependencies() вернет путь к материальным активам, но не к игровым объектам, поскольку они не являются активами на вашем диске.</para>
      </summary>
      <param name="pathName">Путь к ресурсу, для которого требуются зависимости.</param>
      <param name="recursive">Определяет, будет ли этот метод рекурсивно проверять и возвращать все зависимости, включая косвенные зависимости (если установлено значение true), или же он будет возвращать только прямые зависимости (если установлено значение false).</param>
      <returns>
        <para>Пути всех ресурсов, от которых зависит ввод.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetDependencies(System.String,System.Boolean)">
      <summary>
        <para>Возвращает массив всех ресурсов, которые являются зависимостями ресурса по указанному пути.

Примечание. GetDependencies() получает активы, на которые ссылаются другие активы. Например, сцена может содержать множество игровых объектов с прикрепленным к ним материалом. В этом случае GetDependencies() вернет путь к материальным активам, но не к игровым объектам, поскольку они не являются активами на вашем диске.</para>
      </summary>
      <param name="pathName">Путь к ресурсу, для которого требуются зависимости.</param>
      <param name="recursive">Определяет, будет ли этот метод рекурсивно проверять и возвращать все зависимости, включая косвенные зависимости (если установлено значение true), или же он будет возвращать только прямые зависимости (если установлено значение false).</param>
      <returns>
        <para>Пути всех ресурсов, от которых зависит ввод.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetDependencies(System.String[])">
      <summary>
        <para>Возвращает массив путей ресурсов, которые являются зависимостями всех ресурсов в списке pathNames, который вы предоставляете.

Примечание. GetDependencies() получает активы, на которые ссылаются другие активы. Например, сцена может содержать множество игровых объектов с прикрепленным к ним материалом. В этом случае GetDependencies() вернет путь к материальным активам, но не к игровым объектам, поскольку они не являются активами на вашем диске.</para>
      </summary>
      <param name="pathNames">Путь к ресурсам, для которых требуются зависимости.</param>
      <param name="recursive">Определяет, будет ли этот метод рекурсивно проверять и возвращать все зависимости, включая косвенные зависимости (если установлено значение true), или же он будет возвращать только прямые зависимости (если установлено значение false).</param>
      <returns>
        <para>Пути всех ресурсов, от которых зависит ввод.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetDependencies(System.String[],System.Boolean)">
      <summary>
        <para>Возвращает массив путей ресурсов, которые являются зависимостями всех ресурсов в списке pathNames, который вы предоставляете.

Примечание. GetDependencies() получает активы, на которые ссылаются другие активы. Например, сцена может содержать множество игровых объектов с прикрепленным к ним материалом. В этом случае GetDependencies() вернет путь к материальным активам, но не к игровым объектам, поскольку они не являются активами на вашем диске.</para>
      </summary>
      <param name="pathNames">Путь к ресурсам, для которых требуются зависимости.</param>
      <param name="recursive">Определяет, будет ли этот метод рекурсивно проверять и возвращать все зависимости, включая косвенные зависимости (если установлено значение true), или же он будет возвращать только прямые зависимости (если установлено значение false).</param>
      <returns>
        <para>Пути всех ресурсов, от которых зависит ввод.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetImplicitAssetBundleName(System.String)">
      <summary>
        <para>Возвращает имя AssetBundle, к которому принадлежит данный ресурс.</para>
      </summary>
      <param name="assetPath">Путь актива.</param>
      <returns>
        <para>Возвращает имя AssetBundle, к которому принадлежит данный актив. Подробности смотрите в описании метода.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetImplicitAssetBundleVariantName(System.String)">
      <summary>
        <para>Возвращает имя варианта AssetBundle, которому принадлежит данный актив.</para>
      </summary>
      <param name="assetPath">Путь актива.</param>
      <returns>
        <para>Возвращает имя варианта AssetBundle, которому принадлежит данный актив. Подробности смотрите в описании метода.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetImporterOverride(System.String)">
      <summary>
        <para>Возвращает тип импортера переопределения.</para>
      </summary>
      <param name="path">Путь объекта.</param>
      <returns>
        <para>Тип импортера.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetLabels(UnityEngine.Object)">
      <summary>
        <para>Возвращает все ярлыки, прикрепленные к данному ресурсу.</para>
      </summary>
      <param name="obj">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetMainAssetTypeAtPath(System.String)">
      <summary>
        <para>Возвращает тип основного объекта актива в assetsPath.</para>
      </summary>
      <param name="assetPath">Путь к загружаемому ресурсу в файловой системе.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetSubFolders(System.String)">
      <summary>
        <para>Учитывая путь к каталогу в папке Assets относительно папки проекта, этот метод вернет массив всех его подкаталогов.</para>
      </summary>
      <param name="path">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetTextMetaDataPathFromAssetPath(System.String)">
      <summary>
        <para>Получает путь к текстовому мета-файлу, связанному с ресурсом.</para>
      </summary>
      <param name="path">Путь к ресурсу.</param>
      <returns>
        <para>Путь к текстовому файлу .meta или пустая строка, если файл не существует.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetTextMetaFilePathFromAssetPath(System.String)">
      <summary>
        <para>Получает путь к текстовому мета-файлу, связанному с ресурсом.</para>
      </summary>
      <param name="path">Путь к ресурсу.</param>
      <returns>
        <para>Путь к текстовому файлу .meta или пустая строка, если файл не существует.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetTypeFromPathAndFileID(System.String,System.Int64)">
      <summary>
        <para>Получает тип объекта из пути объекта и идентификатора локального файла.</para>
      </summary>
      <param name="assetPath">Путь объекта.</param>
      <param name="localIdentifierInFile">Идентификатор локального файла объекта.</param>
      <returns>
        <para>Тип объекта.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetUnusedAssetBundleNames">
      <summary>
        <para>Вернуть все неиспользуемые имена assetsBundle в базе данных активов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetDatabase.GlobalArtifactDependencyVersion">
      <summary>
        <para>Изменения во время обновления, если что-либо изменилось, что может сделать недействительным любой артефакт.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetDatabase.GlobalArtifactProcessedVersion">
      <summary>
        <para>Изменяется всякий раз, когда в базу данных артефактов добавляется новый артефакт.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GUIDFromAssetPath(System.String)">
      <summary>
        <para>Получите GUID ресурса по пути.</para>
      </summary>
      <param name="path">Путь в файловой системе для ресурса. Все пути указаны относительно папки проекта.</param>
      <returns>
        <para>GUID актива. Нулевой GUID означает недопустимый путь к ресурсу.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GUIDToAssetPath(System.String)">
      <summary>
        <para>Получает соответствующий путь ресурса для предоставленного идентификатора GUID или пустую строку, если идентификатор GUID не может быть найден.</para>
      </summary>
      <param name="guid">GUID актива.</param>
      <returns>
        <para>Путь к ресурсу относительно папки проекта.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GUIDToAssetPath(UnityEditor.GUID)">
      <summary>
        <para>Получает соответствующий путь ресурса для предоставленного идентификатора GUID или пустую строку, если идентификатор GUID не может быть найден.</para>
      </summary>
      <param name="guid">GUID актива.</param>
      <returns>
        <para>Путь к ресурсу относительно папки проекта.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.ImportAsset(System.String)">
      <summary>
        <para>Импортировать объект по пути.</para>
      </summary>
      <param name="path">
      </param>
      <param name="options">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.ImportAsset(System.String,UnityEditor.ImportAssetOptions)">
      <summary>
        <para>Импортировать объект по пути.</para>
      </summary>
      <param name="path">
      </param>
      <param name="options">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.ImportPackage(System.String,System.Boolean)">
      <summary>
        <para>Импортирует пакет в packagePath в текущий проект.</para>
      </summary>
      <param name="packagePath">
      </param>
      <param name="interactive">
      </param>
    </member>
    <member name="T:UnityEditor.AssetDatabase.ImportPackageCallback">
      <summary>
        <para>Делегат для вызова из обратных вызовов AssetDatabase.ImportPackage. packageName — это имя пакета, вызвавшего обратный вызов.</para>
      </summary>
      <param name="packageName">
      </param>
    </member>
    <member name="T:UnityEditor.AssetDatabase.ImportPackageFailedCallback">
      <summary>
        <para>Делегат для вызова из обратных вызовов AssetDatabase.ImportPackage. packageName — это имя пакета, вызвавшего обратный вызов. errorMessage — причина сбоя.</para>
      </summary>
      <param name="packageName">
      </param>
      <param name="errorMessage">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsCacheServerEnabled">
      <summary>
        <para>Проверяет, включен ли сервер кэширования в настройках проекта.</para>
      </summary>
      <returns>
        <para>Возвращает true, если сервер кэширования включен. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsConnectedToCacheServer">
      <summary>
        <para>Проверяет состояние соединения с Cache Server.</para>
      </summary>
      <returns>
        <para>Возвращает true, когда Editor подключен к Cache Server. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsDirectoryMonitoringEnabled">
      <summary>
        <para>Сообщает, включен ли мониторинг каталогов.</para>
      </summary>
      <returns>
        <para>Возвращает true, если включен мониторинг каталогов. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsForeignAsset(UnityEngine.Object)">
      <summary>
        <para>Определяет, является ли Актив внешним Активом.</para>
      </summary>
      <param name="obj">
      </param>
      <param name="instanceID">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsForeignAsset(System.Int32)">
      <summary>
        <para>Определяет, является ли Актив внешним Активом.</para>
      </summary>
      <param name="obj">
      </param>
      <param name="instanceID">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsMainAsset(UnityEngine.Object)">
      <summary>
        <para>Является ли ассет основным ассетом в окне проекта?</para>
      </summary>
      <param name="obj">
      </param>
      <param name="instanceID">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsMainAsset(System.Int32)">
      <summary>
        <para>Является ли ассет основным ассетом в окне проекта?</para>
      </summary>
      <param name="obj">
      </param>
      <param name="instanceID">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsMainAssetAtPathLoaded(System.String)">
      <summary>
        <para>Возвращает значение true, если основной объект актива по адресу assetsPath загружен в память.</para>
      </summary>
      <param name="assetPath">Путь к загружаемому ресурсу в файловой системе.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsMetaFileOpenForEdit(UnityEngine.Object,UnityEditor.StatusQueryOptions)">
      <summary>
        <para>Запросите, открыт ли файл метаданных актива (.meta) для редактирования в системе управления версиями.</para>
      </summary>
      <param name="assetObject">Объект, представляющий ресурс, статус метаданных которого вы хотите запросить.</param>
      <param name="message">Возвращает причину, по которой метаданные ресурса не открыты для редактирования.</param>
      <param name="statusOptions">Варианты того, как следует запрашивать систему контроля версий. Эти параметры могут повлиять на скорость и точность запроса. По умолчанию используется StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>Значение true, если выбранная система управления версиями считает метаданные ресурса открытыми для редактирования.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsMetaFileOpenForEdit(UnityEngine.Object,System.String&amp;,UnityEditor.StatusQueryOptions)">
      <summary>
        <para>Запросите, открыт ли файл метаданных актива (.meta) для редактирования в системе управления версиями.</para>
      </summary>
      <param name="assetObject">Объект, представляющий ресурс, статус метаданных которого вы хотите запросить.</param>
      <param name="message">Возвращает причину, по которой метаданные ресурса не открыты для редактирования.</param>
      <param name="statusOptions">Варианты того, как следует запрашивать систему контроля версий. Эти параметры могут повлиять на скорость и точность запроса. По умолчанию используется StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>Значение true, если выбранная система управления версиями считает метаданные ресурса открытыми для редактирования.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsMetaFileOpenForEdit(UnityEngine.Object)">
      <summary>
        <para>Запросите, открыт ли файл метаданных актива (.meta) для редактирования в системе управления версиями.</para>
      </summary>
      <param name="assetObject">Объект, представляющий ресурс, статус метаданных которого вы хотите запросить.</param>
      <param name="message">Возвращает причину, по которой метаданные ресурса не открыты для редактирования.</param>
      <param name="statusOptions">Варианты того, как следует запрашивать систему контроля версий. Эти параметры могут повлиять на скорость и точность запроса. По умолчанию используется StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>Значение true, если выбранная система управления версиями считает метаданные ресурса открытыми для редактирования.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsMetaFileOpenForEdit(UnityEngine.Object,System.String&amp;)">
      <summary>
        <para>Запросите, открыт ли файл метаданных актива (.meta) для редактирования в системе управления версиями.</para>
      </summary>
      <param name="assetObject">Объект, представляющий ресурс, статус метаданных которого вы хотите запросить.</param>
      <param name="message">Возвращает причину, по которой метаданные ресурса не открыты для редактирования.</param>
      <param name="statusOptions">Варианты того, как следует запрашивать систему контроля версий. Эти параметры могут повлиять на скорость и точность запроса. По умолчанию используется StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>Значение true, если выбранная система управления версиями считает метаданные ресурса открытыми для редактирования.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsNativeAsset(UnityEngine.Object)">
      <summary>
        <para>Определяет, является ли ресурс родным.</para>
      </summary>
      <param name="obj">
      </param>
      <param name="instanceID">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsNativeAsset(System.Int32)">
      <summary>
        <para>Определяет, является ли ресурс родным.</para>
      </summary>
      <param name="obj">
      </param>
      <param name="instanceID">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsOpenForEdit(UnityEngine.Object,UnityEditor.StatusQueryOptions)">
      <summary>
        <para>Запросите, открыт ли файл актива для редактирования в системе управления версиями.</para>
      </summary>
      <param name="assetObject">Объект, представляющий актив, статус которого вы хотите запросить.</param>
      <param name="assetOrMetaFilePath">Путь к файлу ресурса или его метафайлу на диске относительно папки проекта.</param>
      <param name="message">Возвращает причину, по которой ресурс не открыт для редактирования.</param>
      <param name="statusOptions">Варианты того, как следует запрашивать систему контроля версий. Эти параметры могут повлиять на скорость и точность запроса. По умолчанию используется StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>Истинно, если актив считается открытым для редактирования выбранной системой управления версиями.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsOpenForEdit(System.String,UnityEditor.StatusQueryOptions)">
      <summary>
        <para>Запросите, открыт ли файл актива для редактирования в системе управления версиями.</para>
      </summary>
      <param name="assetObject">Объект, представляющий актив, статус которого вы хотите запросить.</param>
      <param name="assetOrMetaFilePath">Путь к файлу ресурса или его метафайлу на диске относительно папки проекта.</param>
      <param name="message">Возвращает причину, по которой ресурс не открыт для редактирования.</param>
      <param name="statusOptions">Варианты того, как следует запрашивать систему контроля версий. Эти параметры могут повлиять на скорость и точность запроса. По умолчанию используется StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>Истинно, если актив считается открытым для редактирования выбранной системой управления версиями.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsOpenForEdit(UnityEngine.Object,System.String&amp;,UnityEditor.StatusQueryOptions)">
      <summary>
        <para>Запросите, открыт ли файл актива для редактирования в системе управления версиями.</para>
      </summary>
      <param name="assetObject">Объект, представляющий актив, статус которого вы хотите запросить.</param>
      <param name="assetOrMetaFilePath">Путь к файлу ресурса или его метафайлу на диске относительно папки проекта.</param>
      <param name="message">Возвращает причину, по которой ресурс не открыт для редактирования.</param>
      <param name="statusOptions">Варианты того, как следует запрашивать систему контроля версий. Эти параметры могут повлиять на скорость и точность запроса. По умолчанию используется StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>Истинно, если актив считается открытым для редактирования выбранной системой управления версиями.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsOpenForEdit(System.String,System.String&amp;,UnityEditor.StatusQueryOptions)">
      <summary>
        <para>Запросите, открыт ли файл актива для редактирования в системе управления версиями.</para>
      </summary>
      <param name="assetObject">Объект, представляющий актив, статус которого вы хотите запросить.</param>
      <param name="assetOrMetaFilePath">Путь к файлу ресурса или его метафайлу на диске относительно папки проекта.</param>
      <param name="message">Возвращает причину, по которой ресурс не открыт для редактирования.</param>
      <param name="statusOptions">Варианты того, как следует запрашивать систему контроля версий. Эти параметры могут повлиять на скорость и точность запроса. По умолчанию используется StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>Истинно, если актив считается открытым для редактирования выбранной системой управления версиями.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsOpenForEdit(UnityEngine.Object)">
      <summary>
        <para>Запросите, открыт ли файл актива для редактирования в системе управления версиями.</para>
      </summary>
      <param name="assetObject">Объект, представляющий актив, статус которого вы хотите запросить.</param>
      <param name="assetOrMetaFilePath">Путь к файлу ресурса или его метафайлу на диске относительно папки проекта.</param>
      <param name="message">Возвращает причину, по которой ресурс не открыт для редактирования.</param>
      <param name="statusOptions">Варианты того, как следует запрашивать систему контроля версий. Эти параметры могут повлиять на скорость и точность запроса. По умолчанию используется StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>Истинно, если актив считается открытым для редактирования выбранной системой управления версиями.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsOpenForEdit(System.String)">
      <summary>
        <para>Запросите, открыт ли файл актива для редактирования в системе управления версиями.</para>
      </summary>
      <param name="assetObject">Объект, представляющий актив, статус которого вы хотите запросить.</param>
      <param name="assetOrMetaFilePath">Путь к файлу ресурса или его метафайлу на диске относительно папки проекта.</param>
      <param name="message">Возвращает причину, по которой ресурс не открыт для редактирования.</param>
      <param name="statusOptions">Варианты того, как следует запрашивать систему контроля версий. Эти параметры могут повлиять на скорость и точность запроса. По умолчанию используется StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>Истинно, если актив считается открытым для редактирования выбранной системой управления версиями.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsOpenForEdit(UnityEngine.Object,System.String&amp;)">
      <summary>
        <para>Запросите, открыт ли файл актива для редактирования в системе управления версиями.</para>
      </summary>
      <param name="assetObject">Объект, представляющий актив, статус которого вы хотите запросить.</param>
      <param name="assetOrMetaFilePath">Путь к файлу ресурса или его метафайлу на диске относительно папки проекта.</param>
      <param name="message">Возвращает причину, по которой ресурс не открыт для редактирования.</param>
      <param name="statusOptions">Варианты того, как следует запрашивать систему контроля версий. Эти параметры могут повлиять на скорость и точность запроса. По умолчанию используется StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>Истинно, если актив считается открытым для редактирования выбранной системой управления версиями.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsOpenForEdit(System.String,System.String&amp;)">
      <summary>
        <para>Запросите, открыт ли файл актива для редактирования в системе управления версиями.</para>
      </summary>
      <param name="assetObject">Объект, представляющий актив, статус которого вы хотите запросить.</param>
      <param name="assetOrMetaFilePath">Путь к файлу ресурса или его метафайлу на диске относительно папки проекта.</param>
      <param name="message">Возвращает причину, по которой ресурс не открыт для редактирования.</param>
      <param name="statusOptions">Варианты того, как следует запрашивать систему контроля версий. Эти параметры могут повлиять на скорость и точность запроса. По умолчанию используется StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>Истинно, если актив считается открытым для редактирования выбранной системой управления версиями.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsOpenForEdit(System.String[],System.Collections.Generic.List`1&lt;System.String&gt;,UnityEditor.StatusQueryOptions)">
      <summary>
        <para>Запросите, какие из предоставленных файлов активов открыты для редактирования в системе управления версиями.</para>
      </summary>
      <param name="assetOrMetaFilePaths">Пути к ресурсам или их метафайлам относительно папки проекта.</param>
      <param name="outNotEditablePaths">Целевой список нередактируемых путей ресурсов.</param>
      <param name="statusQueryOptions">Указывает, как Unity должен запрашивать систему контроля версий. Значение по умолчанию — StatusQueryOptions.UseCachedIfPossible.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsSubAsset(UnityEngine.Object)">
      <summary>
        <para>Является ли актив частью другого актива?</para>
      </summary>
      <param name="obj">Объект актива для запроса.</param>
      <param name="instanceID">Идентификатор экземпляра объекта актива для запроса.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsSubAsset(System.Int32)">
      <summary>
        <para>Является ли актив частью другого актива?</para>
      </summary>
      <param name="obj">Объект актива для запроса.</param>
      <param name="instanceID">Идентификатор экземпляра объекта актива для запроса.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsValidFolder(System.String)">
      <summary>
        <para>Учитывая путь к папке, возвращает true, если она существует, и false в противном случае.</para>
      </summary>
      <param name="path">Путь к папке.</param>
      <returns>
        <para>Возвращает true, если папка существует.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.LoadAllAssetRepresentationsAtPath(System.String)">
      <summary>
        <para>Возвращает все вложенные активы в assetsPath.</para>
      </summary>
      <param name="assetPath">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.LoadAllAssetsAtPath(System.String)">
      <summary>
        <para>Возвращает массив всех активов в assetsPath.</para>
      </summary>
      <param name="assetPath">Путь файловой системы к ресурсу.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.LoadAssetAtPath(System.String,System.Type)">
      <summary>
        <para>Возвращает первый объект актива типа type по заданному пути assetsPath.</para>
      </summary>
      <param name="assetPath">Путь к загружаемому ресурсу.</param>
      <param name="type">Тип данных актива.</param>
      <returns>
        <para>Актив, соответствующий параметрам.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.LoadMainAssetAtPath(System.String)">
      <summary>
        <para>Возвращает основной объект актива в assetsPath.

«Основной» актив — это актив в корне иерархии (например, файл Maya, который может содержать несколько сеток и игровых объектов).</para>
      </summary>
      <param name="assetPath">Путь к загружаемому ресурсу в файловой системе.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.MakeEditable(System.String)">
      <summary>
        <para>Делает файл открытым для редактирования в системе управления версиями.</para>
      </summary>
      <param name="path">Указывает путь к файлу относительно корня проекта.</param>
      <returns>
        <para>Значение true, если Unity успешно сделала файл доступным для редактирования в системе контроля версий. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.MakeEditable(System.String[],System.String,System.Collections.Generic.List`1&lt;System.String&gt;)">
      <summary>
        <para>Создает список файлов, открытых для редактирования в системе контроля версий.</para>
      </summary>
      <param name="paths">Задает массив путей к файлам относительно корня проекта.</param>
      <param name="prompt">Диалоговое окно с предложением показать пользователю, если необходимо выполнить операцию контроля версий. Если значение null (по умолчанию), подсказка не отображается.</param>
      <param name="outNotEditablePaths">Вывести список путей к файлам, которые нельзя сделать редактируемыми.</param>
      <returns>
        <para>Значение true, если Unity успешно сделала все файлы редактируемыми в системе контроля версий.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.MoveAsset(System.String,System.String)">
      <summary>
        <para>Переместите файл актива (или папку) из одной папки в другую.</para>
      </summary>
      <param name="oldPath">Путь, по которому в данный момент находится ресурс.</param>
      <param name="newPath">Путь, по которому следует переместить ресурс.</param>
      <returns>
        <para>Пустая строка, если актив был успешно перемещен, в противном случае сообщение об ошибке.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.MoveAssetsToTrash(System.String[],System.Collections.Generic.List`1&lt;System.String&gt;)">
      <summary>
        <para>Позволяет одновременно перемещать несколько ресурсов или папок в корзину с повышением производительности при управлении версиями.</para>
      </summary>
      <param name="paths">Относительные пути проекта к ресурсам или папкам, которые необходимо удалить.</param>
      <param name="outFailedPaths">Относительные пути проекта, которые не удалось удалить.</param>
      <returns>
        <para>Возвращает true, если все ресурсы в путях были успешно удалены, и false, если какой-либо из указанных путей не существует или не может быть удален.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.MoveAssetToTrash(System.String)">
      <summary>
        <para>Перемещает указанный актив или папку в корзину ОС.</para>
      </summary>
      <param name="path">Относительный путь проекта к удаляемому ресурсу или папке.</param>
      <returns>
        <para>Возвращает true, если актив был успешно удален, и false, если он не существует или не может быть удален.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.OpenAsset(System.Int32)">
      <summary>
        <para>Открывает ресурс со связанным приложением.</para>
      </summary>
      <param name="instanceID">
      </param>
      <param name="lineNumber">
      </param>
      <param name="columnNumber">
      </param>
      <param name="target">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.OpenAsset(System.Int32,System.Int32)">
      <summary>
        <para>Открывает ресурс со связанным приложением.</para>
      </summary>
      <param name="instanceID">
      </param>
      <param name="lineNumber">
      </param>
      <param name="columnNumber">
      </param>
      <param name="target">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.OpenAsset(System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Открывает ресурс со связанным приложением.</para>
      </summary>
      <param name="instanceID">
      </param>
      <param name="lineNumber">
      </param>
      <param name="columnNumber">
      </param>
      <param name="target">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.OpenAsset(UnityEngine.Object)">
      <summary>
        <para>Открывает ресурс со связанным приложением.</para>
      </summary>
      <param name="instanceID">
      </param>
      <param name="lineNumber">
      </param>
      <param name="columnNumber">
      </param>
      <param name="target">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.OpenAsset(UnityEngine.Object,System.Int32)">
      <summary>
        <para>Открывает ресурс со связанным приложением.</para>
      </summary>
      <param name="instanceID">
      </param>
      <param name="lineNumber">
      </param>
      <param name="columnNumber">
      </param>
      <param name="target">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.OpenAsset(UnityEngine.Object,System.Int32,System.Int32)">
      <summary>
        <para>Открывает ресурс со связанным приложением.</para>
      </summary>
      <param name="instanceID">
      </param>
      <param name="lineNumber">
      </param>
      <param name="columnNumber">
      </param>
      <param name="target">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.OpenAsset(UnityEngine.Object[])">
      <summary>
        <para>Открывает актив(ы) со связанным(и) приложением(ями).</para>
      </summary>
      <param name="objects">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.Refresh()">
      <summary>
        <para>Импортируйте все измененные активы.</para>
      </summary>
      <param name="options">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.Refresh(UnityEditor.ImportAssetOptions)">
      <summary>
        <para>Импортируйте все измененные активы.</para>
      </summary>
      <param name="options">
      </param>
    </member>
    <member name="T:UnityEditor.AssetDatabase.RefreshImportMode">
      <summary>
        <para>Параметры для управления использованием редактором параллельных процессов при импорте активов во время обновления базы данных активов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetDatabase.RefreshImportMode.InProcess">
      <summary>
        <para>Все активы импортируются в процессе редактирования и последовательно.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetDatabase.RefreshImportMode.OutOfProcessPerQueue">
      <summary>
        <para>Максимально возможное количество активов импортируется параллельно в рабочих процессах импорта. Очереди импортера и зависимости, о которых сообщает импортер, учитываются.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetDatabase.RefreshSettings">
      <summary>
        <para>Примените ожидающие изменения настроек редактора к конвейеру ресурсов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetDatabase.RegisterCustomDependency(System.String,UnityEngine.Hash128)">
      <summary>
        <para>Позволяет зарегистрировать пользовательскую зависимость, от которой могут зависеть активы. Если вы зарегистрируете пользовательскую зависимость и укажете, что актив зависит от нее, то актив будет повторно импортирован, если пользовательская зависимость изменится.</para>
      </summary>
      <param name="dependency">Имя зависимости. Вы можете использовать любое имя, которое вам нравится, но поскольку эти имена являются глобальными для всех ваших ресурсов, может быть полезно использовать соглашение об именах (например, систему имен на основе путей), чтобы избежать конфликтов с другими именами пользовательских зависимостей.</param>
      <param name="hashOfValue">Значение Hash128 зависимости.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.ReleaseCachedFileHandles">
      <summary>
        <para>Вызов этой функции освободит дескрипторы файлов, кэшированные внутри Unity. Это позволяет безопасно изменять ресурсы или метафайлы, избегая возможных ошибок ввода-вывода при совместном использовании файлов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetDatabase.RemoveAssetBundleName(System.String,System.Boolean)">
      <summary>
        <para>Удалите имя assetsBundle из базы данных активов. Флаг forceRemove используется, чтобы указать, хотите ли вы удалить его, даже если он используется.</para>
      </summary>
      <param name="assetBundleName">Имя assetsBundle, которое вы хотите удалить.</param>
      <param name="forceRemove">Отметьте, чтобы указать, хотите ли вы удалить имя assetsBundle, даже если оно используется.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.RemoveObjectFromAsset(UnityEngine.Object)">
      <summary>
        <para>Удаляет объект из его актива (см. также: AssetDatabase.AddObjectToAsset).</para>
      </summary>
      <param name="objectToRemove">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.RemoveUnusedAssetBundleNames">
      <summary>
        <para>Удалите все неиспользуемые имена assetsBundle из базы данных активов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetDatabase.RenameAsset(System.String,System.String)">
      <summary>
        <para>Переименуйте файл актива.</para>
      </summary>
      <param name="pathName">Путь, по которому в данный момент находится ресурс.</param>
      <param name="newName">Новое имя, которое должно быть присвоено активу.</param>
      <returns>
        <para>Пустая строка, если ассет был успешно переименован, иначе сообщение об ошибке.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.ResetCacheServerReconnectTimer">
      <summary>
        <para>Сбрасывает значения таймера повторного подключения к серверу внутреннего кэша. Значение таймера задержки по умолчанию составляет 1 секунду, а максимальное значение задержки составляет 5 минут. Каждый раз, когда попытка подключения терпит неудачу, значение таймера задержки будет удваиваться, пока максимальное время не достигнет максимального значения.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetDatabase.SaveAssetIfDirty(UnityEngine.Object)">
      <summary>
        <para>Записывает все несохраненные изменения указанного актива на диск.</para>
      </summary>
      <param name="obj">Объект актива, который будет сохранен, если он грязный.</param>
      <param name="guid">Руководство объекта, который нужно сохранить, если он грязный.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.SaveAssetIfDirty(UnityEditor.GUID)">
      <summary>
        <para>Записывает все несохраненные изменения указанного актива на диск.</para>
      </summary>
      <param name="obj">Объект актива, который будет сохранен, если он грязный.</param>
      <param name="guid">Руководство объекта, который нужно сохранить, если он грязный.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.SaveAssets">
      <summary>
        <para>Записывает все несохраненные изменения ресурсов на диск.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetDatabase.SetImporterOverride(System.String)">
      <summary>
        <para>Задает конкретный импортер, который будет использоваться для актива.</para>
      </summary>
      <param name="path">Путь объекта.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.SetLabels(UnityEngine.Object,System.String[])">
      <summary>
        <para>Заменяет этот список ярлыков на объекте.</para>
      </summary>
      <param name="obj">
      </param>
      <param name="labels">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.SetMainObject(UnityEngine.Object,System.String)">
      <summary>
        <para>Указывает, какой объект в файле актива должен стать основным объектом после следующего импорта.</para>
      </summary>
      <param name="mainObject">Объект, который станет главным объектом.</param>
      <param name="assetPath">Путь к файлу актива.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.StartAssetEditing">
      <summary>
        <para>Начинает импорт активов в базу данных активов. Это позволяет сгруппировать несколько импортов активов вместе в один более крупный импорт.

Примечание:

Вызов AssetDatabase.StartAssetEditing() переводит базу данных активов в состояние, которое запрещает импорт до тех пор, пока не будет вызвана AssetDatabase.StopAssetEditing().
Это означает, что если между вызовами двух функций возникнет исключение, база данных активов не будет отвечать.
Поэтому настоятельно рекомендуется размещать вызовы AssetDatabase.StartAssetEditing() и AssetDatabase.StopAssetEditing() внутри
либо блок try..catch, либо блок try..finally по мере необходимости.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetDatabase.StopAssetEditing">
      <summary>
        <para>Прекращает импорт активов в базу данных активов. Это позволяет сгруппировать несколько импортов активов вместе в один более крупный импорт.

Примечание:

Вызов AssetDatabase.StartAssetEditing() переводит базу данных активов в состояние, которое запрещает импорт до тех пор, пока не будет вызвана AssetDatabase.StopAssetEditing().
Это означает, что если между вызовами двух функций возникнет исключение, база данных активов не будет отвечать.
Поэтому настоятельно рекомендуется размещать вызовы AssetDatabase.StartAssetEditing() и AssetDatabase.StopAssetEditing() внутри
либо блок try..catch, либо блок try..finally по мере необходимости.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetDatabase.TryGetGUIDAndLocalFileIdentifier(UnityEngine.Object,System.String&amp;,System.Int32&amp;)">
      <summary>
        <para>Получите GUID и идентификатор локального файла из идентификатора экземпляра объекта.</para>
      </summary>
      <param name="instanceID">InstanceID объекта, для которого требуется получить информацию.</param>
      <param name="obj">Объект, для которого необходимо получить GUID и идентификатор файла.</param>
      <param name="assetRef">Ссылка на ресурс, для которого необходимо получить GUID и идентификатор файла.</param>
      <param name="guid">GUID актива.</param>
      <param name="localId">Идентификатор локального файла этого актива.</param>
      <returns>
        <para>Истина, если guid и идентификатор файла были успешно найдены, в противном случае — ложь.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.TryGetGUIDAndLocalFileIdentifier(System.Int32,System.String&amp;,System.Int32&amp;)">
      <summary>
        <para>Получите GUID и идентификатор локального файла из идентификатора экземпляра объекта.</para>
      </summary>
      <param name="instanceID">InstanceID объекта, для которого требуется получить информацию.</param>
      <param name="obj">Объект, для которого необходимо получить GUID и идентификатор файла.</param>
      <param name="assetRef">Ссылка на ресурс, для которого необходимо получить GUID и идентификатор файла.</param>
      <param name="guid">GUID актива.</param>
      <param name="localId">Идентификатор локального файла этого актива.</param>
      <returns>
        <para>Истина, если guid и идентификатор файла были успешно найдены, в противном случае — ложь.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.TryGetGUIDAndLocalFileIdentifier(UnityEngine.Object,System.String&amp;,System.Int64&amp;)">
      <summary>
        <para>Получите GUID и идентификатор локального файла из идентификатора экземпляра объекта.</para>
      </summary>
      <param name="instanceID">InstanceID объекта, для которого требуется получить информацию.</param>
      <param name="obj">Объект, для которого необходимо получить GUID и идентификатор файла.</param>
      <param name="assetRef">Ссылка на ресурс, для которого необходимо получить GUID и идентификатор файла.</param>
      <param name="guid">GUID актива.</param>
      <param name="localId">Идентификатор локального файла этого актива.</param>
      <returns>
        <para>Истина, если guid и идентификатор файла были успешно найдены, в противном случае — ложь.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.TryGetGUIDAndLocalFileIdentifier(System.Int32,System.String&amp;,System.Int64&amp;)">
      <summary>
        <para>Получите GUID и идентификатор локального файла из идентификатора экземпляра объекта.</para>
      </summary>
      <param name="instanceID">InstanceID объекта, для которого требуется получить информацию.</param>
      <param name="obj">Объект, для которого необходимо получить GUID и идентификатор файла.</param>
      <param name="assetRef">Ссылка на ресурс, для которого необходимо получить GUID и идентификатор файла.</param>
      <param name="guid">GUID актива.</param>
      <param name="localId">Идентификатор локального файла этого актива.</param>
      <returns>
        <para>Истина, если guid и идентификатор файла были успешно найдены, в противном случае — ложь.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.TryGetGUIDAndLocalFileIdentifier(UnityEngine.LazyLoadReference`1&lt;T&gt;,System.String&amp;,System.Int64&amp;)">
      <summary>
        <para>Получите GUID и идентификатор локального файла из идентификатора экземпляра объекта.</para>
      </summary>
      <param name="instanceID">InstanceID объекта, для которого требуется получить информацию.</param>
      <param name="obj">Объект, для которого необходимо получить GUID и идентификатор файла.</param>
      <param name="assetRef">Ссылка на ресурс, для которого необходимо получить GUID и идентификатор файла.</param>
      <param name="guid">GUID актива.</param>
      <param name="localId">Идентификатор локального файла этого актива.</param>
      <returns>
        <para>Истина, если guid и идентификатор файла были успешно найдены, в противном случае — ложь.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.UnregisterCustomDependencyPrefixFilter(System.String)">
      <summary>
        <para>Удаляет пользовательские зависимости, соответствующие prefixFilter.</para>
      </summary>
      <param name="prefixFilter">Фильтр префиксов для отмены регистрации пользовательских зависимостей.</param>
      <returns>
        <para>Количество удаленных пользовательских зависимостей.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.ValidateMoveAsset(System.String,System.String)">
      <summary>
        <para>Проверяет, можно ли переместить файл актива из одной папки в другую. (без фактического перемещения файла).</para>
      </summary>
      <param name="oldPath">Путь, по которому в данный момент находится ресурс.</param>
      <param name="newPath">Путь, по которому следует переместить ресурс.</param>
      <returns>
        <para>Пустая строка, если актив можно переместить, иначе сообщение об ошибке.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.WriteImportSettingsIfDirty(System.String)">
      <summary>
        <para>Записывает настройки импорта на диск.</para>
      </summary>
      <param name="path">
      </param>
    </member>
    <member name="T:UnityEditor.AssetDeleteResult">
      <summary>
        <para>Результат операции удаления актива</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetDeleteResult.DidDelete">
      <summary>
        <para>Сообщает Unity, что ресурс был удален обратным вызовом. Unity не будет пытаться удалить ресурс, но удалит кешированную версию и файл предварительного просмотра.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetDeleteResult.DidNotDelete">
      <summary>
        <para>Сообщает внутренней реализации, что обратный вызов не удалил ресурс. Ресурс будет удален внутренней реализацией.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetDeleteResult.FailedDelete">
      <summary>
        <para>Сообщает Unity, что файл нельзя удалить, и Unity должна оставить его в покое.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AssetImporter">
      <summary>
        <para>Базовый класс, от которого происходят средства импорта активов для определенных типов активов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporter.assetBundleName">
      <summary>
        <para>Получите или задайте имя AssetBundle.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporter.assetBundleVariant">
      <summary>
        <para>Получите или задайте вариант AssetBundle.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporter.assetPath">
      <summary>
        <para>Путь к активу для этого импортера. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporter.importSettingsMissing">
      <summary>
        <para>Значение true, если с импортированным ресурсом не предоставлен метафайл.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporter.userData">
      <summary>
        <para>Получить или установить любые пользовательские данные.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporter.AddRemap(UnityEditor.AssetImporter/SourceAssetIdentifier,UnityEngine.Object)">
      <summary>
        <para>Сопоставьте субактив из импортированного актива (например, файла FBX) с внешним активом того же типа.</para>
      </summary>
      <param name="identifier">Идентификатор вспомогательного актива.</param>
      <param name="externalObject">Объект, который необходимо сопоставить с внутренним объектом. Может принадлежать другому префабу или активу, но не тому активу, который изменяется.</param>
    </member>
    <member name="M:UnityEditor.AssetImporter.GetAtPath(System.String)">
      <summary>
        <para>Извлекает средство импорта ресурса для ресурса по пути.</para>
      </summary>
      <param name="path">
      </param>
    </member>
    <member name="M:UnityEditor.AssetImporter.GetExternalObjectMap">
      <summary>
        <para>Получает копию карты внешних объектов, используемой AssetImporter.</para>
      </summary>
      <returns>
        <para>Сопоставление между подактивом и внешним активом.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporter.RemoveRemap(UnityEditor.AssetImporter/SourceAssetIdentifier)">
      <summary>
        <para>Удаляет элемент с карты внешних объектов.</para>
      </summary>
      <param name="identifier">Идентификатор вспомогательного актива.</param>
      <returns>
        <para>Возвращает true, если элемент был удален, иначе false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporter.SaveAndReimport">
      <summary>
        <para>Сохраните настройки средства импорта ресурсов, если средство импорта ресурсов загрязнено.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporter.SetAssetBundleNameAndVariant(System.String,System.String)">
      <summary>
        <para>Задайте имя и вариант AssetBundle.</para>
      </summary>
      <param name="assetBundleName">Имя AssetBundle.</param>
      <param name="assetBundleVariant">Вариант AssetBundle.</param>
    </member>
    <member name="T:UnityEditor.AssetImporter.SourceAssetIdentifier">
      <summary>
        <para>Представляет уникальный идентификатор субактива, встроенного в импортированный актив (например, файл FBX).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetImporter.SourceAssetIdentifier.name">
      <summary>
        <para>Имя Актива.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetImporter.SourceAssetIdentifier.type">
      <summary>
        <para>Тип Актива.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporter.SourceAssetIdentifier.#ctor(UnityEngine.Object)">
      <summary>
        <para>Создает SourceAssetIdentifier.</para>
      </summary>
      <param name="asset">Подактив, встроенный в импортированный актив.</param>
      <param name="type">Тип субактива, встроенного в импортированный актив.</param>
      <param name="name">Имя субактива, встроенного в импортированный актив.</param>
    </member>
    <member name="M:UnityEditor.AssetImporter.SourceAssetIdentifier.#ctor(System.Type,System.String)">
      <summary>
        <para>Создает SourceAssetIdentifier.</para>
      </summary>
      <param name="asset">Подактив, встроенный в импортированный актив.</param>
      <param name="type">Тип субактива, встроенного в импортированный актив.</param>
      <param name="name">Имя субактива, встроенного в импортированный актив.</param>
    </member>
    <member name="M:UnityEditor.AssetImporter.SupportsRemappedAssetType(System.Type)">
      <summary>
        <para>Проверяет, поддерживает ли AssetImporter переназначение данного типа активов.</para>
      </summary>
      <param name="type">Тип объекта для проверки.</param>
      <returns>
        <para>Возвращает true, если импортер поддерживает переназначение данного типа. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.AssetImporters.AssetImportContext">
      <summary>
        <para>Определяет контекст импорта для импортеров по сценарию во время события импорта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.AssetImportContext.assetPath">
      <summary>
        <para>Путь к исходному файлу актива для импорта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.AssetImportContext.mainObject">
      <summary>
        <para>Основной объект, заданный в AssetImportContext.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.AssetImportContext.selectedBuildTarget">
      <summary>
        <para>Возвращает текущую цель сборки и создает зависимость от целевой платформы в импортере по сценарию.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImportContext.AddObjectToAsset(System.String,UnityEngine.Object)">
      <summary>
        <para>Добавляет объект в результат операции импорта.</para>
      </summary>
      <param name="identifier">Уникальный идентификатор, связанный с этим объектом.</param>
      <param name="obj">Объект Unity для добавления к активу.</param>
      <param name="thumbnail">Необязательная 2D-текстура для использования в качестве миниатюры для этого объекта.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImportContext.AddObjectToAsset(System.String,UnityEngine.Object,UnityEngine.Texture2D)">
      <summary>
        <para>Добавляет объект в результат операции импорта.</para>
      </summary>
      <param name="identifier">Уникальный идентификатор, связанный с этим объектом.</param>
      <param name="obj">Объект Unity для добавления к активу.</param>
      <param name="thumbnail">Необязательная 2D-текстура для использования в качестве миниатюры для этого объекта.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImportContext.DependsOnArtifact(System.String)">
      <summary>
        <para>Установить зависимость артефакта от актива.</para>
      </summary>
      <param name="path">Путь актива, артефакт которого должен быть зависимостью. Примечание. Хотя зависимостью является артефакт (результат импорта), который хранится в папке библиотеки, этот параметр представляет собой путь к активу в папке «Активы», а не путь к артефакту в папке «Библиотека».</param>
      <param name="guid">Руководство зависимости артефакта.</param>
      <param name="key">Ключ артефакта зависимости артефакта.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImportContext.DependsOnArtifact(UnityEditor.GUID)">
      <summary>
        <para>Установить зависимость артефакта от актива.</para>
      </summary>
      <param name="path">Путь актива, артефакт которого должен быть зависимостью. Примечание. Хотя зависимостью является артефакт (результат импорта), который хранится в папке библиотеки, этот параметр представляет собой путь к активу в папке «Активы», а не путь к артефакту в папке «Библиотека».</param>
      <param name="guid">Руководство зависимости артефакта.</param>
      <param name="key">Ключ артефакта зависимости артефакта.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImportContext.DependsOnArtifact(UnityEditor.Experimental.ArtifactKey)">
      <summary>
        <para>Установить зависимость артефакта от актива.</para>
      </summary>
      <param name="path">Путь актива, артефакт которого должен быть зависимостью. Примечание. Хотя зависимостью является артефакт (результат импорта), который хранится в папке библиотеки, этот параметр представляет собой путь к активу в папке «Активы», а не путь к артефакту в папке «Библиотека».</param>
      <param name="guid">Руководство зависимости артефакта.</param>
      <param name="key">Ключ артефакта зависимости артефакта.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImportContext.DependsOnCustomDependency(System.String)">
      <summary>
        <para>Позволяет указать, что актив имеет пользовательскую зависимость.</para>
      </summary>
      <param name="dependency">Имя зависимости. Вы можете использовать любое имя, которое вам нравится, но поскольку эти имена являются глобальными для всех ваших ресурсов, может быть полезно использовать соглашение об именах (например, систему имен на основе пути, как в примере ниже), чтобы избежать конфликтов с другими именами пользовательских зависимостей. .</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImportContext.DependsOnSourceAsset(System.String)">
      <summary>
        <para>Позволяет указать, что актив напрямую зависит от исходного файла другого актива (в отличие от результата импорта другого актива).</para>
      </summary>
      <param name="path">Путь исходной зависимости.</param>
      <param name="guid">GUID зависимости исходного ресурса.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImportContext.DependsOnSourceAsset(UnityEditor.GUID)">
      <summary>
        <para>Позволяет указать, что актив напрямую зависит от исходного файла другого актива (в отличие от результата импорта другого актива).</para>
      </summary>
      <param name="path">Путь исходной зависимости.</param>
      <param name="guid">GUID зависимости исходного ресурса.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImportContext.GetArtifactFilePath(UnityEditor.GUID,System.String)">
      <summary>
        <para>Возвращает путь к файлу артефакта, созданному другим средством импорта, и добавляет зависимость к этому файлу.</para>
      </summary>
      <param name="guid">GUID зависимости файла артефакта.</param>
      <param name="key">Ключ артефакта зависимости файла артефакта.</param>
      <param name="fileName">Имя файла артефакта, от которого зависит. См. [[AssetImportContext.GetOutputArtifactFilePath.</param>
      <returns>
        <para>Путь внутри папки библиотеки, из которого можно прочитать содержимое запрошенного файла артефакта.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImportContext.GetArtifactFilePath(UnityEditor.Experimental.ArtifactKey,System.String)">
      <summary>
        <para>Возвращает путь к файлу артефакта, созданному другим средством импорта, и добавляет зависимость к этому файлу.</para>
      </summary>
      <param name="guid">GUID зависимости файла артефакта.</param>
      <param name="key">Ключ артефакта зависимости файла артефакта.</param>
      <param name="fileName">Имя файла артефакта, от которого зависит. См. [[AssetImportContext.GetOutputArtifactFilePath.</param>
      <returns>
        <para>Путь внутри папки библиотеки, из которого можно прочитать содержимое запрошенного файла артефакта.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImportContext.GetArtifactFilePath(System.String,System.String)">
      <summary>
        <para>Возвращает путь к файлу артефакта, созданному другим средством импорта, и добавляет зависимость к этому файлу и пути к исходному ресурсу.</para>
      </summary>
      <param name="path">Путь актива, файл артефакта которого должен быть зависимостью. Примечание. Хотя зависимостью является файл артефакта (результат импорта), который хранится в папке библиотеки, этот параметр представляет собой путь к ресурсу в папке ресурсов, а не путь к файлу артефакта в папке библиотеки.</param>
      <param name="fileName">Имя файла артефакта, от которого зависит. См. [[AssetImportContext.GetOutputArtifactFilePath.</param>
      <returns>
        <para>Путь внутри папки библиотеки, из которого можно прочитать содержимое запрошенного файла артефакта.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImportContext.GetObjects(System.Collections.Generic.List`1&lt;UnityEngine.Object&gt;)">
      <summary>
        <para>Получает список объектов, установленных в AssetImportContext.</para>
      </summary>
      <param name="objects">Список объектов для заполнения контекстом.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImportContext.GetOutputArtifactFilePath(System.String)">
      <summary>
        <para>Возвращает путь для записи нового файла артефакта с заданным именем файла.</para>
      </summary>
      <param name="fileName">Уникальный идентификатор для ссылки на этот файл артефакта.</param>
      <returns>
        <para>Путь к файлу, который можно использовать для создания нового файла артефакта.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImportContext.GetResultPath(System.String)">
      <summary>
        <para>Возвращает путь для сохранения результата импорта для данного расширения.</para>
      </summary>
      <param name="extension">Строка расширения.</param>
      <returns>
        <para>Путь для сохранения результата для данного расширения.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImportContext.LogImportError(System.String,UnityEngine.Object)">
      <summary>
        <para>Регистрирует сообщение об ошибке, обнаруженное во время импорта.</para>
      </summary>
      <param name="msg">Сообщение об ошибке.</param>
      <param name="obj">Необязательный объект, на который нацелена ошибка.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImportContext.LogImportWarning(System.String,UnityEngine.Object)">
      <summary>
        <para>Регистрирует предупреждающее сообщение, обнаруженное во время импорта.</para>
      </summary>
      <param name="msg">Предупреждающее сообщение.</param>
      <param name="obj">Необязательный объект, на который направлено предупреждение.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImportContext.SetMainObject(UnityEngine.Object)">
      <summary>
        <para>Устанавливает основной объект для импорта.</para>
      </summary>
      <param name="obj">Объект, который будет установлен в качестве основного объекта. Этот объект уже должен быть добавлен с помощью метода AddObjectToAsset.</param>
    </member>
    <member name="T:UnityEditor.AssetImporters.AssetImporterEditor">
      <summary>
        <para>Редактор по умолчанию для всех настроек импортера активов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.AssetImporterEditor.extraDataSerializedObject">
      <summary>
        <para>SerializedObject, представляющий extraDataTarget или extraDataTargets объекта AssetImporterEditor.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.AssetImporterEditor.extraDataTarget">
      <summary>
        <para>Объект дополнительных данных, связанный с Editor.target.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.AssetImporterEditor.extraDataTargets">
      <summary>
        <para>Массив объектов, связанных с каждым Editor.targets.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.AssetImporterEditor.extraDataType">
      <summary>
        <para>Переопределите это свойство, чтобы возвращать тип, наследуемый от ScriptableObject. Это делает AssetImporterEditor осведомленным о сериализованных данных за пределами Importer.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.AssetImporterEditor.needsApplyRevert">
      <summary>
        <para>Требуется ли метод ApplyRevertGUI для рисования в Инспекторе.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.AssetImporterEditor.showImportedObject">
      <summary>
        <para>Должен ли импортируемый объект отображаться в виде отдельного редактора?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.AssetImporterEditor.useAssetDrawPreview">
      <summary>
        <para>Определяет, обрабатывается ли предварительный просмотр актива AssetEditor или Importer DrawPreview</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImporterEditor.Apply">
      <summary>
        <para>Сохраняет любые изменения из элемента управления редактора в объект настроек импорта актива.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImporterEditor.ApplyAndImport">
      <summary>
        <para>Сохраняет изменения пользовательского интерфейса редактора в объект настроек и импортирует актив.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImporterEditor.ApplyButton">
      <summary>
        <para>Реализует кнопку «Применить» инспектора.</para>
      </summary>
      <returns>
        <para>Возвращает true, если новые настройки были успешно применены.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImporterEditor.ApplyRevertGUI">
      <summary>
        <para>Добавьте в редактор кнопки «Применить» и «Отменить».</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImporterEditor.Awake">
      <summary>
        <para>Эта функция вызывается при запуске сценария Editor.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImporterEditor.CanApply">
      <summary>
        <para>Определяет, можно ли применить изменения к параметрам импорта.</para>
      </summary>
      <returns>
        <para>Возвращает true, если отредактированные параметры импорта не содержат ошибок и могут быть применены. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImporterEditor.HasModified">
      <summary>
        <para>Определите, были ли изменены настройки импорта.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImporterEditor.InitializeExtraDataInstance(UnityEngine.Object,System.Int32)">
      <summary>
        <para>Этот метод вызывается во время процесса инициализации редактора, после пробуждения и до OnEnable.</para>
      </summary>
      <param name="extraData">Экземпляр ScriptableObject типа, предоставляемого AssetImporterEditor.extraDataType.</param>
      <param name="targetIndex">Соответствующий индекс Editor.targets предоставленных дополнительных данных.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImporterEditor.OnApplyRevertGUI">
      <summary>
        <para>Обработайте кнопки «Применить» и «Отменить».</para>
      </summary>
      <returns>
        <para>Возвращает true, если новые настройки были успешно применены.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImporterEditor.OnDisable">
      <summary>
        <para>Эта функция вызывается, когда объект редактора выходит за пределы области видимости.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImporterEditor.OnEnable">
      <summary>
        <para>Эта функция вызывается при загрузке объекта.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImporterEditor.OnInspectorGUI">
      <summary>
        <para>Переопределите этот метод, чтобы создать собственный графический интерфейс Inpsector для ScriptedImporter.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImporterEditor.ResetValues">
      <summary>
        <para>Сбросьте настройки импорта до последних сохраненных значений.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImporterEditor.RevertButton">
      <summary>
        <para>Реализует кнопку «Вернуть» инспектора.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AssetImporters.CameraDescription">
      <summary>
        <para>Представляет информацию о камере из импортированного файла.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.CameraDescription.#ctor">
      <summary>
        <para>Инициализирует и возвращает экземпляр CameraDescription.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.CameraDescription.Dispose">
      <summary>
        <para>Удаляет экземпляр CameraDescription. Это очищает все ресурсы, которые использовал экземпляр.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.CameraDescription.GetFloatPropertyNames(System.Collections.Generic.List`1&lt;System.String&gt;)">
      <summary>
        <para>Извлекает имена свойств типа float для этой камеры.</para>
      </summary>
      <param name="names">Список извлеченных имен свойств.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.CameraDescription.GetIntPropertyNames(System.Collections.Generic.List`1&lt;System.String&gt;)">
      <summary>
        <para>Извлекает имена свойств типа int для этой камеры.</para>
      </summary>
      <param name="names">Список извлеченных имен свойств.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.CameraDescription.GetStringPropertyNames(System.Collections.Generic.List`1&lt;System.String&gt;)">
      <summary>
        <para>Извлекает имена свойств строкового типа для этой камеры.</para>
      </summary>
      <param name="names">Список извлеченных имен свойств.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.CameraDescription.GetVector4PropertyNames(System.Collections.Generic.List`1&lt;System.String&gt;)">
      <summary>
        <para>Извлекает имена свойств типа Vector4 для этой камеры.</para>
      </summary>
      <param name="names">Список извлеченных имен свойств.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.CameraDescription.HasAnimationCurve(System.String)">
      <summary>
        <para>Проверяет, анимировано ли свойство камеры в каком-либо AnimationClip.</para>
      </summary>
      <param name="propertyName">Имя свойства камеры.</param>
      <returns>
        <para>Возвращает true, если свойство камеры анимировано. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.CameraDescription.HasAnimationCurveInClip(System.String,System.String)">
      <summary>
        <para>Проверяет, анимировано ли свойство камеры в определенном AnimationClip.</para>
      </summary>
      <param name="propertyName">Имя анимированного свойства камеры.</param>
      <param name="clipName">Имя AnimationClip.</param>
      <returns>
        <para>Возвращает true, если свойство камеры анимировано. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.CameraDescription.TryGetAnimationCurve(System.String,System.String,UnityEngine.AnimationCurve&amp;)">
      <summary>
        <para>Извлекает AnimationCurve для свойства анимированной камеры в определенном AnimationClip.</para>
      </summary>
      <param name="clipName">Имя AnimationClip.</param>
      <param name="propertyName">Имя свойства камеры.</param>
      <param name="value">Полученная AnimationCurve, если она существует для указанного свойства камеры.</param>
      <returns>
        <para>Возвращает true, если свойство камеры анимировано. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.CameraDescription.TryGetProperty(System.String,System.Single&amp;)">
      <summary>
        <para>Получает значение указанного свойства камеры.</para>
      </summary>
      <param name="propertyName">Имя свойства.</param>
      <param name="value">Полученное значение.</param>
      <returns>
        <para>Возвращает true, если свойство существует на камере. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.CameraDescription.TryGetProperty(System.String,UnityEngine.Vector4&amp;)">
      <summary>
        <para>Получает значение указанного свойства камеры.</para>
      </summary>
      <param name="propertyName">Имя свойства.</param>
      <param name="value">Полученное значение.</param>
      <returns>
        <para>Возвращает true, если свойство существует на камере. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.CameraDescription.TryGetProperty(System.String,System.String&amp;)">
      <summary>
        <para>Получает значение указанного свойства камеры.</para>
      </summary>
      <param name="propertyName">Имя свойства.</param>
      <param name="value">Полученное значение.</param>
      <returns>
        <para>Возвращает true, если свойство существует на камере. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.CameraDescription.TryGetProperty(System.String,System.Int32&amp;)">
      <summary>
        <para>Получает значение указанного свойства камеры.</para>
      </summary>
      <param name="propertyName">Имя свойства.</param>
      <param name="value">Полученное значение.</param>
      <returns>
        <para>Возвращает true, если свойство существует на камере. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.AssetImporters.CollectImportedDependenciesAttribute">
      <summary>
        <para>Используйте этот атрибут метода, чтобы указать, какие методы объявляют зависимости от импортированных активов. Методы вызываются AssetDatabase во время импорта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.CollectImportedDependenciesAttribute.importerType">
      <summary>
        <para>Тип модуля импорта, для которого объявлен метод получения импортированных зависимостей.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.CollectImportedDependenciesAttribute.version">
      <summary>
        <para>Версия импортированного получателя зависимостей.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.CollectImportedDependenciesAttribute.#ctor(System.Type,System.UInt32)">
      <summary>
        <para>Используйте атрибут CollectImportedDependencies для объявления методов получения для импортированных зависимостей.</para>
      </summary>
      <param name="importerType">Тип импортера, для которого объект получения вызывается AssetDatabase.</param>
      <param name="version">Версия получателя импортированных зависимостей.</param>
    </member>
    <member name="T:UnityEditor.AssetImporters.FBXMaterialDescriptionPreprocessor">
      <summary>
        <para>Это реализация по умолчанию для AssetPostProcessor.OnPreprocessMaterialDescription, эта реализация преобразует описания материалов, импортированные из активов FBX, в материалы для внутреннего конвейера рендеринга.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AssetImporters.LightDescription">
      <summary>
        <para>Представляет информацию о свете из импортированного файла.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.LightDescription.#ctor">
      <summary>
        <para>Инициализирует и возвращает экземпляр LightDescription.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.LightDescription.Dispose">
      <summary>
        <para>Удаляет экземпляр LightDescription. Это очищает все ресурсы, которые использовал экземпляр.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.LightDescription.GetFloatPropertyNames(System.Collections.Generic.List`1&lt;System.String&gt;)">
      <summary>
        <para>Извлекает имена свойств типа float для этого источника света.</para>
      </summary>
      <param name="names">Список извлеченных имен свойств.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.LightDescription.GetIntPropertyNames(System.Collections.Generic.List`1&lt;System.String&gt;)">
      <summary>
        <para>Извлекает имена свойств типа int для этого источника света.</para>
      </summary>
      <param name="names">Список извлеченных имен свойств.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.LightDescription.GetStringPropertyNames(System.Collections.Generic.List`1&lt;System.String&gt;)">
      <summary>
        <para>Извлекает имена свойств строкового типа для этого источника света.</para>
      </summary>
      <param name="names">Список извлеченных имен свойств.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.LightDescription.GetVector4PropertyNames(System.Collections.Generic.List`1&lt;System.String&gt;)">
      <summary>
        <para>Получает имена свойств типа Vector4 для этого источника света.</para>
      </summary>
      <param name="names">Список извлеченных имен свойств.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.LightDescription.HasAnimationCurve(System.String)">
      <summary>
        <para>Проверяет, анимировано ли свойство света в каком-либо AnimationClip.</para>
      </summary>
      <param name="propertyName">Имя свойства света.</param>
      <returns>
        <para>Возвращает true, если свойство света анимировано. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.LightDescription.HasAnimationCurveInClip(System.String,System.String)">
      <summary>
        <para>Проверяет, анимировано ли свойство света в определенном AnimationClip.</para>
      </summary>
      <param name="propertyName">Имя анимированного свойства источника света.</param>
      <param name="clipName">Имя AnimationClip.</param>
      <returns>
        <para>Возвращает true, если свойство света анимировано. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.LightDescription.TryGetAnimationCurve(System.String,System.String,UnityEngine.AnimationCurve&amp;)">
      <summary>
        <para>Извлекает AnimationCurve для свойства анимированного света в определенном AnimationClip.</para>
      </summary>
      <param name="clipName">Имя AnimationClip.</param>
      <param name="propertyName">Имя свойства света.</param>
      <param name="value">Полученная AnimationCurve, если она существует для указанного свойства освещения.</param>
      <returns>
        <para>Возвращает true, если свойство света анимировано. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.LightDescription.TryGetProperty(System.String,System.Single&amp;)">
      <summary>
        <para>Получает значение указанного свойства света.</para>
      </summary>
      <param name="propertyName">Имя свойства.</param>
      <param name="value">Полученное значение.</param>
      <returns>
        <para>Возвращает true, если свойство существует в источнике света. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.LightDescription.TryGetProperty(System.String,UnityEngine.Vector4&amp;)">
      <summary>
        <para>Получает значение указанного свойства света.</para>
      </summary>
      <param name="propertyName">Имя свойства.</param>
      <param name="value">Полученное значение.</param>
      <returns>
        <para>Возвращает true, если свойство существует в источнике света. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.LightDescription.TryGetProperty(System.String,System.String&amp;)">
      <summary>
        <para>Получает значение указанного свойства света.</para>
      </summary>
      <param name="propertyName">Имя свойства.</param>
      <param name="value">Полученное значение.</param>
      <returns>
        <para>Возвращает true, если свойство существует в источнике света. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.LightDescription.TryGetProperty(System.String,System.Int32&amp;)">
      <summary>
        <para>Получает значение указанного свойства света.</para>
      </summary>
      <param name="propertyName">Имя свойства.</param>
      <param name="value">Полученное значение.</param>
      <returns>
        <para>Возвращает true, если свойство существует в источнике света. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.AssetImporters.MaterialDescription">
      <summary>
        <para>Содержит набор типизированных свойств для описания ввода текстуры в MaterialDescription.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.MaterialDescription.materialName">
      <summary>
        <para>Название материала</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.MaterialDescription.GetFloatPropertyNames(System.Collections.Generic.List`1&lt;System.String&gt;)">
      <summary>
        <para>Извлекает имена свойств типа float для этого материала.</para>
      </summary>
      <param name="names">Список извлеченных имен свойств.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.MaterialDescription.GetStringPropertyNames(System.Collections.Generic.List`1&lt;System.String&gt;)">
      <summary>
        <para>Извлекает имена свойств строкового типа для этого материала.</para>
      </summary>
      <param name="names">Список извлеченных имен свойств.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.MaterialDescription.GetTexturePropertyNames(System.Collections.Generic.List`1&lt;System.String&gt;)">
      <summary>
        <para>Получает имена свойств типа TextureDescription для этого материала.</para>
      </summary>
      <param name="names">Список извлеченных имен свойств.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.MaterialDescription.GetVector4PropertyNames(System.Collections.Generic.List`1&lt;System.String&gt;)">
      <summary>
        <para>Получает имена свойств типа Vector4 для этого материала.</para>
      </summary>
      <param name="names">Список извлеченных имен свойств.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.MaterialDescription.HasAnimationCurve(System.String)">
      <summary>
        <para>Проверяет, анимировано ли свойство материала в каком-либо AnimationClip.</para>
      </summary>
      <param name="propertyName">Имя свойства материала.</param>
      <returns>
        <para>Возвращает true, если свойство материала анимировано. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.MaterialDescription.HasAnimationCurveInClip(System.String,System.String)">
      <summary>
        <para>Проверяет, анимировано ли свойство материала в конкретном AnimationClip.</para>
      </summary>
      <param name="propertyName">Имя анимированного свойства материала.</param>
      <param name="clipName">Имя AnimationClip.</param>
      <returns>
        <para>Возвращает true, если свойство материала анимировано. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.MaterialDescription.TryGetAnimationCurve(System.String,System.String,UnityEngine.AnimationCurve&amp;)">
      <summary>
        <para>Извлекает AnimationCurve для свойства анимированного материала в определенном AnimationClip.</para>
      </summary>
      <param name="clipName">Имя AnimationClip.</param>
      <param name="propertyName">Имя свойства материала.</param>
      <param name="value">Полученная AnimationCurve, если она существует для указанного свойства материала.</param>
      <returns>
        <para>Возвращает true, если свойство материала анимировано. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.MaterialDescription.TryGetProperty(System.String,System.Single&amp;)">
      <summary>
        <para>Извлекает значение указанного свойства материала.</para>
      </summary>
      <param name="propertyName">Имя свойства.</param>
      <param name="value">Полученное значение.</param>
      <returns>
        <para>Возвращает true, если свойство существует в материале. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.MaterialDescription.TryGetProperty(System.String,UnityEngine.Vector4&amp;)">
      <summary>
        <para>Извлекает значение указанного свойства материала.</para>
      </summary>
      <param name="propertyName">Имя свойства.</param>
      <param name="value">Полученное значение.</param>
      <returns>
        <para>Возвращает true, если свойство существует в материале. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.MaterialDescription.TryGetProperty(System.String,System.String&amp;)">
      <summary>
        <para>Извлекает значение указанного свойства материала.</para>
      </summary>
      <param name="propertyName">Имя свойства.</param>
      <param name="value">Полученное значение.</param>
      <returns>
        <para>Возвращает true, если свойство существует в материале. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.MaterialDescription.TryGetProperty(System.String,UnityEditor.AssetImporters.TexturePropertyDescription&amp;)">
      <summary>
        <para>Извлекает значение указанного свойства материала.</para>
      </summary>
      <param name="propertyName">Имя свойства.</param>
      <param name="value">Полученное значение.</param>
      <returns>
        <para>Возвращает true, если свойство существует в материале. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.AssetImporters.ScriptedImporter">
      <summary>
        <para>Абстрактный базовый класс для пользовательских средств импорта активов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.ScriptedImporter.OnImportAsset(UnityEditor.AssetImporters.AssetImportContext)">
      <summary>
        <para>Этот метод должен быть переопределен производным классом и вызывается конвейером ресурсов для импорта файлов.</para>
      </summary>
      <param name="ctx">Этот аргумент содержит всю контекстуальную информацию, необходимую для обработки события импорта, а также используется настраиваемым импортером для сохранения результирующего объекта Unity.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.ScriptedImporter.SupportsRemappedAssetType(System.Type)">
      <summary>
        <para>Переопределите этот метод, если ваш ScriptedImporter поддерживает переназначение определенных типов ресурсов.</para>
      </summary>
      <param name="type">Тип объекта для проверки.</param>
      <returns>
        <para>Возвращает true, если импортер поддерживает переназначение данного типа. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.AssetImporters.ScriptedImporterAttribute">
      <summary>
        <para>Атрибут класса, используемый для регистрации пользовательского импортера активов, полученного из ScriptedImporter, с конвейером импорта активов Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.ScriptedImporterAttribute.fileExtensions">
      <summary>
        <para>Список расширений имен файлов (не включая начальный символ точки), которые обрабатывает импортер по сценарию.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.ScriptedImporterAttribute.importQueuePriority">
      <summary>
        <para>Позволяет управлять порядком импорта активов в зависимости от типа. Положительные значения задерживают обработку исходных файлов ресурсов, а отрицательные значения переводят их в более ранний этап процесса импорта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.ScriptedImporterAttribute.overrideFileExtensions">
      <summary>
        <para>Список расширений имен файлов (не включая начальный символ точки), которые импортер по сценарию может обрабатывать в дополнение к расширениям имен файлов по умолчанию.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.ScriptedImporterAttribute.version">
      <summary>
        <para>Номер версии модуля импорта, который используется уровнем импорта для обнаружения новой версии модуля импорта и запуска повторного импорта при возникновении таких событий, чтобы применить последние изменения, внесенные в скрипт imrpoter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetImporters.ScriptedImporterAttribute.AllowCaching">
      <summary>
        <para>Включить загрузку и загрузку сервера кэширования.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetImporters.ScriptedImporterAttribute.AutoSelect">
      <summary>
        <para>Определяет, будет ли автоматически выбран импортер для указанных расширений.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.ScriptedImporterAttribute.#ctor(System.Int32,System.String)">
      <summary>
        <para>Используйте атрибут ScriptedImporter, чтобы зарегистрировать пользовательский импортер, производный от ScriptedImporter, с конвейером импорта активов Unity.</para>
      </summary>
      <param name="version">Число, которое используется конвейером импорта для обнаружения новых версий скрипта импортера. Изменение этого числа вызовет повторный импорт всех ресурсов, соответствующих указанным расширениям.</param>
      <param name="exts">Список расширений имен файлов (не включая начальный символ точки), которые обрабатывает импортер по сценарию.</param>
      <param name="ext">Одно расширение имени файла (не включая начальный символ точки), которое обрабатывает импортер по сценарию.</param>
      <param name="importQueueOffset">Дает контроль над порядком импорта активов на основе типов. Положительные значения задерживают обработку исходных файлов ресурсов, а отрицательные значения переводят их в более ранний этап процесса импорта.</param>
      <param name="overrideExts">Список расширений имен файлов (не включая начальный символ точки), которые импортер по сценарию может обрабатывать в дополнение к расширениям имен файлов по умолчанию.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.ScriptedImporterAttribute.#ctor(System.Int32,System.String,System.Int32)">
      <summary>
        <para>Используйте атрибут ScriptedImporter, чтобы зарегистрировать пользовательский импортер, производный от ScriptedImporter, с конвейером импорта активов Unity.</para>
      </summary>
      <param name="version">Число, которое используется конвейером импорта для обнаружения новых версий скрипта импортера. Изменение этого числа вызовет повторный импорт всех ресурсов, соответствующих указанным расширениям.</param>
      <param name="exts">Список расширений имен файлов (не включая начальный символ точки), которые обрабатывает импортер по сценарию.</param>
      <param name="ext">Одно расширение имени файла (не включая начальный символ точки), которое обрабатывает импортер по сценарию.</param>
      <param name="importQueueOffset">Дает контроль над порядком импорта активов на основе типов. Положительные значения задерживают обработку исходных файлов ресурсов, а отрицательные значения переводят их в более ранний этап процесса импорта.</param>
      <param name="overrideExts">Список расширений имен файлов (не включая начальный символ точки), которые импортер по сценарию может обрабатывать в дополнение к расширениям имен файлов по умолчанию.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.ScriptedImporterAttribute.#ctor(System.Int32,System.String[])">
      <summary>
        <para>Используйте атрибут ScriptedImporter, чтобы зарегистрировать пользовательский импортер, производный от ScriptedImporter, с конвейером импорта активов Unity.</para>
      </summary>
      <param name="version">Число, которое используется конвейером импорта для обнаружения новых версий скрипта импортера. Изменение этого числа вызовет повторный импорт всех ресурсов, соответствующих указанным расширениям.</param>
      <param name="exts">Список расширений имен файлов (не включая начальный символ точки), которые обрабатывает импортер по сценарию.</param>
      <param name="ext">Одно расширение имени файла (не включая начальный символ точки), которое обрабатывает импортер по сценарию.</param>
      <param name="importQueueOffset">Дает контроль над порядком импорта активов на основе типов. Положительные значения задерживают обработку исходных файлов ресурсов, а отрицательные значения переводят их в более ранний этап процесса импорта.</param>
      <param name="overrideExts">Список расширений имен файлов (не включая начальный символ точки), которые импортер по сценарию может обрабатывать в дополнение к расширениям имен файлов по умолчанию.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.ScriptedImporterAttribute.#ctor(System.Int32,System.String[],System.String[])">
      <summary>
        <para>Используйте атрибут ScriptedImporter, чтобы зарегистрировать пользовательский импортер, производный от ScriptedImporter, с конвейером импорта активов Unity.</para>
      </summary>
      <param name="version">Число, которое используется конвейером импорта для обнаружения новых версий скрипта импортера. Изменение этого числа вызовет повторный импорт всех ресурсов, соответствующих указанным расширениям.</param>
      <param name="exts">Список расширений имен файлов (не включая начальный символ точки), которые обрабатывает импортер по сценарию.</param>
      <param name="ext">Одно расширение имени файла (не включая начальный символ точки), которое обрабатывает импортер по сценарию.</param>
      <param name="importQueueOffset">Дает контроль над порядком импорта активов на основе типов. Положительные значения задерживают обработку исходных файлов ресурсов, а отрицательные значения переводят их в более ранний этап процесса импорта.</param>
      <param name="overrideExts">Список расширений имен файлов (не включая начальный символ точки), которые импортер по сценарию может обрабатывать в дополнение к расширениям имен файлов по умолчанию.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.ScriptedImporterAttribute.#ctor(System.Int32,System.String[],System.Int32)">
      <summary>
        <para>Используйте атрибут ScriptedImporter, чтобы зарегистрировать пользовательский импортер, производный от ScriptedImporter, с конвейером импорта активов Unity.</para>
      </summary>
      <param name="version">Число, которое используется конвейером импорта для обнаружения новых версий скрипта импортера. Изменение этого числа вызовет повторный импорт всех ресурсов, соответствующих указанным расширениям.</param>
      <param name="exts">Список расширений имен файлов (не включая начальный символ точки), которые обрабатывает импортер по сценарию.</param>
      <param name="ext">Одно расширение имени файла (не включая начальный символ точки), которое обрабатывает импортер по сценарию.</param>
      <param name="importQueueOffset">Дает контроль над порядком импорта активов на основе типов. Положительные значения задерживают обработку исходных файлов ресурсов, а отрицательные значения переводят их в более ранний этап процесса импорта.</param>
      <param name="overrideExts">Список расширений имен файлов (не включая начальный символ точки), которые импортер по сценарию может обрабатывать в дополнение к расширениям имен файлов по умолчанию.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.ScriptedImporterAttribute.#ctor(System.Int32,System.String[],System.String[],System.Int32)">
      <summary>
        <para>Используйте атрибут ScriptedImporter, чтобы зарегистрировать пользовательский импортер, производный от ScriptedImporter, с конвейером импорта активов Unity.</para>
      </summary>
      <param name="version">Число, которое используется конвейером импорта для обнаружения новых версий скрипта импортера. Изменение этого числа вызовет повторный импорт всех ресурсов, соответствующих указанным расширениям.</param>
      <param name="exts">Список расширений имен файлов (не включая начальный символ точки), которые обрабатывает импортер по сценарию.</param>
      <param name="ext">Одно расширение имени файла (не включая начальный символ точки), которое обрабатывает импортер по сценарию.</param>
      <param name="importQueueOffset">Дает контроль над порядком импорта активов на основе типов. Положительные значения задерживают обработку исходных файлов ресурсов, а отрицательные значения переводят их в более ранний этап процесса импорта.</param>
      <param name="overrideExts">Список расширений имен файлов (не включая начальный символ точки), которые импортер по сценарию может обрабатывать в дополнение к расширениям имен файлов по умолчанию.</param>
    </member>
    <member name="T:UnityEditor.AssetImporters.ScriptedImporterEditor">
      <summary>
        <para>Редактор по умолчанию для исходных ресурсов, обрабатываемых Scripted Importers.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AssetImporters.SketchupMaterialDescriptionPreprocessor">
      <summary>
        <para>Это реализация по умолчанию для AssetPostProcessor.OnPreprocessMaterialDescription. Эта реализация преобразует описания материалов, импортированные из ресурсов Sketchup, в материалы для внутреннего конвейера рендеринга.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AssetImporters.SourceTextureInformation">
      <summary>
        <para>Исходная информация о текстуре.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.SourceTextureInformation.containsAlpha">
      <summary>
        <para>Определяет, присутствует ли альфа-канал в данных изображения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.SourceTextureInformation.hdr">
      <summary>
        <para>Определяет, содержит ли изображение данные HDR.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.SourceTextureInformation.height">
      <summary>
        <para>Высота данных изображения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.SourceTextureInformation.width">
      <summary>
        <para>Ширина данных изображения.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AssetImporters.SpriteImportData">
      <summary>
        <para>Структура, представляющая, как должен создаваться объект Sprite при вызове TextureGenerator.GenerateTexture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.SpriteImportData.alignment">
      <summary>
        <para>Значение Pivot, представленное SpriteAlignment.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.SpriteImportData.border">
      <summary>
        <para>Значение границы для сгенерированного спрайта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.SpriteImportData.name">
      <summary>
        <para>Имя сгенерированного спрайта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.SpriteImportData.outline">
      <summary>
        <para>Создание актива спрайта использует этот контур при создании сетки для спрайта. Если он не указан, для определения деталей сетки будет использоваться SpriteImportData.tesselationDetail.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.SpriteImportData.pivot">
      <summary>
        <para>Значение Pivot, представленное в Vector2.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.SpriteImportData.rect">
      <summary>
        <para>Положение и размер спрайта в данной текстуре.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.SpriteImportData.spriteID">
      <summary>
        <para>Идентификатор, присвоенный спрайту. Используйте это, чтобы определить, какие данные использовались для создания этого спрайта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.SpriteImportData.tessellationDetail">
      <summary>
        <para>Управляет деталями генерации сетки. Это значение будет проигнорировано, если указан SpriteImportData.ouline.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AssetImporters.TextureGenerationOutput">
      <summary>
        <para>Структура, представляющая результат вызова TextureGenerator.GenerateTexture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.TextureGenerationOutput.importInspectorWarnings">
      <summary>
        <para>Предупреждения, которые должны отображаться в Инспекторе после создания Текстуры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.TextureGenerationOutput.importWarnings">
      <summary>
        <para>TextureGenerator.GenerateTexture выдает предупреждения при создании текстуры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.TextureGenerationOutput.output">
      <summary>
        <para>Это Текстура, сгенерированная TextureGenerator.GenerateTexture на основе аргумента colorBuffer, переданного этой функции.
Фактический тип текстуры (2D, 3D, кубическая карта и т. д.) зависит от настроек TextureImporterSettings.textureShape генератора.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.TextureGenerationOutput.sprites">
      <summary>
        <para>Спрайты, созданные с помощью TextureGenerator.GenerateTexture из TextureGenerationSettings.spriteSheetData.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.TextureGenerationOutput.texture">
      <summary>
        <para>Это Texture2D, сгенерированный TextureGenerator.GenerateTexture на основе аргумента colorBuffer, переданного этой функции.
Если генератор настроен на создание текстуры, отличной от 2D (cubemap, 3D, ...), этот член всегда будет нулевым. Чтобы получить результат для произвольного типа текстуры, используйте свойство TextureGenerationOutput.output.
Мы рекомендуем всегда использовать TextureGenerationOutput.output, так как свойство текстуры будет объявлено устаревшим или удалено в будущем.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.TextureGenerationOutput.thumbNail">
      <summary>
        <para>Миниатюра сгенерированной текстуры. Это может быть null в зависимости от настроек импорта. Например, кубические карты не возвращают миниатюру.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AssetImporters.TextureGenerationSettings">
      <summary>
        <para>Представляет, как должна создаваться текстура из вызова TextureGenerator.GenerateTexture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.TextureGenerationSettings.assetPath">
      <summary>
        <para>Путь, по которому будет размещен актив.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.TextureGenerationSettings.enablePostProcessor">
      <summary>
        <para>Если установлено значение true, хуки AssetPostprocessor будут вызываться во время генерации текстуры. Следующее будет выполняться для любых процессоров AssetPost, запущенных через TextureGenerator.GenerateTexture.
- При вызове постпроцессора AssetPostprocessor.assetPath будет установлен в значение assetsPath в этой структуре.
- Значение AssetPostprocessor.context будет установлено равным нулю.
- Вызывается только OnPostprocessTexture, OnPostprocessCubemap, .... Функции OnPreprocessTexture не вызываются.
</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.TextureGenerationSettings.platformSettings">
      <summary>
        <para>Настройки платформы для генерации текстуры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.TextureGenerationSettings.qualifyForSpritePacking">
      <summary>
        <para>Указывает, можно ли использовать сгенерированный спрайт для упаковки атласа.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.TextureGenerationSettings.secondarySpriteTextures">
      <summary>
        <para>Вторичные текстуры для сгенерированных спрайтов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.TextureGenerationSettings.sourceTextureInformation">
      <summary>
        <para>Формат текстуры для данных изображения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.TextureGenerationSettings.spriteImportData">
      <summary>
        <para>Данные генерации спрайтов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.TextureGenerationSettings.spritePackingTag">
      <summary>
        <para>Тег, используемый для упаковки Sprite.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.TextureGenerationSettings.textureImporterSettings">
      <summary>
        <para>Настройки для генерации текстуры.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.TextureGenerationSettings.#ctor(UnityEditor.TextureImporterType)">
      <summary>
        <para>Конструктор инициализируется наиболее распространенным значением на основе переданного вами TetureImporterType.</para>
      </summary>
      <param name="type">Тип текстуры.</param>
    </member>
    <member name="T:UnityEditor.AssetImporters.TextureGenerator">
      <summary>
        <para>Экспериментальные утилиты для генерации Texture2D.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.TextureGenerator.GenerateTexture(UnityEditor.AssetImporters.TextureGenerationSettings,Unity.Collections.NativeArray`1&lt;UnityEngine.Color32&gt;)">
      <summary>
        <para>Генерирует ресурсы Texture2D и Sprite на основе предоставленных настроек.</para>
      </summary>
      <param name="settings">Настройки, используемые для генерации Texture2D и Sprite.</param>
      <param name="colorBuffer">Цветовой буфер для генерации Texture2D и Sprite.</param>
      <returns>
        <para>Результат генерации.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.AssetImporters.TexturePropertyDescription">
      <summary>
        <para>Содержит набор типизированных свойств для описания ввода текстуры в MaterialDescription.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetImporters.TexturePropertyDescription.offset">
      <summary>
        <para>Смещение UV-координат (x,y).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetImporters.TexturePropertyDescription.path">
      <summary>
        <para>Абсолютный путь к ресурсу текстуры.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetImporters.TexturePropertyDescription.relativePath">
      <summary>
        <para>Путь к ресурсу текстуры относительно папки Asset.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetImporters.TexturePropertyDescription.scale">
      <summary>
        <para>Масштабирование UV-координат (x,y).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetImporters.TexturePropertyDescription.texture">
      <summary>
        <para>Ссылка на ресурс текстуры.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AssetImporters.ThreeDSMaterialDescriptionPreprocessor">
      <summary>
        <para>Это реализация по умолчанию для AssetPostProcessor.OnPreprocessMaterialDescription. Эта реализация преобразует описания материалов, импортированные из ресурсов .3DS, в материалы для внутреннего конвейера рендеринга.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AssetModificationProcessor">
      <summary>
        <para>AssetModificationProcessor позволяет вам подключаться к сохранению сериализованных активов и
сцены, редактируемые внутри Unity.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AssetMoveResult">
      <summary>
        <para>Результат перемещения активов</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetMoveResult.DidMove">
      <summary>
        <para>Сообщает внутренней реализации, что сценарий физически переместил ресурс на диск.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetMoveResult.DidNotMove">
      <summary>
        <para>Сообщает внутренней реализации, что ресурс не был физически перемещен сценарием на диск.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetMoveResult.FailedMove">
      <summary>
        <para>Сообщает внутренней реализации, что скрипту не удалось переместить активы.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AssetPathToGUIDOptions">
      <summary>
        <para>Путь актива к параметрам GUID.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetPathToGUIDOptions.IncludeRecentlyDeletedAssets">
      <summary>
        <para>Возвращает GUID, если ресурс существует или недавно был удален.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetPathToGUIDOptions.OnlyExistingAssets">
      <summary>
        <para>Возвращайте GUID, только если ресурс существует на диске.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AssetPipelineMode">
      <summary>
        <para>Выбирает используемый режим Assetpipeline.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetPipelineMode.Version1">
      <summary>
        <para>Используйте это, если хотите использовать сборку активов версии 1.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetPipelineMode.Version2">
      <summary>
        <para>Используйте это, если хотите использовать assetspipeline версии 2.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AssetPostprocessor">
      <summary>
        <para>AssetPostprocessor позволяет подключаться к конвейеру импорта и запускать сценарии до или после импорта ресурсов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetPostprocessor.assetImporter">
      <summary>
        <para>Ссылка на импортера активов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetPostprocessor.assetPath">
      <summary>
        <para>Путь к импортируемому ресурсу.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetPostprocessor.context">
      <summary>
        <para>Контекст импорта.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetPostprocessor.GetPostprocessOrder">
      <summary>
        <para>Переопределить порядок обработки импортеров.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetPostprocessor.GetVersion">
      <summary>
        <para>Возвращает версию постпроцессора ресурса.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetPostprocessor.LogError(System.String)">
      <summary>
        <para>Выводит на консоль сообщение об ошибке импорта.</para>
      </summary>
      <param name="warning">
      </param>
      <param name="context">
      </param>
    </member>
    <member name="M:UnityEditor.AssetPostprocessor.LogError(System.String,UnityEngine.Object)">
      <summary>
        <para>Выводит на консоль сообщение об ошибке импорта.</para>
      </summary>
      <param name="warning">
      </param>
      <param name="context">
      </param>
    </member>
    <member name="M:UnityEditor.AssetPostprocessor.LogWarning(System.String)">
      <summary>
        <para>Выводит на консоль предупреждение об импорте.</para>
      </summary>
      <param name="warning">
      </param>
      <param name="context">
      </param>
    </member>
    <member name="M:UnityEditor.AssetPostprocessor.LogWarning(System.String,UnityEngine.Object)">
      <summary>
        <para>Выводит на консоль предупреждение об импорте.</para>
      </summary>
      <param name="warning">
      </param>
      <param name="context">
      </param>
    </member>
    <member name="T:UnityEditor.AssetPreview">
      <summary>
        <para>Утилита для получения предварительных просмотров активов по идентификатору экземпляра активов, см. AssetPreview.GetAssetPreview. Так как предварительные просмотры загружаются асинхронно, предусмотрены методы запроса, полностью ли загружены все предварительные просмотры, см. AssetPreview.IsLoadingAssetPreviews. Загруженные превью хранятся в кеше, размером кеша можно управлять, вызывая [AssetPreview.SetPreviewTextureCacheSize].</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetPreview.GetAssetPreview(UnityEngine.Object)">
      <summary>
        <para>Возвращает текстуру предварительного просмотра для актива.</para>
      </summary>
      <param name="asset">
      </param>
    </member>
    <member name="M:UnityEditor.AssetPreview.GetAssetPreview">
      <summary>
        <para>Возвращает текстуру предварительного просмотра для instanceID актива.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetPreview.GetMiniThumbnail(UnityEngine.Object)">
      <summary>
        <para>Возвращает миниатюру объекта (например, те, которые вы видите в представлении проекта).</para>
      </summary>
      <param name="obj">
      </param>
    </member>
    <member name="M:UnityEditor.AssetPreview.GetMiniTypeThumbnail(System.Type)">
      <summary>
        <para>Возвращает миниатюру для типа.</para>
      </summary>
      <param name="type">
      </param>
    </member>
    <member name="M:UnityEditor.AssetPreview.GetMiniTypeThumbnail">
      <summary>
        <para>Возвращает миниатюру для типа объекта.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetPreview.IsLoadingAssetPreview(System.Int32)">
      <summary>
        <para>Загрузка предварительных просмотров является асинхронной, поэтому полезно знать, находится ли в процессе загрузки определенный предварительный просмотр ресурсов, чтобы клиентский код, например, мог перерисовать, ожидая завершения загрузки.</para>
      </summary>
      <param name="instanceID">InstanceID актива, для которого был запрошен предварительный просмотр: AssetPreview.GetAssetPreview().</param>
    </member>
    <member name="M:UnityEditor.AssetPreview.IsLoadingAssetPreviews">
      <summary>
        <para>Загрузка предварительных просмотров является асинхронной, поэтому полезно знать, находятся ли какие-либо запрошенные предварительные просмотры в процессе загрузки, чтобы, например, клиентский код мог перерисовывать во время ожидания.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetPreview.SetPreviewTextureCacheSize(System.Int32)">
      <summary>
        <para>Задайте размер кеша предварительного просмотра ресурсов, который может одновременно вместить все видимые предварительные просмотры на экране.</para>
      </summary>
      <param name="size">Количество предварительных просмотров, которые можно загрузить в кэш, прежде чем будут выгружены наименее используемые предварительные просмотры.</param>
    </member>
    <member name="T:UnityEditor.AssetSettingsProvider">
      <summary>
        <para>AssetSettingsProvider — это специализация класса SettingsProvider, которая преобразует устаревшие настройки в унифицированные настройки. Устаревшие настройки включают в себя любые настройки, которые использовали Инспектор для изменения самих себя, например, файлы *.asset в папке ProjectSettings. Под капотом AssetSettingsProvider создает редактор для определенных активов и создает пользовательский интерфейс для окна настроек, обертывая функцию Editor.OnInspectorGUI.

Внутри мы используем этот класс для переноса наших существующих настроек.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetSettingsProvider.settingsEditor">
      <summary>
        <para>Редактор с пользовательским интерфейсом для изменения настроек.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetSettingsProvider.CreateProviderFromAssetPath(System.String,System.String,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)">
      <summary>
        <para>Создайте AssetSettingsProvider из пути ресурса.</para>
      </summary>
      <param name="settingsWindowPath">Путь к настройкам в окне настроек. В качестве разделителя используется «/». Последний токен становится меткой настроек, если он не указан.</param>
      <param name="assetPath">Путь к ресурсу на диске.</param>
      <param name="keywords">Список ключевых слов для сравнения с тем, что ищет пользователь. Когда пользователь вводит значения в поле поиска в окне настроек, SettingsProvider.HasSearchInterest пытается сопоставить эти ключевые слова с этим списком.</param>
      <returns>
        <para>Возвращает AssetSettingsProvider, который создаст редактор для этого конкретного актива.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetSettingsProvider.CreateProviderFromObject(System.String,UnityEngine.Object,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)">
      <summary>
        <para>Создайте AssetSettingsProvider из объекта настроек.</para>
      </summary>
      <param name="settingsWindowPath">Путь к настройкам в окне настроек. В качестве разделителя используется «/». Последний токен становится меткой настроек, если он не указан.</param>
      <param name="settingsObj">Объект настроек для отображения</param>
      <param name="keywords">Список ключевых слов для сравнения с тем, что ищет пользователь. Когда пользователь вводит значения в поле поиска в окне настроек, SettingsProvider.HasSearchInterest пытается сопоставить эти ключевые слова с этим списком.</param>
      <returns>
        <para>Возвращает AssetSettingsProvider, который создаст редактор для этого конкретного актива.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetSettingsProvider.CreateProviderFromResourcePath(System.String,System.String,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)">
      <summary>
        <para>Создайте AssetSettingsProvider из пути ресурса актива.</para>
      </summary>
      <param name="settingsWindowPath">Путь к настройкам в окне настроек. В качестве разделителя используется «/». Последний токен становится меткой настроек, если он не указан.</param>
      <param name="resourcePath">Путь к ресурсу на диске.</param>
      <param name="keywords">Список ключевых слов для сравнения с тем, что ищет пользователь. Когда пользователь вводит значения в поле поиска в окне настроек, SettingsProvider.HasSearchInterest пытается сопоставить эти ключевые слова с этим списком.</param>
      <returns>
        <para>Возвращает AssetSettingsProvider, который создаст редактор для этого конкретного актива.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetSettingsProvider.#ctor(System.String,System.Func`1&lt;UnityEditor.Editor&gt;,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)">
      <summary>
        <para>Создает новый AssetSettingsProvider, чтобы вы могли обернуть устаревшие настройки (то есть настройки, которые ранее отображались в Инспекторе).</para>
      </summary>
      <param name="settingsWindowPath">Путь к настройкам в окне настроек. В качестве разделителя используется «/». Последний токен становится меткой настроек, если он не указан.</param>
      <param name="editorCreator">Функтор, создающий редактор, способный изменять настройки.</param>
      <param name="keywords">Список ключевых слов для сравнения с тем, что ищет пользователь. Когда пользователь вводит значения в поле поиска в окне настроек, SettingsProvider.HasSearchInterest пытается сопоставить эти ключевые слова с этим списком.</param>
      <param name="settingsGetter">Функтор, создающий или получающий объект настроек.</param>
    </member>
    <member name="M:UnityEditor.AssetSettingsProvider.#ctor(System.String,System.Func`1&lt;UnityEngine.Object&gt;)">
      <summary>
        <para>Создает новый AssetSettingsProvider, чтобы вы могли обернуть устаревшие настройки (то есть настройки, которые ранее отображались в Инспекторе).</para>
      </summary>
      <param name="settingsWindowPath">Путь к настройкам в окне настроек. В качестве разделителя используется «/». Последний токен становится меткой настроек, если он не указан.</param>
      <param name="editorCreator">Функтор, создающий редактор, способный изменять настройки.</param>
      <param name="keywords">Список ключевых слов для сравнения с тем, что ищет пользователь. Когда пользователь вводит значения в поле поиска в окне настроек, SettingsProvider.HasSearchInterest пытается сопоставить эти ключевые слова с этим списком.</param>
      <param name="settingsGetter">Функтор, создающий или получающий объект настроек.</param>
    </member>
    <member name="M:UnityEditor.AssetSettingsProvider.OnActivate(System.String,UnityEngine.UIElements.VisualElement)">
      <summary>
        <para>Переопределяет SettingsProvider.OnActivate для этого AssetSettingsProvider.</para>
      </summary>
      <param name="searchContext">Контекст поиска в поле поиска в окне настроек.</param>
      <param name="rootElement">Корень дерева UIElements. Если вы добавите к этому корню, SettingsProvider использует UIElements вместо вызова SettingsProvider.OnGUI для создания пользовательского интерфейса. Если вы не добавляете к этому элементу VisualElement, для создания пользовательского интерфейса необходимо использовать IMGUI.</param>
    </member>
    <member name="M:UnityEditor.AssetSettingsProvider.OnDeactivate">
      <summary>
        <para>Переопределяет SettingsProvider.OnDeactivate для этого AssetSettingsProvider.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetSettingsProvider.OnFooterBarGUI">
      <summary>
        <para>Переопределяет SettingsProvider.OnFooterBarGUI для этого AssetSettingsProvider.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetSettingsProvider.OnGUI(System.String)">
      <summary>
        <para>Переопределяет SettingsProvider.OnGUI для этого AssetSettingsProvider.</para>
      </summary>
      <param name="searchContext">Контекст поиска для окна настроек. Используется для отображения или скрытия соответствующих свойств.</param>
    </member>
    <member name="M:UnityEditor.AssetSettingsProvider.OnTitleBarGUI">
      <summary>
        <para>Переопределяет SettingsProvider.OnTitleBarGUI для этого AssetSettingsProvider. Это рисует панель кнопок, содержащую кнопки «добавить в пресет» и «помощь».</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AudioCurveRendering">
      <summary>
        <para>Функция рендеринга кривых со сглаживанием, используемая звуковыми инструментами в редакторе.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AudioCurveRendering.AudioCurveAndColorEvaluator">
      <summary>
        <para>Функция оценки кривой, которая позволяет одновременно оценивать значение y кривой и цвет кривой в этой точке.</para>
      </summary>
      <param name="x">Нормализованная x-позиция в диапазоне [0; 1], на котором должна оцениваться кривая.</param>
      <param name="col">Цвет кривой в оцениваемой точке.</param>
    </member>
    <member name="T:UnityEditor.AudioCurveRendering.AudioCurveEvaluator">
      <summary>
        <para>Функция оценки кривой, используемая для оценки значения y кривой и в указанной точке.</para>
      </summary>
      <param name="x">Нормализованная x-позиция в диапазоне [0; 1], на котором должна оцениваться кривая.</param>
    </member>
    <member name="T:UnityEditor.AudioCurveRendering.AudioMinMaxCurveAndColorEvaluator">
      <summary>
        <para>Функция оценки кривой, позволяющая одновременно оценивать минимальную и максимальную кривые. Ожидается, что возвращаемые значения minValue и maxValue будут находиться в диапазоне [-1; 1], а значение 0 соответствует вертикальному центру прямоугольника, в который рисуется. Значения вне этого диапазона будут зафиксированы. Дополнительно оценивается цвет кривой в этой точке.</para>
      </summary>
      <param name="x">Нормализованная x-позиция в диапазоне [0; 1], при котором должны оцениваться минимальная и максимальная кривые.</param>
      <param name="col">Цвет кривой в указанной точке оценки.</param>
      <param name="minValue">Возвращаемое значение минимальной кривой. Зажато до [-1; 1].</param>
      <param name="maxValue">Возвращаемое значение максимальной кривой. Зажато до [-1; 1].</param>
    </member>
    <member name="M:UnityEditor.AudioCurveRendering.DrawCurve(UnityEngine.Rect,UnityEditor.AudioCurveRendering/AudioCurveEvaluator,UnityEngine.Color)">
      <summary>
        <para>Визуализирует тонкую кривую, определяемую функцией оценки кривой. Сплошной цвет кривой задается аргументом curveColor.</para>
      </summary>
      <param name="r">Прямоугольник, определяющий размер графика.</param>
      <param name="eval">Функция оценки кривой.</param>
      <param name="curveColor">Сплошной цвет заливки кривой. Альфа-канал определяет степень непрозрачности.</param>
    </member>
    <member name="M:UnityEditor.AudioCurveRendering.DrawFilledCurve(UnityEngine.Rect,UnityEditor.AudioCurveRendering/AudioCurveEvaluator,UnityEngine.Color)">
      <summary>
        <para>Заполняет область между кривой, оцененной предоставленным AudioCurveAndColorEvaluator, и нижней частью прямоугольника плавными градиентами по краям.</para>
      </summary>
      <param name="r">Прямоугольник, определяющий размер графика.</param>
      <param name="eval">Нормализованная x-позиция в диапазоне [0; 1], при котором следует оценивать кривую. Ожидается, что возвращаемое значение будет находиться в диапазоне [-1; 1], а значение 0 соответствует вертикальному центру прямоугольника, в который рисуется. Значения вне этого диапазона будут зафиксированы.</param>
      <param name="curveColor">Сплошной цвет заливки кривой. Альфа-канал определяет степень непрозрачности.</param>
    </member>
    <member name="M:UnityEditor.AudioCurveRendering.DrawFilledCurve(UnityEngine.Rect,UnityEditor.AudioCurveRendering/AudioCurveAndColorEvaluator)">
      <summary>
        <para>Заполняет область между кривой, оцененной предоставленным AudioCurveAndColorEvaluator, и нижней частью прямоугольника плавными градиентами по краям.</para>
      </summary>
      <param name="r">Прямоугольник, определяющий размер графика.</param>
      <param name="eval">Нормализованная x-позиция в диапазоне [0; 1], при котором следует оценивать кривую. Ожидается, что возвращаемое значение будет находиться в диапазоне [-1; 1], а значение 0 соответствует вертикальному центру прямоугольника, в который рисуется. Значения вне этого диапазона будут зафиксированы.</param>
      <param name="curveColor">Сплошной цвет заливки кривой. Альфа-канал определяет степень непрозрачности.</param>
    </member>
    <member name="M:UnityEditor.AudioCurveRendering.DrawMinMaxFilledCurve(UnityEngine.Rect,UnityEditor.AudioCurveRendering/AudioMinMaxCurveAndColorEvaluator)">
      <summary>
        <para>Заполняет область между двумя кривыми, оцененными AudioMinMaxCurveAndColorEvaluator, с плавными градиентами по краям.</para>
      </summary>
      <param name="r">Прямоугольник, определяющий размер графика.</param>
      <param name="eval">Нормализованная x-позиция в диапазоне [0; 1], при котором следует оценивать минимальную и максимальную кривые. Ожидается, что возвращаемые значения minValue и maxValue будут находиться в диапазоне [-1; 1], а значение 0 соответствует вертикальному центру прямоугольника, в который рисуется. Значения вне этого диапазона будут зафиксированы.</param>
    </member>
    <member name="M:UnityEditor.AudioCurveRendering.DrawSymmetricFilledCurve(UnityEngine.Rect,UnityEditor.AudioCurveRendering/AudioCurveAndColorEvaluator)">
      <summary>
        <para>Заполняет область между кривой, оцененной предоставленным AudioCurveAndColorEvaluator, и ее вертикальным зеркальным отображением с плавными градиентами по краям. Полезно для построения графиков амплитуд аудиосигналов.</para>
      </summary>
      <param name="r">Прямоугольник, определяющий размер графика.</param>
      <param name="eval">Нормализованная x-позиция в диапазоне [0; 1], при котором следует оценивать кривую. Ожидается, что возвращаемое значение будет находиться в диапазоне [0; 1], а значение 0 соответствует вертикальному центру прямоугольника, в который рисуется. Значения вне этого диапазона будут зафиксированы.</param>
    </member>
    <member name="T:UnityEditor.AudioImporter">
      <summary>
        <para>Средство импорта аудио позволяет изменять настройки импорта AudioClip из сценариев редактора.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AudioImporter.ambisonic">
      <summary>
        <para>Когда этот флаг установлен, аудиоклип будет рассматриваться как ambisonic.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AudioImporter.compressionBitrate">
      <summary>
        <para>Битрейт сжатия.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AudioImporter.defaultSampleSettings">
      <summary>
        <para>Пример настроек по умолчанию для импортера AudioClip.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AudioImporter.forceToMono">
      <summary>
        <para>Сделать аудиоклипы монофоническими?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AudioImporter.loadInBackground">
      <summary>
        <para>В соответствии с флагом «Загрузить в фоновом режиме» в инспекторе AudioClip, когда этот флаг установлен, загрузка клипа будет происходить с задержкой, не блокируя основной поток.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AudioImporter.preloadAudioData">
      <summary>
        <para>Предварительно загружает аудиоданные клипа при загрузке актива клипа. Когда этот флаг выключен, сценарии должны вызывать AudioClip.LoadAudioData() для загрузки данных перед воспроизведением клипа. Такие свойства, как длина, каналы и формат, доступны до загрузки аудиоданных.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AudioImporter.ClearSampleSettingOverride(System.String)">
      <summary>
        <para>Отменяет переопределение параметров примера для данной платформы.</para>
      </summary>
      <param name="platform">Платформа, для которой необходимо удалить переопределения.</param>
      <returns>
        <para>Возвращает true, если какие-либо переопределения действительно были удалены.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AudioImporter.ContainsSampleSettingsOverride(System.String)">
      <summary>
        <para>Возвращает значение, указывающее, переопределены ли в настоящее время образцы настроек данной цели сборки.</para>
      </summary>
      <param name="platform">Платформа для запроса, имеет ли этот AudioImporter переопределение.</param>
      <returns>
        <para>Возвращает true, если платформа в данный момент переопределена в этом AudioImporter.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AudioImporter.GetOverrideSampleSettings(System.String)">
      <summary>
        <para>Вернуть текущие настройки переопределения для данной платформы.</para>
      </summary>
      <param name="platform">Платформа, для которой необходимо получить параметры переопределения.</param>
      <returns>
        <para>Примерные настройки переопределения для данной платформы.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AudioImporter.SetOverrideSampleSettings(System.String,UnityEditor.AudioImporterSampleSettings)">
      <summary>
        <para>Задает параметры переопределения образца для данной платформы.</para>
      </summary>
      <param name="platform">Платформа, на которой будут переопределены настройки образца.</param>
      <param name="settings">Параметры переопределения для данной платформы.</param>
      <returns>
        <para>Возвращает true, если настройки были успешно изменены. Некоторые переопределения настроек невозможны для данной платформы, и в этом случае возвращается false, а настройки не регистрируются.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.AudioImporterSampleSettings">
      <summary>
        <para>Эта структура содержит набор настроек, используемых для определения того, как следует импортировать AudioClip.

Эта структура используется с AudioImporter для определения того, как следует импортировать и обрабатывать AudioClip во время загрузки в сцену.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AudioImporterSampleSettings.compressionFormat">
      <summary>
        <para>CompressionFormat определяет тип сжатия, в который закодирован аудиофайл. Различные типы сжатия имеют разные характеристики производительности и звуковых артефактов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AudioImporterSampleSettings.loadType">
      <summary>
        <para>LoadType определяет способ загрузки импортированных данных AudioClip.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AudioImporterSampleSettings.quality">
      <summary>
        <para>Качество сжатия аудио (0-1)

Величина сжатия. Значение примерно соответствует соотношению между результирующим и исходным размерами файла.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AudioImporterSampleSettings.sampleRateOverride">
      <summary>
        <para>Целевая частота дискретизации для преобразования, когда для параметра samplerateSetting установлено значение OverrideSampleRate.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AudioImporterSampleSettings.sampleRateSetting">
      <summary>
        <para>Определяет, как изменяется (если вообще изменяется) частота дискретизации аудиофайла импортера.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AudioSampleRateSetting">
      <summary>
        <para>Настройка частоты дискретизации, используемая в AudioImporter. Это определяет преобразование частоты дискретизации аудио при импорте.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AudioSampleRateSetting.OptimizeSampleRate">
      <summary>
        <para>Пусть Unity определит оптимальную частоту дискретизации для импортируемого AudioClip. Аудиофайл будет проанализирован и выбрана минимальная частота дискретизации с сохранением качества звука.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AudioSampleRateSetting.OverrideSampleRate">
      <summary>
        <para>Переопределите частоту дискретизации импортированного аудиофайла с помощью пользовательского значения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AudioSampleRateSetting.PreserveSampleRate">
      <summary>
        <para>Не изменяйте частоту дискретизации импортированного аудиофайла. Частота дискретизации будет сохранена для импортированного аудиоклипа.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.BuildFailedException">
      <summary>
        <para>Класс исключений, представляющий неудачную сборку.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.BuildFailedException.#ctor(System.String)">
      <summary>
        <para>Создает объект BuildFailedException.</para>
      </summary>
      <param name="message">Строка текста, описывающая ошибку, вызвавшую сбой сборки.</param>
      <param name="innerException">Исключение, вызвавшее сбой сборки.</param>
    </member>
    <member name="M:UnityEditor.Build.BuildFailedException.#ctor(System.Exception)">
      <summary>
        <para>Создает объект BuildFailedException.</para>
      </summary>
      <param name="message">Строка текста, описывающая ошибку, вызвавшую сбой сборки.</param>
      <param name="innerException">Исключение, вызвавшее сбой сборки.</param>
    </member>
    <member name="T:UnityEditor.Build.BuildPlayerContext">
      <summary>
        <para>Получите объект BuildPlayerContext из обратного вызова Build.BuildPlayerProcessor.PrepareForBuild.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.BuildPlayerContext.AddAdditionalPathToStreamingAssets(System.String,System.String)">
      <summary>
        <para>Добавьте дополнительные потоковые ресурсы к встроенным данным проигрывателя. Например, вы можете включить AssetBundles или другие потоковые ресурсы, не помещая их сначала в папку проекта StreamingAssets.</para>
      </summary>
      <param name="directoryOrFile">Путь, представляющий существующий файл или каталог. Если путь не заканчивается, эта функция выдает исключение FileNotFoundException.</param>
      <param name="pathInStreamingAssets">Путь в папке StreamingAssets для размещения дополнительных ресурсов. Если значение null, файл или каталог помещаются непосредственно в папку StreamingAssets.</param>
    </member>
    <member name="P:UnityEditor.Build.BuildPlayerContext.BuildPlayerOptions">
      <summary>
        <para>Варианты сборки игрока, связанные с этой сборкой.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.BuildPlayerProcessor">
      <summary>
        <para>Расширьте BuildPlayerProcessor, чтобы получать обратные вызовы во время сборки проигрывателя.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.BuildPlayerProcessor.callbackOrder">
      <summary>
        <para>Возвращает относительный порядок обратных вызовов для обратных вызовов. Обратные вызовы с более низкими значениями вызываются перед обратными вызовами с более высокими значениями.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.BuildPlayerProcessor.PrepareForBuild(UnityEditor.Build.BuildPlayerContext)">
      <summary>
        <para>Реализуйте эту функцию для получения обратного вызова перед запуском сборки проигрывателя.</para>
      </summary>
      <param name="buildPlayerContext">Контекст, привязанный к запланированной сборке проигрывателя.</param>
    </member>
    <member name="T:UnityEditor.Build.Content.AssetBundleInfo">
      <summary>
        <para>Контейнер для хранения информации о загрузке ресурсов для сборки AssetBundle.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.AssetBundleInfo.bundleAssets">
      <summary>
        <para>Список информации о загрузке активов для AssetBundle.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.AssetBundleInfo.bundleName">
      <summary>
        <para>Понятное имя AssetBundle.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.AssetBundleInfo.#ctor">
      <summary>
        <para>Конструктор по умолчанию для пустого AssetBundleInfo.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.AssetLoadInfo">
      <summary>
        <para>Контейнер для хранения информации о предварительной загрузке для данного сериализованного актива.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.AssetLoadInfo.address">
      <summary>
        <para>Понятное имя, используемое для загрузки встроенного актива.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.AssetLoadInfo.asset">
      <summary>
        <para>GUID для данного актива.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.AssetLoadInfo.includedObjects">
      <summary>
        <para>Список объектов, которые ресурс содержит в своем исходном файле.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.AssetLoadInfo.referencedObjects">
      <summary>
        <para>Список объектов, на которые ссылается ресурс.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.AssetLoadInfo.#ctor">
      <summary>
        <para>Конструктор по умолчанию для пустого объекта AssetLoadInfo.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.BuildCompression">
      <summary>
        <para>Структура, содержащая параметры, управляющие методом сжатия содержимого.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.BuildCompression.DefaultLZ4">
      <summary>
        <para>Возвращает набор структур BuildCompression со значениями по умолчанию, используемыми для сжатия Lz4HC.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.BuildCompression.DefaultLZMA">
      <summary>
        <para>Возвращает набор структур BuildCompression со значениями по умолчанию, используемыми для сжатия LZMA.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.BuildCompression.DefaultUncompressed">
      <summary>
        <para>Возвращает набор структур BuildCompression со значениями по умолчанию, используемыми для несжатых данных.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.BuildReferenceMap">
      <summary>
        <para>Контейнер для хранения информации о том, где объекты будут сериализованы в сборке.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildReferenceMap.AddMapping(System.String,System.Int64,UnityEditor.Build.Content.ObjectIdentifier,System.Boolean)">
      <summary>
        <para>Добавляет сопоставление для одного объекта, где он будет сериализован в сборке.</para>
      </summary>
      <param name="internalFileName">
      </param>
      <param name="serializationIndex">
      </param>
      <param name="objectID">
      </param>
      <param name="overwrite">
      </param>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildReferenceMap.AddMappings(System.String,UnityEditor.Build.Content.SerializationInfo[])">
      <summary>
        <para>Добавляет сопоставления для набора объектов, где они будут сериализованы в сборке.</para>
      </summary>
      <param name="internalFileName">
      </param>
      <param name="objectIDs">
      </param>
      <param name="overwrite">
      </param>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildReferenceMap.AddMappings(System.String,UnityEditor.Build.Content.SerializationInfo[],System.Boolean)">
      <summary>
        <para>Добавляет сопоставления для набора объектов, где они будут сериализованы в сборке.</para>
      </summary>
      <param name="internalFileName">
      </param>
      <param name="objectIDs">
      </param>
      <param name="overwrite">
      </param>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildReferenceMap.#ctor">
      <summary>
        <para>Конструктор по умолчанию для пустой карты BuildReferenceMap.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildReferenceMap.Dispose">
      <summary>
        <para>Удалите BuildReferenceMap, уничтожив все внутреннее состояние.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildReferenceMap.Equals(System.Object)">
      <summary>
        <para>Возвращает true, если объекты равны.</para>
      </summary>
      <param name="obj">
      </param>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildReferenceMap.FilterToSubset(UnityEditor.Build.Content.ObjectIdentifier[])">
      <summary>
        <para>Фильтрует этот экземпляр BuildReferenceMap, чтобы удалить ссылки на любые объекты, которых нет в массиве ObjectIdentifiers, указанном objectIds.</para>
      </summary>
      <param name="objectIds">Набор искомых объектов.</param>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildReferenceMap.GetHash128">
      <summary>
        <para>Получает хэш для BuildReferenceMap.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildReferenceMap.GetHashCode">
      <summary>
        <para>Получает хэш-код для BuildReferenceMap.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildReferenceMap.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Метод ISerializable для поддержки сериализации за пределами внутренней системы сериализации Unity.</para>
      </summary>
      <param name="info">
      </param>
      <param name="context">
      </param>
    </member>
    <member name="T:UnityEditor.Build.Content.BuildSettings">
      <summary>
        <para>Структура, содержащая информацию о том, как создавать содержимое.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.BuildSettings.buildFlags">
      <summary>
        <para>Специальные параметры сборки для использования при создании содержимого.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.BuildSettings.group">
      <summary>
        <para>Группа платформ, для которой будет создаваться контент.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.BuildSettings.target">
      <summary>
        <para>Целевая платформа, для которой будет создаваться контент.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.BuildSettings.typeDB">
      <summary>
        <para>Введите информацию, которая будет использоваться для создания контента.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.BuildUsageCache">
      <summary>
        <para>Кэширующий объект для Scriptable Build Pipeline.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildUsageCache.#ctor">
      <summary>
        <para>Конструктор по умолчанию.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildUsageCache.Dispose">
      <summary>
        <para>Удалите BuildUsageCache, уничтожив все внутреннее состояние.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.BuildUsageTagGlobal">
      <summary>
        <para>Контейнер для хранения информации об освещении, используемой в сборке.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Build.Content.BuildUsageTagGlobal.op_BitwiseOr(UnityEditor.Build.Content.BuildUsageTagGlobal,UnityEditor.Build.Content.BuildUsageTagGlobal)">
      <summary>
        <para>Объединяет данные об использовании из другого BuildUsageTagGlobal с этим BuildUsageTagGlobal.</para>
      </summary>
      <param name="x">
      </param>
      <param name="y">
      </param>
    </member>
    <member name="T:UnityEditor.Build.Content.BuildUsageTagSet">
      <summary>
        <para>Контейнер для хранения информации об использовании объектов в сборке.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildUsageTagSet.#ctor">
      <summary>
        <para>Конструктор по умолчанию для пустого BuildUsageTagSet.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildUsageTagSet.Dispose">
      <summary>
        <para>Удалите BuildUsageTagSet, уничтожив все внутреннее состояние.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildUsageTagSet.Equals(System.Object)">
      <summary>
        <para>Возвращает true, если объекты равны.</para>
      </summary>
      <param name="obj">
      </param>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildUsageTagSet.FilterToSubset(UnityEditor.Build.Content.ObjectIdentifier[])">
      <summary>
        <para>Фильтрует этот экземпляр BuildUsageTagSet, чтобы удалить ссылки на любые объекты, которые не входят в массив идентификаторов ObjectIdentifier, указанных в objectIds.</para>
      </summary>
      <param name="objectIds">Набор искомых объектов.</param>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildUsageTagSet.GetHash128">
      <summary>
        <para>Получает хэш для BuildReferenceMap.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildUsageTagSet.GetHashCode">
      <summary>
        <para>Получает хэш-код для BuildUsageTagSet.</para>
      </summary>
      <returns>
        <para>Хэш-код BuildUsageTagSet.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildUsageTagSet.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Метод ISerializable для поддержки сериализации за пределами внутренней системы сериализации Unity.</para>
      </summary>
      <param name="info">
      </param>
      <param name="context">
      </param>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildUsageTagSet.GetObjectIdentifiers">
      <summary>
        <para>Возвращает массив ObjectIdentifiers, о котором этот BuildUsageTagSet содержит информацию об использовании.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildUsageTagSet.UnionWith(UnityEditor.Build.Content.BuildUsageTagSet)">
      <summary>
        <para>Добавляет информацию об использовании объекта из другого BuildUsageTagSet в этот BuildUsageTagSet.</para>
      </summary>
      <param name="other">Информация об использовании объекта, которая будет добавлена ​​в этот BuildUsageTagSet.</param>
    </member>
    <member name="T:UnityEditor.Build.Content.CompressionLevel">
      <summary>
        <para>Перечислите, чтобы указать, должно ли сжатие подчеркивать скорость или размер.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.CompressionLevel.Fast">
      <summary>
        <para>Контент должен быть сжат как можно быстрее.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.CompressionLevel.Fastest">
      <summary>
        <para>Контент должен быть сжат как можно быстрее.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.CompressionLevel.High">
      <summary>
        <para>Контент должен быть сжат небольшим.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.CompressionLevel.Maximum">
      <summary>
        <para>Содержимое должно быть сжато как можно меньше.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.CompressionLevel.None">
      <summary>
        <para>Никто. По умолчанию Нормальный.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.CompressionLevel.Normal">
      <summary>
        <para>Контент должен быть сбалансирован между размером и скоростью.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.CompressionType">
      <summary>
        <para>Перечисление, содержащее типы сжатия, поддерживаемые для встроенного содержимого.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.CompressionType.Lz4">
      <summary>
        <para>Сжатие контента на основе фрагментов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.CompressionType.Lz4HC">
      <summary>
        <para>Сжатие контента на основе фрагментов с использованием варианта высокой степени сжатия.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.CompressionType.Lzma">
      <summary>
        <para>Сжатие содержимого одного потока.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.CompressionType.None">
      <summary>
        <para>Несжатый контент.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.ContentBuildFlags">
      <summary>
        <para>Варианты сборки для контента.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.ContentBuildFlags.DevelopmentBuild">
      <summary>
        <para>Создайте версию файлов содержимого для разработки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.ContentBuildFlags.DisableWriteTypeTree">
      <summary>
        <para>Не включайте информацию о типе во встроенное содержимое.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.ContentBuildFlags.None">
      <summary>
        <para>Создавайте контент без дополнительных параметров.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.ContentBuildFlags.StripUnityVersion">
      <summary>
        <para>Флаг сборки, указывающий, что версию Unity не следует записывать в сериализованный файл.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.ContentBuildInterface">
      <summary>
        <para>Низкоуровневый интерфейс для создания контента для Unity.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.ArchiveAndCompress(UnityEditor.Build.Content.ResourceFile[],System.String,UnityEngine.BuildCompression)">
      <summary>
        <para>Объединяет файлы ресурсов в один архив и сжимает их на основе переданных параметров.</para>
      </summary>
      <param name="resourceFiles">
      </param>
      <param name="outputBundlePath">
      </param>
      <param name="compression">
      </param>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.CalculateBuildUsageTags(UnityEditor.Build.Content.ObjectIdentifier[],UnityEditor.Build.Content.ObjectIdentifier[],UnityEditor.Build.Content.BuildUsageTagGlobal,UnityEditor.Build.Content.BuildUsageTagSet)">
      <summary>
        <para>Вычисляет использование сборки набора объектов.</para>
      </summary>
      <param name="objectIDs">Объекты, для которых будет рассчитано использование сборки.</param>
      <param name="dependentObjectIDs">Объекты, которые ссылаются на вычисляемые объекты.</param>
      <param name="globalUsage">Информация об освещении, используемая сборкой.</param>
      <param name="usageSet">Набор BuildUsageTagSet, в котором будет храниться вычисленная информация об использовании.</param>
      <param name="usageCache">Необязательный объект кеша, используемый для повышения производительности при нескольких вызовах этого API.</param>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.CalculateBuildUsageTags(UnityEditor.Build.Content.ObjectIdentifier[],UnityEditor.Build.Content.ObjectIdentifier[],UnityEditor.Build.Content.BuildUsageTagGlobal,UnityEditor.Build.Content.BuildUsageTagSet,UnityEditor.Build.Content.BuildUsageCache)">
      <summary>
        <para>Вычисляет использование сборки набора объектов.</para>
      </summary>
      <param name="objectIDs">Объекты, для которых будет рассчитано использование сборки.</param>
      <param name="dependentObjectIDs">Объекты, которые ссылаются на вычисляемые объекты.</param>
      <param name="globalUsage">Информация об освещении, используемая сборкой.</param>
      <param name="usageSet">Набор BuildUsageTagSet, в котором будет храниться вычисленная информация об использовании.</param>
      <param name="usageCache">Необязательный объект кеша, используемый для повышения производительности при нескольких вызовах этого API.</param>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.CalculatePlayerDependenciesForGameManagers(UnityEditor.Build.Content.BuildSettings,UnityEditor.Build.Content.BuildUsageTagGlobal,UnityEditor.Build.Content.BuildUsageTagSet)">
      <summary>
        <para>Вычисляет информацию о зависимостях для различных внутренних классов менеджера игр Unity.</para>
      </summary>
      <param name="settings">Настройки расчета зависимостей.</param>
      <param name="globalUsage">Тег глобального использования для режимов освещения и тумана, используемых в проекте.</param>
      <param name="usageSet">Выходные теги использования, сгенерированные в результате вычисления зависимостей.</param>
      <param name="usageCache">Необязательный объект кеша, используемый для повышения производительности при нескольких вызовах этого API.</param>
      <param name="mode">Указывает, как вычислять зависимости между внутренними игровыми менеджерами Unity и игровыми активами.</param>
      <returns>
        <para>Расчетные зависимости для внутренних классов менеджера игр Unity.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.CalculatePlayerDependenciesForGameManagers(UnityEditor.Build.Content.BuildSettings,UnityEditor.Build.Content.BuildUsageTagGlobal,UnityEditor.Build.Content.BuildUsageTagSet,UnityEditor.Build.Content.BuildUsageCache)">
      <summary>
        <para>Вычисляет информацию о зависимостях для различных внутренних классов менеджера игр Unity.</para>
      </summary>
      <param name="settings">Настройки расчета зависимостей.</param>
      <param name="globalUsage">Тег глобального использования для режимов освещения и тумана, используемых в проекте.</param>
      <param name="usageSet">Выходные теги использования, сгенерированные в результате вычисления зависимостей.</param>
      <param name="usageCache">Необязательный объект кеша, используемый для повышения производительности при нескольких вызовах этого API.</param>
      <param name="mode">Указывает, как вычислять зависимости между внутренними игровыми менеджерами Unity и игровыми активами.</param>
      <returns>
        <para>Расчетные зависимости для внутренних классов менеджера игр Unity.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.CalculatePlayerDependenciesForGameManagers(UnityEditor.Build.Content.BuildSettings,UnityEditor.Build.Content.BuildUsageTagGlobal,UnityEditor.Build.Content.BuildUsageTagSet,UnityEditor.Build.Content.BuildUsageCache,UnityEditor.Build.Content.DependencyType)">
      <summary>
        <para>Вычисляет информацию о зависимостях для различных внутренних классов менеджера игр Unity.</para>
      </summary>
      <param name="settings">Настройки расчета зависимостей.</param>
      <param name="globalUsage">Тег глобального использования для режимов освещения и тумана, используемых в проекте.</param>
      <param name="usageSet">Выходные теги использования, сгенерированные в результате вычисления зависимостей.</param>
      <param name="usageCache">Необязательный объект кеша, используемый для повышения производительности при нескольких вызовах этого API.</param>
      <param name="mode">Указывает, как вычислять зависимости между внутренними игровыми менеджерами Unity и игровыми активами.</param>
      <returns>
        <para>Расчетные зависимости для внутренних классов менеджера игр Unity.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.CalculatePlayerDependenciesForScene(System.String,UnityEditor.Build.Content.BuildSettings,UnityEditor.Build.Content.BuildUsageTagSet)">
      <summary>
        <para>Вычисляет информацию о зависимости сцены.</para>
      </summary>
      <param name="usageCache">Необязательный объект кеша, используемый для повышения производительности при нескольких вызовах этого API.</param>
      <param name="scenePath">Входной путь сцены для расчета зависимости.</param>
      <param name="settings">Настройки расчета зависимостей.</param>
      <param name="usageSet">Выходные теги использования, сгенерированные в результате вычисления зависимостей.</param>
      <returns>
        <para>Информация о зависимости для сцены.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.CalculatePlayerDependenciesForScene(System.String,UnityEditor.Build.Content.BuildSettings,UnityEditor.Build.Content.BuildUsageTagSet,UnityEditor.Build.Content.BuildUsageCache)">
      <summary>
        <para>Вычисляет информацию о зависимости сцены.</para>
      </summary>
      <param name="usageCache">Необязательный объект кеша, используемый для повышения производительности при нескольких вызовах этого API.</param>
      <param name="scenePath">Входной путь сцены для расчета зависимости.</param>
      <param name="settings">Настройки расчета зависимостей.</param>
      <param name="usageSet">Выходные теги использования, сгенерированные в результате вычисления зависимостей.</param>
      <returns>
        <para>Информация о зависимости для сцены.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.CalculatePlayerSerializationHashForType(System.Type,UnityEditor.Build.Player.TypeDB)">
      <summary>
        <para>Возвращает уникальный хэш для сериализованного макета данного типа.</para>
      </summary>
      <param name="type">Тип объекта.</param>
      <param name="typeDB">Пользовательский скрипт TypeDB для плеера.</param>
      <returns>
        <para>Уникальный хеш для сериализованного макета типа.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.GenerateAssetBundleBuilds">
      <summary>
        <para>Возвращает массив структур AssetBundleBuild, в которых подробно описывается текущий набор макетов пакетов ресурсов в AssetDatabase.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.GetGlobalUsageFromActiveScene(UnityEditor.BuildTarget)">
      <summary>
        <para>Получает информацию об освещении и настройках рендеринга в активной сцене.</para>
      </summary>
      <param name="target">Целевая платформа.</param>
      <returns>
        <para>Объект, содержащий настройки освещения и тумана для активной сцены на указанной платформе.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.GetGlobalUsageFromGraphicsSettings">
      <summary>
        <para>Возвращает глобальную информацию об использовании, рассчитанную с помощью раздела Shader Striping в настройках графики.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.GetPlayerAssetRepresentations(UnityEditor.GUID,UnityEditor.BuildTarget)">
      <summary>
        <para>Возвращает список видимых объектов, непосредственно содержащихся внутри актива.</para>
      </summary>
      <param name="asset">
      </param>
      <param name="target">
      </param>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.GetPlayerDependenciesForObject(UnityEditor.Build.Content.ObjectIdentifier,UnityEditor.BuildTarget,UnityEditor.Build.Player.TypeDB)">
      <summary>
        <para>Возвращает список объектов, на которые ссылается объект.</para>
      </summary>
      <param name="objectID">
      </param>
      <param name="target">
      </param>
      <param name="typeDB">
      </param>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.GetPlayerDependenciesForObjects(UnityEditor.Build.Content.ObjectIdentifier[],UnityEditor.BuildTarget,UnityEditor.Build.Player.TypeDB)">
      <summary>
        <para>Возвращает список объектов, на которые ссылается набор объектов.</para>
      </summary>
      <param name="objectIDs">
      </param>
      <param name="target">
      </param>
      <param name="typeDB">
      </param>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.GetPlayerObjectIdentifiersInAsset(UnityEditor.GUID,UnityEditor.BuildTarget)">
      <summary>
        <para>Возвращает список объектов, непосредственно содержащихся внутри актива.</para>
      </summary>
      <param name="asset">
      </param>
      <param name="target">
      </param>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.GetPlayerObjectIdentifiersInSerializedFile(System.String,UnityEditor.BuildTarget)">
      <summary>
        <para>Возвращает список объектов, непосредственно содержащихся в свободном сериализованном файле.</para>
      </summary>
      <param name="filePath">
      </param>
      <param name="target">
      </param>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.GetTypeForObject(UnityEditor.Build.Content.ObjectIdentifier)">
      <summary>
        <para>Возвращает System.Type идентификатора ObjectIdentifier, указанного идентификатором объекта.</para>
      </summary>
      <param name="objectID">Конкретный объект.</param>
      <returns>
        <para>Тип объекта.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.GetTypeForObjects(UnityEditor.Build.Content.ObjectIdentifier[])">
      <summary>
        <para>Возвращает System.Type для ObjectIdentifiers и ссылочные типы классов SerializeReference, указанные с помощью objectID.</para>
      </summary>
      <param name="objectIDs">Конкретные объекты.</param>
      <returns>
        <para>Массив уникальных типов.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.GetTypesForObject(UnityEditor.Build.Content.ObjectIdentifier)">
      <summary>
        <para>Возвращает System.Type для ObjectIdentifier и ссылочные типы классов SerializeReference, указанные с помощью objectID.</para>
      </summary>
      <param name="objectID">Конкретный объект.</param>
      <returns>
        <para>Массив уникальных типов.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.ObjectIsSupportedInBuild(UnityEngine.Object)">
      <summary>
        <para>Возвращает True, если переданный целевой объект является допустимым объектом среды выполнения.</para>
      </summary>
      <param name="targetObject">
      </param>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.StartProfileCapture(UnityEditor.Build.Content.ProfileCaptureOptions)">
      <summary>
        <para>Запускает захват профиля для записи событий профиля создания контента.</para>
      </summary>
      <param name="options">Используется для фильтрации захваченных событий.</param>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.StopProfileCapture">
      <summary>
        <para>Возвращает массив структур ContentBuildProfileEvent, содержащих информацию о каждом происходящем событии. Также останавливает захват профиля.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.WriteGameManagersSerializedFile(System.String,UnityEditor.Build.Content.WriteManagerParameters)">
      <summary>
        <para>Записывает текущие настройки внутренних классов менеджера игр Unity в файл globalgamemanagers на диске.</para>
      </summary>
      <param name="outputFolder">Место для записи файла.</param>
      <param name="parameters">Набор параметров, используемых для записи файла.</param>
      <returns>
        <para>Подробные результаты записи файла.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.WriteSceneSerializedFile(System.String,UnityEditor.Build.Content.WriteSceneParameters)">
      <summary>
        <para>Записывает объекты сцены в сериализованный файл на диске.</para>
      </summary>
      <param name="outputFolder">
      </param>
      <param name="parameters">
      </param>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.WriteSceneSerializedFile(System.String,System.String,System.String,UnityEditor.Build.Content.WriteCommand,UnityEditor.Build.Content.BuildSettings,UnityEditor.Build.Content.BuildUsageTagGlobal,UnityEditor.Build.Content.BuildUsageTagSet,UnityEditor.Build.Content.BuildReferenceMap)">
      <summary>
        <para>ЗАДАЧА.</para>
      </summary>
      <param name="outputFolder">
      </param>
      <param name="scenePath">
      </param>
      <param name="processedScene">
      </param>
      <param name="writeCommand">
      </param>
      <param name="settings">
      </param>
      <param name="globalUsage">
      </param>
      <param name="usageSet">
      </param>
      <param name="referenceMap">
      </param>
      <param name="preloadInfo">
      </param>
      <param name="sceneBundleInfo">
      </param>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.WriteSceneSerializedFile(System.String,System.String,System.String,UnityEditor.Build.Content.WriteCommand,UnityEditor.Build.Content.BuildSettings,UnityEditor.Build.Content.BuildUsageTagGlobal,UnityEditor.Build.Content.BuildUsageTagSet,UnityEditor.Build.Content.BuildReferenceMap,UnityEditor.Build.Content.PreloadInfo)">
      <summary>
        <para>ЗАДАЧА.</para>
      </summary>
      <param name="outputFolder">
      </param>
      <param name="scenePath">
      </param>
      <param name="processedScene">
      </param>
      <param name="writeCommand">
      </param>
      <param name="settings">
      </param>
      <param name="globalUsage">
      </param>
      <param name="usageSet">
      </param>
      <param name="referenceMap">
      </param>
      <param name="preloadInfo">
      </param>
      <param name="sceneBundleInfo">
      </param>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.WriteSceneSerializedFile(System.String,System.String,System.String,UnityEditor.Build.Content.WriteCommand,UnityEditor.Build.Content.BuildSettings,UnityEditor.Build.Content.BuildUsageTagGlobal,UnityEditor.Build.Content.BuildUsageTagSet,UnityEditor.Build.Content.BuildReferenceMap,UnityEditor.Build.Content.PreloadInfo,UnityEditor.Build.Content.SceneBundleInfo)">
      <summary>
        <para>ЗАДАЧА.</para>
      </summary>
      <param name="outputFolder">
      </param>
      <param name="scenePath">
      </param>
      <param name="processedScene">
      </param>
      <param name="writeCommand">
      </param>
      <param name="settings">
      </param>
      <param name="globalUsage">
      </param>
      <param name="usageSet">
      </param>
      <param name="referenceMap">
      </param>
      <param name="preloadInfo">
      </param>
      <param name="sceneBundleInfo">
      </param>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.WriteSerializedFile(System.String,UnityEditor.Build.Content.WriteParameters)">
      <summary>
        <para>Записывает объекты в сериализованный файл на диске.</para>
      </summary>
      <param name="outputFolder">
      </param>
      <param name="parameters">
      </param>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.WriteSerializedFile(System.String,UnityEditor.Build.Content.WriteCommand,UnityEditor.Build.Content.BuildSettings,UnityEditor.Build.Content.BuildUsageTagGlobal,UnityEditor.Build.Content.BuildUsageTagSet,UnityEditor.Build.Content.BuildReferenceMap)">
      <summary>
        <para>ЗАДАЧА.</para>
      </summary>
      <param name="outputFolder">
      </param>
      <param name="writeCommand">
      </param>
      <param name="settings">
      </param>
      <param name="globalUsage">
      </param>
      <param name="usageSet">
      </param>
      <param name="referenceMap">
      </param>
      <param name="bundleInfo">
      </param>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.WriteSerializedFile(System.String,UnityEditor.Build.Content.WriteCommand,UnityEditor.Build.Content.BuildSettings,UnityEditor.Build.Content.BuildUsageTagGlobal,UnityEditor.Build.Content.BuildUsageTagSet,UnityEditor.Build.Content.BuildReferenceMap,UnityEditor.Build.Content.AssetBundleInfo)">
      <summary>
        <para>ЗАДАЧА.</para>
      </summary>
      <param name="outputFolder">
      </param>
      <param name="writeCommand">
      </param>
      <param name="settings">
      </param>
      <param name="globalUsage">
      </param>
      <param name="usageSet">
      </param>
      <param name="referenceMap">
      </param>
      <param name="bundleInfo">
      </param>
    </member>
    <member name="T:UnityEditor.Build.Content.ContentBuildProfileEvent">
      <summary>
        <para>Сведения о событии профиля, захваченном с помощью API ContentBuildInterface.BeginProfileCapture и ContentBuildInterface.EndProfileCapture.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.ContentBuildProfileEvent.Metadata">
      <summary>
        <para>Дополнительные метаданные, связанные с событием.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.ContentBuildProfileEvent.Name">
      <summary>
        <para>Название события.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.ContentBuildProfileEvent.TimeMicroseconds">
      <summary>
        <para>Время в микросекундах, в течение которого произошло событие, относительно начала захвата профиля.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.ContentBuildProfileEvent.Type">
      <summary>
        <para>Перечисление, используемое для обозначения типа события.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.DependencyType">
      <summary>
        <para>Флаги расчета зависимостей для управления тем, что возвращается и как это работает.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.DependencyType.DefaultDependencies">
      <summary>
        <para>Режим по умолчанию. Зависимости вычисляются рекурсивно, и возвращаются только допустимые ссылки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.DependencyType.MissingReferences">
      <summary>
        <para>Зависимости объектов возвращаются только для отсутствующих ссылок.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.DependencyType.RecursiveOperation">
      <summary>
        <para>Вычисление зависимостей является рекурсивным. Для каждой новой действительной ссылки, обнаруженной во время расчета, зависимости этих ссылок также будут включены в возвращаемые результаты.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.DependencyType.ValidReferences">
      <summary>
        <para>Вычисление зависимостей не является рекурсивным. Будут возвращены только зависимости исходного набора, переданного в set.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.FileType">
      <summary>
        <para>Enum описание типа файла, из которого получен объект.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.FileType.DeprecatedCachedAssetType">
      <summary>
        <para>Объект содержится в очень старом формате. В настоящее время не используется.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.FileType.MetaAssetType">
      <summary>
        <para>Объект содержится в импортированных метаданных актива, расположенных в папке «Библиотека».</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.FileType.NonAssetType">
      <summary>
        <para>Объект содержится в файле, который в настоящее время не отслеживается базой данных активов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.FileType.SerializedAssetType">
      <summary>
        <para>Объект содержится в файле стандартного типа ресурсов, расположенном в папке «Активы».</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.GameManagerDependencyInfo">
      <summary>
        <para>Содержит информацию о зависимостях для внутренних классов менеджера игр Unity. Вызовите ContentBuildInterface.WriteGameManagersSerializedFile или ContentBuildInterface.CalculatePlayerDependenciesForGameManagers, чтобы получить экземпляр этого класса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.GameManagerDependencyInfo.includedTypes">
      <summary>
        <para>Идентификаторы всего проекта для классов менеджера игр, на которые ссылается этот набор информации о зависимостях.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.GameManagerDependencyInfo.managerObjects">
      <summary>
        <para>Идентификаторы всего проекта для классов менеджера игр, на которые ссылается этот набор информации о зависимостях.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.GameManagerDependencyInfo.referencedObjects">
      <summary>
        <para>Общепроектные идентификаторы для любых объектов, на которые ссылаются классы менеджера в списке managerObjects.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.ObjectIdentifier">
      <summary>
        <para>Структура, идентифицирующая конкретный объект в масштабе проекта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.ObjectIdentifier.filePath">
      <summary>
        <para>Путь к файлу на диске, содержащему этот объект. (Используется только для объектов, неизвестных базе данных активов).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.ObjectIdentifier.fileType">
      <summary>
        <para>Тип файла, содержащего этот объект.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.ObjectIdentifier.guid">
      <summary>
        <para>Конкретный ресурс, содержащий этот объект.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.ObjectIdentifier.localIdentifierInFile">
      <summary>
        <para>Индекс объекта внутри сериализованного файла.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.ObjectIdentifier.Equals(System.Object)">
      <summary>
        <para>Возвращает true, если объекты равны.</para>
      </summary>
      <param name="obj">
      </param>
    </member>
    <member name="M:UnityEditor.Build.Content.ObjectIdentifier.GetHashCode">
      <summary>
        <para>Получает хэш-код для ObjectIdentifier.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Build.Content.ObjectIdentifier.op_Equal(UnityEditor.Build.Content.ObjectIdentifier,UnityEditor.Build.Content.ObjectIdentifier)">
      <summary>
        <para>Возвращает true, если идентификаторы ObjectIdentifier совпадают.</para>
      </summary>
      <param name="a">
      </param>
      <param name="b">
      </param>
    </member>
    <member name="?:UnityEditor.Build.Content.ObjectIdentifier.op_GreaterThan(UnityEditor.Build.Content.ObjectIdentifier,UnityEditor.Build.Content.ObjectIdentifier)">
      <summary>
        <para>Возвращает true, если первый ObjectIdentifier больше второго ObjectIdentifier.</para>
      </summary>
      <param name="a">
      </param>
      <param name="b">
      </param>
    </member>
    <member name="?:UnityEditor.Build.Content.ObjectIdentifier.op_LessThan(UnityEditor.Build.Content.ObjectIdentifier,UnityEditor.Build.Content.ObjectIdentifier)">
      <summary>
        <para>Возвращает true, если первый ObjectIdentifier меньше второго ObjectIdentifier.</para>
      </summary>
      <param name="a">
      </param>
      <param name="b">
      </param>
    </member>
    <member name="?:UnityEditor.Build.Content.ObjectIdentifier.op_NotEqual(UnityEditor.Build.Content.ObjectIdentifier,UnityEditor.Build.Content.ObjectIdentifier)">
      <summary>
        <para>Возвращает true, если идентификаторы ObjectIdentifier отличаются.</para>
      </summary>
      <param name="a">
      </param>
      <param name="b">
      </param>
    </member>
    <member name="M:UnityEditor.Build.Content.ObjectIdentifier.ToInstanceID(UnityEditor.Build.Content.ObjectIdentifier)">
      <summary>
        <para>Пытается вернуть InstanceID, представляющий этот ObjectIdentifier.</para>
      </summary>
      <param name="objectId">
      </param>
    </member>
    <member name="M:UnityEditor.Build.Content.ObjectIdentifier.ToObject(UnityEditor.Build.Content.ObjectIdentifier)">
      <summary>
        <para>Пытается найти, загрузить и вернуть объект, который представляет этот ObjectIdentifier.</para>
      </summary>
      <param name="objectId">
      </param>
    </member>
    <member name="M:UnityEditor.Build.Content.ObjectIdentifier.ToString">
      <summary>
        <para>Возвращает правильно отформатированную строку для этого ObjectIdentifier.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.ObjectIdentifier.TryGetObjectIdentifier(UnityEngine.Object,UnityEditor.Build.Content.ObjectIdentifier&amp;)">
      <summary>
        <para>Пытается преобразовать постоянный объект в ObjectIdentifier.</para>
      </summary>
      <param name="targetObject">
      </param>
      <param name="objectId">
      </param>
      <param name="instanceID">
      </param>
    </member>
    <member name="M:UnityEditor.Build.Content.ObjectIdentifier.TryGetObjectIdentifier(System.Int32,UnityEditor.Build.Content.ObjectIdentifier&amp;)">
      <summary>
        <para>Пытается преобразовать постоянный объект в ObjectIdentifier.</para>
      </summary>
      <param name="targetObject">
      </param>
      <param name="objectId">
      </param>
      <param name="instanceID">
      </param>
    </member>
    <member name="T:UnityEditor.Build.Content.ObjectSerializedInfo">
      <summary>
        <para>Структура, содержащая сведения о сериализации объекта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.ObjectSerializedInfo.header">
      <summary>
        <para>Информация заголовка сериализованного объекта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.ObjectSerializedInfo.rawData">
      <summary>
        <para>Необработанные байтовые данные объекта, если он был сериализован отдельно от заголовка.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.ObjectSerializedInfo.serializedObject">
      <summary>
        <para>Объект, который был сериализован.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.PreloadInfo">
      <summary>
        <para>Контейнер для хранения списка объектов предварительной загрузки для создаваемой сцены.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.PreloadInfo.preloadObjects">
      <summary>
        <para>Список объектов для сериализованной сцены, которые необходимо предварительно загрузить.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.PreloadInfo.#ctor">
      <summary>
        <para>Конструктор по умолчанию для пустой PreloadInfo.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.ProfileCaptureOptions">
      <summary>
        <para>Параметры фильтрации захваченных событий профиля с помощью API ContentBuildInterface.BeginProfileCapture и ContentBuildInterface.EndProfileCapture.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.ProfileCaptureOptions.IgnoreShortEvents">
      <summary>
        <para>Используйте для исключения всех захваченных событий длительностью менее 10 микросекунд.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.ProfileCaptureOptions.None">
      <summary>
        <para>Используйте, чтобы исключить ни одно из захваченных событий.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.ProfileEventType">
      <summary>
        <para>Параметры для маркировки захваченных событий профиля с помощью API ContentBuildInterface.BeginProfileCapture и ContentBuildInterface.EndProfileCapture.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.ProfileEventType.Begin">
      <summary>
        <para>Используйте, чтобы указать, что задача началась.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.ProfileEventType.End">
      <summary>
        <para>Используйте, чтобы указать, что задача завершена.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.ProfileEventType.Info">
      <summary>
        <para>Используйте, чтобы указать, что сообщается общая информация.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.ResourceFile">
      <summary>
        <para>Сведения об определенном файле, записанном с помощью API ContentBuildInterface.WriteSerializedFile или ContentBuildInterface.WriteSceneSerializedFile.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.ResourceFile.fileAlias">
      <summary>
        <para>Внутреннее имя, используемое системой загрузки для файла ресурсов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.ResourceFile.fileName">
      <summary>
        <para>Путь к файлу ресурсов на диске.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.ResourceFile.serializedFile">
      <summary>
        <para>Bool, чтобы определить, представляет ли этот файл ресурсов сериализованные объекты Unity (сериализованный файл) или двоичные данные ресурсов.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.SceneBundleInfo">
      <summary>
        <para>Контейнер для хранения информации о загрузке ассетов для сборки потоковой сцены AssetBundle.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.SceneBundleInfo.bundleName">
      <summary>
        <para>Понятное имя AssetBundle.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.SceneBundleInfo.bundleScenes">
      <summary>
        <para>Список информации о загрузке сцены для AssetBundle.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.SceneBundleInfo.#ctor">
      <summary>
        <para>Конструктор по умолчанию для пустого объекта SceneBundleInfo.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.SceneDependencyInfo">
      <summary>
        <para>Информация о зависимостях сцены, созданная из API ContentBuildInterface.PrepareScene.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.SceneDependencyInfo.globalUsage">
      <summary>
        <para>Информация об освещении, используемая сценой.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.SceneDependencyInfo.includedTypes">
      <summary>
        <para>Типы, используемые объектами сцены.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.SceneDependencyInfo.processedScene">
      <summary>
        <para>Путь к версии сцены после обработки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.SceneDependencyInfo.referencedObjects">
      <summary>
        <para>Список объектов, на которые ссылается Сцена.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.SceneDependencyInfo.scene">
      <summary>
        <para>Исходный путь ресурса сцены.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.SceneLoadInfo">
      <summary>
        <para>Контейнер для хранения информации о предварительной загрузке для данной сериализованной сцены в AssetBundle.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.SceneLoadInfo.address">
      <summary>
        <para>Понятное имя, используемое для загрузки созданной сцены из пакета ресурсов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.SceneLoadInfo.asset">
      <summary>
        <para>GUID для данной сцены.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.SceneLoadInfo.internalName">
      <summary>
        <para>Внутреннее имя, используемое для загрузки созданной сцены из пакета ресурсов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.SceneLoadInfo.#ctor">
      <summary>
        <para>Конструктор по умолчанию для пустого объекта SceneLoadInfo.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.SerializationInfo">
      <summary>
        <para>Контейнер для хранения информации о порядке сериализации объектов для сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.SerializationInfo.serializationIndex">
      <summary>
        <para>Порядок, в котором объект будет сериализован на диск.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.SerializationInfo.serializationObject">
      <summary>
        <para>Исходный объект для сериализации на диск.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.SerializationInfo.#ctor">
      <summary>
        <para>Конструктор по умолчанию для пустой SerializationInfo.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.SerializedLocation">
      <summary>
        <para>Структура, содержащая информацию о том, где был сериализован объект.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.SerializedLocation.fileName">
      <summary>
        <para>Путь к файлу на диске, где был сериализован объект.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.SerializedLocation.offset">
      <summary>
        <para>Байтовое смещение для начала данных объекта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.SerializedLocation.size">
      <summary>
        <para>Размер данных объекта.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.WriteCommand">
      <summary>
        <para>Контейнер для хранения информации о сериализованном файле, подлежащем записи.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.WriteCommand.fileName">
      <summary>
        <para>Окончательное имя файла на диске сериализованного файла.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.WriteCommand.internalName">
      <summary>
        <para>Внутреннее имя, используемое системой загрузки для сериализованного файла.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.WriteCommand.serializeObjects">
      <summary>
        <para>Список объектов и их порядок, содержащиеся в сериализованном файле.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.WriteCommand.#ctor">
      <summary>
        <para>Конструктор по умолчанию для пустой команды WriteCommand.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.WriteManagerParameters">
      <summary>
        <para>Определяет параметры записи для функции ContentBuildInterface.WriteGameManagersSerializedFile.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteManagerParameters.globalUsage">
      <summary>
        <para>Информация о глобальном освещении для использования при записи сериализованного файла.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteManagerParameters.referenceMap">
      <summary>
        <para>Набор внешних объектов, на которые может ссылаться этот сериализованный файл.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteManagerParameters.settings">
      <summary>
        <para>Параметры, используемые при записи сериализованного файла.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.WriteParameters">
      <summary>
        <para>Эта структура собирает все параметры WriteSerializedFile в одном месте.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteParameters.bundleInfo">
      <summary>
        <para>Необязательный параметр, используемый при записи сериализованного файла для пакета ресурсов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteParameters.globalUsage">
      <summary>
        <para>Информация о глобальном освещении для использования при записи сериализованного файла.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteParameters.preloadInfo">
      <summary>
        <para>Набор зависимостей внешних объектов, которые необходимо загрузить при загрузке результирующего сериализованного файла.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteParameters.referenceMap">
      <summary>
        <para>Набор внешних объектов, на которые может ссылаться этот сериализованный файл.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteParameters.settings">
      <summary>
        <para>Параметры, используемые при записи сериализованного файла.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteParameters.usageSet">
      <summary>
        <para>Теги использования текстуры, материала, сетки и шейдера для использования при записи сериализованного файла.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteParameters.writeCommand">
      <summary>
        <para>Структура внутреннего имени файла, список объектов и порядок объектов для использования при записи сериализованного файла.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.WriteResult">
      <summary>
        <para>Структура, содержащая результаты API ContentBuildPipeline.WriteSerialziedFile и ContentBuildPipeline.WriteSceneSerialziedFile.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.WriteResult.includedSerializeReferenceFQN">
      <summary>
        <para>Полное имя экземпляров SerializeReference, которые были включены в сериализованный файл.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.WriteResult.includedTypes">
      <summary>
        <para>Типы, включенные в сериализованный файл.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.WriteResult.resourceFiles">
      <summary>
        <para>Коллекция файлов, созданных с помощью API ContentBuildInterface.WriteSerializedFile или ContentBuildInterface.WriteSceneSerializedFile.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.WriteResult.serializedObjects">
      <summary>
        <para>Коллекция объектов, записанных в сериализованный файл.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.WriteSceneParameters">
      <summary>
        <para>Эта структура собирает все параметры WriteSceneSerializedFile в одном месте.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteSceneParameters.globalUsage">
      <summary>
        <para>Информация о глобальном освещении для использования при записи сериализованного файла.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteSceneParameters.preloadInfo">
      <summary>
        <para>Набор зависимостей внешних объектов, которые необходимо загрузить при загрузке результирующего сериализованного файла.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteSceneParameters.referenceMap">
      <summary>
        <para>Набор внешних объектов, на которые может ссылаться этот сериализованный файл.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteSceneParameters.sceneBundleInfo">
      <summary>
        <para>Необязательный параметр, используемый при записи сериализованного файла сцены для пакета ресурсов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteSceneParameters.scenePath">
      <summary>
        <para>Исходный путь к ресурсу сцены.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteSceneParameters.settings">
      <summary>
        <para>Параметры, используемые при записи сериализованного файла.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteSceneParameters.usageSet">
      <summary>
        <para>Теги использования текстуры, материала, сетки и шейдера для использования при записи сериализованного файла.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteSceneParameters.writeCommand">
      <summary>
        <para>Структура внутреннего имени файла, список объектов и порядок объектов для использования при записи сериализованного файла.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Build.IActiveBuildTargetChanged">
      <summary>
        <para>Реализуйте этот интерфейс для получения обратного вызова после изменения активной платформы сборки.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.IActiveBuildTargetChanged.OnActiveBuildTargetChanged(UnityEditor.BuildTarget,UnityEditor.BuildTarget)">
      <summary>
        <para>Эта функция вызывается автоматически при изменении активной платформы сборки.</para>
      </summary>
      <param name="previousTarget">Цель сборки до изменения.</param>
      <param name="newTarget">Новая активная цель сборки.</param>
    </member>
    <member name="?:UnityEditor.Build.IFilterBuildAssemblies">
      <summary>
        <para>Реализуйте этот интерфейс для получения обратного вызова для фильтрации сборок из сборки.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.IFilterBuildAssemblies.OnFilterAssemblies(UnityEditor.BuildOptions,System.String[])">
      <summary>
        <para>Будет вызываться после сборки сборок скриптов, но позволяет отфильтровать нежелательные скрипты для включения.</para>
      </summary>
      <param name="buildOptions">Текущие параметры сборки.</param>
      <param name="assemblies">Список сборок, которые будут включены.</param>
      <returns>
        <para>Возвращает отфильтрованный список сборок, включенных в сборку.</para>
      </returns>
    </member>
    <member name="?:UnityEditor.Build.IIl2CppProcessor">
      <summary>
        <para>Реализуйте этот интерфейс для получения обратных вызовов, связанных с запуском IL2CPP.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Il2CppCodeGeneration">
      <summary>
        <para>Параметры для управления генерацией кода для компилятора IL2CPP.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Il2CppCodeGeneration.OptimizeSize">
      <summary>
        <para>Компилятор IL2CPP сгенерирует код, оптимизированный для размера сборки и времени сборки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Il2CppCodeGeneration.OptimizeSpeed">
      <summary>
        <para>Компилятор IL2CPP сгенерирует код, оптимизированный для производительности во время выполнения.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Build.IOrderedCallback">
      <summary>
        <para>Интерфейс, обеспечивающий управление порядком обратного вызова.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.IOrderedCallback.callbackOrder">
      <summary>
        <para>Возвращает относительный порядок обратных вызовов для обратных вызовов. Обратные вызовы с более низкими значениями вызываются перед обратными вызовами с более высокими значениями.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Build.IPostBuildPlayerScriptDLLs">
      <summary>
        <para>Реализуйте этот интерфейс для получения обратного вызова сразу после компиляции скриптов проигрывателя.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.IPostBuildPlayerScriptDLLs.OnPostBuildPlayerScriptDLLs(UnityEditor.Build.Reporting.BuildReport)">
      <summary>
        <para>Реализуйте этот интерфейс для получения обратного вызова сразу после компиляции скриптов проигрывателя.</para>
      </summary>
      <param name="report">Отчет, содержащий информацию о сборке, такую ​​как целевая платформа и выходной путь.</param>
    </member>
    <member name="?:UnityEditor.Build.IPostprocessBuild">
      <summary>
        <para>Этот интерфейс устарел. Вместо этого используйте Build.IPostprocessBuildWithReport.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.IPostprocessBuild.OnPostprocessBuild(UnityEditor.BuildTarget,System.String)">
      <summary>
        <para>Этот метод устарел. Вместо этого используйте Build.IPostprocessBuildWithReport.OnPostprocessBuild.</para>
      </summary>
      <param name="target">
      </param>
      <param name="path">
      </param>
    </member>
    <member name="?:UnityEditor.Build.IPostprocessBuildWithReport">
      <summary>
        <para>Реализуйте этот интерфейс для получения обратного вызова после завершения сборки.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.IPostprocessBuildWithReport.OnPostprocessBuild(UnityEditor.Build.Reporting.BuildReport)">
      <summary>
        <para>Реализуйте эту функцию для получения обратного вызова после завершения сборки.</para>
      </summary>
      <param name="report">BuildReport, содержащий информацию о сборке, такую ​​как целевая платформа и выходной путь.</param>
    </member>
    <member name="?:UnityEditor.Build.IPreprocessBuild">
      <summary>
        <para>Этот интерфейс устарел. Вместо этого используйте Build.IPreprocessBuildWithReport.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.IPreprocessBuild.OnPreprocessBuild(UnityEditor.BuildTarget,System.String)">
      <summary>
        <para>Этот метод устарел. Вместо этого используйте Build.IPreprocessBuildWithReport.OnPreprocessBuild.</para>
      </summary>
      <param name="target">
      </param>
      <param name="path">
      </param>
    </member>
    <member name="?:UnityEditor.Build.IPreprocessBuildWithReport">
      <summary>
        <para>Реализуйте этот интерфейс для получения обратного вызова перед началом сборки.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.IPreprocessBuildWithReport.OnPreprocessBuild(UnityEditor.Build.Reporting.BuildReport)">
      <summary>
        <para>Реализуйте эту функцию для получения обратного вызова перед началом сборки.</para>
      </summary>
      <param name="report">Отчет, содержащий информацию о сборке, такую ​​как целевая платформа и выходной путь.</param>
    </member>
    <member name="?:UnityEditor.Build.IPreprocessComputeShaders">
      <summary>
        <para>Реализуйте этот интерфейс для получения обратного вызова перед компиляцией вычислительного шейдера.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.IPreprocessComputeShaders.OnProcessComputeShader(UnityEngine.ComputeShader,System.String,System.Collections.Generic.IList`1&lt;UnityEditor.Rendering.ShaderCompilerData&gt;)">
      <summary>
        <para>Реализуйте этот интерфейс для получения обратного вызова до того, как Unity скомпилирует ядро ​​вычислительного шейдера в сборку.</para>
      </summary>
      <param name="shader">Вычислительный шейдер, который собирается скомпилировать Unity.</param>
      <param name="kernelName">Имя ядра, которое собирается скомпилировать Unity.</param>
      <param name="data">Список вариантов шейдеров, которые собирается скомпилировать Unity.</param>
    </member>
    <member name="?:UnityEditor.Build.IPreprocessShaders">
      <summary>
        <para>Реализуйте этот интерфейс для получения обратного вызова перед компиляцией шейдера.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.IPreprocessShaders.OnProcessShader(UnityEngine.Shader,UnityEditor.Rendering.ShaderSnippetData,System.Collections.Generic.IList`1&lt;UnityEditor.Rendering.ShaderCompilerData&gt;)">
      <summary>
        <para>Реализуйте этот интерфейс для получения обратного вызова перед компиляцией фрагмента шейдера.</para>
      </summary>
      <param name="shader">Шейдер, который собирается скомпилировать Unity.</param>
      <param name="snippet">Подробная информация о компилируемом коде конкретного шейдера.</param>
      <param name="data">Список вариантов, которые Unity собирается скомпилировать для шейдера.</param>
    </member>
    <member name="?:UnityEditor.Build.IProcessScene">
      <summary>
        <para>Реализуйте этот интерфейс для получения обратного вызова для каждой сцены во время сборки.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.IProcessScene.OnProcessScene(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Реализуйте эту функцию для получения обратного вызова для каждой сцены во время сборки.</para>
      </summary>
      <param name="scene">Обрабатывается текущая сцена.</param>
    </member>
    <member name="?:UnityEditor.Build.IProcessSceneWithReport">
      <summary>
        <para>Реализуйте этот интерфейс для получения обратного вызова для каждой сцены во время сборки.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.IProcessSceneWithReport.OnProcessScene(UnityEngine.SceneManagement.Scene,UnityEditor.Build.Reporting.BuildReport)">
      <summary>
        <para>Реализуйте эту функцию для получения обратного вызова для каждой сцены во время сборки.</para>
      </summary>
      <param name="scene">Обрабатывается текущая сцена.</param>
      <param name="report">Отчет, содержащий информацию о текущей сборке. Когда этот обратный вызов вызывается для загрузки сцены в режиме воспроизведения редактора, этот параметр будет нулевым.</param>
    </member>
    <member name="?:UnityEditor.Build.IUnityLinkerProcessor">
      <summary>
        <para>Реализуйте этот интерфейс для получения обратных вызовов, связанных с работой UnityLinker.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.IUnityLinkerProcessor.GenerateAdditionalLinkXmlFile(UnityEditor.Build.Reporting.BuildReport,UnityEditor.UnityLinker.UnityLinkerBuildPipelineData)">
      <summary>
        <para>Создает дополнительные файлы link.xml для сохранения дополнительных типов и их членов.</para>
      </summary>
      <param name="report">Текущий построенный отчет.</param>
      <param name="data">Информация о текущем запуске UnityLinker.</param>
      <returns>
        <para>Путь к сгенерированному файлу link.xml. Если путь относительный, GenerateAdditionalLinkXmlFile объединяет его с рабочим каталогом, чтобы получить абсолютный путь.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Build.NamedBuildTarget">
      <summary>
        <para>Создать цель по имени.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.NamedBuildTarget.iOS">
      <summary>
        <para>iOS.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.NamedBuildTarget.tvOS">
      <summary>
        <para>ТВОС.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.NamedBuildTarget.Android">
      <summary>
        <para>Android.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.NamedBuildTarget.CloudRendering">
      <summary>
        <para>Облачная визуализация.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.NamedBuildTarget.EmbeddedLinux">
      <summary>
        <para>Встроенный Linux.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.NamedBuildTarget.LinuxHeadlessSimulation">
      <summary>
        <para>LinuxHeadlessSimulation.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.NamedBuildTarget.NintendoSwitch">
      <summary>
        <para>Нинтендо Переключатель.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.NamedBuildTarget.PS4">
      <summary>
        <para>PS4.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.NamedBuildTarget.Server">
      <summary>
        <para>Сервер.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.NamedBuildTarget.Stadia">
      <summary>
        <para>Стадио.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.NamedBuildTarget.Standalone">
      <summary>
        <para>Автономный рабочий стол.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.NamedBuildTarget.TargetName">
      <summary>
        <para>Имя цели сборки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.NamedBuildTarget.Unknown">
      <summary>
        <para>Неизвестно.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.NamedBuildTarget.WebGL">
      <summary>
        <para>WebGL.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.NamedBuildTarget.WindowsStoreApps">
      <summary>
        <para>Приложения Магазина Windows.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.NamedBuildTarget.XboxOne">
      <summary>
        <para>Xbox One.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.OverrideTextureCompression">
      <summary>
        <para>Устанавливает, какое переопределение сжатия текстур следует использовать при импорте ресурсов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.OverrideTextureCompression.ForceFastCompressor">
      <summary>
        <para>Импортируйте текстуры с быстрым, но менее качественным сжатием текстур.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.OverrideTextureCompression.ForceUncompressed">
      <summary>
        <para>Импортируйте текстуры с отключенным сжатием текстур.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.OverrideTextureCompression.NoOverride">
      <summary>
        <para>Не переопределять параметры сжатия импорта текстур.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Player.PlayerBuildInterface">
      <summary>
        <para>Низкоуровневый интерфейс для создания скриптов для Unity.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Player.PlayerBuildInterface.CompilePlayerScripts(UnityEditor.Build.Player.ScriptCompilationSettings,System.String)">
      <summary>
        <para>Компилирует пользовательские сценарии в одну или несколько сборок.</para>
      </summary>
      <param name="input">
      </param>
      <param name="outputFolder">
      </param>
    </member>
    <member name="T:UnityEditor.Build.Player.ScriptCompilationOptions">
      <summary>
        <para>Параметры компиляции скрипта.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Player.ScriptCompilationOptions.Assertions">
      <summary>
        <para>Включите утверждения в скомпилированные скрипты. По умолчанию утверждения включаются только в разрабатываемые сборки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Player.ScriptCompilationOptions.DevelopmentBuild">
      <summary>
        <para>Создайте версию сценариев для разработки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Player.ScriptCompilationOptions.None">
      <summary>
        <para>Скомпилировал скрипты без особых настроек.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Player.ScriptCompilationResult">
      <summary>
        <para>Структура с информацией о результате, возвращаемой API PlayerBuildInterface.CompilePlayerScripts.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Player.ScriptCompilationResult.assemblies">
      <summary>
        <para>Коллекция скомпилированных сборок.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Player.ScriptCompilationResult.typeDB">
      <summary>
        <para>Введите информацию, сгенерированную вызовом компиляции скрипта.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Player.ScriptCompilationSettings">
      <summary>
        <para>Структура, содержащая информацию о том, как создавать скрипты.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Player.ScriptCompilationSettings.extraScriptingDefines">
      <summary>
        <para>Пользовательские определения препроцессора, используемые при компиляции сборок.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Player.ScriptCompilationSettings.group">
      <summary>
        <para>Группа платформ, для которой будут компилироваться скрипты.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Player.ScriptCompilationSettings.options">
      <summary>
        <para>Специальные параметры компилятора для использования при компиляции скриптов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Player.ScriptCompilationSettings.subtarget">
      <summary>
        <para>Подцель, для которой будут компилироваться скрипты.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Player.ScriptCompilationSettings.target">
      <summary>
        <para>Группа платформ, для которой будут компилироваться скрипты.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Player.TypeDB">
      <summary>
        <para>Контейнер для хранения информации о типе скрипта и данных свойств.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Player.TypeDB.Dispose">
      <summary>
        <para>Удалите TypeDB, уничтожив все внутреннее состояние.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Player.TypeDB.Equals(System.Object)">
      <summary>
        <para>Возвращает true, если объекты равны.</para>
      </summary>
      <param name="obj">
      </param>
    </member>
    <member name="M:UnityEditor.Build.Player.TypeDB.GetHash128">
      <summary>
        <para>Получает хэш для BuildReferenceMap.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Player.TypeDB.GetHashCode">
      <summary>
        <para>Получает хэш-код для TypeDB.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Player.TypeDB.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>Метод ISerializable для поддержки сериализации за пределами внутренней системы сериализации Unity.</para>
      </summary>
      <param name="info">
      </param>
      <param name="context">
      </param>
    </member>
    <member name="T:UnityEditor.Build.Reporting.BuildFile">
      <summary>
        <para>Содержит информацию об одном файле, созданном в процессе сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildFile.id">
      <summary>
        <para>Уникальный идентификатор файла сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildFile.path">
      <summary>
        <para>Абсолютный путь к файлу, созданному в процессе сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildFile.role">
      <summary>
        <para>Роль, которую файл играет в выводе сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildFile.size">
      <summary>
        <para>Общий размер файла в байтах.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Reporting.BuildReport">
      <summary>
        <para>API BuildReport предоставляет информацию о процессе сборки Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildReport.files">
      <summary>
        <para>Массив всех файлов, выводимых процессом сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildReport.packedAssets">
      <summary>
        <para>Массив всех PackedAssets, сгенерированных в процессе сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildReport.scenesUsingAssets">
      <summary>
        <para>Необязательный массив ScenesUsingAssets, созданный в процессе сборки, если во время сборки использовался BuildOptions.DetailedBuildReport.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildReport.steps">
      <summary>
        <para>Массив всех шагов сборки, выполненных в процессе сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildReport.strippingInfo">
      <summary>
        <para>Объект StrippingInfo для сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildReport.summary">
      <summary>
        <para>BuildSummary, содержащий общую статистику и данные о процессе сборки.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Reporting.BuildResult">
      <summary>
        <para>Описывает результат процесса сборки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Reporting.BuildResult.Cancelled">
      <summary>
        <para>Указывает, что сборка была отменена пользователем.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Reporting.BuildResult.Failed">
      <summary>
        <para>Указывает, что сборка завершилась неудачно.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Reporting.BuildResult.Succeeded">
      <summary>
        <para>Указывает, что сборка завершена успешно.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Reporting.BuildResult.Unknown">
      <summary>
        <para>Указывает, что результат сборки находится в неизвестном состоянии.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Reporting.BuildStep">
      <summary>
        <para>Содержит информацию об одном шаге процесса сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildStep.depth">
      <summary>
        <para>Глубина вложенности шага сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildStep.duration">
      <summary>
        <para>Общая продолжительность этого шага сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildStep.messages">
      <summary>
        <para>Все сообщения журнала, записанные на этом этапе сборки, в том порядке, в котором они появились.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildStep.name">
      <summary>
        <para>Имя этого шага сборки.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Reporting.BuildStepMessage">
      <summary>
        <para>Содержит информацию об одном сообщении журнала, записанном в процессе сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildStepMessage.content">
      <summary>
        <para>Текстовое содержимое сообщения журнала.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildStepMessage.type">
      <summary>
        <para>LogType сообщения журнала.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Reporting.BuildSummary">
      <summary>
        <para>Содержит общую сводную информацию о сборке.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildSummary.buildEndedAt">
      <summary>
        <para>Время окончания сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildSummary.buildStartedAt">
      <summary>
        <para>Время начала сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildSummary.guid">
      <summary>
        <para>Application.buildGUID сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildSummary.options">
      <summary>
        <para>BuildOptions, используемые для сборки, переданные в BuildPipeline.BuildPlayer.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildSummary.outputPath">
      <summary>
        <para>Выходной путь для сборки, указанный в BuildPipeline.BuildPlayer.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildSummary.platform">
      <summary>
        <para>Платформа, для которой создавалась сборка.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildSummary.platformGroup">
      <summary>
        <para>Группа платформ, для которой была создана сборка.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildSummary.result">
      <summary>
        <para>Результат сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildSummary.totalErrors">
      <summary>
        <para>Общее количество ошибок и исключений, зарегистрированных в процессе сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildSummary.totalSize">
      <summary>
        <para>Общий размер выходных данных сборки в байтах.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildSummary.totalTime">
      <summary>
        <para>Общее время, затраченное на процесс сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildSummary.totalWarnings">
      <summary>
        <para>Общее количество предупреждений, записанных в процессе сборки.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Reporting.BuildSummary.GetSubtarget">
      <summary>
        <para>Подцель, для которой создавалась сборка.</para>
      </summary>
      <returns>
        <para>Возвращает значение подцели.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Build.Reporting.CommonRoles">
      <summary>
        <para>Этот класс предоставляет постоянные значения для некоторых общих ролей, используемых файлами в сборке. Роль каждого файла в сборке доступна в BuildFile.role.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.appInfo">
      <summary>
        <para>Значение BuildFile.role файла, предоставляющего сведения о конфигурации, используемые в режиме низкой целостности в Windows.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.assetBundle">
      <summary>
        <para>Значение BuildFile.role встроенных файлов AssetBundle.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.assetBundleTextManifest">
      <summary>
        <para>Значение BuildFile.role файла манифеста AssetBundle, созданного в процессе сборки и содержащего информацию о пакете и его зависимостях.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.bootConfig">
      <summary>
        <para>Значение BuildFile.role файла, содержащего информацию о конфигурации для самых ранних этапов запуска ядра.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.builtInResources">
      <summary>
        <para>Значение BuildFile.role файла, содержащего встроенные ресурсы для ядра.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.builtInShaders">
      <summary>
        <para>Значение BuildFile.role файла, содержащего встроенные шейдеры Unity, например стандартный шейдер.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.crashHandler">
      <summary>
        <para>Значение BuildFile.role исполняемого файла, используемого для захвата сбоев проигрывателя.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.debugInfo">
      <summary>
        <para>Значение BuildFile.role для файлов, содержащих информацию для отладчиков.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.dependentManagedLibrary">
      <summary>
        <para>Значение BuildFile.role управляемой библиотеки, которая присутствует в сборке из-за зависимости от CommonRoles.managedLibrary.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.engineLibrary">
      <summary>
        <para>Значение BuildFile.role основной среды выполнения Unity, когда она собирается как отдельная библиотека.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.executable">
      <summary>
        <para>Значение BuildFile.role исполняемого файла — файл, который фактически будет запущен на целевом устройстве.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.globalGameManagers">
      <summary>
        <para>Значение BuildFile.role файла, содержащего данные глобальных настроек проекта для проигрывателя.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.managedEngineApi">
      <summary>
        <para>Значение BuildFile.role для файлов, предоставляющих управляемый API для Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.managedLibrary">
      <summary>
        <para>Значение BuildFile.role управляемой сборки, содержащей скомпилированный код скрипта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.manifestAssetBundle">
      <summary>
        <para>Значение BuildFile.role манифеста AssetBundle, который представляет собой AssetBundle, содержащий информацию о других AssetBundle и их зависимостях.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.monoConfig">
      <summary>
        <para>Значение BuildFile.role для файлов, используемых средой выполнения Mono в качестве данных конфигурации.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.monoRuntime">
      <summary>
        <para>Значение BuildFile.role для файлов, составляющих саму среду выполнения Mono.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.resourcesFile">
      <summary>
        <para>Значение BuildFile.role файла, содержащего содержимое папки «Ресурсы» проекта, упакованное в один файл.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.scene">
      <summary>
        <para>Значение BuildFile.role файла, содержащего упакованное содержимое сцены.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.sharedAssets">
      <summary>
        <para>Значение BuildFile.role файла, содержащего объекты ресурсов, которые являются общими для разных сцен. Примерами объектов активов являются текстуры, модели и аудио.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.streamingAsset">
      <summary>
        <para>Значение BuildFile.role для файлов, скопированных в сборку без изменений из папки StreamingAssets в проекте.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.streamingResourceFile">
      <summary>
        <para>Значение BuildFile.role файла, содержащего потоковые данные ресурсов.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Reporting.PackedAssetInfo">
      <summary>
        <para>Содержит информацию об одном упакованном активе.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.PackedAssetInfo.id">
      <summary>
        <para>Уникальный идентификатор упакованного Актива.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.PackedAssetInfo.offset">
      <summary>
        <para>Смещение в файле PackedAssets, указывающее начало упакованного актива.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.PackedAssetInfo.packedSize">
      <summary>
        <para>Размер упакованного актива.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.PackedAssetInfo.sourceAssetGUID">
      <summary>
        <para>Глобальный уникальный идентификатор (GUID) исходного актива, который процесс сборки использовал для создания упакованного актива.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.PackedAssetInfo.sourceAssetPath">
      <summary>
        <para>Путь к исходному активу, который процесс сборки использовал для создания актива пакета, относительно каталога проекта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.PackedAssetInfo.type">
      <summary>
        <para>Тип исходного актива, который процесс сборки использовал для создания актива пакета, например изображения, сетки или аудио.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Reporting.PackedAssets">
      <summary>
        <para>Расширение класса BuildReport, которое отслеживает, как активы влияют на размер сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.PackedAssets.contents">
      <summary>
        <para>Массив объектов PackedAssetInfo, содержащий информацию об активах, включенных в пакет PackedAssets, например размер и тип упакованного актива.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.PackedAssets.file">
      <summary>
        <para>Идентификатор BuildFile, который содержит содержимое упакованного файла Asset.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.PackedAssets.overhead">
      <summary>
        <para>Размер заголовка упакованного файла ресурса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.PackedAssets.shortPath">
      <summary>
        <para>Путь к файлу пакета активов относительно папки данных сборки.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Reporting.ScenesUsingAsset">
      <summary>
        <para>Содержит информацию о том, какие сцены в сборке имеют ссылки на актив в сборке.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.ScenesUsingAsset.assetPath">
      <summary>
        <para>Путь ресурса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.ScenesUsingAsset.scenePaths">
      <summary>
        <para>Список сцен в сборке, относящихся к активу, идентифицируемый строкой, содержащей индекс сцены в списке BuildPlayerOptions.scenes, а также путь к сцене.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Reporting.ScenesUsingAssets">
      <summary>
        <para>Расширение класса BuildReport, которое отслеживает, какие сцены в сборке имеют ссылки на определенный ресурс в сборке.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.ScenesUsingAssets.list">
      <summary>
        <para>Массив ScenesUsingAsset, содержащий информацию об активах, включенных в сборку.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Reporting.StrippingInfo">
      <summary>
        <para>Объект StrippingInfo содержит информацию о том, какие модули машинного кода все еще присутствуют в сборке, и причины, по которым они все еще присутствуют.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.StrippingInfo.includedModules">
      <summary>
        <para>Собственные модули движка, которые были включены в сборку.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Reporting.StrippingInfo.GetReasonsForIncluding(System.String)">
      <summary>
        <para>Возвращает список зависимостей или причин, по которым данный объект был включен в сборку.</para>
      </summary>
      <param name="entityName">Имя модуля ядра, класса или другого объекта, присутствующего в сборке.</param>
      <returns>
        <para>Список модулей, классов или других сущностей, из-за которых предоставленная сущность была включена в сборку.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.BuildAssetBundleOptions">
      <summary>
        <para>Варианты создания набора активов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildAssetBundleOptions.AppendHashToAssetBundleName">
      <summary>
        <para>Добавьте хэш к имени assetsBundle.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildAssetBundleOptions.AssetBundleStripUnityVersion">
      <summary>
        <para>Удаляет номер версии Unity в заголовках архивного файла и сериализованного файла во время сборки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildAssetBundleOptions.ChunkBasedCompression">
      <summary>
        <para>Используйте сжатие LZ4 на основе фрагментов при создании AssetBundle.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildAssetBundleOptions.CollectDependencies">
      <summary>
        <para>Включает все зависимости.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildAssetBundleOptions.CompleteAssets">
      <summary>
        <para>Принудительное включение всего ресурса.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildAssetBundleOptions.DeterministicAssetBundle">
      <summary>
        <para>Создает пакет ресурсов, используя хэш для идентификатора объекта, хранящегося в наборе ресурсов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildAssetBundleOptions.DisableLoadAssetByFileName">
      <summary>
        <para>Отключает загрузку Asset Bundle по имени файла.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildAssetBundleOptions.DisableLoadAssetByFileNameWithExtension">
      <summary>
        <para>Отключает пакет активов LoadAsset по имени файла с расширением.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildAssetBundleOptions.DisableWriteTypeTree">
      <summary>
        <para>Не включайте информацию о типе в AssetBundle.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildAssetBundleOptions.DryRunBuild">
      <summary>
        <para>Выполните пробную сборку.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildAssetBundleOptions.ForceRebuildAssetBundle">
      <summary>
        <para>Принудительно пересобрать активыBundles.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildAssetBundleOptions.IgnoreTypeTreeChanges">
      <summary>
        <para>Игнорировать изменения дерева типов при проверке добавочной сборки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildAssetBundleOptions.None">
      <summary>
        <para>Сборка assetsBundle без каких-либо специальных опций.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildAssetBundleOptions.StrictMode">
      <summary>
        <para>Не позволяйте сборке завершиться успешно, если во время нее появляются сообщения об ошибках.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildAssetBundleOptions.UncompressedAssetBundle">
      <summary>
        <para>Не сжимайте данные при создании AssetBundle.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.BuildOptions">
      <summary>
        <para>Варианты построения. Несколько параметров можно комбинировать вместе.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.AcceptExternalModificationsToPlayer">
      <summary>
        <para>Используется при сборке проектов Xcode (iOS) или Eclipse (Android).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.AllowDebugging">
      <summary>
        <para>Разрешить отладчикам сценариев удаленно подключаться к проигрывателю.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.AutoRunPlayer">
      <summary>
        <para>Запустите встроенный плеер.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.BuildAdditionalStreamedScenes">
      <summary>
        <para>Создайте пакет сжатых ресурсов, содержащий потоковые сцены, загружаемые с помощью класса UnityWebRequest.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.BuildScriptsOnly">
      <summary>
        <para>Создавайте сценарии только в проекте.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.CleanBuildCache">
      <summary>
        <para>Очистите все кэшированные результаты сборки, что приведет к полной перестройке всех скриптов и всех данных игрока.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.CompressWithLz4">
      <summary>
        <para>Используйте сжатие LZ4 на основе фрагментов при создании проигрывателя.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.CompressWithLz4HC">
      <summary>
        <para>При создании проигрывателя используйте LZ4 с высоким сжатием на основе фрагментов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.ConnectToHost">
      <summary>
        <para>Настраивает проигрыватель на подключение к редактору.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.ConnectWithProfiler">
      <summary>
        <para>Запустите плеер с подключением к профайлеру в редакторе.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.CustomConnectionID">
      <summary>
        <para>Определяет, должен ли игрок использовать настраиваемый идентификатор подключения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.DetailedBuildReport">
      <summary>
        <para>Создает дополнительную информацию в BuildReport.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.Development">
      <summary>
        <para>Создайте разрабатываемую версию проигрывателя.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.EnableCodeCoverage">
      <summary>
        <para>Включает покрытие кода. Вы можете использовать это как дополнительный способ включения покрытия кода на платформах, которые не поддерживают аргументы командной строки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.EnableDeepProfilingSupport">
      <summary>
        <para>Включает поддержку глубокого профилирования в проигрывателе.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.EnableHeadlessMode">
      <summary>
        <para>Варианты сборки автономного плеера в безголовом режиме.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.ForceEnableAssertions">
      <summary>
        <para>Включите утверждения в сборку. По умолчанию утверждения включаются только в разрабатываемые сборки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.ForceOptimizeScriptCompilation">
      <summary>
        <para>Принудительная полная оптимизация компиляции скриптов в сборках для разработки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.IncludeTestAssemblies">
      <summary>
        <para>Сборка будет включать сборки для тестирования.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.None">
      <summary>
        <para>Выполнить указанную сборку без особых настроек и дополнительных задач.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.NoUniqueIdentifier">
      <summary>
        <para>Заставит buildGUID установить все нули.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.PatchPackage">
      <summary>
        <para>Исправление пакета приложения для разработки, а не его полная перестройка.

Поддерживаемые платформы: Android.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.ShaderLivelinkSupport">
      <summary>
        <para>Включить поддержку Shader Livelink.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.ShowBuiltPlayer">
      <summary>
        <para>Показать встроенный плеер.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.StrictMode">
      <summary>
        <para>Не позволяйте сборке завершиться успешно, если во время нее появляются сообщения об ошибках.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.SymlinkLibraries">
      <summary>
        <para>Библиотеки времени выполнения Symlink при создании проекта iOS Xcode. (Более быстрое время итерации).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.SymlinkSources">
      <summary>
        <para>Источники символических ссылок при создании проекта. Это полезно, если вы изменяете исходные файлы внутри сгенерированного проекта и хотите вернуть изменения в свой проект Unity или пакет.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.UncompressedAssetBundle">
      <summary>
        <para>Не сжимайте данные при создании набора ресурсов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.WaitForPlayerConnection">
      <summary>
        <para>Настраивает проигрыватель на ожидание соединения с проигрывателем при запуске проигрывателя.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.BuildPipeline">
      <summary>
        <para>Позволяет программно создавать проигрыватели или пакеты AssetBundle, которые можно загружать из Интернета.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.BuildPipeline.isBuildingPlayer">
      <summary>
        <para>Плеер в настоящее время создается?</para>
      </summary>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildAssetBundle">
      <summary>
        <para>Создает набор ресурсов.</para>
      </summary>
      <param name="mainAsset">Позволяет указать конкретный объект, который можно удобно получить с помощью AssetBundle.mainAsset.</param>
      <param name="assets">Массив ресурсов для записи в пакет.</param>
      <param name="pathName">Имя файла для записи пакета сжатых ресурсов.</param>
      <param name="assetBundleOptions">Автоматически включать зависимости или всегда включать полные ресурсы, а не только точные объекты, на которые есть ссылки.</param>
      <param name="targetPlatform">Платформа для сборки пакета.</param>
      <param name="crc">Необязательный выходной параметр crc можно использовать для получения контрольной суммы CRC для сгенерированного AssetBundle, которую можно использовать для проверки содержимого при загрузке AssetBundle с помощью UnityWebRequestAssetBundle.GetAssetBundle.</param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildAssetBundle">
      <summary>
        <para>Создает набор ресурсов.</para>
      </summary>
      <param name="mainAsset">Позволяет указать конкретный объект, который можно удобно получить с помощью AssetBundle.mainAsset.</param>
      <param name="assets">Массив ресурсов для записи в пакет.</param>
      <param name="pathName">Имя файла для записи пакета сжатых ресурсов.</param>
      <param name="assetBundleOptions">Автоматически включать зависимости или всегда включать полные ресурсы, а не только точные объекты, на которые есть ссылки.</param>
      <param name="targetPlatform">Платформа для сборки пакета.</param>
      <param name="crc">Необязательный выходной параметр crc можно использовать для получения контрольной суммы CRC для сгенерированного AssetBundle, которую можно использовать для проверки содержимого при загрузке AssetBundle с помощью UnityWebRequestAssetBundle.GetAssetBundle.</param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildAssetBundle">
      <summary>
        <para>Создает набор ресурсов.</para>
      </summary>
      <param name="mainAsset">Позволяет указать конкретный объект, который можно удобно получить с помощью AssetBundle.mainAsset.</param>
      <param name="assets">Массив ресурсов для записи в пакет.</param>
      <param name="pathName">Имя файла для записи пакета сжатых ресурсов.</param>
      <param name="assetBundleOptions">Автоматически включать зависимости или всегда включать полные ресурсы, а не только точные объекты, на которые есть ссылки.</param>
      <param name="targetPlatform">Платформа для сборки пакета.</param>
      <param name="crc">Необязательный выходной параметр crc можно использовать для получения контрольной суммы CRC для сгенерированного AssetBundle, которую можно использовать для проверки содержимого при загрузке AssetBundle с помощью UnityWebRequestAssetBundle.GetAssetBundle.</param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildAssetBundle">
      <summary>
        <para>Создает набор ресурсов.</para>
      </summary>
      <param name="mainAsset">Позволяет указать конкретный объект, который можно удобно получить с помощью AssetBundle.mainAsset.</param>
      <param name="assets">Массив ресурсов для записи в пакет.</param>
      <param name="pathName">Имя файла для записи пакета сжатых ресурсов.</param>
      <param name="assetBundleOptions">Автоматически включать зависимости или всегда включать полные ресурсы, а не только точные объекты, на которые есть ссылки.</param>
      <param name="targetPlatform">Платформа для сборки пакета.</param>
      <param name="crc">Необязательный выходной параметр crc можно использовать для получения контрольной суммы CRC для сгенерированного AssetBundle, которую можно использовать для проверки содержимого при загрузке AssetBundle с помощью UnityWebRequestAssetBundle.GetAssetBundle.</param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildAssetBundle(UnityEngine.Object,UnityEngine.Object[],System.String,UnityEditor.BuildAssetBundleOptions,UnityEditor.BuildTarget)">
      <summary>
        <para>Создает набор ресурсов.</para>
      </summary>
      <param name="mainAsset">Позволяет указать конкретный объект, который можно удобно получить с помощью AssetBundle.mainAsset.</param>
      <param name="assets">Массив ресурсов для записи в пакет.</param>
      <param name="pathName">Имя файла для записи пакета сжатых ресурсов.</param>
      <param name="assetBundleOptions">Автоматически включать зависимости или всегда включать полные ресурсы, а не только точные объекты, на которые есть ссылки.</param>
      <param name="targetPlatform">Платформа для сборки пакета.</param>
      <param name="crc">Необязательный выходной параметр crc можно использовать для получения контрольной суммы CRC для сгенерированного AssetBundle, которую можно использовать для проверки содержимого при загрузке AssetBundle с помощью UnityWebRequestAssetBundle.GetAssetBundle.</param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildAssetBundle(UnityEngine.Object,UnityEngine.Object[],System.String,System.UInt32&amp;,UnityEditor.BuildAssetBundleOptions,UnityEditor.BuildTarget)">
      <summary>
        <para>Создает набор ресурсов.</para>
      </summary>
      <param name="mainAsset">Позволяет указать конкретный объект, который можно удобно получить с помощью AssetBundle.mainAsset.</param>
      <param name="assets">Массив ресурсов для записи в пакет.</param>
      <param name="pathName">Имя файла для записи пакета сжатых ресурсов.</param>
      <param name="assetBundleOptions">Автоматически включать зависимости или всегда включать полные ресурсы, а не только точные объекты, на которые есть ссылки.</param>
      <param name="targetPlatform">Платформа для сборки пакета.</param>
      <param name="crc">Необязательный выходной параметр crc можно использовать для получения контрольной суммы CRC для сгенерированного AssetBundle, которую можно использовать для проверки содержимого при загрузке AssetBundle с помощью UnityWebRequestAssetBundle.GetAssetBundle.</param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildAssetBundleExplicitAssetNames">
      <summary>
        <para>Создает набор ресурсов с пользовательскими именами для ресурсов.</para>
      </summary>
      <param name="assets">Коллекция ресурсов, которые будут встроены в пакет ресурсов. Пакеты ресурсов могут содержать любые ресурсы, найденные в папке проекта.</param>
      <param name="assetNames">Массив строк того же размера, что и количество активов.
Они будут использоваться в качестве имен активов, которые вы затем можете передать в AssetBundle.Load для загрузки определенного актива. Используйте BuildAssetBundle, чтобы вместо этого использовать только пути к ресурсам.</param>
      <param name="pathName">Место, куда будет записан сжатый пакет ресурсов.</param>
      <param name="assetBundleOptions">Автоматически включать зависимости или всегда включать полные ресурсы, а не только точные объекты, на которые есть ссылки.</param>
      <param name="targetPlatform">Платформа, на которой будет использоваться комплект ресурсов.</param>
      <param name="crc">Необязательный выходной параметр, используемый для получения контрольной суммы CRC для сгенерированного AssetBundle. (Используется для проверки содержимого при загрузке AssetBundles с помощью UnityWebRequestAssetBundle.GetAssetBundle().)</param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildAssetBundleExplicitAssetNames">
      <summary>
        <para>Создает набор ресурсов с пользовательскими именами для ресурсов.</para>
      </summary>
      <param name="assets">Коллекция ресурсов, которые будут встроены в пакет ресурсов. Пакеты ресурсов могут содержать любые ресурсы, найденные в папке проекта.</param>
      <param name="assetNames">Массив строк того же размера, что и количество активов.
Они будут использоваться в качестве имен активов, которые вы затем можете передать в AssetBundle.Load для загрузки определенного актива. Используйте BuildAssetBundle, чтобы вместо этого использовать только пути к ресурсам.</param>
      <param name="pathName">Место, куда будет записан сжатый пакет ресурсов.</param>
      <param name="assetBundleOptions">Автоматически включать зависимости или всегда включать полные ресурсы, а не только точные объекты, на которые есть ссылки.</param>
      <param name="targetPlatform">Платформа, на которой будет использоваться комплект ресурсов.</param>
      <param name="crc">Необязательный выходной параметр, используемый для получения контрольной суммы CRC для сгенерированного AssetBundle. (Используется для проверки содержимого при загрузке AssetBundles с помощью UnityWebRequestAssetBundle.GetAssetBundle().)</param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildAssetBundleExplicitAssetNames">
      <summary>
        <para>Создает набор ресурсов с пользовательскими именами для ресурсов.</para>
      </summary>
      <param name="assets">Коллекция ресурсов, которые будут встроены в пакет ресурсов. Пакеты ресурсов могут содержать любые ресурсы, найденные в папке проекта.</param>
      <param name="assetNames">Массив строк того же размера, что и количество активов.
Они будут использоваться в качестве имен активов, которые вы затем можете передать в AssetBundle.Load для загрузки определенного актива. Используйте BuildAssetBundle, чтобы вместо этого использовать только пути к ресурсам.</param>
      <param name="pathName">Место, куда будет записан сжатый пакет ресурсов.</param>
      <param name="assetBundleOptions">Автоматически включать зависимости или всегда включать полные ресурсы, а не только точные объекты, на которые есть ссылки.</param>
      <param name="targetPlatform">Платформа, на которой будет использоваться комплект ресурсов.</param>
      <param name="crc">Необязательный выходной параметр, используемый для получения контрольной суммы CRC для сгенерированного AssetBundle. (Используется для проверки содержимого при загрузке AssetBundles с помощью UnityWebRequestAssetBundle.GetAssetBundle().)</param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildAssetBundleExplicitAssetNames">
      <summary>
        <para>Создает набор ресурсов с пользовательскими именами для ресурсов.</para>
      </summary>
      <param name="assets">Коллекция ресурсов, которые будут встроены в пакет ресурсов. Пакеты ресурсов могут содержать любые ресурсы, найденные в папке проекта.</param>
      <param name="assetNames">Массив строк того же размера, что и количество активов.
Они будут использоваться в качестве имен активов, которые вы затем можете передать в AssetBundle.Load для загрузки определенного актива. Используйте BuildAssetBundle, чтобы вместо этого использовать только пути к ресурсам.</param>
      <param name="pathName">Место, куда будет записан сжатый пакет ресурсов.</param>
      <param name="assetBundleOptions">Автоматически включать зависимости или всегда включать полные ресурсы, а не только точные объекты, на которые есть ссылки.</param>
      <param name="targetPlatform">Платформа, на которой будет использоваться комплект ресурсов.</param>
      <param name="crc">Необязательный выходной параметр, используемый для получения контрольной суммы CRC для сгенерированного AssetBundle. (Используется для проверки содержимого при загрузке AssetBundles с помощью UnityWebRequestAssetBundle.GetAssetBundle().)</param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildAssetBundleExplicitAssetNames(UnityEngine.Object[],System.String[],System.String,UnityEditor.BuildAssetBundleOptions,UnityEditor.BuildTarget)">
      <summary>
        <para>Создает набор ресурсов с пользовательскими именами для ресурсов.</para>
      </summary>
      <param name="assets">Коллекция ресурсов, которые будут встроены в пакет ресурсов. Пакеты ресурсов могут содержать любые ресурсы, найденные в папке проекта.</param>
      <param name="assetNames">Массив строк того же размера, что и количество активов.
Они будут использоваться в качестве имен активов, которые вы затем можете передать в AssetBundle.Load для загрузки определенного актива. Используйте BuildAssetBundle, чтобы вместо этого использовать только пути к ресурсам.</param>
      <param name="pathName">Место, куда будет записан сжатый пакет ресурсов.</param>
      <param name="assetBundleOptions">Автоматически включать зависимости или всегда включать полные ресурсы, а не только точные объекты, на которые есть ссылки.</param>
      <param name="targetPlatform">Платформа, на которой будет использоваться комплект ресурсов.</param>
      <param name="crc">Необязательный выходной параметр, используемый для получения контрольной суммы CRC для сгенерированного AssetBundle. (Используется для проверки содержимого при загрузке AssetBundles с помощью UnityWebRequestAssetBundle.GetAssetBundle().)</param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildAssetBundleExplicitAssetNames(UnityEngine.Object[],System.String[],System.String,System.UInt32&amp;,UnityEditor.BuildAssetBundleOptions,UnityEditor.BuildTarget)">
      <summary>
        <para>Создает набор ресурсов с пользовательскими именами для ресурсов.</para>
      </summary>
      <param name="assets">Коллекция ресурсов, которые будут встроены в пакет ресурсов. Пакеты ресурсов могут содержать любые ресурсы, найденные в папке проекта.</param>
      <param name="assetNames">Массив строк того же размера, что и количество активов.
Они будут использоваться в качестве имен активов, которые вы затем можете передать в AssetBundle.Load для загрузки определенного актива. Используйте BuildAssetBundle, чтобы вместо этого использовать только пути к ресурсам.</param>
      <param name="pathName">Место, куда будет записан сжатый пакет ресурсов.</param>
      <param name="assetBundleOptions">Автоматически включать зависимости или всегда включать полные ресурсы, а не только точные объекты, на которые есть ссылки.</param>
      <param name="targetPlatform">Платформа, на которой будет использоваться комплект ресурсов.</param>
      <param name="crc">Необязательный выходной параметр, используемый для получения контрольной суммы CRC для сгенерированного AssetBundle. (Используется для проверки содержимого при загрузке AssetBundles с помощью UnityWebRequestAssetBundle.GetAssetBundle().)</param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildAssetBundles(System.String,UnityEditor.BuildAssetBundleOptions,UnityEditor.BuildTarget)">
      <summary>
        <para>Соберите все AssetBundles, указанные в редакторе.</para>
      </summary>
      <param name="outputPath">Выходной путь для AssetBundles.</param>
      <param name="assetBundleOptions">Варианты сборки AssetBundle.</param>
      <param name="targetPlatform">Выбранная целевая платформа сборки.</param>
      <returns>
        <para>Манифест со списком всех AssetBundles, включенных в эту сборку.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildAssetBundles(System.String,UnityEditor.AssetBundleBuild[],UnityEditor.BuildAssetBundleOptions,UnityEditor.BuildTarget)">
      <summary>
        <para>Соберите AssetBundles из карты здания.</para>
      </summary>
      <param name="outputPath">Выходной путь для AssetBundles.</param>
      <param name="builds">Карта здания AssetBundle.</param>
      <param name="assetBundleOptions">Варианты сборки AssetBundle.</param>
      <param name="targetPlatform">Целевая платформа сборки.</param>
      <returns>
        <para>Манифест со списком всех AssetBundles, включенных в эту сборку.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildCanBeAppended(UnityEditor.BuildTarget,System.String)">
      <summary>
        <para>Проверяет, может ли Unity добавить сборку.</para>
      </summary>
      <param name="target">Объект BuildTarget для сборки.</param>
      <param name="location">Путь, по которому Unity создает приложение.</param>
      <returns>
        <para>Возвращает перечисление UnityEditor.CanAppendBuild, указывающее, может ли Unity добавить сборку.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildPlayer(UnityEditor.BuildPlayerOptions)">
      <summary>
        <para>Создает игрока.</para>
      </summary>
      <param name="buildPlayerOptions">Предоставьте различные параметры для управления поведением BuildPipeline.BuildPlayer.</param>
      <returns>
        <para>BuildReport, предоставляющий информацию о процессе сборки.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildPlayer(System.String[],System.String,UnityEditor.BuildTarget,UnityEditor.BuildOptions)">
      <summary>
        <para>Создает игрока. Эти перегрузки по-прежнему поддерживаются, но будут заменены. Вместо этого используйте BuildPlayer (BuildPlayerOptions buildPlayerOptions).</para>
      </summary>
      <param name="scenes">Сцены для включения в сборку. Если пусто, сборка включает только текущую открытую сцену. Пути указаны относительно папки проекта (AssetsMyLevelsMyScene.unity).</param>
      <param name="locationPathName">Путь, по которому будет собрано приложение.</param>
      <param name="target">Объект BuildTarget для сборки.</param>
      <param name="options">Дополнительные параметры сборки, например, запускать ли встроенный проигрыватель.</param>
      <param name="levels">
      </param>
      <returns>
        <para>Сообщение об ошибке, если произошла ошибка.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildPlayer(UnityEditor.EditorBuildSettingsScene[],System.String,UnityEditor.BuildTarget,UnityEditor.BuildOptions)">
      <summary>
        <para>Создает игрока. Эти перегрузки по-прежнему поддерживаются, но будут заменены. Вместо этого используйте BuildPlayer (BuildPlayerOptions buildPlayerOptions).</para>
      </summary>
      <param name="scenes">Сцены для включения в сборку. Если пусто, сборка включает только текущую открытую сцену. Пути указаны относительно папки проекта (AssetsMyLevelsMyScene.unity).</param>
      <param name="locationPathName">Путь, по которому будет собрано приложение.</param>
      <param name="target">Объект BuildTarget для сборки.</param>
      <param name="options">Дополнительные параметры сборки, например, запускать ли встроенный проигрыватель.</param>
      <param name="levels">
      </param>
      <returns>
        <para>Сообщение об ошибке, если произошла ошибка.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildStreamedSceneAssetBundle(System.String[],System.String,UnityEditor.BuildTarget)">
      <summary>
        <para>Собирает одну или несколько сцен и все их зависимости в сжатый пакет ресурсов.</para>
      </summary>
      <param name="levels">Пути уровней для включения в комплект ресурсов.</param>
      <param name="locationPath">Путь к выходному комплекту ресурсов.</param>
      <param name="target">Платформа среды выполнения, на которой будет использоваться комплект ресурсов.</param>
      <param name="crc">Выходной параметр для получения контрольной суммы CRC сгенерированного пакета ресурсов.</param>
      <param name="options">Варианты сборки. Возможные значения см. в разделе BuildOptions.</param>
      <returns>
        <para>Строка с сообщением об ошибке, пустая в случае успеха.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildStreamedSceneAssetBundle(System.String[],System.String,UnityEditor.BuildTarget,System.UInt32&amp;)">
      <summary>
        <para>Собирает одну или несколько сцен и все их зависимости в сжатый пакет ресурсов.</para>
      </summary>
      <param name="levels">Пути уровней для включения в комплект ресурсов.</param>
      <param name="locationPath">Путь к выходному комплекту ресурсов.</param>
      <param name="target">Платформа среды выполнения, на которой будет использоваться комплект ресурсов.</param>
      <param name="crc">Выходной параметр для получения контрольной суммы CRC сгенерированного пакета ресурсов.</param>
      <param name="options">Варианты сборки. Возможные значения см. в разделе BuildOptions.</param>
      <returns>
        <para>Строка с сообщением об ошибке, пустая в случае успеха.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildStreamedSceneAssetBundle(System.String[],System.String,UnityEditor.BuildTarget,UnityEditor.BuildOptions)">
      <summary>
        <para>Собирает одну или несколько сцен и все их зависимости в сжатый пакет ресурсов.</para>
      </summary>
      <param name="levels">Пути уровней для включения в комплект ресурсов.</param>
      <param name="locationPath">Путь к выходному комплекту ресурсов.</param>
      <param name="target">Платформа среды выполнения, на которой будет использоваться комплект ресурсов.</param>
      <param name="crc">Выходной параметр для получения контрольной суммы CRC сгенерированного пакета ресурсов.</param>
      <param name="options">Варианты сборки. Возможные значения см. в разделе BuildOptions.</param>
      <returns>
        <para>Строка с сообщением об ошибке, пустая в случае успеха.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildStreamedSceneAssetBundle(System.String[],System.String,UnityEditor.BuildTarget,System.UInt32&amp;,UnityEditor.BuildOptions)">
      <summary>
        <para>Собирает одну или несколько сцен и все их зависимости в сжатый пакет ресурсов.</para>
      </summary>
      <param name="levels">Пути уровней для включения в комплект ресурсов.</param>
      <param name="locationPath">Путь к выходному комплекту ресурсов.</param>
      <param name="target">Платформа среды выполнения, на которой будет использоваться комплект ресурсов.</param>
      <param name="crc">Выходной параметр для получения контрольной суммы CRC сгенерированного пакета ресурсов.</param>
      <param name="options">Варианты сборки. Возможные значения см. в разделе BuildOptions.</param>
      <returns>
        <para>Строка с сообщением об ошибке, пустая в случае успеха.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.BuildPipeline.GetBuildTargetName(UnityEditor.BuildTarget)">
      <summary>
        <para>Учитывая, что BuildTarget вернет известное строковое представление для целевой платформы сборки.</para>
      </summary>
      <param name="targetPlatform">Экземпляр перечисления BuildTarget.</param>
      <returns>
        <para>Имя целевой платформы, представленное переданным в BuildTarget.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.BuildPipeline.GetCRCForAssetBundle(System.String,System.UInt32&amp;)">
      <summary>
        <para>Извлеките контрольную сумму crc для данного AssetBundle.</para>
      </summary>
      <param name="targetPath">
      </param>
      <param name="crc">
      </param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.GetHashForAssetBundle(System.String,UnityEngine.Hash128&amp;)">
      <summary>
        <para>Извлеките хэш для данного AssetBundle.</para>
      </summary>
      <param name="targetPath">
      </param>
      <param name="hash">
      </param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.GetPlaybackEngineDirectory(UnityEditor.BuildTarget,UnityEditor.BuildOptions)">
      <summary>
        <para>Возвращает путь к каталогу проигрывателя. Например, Editor\Data\PlaybackEngines\AndroidPlayer.

В некоторых случаях путь к каталогу плеера может зависеть от BuildOptions.Development.</para>
      </summary>
      <param name="target">Создать цель.</param>
      <param name="options">Варианты сборки.</param>
      <param name="buildTargetGroup">Создать целевую группу.</param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.GetPlaybackEngineDirectory(UnityEditor.BuildTargetGroup,UnityEditor.BuildTarget,UnityEditor.BuildOptions)">
      <summary>
        <para>Возвращает путь к каталогу проигрывателя. Например, Editor\Data\PlaybackEngines\AndroidPlayer.

В некоторых случаях путь к каталогу плеера может зависеть от BuildOptions.Development.</para>
      </summary>
      <param name="target">Создать цель.</param>
      <param name="options">Варианты сборки.</param>
      <param name="buildTargetGroup">Создать целевую группу.</param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.GetPlayerConnectionInitiateMode(UnityEditor.BuildTarget,UnityEditor.BuildOptions)">
      <summary>
        <para>Возвращает текущий режим, используемый игроками для подключения к хосту.</para>
      </summary>
      <param name="targetPlatform">
      </param>
      <param name="buildOptions">
      </param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.IsBuildTargetSupported(UnityEditor.BuildTargetGroup,UnityEditor.BuildTarget)">
      <summary>
        <para>Возвращает true, если указанная цель сборки в настоящее время доступна в редакторе.</para>
      </summary>
      <param name="buildTargetGroup">построить целевую группу</param>
      <param name="target">построить цель</param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.PopAssetDependencies">
      <summary>
        <para>Позволяет управлять перекрестными ссылками и зависимостями между различными пакетами ресурсов и сборками проигрывателя.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.BuildPipeline.PushAssetDependencies">
      <summary>
        <para>Позволяет управлять перекрестными ссылками и зависимостями между различными пакетами ресурсов и сборками проигрывателя.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.BuildPipeline.WriteBootConfig(System.String,UnityEditor.BuildTarget,UnityEditor.BuildOptions)">
      <summary>
        <para>Записывает файл «boot.config», содержащий информацию о конфигурации для самых ранних этапов запуска ядра.</para>
      </summary>
      <param name="outputFile">Место для записи файла.</param>
      <param name="target">Платформа для этой сборки.</param>
      <param name="options">Опции для этой сборки.</param>
    </member>
    <member name="T:UnityEditor.BuildPlayerOptions">
      <summary>
        <para>Предоставьте различные параметры для управления поведением BuildPipeline.BuildPlayer.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.BuildPlayerOptions.assetBundleManifestPath">
      <summary>
        <para>Путь к файлу манифеста, описывающему все пакеты ресурсов, используемые в сборке (необязательно).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.BuildPlayerOptions.extraScriptingDefines">
      <summary>
        <para>Пользовательские определения препроцессора, используемые при компиляции сборок для плеера.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.BuildPlayerOptions.locationPathName">
      <summary>
        <para>Путь, по которому будет собрано приложение.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.BuildPlayerOptions.options">
      <summary>
        <para>Дополнительные параметры сборки, например, запускать ли встроенный проигрыватель.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.BuildPlayerOptions.scenes">
      <summary>
        <para>Сцены, которые будут включены в сборку.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.BuildPlayerOptions.subtarget">
      <summary>
        <para>Подцель для сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.BuildPlayerOptions.target">
      <summary>
        <para>Объект BuildTarget для сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.BuildPlayerOptions.targetGroup">
      <summary>
        <para>BuildTargetGroup для сборки.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.BuildPlayerWindow">
      <summary>
        <para>Окно настроек сборки по умолчанию.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.BuildPlayerWindow.BuildMethodException">
      <summary>
        <para>Исключения, используемые для обозначения прерывания или сбоя в обратных вызовах, зарегистрированных с помощью BuildPlayerWindow.RegisterBuildPlayerHandler и BuildPlayerWindow.RegisterGetBuildPlayerOptionsHandler.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.BuildPlayerWindow.BuildMethodException.#ctor">
      <summary>
        <para>Создайте новое исключение BuildMethodException.</para>
      </summary>
      <param name="message">Отображать это сообщение как ошибку в журнале редактора.</param>
    </member>
    <member name="M:UnityEditor.BuildPlayerWindow.BuildMethodException.#ctor(System.String)">
      <summary>
        <para>Создайте новое исключение BuildMethodException.</para>
      </summary>
      <param name="message">Отображать это сообщение как ошибку в журнале редактора.</param>
    </member>
    <member name="T:UnityEditor.BuildPlayerWindow.DefaultBuildMethods">
      <summary>
        <para>Методы сборки по умолчанию для BuildPlayerWindow.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.BuildPlayerWindow.DefaultBuildMethods.BuildPlayer(UnityEditor.BuildPlayerOptions)">
      <summary>
        <para>Встроенный обработчик по умолчанию для выполнения сборки проигрывателя. Может использоваться для обеспечения функциональности по умолчанию в окне пользовательского проигрывателя сборки.</para>
      </summary>
      <param name="options">Варианты сборки.</param>
    </member>
    <member name="M:UnityEditor.BuildPlayerWindow.DefaultBuildMethods.GetBuildPlayerOptions(UnityEditor.BuildPlayerOptions)">
      <summary>
        <para>Встроенный обработчик по умолчанию для расчета параметров сборки проигрывателя. Может использоваться для обеспечения функциональности по умолчанию в окне пользовательского проигрывателя сборки.</para>
      </summary>
      <param name="defaultBuildPlayerOptions">Параметры по умолчанию.</param>
      <returns>
        <para>Вычисленный BuildPlayerOptions.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.BuildPlayerWindow.RegisterBuildPlayerHandler(System.Action`1&lt;UnityEditor.BuildPlayerOptions&gt;)">
      <summary>
        <para>Зарегистрируйте делегата для перехвата или переопределения процесса сборки, выполняемого с помощью кнопок «Сборка» и «Сборка и запуск». Регистрация нулевого значения восстановит поведение по умолчанию, что эквивалентно вызову BuildPlayerWindow.DefaultBuildMethods.BuildPlayer.</para>
      </summary>
      <param name="func">Делегируйте System.Action, который принимает параметр BuildPipeline.BuildPlayerOptions.</param>
    </member>
    <member name="M:UnityEditor.BuildPlayerWindow.RegisterGetBuildPlayerOptionsHandler(System.Func`2&lt;UnityEditor.BuildPlayerOptions,UnityEditor.BuildPlayerOptions&gt;)">
      <summary>
        <para>Зарегистрируйте метод делегата для вычисления BuildPlayerOptions, которые передаются обработчику проигрывателя сборки. Регистрация нулевого значения восстановит поведение по умолчанию, что эквивалентно вызову BuildPlayerWindow.DefaultBuildMethods.GetBuildPlayerOptions.</para>
      </summary>
      <param name="func">Делегируйте System.Func, который принимает параметр BuildPlayerOptions. Значение, переданное делегату, будет представлять параметры по умолчанию. Возвращаемое значение будет передано обработчику проигрывателя сборки по умолчанию или пользовательскому обработчику, установленному с помощью BuildPlayerWindow.RegisterBuildPlayerHandler.</param>
    </member>
    <member name="M:UnityEditor.BuildPlayerWindow.ShowBuildPlayerWindow">
      <summary>
        <para>Откройте окно настроек сборки.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.BuildTarget">
      <summary>
        <para>Целевая платформа сборки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.iOS">
      <summary>
        <para>Создайте проигрыватель iOS.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.iPhone">
      <summary>
        <para>УСТАРЕЛО: используйте iOS. Создайте проигрыватель iOS.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.tvOS">
      <summary>
        <para>Сборка для платформы Apple tvOS.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.Android">
      <summary>
        <para>Создайте отдельное приложение для Android в формате .apk.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.CloudRendering">
      <summary>
        <para>Создайте автономный CloudRendering.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.LinuxHeadlessSimulation">
      <summary>
        <para>Создайте автономную версию LinuxHeadlessSimulation.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.N3DS">
      <summary>
        <para>Сборка для платформы Nintendo 3DS.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.PS4">
      <summary>
        <para>Создайте автономную версию PS4.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.PS5">
      <summary>
        <para>Сборка для платформы PlayStation 5.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.Stadia">
      <summary>
        <para>Создайте автономную Stadia.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.StandaloneLinux">
      <summary>
        <para>Создайте автономный Linux.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.StandaloneLinux64">
      <summary>
        <para>Создайте автономную 64-разрядную версию Linux.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.StandaloneLinuxUniversal">
      <summary>
        <para>Создайте автономную универсальную версию Linux.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.StandaloneOSX">
      <summary>
        <para>Создайте автономную macOS (64-разрядная версия Intel).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.StandaloneOSXIntel">
      <summary>
        <para>Создайте автономную 32-разрядную версию macOS Intel. (Эта цель сборки устарела)</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.StandaloneOSXIntel64">
      <summary>
        <para>Создайте автономную 64-разрядную версию macOS Intel. (Эта цель сборки устарела)</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.StandaloneWindows">
      <summary>
        <para>Создайте автономную версию Windows.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.StandaloneWindows64">
      <summary>
        <para>Создайте автономную 64-разрядную версию Windows.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.Switch">
      <summary>
        <para>Создайте плеер Nintendo Switch.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.WebGL">
      <summary>
        <para>WebGL.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.WebPlayer">
      <summary>
        <para>Создайте веб-плеер. (Эта цель сборки устарела. Сборка для веб-проигрывателя больше не будет поддерживаться в будущих версиях Unity.)</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.WebPlayerStreamed">
      <summary>
        <para>Создайте потоковый веб-плеер.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.WSAPlayer">
      <summary>
        <para>Создайте проигрыватель приложений Магазина Windows.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.XboxOne">
      <summary>
        <para>Создайте автономную консоль Xbox One.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.BuildTargetGroup">
      <summary>
        <para>Создать целевую группу.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTargetGroup.iOS">
      <summary>
        <para>Цель Apple iOS.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTargetGroup.iPhone">
      <summary>
        <para>УСТАРЕЛО: используйте iOS. Цель Apple iOS.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTargetGroup.tvOS">
      <summary>
        <para>Цель Apple для tvOS.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTargetGroup.Android">
      <summary>
        <para>Цель Android.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTargetGroup.CloudRendering">
      <summary>
        <para>Цель CloudRendering.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTargetGroup.LinuxHeadlessSimulation">
      <summary>
        <para>Цель LinuxHeadlessSimulation.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTargetGroup.N3DS">
      <summary>
        <para>Цель Nintendo 3DS.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTargetGroup.PS4">
      <summary>
        <para>Цель Sony Playstation 4.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTargetGroup.PS5">
      <summary>
        <para>Цель Sony Playstation 5.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTargetGroup.Stadia">
      <summary>
        <para>Цель Google Stadia.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTargetGroup.Standalone">
      <summary>
        <para>Целевой ПК (Windows, Mac, Linux).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTargetGroup.Switch">
      <summary>
        <para>Цель Nintendo Switch.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTargetGroup.Unknown">
      <summary>
        <para>Неизвестная цель.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTargetGroup.WebGL">
      <summary>
        <para>WebGL.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTargetGroup.WebPlayer">
      <summary>
        <para>Цель веб-плеера Mac/ПК.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTargetGroup.WSA">
      <summary>
        <para>Цель приложений Магазина Windows.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTargetGroup.XboxOne">
      <summary>
        <para>Цель Microsoft Xbox One.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.CacheServerConnectionChangedParameters">
      <summary>
        <para>Структура, используемая для AssetDatabase.cacheServerConnectionChanged.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.CacheServerMode">
      <summary>
        <para>Выбирает режим конфигурации кэш-сервера.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.CacheServerMode.AsPreferences">
      <summary>
        <para>Используйте это, если хотите использовать настройки сервера глобального кэша.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.CacheServerMode.Disabled">
      <summary>
        <para>Используйте это, если хотите отключить использование кэш-сервера для проекта.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.CacheServerMode.Enabled">
      <summary>
        <para>Используйте это, если вы хотите включить использование настроек кэш-сервера для конкретного проекта.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.CacheServerValidationMode">
      <summary>
        <para>Параметры ускоренного режима проверки сервера.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.CacheServerValidationMode.Disabled">
      <summary>
        <para>Отключите проверку для сервера кэширования.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.CacheServerValidationMode.Enabled">
      <summary>
        <para>Рассчитать и загрузить хэши. Проверять хэши, предоставленные Accelerator, во время загрузки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.CacheServerValidationMode.Required">
      <summary>
        <para>Рассчитать и загрузить хэши контента в ускоритель. Требовать хэши, предоставленные Accelerator, для проверки загрузки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.CacheServerValidationMode.UploadOnly">
      <summary>
        <para>Рассчитайте хэши контента для загруженных артефактов и отправьте их в ускоритель для проверки.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.CallbackOrderAttribute">
      <summary>
        <para>Базовый класс для атрибутов, которым требуется индекс обратного вызова.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Callbacks.DidReloadScripts">
      <summary>
        <para>Добавьте этот атрибут в метод, чтобы получать уведомление после перезагрузки скриптов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Callbacks.DidReloadScripts.#ctor">
      <summary>
        <para>Атрибут DidReloadScripts.</para>
      </summary>
      <param name="callbackOrder">Порядок, в котором будут обрабатываться отдельные атрибуты.</param>
    </member>
    <member name="M:UnityEditor.Callbacks.DidReloadScripts.#ctor(System.Int32)">
      <summary>
        <para>Атрибут DidReloadScripts.</para>
      </summary>
      <param name="callbackOrder">Порядок, в котором будут обрабатываться отдельные атрибуты.</param>
    </member>
    <member name="T:UnityEditor.Callbacks.OnOpenAssetAttributeMode">
      <summary>
        <para>Указывает, является ли декорированный метод OnOpenAssetAttribute функцией проверки, которая проверяет, обрабатывается ли открытие ресурса Unity или пользовательским скриптом.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Callbacks.OnOpenAssetAttributeMode.Execute">
      <summary>
        <para>Указывает, что декорированный метод OnOpenAssetAttribute является открывающей функцией.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Callbacks.OnOpenAssetAttributeMode.Validate">
      <summary>
        <para>Указывает, что декорированный метод OnOpenAssetAttribute является функцией проверки.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Callbacks.PostProcessBuildAttribute">
      <summary>
        <para>Добавьте этот атрибут в метод, чтобы получать уведомление сразу после создания проигрывателя.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Callbacks.PostProcessSceneAttribute">
      <summary>
        <para>Добавьте этот атрибут в метод, чтобы получать уведомление сразу после создания сцены.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Callbacks.RunAfterAssemblyAttribute">
      <summary>
        <para>Добавьте этот атрибут в метод обратного вызова, чтобы отметить, что этот обратный вызов должен выполняться после любых обратных вызовов, являющихся частью указанной сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Callbacks.RunAfterAssemblyAttribute.assemblyName">
      <summary>
        <para>Имя сборки, которая должна быть запущена перед этим обратным вызовом.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Callbacks.RunAfterAssemblyAttribute.#ctor(System.String)">
      <summary>
        <para>Добавьте этот атрибут в метод обратного вызова, чтобы отметить, что этот обратный вызов должен выполняться после любых обратных вызовов, являющихся частью указанной сборки.</para>
      </summary>
      <param name="assemblyName">Имя сборки, которая должна быть запущена перед этим обратным вызовом.</param>
    </member>
    <member name="T:UnityEditor.Callbacks.RunAfterClassAttribute">
      <summary>
        <para>Добавьте этот атрибут в метод обратного вызова, чтобы отметить, что этот обратный вызов должен выполняться после любых обратных вызовов, являющихся частью указанного класса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Callbacks.RunAfterClassAttribute.classType">
      <summary>
        <para>Тип класса, который должен быть запущен перед этим обратным вызовом.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Callbacks.RunAfterClassAttribute.#ctor(System.Type)">
      <summary>
        <para>Добавьте этот атрибут в метод обратного вызова, чтобы отметить, что этот обратный вызов должен выполняться после любых обратных вызовов, являющихся частью указанного класса.</para>
      </summary>
      <param name="type">Тип класса, который должен быть запущен перед этим обратным вызовом.</param>
      <param name="assemblyQualifiedName">Полное сборкой имя типа класса, которое должно быть запущено перед этим обратным вызовом. Этот атрибут зависимости будет игнорироваться, если имя не может быть разрешено, например, если класс отсутствует в текущем проекте.</param>
    </member>
    <member name="M:UnityEditor.Callbacks.RunAfterClassAttribute.#ctor(System.String)">
      <summary>
        <para>Добавьте этот атрибут в метод обратного вызова, чтобы отметить, что этот обратный вызов должен выполняться после любых обратных вызовов, являющихся частью указанного класса.</para>
      </summary>
      <param name="type">Тип класса, который должен быть запущен перед этим обратным вызовом.</param>
      <param name="assemblyQualifiedName">Полное сборкой имя типа класса, которое должно быть запущено перед этим обратным вызовом. Этот атрибут зависимости будет игнорироваться, если имя не может быть разрешено, например, если класс отсутствует в текущем проекте.</param>
    </member>
    <member name="T:UnityEditor.Callbacks.RunAfterPackageAttribute">
      <summary>
        <para>Добавьте этот атрибут в метод обратного вызова, чтобы отметить, что этот обратный вызов должен выполняться после любых обратных вызовов, являющихся частью указанного пакета.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Callbacks.RunAfterPackageAttribute.packageName">
      <summary>
        <para>Имя пакета, который должен быть запущен перед этим обратным вызовом.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Callbacks.RunAfterPackageAttribute.#ctor(System.String)">
      <summary>
        <para>Добавьте этот атрибут в метод обратного вызова, чтобы отметить, что этот обратный вызов должен выполняться после любых обратных вызовов, являющихся частью указанного пакета.</para>
      </summary>
      <param name="packageName">Имя пакета, который должен быть запущен перед этим обратным вызовом.</param>
    </member>
    <member name="T:UnityEditor.Callbacks.RunBeforeAssemblyAttribute">
      <summary>
        <para>Добавьте этот атрибут в метод обратного вызова, чтобы указать, что этот обратный вызов должен выполняться перед любыми обратными вызовами, являющимися частью указанной сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Callbacks.RunBeforeAssemblyAttribute.assemblyName">
      <summary>
        <para>Имя сборки, которая должна быть вызвана после этого обратного вызова.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Callbacks.RunBeforeAssemblyAttribute.#ctor(System.String)">
      <summary>
        <para>Добавьте этот атрибут в метод обратного вызова, чтобы указать, что этот обратный вызов должен выполняться перед любыми обратными вызовами, являющимися частью указанной сборки.</para>
      </summary>
      <param name="assemblyName">Имя сборки, которая должна быть вызвана после этого обратного вызова.</param>
    </member>
    <member name="T:UnityEditor.Callbacks.RunBeforeClassAttribute">
      <summary>
        <para>Добавьте этот атрибут в метод обратного вызова, чтобы отметить, что этот обратный вызов должен выполняться перед любыми обратными вызовами, которые являются частью указанного класса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Callbacks.RunBeforeClassAttribute.classType">
      <summary>
        <para>Тип класса, который должен быть запущен перед этим обратным вызовом.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Callbacks.RunBeforeClassAttribute.#ctor(System.Type)">
      <summary>
        <para>Добавьте этот атрибут в метод обратного вызова, чтобы отметить, что этот обратный вызов должен выполняться перед любыми обратными вызовами, которые являются частью указанного класса.</para>
      </summary>
      <param name="type">Тип класса, который должен быть запущен после этого обратного вызова.</param>
      <param name="assemblyQualifiedName">Полное сборкой имя типа класса, которое должно быть запущено после этого обратного вызова. Этот атрибут зависимости будет игнорироваться, если имя не может быть разрешено, например, если класс отсутствует в текущем проекте.</param>
    </member>
    <member name="M:UnityEditor.Callbacks.RunBeforeClassAttribute.#ctor(System.String)">
      <summary>
        <para>Добавьте этот атрибут в метод обратного вызова, чтобы отметить, что этот обратный вызов должен выполняться перед любыми обратными вызовами, которые являются частью указанного класса.</para>
      </summary>
      <param name="type">Тип класса, который должен быть запущен после этого обратного вызова.</param>
      <param name="assemblyQualifiedName">Полное сборкой имя типа класса, которое должно быть запущено после этого обратного вызова. Этот атрибут зависимости будет игнорироваться, если имя не может быть разрешено, например, если класс отсутствует в текущем проекте.</param>
    </member>
    <member name="T:UnityEditor.Callbacks.RunBeforePackageAttribute">
      <summary>
        <para>Добавьте этот атрибут в метод обратного вызова, чтобы отметить, что этот обратный вызов должен выполняться перед любыми обратными вызовами, которые являются частью указанного пакета.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Callbacks.RunBeforePackageAttribute.packageName">
      <summary>
        <para>Имя пакета, который должен быть запущен после этого обратного вызова.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Callbacks.RunBeforePackageAttribute.#ctor(System.String)">
      <summary>
        <para>Добавьте этот атрибут в метод обратного вызова, чтобы отметить, что этот обратный вызов должен выполняться перед любыми обратными вызовами, которые являются частью указанного пакета.</para>
      </summary>
      <param name="packageName">Имя пакета, который должен быть запущен после этого обратного вызова.</param>
    </member>
    <member name="T:UnityEditor.CameraEditor">
      <summary>
        <para>Редактор камер Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.settings">
      <summary>
        <para>Настройки редактора камеры.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.OnDestroy">
      <summary>
        <para>См. ScriptableObject.OnDestroy.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.OnDisable">
      <summary>
        <para>См. ScriptableObject.OnDisable.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.OnEnable">
      <summary>
        <para>См. ScriptableObject.OnEnable.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.OnInspectorGUI">
      <summary>
        <para>См. Editor.OnInspectorGUI.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.OnSceneGUI">
      <summary>
        <para>См. Editor.OnSceneGUI.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.CameraEditor.Settings">
      <summary>
        <para>Содержит все доступные для рисования элементы CameraEditor.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.allowDynamicResolution">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемой камеры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.allowMSAA">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемой камеры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.backgroundColor">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемой камеры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.clearFlags">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемой камеры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.cullingMask">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемой камеры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.depth">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемой камеры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.farClippingPlane">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемой камеры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.focalLength">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемой камеры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.fovAxisMode">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемой камеры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.gateFit">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемой камеры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.lensShift">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемой камеры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.nearClippingPlane">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемой камеры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.normalizedViewPortRect">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемой камеры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.occlusionCulling">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемой камеры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.orthographic">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемой камеры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.orthographicSize">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемой камеры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.renderingPath">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемой камеры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.sensorSize">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемой камеры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.stereoConvergence">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемой камеры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.stereoSeparation">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемой камеры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.targetDisplay">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемой камеры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.targetEye">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемой камеры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.targetTexture">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемой камеры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.verticalFOV">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемой камеры.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.ApplyModifiedProperties">
      <summary>
        <para>См. SerializedObject.ApplyModifiedProperties.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawBackgroundColor">
      <summary>
        <para>Рисует виджет цвета фона [[CameraEditor] по умолчанию.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawCameraWarnings(UnityEngine.Camera)">
      <summary>
        <para>Отображает предупреждения [[CameraEditor] по умолчанию, выдаваемые камерой.</para>
      </summary>
      <param name="camera">Камера, с которой считываются предупреждения.</param>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawClearFlags">
      <summary>
        <para>Отрисовывает виджет сброса флажков [[CameraEditor] по умолчанию.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawClippingPlanes">
      <summary>
        <para>Рисует стандартный виджет [[CameraEditor] плоскостей отсечения.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawCullingMask">
      <summary>
        <para>Рисует виджет маски отбраковки [[CameraEditor] по умолчанию.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawDepth">
      <summary>
        <para>Рисует виджет глубины [[CameraEditor] по умолчанию.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawDynamicResolution">
      <summary>
        <para>Рисует виджет динамического разрешения [[CameraEditor] по умолчанию.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawHDR">
      <summary>
        <para>Отрисовывает виджет [[CameraEditor] HDR по умолчанию.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawMSAA">
      <summary>
        <para>Рисует стандартный виджет [[CameraEditor] MSAA.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawMultiDisplay">
      <summary>
        <para>Рисует многоэкранный виджет [[CameraEditor] по умолчанию.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawNormalizedViewPort">
      <summary>
        <para>Отрисовывает виджет области просмотра [[CameraEditor] по умолчанию.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawOcclusionCulling">
      <summary>
        <para>Рисует стандартный [[CameraEditor] виджет отсечения окклюзии.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawProjection">
      <summary>
        <para>Рисует виджет проекции [[CameraEditor] по умолчанию.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawRenderingPath">
      <summary>
        <para>Рисует виджет пути рендеринга [[CameraEditor] по умолчанию.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawTargetEye">
      <summary>
        <para>Рисует стандартный виджет [[CameraEditor] для целевого глаза.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawTargetTexture(System.Boolean)">
      <summary>
        <para>Рисует виджет целевой текстуры [[CameraEditor] по умолчанию.</para>
      </summary>
      <param name="deferred">
      </param>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawVR">
      <summary>
        <para>Рисует стандартный виджет [[CameraEditor] VR.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.HDR">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемой камеры.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.OnEnable">
      <summary>
        <para>Заполните объект настроек данными, связанными с Camera SerializedObject.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.Update">
      <summary>
        <para>См. SerializedObject.Update.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.CameraEditorUtils">
      <summary>
        <para>Утилиты для камер.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditorUtils.DrawFrustumGizmo(UnityEngine.Camera)">
      <summary>
        <para>Нарисуйте усеченную часть камеры.</para>
      </summary>
      <param name="camera">Используемая камера.</param>
    </member>
    <member name="P:UnityEditor.CameraEditorUtils.GameViewAspectRatio">
      <summary>
        <para>Соотношение сторон экрана игры.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditorUtils.GetFrustumAspectRatio(UnityEngine.Camera)">
      <summary>
        <para>Вычислите соотношение сторон усеченного конуса камеры.</para>
      </summary>
      <param name="camera">Используемая камера.</param>
      <returns>
        <para>Соотношение сторон усеченного конуса предоставленной камеры.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.CameraEditorUtils.GetFrustumPlaneAt(UnityEngine.Matrix4x4,UnityEngine.Vector3,System.Single,UnityEngine.Vector3[])">
      <summary>
        <para>Вычислите точки плоскости усечения, обращенные к зрителю на определенном расстоянии.

Массив точек будет заполнен рассчитанными точками в следующем порядке: слева внизу, слева вверху, справа вверху и справа внизу.</para>
      </summary>
      <param name="clipToWorld">Вырезать пространство в матрицу мирового пространства.</param>
      <param name="viewPosition">Посмотреть положение в мировом пространстве.</param>
      <param name="distance">Расстояние от точки обзора плоскости.</param>
      <param name="points">Расчетные баллы. (Требуется минимальный размер 4 элемента).</param>
    </member>
    <member name="M:UnityEditor.CameraEditorUtils.HandleFrustum">
      <summary>
        <para>Нарисуйте ручки усечения для камеры.</para>
      </summary>
      <param name="c">Используемая камера.</param>
    </member>
    <member name="M:UnityEditor.CameraEditorUtils.IsViewportRectValidToRender(UnityEngine.Rect)">
      <summary>
        <para>Проверьте, допустимо ли окно просмотра.</para>
      </summary>
      <param name="normalizedViewPortRect">Область просмотра для проверки.</param>
      <returns>
        <para>Допустимо ли окно просмотра.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.CameraEditorUtils.PerspectiveClipToWorld(UnityEngine.Matrix4x4,UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Вычислить положение точки в пространстве клипа в мировом пространстве.

Компонент z будет использоваться для получения точки на расстоянии z от зрителя.</para>
      </summary>
      <param name="clipToWorld">Прикрепите к мировой матрице для использования.</param>
      <param name="viewPositionWS">Положение зрителя в мировом пространстве.</param>
      <param name="positionCS">Позиция в пространстве клипа.</param>
      <returns>
        <para>Соответствующая позиция в мировом пространстве.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.CameraEditorUtils.TryGetFrustum(UnityEngine.Camera,UnityEngine.Vector3[],UnityEngine.Vector3[],System.Single&amp;)">
      <summary>
        <para>Вычислите углы усеченного конуса.

Углы рассчитываются в следующем порядке: левый нижний, левый верхний, правый верхний, правый нижний.</para>
      </summary>
      <param name="camera">Используемая камера.</param>
      <param name="near">Углы ближней плоскости. (Требуется минимальный размер 4 элемента.)</param>
      <param name="far">Углы дальней плоскости. (Требуется минимальный размер 4 элемента.)</param>
      <param name="frustumAspect">Соотношение сторон усеченного конуса.</param>
      <returns>
        <para>Была ли рассчитана усеченная пирамида.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.CameraEditorUtils.TryGetSensorGateFrustum(UnityEngine.Camera,UnityEngine.Vector3[],UnityEngine.Vector3[],System.Single&amp;)">
      <summary>
        <para>Рассчитайте углы усечения по физическим свойствам датчика, не принимая во внимание посадку затвора.
Чтобы получить реальную усеченную пирамиду с регулировкой литника, используйте CameraEditorUtils.TryGetFrustum.
Этот метод эквивалентен CameraEditorUtils.TryGetFrustum для нефизических камер.

Углы рассчитываются в следующем порядке: левый нижний, левый верхний, правый верхний, правый нижний.</para>
      </summary>
      <param name="camera">Используемая камера.</param>
      <param name="near">Углы ближней плоскости. (Требуется минимальный размер 4 элемента.)</param>
      <param name="far">Углы дальней плоскости. (Требуется минимальный размер 4 элемента.)</param>
      <param name="frustumAspect">Соотношение сторон усеченного конуса.</param>
      <returns>
        <para>Была ли рассчитана усеченная пирамида.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.CameraProjectionCache">
      <summary>
        <para>Проецирование точек из мира в пространство экрана.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraProjectionCache.#ctor(UnityEngine.Camera)">
      <summary>
        <para>Создает CameraProjectionCache с текущим состоянием камеры.</para>
      </summary>
      <param name="camera">Камера, с которой будут скопированы матрицы проекций.</param>
    </member>
    <member name="M:UnityEditor.CameraProjectionCache.GUIToScreenPoint(UnityEngine.Vector2)">
      <summary>
        <para>Преобразует точку из позиции GUI в пространство экрана относительно области просмотра кэшированной камеры.</para>
      </summary>
      <param name="guiPoint">Точка в пространстве GUI для преобразования в пространство экрана.</param>
      <returns>
        <para>guiPoint в пространстве экрана относительно кэшированного окна просмотра камеры.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.CameraProjectionCache.ScreenToGUIPoint(UnityEngine.Vector2)">
      <summary>
        <para>Преобразует точку из экранного пространства в положение графического интерфейса пользователя относительно области просмотра во время создания CameraProjectionCache.</para>
      </summary>
      <param name="screenPoint">Точка в пространстве экрана.</param>
      <returns>
        <para>screenPoint преобразуется в пространство GUI относительно области просмотра кэшированной камеры.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.CameraProjectionCache.WorldToGUIPoint(UnityEngine.Vector3)">
      <summary>
        <para>Преобразует точку мирового пространства в позицию 2D GUI.</para>
      </summary>
      <param name="worldPoint">Точка в мировом пространстве.</param>
      <returns>
        <para>Точка в пространстве GUI.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.CameraProjectionCache.WorldToScreenPoint(UnityEngine.Vector3)">
      <summary>
        <para>Преобразует положение из мирового пространства в пространство экрана, используя кешированную проекцию камеры и окно просмотра.</para>
      </summary>
      <param name="worldPoint">Точка в мировом пространстве.</param>
      <returns>
        <para>Преобразованная точка в пространстве экрана.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.CanAppendBuild">
      <summary>
        <para>Можно ли добавить существующую сборку с помощью BuildOptions.AcceptExternalModificationsToPlayer.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.CanAppendBuild.No">
      <summary>
        <para>Целевая платформа поддерживает добавление сборок, и сборка не находится в допустимом состоянии.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.CanAppendBuild.Unsupported">
      <summary>
        <para>Целевая платформа не поддерживает добавление сборок.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.CanAppendBuild.Yes">
      <summary>
        <para>Целевая платформа поддерживает добавление сборок, и сборка может быть добавлена.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.CanEditMultipleObjects">
      <summary>
        <para>Атрибут, используемый для того, чтобы пользовательский редактор поддерживал редактирование нескольких объектов.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ChangeAssetObjectPropertiesEventArgs">
      <summary>
        <para>Изменение этого типа указывает на изменение свойства объекта актива в памяти. Это происходит, например, когда Undo.RecordObject используется с экземпляром актива (например, текстуры).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ChangeAssetObjectPropertiesEventArgs.guid">
      <summary>
        <para>GUID измененного актива.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ChangeAssetObjectPropertiesEventArgs.instanceId">
      <summary>
        <para>Идентификатор экземпляра измененного актива.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ChangeAssetObjectPropertiesEventArgs.scene">
      <summary>
        <para>Сцена, содержащая измененный ресурс. Обычно это недопустимая сцена, если ресурс явно не связан со сценой (например, RenderSettings).</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ChangeAssetObjectPropertiesEventArgs.#ctor(UnityEditor.GUID,System.Int32,UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Создает новый экземпляр.</para>
      </summary>
      <param name="guid">GUID измененного актива.</param>
      <param name="instanceId">Идентификатор экземпляра измененного актива.</param>
      <param name="scene">Сцена, содержащая измененный ресурс.</param>
    </member>
    <member name="T:UnityEditor.ChangeGameObjectOrComponentPropertiesEventArgs">
      <summary>
        <para>Изменение этого типа указывает на изменение свойства игрового объекта или компонента. Это происходит, например, когда Undo.RecordObject используется с экземпляром компонента.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ChangeGameObjectOrComponentPropertiesEventArgs.instanceId">
      <summary>
        <para>Идентификатор экземпляра измененного GameObject или Component.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ChangeGameObjectOrComponentPropertiesEventArgs.scene">
      <summary>
        <para>Сцена, содержащая GameObject, связанный с изменением. Если Компонент изменен, это GameObject, которому принадлежит компонент.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ChangeGameObjectOrComponentPropertiesEventArgs.#ctor(System.Int32,UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Создает новый экземпляр.</para>
      </summary>
      <param name="instanceId">Идентификатор экземпляра измененного GameObject или Component.</param>
      <param name="scene">Сцена, содержащая GameObject, связанный с изменением. Если Компонент изменен, это GameObject, которому принадлежит компонент.</param>
    </member>
    <member name="T:UnityEditor.ChangeGameObjectParentEventArgs">
      <summary>
        <para>Изменение этого типа указывает на то, что родитель GameObject изменился. Это происходит при использовании Undo.SetTransformParent или SceneManager.MoveGameObjectToScene.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ChangeGameObjectParentEventArgs.instanceId">
      <summary>
        <para>Идентификатор экземпляра GameObject, родитель которого изменился. Обратите внимание, что это не идентификатор экземпляра компонента Transform.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ChangeGameObjectParentEventArgs.newParentInstanceId">
      <summary>
        <para>Идентификатор экземпляра GameObject, который является новым родителем цели. Обратите внимание, что это не идентификатор экземпляра его Transform.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ChangeGameObjectParentEventArgs.newScene">
      <summary>
        <para>Сцена, содержащая нового родителя. Это полезно для определения того, был ли GameObject перемещен в другую сцену или перемещен в корень сцены.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ChangeGameObjectParentEventArgs.previousParentInstanceId">
      <summary>
        <para>Идентификатор экземпляра GameObject, который был предыдущим родителем цели. Обратите внимание, что это не идентификатор экземпляра его Transform.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ChangeGameObjectParentEventArgs.previousScene">
      <summary>
        <para>Сцена, содержащая предыдущего родителя. Это полезно для определения того, был ли GameObject перемещен в другую сцену.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ChangeGameObjectParentEventArgs.#ctor(System.Int32,UnityEngine.SceneManagement.Scene,System.Int32,UnityEngine.SceneManagement.Scene,System.Int32)">
      <summary>
        <para>Создает новый экземпляр.</para>
      </summary>
      <param name="instanceId">Идентификатор экземпляра GameObject, родитель которого изменился. Обратите внимание, что это не идентификатор экземпляра компонента Transform.</param>
      <param name="previousScene">Сцена, содержащая предыдущего родителя. Это полезно для определения того, был ли GameObject перемещен в другую сцену.</param>
      <param name="previousParentInstanceId">Идентификатор экземпляра GameObject, который был предыдущим родителем цели. Обратите внимание, что это не идентификатор экземпляра его Transform.</param>
      <param name="newScene">Сцена, содержащая нового родителя. Это полезно для определения того, был ли GameObject перемещен в другую сцену или перемещен в корень сцены.</param>
      <param name="newParentInstanceId">Идентификатор экземпляра GameObject, который является новым родителем цели. Обратите внимание, что это не идентификатор экземпляра его Transform.</param>
    </member>
    <member name="T:UnityEditor.ChangeGameObjectStructureEventArgs">
      <summary>
        <para>Изменение этого типа указывает на изменение структуры GameObject. Это происходит, когда компонент добавляется или удаляется из GameObject с помощью Undo.AddComponent или Undo.DestroyObjectImmediate.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ChangeGameObjectStructureEventArgs.instanceId">
      <summary>
        <para>Идентификатор экземпляра GameObject, который был изменен.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ChangeGameObjectStructureEventArgs.scene">
      <summary>
        <para>Сцена, содержащая измененный GameObject.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ChangeGameObjectStructureEventArgs.#ctor(System.Int32,UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Создает новый экземпляр.</para>
      </summary>
      <param name="instanceId">Идентификатор экземпляра GameObject, который был изменен.</param>
      <param name="scene">Сцена, содержащая измененный GameObject.</param>
    </member>
    <member name="T:UnityEditor.ChangeGameObjectStructureHierarchyEventArgs">
      <summary>
        <para>Изменение этого типа указывает на то, что структура GameObject изменилась, и любой GameObject в иерархии ниже него мог измениться. Это происходит, например, при использовании Undo.RegisterFullObjectHierarchyUndo.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ChangeGameObjectStructureHierarchyEventArgs.instanceId">
      <summary>
        <para>Идентификатор экземпляра GameObject, который был изменен.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ChangeGameObjectStructureHierarchyEventArgs.scene">
      <summary>
        <para>Сцена, содержащая измененный GameObject.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ChangeGameObjectStructureHierarchyEventArgs.#ctor(System.Int32,UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Создает новый экземпляр.</para>
      </summary>
      <param name="instanceId">Идентификатор экземпляра GameObject, который был изменен.</param>
      <param name="scene">Сцена, содержащая измененный GameObject.</param>
    </member>
    <member name="T:UnityEditor.ChangeSceneEventArgs">
      <summary>
        <para>Изменение этого типа указывает на то, что открытая сцена была изменена («загрязнена») без какой-либо более конкретной информации. Это происходит, например, при использовании EditorSceneManager.MarkSceneDirty.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ChangeSceneEventArgs.scene">
      <summary>
        <para>Сцена, которая была изменена.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ChangeSceneEventArgs.#ctor(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Создает новый экземпляр.</para>
      </summary>
      <param name="scene">Сцена, которая была изменена.</param>
    </member>
    <member name="T:UnityEditor.ClipAnimationInfoCurve">
      <summary>
        <para>Сохраняет кривую и ее имя, которое будет использоваться для создания дополнительных кривых в процессе импорта.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ClipAnimationInfoCurve.curve">
      <summary>
        <para>Кривая анимации.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ClipAnimationInfoCurve.name">
      <summary>
        <para>Имя кривой анимации.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ClipAnimationMaskType">
      <summary>
        <para>Параметры маски AnimationClip для ModelImporterClipAnimation.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ClipAnimationMaskType.CopyFromOther">
      <summary>
        <para>Используйте маску из вашего проекта, чтобы указать, какие преобразования анимации следует импортировать.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ClipAnimationMaskType.CreateFromThisModel">
      <summary>
        <para>Маска, содержащая все преобразования в файле, будет создана внутри.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ClipAnimationMaskType.None">
      <summary>
        <para>Нет Маски. Вся анимация будет импортирована.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.CloudProjectSettings">
      <summary>
        <para>Используйте этот класс для получения информации о текущем выбранном проекте и текущем идентификаторе Unity, который выполнил вход.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CloudProjectSettings.organizationId">
      <summary>
        <para>Идентификатор организации, которой принадлежит этот проект. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CloudProjectSettings.organizationName">
      <summary>
        <para>Название организации, которой принадлежит этот проект. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CloudProjectSettings.projectId">
      <summary>
        <para>Уникальный идентификатор облачного проекта. Он уникален для каждого проекта (только для чтения).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CloudProjectSettings.projectName">
      <summary>
        <para>Имя записи проекта на информационной панели, связанной с этим проектом (только для чтения).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CloudProjectSettings.userId">
      <summary>
        <para>Идентификатор пользователя текущей учетной записи Unity ID (только для чтения).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CloudProjectSettings.userName">
      <summary>
        <para>Имя пользователя текущей учетной записи Unity ID (только для чтения).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ColorPickerHDRConfig">
      <summary>
        <para>Используется в качестве входных данных для ColorField для настройки цветовых диапазонов HDR в ColorPicker.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ColorPickerHDRConfig.maxBrightness">
      <summary>
        <para>Максимально допустимое значение компонента цвета при использовании ColorPicker.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ColorPickerHDRConfig.maxExposureValue">
      <summary>
        <para>Максимальное значение экспозиции, разрешенное в палитре цветов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ColorPickerHDRConfig.minBrightness">
      <summary>
        <para>Минимально допустимое значение компонента цвета при использовании ColorPicker.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ColorPickerHDRConfig.minExposureValue">
      <summary>
        <para>Минимальное значение экспозиции, разрешенное в палитре цветов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ColorPickerHDRConfig.#ctor(System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>
        </para>
      </summary>
      <param name="minBrightness">Минимальное значение яркости, допустимое при использовании палитры цветов.</param>
      <param name="maxBrightness">Максимально допустимое значение яркости при использовании палитры цветов.</param>
      <param name="minExposureValue">Минимальное значение экспозиции, используемое в разделе тонального отображения палитры цветов.</param>
      <param name="maxExposureValue">Максимальное значение экспозиции, используемое в разделе тонального отображения палитры цветов.</param>
    </member>
    <member name="T:UnityEditor.Compilation.AssembliesType">
      <summary>
        <para>Флаги для сборки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.AssembliesType.Editor">
      <summary>
        <para>Выбирает сборки, скомпилированные для редактора, включая тестовые сборки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.AssembliesType.Player">
      <summary>
        <para>Выбирает сборки, скомпилированные для проигрывателя, включая тестовые сборки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.AssembliesType.PlayerWithoutTestAssemblies">
      <summary>
        <para>Выбирает сборки, скомпилированные для проигрывателя, за исключением тестовых сборок.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Compilation.Assembly">
      <summary>
        <para>Класс, представляющий сборку, скомпилированную Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.Assembly.allReferences">
      <summary>
        <para>Возвращает Assembly.assemblyReferences и Assembly.compiledAssemblyReferences вместе.

Это возвращает все сборки, переданные компилятору при сборке этой сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.Assembly.assemblyReferences">
      <summary>
        <para>Ссылки на сборки, используемые для сборки этой сборки.

Ссылки также являются сборками, созданными в рамках проекта Unity.

См. также: Assembly.compiledAssemblyReferences и Assembly.allReferences.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.Assembly.compiledAssemblyReferences">
      <summary>
        <para>Сборка ссылается на предварительно скомпилированные сборки, которые использовались для сборки этой сборки.

См. также: Assembly.assemblyReferences и Assembly.allReferences.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.Assembly.compilerOptions">
      <summary>
        <para>Параметры компилятора, используемые для компиляции сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.Assembly.defines">
      <summary>
        <para>Определения, используемые для компиляции этой сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.Assembly.flags">
      <summary>
        <para>Флаги для сборки.

См. также: AssemblyFlags.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.Assembly.name">
      <summary>
        <para>Имя сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.Assembly.outputPath">
      <summary>
        <para>Полный путь к выходному файлу этой сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.Assembly.rootNamespace">
      <summary>
        <para>Задает корневое пространство имен сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.Assembly.sourceFiles">
      <summary>
        <para>Все исходные файлы, использованные для компиляции этой сборки.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Compilation.Assembly.#ctor(System.String,System.String,System.String[],System.String[],UnityEditor.Compilation.Assembly[],System.String[],UnityEditor.Compilation.AssemblyFlags)">
      <summary>
        <para>Конструктор.</para>
      </summary>
      <param name="name">Имя сборки.</param>
      <param name="outputPath">Вывод сборки.</param>
      <param name="sourceFiles">Исходные файлы сборки.</param>
      <param name="defines">Сборка определяет.</param>
      <param name="assemblyReferences">Ссылки на сборки.</param>
      <param name="compiledAssemblyReferences">Скомпилированные ссылки на сборки.</param>
      <param name="flags">Флаги сборки.</param>
    </member>
    <member name="T:UnityEditor.Compilation.AssemblyBuilder">
      <summary>
        <para>Компилирует сценарии вне папки Assets в управляемую сборку, которую можно использовать внутри папки Assets.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyBuilder.additionalDefines">
      <summary>
        <para>Дополнительные директивы #define, переданные при компиляции сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyBuilder.additionalReferences">
      <summary>
        <para>Дополнительные ссылки на сборки, переданные для компиляции сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyBuilder.assemblyPath">
      <summary>
        <para>Выходной путь сборки для сборки. (Только чтение)</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Compilation.AssemblyBuilder.buildFinished(System.Action`2&lt;System.String,UnityEditor.Compilation.CompilerMessage[]&gt;)">
      <summary>
        <para>Событие, которое вызывается в основном потоке после завершения сборки сборки.</para>
      </summary>
      <param name="value">Первый параметр — это выходной путь сборки. Второй параметр — это сообщения компилятора.</param>
    </member>
    <member name="?:UnityEditor.Compilation.AssemblyBuilder.buildStarted(System.Action`1&lt;System.String&gt;)">
      <summary>
        <para>Событие, вызываемое в основном потоке при запуске сборки сборки.</para>
      </summary>
      <param name="value">Параметр — путь выходной сборки.</param>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyBuilder.buildTarget">
      <summary>
        <para>BuildTarget для сборки сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyBuilder.buildTargetGroup">
      <summary>
        <para>BuildTargetGroup для сборки сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyBuilder.compilerOptions">
      <summary>
        <para>Параметры компилятора для использования при построении сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyBuilder.defaultDefines">
      <summary>
        <para>Определения по умолчанию, используемые при компиляции сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyBuilder.defaultReferences">
      <summary>
        <para>Ссылки по умолчанию, используемые при компиляции сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyBuilder.excludeReferences">
      <summary>
        <para>Ссылки, которые следует исключить при компиляции сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyBuilder.flags">
      <summary>
        <para>Флаги для управления сборкой сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyBuilder.referencesOptions">
      <summary>
        <para>Параметры для управления ссылками, которые Unity использует во время сборки сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyBuilder.scriptPaths">
      <summary>
        <para>Массив путей скрипта, используемых в качестве входных данных для сборки сборки. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyBuilder.status">
      <summary>
        <para>Текущий статус сборки сборки. (Только чтение)</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Compilation.AssemblyBuilder.Build">
      <summary>
        <para>Запускает сборку сборки.

Во время сборки маленький значок прогресса в правом нижнем углу главного окна Unity будет вращаться, а EditorApplication.isCompiling вернет значение true.</para>
      </summary>
      <returns>
        <para>Возвращает true, если сборка запущена. Возвращает false, если сборка не была запущена из-за того, что редактор компилирует скрипты в папке Assets.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.AssemblyBuilder.#ctor(System.String,System.String[])">
      <summary>
        <para>Конструктор AssemblyBuilder.</para>
      </summary>
      <param name="assemblyPath">Путь выходной сборки. Относительно корня проекта.</param>
      <param name="scriptPaths">Массив путей к сценариям, которые должны быть скомпилированы в выходную сборку. Относительно корня проекта.</param>
    </member>
    <member name="T:UnityEditor.Compilation.AssemblyBuilderFlags">
      <summary>
        <para>Флаги, используемые AssemblyBuilder для управления сборкой сборки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.AssemblyBuilderFlags.DevelopmentBuild">
      <summary>
        <para>Определяет, является ли выходная сборка сборкой разработки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.AssemblyBuilderFlags.EditorAssembly">
      <summary>
        <para>Определяет, является ли выходная сборка сборкой редактора.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.AssemblyBuilderFlags.None">
      <summary>
        <para>Нет значения. По умолчанию.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Compilation.AssemblyBuilderStatus">
      <summary>
        <para>Статус сборки AssemblyBuilder.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.AssemblyBuilderStatus.Finished">
      <summary>
        <para>Указывает, что сборка AssemblyBuilder завершена.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.AssemblyBuilderStatus.IsCompiling">
      <summary>
        <para>Указывает, что компилируется сборка AssemblyBuilder.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.AssemblyBuilderStatus.NotStarted">
      <summary>
        <para>Указывает, что сборка AssemblyBuilder не запущена.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Compilation.AssemblyDefinitionException">
      <summary>
        <para>Генерация исключения для ошибок файлов определения сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyDefinitionException.filePaths">
      <summary>
        <para>Пути к файлам определения сборки, вызвавшим исключение.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Compilation.AssemblyDefinitionException.#ctor(System.String,System.String[])">
      <summary>
        <para>Конструктор.</para>
      </summary>
      <param name="message">Сообщение об исключении.</param>
      <param name="filePaths">Пути к файлам определения сборки.</param>
    </member>
    <member name="T:UnityEditor.Compilation.AssemblyDefinitionPlatform">
      <summary>
        <para>Содержит информацию о платформе, поддерживаемой файлами определения сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyDefinitionPlatform.BuildTarget">
      <summary>
        <para>BuildTarget для платформы AssemblyDefinition.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyDefinitionPlatform.DisplayName">
      <summary>
        <para>Отображаемое имя платформы.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyDefinitionPlatform.Name">
      <summary>
        <para>Имя, используемое в файлах определения сборки.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Compilation.AssemblyDefinitionReferenceType">
      <summary>
        <para>Тип ссылки на файл определения сборки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.AssemblyDefinitionReferenceType.Guid">
      <summary>
        <para>Ссылка на GUID файла определения сборки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.AssemblyDefinitionReferenceType.Name">
      <summary>
        <para>Ссылка на имя сборки в файле определения сборки.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Compilation.AssemblyFlags">
      <summary>
        <para>Флаги для сборки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.AssemblyFlags.EditorAssembly">
      <summary>
        <para>Указывает, является ли эта сборка сборкой только для редактора.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.AssemblyFlags.None">
      <summary>
        <para>Нет значения. По умолчанию.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Compilation.CodeOptimization">
      <summary>
        <para>Режим оптимизации кода определяет, компилирует ли UnityEditor скрипты в режиме отладки или в режиме выпуска.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.CodeOptimization.Debug">
      <summary>
        <para>Режим отладки включает отладку C#, но снижает производительность C#.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.CodeOptimization.None">
      <summary>
        <para>Единичное значение для режима оптимизации кода.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.CodeOptimization.Release">
      <summary>
        <para>Режим выпуска отключает отладку C#, но повышает производительность C#.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Compilation.CompilationPipeline">
      <summary>
        <para>Методы и свойства конвейера компиляции скриптов.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Compilation.CompilationPipeline.assemblyCompilationFinished(System.Action`2&lt;System.String,UnityEditor.Compilation.CompilerMessage[]&gt;)">
      <summary>
        <para>Событие, которое вызывается в основном потоке после завершения компиляции сборки.</para>
      </summary>
      <param name="value">Первый параметр — это выходной путь сборки. Второй параметр — это сообщения компилятора.</param>
    </member>
    <member name="?:UnityEditor.Compilation.CompilationPipeline.assemblyCompilationStarted(System.Action`1&lt;System.String&gt;)">
      <summary>
        <para>Событие, которое вызывается в основном потоке при запуске сборки сборки.</para>
      </summary>
      <param name="value">Параметр — путь выходной сборки.</param>
    </member>
    <member name="P:UnityEditor.Compilation.CompilationPipeline.codeOptimization">
      <summary>
        <para>Current Compilation.CodeOptimization|режим оптимизации кода.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Compilation.CompilationPipeline.codeOptimizationChanged(System.Action`1&lt;UnityEditor.Compilation.CodeOptimization&gt;)">
      <summary>
        <para>Это событие запускается всякий раз, когда свойство codeOptimization изменяется между режимами Compilation.CodeOptimization.Debug|Debug и Compilation.CodeOptimization.Release|Release.</para>
      </summary>
      <param name="value">Текущая Compilation.CodeOptimization|значение режима оптимизации кода.</param>
    </member>
    <member name="?:UnityEditor.Compilation.CompilationPipeline.compilationFinished(System.Action`1&lt;System.Object&gt;)">
      <summary>
        <para>Событие, которое вызывается в основном потоке после завершения компиляции сборок.</para>
      </summary>
      <param name="value">Объект контекста, представляющий собой временное хранилище, позволяющее сравнивать события начала и окончания компиляции.</param>
    </member>
    <member name="?:UnityEditor.Compilation.CompilationPipeline.compilationStarted(System.Action`1&lt;System.Object&gt;)">
      <summary>
        <para>Событие, которое вызывается в основном потоке при запуске компиляции сборок.</para>
      </summary>
      <param name="value">Объект контекста, представляющий собой временное хранилище, позволяющее сравнивать события начала и окончания компиляции.</param>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.AssemblyDefinitionReferenceGUIDToGUID(System.String)">
      <summary>
        <para>Преобразует ссылку GUID файла определения сборки в строку GUID.</para>
      </summary>
      <param name="reference">Ссылка на GUID файла определения сборки.</param>
      <returns>
        <para>Строка GUID.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.GetAssemblies(UnityEditor.Compilation.AssembliesType)">
      <summary>
        <para>Получите все сборки сценариев, скомпилированные Unity, отфильтрованные по типу сборок.</para>
      </summary>
      <param name="assembliesType">
      </param>
      <returns>
        <para>Массив сборок скриптов, скомпилированных Unity.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.GetAssemblyDefinitionFilePathFromAssemblyName(System.String)">
      <summary>
        <para>Возвращает путь к файлу определения сборки из имени сборки. Возвращает значение null, если для данного имени сборки нет файла определения сборки.</para>
      </summary>
      <param name="assemblyName">Имя сборки.</param>
      <returns>
        <para>Путь к файлу определения сборки.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.GetAssemblyDefinitionFilePathFromAssemblyReference(System.String)">
      <summary>
        <para>Возвращает путь к файлу определения сборки для GUID файла определения сборки или ссылки на имя сборки. Возвращает null, если для данной ссылки на сборку нет файла определения сборки.</para>
      </summary>
      <param name="reference">GUID файла определения сборки или ссылка на имя сборки.</param>
      <returns>
        <para>Путь к данному файлу определения сборки.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.GetAssemblyDefinitionFilePathFromScriptPath(System.String)">
      <summary>
        <para>Возвращает путь к файлу определения сборки для исходного пути (сценария). Возвращает null, если для данного пути скрипта нет файла определения сборки.</para>
      </summary>
      <param name="sourceFilePath">Путь к исходному файлу (сценарию).</param>
      <returns>
        <para>Путь к файлу определения сборки.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.GetAssemblyDefinitionPlatforms">
      <summary>
        <para>Возвращает все платформы, поддерживаемые файлами определения сборки.

См. также: AssemblyDefinitionPlatform.</para>
      </summary>
      <returns>
        <para>Платформы, поддерживаемые файлами определения сборки.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.GetAssemblyDefinitionReferenceType(System.String)">
      <summary>
        <para>Служебный метод для определения того, является ли ссылка на файл определения сборки ссылкой на GUID или ссылкой на имя сборки.</para>
      </summary>
      <param name="reference">Данная ссылка на файл определения сборки.</param>
      <returns>
        <para>Является ли ссылка идентификатором GUID или именем сборки.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.GetAssemblyNameFromScriptPath(System.String)">
      <summary>
        <para>Возвращает имя сборки для исходного пути (сценария). Возвращает null, если для данного пути скрипта нет имени сборки.</para>
      </summary>
      <param name="sourceFilePath">Исходный путь (скрипт).</param>
      <returns>
        <para>Имя сборки.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.GetAssemblyRootNamespaceFromScriptPath(System.String)">
      <summary>
        <para>Получает корневое пространство имен, связанное с заданным путем скрипта.</para>
      </summary>
      <param name="sourceFilePath">Путь к исходному файлу (сценарию).</param>
      <returns>
        <para>Возвращает корневое пространство имен для данного скрипта. Если для скрипта не определено корневое пространство имен, он возвращает null.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.GetDefinesFromAssemblyName(System.String)">
      <summary>
        <para>Список всех директив #define, используемых для компиляции указанной сборки.</para>
      </summary>
      <param name="assemblyName">Имя сборки без расширения.</param>
      <returns>
        <para>Строковый массив директив #define, объявленных для сборки. Возвращает null, если сборка не найдена.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.GetPrecompiledAssemblyNames">
      <summary>
        <para>Получить все имена предварительно скомпилированных сборок.</para>
      </summary>
      <returns>
        <para>Имена предварительно скомпилированных сборок.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.GetPrecompiledAssemblyPathFromAssemblyName(System.String)">
      <summary>
        <para>Возвращает путь к файлу сборки из имени сборки. Возвращает null, если нет совпадения имени предварительно скомпилированной сборки.</para>
      </summary>
      <param name="assemblyName">Имя сборки.</param>
      <returns>
        <para>Путь к файлу предварительно скомпилированной сборки.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.GetPrecompiledAssemblyPaths(UnityEditor.Compilation.CompilationPipeline/PrecompiledAssemblySources)">
      <summary>
        <para>Возвращает пути к предварительно скомпилированным сборкам, которые включаются при построении сборок редактора и соответствуют любому из заданных источников PrecompiledAssemblySource.</para>
      </summary>
      <param name="precompiledAssemblySources">Определяет, какие пути сборки будут возвращены.</param>
      <returns>
        <para>Массив путей к предварительно скомпилированным сборкам.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.GetResponseFileDefinesFromAssemblyName(System.String)">
      <summary>
        <para>Список всех директив #define, использованных для компиляции указанной сборки из файла ответов.</para>
      </summary>
      <param name="assemblyName">Имя сборки без расширения.</param>
      <returns>
        <para>Строковый массив директив #define, объявленных для сборки. Возвращает null, если сборка не найдена.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.GetSystemAssemblyDirectories(UnityEditor.ApiCompatibilityLevel)">
      <summary>
        <para>Используйте это, чтобы получить список каталогов, содержащих системные ссылки для определенного уровня ApiCompatibilityLevel.</para>
      </summary>
      <param name="apiCompatibilityLevel">
      </param>
      <returns>
        <para>Возвращает массив, заполненный абсолютными путями к каталогам.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.GUIDToAssemblyDefinitionReferenceGUID(System.String)">
      <summary>
        <para>Преобразует заданный GUID в ссылку GUID файла определения сборки.</para>
      </summary>
      <param name="guid">GUID актива данного файла определения сборки.</param>
      <returns>
        <para>Ссылка GUID файла определения сборки для данного GUID актива.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.IsDefineConstraintsCompatible(System.String[],System.String[])">
      <summary>
        <para>Позволяет проверить, удовлетворяются ли указанные ограничения #define указанным списком директив #define.</para>
      </summary>
      <param name="defines">Строковый массив директив #define.</param>
      <param name="defineConstraints">Строковый массив директив #define для проверки совместимости.</param>
      <returns>
        <para>Истинно, если указанные ограничения #define удовлетворяются указанными директивами #define. В противном случае возвращает False.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.ParseResponseFile(System.String,System.String,System.String[])">
      <summary>
        <para>Извлекает ResponseFileData, описывающий содержимое файла ответов.</para>
      </summary>
      <param name="relativePath">Путь к файлу ответов для анализа.</param>
      <param name="projectDirectory">Абсолютный путь к корню каталога Project, в котором находится файл ответов.</param>
      <param name="systemReferenceDirectories">Массив каталогов, содержащих системные справочные библиотеки.</param>
      <returns>
        <para>Описывает содержимое проанализированного файла ответов. Ошибки, определения и т.д.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Compilation.CompilationPipeline.PrecompiledAssemblySources">
      <summary>
        <para>Указывает источники предварительно скомпилированных сборок, на которые ссылаются во время компиляции.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.CompilationPipeline.PrecompiledAssemblySources.All">
      <summary>
        <para>Соответствует всем источникам сборки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.CompilationPipeline.PrecompiledAssemblySources.SystemAssembly">
      <summary>
        <para>Соответствует сборкам, предоставленным целевой платформой.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.CompilationPipeline.PrecompiledAssemblySources.UnityAssembly">
      <summary>
        <para>Соответствует любым сборкам Unity.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.CompilationPipeline.PrecompiledAssemblySources.UnityEditor">
      <summary>
        <para>Соответствует сборкам модулей UnityEditor и редактора.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.CompilationPipeline.PrecompiledAssemblySources.UnityEngine">
      <summary>
        <para>Соответствует сборкам модулей UnityEngine и среды выполнения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.CompilationPipeline.PrecompiledAssemblySources.UserAssembly">
      <summary>
        <para>Соответствует предварительно скомпилированным сборкам, присутствующим в проекте и пакетах.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.RequestScriptCompilation">
      <summary>
        <para>Позволяет вам запросить, чтобы редактор перекомпилировал скрипты в проекте.</para>
      </summary>
      <param name="options">Необязательный параметр, указывающий, должен ли редактор очищать кеш сборки перед компиляцией.</param>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.RequestScriptCompilation(UnityEditor.Compilation.RequestScriptCompilationOptions)">
      <summary>
        <para>Позволяет вам запросить, чтобы редактор перекомпилировал скрипты в проекте.</para>
      </summary>
      <param name="options">Необязательный параметр, указывающий, должен ли редактор очищать кеш сборки перед компиляцией.</param>
    </member>
    <member name="T:UnityEditor.Compilation.CompilerMessage">
      <summary>
        <para>Сообщение компилятора.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.CompilerMessage.column">
      <summary>
        <para>Столбец строки для сообщения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.CompilerMessage.file">
      <summary>
        <para>Файл для сообщения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.CompilerMessage.line">
      <summary>
        <para>Строка файла для сообщения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.CompilerMessage.message">
      <summary>
        <para>Сообщение компилятора.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.CompilerMessage.type">
      <summary>
        <para>Тип сообщения.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Compilation.CompilerMessageType">
      <summary>
        <para>Тип сообщения компилятора.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.CompilerMessageType.Error">
      <summary>
        <para>Сообщение об ошибке.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.CompilerMessageType.Info">
      <summary>
        <para>Информационное сообщение.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.CompilerMessageType.Warning">
      <summary>
        <para>Предупреждающее сообщение.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Compilation.PrecompiledAssemblyException">
      <summary>
        <para>Генерация исключения для ошибок Precompiled Assembly.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.PrecompiledAssemblyException.filePaths">
      <summary>
        <para>Пути к файлам для предварительно скомпилированных сборок, вызвавших исключение.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Compilation.PrecompiledAssemblyException.#ctor(System.String,System.String[])">
      <summary>
        <para>Конструктор.</para>
      </summary>
      <param name="message">Сообщение об исключении.</param>
      <param name="filePaths">Пути к файлам для предварительно скомпилированных сборок.</param>
    </member>
    <member name="T:UnityEditor.Compilation.ReferencesOptions">
      <summary>
        <para>Параметры для управления ссылками Unity на другие файлы определения сборки, которые Unity использует во время компиляции.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.ReferencesOptions.None">
      <summary>
        <para>Параметры по умолчанию.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.ReferencesOptions.UseEngineModules">
      <summary>
        <para>Используйте модули UnityEngine при компиляции.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Compilation.RequestScriptCompilationOptions">
      <summary>
        <para>Параметры для указания поведения CompilationPipeline.RequestScriptCompilation.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.RequestScriptCompilationOptions.CleanBuildCache">
      <summary>
        <para>Очистить все кэшированные результаты сборки, что приведет к полной перестройке всех скриптов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.RequestScriptCompilationOptions.None">
      <summary>
        <para>Поведение по умолчанию. Unity будет перекомпилировать только скрипты, которые были изменены или нуждаются в перекомпиляции из-за изменений в настройках, влияющих на компиляцию скрипта.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Compilation.ResponseFileData">
      <summary>
        <para>Класс данных, используемый для хранения проанализированных данных файла ответов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.ResponseFileData.Defines">
      <summary>
        <para>Массив определяемых символов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.ResponseFileData.Errors">
      <summary>
        <para>Сообщения об ошибках, возникшие при разборе файла ответов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.ResponseFileData.FullPathReferences">
      <summary>
        <para>Массив ссылок на абсолютные пути к сборкам, на которые следует ссылаться на сборки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.ResponseFileData.OtherArguments">
      <summary>
        <para>Дополнительные параметры компилятора записаны как есть в файле ответов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.ResponseFileData.Unsafe">
      <summary>
        <para>Где разрешен «небезопасный» код при компиляции скриптов.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Compilation.ScriptCompilerOptions">
      <summary>
        <para>Параметры компилятора, переданные компилятору скрипта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.ScriptCompilerOptions.AdditionalCompilerArguments">
      <summary>
        <para>Дополнительные аргументы компилятора.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.ScriptCompilerOptions.AllowUnsafeCode">
      <summary>
        <para>Разрешить «небезопасный» код при компиляции скриптов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.ScriptCompilerOptions.AnalyzerConfigPath">
      <summary>
        <para>Сохраняет путь к файлу глобальной конфигурации Roslyn.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.ScriptCompilerOptions.ApiCompatibilityLevel">
      <summary>
        <para>ApiCompatibilityLevel для данной сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.ScriptCompilerOptions.CodeOptimization">
      <summary>
        <para>Указывает, включена ли оптимизация производительности для сборки</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Compilation.ScriptCompilerOptions.#ctor">
      <summary>
        <para>Создает ScriptCompilerOptions со значениями по умолчанию, используемыми для компиляции скрипта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.ScriptCompilerOptions.EmitReferenceAssembly">
      <summary>
        <para>Выдавать эталонную сборку при компиляции скриптов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.ScriptCompilerOptions.LanguageVersion">
      <summary>
        <para>Строковое представление версии языка, используемой для компиляции текущей сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.ScriptCompilerOptions.ResponseFiles">
      <summary>
        <para>Массив путей к файлам ответов, которые влияют на текущую компиляцию.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.ScriptCompilerOptions.RoslynAdditionalFilePaths">
      <summary>
        <para>Сохраняет пути к дополнительным файлам Roslyn Analyzer.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.ScriptCompilerOptions.RoslynAnalyzerDllPaths">
      <summary>
        <para>Сохраняет пути к файлам .dll.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.ScriptCompilerOptions.RoslynAnalyzerRulesetPath">
      <summary>
        <para>Сохраняет путь к файлу набора правил Roslyn.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ComputeShaderImporter">
      <summary>
        <para>Определите параметры импорта вычислительных шейдеров в редакторе Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ComputeShaderImporter.preprocessorOverride">
      <summary>
        <para>Препроцессор, который Unity использует для компиляции этого вычислительного шейдера.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.CrashReporting.CrashReportingSettings">
      <summary>
        <para>API редактора для функции редактора Unity Services. Обычно функция CrashReporting активируется в окне «Службы», но при написании собственного расширения редактора можно использовать этот API.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CrashReporting.CrashReportingSettings.captureEditorExceptions">
      <summary>
        <para>Это логическое поле заставит функцию CrashReporting в Unity фиксировать исключения, возникающие в редакторе во время работы в режиме воспроизведения, если оно истинно, или игнорировать эти ошибки, если ложно.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CrashReporting.CrashReportingSettings.enabled">
      <summary>
        <para>Это логическое поле приведет к тому, что функция CrashReporting в Unity будет включена, если true, или отключена, если false.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CrashReporting.CrashReportingSettings.logBufferSize">
      <summary>
        <para>Служба отчетов о производительности будет хранить в буфере последние сообщения журнала X (Debug.Log и т. д.) для отправки вместе с отчетами о сбоях. Значение по умолчанию — 10 сообщений журнала, максимальное значение — 50. Установите для этого параметра значение 0, чтобы отключить сбор журналов вместе с отчетами о сбоях.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.CreateAssetObjectEventArgs">
      <summary>
        <para>Изменение этого типа указывает на то, что объект актива был создан. Это происходит, например, когда Undo.RegisterCreatedObjectUndo используется с экземпляром ресурса (например, текстуры).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CreateAssetObjectEventArgs.guid">
      <summary>
        <para>GUID нового актива.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CreateAssetObjectEventArgs.instanceId">
      <summary>
        <para>Идентификатор экземпляра измененного актива.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CreateAssetObjectEventArgs.scene">
      <summary>
        <para>Сцена, содержащая новый актив. Обычно это недопустимая сцена, если ресурс явно не связан со сценой (например, RenderSettings).</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CreateAssetObjectEventArgs.#ctor(UnityEditor.GUID,System.Int32,UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Создает новый экземпляр.</para>
      </summary>
      <param name="guid">GUID нового актива.</param>
      <param name="instanceId">Идентификатор экземпляра измененного актива.</param>
      <param name="scene">Сцена, содержащая новый актив.</param>
    </member>
    <member name="T:UnityEditor.CreateGameObjectHierarchyEventArgs">
      <summary>
        <para>Изменение этого типа указывает на то, что GameObject был создан, возможно, с дополнительными объектами ниже него в иерархии. Это происходит, например, когда Undo.RegisterCreatedObjectUndo используется с GameObject.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CreateGameObjectHierarchyEventArgs.instanceId">
      <summary>
        <para>Идентификатор экземпляра GameObject, который был создан.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CreateGameObjectHierarchyEventArgs.scene">
      <summary>
        <para>Сцена, содержащая созданный GameObject.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CreateGameObjectHierarchyEventArgs.#ctor(System.Int32,UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Создает новый экземпляр.</para>
      </summary>
      <param name="instanceId">Идентификатор экземпляра GameObject, который был создан.</param>
      <param name="scene">Сцена, содержащая созданный GameObject.</param>
    </member>
    <member name="T:UnityEditor.CustomEditor">
      <summary>
        <para>Сообщает классу Editor, для какого типа времени выполнения он является редактором.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CustomEditor.isFallback">
      <summary>
        <para>Если true, сопоставлять этот редактор только в том случае, если все нерезервные редакторы не совпадают. По умолчанию false.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CustomEditor.#ctor(System.Type)">
      <summary>
        <para>Определяет, какой тип объекта может редактировать класс пользовательского редактора.</para>
      </summary>
      <param name="inspectedType">Тип, который может редактировать этот редактор.</param>
      <param name="editorForChildClasses">Если true, дочерние классы inspectedType также будут отображать этот редактор. По умолчанию false.</param>
    </member>
    <member name="M:UnityEditor.CustomEditor.#ctor(System.Type,System.Boolean)">
      <summary>
        <para>Определяет, какой тип объекта может редактировать класс пользовательского редактора.</para>
      </summary>
      <param name="inspectedType">Тип, который может редактировать этот редактор.</param>
      <param name="editorForChildClasses">Если true, дочерние классы inspectedType также будут отображать этот редактор. По умолчанию false.</param>
    </member>
    <member name="T:UnityEditor.CustomEditorForRenderPipelineAttribute">
      <summary>
        <para>Сообщает классу Editor, для какого типа времени выполнения он является редактором, когда данный RenderPipeline активирован.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CustomEditorForRenderPipelineAttribute.#ctor(System.Type,System.Type)">
      <summary>
        <para>Определяет, какой тип объекта может редактировать класс пользовательского редактора.</para>
      </summary>
      <param name="inspectedType">Тип, который может редактировать этот редактор.</param>
      <param name="renderPipeline">Тип RenderPipelineAsset, который должен быть активен для использования этого инспектора.</param>
      <param name="editorForChildClasses">Если true, дочерние классы inspectedType также будут отображать этот редактор. По умолчанию false.</param>
    </member>
    <member name="M:UnityEditor.CustomEditorForRenderPipelineAttribute.#ctor(System.Type,System.Type,System.Boolean)">
      <summary>
        <para>Определяет, какой тип объекта может редактировать класс пользовательского редактора.</para>
      </summary>
      <param name="inspectedType">Тип, который может редактировать этот редактор.</param>
      <param name="renderPipeline">Тип RenderPipelineAsset, который должен быть активен для использования этого инспектора.</param>
      <param name="editorForChildClasses">Если true, дочерние классы inspectedType также будут отображать этот редактор. По умолчанию false.</param>
    </member>
    <member name="T:UnityEditor.CustomPreviewAttribute">
      <summary>
        <para>Добавляет дополнительный предварительный просмотр в Инспекторе для указанного типа.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CustomPreviewAttribute.#ctor(System.Type)">
      <summary>
        <para>Сообщает DefaultPreview, для какого класса это предварительный просмотр.</para>
      </summary>
      <param name="type">Тип, для которого вы хотите создать собственный предварительный просмотр.</param>
    </member>
    <member name="T:UnityEditor.CustomPropertyDrawer">
      <summary>
        <para>Сообщает пользовательскому PropertyDrawer или DecoratorDrawer, для какого класса Serializable во время выполнения или PropertyAttribute он является выдвижным ящиком.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CustomPropertyDrawer.#ctor(System.Type)">
      <summary>
        <para>Сообщает классу PropertyDrawer или DecoratorDrawer, для какого класса или атрибута времени выполнения он является выдвижным ящиком.</para>
      </summary>
      <param name="type">Если ящик предназначен для пользовательского класса Serializable, тип должен быть этим классом. Если ящик предназначен для переменных скрипта с определенным атрибутом PropertyAttribute, тип должен быть этим атрибутом.</param>
      <param name="useForChildren">Если true, ящик будет использоваться для любых дочерних элементов указанного класса, если только они не определят свой собственный ящик.</param>
    </member>
    <member name="M:UnityEditor.CustomPropertyDrawer.#ctor(System.Type,System.Boolean)">
      <summary>
        <para>Сообщает классу PropertyDrawer или DecoratorDrawer, для какого класса или атрибута времени выполнения он является выдвижным ящиком.</para>
      </summary>
      <param name="type">Если ящик предназначен для пользовательского класса Serializable, тип должен быть этим классом. Если ящик предназначен для переменных скрипта с определенным атрибутом PropertyAttribute, тип должен быть этим атрибутом.</param>
      <param name="useForChildren">Если true, ящик будет использоваться для любых дочерних элементов указанного класса, если только они не определят свой собственный ящик.</param>
    </member>
    <member name="T:UnityEditor.D3D11FullscreenMode">
      <summary>
        <para>Полноэкранный режим Direct3D 11.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.D3D11FullscreenMode.ExclusiveMode">
      <summary>
        <para>Эксклюзивный режим.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.D3D11FullscreenMode.FullscreenWindow">
      <summary>
        <para>Полноэкранное окно.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.D3D9FullscreenMode">
      <summary>
        <para>Полноэкранный режим Direct3D 9.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.D3D9FullscreenMode.ExclusiveMode">
      <summary>
        <para>Эксклюзивный режим.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.D3D9FullscreenMode.FullscreenWindow">
      <summary>
        <para>Полноэкранное окно.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.DDSImporter">
      <summary>
        <para>Средство импорта текстур позволяет изменять параметры импорта Texture2D для текстур DDS из сценариев редактора.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.DDSImporter.isReadable">
      <summary>
        <para>Доступны ли данные текстуры для чтения из скриптов.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.DecoratorDrawer">
      <summary>
        <para>Базовый класс, из которого создаются настраиваемые ящики декоратора.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.DecoratorDrawer.attribute">
      <summary>
        <para>PropertyAttribute для декоратора. (Только чтение)</para>
      </summary>
    </member>
    <member name="M:UnityEditor.DecoratorDrawer.CanCacheInspectorGUI">
      <summary>
        <para>Переопределите этот метод, чтобы определить, можно ли кэшировать графический интерфейс инспектора для вашего декоратора.</para>
      </summary>
      <returns>
        <para>Можно ли кэшировать графический интерфейс инспектора для вашего декоратора.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.DecoratorDrawer.GetHeight">
      <summary>
        <para>Переопределите этот метод, чтобы указать высоту графического интерфейса для этого декоратора в пикселях.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.DecoratorDrawer.OnGUI(UnityEngine.Rect)">
      <summary>
        <para>Переопределите этот метод, чтобы создать собственный графический интерфейс для декоратора.
См. DecoratorDrawer для примера того, как это использовать.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в графическом интерфейсе декоратора.</param>
    </member>
    <member name="T:UnityEditor.DefaultAsset">
      <summary>
        <para>DefaultAsset используется для активов, у которых нет определенного типа (пока).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.DefaultLightingExplorerExtension">
      <summary>
        <para>Определение по умолчанию для обозревателя освещения. Может быть переопределен полностью или частично.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.DefaultLightingExplorerExtension.#ctor">
      <summary>
        <para>Конструктор.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.DefaultLightingExplorerExtension.Get2DLightColumns">
      <summary>
        <para>Получает определения столбцов для 2D-освещения.</para>
      </summary>
      <returns>
        <para>Возвращает определения столбцов для 2D-освещения.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.DefaultLightingExplorerExtension.Get2DLights">
      <summary>
        <para>Получает массив всех двухмерных источников света в сцене.</para>
      </summary>
      <returns>
        <para>Возвращает массив 2D-освещения.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.DefaultLightingExplorerExtension.GetContentTabs">
      <summary>
        <para>Это возвращает все вкладки по умолчанию для обозревателя освещения.</para>
      </summary>
      <returns>
        <para>Вкладки по умолчанию для обозревателя освещения.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.DefaultLightingExplorerExtension.GetEmissives">
      <summary>
        <para>Возвращает объекты с материалом Emissive.</para>
      </summary>
      <returns>
        <para>Объекты с излучающим материалом.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.DefaultLightingExplorerExtension.GetEmissivesColumns">
      <summary>
        <para>Возвращает определения столбцов для Emissives.</para>
      </summary>
      <returns>
        <para>Определения столбцов для Emissives.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.DefaultLightingExplorerExtension.GetLightColumns">
      <summary>
        <para>Возвращает определения столбцов для источников света.</para>
      </summary>
      <returns>
        <para>Определения столбцов для источников света.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.DefaultLightingExplorerExtension.GetLightProbeColumns">
      <summary>
        <para>Возвращает определения столбцов для Light Probes.</para>
      </summary>
      <returns>
        <para>Определения столбцов для Light Probes.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.DefaultLightingExplorerExtension.GetLightProbes">
      <summary>
        <para>Возвращает световые зонды.</para>
      </summary>
      <returns>
        <para>Световые зонды.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.DefaultLightingExplorerExtension.GetLights">
      <summary>
        <para>Возвращает свет.</para>
      </summary>
      <returns>
        <para>Освещение.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.DefaultLightingExplorerExtension.GetObjectsForLightingExplorer">
      <summary>
        <para>Возвращает объекты типа T для отображения в Light Explorer.</para>
      </summary>
      <returns>
        <para>Возвращает и массив объектов типа T.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.DefaultLightingExplorerExtension.GetReflectionProbeColumns">
      <summary>
        <para>Возвращает определения столбцов для Reflection Probes.</para>
      </summary>
      <returns>
        <para>Определения столбцов для датчиков отражения.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.DefaultLightingExplorerExtension.GetReflectionProbes">
      <summary>
        <para>Возвращает датчики отражения.</para>
      </summary>
      <returns>
        <para>Датчики отражения.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.DestroyAssetObjectEventArgs">
      <summary>
        <para>Изменение этого типа указывает на то, что объект актива был уничтожен. Это происходит, например, когда Undo.DestroyObjectImmediate используется с экземпляром актива (например, текстуры).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.DestroyAssetObjectEventArgs.guid">
      <summary>
        <para>GUID удаленного ресурса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.DestroyAssetObjectEventArgs.instanceId">
      <summary>
        <para>Идентификатор экземпляра измененного актива.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.DestroyAssetObjectEventArgs.scene">
      <summary>
        <para>Сцена, содержащая актив. Обычно это недопустимая сцена, если ресурс явно не связан со сценой (например, RenderSettings).</para>
      </summary>
    </member>
    <member name="M:UnityEditor.DestroyAssetObjectEventArgs.#ctor(UnityEditor.GUID,System.Int32,UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Создает новый экземпляр.</para>
      </summary>
      <param name="guid">GUID удаленного ресурса.</param>
      <param name="instanceId">Идентификатор экземпляра измененного актива.</param>
      <param name="scene">Сцена, содержащая актив.</param>
    </member>
    <member name="T:UnityEditor.DestroyGameObjectHierarchyEventArgs">
      <summary>
        <para>Изменение этого типа указывает на то, что GameObject и вся иерархия ниже него уничтожены. Это происходит, например, когда Undo.DestroyObjectImmediate используется с GameObject.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.DestroyGameObjectHierarchyEventArgs.instanceId">
      <summary>
        <para>Идентификатор экземпляра GameObject, который был уничтожен.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.DestroyGameObjectHierarchyEventArgs.parentInstanceId">
      <summary>
        <para>Идентификатор экземпляра для родительского GameObject того GameObject, который был уничтожен.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.DestroyGameObjectHierarchyEventArgs.scene">
      <summary>
        <para>Сцена, содержащая уничтоженный GameObject.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.DestroyGameObjectHierarchyEventArgs.#ctor(System.Int32,UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Создает новый экземпляр.</para>
      </summary>
      <param name="instanceId">Идентификатор экземпляра GameObject, который был уничтожен.</param>
      <param name="parentInstanceId">Идентификатор экземпляра для родительского GameObject того GameObject, который был уничтожен.</param>
      <param name="scene">Сцена, содержащая GameObject, который был уничтожен.</param>
    </member>
    <member name="M:UnityEditor.DestroyGameObjectHierarchyEventArgs.#ctor(System.Int32,System.Int32,UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Создает новый экземпляр.</para>
      </summary>
      <param name="instanceId">Идентификатор экземпляра GameObject, который был уничтожен.</param>
      <param name="parentInstanceId">Идентификатор экземпляра для родительского GameObject того GameObject, который был уничтожен.</param>
      <param name="scene">Сцена, содержащая GameObject, который был уничтожен.</param>
    </member>
    <member name="T:UnityEditor.DialogOptOutDecisionType">
      <summary>
        <para>Тип решения об отказе, которое может принять пользователь.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DialogOptOutDecisionType.ForThisMachine">
      <summary>
        <para>Решение отказаться от постоянного отображения диалогового окна на текущем компьютере пользователя.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DialogOptOutDecisionType.ForThisSession">
      <summary>
        <para>Решение отказаться от просмотра диалогового окна на время текущего сеанса редактора.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.DragAndDrop">
      <summary>
        <para>Операции перетаскивания в редакторе.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.DragAndDrop.activeControlID">
      <summary>
        <para>Получить или установить идентификатор текущего активного элемента управления перетаскиванием.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.DragAndDrop.objectReferences">
      <summary>
        <para>Ссылки на Object|перетаскиваемые объекты.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.DragAndDrop.paths">
      <summary>
        <para>Перетаскиваемые имена файлов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.DragAndDrop.visualMode">
      <summary>
        <para>Визуальная индикация перетаскивания.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.DragAndDrop.AcceptDrag">
      <summary>
        <para>Подтвердите операцию перетаскивания.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.DragAndDrop.AddDropHandler(UnityEditor.DragAndDrop/ProjectBrowserDropHandler)">
      <summary>
        <para>Разрешить переопределение поведения по умолчанию для соответствующего окна. В одном окне можно зарегистрировать несколько обработчиков. Если обработчик возвращает DragAndDropVisualMode.None, система проверит следующий обработчик. Любые другие результаты (DragAndDropVisualMode.Rejected или другие DragAndDropVisualMode) означают, что этот обработчик обработал событие перетаскивания и никакой другой обработчик вызываться не будет. Последний обработчик является обработчиком Unity по умолчанию.</para>
      </summary>
      <param name="handler">Функция для обработки перетаскивания в соответствующее окно.</param>
    </member>
    <member name="M:UnityEditor.DragAndDrop.AddDropHandler(UnityEditor.DragAndDrop/SceneDropHandler)">
      <summary>
        <para>Разрешить переопределение поведения по умолчанию для соответствующего окна. В одном окне можно зарегистрировать несколько обработчиков. Если обработчик возвращает DragAndDropVisualMode.None, система проверит следующий обработчик. Любые другие результаты (DragAndDropVisualMode.Rejected или другие DragAndDropVisualMode) означают, что этот обработчик обработал событие перетаскивания и никакой другой обработчик вызываться не будет. Последний обработчик является обработчиком Unity по умолчанию.</para>
      </summary>
      <param name="handler">Функция для обработки перетаскивания в соответствующее окно.</param>
    </member>
    <member name="M:UnityEditor.DragAndDrop.AddDropHandler(UnityEditor.DragAndDrop/HierarchyDropHandler)">
      <summary>
        <para>Разрешить переопределение поведения по умолчанию для соответствующего окна. В одном окне можно зарегистрировать несколько обработчиков. Если обработчик возвращает DragAndDropVisualMode.None, система проверит следующий обработчик. Любые другие результаты (DragAndDropVisualMode.Rejected или другие DragAndDropVisualMode) означают, что этот обработчик обработал событие перетаскивания и никакой другой обработчик вызываться не будет. Последний обработчик является обработчиком Unity по умолчанию.</para>
      </summary>
      <param name="handler">Функция для обработки перетаскивания в соответствующее окно.</param>
    </member>
    <member name="M:UnityEditor.DragAndDrop.AddDropHandler(UnityEditor.DragAndDrop/InspectorDropHandler)">
      <summary>
        <para>Разрешить переопределение поведения по умолчанию для соответствующего окна. В одном окне можно зарегистрировать несколько обработчиков. Если обработчик возвращает DragAndDropVisualMode.None, система проверит следующий обработчик. Любые другие результаты (DragAndDropVisualMode.Rejected или другие DragAndDropVisualMode) означают, что этот обработчик обработал событие перетаскивания и никакой другой обработчик вызываться не будет. Последний обработчик является обработчиком Unity по умолчанию.</para>
      </summary>
      <param name="handler">Функция для обработки перетаскивания в соответствующее окно.</param>
    </member>
    <member name="M:UnityEditor.DragAndDrop.GetGenericData(System.String)">
      <summary>
        <para>Получить данные, связанные с текущей операцией перетаскивания.</para>
      </summary>
      <param name="type">
      </param>
    </member>
    <member name="M:UnityEditor.DragAndDrop.HasHandler(System.Int32,System.Delegate)">
      <summary>
        <para>Убедитесь, что обработчик уже зарегистрирован для идентификатора окна назначения.</para>
      </summary>
      <param name="dropDstId">ID целевого окна.</param>
      <param name="handler">Обработчик целевого окна.</param>
      <returns>
        <para>Истинно, если обработчик уже зарегистрирован.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.DragAndDrop.HierarchyDropHandler">
      <summary>
        <para>Обработчик для иерархии.</para>
      </summary>
      <param name="dropTargetInstanceID">ID игрового объекта в окне Hierarchy, которое находится под курсором мыши.</param>
      <param name="parentForDraggedObjects">Параметр parentForDraggedObjects устанавливается только в особых случаях в Prefab Mode (чаще всего он будет нулевым). Если установлено это значение, dropTargetInstanceID равно 0. И клиентский код должен использовать 'parentForDraggedObjects' в качестве принудительного родителя перетаскивания.</param>
      <param name="perform">Истинно, если событие имеет тип EventType.DragPerform.</param>
      <param name="dropMode">Укажите способ перетаскивания объекта в окне Иерархия.</param>
      <returns>
        <para>Возвращает DragAndDropVisualMode.None, если этот обработчик не может обработать событие. В этом случае для обработки будет вызван новый обработчик. Любые другие результаты DragAndDropVisualMode остановят цепочку обработчиков.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.DragAndDrop.InspectorDropHandler">
      <summary>
        <para>Обработчик для инспектора.</para>
      </summary>
      <param name="targets">Целевые объекты операции перетаскивания.</param>
      <param name="perform">Истинно, если событие имеет тип EventType.DragPerform.</param>
      <returns>
        <para>Возвращает DragAndDropVisualMode.None, если этот обработчик не может обработать событие. В этом случае для обработки будет вызван новый обработчик. Любые другие результаты DragAndDropVisualMode остановят цепочку обработчиков.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.DragAndDrop.PrepareStartDrag">
      <summary>
        <para>Очищает данные перетаскивания.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.DragAndDrop.ProjectBrowserDropHandler">
      <summary>
        <para>Обработчик проекта.</para>
      </summary>
      <param name="dragInstanceId">Идентификатор перетаскиваемого ресурса, который перетаскивается в окно браузера проекта.</param>
      <param name="dropUponPath">Путь к перетаскиваемому ресурсу, который перетаскивается в окно браузера проекта.</param>
      <param name="perform">Истинно, если событие имеет тип EventType.DragPerform.</param>
      <returns>
        <para>Возвращает DragAndDropVisualMode.None, если этот обработчик не может обработать событие. В этом случае для обработки будет вызван новый обработчик. Любые другие результаты DragAndDropVisualMode остановят цепочку обработчиков.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.DragAndDrop.RemoveDropHandler(UnityEditor.DragAndDrop/ProjectBrowserDropHandler)">
      <summary>
        <para>Отмените регистрацию определенного обработчика перетаскивания в целевом перетаскивании окна.</para>
      </summary>
      <param name="handler">Обработчик отмены регистрации.</param>
    </member>
    <member name="M:UnityEditor.DragAndDrop.RemoveDropHandler(UnityEditor.DragAndDrop/SceneDropHandler)">
      <summary>
        <para>Отмените регистрацию определенного обработчика перетаскивания в целевом перетаскивании окна.</para>
      </summary>
      <param name="handler">Обработчик отмены регистрации.</param>
    </member>
    <member name="M:UnityEditor.DragAndDrop.RemoveDropHandler(UnityEditor.DragAndDrop/HierarchyDropHandler)">
      <summary>
        <para>Отмените регистрацию определенного обработчика перетаскивания в целевом перетаскивании окна.</para>
      </summary>
      <param name="handler">Обработчик отмены регистрации.</param>
    </member>
    <member name="M:UnityEditor.DragAndDrop.RemoveDropHandler(UnityEditor.DragAndDrop/InspectorDropHandler)">
      <summary>
        <para>Отмените регистрацию определенного обработчика перетаскивания в целевом перетаскивании окна.</para>
      </summary>
      <param name="handler">Обработчик отмены регистрации.</param>
    </member>
    <member name="T:UnityEditor.DragAndDrop.SceneDropHandler">
      <summary>
        <para>Обработчик сцены.</para>
      </summary>
      <param name="dropUpon">Перетащенный игровой объект, который перетаскивается в представление «Сцена».</param>
      <param name="worldPosition">Позиция в мире.</param>
      <param name="viewportPosition">Позиция в окне просмотра.</param>
      <param name="parentForDraggedObjects">Родительское преобразование перетаскиваемого объекта.</param>
      <param name="perform">Истинно, если событие имеет тип EventType.DragPerform.</param>
    </member>
    <member name="M:UnityEditor.DragAndDrop.SetGenericData(System.String,System.Object)">
      <summary>
        <para>Установить данные, связанные с текущей операцией перетаскивания.</para>
      </summary>
      <param name="type">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:UnityEditor.DragAndDrop.StartDrag(System.String)">
      <summary>
        <para>Начать операцию перетаскивания.</para>
      </summary>
      <param name="title">
      </param>
    </member>
    <member name="T:UnityEditor.DragAndDropVisualMode">
      <summary>
        <para>Режим визуальной индикации для операции Drag &amp; Drop.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DragAndDropVisualMode.Copy">
      <summary>
        <para>Копировать перетаскиваемые объекты.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DragAndDropVisualMode.Generic">
      <summary>
        <para>Общая операция перетаскивания.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DragAndDropVisualMode.Link">
      <summary>
        <para>Свяжите перетаскиваемые объекты с целью.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DragAndDropVisualMode.Move">
      <summary>
        <para>Перемещайте перетаскиваемые объекты.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DragAndDropVisualMode.None">
      <summary>
        <para>Нет индикации (перетаскивание выполнять не следует).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DragAndDropVisualMode.Rejected">
      <summary>
        <para>Отклонена операция перетаскивания.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.DragAndDropWindowTarget">
      <summary>
        <para>ID основных окон. Они используются API DragAndDrop.RemoveHandler.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DragAndDropWindowTarget.hierarchy">
      <summary>
        <para>Идентификатор для целевой иерархии.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DragAndDropWindowTarget.inspector">
      <summary>
        <para>Идентификатор для назначения инспектора.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DragAndDropWindowTarget.projectBrowser">
      <summary>
        <para>Идентификатор для таргетинга на браузер проекта.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DragAndDropWindowTarget.sceneView">
      <summary>
        <para>ID для таргетинга на представление сцены.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.DrawCameraMode">
      <summary>
        <para>Режимы рисования для Handles.DrawCamera.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.Albedo">
      <summary>
        <para>Рисуйте объекты только с компонентом альбедо. Это значение устарело. Пожалуйста, используйте DrawCameraMode.RealtimeAlbedo.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.AlphaChannel">
      <summary>
        <para>Камера настроена на отображение альфа-канала рендеринга.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.Baked">
      <summary>
        <para>Рисуйте объекты только с запеченным GI. Это значение устарело. Пожалуйста, используйте DrawCameraMode.BakedLightmap.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.BakedAlbedo">
      <summary>
        <para>Рисовать объекты только с запеченным компонентом альбедо.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.BakedCharting">
      <summary>
        <para>Нарисуйте объекты разными цветами для каждой запеченной диаграммы (UV-остров).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.BakedDirectionality">
      <summary>
        <para>Рисовать объекты только с запеченным компонентом направленности.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.BakedEmissive">
      <summary>
        <para>Рисовать объекты только с запеченным компонентом излучения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.BakedIndices">
      <summary>
        <para>Рисовать объекты только с запеченными индексами.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.BakedLightmap">
      <summary>
        <para>Рисуйте объекты только с запеченной картой освещения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.BakedLightmapCulling">
      <summary>
        <para>Рисуйте объекты с выделенными видимыми текселями карты освещения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.BakedTexelValidity">
      <summary>
        <para>Рисовать объекты только с допустимостью запеченного текселя.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.BakedUVOverlap">
      <summary>
        <para>Рисуйте объекты с выделенными перекрывающимися текселями карты освещения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.Charting">
      <summary>
        <para>Нарисуйте объекты разными цветами для каждой диаграммы в реальном времени (UV-остров).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.Clustering">
      <summary>
        <para>Рисуйте разными цветами для каждого кластера.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.DeferredDiffuse">
      <summary>
        <para>Нарисуйте диффузный цвет G-буфера Deferred Shading.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.DeferredNormal">
      <summary>
        <para>Нарисуйте нормаль G-буфера Deferred Shading к мировому пространству.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.DeferredSmoothness">
      <summary>
        <para>Значение плавности отрисовки G-буфера отложенного затенения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.DeferredSpecular">
      <summary>
        <para>Нарисуйте зеркальный цвет G-буфера Deferred Shading.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.Directionality">
      <summary>
        <para>Рисуйте объекты с направленностью для Enlighten Realtime Global Illumination. Это значение устарело. Пожалуйста, используйте DrawCameraMode.RealtimeDirectionality.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.Emissive">
      <summary>
        <para>Рисуйте объекты только с эмиссионным компонентом. Это значение устарело. Пожалуйста, используйте DrawCameraMode.RealtimeEmissive.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.GIContributorsReceivers">
      <summary>
        <para>Нарисуйте Mesh Renderers и Terrains разными цветами, чтобы показать их свойства StaticEditorFlags.ContributeGI / ReceiveGI. С цветами по умолчанию:

Желтый означает, что ContributeGI отключен.
Синий означает, что ContributeGI включен и объект получает GI от карт освещения. См. также: ReceiveGI.Lightmaps
Красный означает, что ContributeGI включен, но вместо этого объект получает GI от Light Probes. См. также: ReceiveGI.LightProbes.

Все цвета можно настроить в разделе «Настройки» &gt; «Цвета».</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.Irradiance">
      <summary>
        <para>Рисуйте объекты только с глобальным освещением Enlighten Realtime Global Illumination. Это значение устарело. Пожалуйста, используйте DrawCameraMode.RealtimeIndirect.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.LightOverlap">
      <summary>
        <para>Камера настроена на показ красных статических огней, которые возвращаются к «статическому», поскольку перекрываются более четырех световых объемов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.LitClustering">
      <summary>
        <para>Нарисуйте освещенные кластеры.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.Mipmaps">
      <summary>
        <para>Камера настроена на отображение разрешения текстуры: красный оттенок указывает на слишком высокое разрешение, а синий оттенок указывает на то, что размер текстуры может быть выше.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.Normal">
      <summary>
        <para>Нарисуйте камеру так, как если бы она была нарисована в игре. При этом используются флаги очистки камеры.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.Overdraw">
      <summary>
        <para>Камера настроена на отображение перерисовки сцены, причем более яркие цвета указывают на большее перерисовку.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.RealtimeAlbedo">
      <summary>
        <para>Рисуйте объекты только с компонентом альбедо Enlighten Realtime Global Illumination.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.RealtimeCharting">
      <summary>
        <para>Нарисуйте объекты разными цветами для каждой диаграммы в реальном времени (UV-остров).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.RealtimeDirectionality">
      <summary>
        <para>Рисуйте объекты только с компонентом направленности Enlighten Realtime Global Illumination.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.RealtimeEmissive">
      <summary>
        <para>Рисуйте объекты только с компонентом излучения Enlighten Realtime Global Illumination.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.RealtimeIndirect">
      <summary>
        <para>Рисуйте объекты только с непрямым освещением Enlighten Realtime Global Illumination.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.RenderPaths">
      <summary>
        <para>Камера настроена на отрисовку путей рендеринга с цветовой кодировкой.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.ShadowCascades">
      <summary>
        <para>Камера настроена на отрисовку каскадов направленных световых теней.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.ShadowMasks">
      <summary>
        <para>Камера настроена на отображение цветных теневых масок, окрашивающих световые приспособления в тот же цвет.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.SpriteMask">
      <summary>
        <para>Камера настроена на отображение SpriteMask и SpriteRenderer с набором SpriteRenderer.maskInteraction.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.Systems">
      <summary>
        <para>Нарисуйте объекты разным цветом для каждой системы GI.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.Textured">
      <summary>
        <para>Нарисуйте текстуру камеры с каркасом выделения и без очистки фона.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.TexturedWire">
      <summary>
        <para>Нарисуйте камеру, где все объекты имеют наложение каркаса. и без очистки фона.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.TextureStreaming">
      <summary>
        <para>Камера настроена на работу в режиме отладки потоковой передачи текстур.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.UserDefined">
      <summary>
        <para>Пользовательский режим, определяемый пользователем.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.ValidateAlbedo">
      <summary>
        <para>Камера настроена на отрисовку физически обоснованного рендеринга с проверкой альбедо.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.ValidateMetalSpecular">
      <summary>
        <para>Камера настроена на отрисовку физически обоснованного, металлического или зеркального рендеринга.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.Wireframe">
      <summary>
        <para>Нарисуйте камеру в виде каркаса и без очистки фона.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.DrawGizmo">
      <summary>
        <para>Атрибут DrawGizmo позволяет указать средство визуализации gizmo для любого компонента.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.DrawGizmo.#ctor(UnityEditor.GizmoType)">
      <summary>
        <para>Определяет, когда гизмо следует вызывать для рисования.</para>
      </summary>
      <param name="gizmo">Флаги для обозначения того, когда гизмо должен быть нарисован.</param>
    </member>
    <member name="M:UnityEditor.DrawGizmo.#ctor(UnityEditor.GizmoType,System.Type)">
      <summary>
        <para>То же, что и выше. drawGizmoType определяет, какого типа должен быть объект, который мы рисуем.</para>
      </summary>
      <param name="gizmo">Флаги для обозначения того, когда гизмо должен быть нарисован.</param>
      <param name="drawnGizmoType">Тип объекта, для которого должен быть нарисован гизмо.</param>
    </member>
    <member name="T:UnityEditor.Editor">
      <summary>
        <para>На основе этого базового класса создайте собственный инспектор или редактор для вашего пользовательского объекта.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Editor.finishedDefaultHeaderGUI(System.Action`1&lt;UnityEditor.Editor&gt;)">
      <summary>
        <para>Событие, возникающее при отрисовке заголовка окна Инспектора после того, как были отрисованы элементы заголовка по умолчанию.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="P:UnityEditor.Editor.serializedObject">
      <summary>
        <para>Объект SerializedObject, представляющий проверяемый объект или объекты.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Editor.target">
      <summary>
        <para>Проверяемый объект.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Editor.targets">
      <summary>
        <para>Массив всех проверяемых объектов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Editor.CreateCachedEditor(UnityEngine.Object,System.Type,UnityEditor.Editor&amp;)">
      <summary>
        <para>По возвращении предыдущийредактор является редактором для targetObject или targetObjects. Функция либо возвращает значение, если редактор уже отслеживает объекты, либо уничтожает предыдущий редактор и создает новый.</para>
      </summary>
      <param name="obj">Объект, который отслеживает редактор.</param>
      <param name="editorType">Запрашиваемый тип редактора. Установите значение null для редактора по умолчанию для объекта.</param>
      <param name="previousEditor">Предыдущий редактор объекта. После возврата из CreateCachedEditor, предыдущий редактор является редактором для targetObject или targetObjects.</param>
      <param name="objects">Объекты, которые отслеживает редактор.</param>
      <param name="targetObject">
      </param>
      <param name="targetObjects">
      </param>
    </member>
    <member name="M:UnityEditor.Editor.CreateCachedEditor(UnityEngine.Object[],System.Type,UnityEditor.Editor&amp;)">
      <summary>
        <para>По возвращении предыдущийредактор является редактором для targetObject или targetObjects. Функция либо возвращает значение, если редактор уже отслеживает объекты, либо уничтожает предыдущий редактор и создает новый.</para>
      </summary>
      <param name="obj">Объект, который отслеживает редактор.</param>
      <param name="editorType">Запрашиваемый тип редактора. Установите значение null для редактора по умолчанию для объекта.</param>
      <param name="previousEditor">Предыдущий редактор объекта. После возврата из CreateCachedEditor, предыдущий редактор является редактором для targetObject или targetObjects.</param>
      <param name="objects">Объекты, которые отслеживает редактор.</param>
      <param name="targetObject">
      </param>
      <param name="targetObjects">
      </param>
    </member>
    <member name="M:UnityEditor.Editor.CreateCachedEditorWithContext(UnityEngine.Object,UnityEngine.Object,System.Type,UnityEditor.Editor&amp;)">
      <summary>
        <para>Создает кэшированный редактор с использованием объекта контекста.</para>
      </summary>
      <param name="targetObject">
      </param>
      <param name="context">
      </param>
      <param name="editorType">
      </param>
      <param name="previousEditor">
      </param>
      <param name="targetObjects">
      </param>
    </member>
    <member name="M:UnityEditor.Editor.CreateCachedEditorWithContext(UnityEngine.Object[],UnityEngine.Object,System.Type,UnityEditor.Editor&amp;)">
      <summary>
        <para>Создает кэшированный редактор с использованием объекта контекста.</para>
      </summary>
      <param name="targetObject">
      </param>
      <param name="context">
      </param>
      <param name="editorType">
      </param>
      <param name="previousEditor">
      </param>
      <param name="targetObjects">
      </param>
    </member>
    <member name="M:UnityEditor.Editor.CreateEditor(UnityEngine.Object)">
      <summary>
        <para>Создайте собственный редактор для targetObject или targetObjects.</para>
      </summary>
      <param name="objects">Все объекты должны быть одного типа.</param>
      <param name="targetObject">
      </param>
      <param name="editorType">
      </param>
      <param name="targetObjects">
      </param>
    </member>
    <member name="M:UnityEditor.Editor.CreateEditor(UnityEngine.Object,System.Type)">
      <summary>
        <para>Создайте собственный редактор для targetObject или targetObjects.</para>
      </summary>
      <param name="objects">Все объекты должны быть одного типа.</param>
      <param name="targetObject">
      </param>
      <param name="editorType">
      </param>
      <param name="targetObjects">
      </param>
    </member>
    <member name="M:UnityEditor.Editor.CreateEditor(UnityEngine.Object[])">
      <summary>
        <para>Создайте собственный редактор для targetObject или targetObjects.</para>
      </summary>
      <param name="objects">Все объекты должны быть одного типа.</param>
      <param name="targetObject">
      </param>
      <param name="editorType">
      </param>
      <param name="targetObjects">
      </param>
    </member>
    <member name="M:UnityEditor.Editor.CreateEditor(UnityEngine.Object[],System.Type)">
      <summary>
        <para>Создайте собственный редактор для targetObject или targetObjects.</para>
      </summary>
      <param name="objects">Все объекты должны быть одного типа.</param>
      <param name="targetObject">
      </param>
      <param name="editorType">
      </param>
      <param name="targetObjects">
      </param>
    </member>
    <member name="M:UnityEditor.Editor.CreateEditorWithContext(UnityEngine.Object[],UnityEngine.Object,System.Type)">
      <summary>
        <para>Создайте собственный редактор для targetObject или targetObjects с объектом контекста.</para>
      </summary>
      <param name="targetObjects">
      </param>
      <param name="context">
      </param>
      <param name="editorType">
      </param>
    </member>
    <member name="M:UnityEditor.Editor.CreateInspectorGUI">
      <summary>
        <para>Реализуйте этот метод, чтобы создать собственный инспектор UIElements.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Editor.DrawDefaultInspector">
      <summary>
        <para>Рисует встроенный инспектор.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Editor.DrawFoldoutInspector(UnityEngine.Object,UnityEditor.Editor&amp;)">
      <summary>
        <para>Рисует графический интерфейс инспектора с раскрывающимся заголовком для цели.</para>
      </summary>
      <param name="target">Объект, для которого отображается инспектор.</param>
      <param name="editor">Ссылка на переменную типа Editor.</param>
    </member>
    <member name="M:UnityEditor.Editor.DrawHeader">
      <summary>
        <para>Вызовите эту функцию, чтобы нарисовать заголовок редактора.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Editor.DrawPreview(UnityEngine.Rect)">
      <summary>
        <para>Первая точка входа для предварительного просмотра чертежа.</para>
      </summary>
      <param name="previewArea">Доступная область для рисования превью.</param>
    </member>
    <member name="M:UnityEditor.Editor.GetInfoString">
      <summary>
        <para>Реализуйте этот метод, чтобы отображать информацию об активе поверх предварительного просмотра актива.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Editor.GetPreviewTitle">
      <summary>
        <para>Переопределите этот метод, если хотите изменить метку области предварительного просмотра.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Editor.HasPreviewGUI">
      <summary>
        <para>Переопределите этот метод в подклассах, если вы реализуете OnPreviewGUI.</para>
      </summary>
      <returns>
        <para>Истинно, если этот компонент можно предварительно просмотреть в его текущем состоянии.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Editor.OnInspectorGUI">
      <summary>
        <para>Реализуйте эту функцию, чтобы создать собственный инспектор.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Editor.OnInteractivePreviewGUI(UnityEngine.Rect,UnityEngine.GUIStyle)">
      <summary>
        <para>Реализовать создание собственного интерактивного пользовательского предварительного просмотра. Интерактивные пользовательские предварительные просмотры используются в области предварительного просмотра инспектора и селектора объектов.</para>
      </summary>
      <param name="r">Прямоугольник, в котором будет отображаться предварительный просмотр.</param>
      <param name="background">Фоновое изображение.</param>
    </member>
    <member name="M:UnityEditor.Editor.OnPreviewGUI(UnityEngine.Rect,UnityEngine.GUIStyle)">
      <summary>
        <para>Реализовать создание собственного пользовательского предварительного просмотра для области предварительного просмотра инспектора, заголовков основного редактора и селектора объектов.</para>
      </summary>
      <param name="r">Прямоугольник, в котором будет отображаться предварительный просмотр.</param>
      <param name="background">Фоновое изображение.</param>
    </member>
    <member name="M:UnityEditor.Editor.OnPreviewSettings">
      <summary>
        <para>Переопределите этот метод, если вы хотите отображать пользовательские элементы управления в заголовке предварительного просмотра.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Editor.RenderStaticPreview(System.String,UnityEngine.Object[],System.Int32,System.Int32)">
      <summary>
        <para>Переопределите этот метод, если вы хотите визуализировать статический предварительный просмотр.</para>
      </summary>
      <param name="assetPath">Объект для работы.</param>
      <param name="subAssets">Массив всех активов в assetsPath.</param>
      <param name="width">Ширина создаваемой текстуры.</param>
      <param name="height">Высота создаваемой текстуры.</param>
      <returns>
        <para>Сгенерированная текстура или null.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Editor.Repaint">
      <summary>
        <para>Перерисуйте все инспекторы, отображающие этот редактор.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Editor.RequiresConstantRepaint">
      <summary>
        <para>Проверяет, требует ли этот редактор постоянной перерисовки в его текущем состоянии.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Editor.ShouldHideOpenButton">
      <summary>
        <para>Возвращает настройку видимости кнопки «Открыть» в Инспекторе.</para>
      </summary>
      <returns>
        <para>Верните true, если кнопка должна быть скрыта.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Editor.UseDefaultMargins">
      <summary>
        <para>Переопределите этот метод в подклассах, чтобы он возвращал false, если вам не нужны поля по умолчанию.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.EditorAnalytics">
      <summary>
        <para>API редактора для функции EditorAnalytics.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorAnalytics.enabled">
      <summary>
        <para>Возвращает true, если EditorAnalytics включен.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorAnalytics.RegisterEventWithLimit(System.String,System.Int32,System.Int32,System.String)">
      <summary>
        <para>Этот API используется для регистрации события Editor Analytics. Примечание. Этот API предназначен только для внутреннего использования и, вероятно, изменится в будущем. Не используйте в пользовательском коде.</para>
      </summary>
      <param name="eventName">Название события.</param>
      <param name="ver">Номер версии события.</param>
      <param name="maxEventPerHour">Часовой лимит для этого имени события.</param>
      <param name="maxItems">Максимальное количество элементов в этом событии.</param>
      <param name="vendorKey">Имя ключа поставщика.</param>
    </member>
    <member name="M:UnityEditor.EditorAnalytics.RegisterEventWithLimit(System.String,System.Int32,System.Int32,System.String,System.Int32)">
      <summary>
        <para>Этот API используется для регистрации события Editor Analytics. Примечание. Этот API предназначен только для внутреннего использования и, вероятно, изменится в будущем. Не используйте в пользовательском коде.</para>
      </summary>
      <param name="eventName">Название события.</param>
      <param name="ver">Номер версии события.</param>
      <param name="maxEventPerHour">Часовой лимит для этого имени события.</param>
      <param name="maxItems">Максимальное количество элементов в этом событии.</param>
      <param name="vendorKey">Имя ключа поставщика.</param>
    </member>
    <member name="M:UnityEditor.EditorAnalytics.SendEventWithLimit(System.String,System.Object)">
      <summary>
        <para>Этот API используется для отправки события Editor Analytics. Примечание. Этот API предназначен только для внутреннего использования и, вероятно, изменится в будущем. Не используйте в пользовательском коде.</para>
      </summary>
      <param name="eventName">Название события.</param>
      <param name="parameters">Дополнительные данные о событии.</param>
      <param name="ver">Номер версии события.</param>
    </member>
    <member name="M:UnityEditor.EditorAnalytics.SendEventWithLimit(System.String,System.Object,System.Int32)">
      <summary>
        <para>Этот API используется для отправки события Editor Analytics. Примечание. Этот API предназначен только для внутреннего использования и, вероятно, изменится в будущем. Не используйте в пользовательском коде.</para>
      </summary>
      <param name="eventName">Название события.</param>
      <param name="parameters">Дополнительные данные о событии.</param>
      <param name="ver">Номер версии события.</param>
    </member>
    <member name="M:UnityEditor.EditorAnalytics.SetEventWithLimitEndPoint(System.String,System.String,System.Int32)">
      <summary>
        <para>Используйте этот API для установки URL-адреса конечной точки события. Примечание. Этот API предназначен только для внутреннего использования и, вероятно, изменится в будущем. Не используйте в пользовательском коде.</para>
      </summary>
      <param name="eventName">Название события.</param>
      <param name="ver">Номер версии события.</param>
      <param name="endPoint">URL-адрес конечной точки события.</param>
    </member>
    <member name="M:UnityEditor.EditorAnalytics.SetEventWithLimitPriority(System.String,UnityEngine.Analytics.AnalyticsEventPriority,System.Int32)">
      <summary>
        <para>Используйте API для установки свойства события. Примечание. Этот API предназначен только для внутреннего использования и, вероятно, изменится в будущем. Не используйте в пользовательском коде.</para>
      </summary>
      <param name="eventName">Название события.</param>
      <param name="ver">Номер версии события.</param>
      <param name="eventPriority">Приоритет события.</param>
    </member>
    <member name="T:UnityEditor.EditorAnalyticsSessionInfo">
      <summary>
        <para>Предоставляет доступ к информации о сеансе Editor Analytics.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorAnalyticsSessionInfo.activeElapsedTime">
      <summary>
        <para>Общее время в миллисекундах, в течение которого пользователь взаимодействовал с редактором с начала текущего сеанса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorAnalyticsSessionInfo.elapsedTime">
      <summary>
        <para>Продолжительность текущего сеанса в миллисекундах.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorAnalyticsSessionInfo.focusedElapsedTime">
      <summary>
        <para>Общее время в миллисекундах, в течение которого редактор находился в фокусе во время текущего сеанса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorAnalyticsSessionInfo.id">
      <summary>
        <para>Случайный уникальный идентификатор GUID, идентифицирующий текущий сеанс редактора.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorAnalyticsSessionInfo.playbackElapsedTime">
      <summary>
        <para>Общее время в миллисекундах, в течение которого редактор находился в режиме воспроизведения во время текущего сеанса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorAnalyticsSessionInfo.sessionCount">
      <summary>
        <para>Количество сеансов редактора, которые произошли с момента установки текущего экземпляра редактора Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorAnalyticsSessionInfo.userId">
      <summary>
        <para>Случайный идентификатор GUID, однозначно идентифицирующий установку редактора.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.EditorApplication">
      <summary>
        <para>Класс основного приложения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorApplication.applicationContentsPath">
      <summary>
        <para>Путь к папке содержимого редактора Unity. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorApplication.applicationPath">
      <summary>
        <para>Возвращает путь к приложению редактора Unity. (Только чтение)</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorApplication.contextualPropertyMenu">
      <summary>
        <para>Обратный вызов возникает всякий раз, когда пользователь контекстно-щелкает свойство в инспекторе.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorApplication.currentScene">
      <summary>
        <para>Путь к Сцене, открытой пользователем в данный момент (будет пустой строкой, если в данный момент нет открытой Сцены). (Только чтение)</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorApplication.delayCall">
      <summary>
        <para>Делегат, который вызывается один раз после обновления всех инспекторов.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.EditorApplication.hierarchyChanged(System.Action)">
      <summary>
        <para>Событие, возникающее при изменении объекта или группы объектов в иерархии.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="F:UnityEditor.EditorApplication.hierarchyWindowChanged">
      <summary>
        <para>Обратный вызов, вызываемый при изменении объекта в иерархии.

Каждый раз, когда объект (или группа объектов) создается, переименовывается, становится родительским, удаляется или уничтожается, вызывается этот обратный вызов.
</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorApplication.hierarchyWindowItemOnGUI">
      <summary>
        <para>Делегирование событий OnGUI для каждого видимого элемента списка в HierarchyWindow.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorApplication.isCompiling">
      <summary>
        <para>Редактор сейчас компилирует скрипты? (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorApplication.isPaused">
      <summary>
        <para>Редактор сейчас приостановлен?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorApplication.isPlaying">
      <summary>
        <para>В настоящее время редактор находится в режиме воспроизведения?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorApplication.isPlayingOrWillChangePlaymode">
      <summary>
        <para>Редактор сейчас находится в режиме воспроизведения или собирается переключиться на него? (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorApplication.isRemoteConnected">
      <summary>
        <para>Подключен ли редактор в настоящее время к клиентскому приложению Unity Remote 4.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorApplication.isSceneDirty">
      <summary>
        <para>Верно, если текущая открытая в редакторе Сцена содержит несохраненные модификации.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorApplication.isTemporaryProject">
      <summary>
        <para>Возвращает true, если текущий проект был создан как временный проект.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorApplication.isUpdating">
      <summary>
        <para>Истинно, если редактор в данный момент обновляет базу данных активов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorApplication.modifierKeysChanged">
      <summary>
        <para>Делегат для измененных клавиш-модификаторов клавиатуры.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.EditorApplication.pauseStateChanged(System.Action`1&lt;UnityEditor.PauseState&gt;)">
      <summary>
        <para>Событие, возникающее при изменении состояния паузы редактора.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="?:UnityEditor.EditorApplication.playModeStateChanged(System.Action`1&lt;UnityEditor.PlayModeStateChange&gt;)">
      <summary>
        <para>Событие, возникающее при изменении состояния режима воспроизведения редактора.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="?:UnityEditor.EditorApplication.projectChanged(System.Action)">
      <summary>
        <para>Событие, которое возникает при изменении состояния проекта.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="F:UnityEditor.EditorApplication.projectWindowChanged">
      <summary>
        <para>Обратный вызов возникает всякий раз, когда изменяется состояние окна проекта.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorApplication.projectWindowItemOnGUI">
      <summary>
        <para>Делегировать события OnGUI для каждого видимого элемента списка в ProjectWindow.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.EditorApplication.quitting(System.Action)">
      <summary>
        <para>Unity вызывает это событие, когда приложение редактора закрывается.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="P:UnityEditor.EditorApplication.scriptingRuntimeVersion">
      <summary>
        <para>Возвращает версию среды выполнения сценариев, используемую в настоящее время редактором.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorApplication.searchChanged">
      <summary>
        <para>Обратный вызов возникает всякий раз, когда изменяется содержимое окна поиска окна.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorApplication.timeSinceStartup">
      <summary>
        <para>Время с момента запуска редактора. (Только чтение)</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorApplication.update">
      <summary>
        <para>Делегировать общие обновления.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.EditorApplication.wantsToQuit(System.Func`1&lt;System.Boolean&gt;)">
      <summary>
        <para>Unity вызывает это событие, когда приложение редактора хочет закрыться.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="M:UnityEditor.EditorApplication.Beep">
      <summary>
        <para>Воспроизводит звуковой сигнал системы.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.EditorApplication.CallbackFunction">
      <summary>
        <para>Делегат для вызова из обратных вызовов EditorApplication.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorApplication.DirtyHierarchyWindowSorting">
      <summary>
        <para>Установите метод сортировки иерархии как грязный.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorApplication.EnterPlaymode">
      <summary>
        <para>Переключает редактор в режим воспроизведения.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorApplication.ExecuteMenuItem(System.String)">
      <summary>
        <para>Вызывает пункт меню по указанному пути.</para>
      </summary>
      <param name="menuItemPath">
      </param>
    </member>
    <member name="M:UnityEditor.EditorApplication.Exit(System.Int32)">
      <summary>
        <para>Выйдите из приложения редактора Unity.</para>
      </summary>
      <param name="returnValue">
      </param>
    </member>
    <member name="M:UnityEditor.EditorApplication.ExitPlaymode">
      <summary>
        <para>Переключает редактор в режим редактирования.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.EditorApplication.HierarchyWindowItemCallback">
      <summary>
        <para>Делегат, который будет вызываться для каждого видимого элемента списка в HierarchyWindow при каждом событии OnGUI.</para>
      </summary>
      <param name="instanceID">
      </param>
      <param name="selectionRect">
      </param>
    </member>
    <member name="M:UnityEditor.EditorApplication.LoadLevelAdditiveAsyncInPlayMode(System.String)">
      <summary>
        <para>Аддитивно загрузить данный уровень в режиме воспроизведения асинхронно</para>
      </summary>
      <param name="path">
      </param>
    </member>
    <member name="M:UnityEditor.EditorApplication.LoadLevelAdditiveInPlayMode(System.String)">
      <summary>
        <para>Аддитивно загрузить данный уровень в режиме воспроизведения.</para>
      </summary>
      <param name="path">
      </param>
    </member>
    <member name="M:UnityEditor.EditorApplication.LoadLevelAsyncInPlayMode(System.String)">
      <summary>
        <para>Загрузить данный уровень в режиме воспроизведения асинхронно.</para>
      </summary>
      <param name="path">
      </param>
    </member>
    <member name="M:UnityEditor.EditorApplication.LoadLevelInPlayMode(System.String)">
      <summary>
        <para>Загрузите данный уровень в режиме воспроизведения.</para>
      </summary>
      <param name="path">
      </param>
    </member>
    <member name="M:UnityEditor.EditorApplication.LockReloadAssemblies">
      <summary>
        <para>Предотвращает загрузку сборок, когда это неудобно.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorApplication.MarkSceneDirty">
      <summary>
        <para>Явно пометить текущую открытую сцену как измененную.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorApplication.NewEmptyScene">
      <summary>
        <para>Создайте новую абсолютно пустую сцену.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorApplication.NewScene">
      <summary>
        <para>Создайте новую сцену.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorApplication.OpenProject(System.String,System.String[])">
      <summary>
        <para>Откройте другой проект.</para>
      </summary>
      <param name="projectPath">Путь открываемого проекта.</param>
      <param name="args">Аргументы для передачи в командную строку.</param>
    </member>
    <member name="M:UnityEditor.EditorApplication.OpenScene(System.String)">
      <summary>
        <para>Открывает сцену по пути.</para>
      </summary>
      <param name="path">
      </param>
    </member>
    <member name="M:UnityEditor.EditorApplication.OpenSceneAdditive(System.String)">
      <summary>
        <para>Дополнительно открывает сцену по пути.</para>
      </summary>
      <param name="path">
      </param>
    </member>
    <member name="T:UnityEditor.EditorApplication.ProjectWindowItemCallback">
      <summary>
        <para>Делегат, который будет вызываться для каждого видимого элемента списка в ProjectWindow при каждом событии OnGUI.</para>
      </summary>
      <param name="guid">
      </param>
      <param name="selectionRect">
      </param>
    </member>
    <member name="M:UnityEditor.EditorApplication.QueuePlayerLoopUpdate">
      <summary>
        <para>Обычно обновление цикла плеера происходит в редакторе при изменении сцены. Этот метод позволяет поставить в очередь обновление цикла плеера независимо от того, была ли изменена сцена.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorApplication.RepaintHierarchyWindow">
      <summary>
        <para>Может использоваться для обеспечения перерисовки HierarchyWindow.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorApplication.RepaintProjectWindow">
      <summary>
        <para>Может использоваться для обеспечения перерисовки ProjectWindow.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorApplication.SaveAssets">
      <summary>
        <para>Сохраняет все сериализуемые ресурсы, которые еще не были записаны на диск (например, материалы).</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorApplication.SaveCurrentSceneIfUserWantsTo">
      <summary>
        <para>Спросите пользователя, хотят ли они сохранить открытую сцену.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorApplication.SaveScene">
      <summary>
        <para>Сохраните открытую сцену.</para>
      </summary>
      <param name="path">Путь к файлу для сохранения. Если пусто, текущая открытая сцена будет перезаписана, или, если она никогда не сохранялась ранее, отображается диалоговое окно сохранения.</param>
      <param name="saveAsCopy">Если установлено значение true, сцена будет сохранена без изменения текущей сцены и без очистки маркера несохраненных изменений.</param>
      <returns>
        <para>Истина, если сохранение прошло успешно, в противном случае — ложь.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorApplication.SaveScene(System.String)">
      <summary>
        <para>Сохраните открытую сцену.</para>
      </summary>
      <param name="path">Путь к файлу для сохранения. Если пусто, текущая открытая сцена будет перезаписана, или, если она никогда не сохранялась ранее, отображается диалоговое окно сохранения.</param>
      <param name="saveAsCopy">Если установлено значение true, сцена будет сохранена без изменения текущей сцены и без очистки маркера несохраненных изменений.</param>
      <returns>
        <para>Истина, если сохранение прошло успешно, в противном случае — ложь.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorApplication.SaveScene(System.String,System.Boolean)">
      <summary>
        <para>Сохраните открытую сцену.</para>
      </summary>
      <param name="path">Путь к файлу для сохранения. Если пусто, текущая открытая сцена будет перезаписана, или, если она никогда не сохранялась ранее, отображается диалоговое окно сохранения.</param>
      <param name="saveAsCopy">Если установлено значение true, сцена будет сохранена без изменения текущей сцены и без очистки маркера несохраненных изменений.</param>
      <returns>
        <para>Истина, если сохранение прошло успешно, в противном случае — ложь.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.EditorApplication.SerializedPropertyCallbackFunction">
      <summary>
        <para>Делегат для вызова из обратных вызовов контекстного инспектора EditorApplication.</para>
      </summary>
      <param name="menu">Контекстное меню, которое будет показано пользователю.</param>
      <param name="property">Свойство, для которого отображается контекстное меню.</param>
    </member>
    <member name="M:UnityEditor.EditorApplication.SetTemporaryProjectKeepPath(System.String)">
      <summary>
        <para>Устанавливает путь, по которому Unity должен хранить текущий временный проект, когда проект закрывается.</para>
      </summary>
      <param name="path">Путь, по которому следует переместить текущий временный проект при его закрытии.</param>
    </member>
    <member name="M:UnityEditor.EditorApplication.Step">
      <summary>
        <para>Выполните шаг с одним кадром.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorApplication.UnlockReloadAssemblies">
      <summary>
        <para>Должен вызываться после LockReloadAssemblies, чтобы повторно включить загрузку сборок.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.EditorBuildSettings">
      <summary>
        <para>Этот класс позволяет вам изменить редактор для примера того, как использовать этот класс.

См. также: EditorBuildSettingsScene, EditorBuildSettings.scenes.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.EditorBuildSettings.sceneListChanged(System.Action)">
      <summary>
        <para>Делегат, вызываемый всякий раз, когда устанавливается EditorBuildSettings.scene.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="P:UnityEditor.EditorBuildSettings.scenes">
      <summary>
        <para>Список сцен, которые должны быть включены в сборку.
Это тот же список сцен, который отображается в окне. Вы можете изменить этот список, чтобы указать, какие сцены должны быть включены в сборку.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorBuildSettings.AddConfigObject(System.String,UnityEngine.Object,System.Boolean)">
      <summary>
        <para>Сохраните ссылку на объект конфигурации по имени. Объект должен быть активом в проекте, иначе он не будет сохранен при перезапуске редактора или перезагрузке скриптов. Чтобы избежать конфликтов имен с другими пакетами, рекомендуется уточнять имена по пространству имен, например "company.package.name".</para>
      </summary>
      <param name="name">Имя ссылки на объект в строковом формате. Это строковое имя должно быть уникальным в пределах вашего проекта, или для параметра перезаписи должно быть установлено значение true.</param>
      <param name="obj">Ссылка на объект для сохранения. Этот объект должен быть постоянным и не нулевым.</param>
      <param name="overwrite">Логический параметр, используемый для указания того, что вы хотите перезаписать запись с таким же именем, если она уже существует.</param>
      <returns>
        <para>Выдает исключение, если объект имеет значение null, не сохраняется или если существует конфликт имен, а для параметра перезаписи задано значение false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorBuildSettings.GetConfigObjectNames">
      <summary>
        <para>Возвращает массив строк, содержащий имена всех сохраненных ссылок на объекты конфигурации.</para>
      </summary>
      <returns>
        <para>Возвращает массив строк, содержащих имена всех сохраненных ссылок. Если ссылок нет, будет возвращен пустой массив.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorBuildSettings.RemoveConfigObject(System.String)">
      <summary>
        <para>Удалить ссылку на объект конфигурации по имени.</para>
      </summary>
      <param name="name">Имя в строковом формате ссылки на объект конфигурации, которую нужно удалить. Это имя, данное объекту при первом создании ссылки. Примечание. Оно может отличаться от имени объекта, поскольку объект может быть добавлен несколько раз с разными именами.</param>
      <returns>
        <para>Возвращает true, если ссылка была найдена и удалена, иначе false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorBuildSettings.TryGetConfigObject(System.String,T&amp;)">
      <summary>
        <para>Получить ссылку на объект конфигурации по имени.</para>
      </summary>
      <param name="name">Имя извлекаемой ссылки на объект конфигурации в строковом формате.</param>
      <param name="result">Ссылка на объект конфигурации, где будет храниться возвращаемый объект. Это должен быть объект типа Object.</param>
      <returns>
        <para>Возвращает true, если ссылка на объект конфигурации найдена и тип соответствует параметру результата. Возвращает false, если запись не найдена, ссылка на объект конфигурации пуста или запрошенный тип не соответствует сохраненному типу.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.EditorBuildSettingsScene">
      <summary>
        <para>Представляет записи в списке сцен, отображаемые в окне. Этот класс содержит путь сцены сцены и включенный флаг, который указывает, включена ли сцена в окне настроек сборки или нет.

Вы можете использовать этот класс в сочетании с EditorBuildSettings.scenes для заполнения списка сцен, включенных в сборку, с помощью скрипта. Это полезно при создании пользовательских сценариев редактора для автоматизации конвейера сборки.

Пример сценария см. в EditorBuildSettings.scenes.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorBuildSettingsScene.enabled">
      <summary>
        <para>Включена ли эта сцена в примере использования этого класса.

См. также: EditorBuildSettingsScene, EditorBuildSettings.scenes.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorBuildSettingsScene.path">
      <summary>
        <para>Путь к файлу сцены, указанный в редакторе, в качестве примера использования этого класса.

См. также: EditorBuildSettingsScene, EditorBuildSettings.scenes.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.EditorCurveBinding">
      <summary>
        <para>Определяет, как кривая прикрепляется к объекту, которым она управляет.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorCurveBinding.path">
      <summary>
        <para>Путь преобразования анимируемого объекта.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorCurveBinding.propertyName">
      <summary>
        <para>Имя свойства для анимации.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorCurveBinding.type">
      <summary>
        <para>Тип свойства для анимации.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorCurveBinding.DiscreteCurve(System.String,System.Type,System.String)">
      <summary>
        <para>Создает предварительно настроенную привязку для кривой, значения которой не должны интерполироваться.</para>
      </summary>
      <param name="inPath">Путь преобразования к объекту для анимации.</param>
      <param name="inType">Тип объекта для анимации.</param>
      <param name="inPropertyName">Имя свойства для анимации объекта.</param>
    </member>
    <member name="M:UnityEditor.EditorCurveBinding.FloatCurve(System.String,System.Type,System.String)">
      <summary>
        <para>Создает предварительно настроенную привязку для плавающей кривой.</para>
      </summary>
      <param name="inPath">Путь преобразования к объекту для анимации.</param>
      <param name="inType">Тип объекта для анимации.</param>
      <param name="inPropertyName">Имя свойства для анимации объекта.</param>
    </member>
    <member name="M:UnityEditor.EditorCurveBinding.PPtrCurve(System.String,System.Type,System.String)">
      <summary>
        <para>Создает предварительно настроенную привязку для кривой, указывающей на объект.</para>
      </summary>
      <param name="inPath">Путь преобразования к объекту для анимации.</param>
      <param name="inType">Тип объекта для анимации.</param>
      <param name="inPropertyName">Имя свойства для анимации объекта.</param>
    </member>
    <member name="T:UnityEditor.EditorGUI">
      <summary>
        <para>Они работают почти так же, как и обычные функции графического интерфейса, а также имеют соответствующие реализации в EditorGUILayout.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUI.actionKey">
      <summary>
        <para>Нажата ли зависящая от платформы клавиша модификатора «действие»? (Только чтение)</para>
      </summary>
    </member>
    <member name="?:UnityEditor.EditorGUI.hyperLinkClicked(System.Action`2&lt;UnityEditor.EditorWindow,UnityEditor.HyperLinkClickedEventArgs&gt;)">
      <summary>
        <para>Событие, используемое для реакции на клики по части текстовой гиперссылки.</para>
      </summary>
      <param name="value">Первый параметр типа EditorWindow соответствует окну, содержащему щелкнутый текст. Второй параметр типа HyperLinkClickedEventArgs содержит данные гиперссылки.</param>
    </member>
    <member name="P:UnityEditor.EditorGUI.indentLevel">
      <summary>
        <para>Уровень отступа меток полей.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUI.showMixedValue">
      <summary>
        <para>Делает следующие элементы управления видимыми при редактировании нескольких разных значений.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUI.BeginChangeCheck">
      <summary>
        <para>Запускает новый блок кода для проверки изменений графического интерфейса.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUI.BeginDisabledGroup(System.Boolean)">
      <summary>
        <para>Создайте группу элементов управления, которые можно отключить.</para>
      </summary>
      <param name="disabled">Логическое значение, указывающее, следует ли отключать элементы управления внутри группы.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.BeginFoldoutHeaderGroup(UnityEngine.Rect,System.Boolean,System.String,UnityEngine.GUIStyle,System.Action`1&lt;UnityEngine.Rect&gt;,UnityEngine.GUIStyle)">
      <summary>
        <para>Сделайте метку со стрелкой слева от нее.</para>
      </summary>
      <param name="foldout">Показанное развернутое состояние.</param>
      <param name="content">Ярлык для отображения.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="menuAction">Действие, которое происходит, когда вы щелкаете значок.</param>
      <param name="menuIcon">Необязательный GUIStyle для значка.</param>
      <param name="position">Прямоугольник на экране для использования в качестве элемента управления.</param>
      <returns>
        <para>Состояние раскрытия, выбранное пользователем. Если true, вы должны визуализировать подобъекты.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.BeginFoldoutHeaderGroup(UnityEngine.Rect,System.Boolean,UnityEngine.GUIContent,UnityEngine.GUIStyle,System.Action`1&lt;UnityEngine.Rect&gt;,UnityEngine.GUIStyle)">
      <summary>
        <para>Сделайте метку со стрелкой слева от нее.</para>
      </summary>
      <param name="foldout">Показанное развернутое состояние.</param>
      <param name="content">Ярлык для отображения.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="menuAction">Действие, которое происходит, когда вы щелкаете значок.</param>
      <param name="menuIcon">Необязательный GUIStyle для значка.</param>
      <param name="position">Прямоугольник на экране для использования в качестве элемента управления.</param>
      <returns>
        <para>Состояние раскрытия, выбранное пользователем. Если true, вы должны визуализировать подобъекты.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.BeginProperty(UnityEngine.Rect,UnityEngine.GUIContent,UnityEditor.SerializedProperty)">
      <summary>
        <para>Создайте оболочку Property, удобную для того, чтобы обычные элементы управления GUI работали с SerializedProperty.</para>
      </summary>
      <param name="totalPosition">Прямоугольник на экране для использования в качестве элемента управления, включая метку, если применимо.</param>
      <param name="label">Необязательный ярлык перед ползунком. Используйте null, чтобы использовать имя из SerializedProperty. Используйте GUIContent.none, чтобы не отображать метку.</param>
      <param name="property">SerializedProperty для использования с элементом управления.</param>
      <returns>
        <para>Фактическая метка, используемая для элемента управления.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.BoundsField(UnityEngine.Rect,UnityEngine.Bounds)">
      <summary>
        <para>Создает поле Center and Extents для ввода Bounds.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательный ярлык для отображения над полем.</param>
      <param name="value">Значение для редактирования.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.BoundsField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Bounds)">
      <summary>
        <para>Создает поле Center and Extents для ввода Bounds.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательный ярлык для отображения над полем.</param>
      <param name="value">Значение для редактирования.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.BoundsIntField(UnityEngine.Rect,UnityEngine.BoundsInt)">
      <summary>
        <para>Создает поле Position и Size для ввода BoundsInt.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательный ярлык для отображения над полем.</param>
      <param name="value">Значение для редактирования.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.BoundsIntField(UnityEngine.Rect,System.String,UnityEngine.BoundsInt)">
      <summary>
        <para>Создает поле Position и Size для ввода BoundsInt.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательный ярлык для отображения над полем.</param>
      <param name="value">Значение для редактирования.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.BoundsIntField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.BoundsInt)">
      <summary>
        <para>Создает поле Position и Size для ввода BoundsInt.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательный ярлык для отображения над полем.</param>
      <param name="value">Значение для редактирования.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.CanCacheInspectorGUI(UnityEditor.SerializedProperty)">
      <summary>
        <para>Узнайте, можно ли кэшировать графический интерфейс инспектора SerializedProperty.</para>
      </summary>
      <param name="property">Рассматриваемое SerializedProperty.</param>
      <returns>
        <para>Можно ли кэшировать графический интерфейс инспектора свойства.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.EditorGUI.ChangeCheckScope">
      <summary>
        <para>Проверьте, не был ли изменен какой-либо элемент управления внутри блока кода.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUI.ChangeCheckScope.changed">
      <summary>
        <para>Истина, если GUI.changed имеет значение true, в противном случае — ложь.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUI.ChangeCheckScope.#ctor">
      <summary>
        <para>Начинает ChangeCheckScope.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUI.ColorField(UnityEngine.Rect,UnityEngine.Color)">
      <summary>
        <para>Создает поле для выбора цвета.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Цвет для редактирования.</param>
      <param name="showEyedropper">Если это правда, палитра цветов должна отображать элемент управления пипеткой. Если false, не показывать его.</param>
      <param name="showAlpha">Если true, разрешить пользователю устанавливать альфа-значение для цвета. Если false, скройте альфа-компонент.</param>
      <param name="hdr">Если это правда, обработайте цвет как значение HDR. Если false, рассматривать его как стандартное значение LDR.</param>
      <param name="hdrConfig">
      </param>
      <returns>
        <para>Цвет, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.ColorField(UnityEngine.Rect,System.String,UnityEngine.Color)">
      <summary>
        <para>Создает поле для выбора цвета.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Цвет для редактирования.</param>
      <param name="showEyedropper">Если это правда, палитра цветов должна отображать элемент управления пипеткой. Если false, не показывать его.</param>
      <param name="showAlpha">Если true, разрешить пользователю устанавливать альфа-значение для цвета. Если false, скройте альфа-компонент.</param>
      <param name="hdr">Если это правда, обработайте цвет как значение HDR. Если false, рассматривать его как стандартное значение LDR.</param>
      <param name="hdrConfig">
      </param>
      <returns>
        <para>Цвет, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.ColorField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Color)">
      <summary>
        <para>Создает поле для выбора цвета.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Цвет для редактирования.</param>
      <param name="showEyedropper">Если это правда, палитра цветов должна отображать элемент управления пипеткой. Если false, не показывать его.</param>
      <param name="showAlpha">Если true, разрешить пользователю устанавливать альфа-значение для цвета. Если false, скройте альфа-компонент.</param>
      <param name="hdr">Если это правда, обработайте цвет как значение HDR. Если false, рассматривать его как стандартное значение LDR.</param>
      <param name="hdrConfig">
      </param>
      <returns>
        <para>Цвет, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.ColorField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Color,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
        <para>Создает поле для выбора цвета.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Цвет для редактирования.</param>
      <param name="showEyedropper">Если это правда, палитра цветов должна отображать элемент управления пипеткой. Если false, не показывать его.</param>
      <param name="showAlpha">Если true, разрешить пользователю устанавливать альфа-значение для цвета. Если false, скройте альфа-компонент.</param>
      <param name="hdr">Если это правда, обработайте цвет как значение HDR. Если false, рассматривать его как стандартное значение LDR.</param>
      <param name="hdrConfig">
      </param>
      <returns>
        <para>Цвет, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.ColorField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Color,System.Boolean,System.Boolean,System.Boolean,UnityEditor.ColorPickerHDRConfig)">
      <summary>
        <para>Создает поле для выбора цвета.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Цвет для редактирования.</param>
      <param name="showEyedropper">Если это правда, палитра цветов должна отображать элемент управления пипеткой. Если false, не показывать его.</param>
      <param name="showAlpha">Если true, разрешить пользователю устанавливать альфа-значение для цвета. Если false, скройте альфа-компонент.</param>
      <param name="hdr">Если это правда, обработайте цвет как значение HDR. Если false, рассматривать его как стандартное значение LDR.</param>
      <param name="hdrConfig">
      </param>
      <returns>
        <para>Цвет, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.CurveField(UnityEngine.Rect,UnityEngine.AnimationCurve)">
      <summary>
        <para>Создает поле для редактирования AnimationCurve.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Кривая для редактирования.</param>
      <param name="color">Цвет для отображения кривой.</param>
      <param name="ranges">Необязательный прямоугольник, внутри которого ограничивается кривая.</param>
      <returns>
        <para>Кривая, отредактированная пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.CurveField(UnityEngine.Rect,System.String,UnityEngine.AnimationCurve)">
      <summary>
        <para>Создает поле для редактирования AnimationCurve.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Кривая для редактирования.</param>
      <param name="color">Цвет для отображения кривой.</param>
      <param name="ranges">Необязательный прямоугольник, внутри которого ограничивается кривая.</param>
      <returns>
        <para>Кривая, отредактированная пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.CurveField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.AnimationCurve)">
      <summary>
        <para>Создает поле для редактирования AnimationCurve.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Кривая для редактирования.</param>
      <param name="color">Цвет для отображения кривой.</param>
      <param name="ranges">Необязательный прямоугольник, внутри которого ограничивается кривая.</param>
      <returns>
        <para>Кривая, отредактированная пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.CurveField(UnityEngine.Rect,UnityEngine.AnimationCurve,UnityEngine.Color,UnityEngine.Rect)">
      <summary>
        <para>Создает поле для редактирования AnimationCurve.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Кривая для редактирования.</param>
      <param name="color">Цвет для отображения кривой.</param>
      <param name="ranges">Необязательный прямоугольник, внутри которого ограничивается кривая.</param>
      <returns>
        <para>Кривая, отредактированная пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.CurveField(UnityEngine.Rect,System.String,UnityEngine.AnimationCurve,UnityEngine.Color,UnityEngine.Rect)">
      <summary>
        <para>Создает поле для редактирования AnimationCurve.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Кривая для редактирования.</param>
      <param name="color">Цвет для отображения кривой.</param>
      <param name="ranges">Необязательный прямоугольник, внутри которого ограничивается кривая.</param>
      <returns>
        <para>Кривая, отредактированная пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.CurveField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.AnimationCurve,UnityEngine.Color,UnityEngine.Rect)">
      <summary>
        <para>Создает поле для редактирования AnimationCurve.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Кривая для редактирования.</param>
      <param name="color">Цвет для отображения кривой.</param>
      <param name="ranges">Необязательный прямоугольник, внутри которого ограничивается кривая.</param>
      <returns>
        <para>Кривая, отредактированная пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.CurveField(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.Color,UnityEngine.Rect)">
      <summary>
        <para>Создает поле для редактирования AnimationCurve.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="property">Кривая для редактирования.</param>
      <param name="color">Цвет для отображения кривой.</param>
      <param name="ranges">Необязательный прямоугольник, внутри которого ограничивается кривая.</param>
      <param name="label">Необязательная метка для отображения перед полем. Передайте [[GUIContent.none], чтобы скрыть метку.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.CurveField(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.Color,UnityEngine.Rect,UnityEngine.GUIContent)">
      <summary>
        <para>Создает поле для редактирования AnimationCurve.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="property">Кривая для редактирования.</param>
      <param name="color">Цвет для отображения кривой.</param>
      <param name="ranges">Необязательный прямоугольник, внутри которого ограничивается кривая.</param>
      <param name="label">Необязательная метка для отображения перед полем. Передайте [[GUIContent.none], чтобы скрыть метку.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DelayedDoubleField(UnityEngine.Rect,System.Double,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает отложенное текстовое поле для ввода двойных значений.</para>
      </summary>
      <param name="position">Прямоугольник на экране для двойного поля.</param>
      <param name="label">Необязательная метка для отображения перед двойным полем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет Enter или пока фокус не переместится с двойного поля.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DelayedDoubleField(UnityEngine.Rect,System.String,System.Double,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает отложенное текстовое поле для ввода двойных значений.</para>
      </summary>
      <param name="position">Прямоугольник на экране для двойного поля.</param>
      <param name="label">Необязательная метка для отображения перед двойным полем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет Enter или пока фокус не переместится с двойного поля.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DelayedDoubleField(UnityEngine.Rect,UnityEngine.GUIContent,System.Double,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает отложенное текстовое поле для ввода двойных значений.</para>
      </summary>
      <param name="position">Прямоугольник на экране для двойного поля.</param>
      <param name="label">Необязательная метка для отображения перед двойным полем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет Enter или пока фокус не переместится с двойного поля.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DelayedDoubleField">
      <summary>
        <para>Создает отложенное текстовое поле для ввода двойных значений.</para>
      </summary>
      <param name="position">Прямоугольник на экране для двойного поля.</param>
      <param name="property">Свойство double для редактирования.</param>
      <param name="label">Необязательная метка для отображения перед двойным полем. Передайте GUIContent.none, чтобы скрыть метку.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DelayedFloatField(UnityEngine.Rect,System.Single,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает отложенное текстовое поле для ввода чисел с плавающей запятой.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве плавающего поля.</param>
      <param name="label">Необязательная метка для отображения перед полем с плавающей запятой.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет Enter или пока фокус не переместится из поля с плавающей запятой.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DelayedFloatField(UnityEngine.Rect,System.String,System.Single,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает отложенное текстовое поле для ввода чисел с плавающей запятой.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве плавающего поля.</param>
      <param name="label">Необязательная метка для отображения перед полем с плавающей запятой.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет Enter или пока фокус не переместится из поля с плавающей запятой.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DelayedFloatField(UnityEngine.Rect,UnityEngine.GUIContent,System.Single,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает отложенное текстовое поле для ввода чисел с плавающей запятой.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве плавающего поля.</param>
      <param name="label">Необязательная метка для отображения перед полем с плавающей запятой.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет Enter или пока фокус не переместится из поля с плавающей запятой.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DelayedFloatField(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent)">
      <summary>
        <para>Создает отложенное текстовое поле для ввода чисел с плавающей запятой.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве плавающего поля.</param>
      <param name="property">Свойство float для редактирования.</param>
      <param name="label">Необязательная метка для отображения перед полем с плавающей запятой. Передайте GUIContent.none, чтобы скрыть метку.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DelayedIntField(UnityEngine.Rect,System.Int32,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает текстовое поле с задержкой для ввода целых чисел.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля int.</param>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет Enter или пока фокус не переместится с поля int.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DelayedIntField(UnityEngine.Rect,System.String,System.Int32,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает текстовое поле с задержкой для ввода целых чисел.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля int.</param>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет Enter или пока фокус не переместится с поля int.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DelayedIntField(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает текстовое поле с задержкой для ввода целых чисел.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля int.</param>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет Enter или пока фокус не переместится с поля int.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DelayedIntField(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent)">
      <summary>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет Enter или пока фокус не переместится с поля int.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля int.</param>
      <param name="property">Свойство int для редактирования.</param>
      <param name="label">Необязательная метка для отображения перед полем int. Передайте GUIContent.none, чтобы скрыть метку.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DelayedTextField(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает отложенное текстовое поле.</para>
      </summary>
      <param name="position">Прямоугольник на экране для текстового поля.</param>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="text">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет Enter или пока фокус не переместится с текстового поля.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DelayedTextField(UnityEngine.Rect,System.String,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает отложенное текстовое поле.</para>
      </summary>
      <param name="position">Прямоугольник на экране для текстового поля.</param>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="text">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет Enter или пока фокус не переместится с текстового поля.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DelayedTextField(UnityEngine.Rect,UnityEngine.GUIContent,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает отложенное текстовое поле.</para>
      </summary>
      <param name="position">Прямоугольник на экране для текстового поля.</param>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="text">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет Enter или пока фокус не переместится с текстового поля.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DelayedTextField(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent)">
      <summary>
        <para>Создает отложенное текстовое поле.</para>
      </summary>
      <param name="position">Прямоугольник на экране для текстового поля.</param>
      <param name="property">Свойство текста для редактирования.</param>
      <param name="label">Необязательная метка для отображения перед полем int. Передайте GUIContent.none, чтобы скрыть метку.</param>
    </member>
    <member name="T:UnityEditor.EditorGUI.DisabledGroupScope">
      <summary>
        <para>Создайте группу элементов управления, которые можно отключить.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUI.DisabledGroupScope.#ctor(System.Boolean)">
      <summary>
        <para>Создайте новую DisabledGroupScope и начните соответствующую группу.</para>
      </summary>
      <param name="disabled">Логическое значение, указывающее, следует ли отключать элементы управления внутри группы.</param>
    </member>
    <member name="T:UnityEditor.EditorGUI.DisabledScope">
      <summary>
        <para>Создайте группу элементов управления, которые можно отключить.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUI.DisabledScope.#ctor(System.Boolean)">
      <summary>
        <para>Создайте новую DisabledScope и начните соответствующую группу.</para>
      </summary>
      <param name="disabled">Логическое значение, указывающее, следует ли отключать элементы управления внутри группы.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DoubleField(UnityEngine.Rect,System.Double,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает текстовое поле для ввода двойных значений.</para>
      </summary>
      <param name="position">Прямоугольник на экране для двойного поля.</param>
      <param name="label">Необязательная метка для отображения перед двойным полем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DoubleField(UnityEngine.Rect,System.String,System.Double,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает текстовое поле для ввода двойных значений.</para>
      </summary>
      <param name="position">Прямоугольник на экране для двойного поля.</param>
      <param name="label">Необязательная метка для отображения перед двойным полем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DoubleField(UnityEngine.Rect,UnityEngine.GUIContent,System.Double,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает текстовое поле для ввода двойных значений.</para>
      </summary>
      <param name="position">Прямоугольник на экране для двойного поля.</param>
      <param name="label">Необязательная метка для отображения перед двойным полем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DrawPreviewTexture(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.Material,UnityEngine.ScaleMode,System.Single,System.Single,UnityEngine.Rendering.ColorWriteMask,System.Single)">
      <summary>
        <para>Рисует текстуру внутри прямоугольника.</para>
      </summary>
      <param name="position">Прямоугольник на экране для рисования текстуры внутри.</param>
      <param name="image">Текстура для отображения.</param>
      <param name="mat">Материал, который будет использоваться при отрисовке текстуры.</param>
      <param name="scaleMode">Как масштабировать изображение, если его соотношение сторон не соответствует соотношению сторон, которое должно быть нарисовано внутри.</param>
      <param name="imageAspect">Соотношение сторон, используемое для исходного изображения. Если 0 (по умолчанию), используется соотношение сторон изображения.</param>
      <param name="mipLevel">Мип-уровень для семпла. Если отрицательный, текстура сэмплируется нормально.
Задает свойство _Mip материала.</param>
      <param name="colorWriteMask">Указывает, какие цветовые компоненты изображения будут записаны. Задает свойство _ColorMask материала.</param>
      <param name="exposure">Определяет экспозицию текстуры. Задает свойство _Exposure материала.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DrawPreviewTexture(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.Material,UnityEngine.ScaleMode,System.Single,System.Single,UnityEngine.Rendering.ColorWriteMask)">
      <summary>
        <para>Рисует текстуру внутри прямоугольника.</para>
      </summary>
      <param name="position">Прямоугольник на экране для рисования текстуры внутри.</param>
      <param name="image">Текстура для отображения.</param>
      <param name="mat">Материал, который будет использоваться при отрисовке текстуры.</param>
      <param name="scaleMode">Как масштабировать изображение, если его соотношение сторон не соответствует соотношению сторон, которое должно быть нарисовано внутри.</param>
      <param name="imageAspect">Соотношение сторон, используемое для исходного изображения. Если 0 (по умолчанию), используется соотношение сторон изображения.</param>
      <param name="mipLevel">Мип-уровень для семпла. Если отрицательный, текстура сэмплируется нормально.
Задает свойство _Mip материала.</param>
      <param name="colorWriteMask">Указывает, какие цветовые компоненты изображения будут записаны. Задает свойство _ColorMask материала.</param>
      <param name="exposure">Определяет экспозицию текстуры. Задает свойство _Exposure материала.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DrawPreviewTexture(UnityEngine.Rect,UnityEngine.Texture)">
      <summary>
        <para>Рисует текстуру внутри прямоугольника.</para>
      </summary>
      <param name="position">Прямоугольник на экране для рисования текстуры внутри.</param>
      <param name="image">Текстура для отображения.</param>
      <param name="mat">Материал, который будет использоваться при отрисовке текстуры.</param>
      <param name="scaleMode">Как масштабировать изображение, если его соотношение сторон не соответствует соотношению сторон, которое должно быть нарисовано внутри.</param>
      <param name="imageAspect">Соотношение сторон, используемое для исходного изображения. Если 0 (по умолчанию), используется соотношение сторон изображения.</param>
      <param name="mipLevel">Мип-уровень для семпла. Если отрицательный, текстура сэмплируется нормально.
Задает свойство _Mip материала.</param>
      <param name="colorWriteMask">Указывает, какие цветовые компоненты изображения будут записаны. Задает свойство _ColorMask материала.</param>
      <param name="exposure">Определяет экспозицию текстуры. Задает свойство _Exposure материала.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DrawPreviewTexture(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.Material)">
      <summary>
        <para>Рисует текстуру внутри прямоугольника.</para>
      </summary>
      <param name="position">Прямоугольник на экране для рисования текстуры внутри.</param>
      <param name="image">Текстура для отображения.</param>
      <param name="mat">Материал, который будет использоваться при отрисовке текстуры.</param>
      <param name="scaleMode">Как масштабировать изображение, если его соотношение сторон не соответствует соотношению сторон, которое должно быть нарисовано внутри.</param>
      <param name="imageAspect">Соотношение сторон, используемое для исходного изображения. Если 0 (по умолчанию), используется соотношение сторон изображения.</param>
      <param name="mipLevel">Мип-уровень для семпла. Если отрицательный, текстура сэмплируется нормально.
Задает свойство _Mip материала.</param>
      <param name="colorWriteMask">Указывает, какие цветовые компоненты изображения будут записаны. Задает свойство _ColorMask материала.</param>
      <param name="exposure">Определяет экспозицию текстуры. Задает свойство _Exposure материала.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DrawPreviewTexture(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.Material,UnityEngine.ScaleMode)">
      <summary>
        <para>Рисует текстуру внутри прямоугольника.</para>
      </summary>
      <param name="position">Прямоугольник на экране для рисования текстуры внутри.</param>
      <param name="image">Текстура для отображения.</param>
      <param name="mat">Материал, который будет использоваться при отрисовке текстуры.</param>
      <param name="scaleMode">Как масштабировать изображение, если его соотношение сторон не соответствует соотношению сторон, которое должно быть нарисовано внутри.</param>
      <param name="imageAspect">Соотношение сторон, используемое для исходного изображения. Если 0 (по умолчанию), используется соотношение сторон изображения.</param>
      <param name="mipLevel">Мип-уровень для семпла. Если отрицательный, текстура сэмплируется нормально.
Задает свойство _Mip материала.</param>
      <param name="colorWriteMask">Указывает, какие цветовые компоненты изображения будут записаны. Задает свойство _ColorMask материала.</param>
      <param name="exposure">Определяет экспозицию текстуры. Задает свойство _Exposure материала.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DrawPreviewTexture(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.Material,UnityEngine.ScaleMode,System.Single)">
      <summary>
        <para>Рисует текстуру внутри прямоугольника.</para>
      </summary>
      <param name="position">Прямоугольник на экране для рисования текстуры внутри.</param>
      <param name="image">Текстура для отображения.</param>
      <param name="mat">Материал, который будет использоваться при отрисовке текстуры.</param>
      <param name="scaleMode">Как масштабировать изображение, если его соотношение сторон не соответствует соотношению сторон, которое должно быть нарисовано внутри.</param>
      <param name="imageAspect">Соотношение сторон, используемое для исходного изображения. Если 0 (по умолчанию), используется соотношение сторон изображения.</param>
      <param name="mipLevel">Мип-уровень для семпла. Если отрицательный, текстура сэмплируется нормально.
Задает свойство _Mip материала.</param>
      <param name="colorWriteMask">Указывает, какие цветовые компоненты изображения будут записаны. Задает свойство _ColorMask материала.</param>
      <param name="exposure">Определяет экспозицию текстуры. Задает свойство _Exposure материала.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DrawPreviewTexture(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.Material,UnityEngine.ScaleMode,System.Single,System.Single)">
      <summary>
        <para>Рисует текстуру внутри прямоугольника.</para>
      </summary>
      <param name="position">Прямоугольник на экране для рисования текстуры внутри.</param>
      <param name="image">Текстура для отображения.</param>
      <param name="mat">Материал, который будет использоваться при отрисовке текстуры.</param>
      <param name="scaleMode">Как масштабировать изображение, если его соотношение сторон не соответствует соотношению сторон, которое должно быть нарисовано внутри.</param>
      <param name="imageAspect">Соотношение сторон, используемое для исходного изображения. Если 0 (по умолчанию), используется соотношение сторон изображения.</param>
      <param name="mipLevel">Мип-уровень для семпла. Если отрицательный, текстура сэмплируется нормально.
Задает свойство _Mip материала.</param>
      <param name="colorWriteMask">Указывает, какие цветовые компоненты изображения будут записаны. Задает свойство _ColorMask материала.</param>
      <param name="exposure">Определяет экспозицию текстуры. Задает свойство _Exposure материала.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DrawRect(UnityEngine.Rect,UnityEngine.Color)">
      <summary>
        <para>Рисует заполненный прямоугольник цвета в указанной позиции и размере в текущем окне редактора.</para>
      </summary>
      <param name="rect">Положение и размер прямоугольника для рисования.</param>
      <param name="color">Цвет прямоугольника.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DrawTextureAlpha(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.ScaleMode,System.Single,System.Single)">
      <summary>
        <para>Рисует альфа-канал текстуры внутри прямоугольника.</para>
      </summary>
      <param name="position">Прямоугольник на экране для рисования текстуры внутри.</param>
      <param name="image">Текстура для отображения.</param>
      <param name="scaleMode">Как масштабировать изображение, если его соотношение сторон не соответствует соотношению сторон, которое должно быть нарисовано внутри.</param>
      <param name="imageAspect">Соотношение сторон, используемое для исходного изображения. Если 0 (по умолчанию), используется соотношение сторон изображения.</param>
      <param name="mipLevel">Какой мип-уровень семплировать. Если отрицательный, текстура будет сэмплирована как обычно.
Он устанавливает свойство материала _Mip.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DrawTextureAlpha(UnityEngine.Rect,UnityEngine.Texture)">
      <summary>
        <para>Рисует альфа-канал текстуры внутри прямоугольника.</para>
      </summary>
      <param name="position">Прямоугольник на экране для рисования текстуры внутри.</param>
      <param name="image">Текстура для отображения.</param>
      <param name="scaleMode">Как масштабировать изображение, если его соотношение сторон не соответствует соотношению сторон, которое должно быть нарисовано внутри.</param>
      <param name="imageAspect">Соотношение сторон, используемое для исходного изображения. Если 0 (по умолчанию), используется соотношение сторон изображения.</param>
      <param name="mipLevel">Какой мип-уровень семплировать. Если отрицательный, текстура будет сэмплирована как обычно.
Он устанавливает свойство материала _Mip.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DrawTextureAlpha(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.ScaleMode)">
      <summary>
        <para>Рисует альфа-канал текстуры внутри прямоугольника.</para>
      </summary>
      <param name="position">Прямоугольник на экране для рисования текстуры внутри.</param>
      <param name="image">Текстура для отображения.</param>
      <param name="scaleMode">Как масштабировать изображение, если его соотношение сторон не соответствует соотношению сторон, которое должно быть нарисовано внутри.</param>
      <param name="imageAspect">Соотношение сторон, используемое для исходного изображения. Если 0 (по умолчанию), используется соотношение сторон изображения.</param>
      <param name="mipLevel">Какой мип-уровень семплировать. Если отрицательный, текстура будет сэмплирована как обычно.
Он устанавливает свойство материала _Mip.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DrawTextureAlpha(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.ScaleMode,System.Single)">
      <summary>
        <para>Рисует альфа-канал текстуры внутри прямоугольника.</para>
      </summary>
      <param name="position">Прямоугольник на экране для рисования текстуры внутри.</param>
      <param name="image">Текстура для отображения.</param>
      <param name="scaleMode">Как масштабировать изображение, если его соотношение сторон не соответствует соотношению сторон, которое должно быть нарисовано внутри.</param>
      <param name="imageAspect">Соотношение сторон, используемое для исходного изображения. Если 0 (по умолчанию), используется соотношение сторон изображения.</param>
      <param name="mipLevel">Какой мип-уровень семплировать. Если отрицательный, текстура будет сэмплирована как обычно.
Он устанавливает свойство материала _Mip.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DropdownButton(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.FocusType)">
      <summary>
        <para>Создает кнопку, реагирующую на нажатие мыши, для отображения собственного выпадающего содержимого.</para>
      </summary>
      <param name="position">Прямоугольник на экране для кнопки.</param>
      <param name="content">Текст, изображение и подсказка для этой кнопки.</param>
      <param name="focusType">Должна ли кнопка выбираться с клавиатуры или нет.</param>
      <param name="style">Необязательный стиль для использования.</param>
      <returns>
        <para>true, когда пользователь нажимает кнопку.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DropdownButton(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.FocusType,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает кнопку, реагирующую на нажатие мыши, для отображения собственного выпадающего содержимого.</para>
      </summary>
      <param name="position">Прямоугольник на экране для кнопки.</param>
      <param name="content">Текст, изображение и подсказка для этой кнопки.</param>
      <param name="focusType">Должна ли кнопка выбираться с клавиатуры или нет.</param>
      <param name="style">Необязательный стиль для использования.</param>
      <returns>
        <para>true, когда пользователь нажимает кнопку.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DropShadowLabel(UnityEngine.Rect,System.String)">
      <summary>
        <para>Рисует метку с тенью.</para>
      </summary>
      <param name="position">Где показывать ярлык.</param>
      <param name="content">Текст для отображения
стиль @style для использования.</param>
      <param name="text">
      </param>
      <param name="style">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DropShadowLabel(UnityEngine.Rect,UnityEngine.GUIContent)">
      <summary>
        <para>Рисует метку с тенью.</para>
      </summary>
      <param name="position">Где показывать ярлык.</param>
      <param name="content">Текст для отображения
стиль @style для использования.</param>
      <param name="text">
      </param>
      <param name="style">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DropShadowLabel(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Рисует метку с тенью.</para>
      </summary>
      <param name="position">Где показывать ярлык.</param>
      <param name="content">Текст для отображения
стиль @style для использования.</param>
      <param name="text">
      </param>
      <param name="style">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DropShadowLabel(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Рисует метку с тенью.</para>
      </summary>
      <param name="position">Где показывать ярлык.</param>
      <param name="content">Текст для отображения
стиль @style для использования.</param>
      <param name="text">
      </param>
      <param name="style">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUI.EndChangeCheck">
      <summary>
        <para>Завершает блок кода и проверяет любые изменения графического интерфейса.</para>
      </summary>
      <returns>
        <para>Возвращает значение true, если состояние графического интерфейса изменилось с момента вызова EditorGUI.BeginChangeCheck, в противном случае — значение false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EndDisabledGroup">
      <summary>
        <para>Завершает отключенную группу, начатую с помощью BeginDisabledGroup.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUI.EndFoldoutHeaderGroup">
      <summary>
        <para>Закрывает группу, начатую с помощью BeginFoldoutHeaderGroup.
См. также: EditorGUILayout.BeginFoldoutHeaderGroup.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUI.EndProperty">
      <summary>
        <para>Завершает оболочку свойства, запущенную с помощью BeginProperty.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumFlagsField(UnityEngine.Rect,System.Enum)">
      <summary>
        <para>Отображает меню с опцией для каждого значения типа перечисления при нажатии. Опция для значения 0 с именем «Ничего» и опция для значения ~0 (то есть все биты установлены) с именем «Все» всегда отображаются в верхней части меню. Имена значений 0 и ~0 можно переопределить, определив эти значения в типе перечисления.</para>
      </summary>
      <param name="position">Прямоугольник на экране для поля enum flags.</param>
      <param name="label">Необязательная метка для отображения перед полем флагов перечисления.</param>
      <param name="enumValue">Значение флагов перечисления (поддерживает значения перечисления только для типов перечисления с int в качестве базового типа).</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="includeObsolete">Установите значение true, чтобы включить значения Enum с ObsoleteAttribute. Установите значение false, чтобы исключить значения Enum с ObsoleteAttribute.</param>
      <returns>
        <para>Значение флагов перечисления изменено пользователем. Это битовая маска выбора, где каждый бит представляет индекс значения Enum. (Обратите внимание, что возвращаемое значение само по себе не является Enum).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumFlagsField(UnityEngine.Rect,System.Enum,UnityEngine.GUIStyle)">
      <summary>
        <para>Отображает меню с опцией для каждого значения типа перечисления при нажатии. Опция для значения 0 с именем «Ничего» и опция для значения ~0 (то есть все биты установлены) с именем «Все» всегда отображаются в верхней части меню. Имена значений 0 и ~0 можно переопределить, определив эти значения в типе перечисления.</para>
      </summary>
      <param name="position">Прямоугольник на экране для поля enum flags.</param>
      <param name="label">Необязательная метка для отображения перед полем флагов перечисления.</param>
      <param name="enumValue">Значение флагов перечисления (поддерживает значения перечисления только для типов перечисления с int в качестве базового типа).</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="includeObsolete">Установите значение true, чтобы включить значения Enum с ObsoleteAttribute. Установите значение false, чтобы исключить значения Enum с ObsoleteAttribute.</param>
      <returns>
        <para>Значение флагов перечисления изменено пользователем. Это битовая маска выбора, где каждый бит представляет индекс значения Enum. (Обратите внимание, что возвращаемое значение само по себе не является Enum).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumFlagsField(UnityEngine.Rect,System.String,System.Enum)">
      <summary>
        <para>Отображает меню с опцией для каждого значения типа перечисления при нажатии. Опция для значения 0 с именем «Ничего» и опция для значения ~0 (то есть все биты установлены) с именем «Все» всегда отображаются в верхней части меню. Имена значений 0 и ~0 можно переопределить, определив эти значения в типе перечисления.</para>
      </summary>
      <param name="position">Прямоугольник на экране для поля enum flags.</param>
      <param name="label">Необязательная метка для отображения перед полем флагов перечисления.</param>
      <param name="enumValue">Значение флагов перечисления (поддерживает значения перечисления только для типов перечисления с int в качестве базового типа).</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="includeObsolete">Установите значение true, чтобы включить значения Enum с ObsoleteAttribute. Установите значение false, чтобы исключить значения Enum с ObsoleteAttribute.</param>
      <returns>
        <para>Значение флагов перечисления изменено пользователем. Это битовая маска выбора, где каждый бит представляет индекс значения Enum. (Обратите внимание, что возвращаемое значение само по себе не является Enum).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumFlagsField(UnityEngine.Rect,System.String,System.Enum,UnityEngine.GUIStyle)">
      <summary>
        <para>Отображает меню с опцией для каждого значения типа перечисления при нажатии. Опция для значения 0 с именем «Ничего» и опция для значения ~0 (то есть все биты установлены) с именем «Все» всегда отображаются в верхней части меню. Имена значений 0 и ~0 можно переопределить, определив эти значения в типе перечисления.</para>
      </summary>
      <param name="position">Прямоугольник на экране для поля enum flags.</param>
      <param name="label">Необязательная метка для отображения перед полем флагов перечисления.</param>
      <param name="enumValue">Значение флагов перечисления (поддерживает значения перечисления только для типов перечисления с int в качестве базового типа).</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="includeObsolete">Установите значение true, чтобы включить значения Enum с ObsoleteAttribute. Установите значение false, чтобы исключить значения Enum с ObsoleteAttribute.</param>
      <returns>
        <para>Значение флагов перечисления изменено пользователем. Это битовая маска выбора, где каждый бит представляет индекс значения Enum. (Обратите внимание, что возвращаемое значение само по себе не является Enum).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumFlagsField(UnityEngine.Rect,UnityEngine.GUIContent,System.Enum)">
      <summary>
        <para>Отображает меню с опцией для каждого значения типа перечисления при нажатии. Опция для значения 0 с именем «Ничего» и опция для значения ~0 (то есть все биты установлены) с именем «Все» всегда отображаются в верхней части меню. Имена значений 0 и ~0 можно переопределить, определив эти значения в типе перечисления.</para>
      </summary>
      <param name="position">Прямоугольник на экране для поля enum flags.</param>
      <param name="label">Необязательная метка для отображения перед полем флагов перечисления.</param>
      <param name="enumValue">Значение флагов перечисления (поддерживает значения перечисления только для типов перечисления с int в качестве базового типа).</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="includeObsolete">Установите значение true, чтобы включить значения Enum с ObsoleteAttribute. Установите значение false, чтобы исключить значения Enum с ObsoleteAttribute.</param>
      <returns>
        <para>Значение флагов перечисления изменено пользователем. Это битовая маска выбора, где каждый бит представляет индекс значения Enum. (Обратите внимание, что возвращаемое значение само по себе не является Enum).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumFlagsField(UnityEngine.Rect,UnityEngine.GUIContent,System.Enum,UnityEngine.GUIStyle)">
      <summary>
        <para>Отображает меню с опцией для каждого значения типа перечисления при нажатии. Опция для значения 0 с именем «Ничего» и опция для значения ~0 (то есть все биты установлены) с именем «Все» всегда отображаются в верхней части меню. Имена значений 0 и ~0 можно переопределить, определив эти значения в типе перечисления.</para>
      </summary>
      <param name="position">Прямоугольник на экране для поля enum flags.</param>
      <param name="label">Необязательная метка для отображения перед полем флагов перечисления.</param>
      <param name="enumValue">Значение флагов перечисления (поддерживает значения перечисления только для типов перечисления с int в качестве базового типа).</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="includeObsolete">Установите значение true, чтобы включить значения Enum с ObsoleteAttribute. Установите значение false, чтобы исключить значения Enum с ObsoleteAttribute.</param>
      <returns>
        <para>Значение флагов перечисления изменено пользователем. Это битовая маска выбора, где каждый бит представляет индекс значения Enum. (Обратите внимание, что возвращаемое значение само по себе не является Enum).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumFlagsField(UnityEngine.Rect,UnityEngine.GUIContent,System.Enum,System.Boolean,UnityEngine.GUIStyle)">
      <summary>
        <para>Отображает меню с опцией для каждого значения типа перечисления при нажатии. Опция для значения 0 с именем «Ничего» и опция для значения ~0 (то есть все биты установлены) с именем «Все» всегда отображаются в верхней части меню. Имена значений 0 и ~0 можно переопределить, определив эти значения в типе перечисления.</para>
      </summary>
      <param name="position">Прямоугольник на экране для поля enum flags.</param>
      <param name="label">Необязательная метка для отображения перед полем флагов перечисления.</param>
      <param name="enumValue">Значение флагов перечисления (поддерживает значения перечисления только для типов перечисления с int в качестве базового типа).</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="includeObsolete">Установите значение true, чтобы включить значения Enum с ObsoleteAttribute. Установите значение false, чтобы исключить значения Enum с ObsoleteAttribute.</param>
      <returns>
        <para>Значение флагов перечисления изменено пользователем. Это битовая маска выбора, где каждый бит представляет индекс значения Enum. (Обратите внимание, что возвращаемое значение само по себе не является Enum).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumMaskField(UnityEngine.Rect,System.Enum)">
      <summary>
        <para>Этот метод устарел. Вместо этого используйте EditorGUI.EnumFlagsField.

Создает поле для масок на основе перечисления.</para>
      </summary>
      <param name="position">Прямоугольник на экране, используемый для этого элемента управления.</param>
      <param name="label">Заголовок/метка для элемента управления.</param>
      <param name="enumValue">Перечисление для флагов.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Выбор BitMask, где каждый бит представляет индекс значения Enum. (Обратите внимание, что возвращаемое значение само по себе не является Enum).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumMaskField(UnityEngine.Rect,System.String,System.Enum)">
      <summary>
        <para>Этот метод устарел. Вместо этого используйте EditorGUI.EnumFlagsField.

Создает поле для масок на основе перечисления.</para>
      </summary>
      <param name="position">Прямоугольник на экране, используемый для этого элемента управления.</param>
      <param name="label">Заголовок/метка для элемента управления.</param>
      <param name="enumValue">Перечисление для флагов.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Выбор BitMask, где каждый бит представляет индекс значения Enum. (Обратите внимание, что возвращаемое значение само по себе не является Enum).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumMaskField(UnityEngine.Rect,UnityEngine.GUIContent,System.Enum)">
      <summary>
        <para>Этот метод устарел. Вместо этого используйте EditorGUI.EnumFlagsField.

Создает поле для масок на основе перечисления.</para>
      </summary>
      <param name="position">Прямоугольник на экране, используемый для этого элемента управления.</param>
      <param name="label">Заголовок/метка для элемента управления.</param>
      <param name="enumValue">Перечисление для флагов.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Выбор BitMask, где каждый бит представляет индекс значения Enum. (Обратите внимание, что возвращаемое значение само по себе не является Enum).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumMaskField(UnityEngine.Rect,System.Enum,UnityEngine.GUIStyle)">
      <summary>
        <para>Этот метод устарел. Вместо этого используйте EditorGUI.EnumFlagsField.

Создает поле для масок на основе перечисления.</para>
      </summary>
      <param name="position">Прямоугольник на экране, используемый для этого элемента управления.</param>
      <param name="label">Заголовок/метка для элемента управления.</param>
      <param name="enumValue">Перечисление для флагов.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Выбор BitMask, где каждый бит представляет индекс значения Enum. (Обратите внимание, что возвращаемое значение само по себе не является Enum).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumMaskField(UnityEngine.Rect,System.String,System.Enum,UnityEngine.GUIStyle)">
      <summary>
        <para>Этот метод устарел. Вместо этого используйте EditorGUI.EnumFlagsField.

Создает поле для масок на основе перечисления.</para>
      </summary>
      <param name="position">Прямоугольник на экране, используемый для этого элемента управления.</param>
      <param name="label">Заголовок/метка для элемента управления.</param>
      <param name="enumValue">Перечисление для флагов.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Выбор BitMask, где каждый бит представляет индекс значения Enum. (Обратите внимание, что возвращаемое значение само по себе не является Enum).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumMaskField(UnityEngine.Rect,UnityEngine.GUIContent,System.Enum,UnityEngine.GUIStyle)">
      <summary>
        <para>Этот метод устарел. Вместо этого используйте EditorGUI.EnumFlagsField.

Создает поле для масок на основе перечисления.</para>
      </summary>
      <param name="position">Прямоугольник на экране, используемый для этого элемента управления.</param>
      <param name="label">Заголовок/метка для элемента управления.</param>
      <param name="enumValue">Перечисление для флагов.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Выбор BitMask, где каждый бит представляет индекс значения Enum. (Обратите внимание, что возвращаемое значение само по себе не является Enum).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumMaskPopup(UnityEngine.Rect,System.String,System.Enum)">
      <summary>
        <para>Этот метод устарел. Вместо этого используйте EditorGUI.EnumFlagsField.

Создает всплывающее поле выбора enum для битовой маски.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selected">Параметры перечисления, отображаемые в поле.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Параметры перечисления, выбранные пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumMaskPopup(UnityEngine.Rect,System.String,System.Enum,UnityEngine.GUIStyle)">
      <summary>
        <para>Этот метод устарел. Вместо этого используйте EditorGUI.EnumFlagsField.

Создает всплывающее поле выбора enum для битовой маски.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selected">Параметры перечисления, отображаемые в поле.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Параметры перечисления, выбранные пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumMaskPopup(UnityEngine.Rect,UnityEngine.GUIContent,System.Enum)">
      <summary>
        <para>Этот метод устарел. Вместо этого используйте EditorGUI.EnumFlagsField.

Создает всплывающее поле выбора enum для битовой маски.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selected">Параметры перечисления, отображаемые в поле.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Параметры перечисления, выбранные пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumMaskPopup(UnityEngine.Rect,UnityEngine.GUIContent,System.Enum,UnityEngine.GUIStyle)">
      <summary>
        <para>Этот метод устарел. Вместо этого используйте EditorGUI.EnumFlagsField.

Создает всплывающее поле выбора enum для битовой маски.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selected">Параметры перечисления, отображаемые в поле.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Параметры перечисления, выбранные пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumPopup(UnityEngine.Rect,System.Enum)">
      <summary>
        <para>Создает всплывающее поле выбора enum.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selected">Параметр перечисления, отображаемый в поле.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="includeObsolete">Установите значение true, чтобы включить значения Enum с ObsoleteAttribute. Установите значение false, чтобы исключить значения Enum с ObsoleteAttribute.</param>
      <param name="checkEnabled">Метод вызывается для каждого отображаемого значения Enum. Указанный метод должен возвращать true, если опция может быть выбрана, иначе false.</param>
      <returns>
        <para>Параметр перечисления, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumPopup(UnityEngine.Rect,System.String,System.Enum)">
      <summary>
        <para>Создает всплывающее поле выбора enum.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selected">Параметр перечисления, отображаемый в поле.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="includeObsolete">Установите значение true, чтобы включить значения Enum с ObsoleteAttribute. Установите значение false, чтобы исключить значения Enum с ObsoleteAttribute.</param>
      <param name="checkEnabled">Метод вызывается для каждого отображаемого значения Enum. Указанный метод должен возвращать true, если опция может быть выбрана, иначе false.</param>
      <returns>
        <para>Параметр перечисления, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumPopup(UnityEngine.Rect,UnityEngine.GUIContent,System.Enum)">
      <summary>
        <para>Создает всплывающее поле выбора enum.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selected">Параметр перечисления, отображаемый в поле.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="includeObsolete">Установите значение true, чтобы включить значения Enum с ObsoleteAttribute. Установите значение false, чтобы исключить значения Enum с ObsoleteAttribute.</param>
      <param name="checkEnabled">Метод вызывается для каждого отображаемого значения Enum. Указанный метод должен возвращать true, если опция может быть выбрана, иначе false.</param>
      <returns>
        <para>Параметр перечисления, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumPopup(UnityEngine.Rect,System.Enum,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает всплывающее поле выбора enum.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selected">Параметр перечисления, отображаемый в поле.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="includeObsolete">Установите значение true, чтобы включить значения Enum с ObsoleteAttribute. Установите значение false, чтобы исключить значения Enum с ObsoleteAttribute.</param>
      <param name="checkEnabled">Метод вызывается для каждого отображаемого значения Enum. Указанный метод должен возвращать true, если опция может быть выбрана, иначе false.</param>
      <returns>
        <para>Параметр перечисления, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumPopup(UnityEngine.Rect,System.String,System.Enum,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает всплывающее поле выбора enum.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selected">Параметр перечисления, отображаемый в поле.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="includeObsolete">Установите значение true, чтобы включить значения Enum с ObsoleteAttribute. Установите значение false, чтобы исключить значения Enum с ObsoleteAttribute.</param>
      <param name="checkEnabled">Метод вызывается для каждого отображаемого значения Enum. Указанный метод должен возвращать true, если опция может быть выбрана, иначе false.</param>
      <returns>
        <para>Параметр перечисления, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumPopup(UnityEngine.Rect,UnityEngine.GUIContent,System.Enum,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает всплывающее поле выбора enum.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selected">Параметр перечисления, отображаемый в поле.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="includeObsolete">Установите значение true, чтобы включить значения Enum с ObsoleteAttribute. Установите значение false, чтобы исключить значения Enum с ObsoleteAttribute.</param>
      <param name="checkEnabled">Метод вызывается для каждого отображаемого значения Enum. Указанный метод должен возвращать true, если опция может быть выбрана, иначе false.</param>
      <returns>
        <para>Параметр перечисления, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumPopup(UnityEngine.Rect,UnityEngine.GUIContent,System.Enum,System.Func`2&lt;System.Enum,System.Boolean&gt;,System.Boolean,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает всплывающее поле выбора enum.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selected">Параметр перечисления, отображаемый в поле.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="includeObsolete">Установите значение true, чтобы включить значения Enum с ObsoleteAttribute. Установите значение false, чтобы исключить значения Enum с ObsoleteAttribute.</param>
      <param name="checkEnabled">Метод вызывается для каждого отображаемого значения Enum. Указанный метод должен возвращать true, если опция может быть выбрана, иначе false.</param>
      <returns>
        <para>Параметр перечисления, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.FloatField(UnityEngine.Rect,System.Single,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает текстовое поле для ввода чисел с плавающей запятой.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве плавающего поля.</param>
      <param name="label">Необязательная метка для отображения перед полем с плавающей запятой.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.FloatField(UnityEngine.Rect,System.String,System.Single,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает текстовое поле для ввода чисел с плавающей запятой.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве плавающего поля.</param>
      <param name="label">Необязательная метка для отображения перед полем с плавающей запятой.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.FloatField(UnityEngine.Rect,UnityEngine.GUIContent,System.Single,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает текстовое поле для ввода чисел с плавающей запятой.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве плавающего поля.</param>
      <param name="label">Необязательная метка для отображения перед полем с плавающей запятой.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.FocusTextInControl(System.String)">
      <summary>
        <para>Переместите фокус клавиатуры на именованное текстовое поле и начните редактирование содержимого.</para>
      </summary>
      <param name="name">Имя задается с помощью GUI.SetNextControlName.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.Foldout(UnityEngine.Rect,System.Boolean,System.String)">
      <summary>
        <para>Создает метку с развернутой стрелкой слева от нее.</para>
      </summary>
      <param name="position">Прямоугольник на экране для стрелки и метки.</param>
      <param name="foldout">Показанное развернутое состояние.</param>
      <param name="content">Ярлык для отображения.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="toggleOnLabelClick">Должна ли метка быть кликабельной частью элемента управления?</param>
      <returns>
        <para>Состояние раскрытия, выбранное пользователем. Если true, вы должны визуализировать подобъекты.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Foldout(UnityEngine.Rect,System.Boolean,UnityEngine.GUIContent)">
      <summary>
        <para>Создает метку с развернутой стрелкой слева от нее.</para>
      </summary>
      <param name="position">Прямоугольник на экране для стрелки и метки.</param>
      <param name="foldout">Показанное развернутое состояние.</param>
      <param name="content">Ярлык для отображения.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="toggleOnLabelClick">Должна ли метка быть кликабельной частью элемента управления?</param>
      <returns>
        <para>Состояние раскрытия, выбранное пользователем. Если true, вы должны визуализировать подобъекты.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Foldout(UnityEngine.Rect,System.Boolean,System.String,System.Boolean)">
      <summary>
        <para>Создает метку с развернутой стрелкой слева от нее.</para>
      </summary>
      <param name="position">Прямоугольник на экране для стрелки и метки.</param>
      <param name="foldout">Показанное развернутое состояние.</param>
      <param name="content">Ярлык для отображения.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="toggleOnLabelClick">Должна ли метка быть кликабельной частью элемента управления?</param>
      <returns>
        <para>Состояние раскрытия, выбранное пользователем. Если true, вы должны визуализировать подобъекты.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Foldout(UnityEngine.Rect,System.Boolean,UnityEngine.GUIContent,System.Boolean)">
      <summary>
        <para>Создает метку с развернутой стрелкой слева от нее.</para>
      </summary>
      <param name="position">Прямоугольник на экране для стрелки и метки.</param>
      <param name="foldout">Показанное развернутое состояние.</param>
      <param name="content">Ярлык для отображения.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="toggleOnLabelClick">Должна ли метка быть кликабельной частью элемента управления?</param>
      <returns>
        <para>Состояние раскрытия, выбранное пользователем. Если true, вы должны визуализировать подобъекты.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Foldout(UnityEngine.Rect,System.Boolean,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает метку с развернутой стрелкой слева от нее.</para>
      </summary>
      <param name="position">Прямоугольник на экране для стрелки и метки.</param>
      <param name="foldout">Показанное развернутое состояние.</param>
      <param name="content">Ярлык для отображения.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="toggleOnLabelClick">Должна ли метка быть кликабельной частью элемента управления?</param>
      <returns>
        <para>Состояние раскрытия, выбранное пользователем. Если true, вы должны визуализировать подобъекты.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Foldout(UnityEngine.Rect,System.Boolean,System.String,System.Boolean,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает метку с развернутой стрелкой слева от нее.</para>
      </summary>
      <param name="position">Прямоугольник на экране для стрелки и метки.</param>
      <param name="foldout">Показанное развернутое состояние.</param>
      <param name="content">Ярлык для отображения.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="toggleOnLabelClick">Должна ли метка быть кликабельной частью элемента управления?</param>
      <returns>
        <para>Состояние раскрытия, выбранное пользователем. Если true, вы должны визуализировать подобъекты.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Foldout(UnityEngine.Rect,System.Boolean,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает метку с развернутой стрелкой слева от нее.</para>
      </summary>
      <param name="position">Прямоугольник на экране для стрелки и метки.</param>
      <param name="foldout">Показанное развернутое состояние.</param>
      <param name="content">Ярлык для отображения.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="toggleOnLabelClick">Должна ли метка быть кликабельной частью элемента управления?</param>
      <returns>
        <para>Состояние раскрытия, выбранное пользователем. Если true, вы должны визуализировать подобъекты.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Foldout(UnityEngine.Rect,System.Boolean,UnityEngine.GUIContent,System.Boolean,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает метку с развернутой стрелкой слева от нее.</para>
      </summary>
      <param name="position">Прямоугольник на экране для стрелки и метки.</param>
      <param name="foldout">Показанное развернутое состояние.</param>
      <param name="content">Ярлык для отображения.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="toggleOnLabelClick">Должна ли метка быть кликабельной частью элемента управления?</param>
      <returns>
        <para>Состояние раскрытия, выбранное пользователем. Если true, вы должны визуализировать подобъекты.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.GetPropertyHeight(UnityEditor.SerializedProperty,System.Boolean)">
      <summary>
        <para>Получите высоту, необходимую для элемента управления PropertyField.</para>
      </summary>
      <param name="property">Высота области собственности.</param>
      <param name="label">Описательный текст или изображение.</param>
      <param name="includeChildren">Должна ли возвращаемая высота включать высоту дочерних свойств?</param>
      <param name="type">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUI.GetPropertyHeight(UnityEditor.SerializedPropertyType,UnityEngine.GUIContent)">
      <summary>
        <para>Получите высоту, необходимую для элемента управления PropertyField.</para>
      </summary>
      <param name="property">Высота области собственности.</param>
      <param name="label">Описательный текст или изображение.</param>
      <param name="includeChildren">Должна ли возвращаемая высота включать высоту дочерних свойств?</param>
      <param name="type">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUI.GetPropertyHeight(UnityEditor.SerializedProperty)">
      <summary>
        <para>Получите высоту, необходимую для элемента управления PropertyField.</para>
      </summary>
      <param name="property">Высота области собственности.</param>
      <param name="label">Описательный текст или изображение.</param>
      <param name="includeChildren">Должна ли возвращаемая высота включать высоту дочерних свойств?</param>
      <param name="type">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUI.GetPropertyHeight(UnityEditor.SerializedProperty,UnityEngine.GUIContent)">
      <summary>
        <para>Получите высоту, необходимую для элемента управления PropertyField.</para>
      </summary>
      <param name="property">Высота области собственности.</param>
      <param name="label">Описательный текст или изображение.</param>
      <param name="includeChildren">Должна ли возвращаемая высота включать высоту дочерних свойств?</param>
      <param name="type">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUI.GetPropertyHeight(UnityEditor.SerializedProperty,UnityEngine.GUIContent,System.Boolean)">
      <summary>
        <para>Получите высоту, необходимую для элемента управления PropertyField.</para>
      </summary>
      <param name="property">Высота области собственности.</param>
      <param name="label">Описательный текст или изображение.</param>
      <param name="includeChildren">Должна ли возвращаемая высота включать высоту дочерних свойств?</param>
      <param name="type">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUI.GradientField(UnityEngine.Rect,UnityEngine.Gradient)">
      <summary>
        <para>Создает поле для редактирования Градиента.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="gradient">Градиент для редактирования.</param>
      <param name="hdr">Отображение редактора градиентов HDR.</param>
      <param name="colorSpace">Отображение градиента и редактора градиентов в этом цветовом пространстве.</param>
      <returns>
        <para>Градиент, отредактированный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.GradientField(UnityEngine.Rect,System.String,UnityEngine.Gradient)">
      <summary>
        <para>Создает поле для редактирования Градиента.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="gradient">Градиент для редактирования.</param>
      <param name="hdr">Отображение редактора градиентов HDR.</param>
      <param name="colorSpace">Отображение градиента и редактора градиентов в этом цветовом пространстве.</param>
      <returns>
        <para>Градиент, отредактированный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.GradientField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Gradient)">
      <summary>
        <para>Создает поле для редактирования Градиента.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="gradient">Градиент для редактирования.</param>
      <param name="hdr">Отображение редактора градиентов HDR.</param>
      <param name="colorSpace">Отображение градиента и редактора градиентов в этом цветовом пространстве.</param>
      <returns>
        <para>Градиент, отредактированный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.GradientField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Gradient,System.Boolean)">
      <summary>
        <para>Создает поле для редактирования Градиента.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="gradient">Градиент для редактирования.</param>
      <param name="hdr">Отображение редактора градиентов HDR.</param>
      <param name="colorSpace">Отображение градиента и редактора градиентов в этом цветовом пространстве.</param>
      <returns>
        <para>Градиент, отредактированный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.GradientField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Gradient,System.Boolean,UnityEngine.ColorSpace)">
      <summary>
        <para>Создает поле для редактирования Градиента.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="gradient">Градиент для редактирования.</param>
      <param name="hdr">Отображение редактора градиентов HDR.</param>
      <param name="colorSpace">Отображение градиента и редактора градиентов в этом цветовом пространстве.</param>
      <returns>
        <para>Градиент, отредактированный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.HandlePrefixLabel(UnityEngine.Rect,UnityEngine.Rect,UnityEngine.GUIContent)">
      <summary>
        <para>Делает метку для некоторого элемента управления.</para>
      </summary>
      <param name="totalPosition">Прямоугольник на экране, который будет использоваться как для метки, так и для элемента управления.</param>
      <param name="labelPosition">Прямоугольник на экране для использования в качестве метки.</param>
      <param name="label">Ярлык для элемента управления.</param>
      <param name="id">Уникальный идентификатор элемента управления. Если ничего не указано, используется идентификатор следующего элемента управления.</param>
      <param name="style">Необязательный GUIStyle для использования в метке.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.HandlePrefixLabel(UnityEngine.Rect,UnityEngine.Rect,UnityEngine.GUIContent,System.Int32)">
      <summary>
        <para>Делает метку для некоторого элемента управления.</para>
      </summary>
      <param name="totalPosition">Прямоугольник на экране, который будет использоваться как для метки, так и для элемента управления.</param>
      <param name="labelPosition">Прямоугольник на экране для использования в качестве метки.</param>
      <param name="label">Ярлык для элемента управления.</param>
      <param name="id">Уникальный идентификатор элемента управления. Если ничего не указано, используется идентификатор следующего элемента управления.</param>
      <param name="style">Необязательный GUIStyle для использования в метке.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.HandlePrefixLabel(UnityEngine.Rect,UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,UnityEngine.GUIStyle)">
      <summary>
        <para>Делает метку для некоторого элемента управления.</para>
      </summary>
      <param name="totalPosition">Прямоугольник на экране, который будет использоваться как для метки, так и для элемента управления.</param>
      <param name="labelPosition">Прямоугольник на экране для использования в качестве метки.</param>
      <param name="label">Ярлык для элемента управления.</param>
      <param name="id">Уникальный идентификатор элемента управления. Если ничего не указано, используется идентификатор следующего элемента управления.</param>
      <param name="style">Необязательный GUIStyle для использования в метке.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.HelpBox(UnityEngine.Rect,System.String,UnityEditor.MessageType)">
      <summary>
        <para>Создает окно справки с сообщением для пользователя.</para>
      </summary>
      <param name="position">Прямоугольник на экране, чтобы нарисовать окно справки внутри.</param>
      <param name="message">Текст сообщения.</param>
      <param name="type">Тип сообщения.</param>
    </member>
    <member name="T:UnityEditor.EditorGUI.IndentLevelScope">
      <summary>
        <para>Область для управления уровнем отступа меток полей.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUI.IndentLevelScope.#ctor">
      <summary>
        <para>Создает IndentLevelScope и увеличивает уровень отступа EditorGUI.</para>
      </summary>
      <param name="increment">Уровень отступа EditorGUI будет увеличен на эту величину внутри области.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.IndentLevelScope.#ctor(System.Int32)">
      <summary>
        <para>Создает IndentLevelScope и увеличивает уровень отступа EditorGUI.</para>
      </summary>
      <param name="increment">Уровень отступа EditorGUI будет увеличен на эту величину внутри области.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.InspectorTitlebar">
      <summary>
        <para>Создает заголовок, похожий на окно инспектора.</para>
      </summary>
      <param name="position">Прямоугольник на экране для заголовка.</param>
      <param name="foldout">Развернутое состояние показано стрелкой.</param>
      <param name="targetObj">Объект (например, компонент), для которого предназначена панель заголовка.</param>
      <param name="targetObjs">Объекты, для которых предназначена панель заголовка.</param>
      <param name="expandable">Должен ли этот редактор отображать раскрывающуюся стрелку, чтобы переключить отображение его свойств.</param>
      <returns>
        <para>Состояние разворота, выбранное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.InspectorTitlebar">
      <summary>
        <para>Создает заголовок, похожий на окно инспектора.</para>
      </summary>
      <param name="position">Прямоугольник на экране для заголовка.</param>
      <param name="foldout">Развернутое состояние показано стрелкой.</param>
      <param name="targetObj">Объект (например, компонент), для которого предназначена панель заголовка.</param>
      <param name="targetObjs">Объекты, для которых предназначена панель заголовка.</param>
      <param name="expandable">Должен ли этот редактор отображать раскрывающуюся стрелку, чтобы переключить отображение его свойств.</param>
      <returns>
        <para>Состояние разворота, выбранное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.InspectorTitlebar(UnityEngine.Rect,System.Boolean,UnityEngine.Object,System.Boolean)">
      <summary>
        <para>Создает заголовок, похожий на окно инспектора.</para>
      </summary>
      <param name="position">Прямоугольник на экране для заголовка.</param>
      <param name="foldout">Развернутое состояние показано стрелкой.</param>
      <param name="targetObj">Объект (например, компонент), для которого предназначена панель заголовка.</param>
      <param name="targetObjs">Объекты, для которых предназначена панель заголовка.</param>
      <param name="expandable">Должен ли этот редактор отображать раскрывающуюся стрелку, чтобы переключить отображение его свойств.</param>
      <returns>
        <para>Состояние разворота, выбранное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.InspectorTitlebar(UnityEngine.Rect,System.Boolean,UnityEngine.Object[],System.Boolean)">
      <summary>
        <para>Создает заголовок, похожий на окно инспектора.</para>
      </summary>
      <param name="position">Прямоугольник на экране для заголовка.</param>
      <param name="foldout">Развернутое состояние показано стрелкой.</param>
      <param name="targetObj">Объект (например, компонент), для которого предназначена панель заголовка.</param>
      <param name="targetObjs">Объекты, для которых предназначена панель заголовка.</param>
      <param name="expandable">Должен ли этот редактор отображать раскрывающуюся стрелку, чтобы переключить отображение его свойств.</param>
      <returns>
        <para>Состояние разворота, выбранное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntField(UnityEngine.Rect,System.Int32)">
      <summary>
        <para>Создает текстовое поле для ввода целых чисел.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля int.</param>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntField(UnityEngine.Rect,System.String,System.Int32)">
      <summary>
        <para>Создает текстовое поле для ввода целых чисел.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля int.</param>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntField(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32)">
      <summary>
        <para>Создает текстовое поле для ввода целых чисел.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля int.</param>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntField(UnityEngine.Rect,System.Int32,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает текстовое поле для ввода целых чисел.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля int.</param>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntField(UnityEngine.Rect,System.String,System.Int32,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает текстовое поле для ввода целых чисел.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля int.</param>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntField(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает текстовое поле для ввода целых чисел.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля int.</param>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntPopup(UnityEngine.Rect,System.Int32,System.String[],System.Int32[])">
      <summary>
        <para>Создает целочисленное всплывающее поле выбора.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedValue">Значение опции, отображаемой в поле.</param>
      <param name="displayedOptions">Массив с отображаемыми параметрами, из которых пользователь может выбирать.</param>
      <param name="optionValues">Массив со значениями для каждой опции. Если optionValues ​​предполагается прямое сопоставление selectedValue с displayOptions.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Значение параметра, выбранного пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntPopup(UnityEngine.Rect,System.Int32,UnityEngine.GUIContent[],System.Int32[])">
      <summary>
        <para>Создает целочисленное всплывающее поле выбора.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedValue">Значение опции, отображаемой в поле.</param>
      <param name="displayedOptions">Массив с отображаемыми параметрами, из которых пользователь может выбирать.</param>
      <param name="optionValues">Массив со значениями для каждой опции. Если optionValues ​​предполагается прямое сопоставление selectedValue с displayOptions.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Значение параметра, выбранного пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntPopup(UnityEngine.Rect,System.Int32,System.String[],System.Int32[],UnityEngine.GUIStyle)">
      <summary>
        <para>Создает целочисленное всплывающее поле выбора.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedValue">Значение опции, отображаемой в поле.</param>
      <param name="displayedOptions">Массив с отображаемыми параметрами, из которых пользователь может выбирать.</param>
      <param name="optionValues">Массив со значениями для каждой опции. Если optionValues ​​предполагается прямое сопоставление selectedValue с displayOptions.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Значение параметра, выбранного пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntPopup(UnityEngine.Rect,System.Int32,UnityEngine.GUIContent[],System.Int32[],UnityEngine.GUIStyle)">
      <summary>
        <para>Создает целочисленное всплывающее поле выбора.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedValue">Значение опции, отображаемой в поле.</param>
      <param name="displayedOptions">Массив с отображаемыми параметрами, из которых пользователь может выбирать.</param>
      <param name="optionValues">Массив со значениями для каждой опции. Если optionValues ​​предполагается прямое сопоставление selectedValue с displayOptions.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Значение параметра, выбранного пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntPopup(UnityEngine.Rect,System.String,System.Int32,System.String[],System.Int32[],UnityEngine.GUIStyle)">
      <summary>
        <para>Создает целочисленное всплывающее поле выбора.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedValue">Значение опции, отображаемой в поле.</param>
      <param name="displayedOptions">Массив с отображаемыми параметрами, из которых пользователь может выбирать.</param>
      <param name="optionValues">Массив со значениями для каждой опции. Если optionValues ​​предполагается прямое сопоставление selectedValue с displayOptions.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Значение параметра, выбранного пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntPopup(UnityEngine.Rect,System.String,System.Int32,System.String[],System.Int32[])">
      <summary>
        <para>Создает целочисленное всплывающее поле выбора.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedValue">Значение опции, отображаемой в поле.</param>
      <param name="displayedOptions">Массив с отображаемыми параметрами, из которых пользователь может выбирать.</param>
      <param name="optionValues">Массив со значениями для каждой опции. Если optionValues ​​предполагается прямое сопоставление selectedValue с displayOptions.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Значение параметра, выбранного пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntPopup(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,UnityEngine.GUIContent[],System.Int32[],UnityEngine.GUIStyle)">
      <summary>
        <para>Создает целочисленное всплывающее поле выбора.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedValue">Значение опции, отображаемой в поле.</param>
      <param name="displayedOptions">Массив с отображаемыми параметрами, из которых пользователь может выбирать.</param>
      <param name="optionValues">Массив со значениями для каждой опции. Если optionValues ​​предполагается прямое сопоставление selectedValue с displayOptions.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Значение параметра, выбранного пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntPopup(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,UnityEngine.GUIContent[],System.Int32[])">
      <summary>
        <para>Создает целочисленное всплывающее поле выбора.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedValue">Значение опции, отображаемой в поле.</param>
      <param name="displayedOptions">Массив с отображаемыми параметрами, из которых пользователь может выбирать.</param>
      <param name="optionValues">Массив со значениями для каждой опции. Если optionValues ​​предполагается прямое сопоставление selectedValue с displayOptions.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Значение параметра, выбранного пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntPopup(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent[],System.Int32[])">
      <summary>
        <para>
        </para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="property">SerializedProperty для использования с элементом управления.</param>
      <param name="displayedOptions">Массив с отображаемыми параметрами, из которых пользователь может выбирать.</param>
      <param name="optionValues">Массив со значениями для каждой опции. Если optionValues ​​предполагается прямое сопоставление selectedValue с displayOptions.</param>
      <param name="label">Необязательная метка перед полем.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntPopup(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent[],System.Int32[],UnityEngine.GUIContent)">
      <summary>
        <para>
        </para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="property">SerializedProperty для использования с элементом управления.</param>
      <param name="displayedOptions">Массив с отображаемыми параметрами, из которых пользователь может выбирать.</param>
      <param name="optionValues">Массив со значениями для каждой опции. Если optionValues ​​предполагается прямое сопоставление selectedValue с displayOptions.</param>
      <param name="label">Необязательная метка перед полем.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntSlider(UnityEngine.Rect,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Создает ползунок, который пользователь может перетаскивать для изменения целочисленного значения между минимальным и максимальным значением.</para>
      </summary>
      <param name="position">Прямоугольник на экране для ползунка.</param>
      <param name="label">Необязательная метка перед ползунком.</param>
      <param name="value">Значение, которое показывает ползунок. Это определяет положение перетаскиваемого бегунка.</param>
      <param name="leftValue">Значение на левом конце ползунка.</param>
      <param name="rightValue">Значение справа от ползунка.</param>
      <returns>
        <para>Значение, установленное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntSlider(UnityEngine.Rect,System.String,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Создает ползунок, который пользователь может перетаскивать для изменения целочисленного значения между минимальным и максимальным значением.</para>
      </summary>
      <param name="position">Прямоугольник на экране для ползунка.</param>
      <param name="label">Необязательная метка перед ползунком.</param>
      <param name="value">Значение, которое показывает ползунок. Это определяет положение перетаскиваемого бегунка.</param>
      <param name="leftValue">Значение на левом конце ползунка.</param>
      <param name="rightValue">Значение справа от ползунка.</param>
      <returns>
        <para>Значение, установленное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntSlider(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Создает ползунок, который пользователь может перетаскивать для изменения целочисленного значения между минимальным и максимальным значением.</para>
      </summary>
      <param name="position">Прямоугольник на экране для ползунка.</param>
      <param name="label">Необязательная метка перед ползунком.</param>
      <param name="value">Значение, которое показывает ползунок. Это определяет положение перетаскиваемого бегунка.</param>
      <param name="leftValue">Значение на левом конце ползунка.</param>
      <param name="rightValue">Значение справа от ползунка.</param>
      <returns>
        <para>Значение, установленное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntSlider(UnityEngine.Rect,UnityEditor.SerializedProperty,System.Int32,System.Int32)">
      <summary>
        <para>Создает ползунок, который пользователь может перетаскивать для изменения значения между минимальным и максимальным значением.</para>
      </summary>
      <param name="position">Прямоугольник на экране для ползунка.</param>
      <param name="label">Необязательная метка перед ползунком.</param>
      <param name="property">Значение, которое показывает ползунок. Это определяет положение перетаскиваемого бегунка.</param>
      <param name="leftValue">Значение на левом конце ползунка.</param>
      <param name="rightValue">Значение справа от ползунка.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntSlider(UnityEngine.Rect,UnityEditor.SerializedProperty,System.Int32,System.Int32,System.String)">
      <summary>
        <para>Создает ползунок, который пользователь может перетаскивать для изменения значения между минимальным и максимальным значением.</para>
      </summary>
      <param name="position">Прямоугольник на экране для ползунка.</param>
      <param name="label">Необязательная метка перед ползунком.</param>
      <param name="property">Значение, которое показывает ползунок. Это определяет положение перетаскиваемого бегунка.</param>
      <param name="leftValue">Значение на левом конце ползунка.</param>
      <param name="rightValue">Значение справа от ползунка.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntSlider(UnityEngine.Rect,UnityEditor.SerializedProperty,System.Int32,System.Int32,UnityEngine.GUIContent)">
      <summary>
        <para>Создает ползунок, который пользователь может перетаскивать для изменения значения между минимальным и максимальным значением.</para>
      </summary>
      <param name="position">Прямоугольник на экране для ползунка.</param>
      <param name="label">Необязательная метка перед ползунком.</param>
      <param name="property">Значение, которое показывает ползунок. Это определяет положение перетаскиваемого бегунка.</param>
      <param name="leftValue">Значение на левом конце ползунка.</param>
      <param name="rightValue">Значение справа от ползунка.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.LabelField(UnityEngine.Rect,System.String)">
      <summary>
        <para>Создает поле метки. (Полезно для отображения информации только для чтения.)</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля метки.</param>
      <param name="label">Метка перед полем метки.</param>
      <param name="label2">Метка, отображаемая справа.</param>
      <param name="style">Информация о стиле (цвет и т. д.) для отображения метки.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.LabelField(UnityEngine.Rect,UnityEngine.GUIContent)">
      <summary>
        <para>Создает поле метки. (Полезно для отображения информации только для чтения.)</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля метки.</param>
      <param name="label">Метка перед полем метки.</param>
      <param name="label2">Метка, отображаемая справа.</param>
      <param name="style">Информация о стиле (цвет и т. д.) для отображения метки.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.LabelField(UnityEngine.Rect,System.String,System.String)">
      <summary>
        <para>Создает поле метки. (Полезно для отображения информации только для чтения.)</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля метки.</param>
      <param name="label">Метка перед полем метки.</param>
      <param name="label2">Метка, отображаемая справа.</param>
      <param name="style">Информация о стиле (цвет и т. д.) для отображения метки.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.LabelField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.GUIContent)">
      <summary>
        <para>Создает поле метки. (Полезно для отображения информации только для чтения.)</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля метки.</param>
      <param name="label">Метка перед полем метки.</param>
      <param name="label2">Метка, отображаемая справа.</param>
      <param name="style">Информация о стиле (цвет и т. д.) для отображения метки.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.LabelField(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает поле метки. (Полезно для отображения информации только для чтения.)</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля метки.</param>
      <param name="label">Метка перед полем метки.</param>
      <param name="label2">Метка, отображаемая справа.</param>
      <param name="style">Информация о стиле (цвет и т. д.) для отображения метки.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.LabelField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает поле метки. (Полезно для отображения информации только для чтения.)</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля метки.</param>
      <param name="label">Метка перед полем метки.</param>
      <param name="label2">Метка, отображаемая справа.</param>
      <param name="style">Информация о стиле (цвет и т. д.) для отображения метки.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.LabelField(UnityEngine.Rect,System.String,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает поле метки. (Полезно для отображения информации только для чтения.)</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля метки.</param>
      <param name="label">Метка перед полем метки.</param>
      <param name="label2">Метка, отображаемая справа.</param>
      <param name="style">Информация о стиле (цвет и т. д.) для отображения метки.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.LabelField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает поле метки. (Полезно для отображения информации только для чтения.)</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля метки.</param>
      <param name="label">Метка перед полем метки.</param>
      <param name="label2">Метка, отображаемая справа.</param>
      <param name="style">Информация о стиле (цвет и т. д.) для отображения метки.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.LayerField(UnityEngine.Rect,System.Int32)">
      <summary>
        <para>Создает поле выбора слоя.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="layer">Слой, показанный в поле.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Слой, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.LayerField(UnityEngine.Rect,System.String,System.Int32)">
      <summary>
        <para>Создает поле выбора слоя.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="layer">Слой, показанный в поле.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Слой, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.LayerField(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32)">
      <summary>
        <para>Создает поле выбора слоя.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="layer">Слой, показанный в поле.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Слой, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.LayerField(UnityEngine.Rect,System.Int32,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает поле выбора слоя.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="layer">Слой, показанный в поле.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Слой, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.LayerField(UnityEngine.Rect,System.String,System.Int32,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает поле выбора слоя.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="layer">Слой, показанный в поле.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Слой, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.LayerField(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает поле выбора слоя.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="layer">Слой, показанный в поле.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Слой, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.LinkButton(UnityEngine.Rect,System.String)">
      <summary>
        <para>Сделайте интерактивную метку ссылки.</para>
      </summary>
      <param name="position">Прямоугольник на экране для управления. Подчеркивание делается нижней границей, поэтому установите соответствующий размер.</param>
      <param name="label">Метка ссылки.</param>
      <returns>
        <para>true, когда пользователь щелкает ссылку.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.LinkButton(UnityEngine.Rect,UnityEngine.GUIContent)">
      <summary>
        <para>Сделайте интерактивную метку ссылки.</para>
      </summary>
      <param name="position">Прямоугольник на экране для управления. Подчеркивание делается нижней границей, поэтому установите соответствующий размер.</param>
      <param name="label">Метка ссылки.</param>
      <returns>
        <para>true, когда пользователь щелкает ссылку.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.LongField(UnityEngine.Rect,System.Int64)">
      <summary>
        <para>Создает текстовое поле для ввода длинных целых чисел.</para>
      </summary>
      <param name="position">Прямоугольник на экране для длинного поля.</param>
      <param name="label">Необязательная метка для отображения перед длинным полем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.LongField(UnityEngine.Rect,System.String,System.Int64)">
      <summary>
        <para>Создает текстовое поле для ввода длинных целых чисел.</para>
      </summary>
      <param name="position">Прямоугольник на экране для длинного поля.</param>
      <param name="label">Необязательная метка для отображения перед длинным полем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.LongField(UnityEngine.Rect,UnityEngine.GUIContent,System.Int64)">
      <summary>
        <para>Создает текстовое поле для ввода длинных целых чисел.</para>
      </summary>
      <param name="position">Прямоугольник на экране для длинного поля.</param>
      <param name="label">Необязательная метка для отображения перед длинным полем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.LongField(UnityEngine.Rect,System.String,System.Int64,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает текстовое поле для ввода длинных целых чисел.</para>
      </summary>
      <param name="position">Прямоугольник на экране для длинного поля.</param>
      <param name="label">Необязательная метка для отображения перед длинным полем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.LongField(UnityEngine.Rect,UnityEngine.GUIContent,System.Int64,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает текстовое поле для ввода длинных целых чисел.</para>
      </summary>
      <param name="position">Прямоугольник на экране для длинного поля.</param>
      <param name="label">Необязательная метка для отображения перед длинным полем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.MaskField(UnityEngine.Rect,System.Int32,System.String[])">
      <summary>
        <para>Создает поле для масок.</para>
      </summary>
      <param name="position">Прямоугольник на экране, используемый для этого элемента управления.</param>
      <param name="label">Метка для поля.</param>
      <param name="mask">Текущая маска для отображения.</param>
      <param name="displayedOption">Массив строк, содержащий метки для каждого флага.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="displayedOptions">Массив строк, содержащий метки для каждого флага.</param>
      <returns>
        <para>Значение изменено пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.MaskField(UnityEngine.Rect,System.String,System.Int32,System.String[])">
      <summary>
        <para>Создает поле для масок.</para>
      </summary>
      <param name="position">Прямоугольник на экране, используемый для этого элемента управления.</param>
      <param name="label">Метка для поля.</param>
      <param name="mask">Текущая маска для отображения.</param>
      <param name="displayedOption">Массив строк, содержащий метки для каждого флага.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="displayedOptions">Массив строк, содержащий метки для каждого флага.</param>
      <returns>
        <para>Значение изменено пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.MaskField(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,System.String[])">
      <summary>
        <para>Создает поле для масок.</para>
      </summary>
      <param name="position">Прямоугольник на экране, используемый для этого элемента управления.</param>
      <param name="label">Метка для поля.</param>
      <param name="mask">Текущая маска для отображения.</param>
      <param name="displayedOption">Массив строк, содержащий метки для каждого флага.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="displayedOptions">Массив строк, содержащий метки для каждого флага.</param>
      <returns>
        <para>Значение изменено пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.MaskField(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,System.String[],UnityEngine.GUIStyle)">
      <summary>
        <para>Создает поле для масок.</para>
      </summary>
      <param name="position">Прямоугольник на экране, используемый для этого элемента управления.</param>
      <param name="label">Метка для поля.</param>
      <param name="mask">Текущая маска для отображения.</param>
      <param name="displayedOption">Массив строк, содержащий метки для каждого флага.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="displayedOptions">Массив строк, содержащий метки для каждого флага.</param>
      <returns>
        <para>Значение изменено пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.MaskField(UnityEngine.Rect,System.String,System.Int32,System.String[],UnityEngine.GUIStyle)">
      <summary>
        <para>Создает поле для масок.</para>
      </summary>
      <param name="position">Прямоугольник на экране, используемый для этого элемента управления.</param>
      <param name="label">Метка для поля.</param>
      <param name="mask">Текущая маска для отображения.</param>
      <param name="displayedOption">Массив строк, содержащий метки для каждого флага.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="displayedOptions">Массив строк, содержащий метки для каждого флага.</param>
      <returns>
        <para>Значение изменено пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.MaskField(UnityEngine.Rect,System.Int32,System.String[],UnityEngine.GUIStyle)">
      <summary>
        <para>Создает поле для масок.</para>
      </summary>
      <param name="position">Прямоугольник на экране, используемый для этого элемента управления.</param>
      <param name="label">Метка для поля.</param>
      <param name="mask">Текущая маска для отображения.</param>
      <param name="displayedOption">Массив строк, содержащий метки для каждого флага.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="displayedOptions">Массив строк, содержащий метки для каждого флага.</param>
      <returns>
        <para>Значение изменено пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.MinMaxSlider(UnityEngine.GUIContent,UnityEngine.Rect,System.Single&amp;,System.Single&amp;,System.Single,System.Single)">
      <summary>
        <para>Создает специальный ползунок, который пользователь может использовать для указания диапазона между минимумом и максимумом.</para>
      </summary>
      <param name="position">Прямоугольник на экране для ползунка.</param>
      <param name="label">Необязательная метка перед ползунком.</param>
      <param name="minValue">Нижнее значение диапазона, отображаемого ползунком, передается по ссылке.</param>
      <param name="maxValue">Верхнее значение диапазона, отображаемого ползунком, переданное по ссылке.</param>
      <param name="minLimit">Ограничение на левом конце ползунка.</param>
      <param name="maxLimit">Ограничение справа от ползунка.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.MinMaxSlider(UnityEngine.Rect,System.Single&amp;,System.Single&amp;,System.Single,System.Single)">
      <summary>
        <para>Создает специальный ползунок, который пользователь может использовать для указания диапазона между минимумом и максимумом.</para>
      </summary>
      <param name="position">Прямоугольник на экране для ползунка.</param>
      <param name="label">Необязательная метка перед ползунком.</param>
      <param name="minValue">Нижнее значение диапазона, отображаемого ползунком, передается по ссылке.</param>
      <param name="maxValue">Верхнее значение диапазона, отображаемого ползунком, переданное по ссылке.</param>
      <param name="minLimit">Ограничение на левом конце ползунка.</param>
      <param name="maxLimit">Ограничение справа от ползунка.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.MinMaxSlider(UnityEngine.Rect,System.String,System.Single&amp;,System.Single&amp;,System.Single,System.Single)">
      <summary>
        <para>Создает специальный ползунок, который пользователь может использовать для указания диапазона между минимумом и максимумом.</para>
      </summary>
      <param name="position">Прямоугольник на экране для ползунка.</param>
      <param name="label">Необязательная метка перед ползунком.</param>
      <param name="minValue">Нижнее значение диапазона, отображаемого ползунком, передается по ссылке.</param>
      <param name="maxValue">Верхнее значение диапазона, отображаемого ползунком, переданное по ссылке.</param>
      <param name="minLimit">Ограничение на левом конце ползунка.</param>
      <param name="maxLimit">Ограничение справа от ползунка.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.MinMaxSlider(UnityEngine.Rect,UnityEngine.GUIContent,System.Single&amp;,System.Single&amp;,System.Single,System.Single)">
      <summary>
        <para>Создает специальный ползунок, который пользователь может использовать для указания диапазона между минимумом и максимумом.</para>
      </summary>
      <param name="position">Прямоугольник на экране для ползунка.</param>
      <param name="label">Необязательная метка перед ползунком.</param>
      <param name="minValue">Нижнее значение диапазона, отображаемого ползунком, передается по ссылке.</param>
      <param name="maxValue">Верхнее значение диапазона, отображаемого ползунком, переданное по ссылке.</param>
      <param name="minLimit">Ограничение на левом конце ползунка.</param>
      <param name="maxLimit">Ограничение справа от ползунка.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.MultiFloatField(UnityEngine.Rect,UnityEngine.GUIContent[],System.Single[])">
      <summary>
        <para>Создает мультиэлемент управления с текстовыми полями для ввода нескольких чисел с плавающей запятой в одной строке.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве плавающего поля.</param>
      <param name="label">Необязательная метка для отображения перед полем с плавающей запятой.</param>
      <param name="subLabels">Массив с небольшими метками для отображения перед каждым полем с плавающей запятой. В каждом поле есть место только для одной буквы.</param>
      <param name="values">Массив значений для редактирования.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.MultiFloatField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.GUIContent[],System.Single[])">
      <summary>
        <para>Создает мультиэлемент управления с текстовыми полями для ввода нескольких чисел с плавающей запятой в одной строке.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве плавающего поля.</param>
      <param name="label">Необязательная метка для отображения перед полем с плавающей запятой.</param>
      <param name="subLabels">Массив с небольшими метками для отображения перед каждым полем с плавающей запятой. В каждом поле есть место только для одной буквы.</param>
      <param name="values">Массив значений для редактирования.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.MultiIntField(UnityEngine.Rect,UnityEngine.GUIContent[],System.Int32[])">
      <summary>
        <para>Создает мультиэлемент управления с текстовыми полями для ввода нескольких целых чисел в одной строке.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве целочисленного поля.</param>
      <param name="subLabels">Массив с небольшими метками для отображения перед каждым полем int. В каждом поле есть место только для одной буквы.</param>
      <param name="values">Массив значений для редактирования.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.MultiPropertyField(UnityEngine.Rect,UnityEngine.GUIContent[],UnityEditor.SerializedProperty,UnityEngine.GUIContent)">
      <summary>
        <para>Создает мультиэлемент управления с несколькими полями свойств в одной строке.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля с несколькими свойствами.</param>
      <param name="valuesIterator">SerializedProperty первого свойства, для которого создается элемент управления.</param>
      <param name="label">Необязательный ярлык для использования. Если не указано, используется метка самого свойства. Используйте GUIContent.none, чтобы вообще не отображать метку.</param>
      <param name="subLabels">Массив с небольшими метками для отображения перед каждым полем с плавающей запятой. В каждом поле есть место только для одной буквы.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.MultiPropertyField(UnityEngine.Rect,UnityEngine.GUIContent[],UnityEditor.SerializedProperty)">
      <summary>
        <para>Создает мультиэлемент управления с несколькими полями свойств в одной строке.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля с несколькими свойствами.</param>
      <param name="valuesIterator">SerializedProperty первого свойства, для которого создается элемент управления.</param>
      <param name="label">Необязательный ярлык для использования. Если не указано, используется метка самого свойства. Используйте GUIContent.none, чтобы вообще не отображать метку.</param>
      <param name="subLabels">Массив с небольшими метками для отображения перед каждым полем с плавающей запятой. В каждом поле есть место только для одной буквы.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.ObjectField(UnityEngine.Rect,UnityEngine.Object,System.Type)">
      <summary>
        <para>Создает поле объекта. Вы можете назначать объекты либо путем перетаскивания объектов, либо путем выбора объекта с помощью средства выбора объектов.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="obj">Объект, отображаемый в поле.</param>
      <param name="objType">Тип объектов, которые можно назначать.</param>
      <param name="allowSceneObjects">Разрешить назначение объектов сцены. См. Описание для получения дополнительной информации.</param>
      <returns>
        <para>Объект, заданный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.ObjectField(UnityEngine.Rect,System.String,UnityEngine.Object,System.Type)">
      <summary>
        <para>Создает поле объекта. Вы можете назначать объекты либо путем перетаскивания объектов, либо путем выбора объекта с помощью средства выбора объектов.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="obj">Объект, отображаемый в поле.</param>
      <param name="objType">Тип объектов, которые можно назначать.</param>
      <param name="allowSceneObjects">Разрешить назначение объектов сцены. См. Описание для получения дополнительной информации.</param>
      <returns>
        <para>Объект, заданный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.ObjectField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Object,System.Type)">
      <summary>
        <para>Создает поле объекта. Вы можете назначать объекты либо путем перетаскивания объектов, либо путем выбора объекта с помощью средства выбора объектов.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="obj">Объект, отображаемый в поле.</param>
      <param name="objType">Тип объектов, которые можно назначать.</param>
      <param name="allowSceneObjects">Разрешить назначение объектов сцены. См. Описание для получения дополнительной информации.</param>
      <returns>
        <para>Объект, заданный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.ObjectField(UnityEngine.Rect,UnityEngine.Object,System.Type,System.Boolean)">
      <summary>
        <para>Создает поле объекта. Вы можете назначать объекты либо путем перетаскивания объектов, либо путем выбора объекта с помощью средства выбора объектов.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="obj">Объект, отображаемый в поле.</param>
      <param name="objType">Тип объектов, которые можно назначать.</param>
      <param name="allowSceneObjects">Разрешить назначение объектов сцены. См. Описание для получения дополнительной информации.</param>
      <returns>
        <para>Объект, заданный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.ObjectField(UnityEngine.Rect,System.String,UnityEngine.Object,System.Type,System.Boolean)">
      <summary>
        <para>Создает поле объекта. Вы можете назначать объекты либо путем перетаскивания объектов, либо путем выбора объекта с помощью средства выбора объектов.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="obj">Объект, отображаемый в поле.</param>
      <param name="objType">Тип объектов, которые можно назначать.</param>
      <param name="allowSceneObjects">Разрешить назначение объектов сцены. См. Описание для получения дополнительной информации.</param>
      <returns>
        <para>Объект, заданный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.ObjectField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Object,System.Type,System.Boolean)">
      <summary>
        <para>Создает поле объекта. Вы можете назначать объекты либо путем перетаскивания объектов, либо путем выбора объекта с помощью средства выбора объектов.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="obj">Объект, отображаемый в поле.</param>
      <param name="objType">Тип объектов, которые можно назначать.</param>
      <param name="allowSceneObjects">Разрешить назначение объектов сцены. См. Описание для получения дополнительной информации.</param>
      <returns>
        <para>Объект, заданный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.ObjectField(UnityEngine.Rect,UnityEditor.SerializedProperty)">
      <summary>
        <para>Создает поле объекта. Вы можете назначать объекты либо путем перетаскивания объектов, либо путем выбора объекта с помощью средства выбора объектов.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="property">Свойство ссылки на объект, отображаемое в поле.</param>
      <param name="objType">Тип объектов, которые можно назначать.</param>
      <param name="label">Необязательная метка для отображения перед полем. Передайте GUIContent.none, чтобы скрыть метку.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.ObjectField(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent)">
      <summary>
        <para>Создает поле объекта. Вы можете назначать объекты либо путем перетаскивания объектов, либо путем выбора объекта с помощью средства выбора объектов.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="property">Свойство ссылки на объект, отображаемое в поле.</param>
      <param name="objType">Тип объектов, которые можно назначать.</param>
      <param name="label">Необязательная метка для отображения перед полем. Передайте GUIContent.none, чтобы скрыть метку.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.ObjectField(UnityEngine.Rect,UnityEditor.SerializedProperty,System.Type)">
      <summary>
        <para>Создает поле объекта. Вы можете назначать объекты либо путем перетаскивания объектов, либо путем выбора объекта с помощью средства выбора объектов.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="property">Свойство ссылки на объект, отображаемое в поле.</param>
      <param name="objType">Тип объектов, которые можно назначать.</param>
      <param name="label">Необязательная метка для отображения перед полем. Передайте GUIContent.none, чтобы скрыть метку.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.ObjectField(UnityEngine.Rect,UnityEditor.SerializedProperty,System.Type,UnityEngine.GUIContent)">
      <summary>
        <para>Создает поле объекта. Вы можете назначать объекты либо путем перетаскивания объектов, либо путем выбора объекта с помощью средства выбора объектов.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="property">Свойство ссылки на объект, отображаемое в поле.</param>
      <param name="objType">Тип объектов, которые можно назначать.</param>
      <param name="label">Необязательная метка для отображения перед полем. Передайте GUIContent.none, чтобы скрыть метку.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.PasswordField(UnityEngine.Rect,System.String)">
      <summary>
        <para>Создает текстовое поле, в которое пользователь может ввести пароль.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля пароля.</param>
      <param name="label">Необязательный ярлык для отображения перед полем пароля.</param>
      <param name="password">Пароль для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Пароль, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.PasswordField(UnityEngine.Rect,System.String,System.String)">
      <summary>
        <para>Создает текстовое поле, в которое пользователь может ввести пароль.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля пароля.</param>
      <param name="label">Необязательный ярлык для отображения перед полем пароля.</param>
      <param name="password">Пароль для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Пароль, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.PasswordField(UnityEngine.Rect,UnityEngine.GUIContent,System.String)">
      <summary>
        <para>Создает текстовое поле, в которое пользователь может ввести пароль.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля пароля.</param>
      <param name="label">Необязательный ярлык для отображения перед полем пароля.</param>
      <param name="password">Пароль для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Пароль, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.PasswordField(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает текстовое поле, в которое пользователь может ввести пароль.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля пароля.</param>
      <param name="label">Необязательный ярлык для отображения перед полем пароля.</param>
      <param name="password">Пароль для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Пароль, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.PasswordField(UnityEngine.Rect,System.String,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает текстовое поле, в которое пользователь может ввести пароль.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля пароля.</param>
      <param name="label">Необязательный ярлык для отображения перед полем пароля.</param>
      <param name="password">Пароль для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Пароль, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.PasswordField(UnityEngine.Rect,UnityEngine.GUIContent,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает текстовое поле, в которое пользователь может ввести пароль.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля пароля.</param>
      <param name="label">Необязательный ярлык для отображения перед полем пароля.</param>
      <param name="password">Пароль для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Пароль, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Popup(UnityEngine.Rect,System.Int32,System.String[])">
      <summary>
        <para>Создает общее всплывающее поле выбора.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedIndex">Индекс опции, которую показывает поле.</param>
      <param name="displayedOptions">Массив с параметрами, показанными во всплывающем окне.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Индекс опции, выбранной пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Popup(UnityEngine.Rect,System.Int32,UnityEngine.GUIContent[])">
      <summary>
        <para>Создает общее всплывающее поле выбора.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedIndex">Индекс опции, которую показывает поле.</param>
      <param name="displayedOptions">Массив с параметрами, показанными во всплывающем окне.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Индекс опции, выбранной пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Popup(UnityEngine.Rect,System.String,System.Int32,System.String[])">
      <summary>
        <para>Создает общее всплывающее поле выбора.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedIndex">Индекс опции, которую показывает поле.</param>
      <param name="displayedOptions">Массив с параметрами, показанными во всплывающем окне.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Индекс опции, выбранной пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Popup(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,UnityEngine.GUIContent[])">
      <summary>
        <para>Создает общее всплывающее поле выбора.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedIndex">Индекс опции, которую показывает поле.</param>
      <param name="displayedOptions">Массив с параметрами, показанными во всплывающем окне.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Индекс опции, выбранной пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Popup(UnityEngine.Rect,System.Int32,System.String[],UnityEngine.GUIStyle)">
      <summary>
        <para>Создает общее всплывающее поле выбора.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedIndex">Индекс опции, которую показывает поле.</param>
      <param name="displayedOptions">Массив с параметрами, показанными во всплывающем окне.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Индекс опции, выбранной пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Popup(UnityEngine.Rect,System.Int32,UnityEngine.GUIContent[],UnityEngine.GUIStyle)">
      <summary>
        <para>Создает общее всплывающее поле выбора.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedIndex">Индекс опции, которую показывает поле.</param>
      <param name="displayedOptions">Массив с параметрами, показанными во всплывающем окне.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Индекс опции, выбранной пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Popup(UnityEngine.Rect,System.String,System.Int32,System.String[],UnityEngine.GUIStyle)">
      <summary>
        <para>Создает общее всплывающее поле выбора.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedIndex">Индекс опции, которую показывает поле.</param>
      <param name="displayedOptions">Массив с параметрами, показанными во всплывающем окне.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Индекс опции, выбранной пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Popup(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,UnityEngine.GUIContent[],UnityEngine.GUIStyle)">
      <summary>
        <para>Создает общее всплывающее поле выбора.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedIndex">Индекс опции, которую показывает поле.</param>
      <param name="displayedOptions">Массив с параметрами, показанными во всплывающем окне.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Индекс опции, выбранной пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.PrefixLabel(UnityEngine.Rect,UnityEngine.GUIContent)">
      <summary>
        <para>Делает метку перед некоторым элементом управления.</para>
      </summary>
      <param name="totalPosition">Прямоугольник на экране, который будет использоваться как для метки, так и для элемента управления.</param>
      <param name="id">Уникальный идентификатор элемента управления. Если ничего не указано, используется идентификатор следующего элемента управления.</param>
      <param name="label">Метка для отображения перед элементом управления.</param>
      <param name="style">Стиль для метки.</param>
      <returns>
        <para>Прямоугольник на экране использовать только для самого элемента управления.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.PrefixLabel(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Делает метку перед некоторым элементом управления.</para>
      </summary>
      <param name="totalPosition">Прямоугольник на экране, который будет использоваться как для метки, так и для элемента управления.</param>
      <param name="id">Уникальный идентификатор элемента управления. Если ничего не указано, используется идентификатор следующего элемента управления.</param>
      <param name="label">Метка для отображения перед элементом управления.</param>
      <param name="style">Стиль для метки.</param>
      <returns>
        <para>Прямоугольник на экране использовать только для самого элемента управления.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.PrefixLabel(UnityEngine.Rect,System.Int32,UnityEngine.GUIContent)">
      <summary>
        <para>Делает метку перед некоторым элементом управления.</para>
      </summary>
      <param name="totalPosition">Прямоугольник на экране, который будет использоваться как для метки, так и для элемента управления.</param>
      <param name="id">Уникальный идентификатор элемента управления. Если ничего не указано, используется идентификатор следующего элемента управления.</param>
      <param name="label">Метка для отображения перед элементом управления.</param>
      <param name="style">Стиль для метки.</param>
      <returns>
        <para>Прямоугольник на экране использовать только для самого элемента управления.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.PrefixLabel(UnityEngine.Rect,System.Int32,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Делает метку перед некоторым элементом управления.</para>
      </summary>
      <param name="totalPosition">Прямоугольник на экране, который будет использоваться как для метки, так и для элемента управления.</param>
      <param name="id">Уникальный идентификатор элемента управления. Если ничего не указано, используется идентификатор следующего элемента управления.</param>
      <param name="label">Метка для отображения перед элементом управления.</param>
      <param name="style">Стиль для метки.</param>
      <returns>
        <para>Прямоугольник на экране использовать только для самого элемента управления.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.ProgressBar(UnityEngine.Rect,System.Single,System.String)">
      <summary>
        <para>Создает индикатор выполнения.</para>
      </summary>
      <param name="totalPosition">Прямоугольник на экране использовать в сумме для обоих элементов управления.</param>
      <param name="value">Отображаемое значение.</param>
      <param name="position">
      </param>
      <param name="text">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUI.PropertyField(UnityEngine.Rect,UnityEditor.SerializedProperty,System.Boolean)">
      <summary>
        <para>Используйте это, чтобы создать поле для SerializedProperty в редакторе.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля свойства.</param>
      <param name="property">SerializedProperty, для которого создается поле.</param>
      <param name="label">Необязательный ярлык для использования. Если не указано, используется метка самого свойства. Используйте GUIContent.none, чтобы вообще не отображать метку.</param>
      <param name="includeChildren">Если true, свойство, включая дочерние элементы, рисуется; в противном случае только сам элемент управления (например, только раскладку, но ничего под ней).</param>
      <returns>
        <para>Значение true, если свойство имеет дочерние элементы и развернуто, а для параметра includeChildren установлено значение false; в противном случае ложь.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.PropertyField(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent,System.Boolean)">
      <summary>
        <para>Используйте это, чтобы создать поле для SerializedProperty в редакторе.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля свойства.</param>
      <param name="property">SerializedProperty, для которого создается поле.</param>
      <param name="label">Необязательный ярлык для использования. Если не указано, используется метка самого свойства. Используйте GUIContent.none, чтобы вообще не отображать метку.</param>
      <param name="includeChildren">Если true, свойство, включая дочерние элементы, рисуется; в противном случае только сам элемент управления (например, только раскладку, но ничего под ней).</param>
      <returns>
        <para>Значение true, если свойство имеет дочерние элементы и развернуто, а для параметра includeChildren установлено значение false; в противном случае ложь.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.EditorGUI.PropertyScope">
      <summary>
        <para>Создайте оболочку Property, удобную для того, чтобы обычные элементы управления GUI работали с SerializedProperty.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUI.PropertyScope.content">
      <summary>
        <para>Фактическая метка, используемая для элемента управления.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUI.PropertyScope.#ctor(UnityEngine.Rect,UnityEngine.GUIContent,UnityEditor.SerializedProperty)">
      <summary>
        <para>Создайте новый PropertyScope и начните соответствующее свойство.</para>
      </summary>
      <param name="totalPosition">Прямоугольник на экране для использования в качестве элемента управления, включая метку, если применимо.</param>
      <param name="label">Метка перед ползунком. Используйте null, чтобы использовать имя из SerializedProperty. Используйте GUIContent.none, чтобы не отображать метку.</param>
      <param name="property">SerializedProperty для использования с элементом управления.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.RectField(UnityEngine.Rect,UnityEngine.Rect)">
      <summary>
        <para>Создает поля X, Y, W и H для ввода Rect.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательный ярлык для отображения над полем.</param>
      <param name="value">Значение для редактирования.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.RectField(UnityEngine.Rect,System.String,UnityEngine.Rect)">
      <summary>
        <para>Создает поля X, Y, W и H для ввода Rect.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательный ярлык для отображения над полем.</param>
      <param name="value">Значение для редактирования.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.RectField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Rect)">
      <summary>
        <para>Создает поля X, Y, W и H для ввода Rect.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательный ярлык для отображения над полем.</param>
      <param name="value">Значение для редактирования.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.RectField">
      <summary>
        <para>Создает X, Y, W и H для Rect, используя SerializedProperty (не общедоступный).</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUI.RectIntField(UnityEngine.Rect,UnityEngine.RectInt)">
      <summary>
        <para>Создает поля X, Y, W и H для ввода RectInt.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательный ярлык для отображения над полем.</param>
      <param name="value">Значение для редактирования.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.RectIntField(UnityEngine.Rect,System.String,UnityEngine.RectInt)">
      <summary>
        <para>Создает поля X, Y, W и H для ввода RectInt.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательный ярлык для отображения над полем.</param>
      <param name="value">Значение для редактирования.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.RectIntField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.RectInt)">
      <summary>
        <para>Создает поля X, Y, W и H для ввода RectInt.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательный ярлык для отображения над полем.</param>
      <param name="value">Значение для редактирования.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.SelectableLabel(UnityEngine.Rect,System.String)">
      <summary>
        <para>Делает выбираемое поле метки. (Полезно для отображения информации только для чтения, которую можно скопировать и вставить.)</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве метки.</param>
      <param name="text">Текст для отображения.</param>
      <param name="style">Необязательный стиль GUISty.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.SelectableLabel(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Делает выбираемое поле метки. (Полезно для отображения информации только для чтения, которую можно скопировать и вставить.)</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве метки.</param>
      <param name="text">Текст для отображения.</param>
      <param name="style">Необязательный стиль GUISty.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.Slider(UnityEngine.Rect,System.Single,System.Single,System.Single)">
      <summary>
        <para>Создает ползунок, который пользователь может перетаскивать для изменения значения между минимальным и максимальным значением.</para>
      </summary>
      <param name="position">Прямоугольник на экране для ползунка.</param>
      <param name="label">Необязательная метка перед ползунком.</param>
      <param name="value">Значение, которое показывает ползунок. Это определяет положение перетаскиваемого бегунка.</param>
      <param name="leftValue">Значение на левом конце ползунка.</param>
      <param name="rightValue">Значение справа от ползунка.</param>
      <returns>
        <para>Значение, установленное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Slider(UnityEngine.Rect,System.String,System.Single,System.Single,System.Single)">
      <summary>
        <para>Создает ползунок, который пользователь может перетаскивать для изменения значения между минимальным и максимальным значением.</para>
      </summary>
      <param name="position">Прямоугольник на экране для ползунка.</param>
      <param name="label">Необязательная метка перед ползунком.</param>
      <param name="value">Значение, которое показывает ползунок. Это определяет положение перетаскиваемого бегунка.</param>
      <param name="leftValue">Значение на левом конце ползунка.</param>
      <param name="rightValue">Значение справа от ползунка.</param>
      <returns>
        <para>Значение, установленное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Slider(UnityEngine.Rect,UnityEngine.GUIContent,System.Single,System.Single,System.Single)">
      <summary>
        <para>Создает ползунок, который пользователь может перетаскивать для изменения значения между минимальным и максимальным значением.</para>
      </summary>
      <param name="position">Прямоугольник на экране для ползунка.</param>
      <param name="label">Необязательная метка перед ползунком.</param>
      <param name="value">Значение, которое показывает ползунок. Это определяет положение перетаскиваемого бегунка.</param>
      <param name="leftValue">Значение на левом конце ползунка.</param>
      <param name="rightValue">Значение справа от ползунка.</param>
      <returns>
        <para>Значение, установленное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Slider(UnityEngine.Rect,UnityEditor.SerializedProperty,System.Single,System.Single)">
      <summary>
        <para>Создает ползунок, который пользователь может перетаскивать для изменения значения между минимальным и максимальным значением.</para>
      </summary>
      <param name="position">Прямоугольник на экране для ползунка.</param>
      <param name="label">Необязательная метка перед ползунком.</param>
      <param name="property">Значение, которое показывает ползунок. Это определяет положение перетаскиваемого бегунка.</param>
      <param name="leftValue">Значение на левом конце ползунка.</param>
      <param name="rightValue">Значение справа от ползунка.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.Slider(UnityEngine.Rect,UnityEditor.SerializedProperty,System.Single,System.Single,System.String)">
      <summary>
        <para>Создает ползунок, который пользователь может перетаскивать для изменения значения между минимальным и максимальным значением.</para>
      </summary>
      <param name="position">Прямоугольник на экране для ползунка.</param>
      <param name="label">Необязательная метка перед ползунком.</param>
      <param name="property">Значение, которое показывает ползунок. Это определяет положение перетаскиваемого бегунка.</param>
      <param name="leftValue">Значение на левом конце ползунка.</param>
      <param name="rightValue">Значение справа от ползунка.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.Slider(UnityEngine.Rect,UnityEditor.SerializedProperty,System.Single,System.Single,UnityEngine.GUIContent)">
      <summary>
        <para>Создает ползунок, который пользователь может перетаскивать для изменения значения между минимальным и максимальным значением.</para>
      </summary>
      <param name="position">Прямоугольник на экране для ползунка.</param>
      <param name="label">Необязательная метка перед ползунком.</param>
      <param name="property">Значение, которое показывает ползунок. Это определяет положение перетаскиваемого бегунка.</param>
      <param name="leftValue">Значение на левом конце ползунка.</param>
      <param name="rightValue">Значение справа от ползунка.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.TagField(UnityEngine.Rect,System.String)">
      <summary>
        <para>Создает поле выбора тега.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="tag">Тег, отображаемый в поле.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Тег, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.TagField(UnityEngine.Rect,System.String,System.String)">
      <summary>
        <para>Создает поле выбора тега.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="tag">Тег, отображаемый в поле.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Тег, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.TagField(UnityEngine.Rect,UnityEngine.GUIContent,System.String)">
      <summary>
        <para>Создает поле выбора тега.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="tag">Тег, отображаемый в поле.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Тег, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.TagField(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает поле выбора тега.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="tag">Тег, отображаемый в поле.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Тег, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.TagField(UnityEngine.Rect,System.String,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает поле выбора тега.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="tag">Тег, отображаемый в поле.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Тег, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.TagField(UnityEngine.Rect,UnityEngine.GUIContent,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает поле выбора тега.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="tag">Тег, отображаемый в поле.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Тег, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.TextArea(UnityEngine.Rect,System.String)">
      <summary>
        <para>Создает текстовую область.</para>
      </summary>
      <param name="position">Прямоугольник на экране для текстового поля.</param>
      <param name="text">Текст для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Текст, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.TextArea(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает текстовую область.</para>
      </summary>
      <param name="position">Прямоугольник на экране для текстового поля.</param>
      <param name="text">Текст для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Текст, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.TextField(UnityEngine.Rect,System.String)">
      <summary>
        <para>Создает текстовое поле.</para>
      </summary>
      <param name="position">Прямоугольник на экране для текстового поля.</param>
      <param name="label">Необязательная метка для отображения перед текстовым полем.</param>
      <param name="text">Текст для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Текст, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.TextField(UnityEngine.Rect,System.String,System.String)">
      <summary>
        <para>Создает текстовое поле.</para>
      </summary>
      <param name="position">Прямоугольник на экране для текстового поля.</param>
      <param name="label">Необязательная метка для отображения перед текстовым полем.</param>
      <param name="text">Текст для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Текст, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.TextField(UnityEngine.Rect,UnityEngine.GUIContent,System.String)">
      <summary>
        <para>Создает текстовое поле.</para>
      </summary>
      <param name="position">Прямоугольник на экране для текстового поля.</param>
      <param name="label">Необязательная метка для отображения перед текстовым полем.</param>
      <param name="text">Текст для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Текст, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.TextField(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает текстовое поле.</para>
      </summary>
      <param name="position">Прямоугольник на экране для текстового поля.</param>
      <param name="label">Необязательная метка для отображения перед текстовым полем.</param>
      <param name="text">Текст для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Текст, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.TextField(UnityEngine.Rect,System.String,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает текстовое поле.</para>
      </summary>
      <param name="position">Прямоугольник на экране для текстового поля.</param>
      <param name="label">Необязательная метка для отображения перед текстовым полем.</param>
      <param name="text">Текст для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Текст, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.TextField(UnityEngine.Rect,UnityEngine.GUIContent,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает текстовое поле.</para>
      </summary>
      <param name="position">Прямоугольник на экране для текстового поля.</param>
      <param name="label">Необязательная метка для отображения перед текстовым полем.</param>
      <param name="text">Текст для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Текст, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Toggle(UnityEngine.Rect,System.Boolean)">
      <summary>
        <para>Делает переключатель.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве переключателя.</param>
      <param name="label">Необязательная метка перед переключателем.</param>
      <param name="value">Отображаемое состояние переключателя.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Выбранное состояние переключателя.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Toggle(UnityEngine.Rect,System.String,System.Boolean)">
      <summary>
        <para>Делает переключатель.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве переключателя.</param>
      <param name="label">Необязательная метка перед переключателем.</param>
      <param name="value">Отображаемое состояние переключателя.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Выбранное состояние переключателя.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Toggle(UnityEngine.Rect,System.Boolean,UnityEngine.GUIStyle)">
      <summary>
        <para>Делает переключатель.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве переключателя.</param>
      <param name="label">Необязательная метка перед переключателем.</param>
      <param name="value">Отображаемое состояние переключателя.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Выбранное состояние переключателя.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Toggle(UnityEngine.Rect,System.String,System.Boolean,UnityEngine.GUIStyle)">
      <summary>
        <para>Делает переключатель.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве переключателя.</param>
      <param name="label">Необязательная метка перед переключателем.</param>
      <param name="value">Отображаемое состояние переключателя.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Выбранное состояние переключателя.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Toggle(UnityEngine.Rect,UnityEngine.GUIContent,System.Boolean)">
      <summary>
        <para>Делает переключатель.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве переключателя.</param>
      <param name="label">Необязательная метка перед переключателем.</param>
      <param name="value">Отображаемое состояние переключателя.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Выбранное состояние переключателя.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Toggle(UnityEngine.Rect,UnityEngine.GUIContent,System.Boolean,UnityEngine.GUIStyle)">
      <summary>
        <para>Делает переключатель.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве переключателя.</param>
      <param name="label">Необязательная метка перед переключателем.</param>
      <param name="value">Отображаемое состояние переключателя.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <returns>
        <para>Выбранное состояние переключателя.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.ToggleLeft(UnityEngine.Rect,System.String,System.Boolean)">
      <summary>
        <para>Создает поле переключателя, где переключатель находится слева, а метка сразу справа от него.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве переключателя.</param>
      <param name="label">Метка для отображения рядом с переключателем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="labelStyle">Необязательный GUIStyle для использования в метке.</param>
      <returns>
        <para>Значение, установленное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.ToggleLeft(UnityEngine.Rect,System.String,System.Boolean,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает поле переключателя, где переключатель находится слева, а метка сразу справа от него.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве переключателя.</param>
      <param name="label">Метка для отображения рядом с переключателем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="labelStyle">Необязательный GUIStyle для использования в метке.</param>
      <returns>
        <para>Значение, установленное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.ToggleLeft(UnityEngine.Rect,UnityEngine.GUIContent,System.Boolean)">
      <summary>
        <para>Создает поле переключателя, где переключатель находится слева, а метка сразу справа от него.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве переключателя.</param>
      <param name="label">Метка для отображения рядом с переключателем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="labelStyle">Необязательный GUIStyle для использования в метке.</param>
      <returns>
        <para>Значение, установленное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.ToggleLeft(UnityEngine.Rect,UnityEngine.GUIContent,System.Boolean,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает поле переключателя, где переключатель находится слева, а метка сразу справа от него.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве переключателя.</param>
      <param name="label">Метка для отображения рядом с переключателем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="labelStyle">Необязательный GUIStyle для использования в метке.</param>
      <returns>
        <para>Значение, установленное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Vector2Field(UnityEngine.Rect,System.String,UnityEngine.Vector2)">
      <summary>
        <para>Создает поля X и Y для ввода Vector2.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение для редактирования.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Vector2Field(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Vector2)">
      <summary>
        <para>Создает поля X и Y для ввода Vector2.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение для редактирования.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Vector2IntField(UnityEngine.Rect,System.String,UnityEngine.Vector2Int)">
      <summary>
        <para>Создает целочисленное поле X и Y для ввода Vector2Int.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение для редактирования.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Vector2IntField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Vector2Int)">
      <summary>
        <para>Создает целочисленное поле X и Y для ввода Vector2Int.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение для редактирования.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Vector3Field(UnityEngine.Rect,System.String,UnityEngine.Vector3)">
      <summary>
        <para>Создает поля X, Y и Z для ввода Vector3.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение для редактирования.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Vector3Field(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Vector3)">
      <summary>
        <para>Создает поля X, Y и Z для ввода Vector3.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение для редактирования.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Vector3IntField(UnityEngine.Rect,System.String,UnityEngine.Vector3Int)">
      <summary>
        <para>Создает целочисленное поле X, Y и Z для ввода Vector3Int.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение для редактирования.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Vector3IntField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Vector3Int)">
      <summary>
        <para>Создает целочисленное поле X, Y и Z для ввода Vector3Int.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение для редактирования.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Vector4Field(UnityEngine.Rect,System.String,UnityEngine.Vector4)">
      <summary>
        <para>Создает поля X, Y, Z и W для ввода Vector4.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве поля.</param>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение для редактирования.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.EditorGUILayout">
      <summary>
        <para>Автоматическая версия EditorGUI.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BeginBuildTargetSelectionGrouping">
      <summary>
        <para>Начать группировку целей сборки и вернуть выбранную BuildTargetGroup.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BeginFadeGroup(System.Single)">
      <summary>
        <para>Начинает группу, которую можно скрыть/показать, а переход будет анимирован.</para>
      </summary>
      <param name="value">Значение от 0 до 1, где 0 скрыто, а 1 полностью видно.</param>
      <returns>
        <para>Видна группа или нет.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BeginFoldoutHeaderGroup(System.Boolean,System.String,UnityEngine.GUIStyle,System.Action`1&lt;UnityEngine.Rect&gt;,UnityEngine.GUIStyle)">
      <summary>
        <para>Сделайте метку со стрелкой слева от нее.</para>
      </summary>
      <param name="foldout">Показанное развернутое состояние.</param>
      <param name="content">Ярлык для отображения.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="menuAction">Действие, которое происходит, когда вы щелкаете значок.</param>
      <param name="menuIcon">Необязательный GUIStyle для значка.</param>
      <returns>
        <para>Состояние раскрытия, выбранное пользователем. Если true, вы должны визуализировать подобъекты.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BeginFoldoutHeaderGroup(System.Boolean,UnityEngine.GUIContent,UnityEngine.GUIStyle,System.Action`1&lt;UnityEngine.Rect&gt;,UnityEngine.GUIStyle)">
      <summary>
        <para>Сделайте метку со стрелкой слева от нее.</para>
      </summary>
      <param name="foldout">Показанное развернутое состояние.</param>
      <param name="content">Ярлык для отображения.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="menuAction">Действие, которое происходит, когда вы щелкаете значок.</param>
      <param name="menuIcon">Необязательный GUIStyle для значка.</param>
      <returns>
        <para>Состояние раскрытия, выбранное пользователем. Если true, вы должны визуализировать подобъекты.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BeginHorizontal(UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Начните горизонтальную группу и верните ее прямоугольник.</para>
      </summary>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительный макет
характеристики. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BeginHorizontal(UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Начните горизонтальную группу и верните ее прямоугольник.</para>
      </summary>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительный макет
характеристики. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BeginScrollView(UnityEngine.Vector2,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Начните автоматически отображать прокрутку.</para>
      </summary>
      <param name="scrollPosition">Позиция для отображения.</param>
      <param name="alwayShowHorizontal">Необязательный параметр, чтобы всегда отображать горизонтальную полосу прокрутки. Если значение false или опущено, оно отображается только тогда, когда содержимое внутри ScrollView шире, чем сам вид прокрутки.</param>
      <param name="alwayShowVertical">Необязательный параметр, чтобы всегда отображать вертикальную полосу прокрутки. Если значение равно false или опущено, оно отображается только в том случае, если содержимое внутри ScrollView выше, чем сам вид прокрутки.</param>
      <param name="horizontalScrollbar">Необязательный GUIStyle для горизонтальной полосы прокрутки. Если его не указать, используется стиль HorizontalScrollbar из текущего GUISkin.</param>
      <param name="verticalScrollbar">Необязательный GUIStyle для вертикальной полосы прокрутки. Если его не указать, используется стиль verticalScrollbar из текущей оболочки GUISkin.</param>
      <param name="options">
      </param>
      <param name="alwaysShowHorizontal">
      </param>
      <param name="alwaysShowVertical">
      </param>
      <param name="background">
      </param>
      <returns>
        <para>Модифицированный scrollPosition. Передайте это обратно в переменную, которую вы передаете, как показано в примере.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BeginScrollView(UnityEngine.Vector2,System.Boolean,System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Начните автоматически отображать прокрутку.</para>
      </summary>
      <param name="scrollPosition">Позиция для отображения.</param>
      <param name="alwayShowHorizontal">Необязательный параметр, чтобы всегда отображать горизонтальную полосу прокрутки. Если значение false или опущено, оно отображается только тогда, когда содержимое внутри ScrollView шире, чем сам вид прокрутки.</param>
      <param name="alwayShowVertical">Необязательный параметр, чтобы всегда отображать вертикальную полосу прокрутки. Если значение равно false или опущено, оно отображается только в том случае, если содержимое внутри ScrollView выше, чем сам вид прокрутки.</param>
      <param name="horizontalScrollbar">Необязательный GUIStyle для горизонтальной полосы прокрутки. Если его не указать, используется стиль HorizontalScrollbar из текущего GUISkin.</param>
      <param name="verticalScrollbar">Необязательный GUIStyle для вертикальной полосы прокрутки. Если его не указать, используется стиль verticalScrollbar из текущей оболочки GUISkin.</param>
      <param name="options">
      </param>
      <param name="alwaysShowHorizontal">
      </param>
      <param name="alwaysShowVertical">
      </param>
      <param name="background">
      </param>
      <returns>
        <para>Модифицированный scrollPosition. Передайте это обратно в переменную, которую вы передаете, как показано в примере.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BeginScrollView(UnityEngine.Vector2,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Начните автоматически отображать прокрутку.</para>
      </summary>
      <param name="scrollPosition">Позиция для отображения.</param>
      <param name="alwayShowHorizontal">Необязательный параметр, чтобы всегда отображать горизонтальную полосу прокрутки. Если значение false или опущено, оно отображается только тогда, когда содержимое внутри ScrollView шире, чем сам вид прокрутки.</param>
      <param name="alwayShowVertical">Необязательный параметр, чтобы всегда отображать вертикальную полосу прокрутки. Если значение равно false или опущено, оно отображается только в том случае, если содержимое внутри ScrollView выше, чем сам вид прокрутки.</param>
      <param name="horizontalScrollbar">Необязательный GUIStyle для горизонтальной полосы прокрутки. Если его не указать, используется стиль HorizontalScrollbar из текущего GUISkin.</param>
      <param name="verticalScrollbar">Необязательный GUIStyle для вертикальной полосы прокрутки. Если его не указать, используется стиль verticalScrollbar из текущей оболочки GUISkin.</param>
      <param name="options">
      </param>
      <param name="alwaysShowHorizontal">
      </param>
      <param name="alwaysShowVertical">
      </param>
      <param name="background">
      </param>
      <returns>
        <para>Модифицированный scrollPosition. Передайте это обратно в переменную, которую вы передаете, как показано в примере.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BeginScrollView">
      <summary>
        <para>Начните автоматически отображать прокрутку.</para>
      </summary>
      <param name="scrollPosition">Позиция для отображения.</param>
      <param name="alwayShowHorizontal">Необязательный параметр, чтобы всегда отображать горизонтальную полосу прокрутки. Если значение false или опущено, оно отображается только тогда, когда содержимое внутри ScrollView шире, чем сам вид прокрутки.</param>
      <param name="alwayShowVertical">Необязательный параметр, чтобы всегда отображать вертикальную полосу прокрутки. Если значение равно false или опущено, оно отображается только в том случае, если содержимое внутри ScrollView выше, чем сам вид прокрутки.</param>
      <param name="horizontalScrollbar">Необязательный GUIStyle для горизонтальной полосы прокрутки. Если его не указать, используется стиль HorizontalScrollbar из текущего GUISkin.</param>
      <param name="verticalScrollbar">Необязательный GUIStyle для вертикальной полосы прокрутки. Если его не указать, используется стиль verticalScrollbar из текущей оболочки GUISkin.</param>
      <param name="options">
      </param>
      <param name="alwaysShowHorizontal">
      </param>
      <param name="alwaysShowVertical">
      </param>
      <param name="background">
      </param>
      <returns>
        <para>Модифицированный scrollPosition. Передайте это обратно в переменную, которую вы передаете, как показано в примере.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BeginScrollView(UnityEngine.Vector2,System.Boolean,System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Начните автоматически отображать прокрутку.</para>
      </summary>
      <param name="scrollPosition">Позиция для отображения.</param>
      <param name="alwayShowHorizontal">Необязательный параметр, чтобы всегда отображать горизонтальную полосу прокрутки. Если значение false или опущено, оно отображается только тогда, когда содержимое внутри ScrollView шире, чем сам вид прокрутки.</param>
      <param name="alwayShowVertical">Необязательный параметр, чтобы всегда отображать вертикальную полосу прокрутки. Если значение равно false или опущено, оно отображается только в том случае, если содержимое внутри ScrollView выше, чем сам вид прокрутки.</param>
      <param name="horizontalScrollbar">Необязательный GUIStyle для горизонтальной полосы прокрутки. Если его не указать, используется стиль HorizontalScrollbar из текущего GUISkin.</param>
      <param name="verticalScrollbar">Необязательный GUIStyle для вертикальной полосы прокрутки. Если его не указать, используется стиль verticalScrollbar из текущей оболочки GUISkin.</param>
      <param name="options">
      </param>
      <param name="alwaysShowHorizontal">
      </param>
      <param name="alwaysShowVertical">
      </param>
      <param name="background">
      </param>
      <returns>
        <para>Модифицированный scrollPosition. Передайте это обратно в переменную, которую вы передаете, как показано в примере.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BeginToggleGroup(System.String,System.Boolean)">
      <summary>
        <para>Начните вертикальную группу с переключателя, чтобы включить или отключить все элементы управления внутри одновременно.</para>
      </summary>
      <param name="label">Ярлык для отображения над переключаемыми элементами управления.</param>
      <param name="toggle">Включенное состояние группы переключателей.</param>
      <returns>
        <para>Включенное состояние, выбранное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BeginToggleGroup(UnityEngine.GUIContent,System.Boolean)">
      <summary>
        <para>Начните вертикальную группу с переключателя, чтобы включить или отключить все элементы управления внутри одновременно.</para>
      </summary>
      <param name="label">Ярлык для отображения над переключаемыми элементами управления.</param>
      <param name="toggle">Включенное состояние группы переключателей.</param>
      <returns>
        <para>Включенное состояние, выбранное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BeginVertical(UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Начать вертикальную группу и вернуть ее прямоугольник.</para>
      </summary>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета.
Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BeginVertical(UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Начать вертикальную группу и вернуть ее прямоугольник.</para>
      </summary>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета.
Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BeginVertical">
      <summary>
        <para>Начать вертикальную группу и вернуть ее прямоугольник.</para>
      </summary>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета.
Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BoundsField(UnityEngine.Bounds,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделать поле Center &amp; Extents для ввода границ.</para>
      </summary>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BoundsField(System.String,UnityEngine.Bounds,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделать поле Center &amp; Extents для ввода границ.</para>
      </summary>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BoundsField(UnityEngine.GUIContent,UnityEngine.Bounds,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделать поле Center &amp; Extents для ввода границ.</para>
      </summary>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BoundsIntField(UnityEngine.BoundsInt,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделать поле Position &amp; Size для ввода BoundsInt.</para>
      </summary>
      <param name="label">Сделайте поле «Позиция и размер» для ввода границ.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BoundsIntField(System.String,UnityEngine.BoundsInt,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделать поле Position &amp; Size для ввода BoundsInt.</para>
      </summary>
      <param name="label">Сделайте поле «Позиция и размер» для ввода границ.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BoundsIntField(UnityEngine.GUIContent,UnityEngine.BoundsInt,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделать поле Position &amp; Size для ввода BoundsInt.</para>
      </summary>
      <param name="label">Сделайте поле «Позиция и размер» для ввода границ.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ColorField(UnityEngine.Color,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для выбора цвета.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Цвет для редактирования.</param>
      <param name="showEyedropper">Если это правда, палитра цветов должна отображать элемент управления пипеткой. Если false, не показывать его.</param>
      <param name="showAlpha">Если true, разрешить пользователю устанавливать альфа-значение для цвета. Если false, скройте альфа-компонент.</param>
      <param name="hdr">Если это правда, обработайте цвет как значение HDR. Если false, рассматривать его как стандартное значение LDR.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="hdrConfig">
      </param>
      <returns>
        <para>Цвет, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ColorField(System.String,UnityEngine.Color,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для выбора цвета.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Цвет для редактирования.</param>
      <param name="showEyedropper">Если это правда, палитра цветов должна отображать элемент управления пипеткой. Если false, не показывать его.</param>
      <param name="showAlpha">Если true, разрешить пользователю устанавливать альфа-значение для цвета. Если false, скройте альфа-компонент.</param>
      <param name="hdr">Если это правда, обработайте цвет как значение HDR. Если false, рассматривать его как стандартное значение LDR.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="hdrConfig">
      </param>
      <returns>
        <para>Цвет, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ColorField(UnityEngine.GUIContent,UnityEngine.Color,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для выбора цвета.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Цвет для редактирования.</param>
      <param name="showEyedropper">Если это правда, палитра цветов должна отображать элемент управления пипеткой. Если false, не показывать его.</param>
      <param name="showAlpha">Если true, разрешить пользователю устанавливать альфа-значение для цвета. Если false, скройте альфа-компонент.</param>
      <param name="hdr">Если это правда, обработайте цвет как значение HDR. Если false, рассматривать его как стандартное значение LDR.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="hdrConfig">
      </param>
      <returns>
        <para>Цвет, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ColorField(UnityEngine.GUIContent,UnityEngine.Color,System.Boolean,System.Boolean,System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для выбора цвета.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Цвет для редактирования.</param>
      <param name="showEyedropper">Если это правда, палитра цветов должна отображать элемент управления пипеткой. Если false, не показывать его.</param>
      <param name="showAlpha">Если true, разрешить пользователю устанавливать альфа-значение для цвета. Если false, скройте альфа-компонент.</param>
      <param name="hdr">Если это правда, обработайте цвет как значение HDR. Если false, рассматривать его как стандартное значение LDR.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="hdrConfig">
      </param>
      <returns>
        <para>Цвет, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ColorField(UnityEngine.GUIContent,UnityEngine.Color,System.Boolean,System.Boolean,System.Boolean,UnityEditor.ColorPickerHDRConfig,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для выбора цвета.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Цвет для редактирования.</param>
      <param name="showEyedropper">Если это правда, палитра цветов должна отображать элемент управления пипеткой. Если false, не показывать его.</param>
      <param name="showAlpha">Если true, разрешить пользователю устанавливать альфа-значение для цвета. Если false, скройте альфа-компонент.</param>
      <param name="hdr">Если это правда, обработайте цвет как значение HDR. Если false, рассматривать его как стандартное значение LDR.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="hdrConfig">
      </param>
      <returns>
        <para>Цвет, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.CurveField(UnityEngine.AnimationCurve,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для редактирования AnimationCurve.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Кривая для редактирования.</param>
      <param name="color">Цвет для отображения кривой.</param>
      <param name="ranges">Необязательный прямоугольник, внутри которого ограничивается кривая.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Кривая, отредактированная пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.CurveField(System.String,UnityEngine.AnimationCurve,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для редактирования AnimationCurve.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Кривая для редактирования.</param>
      <param name="color">Цвет для отображения кривой.</param>
      <param name="ranges">Необязательный прямоугольник, внутри которого ограничивается кривая.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Кривая, отредактированная пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.CurveField(UnityEngine.GUIContent,UnityEngine.AnimationCurve,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для редактирования AnimationCurve.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Кривая для редактирования.</param>
      <param name="color">Цвет для отображения кривой.</param>
      <param name="ranges">Необязательный прямоугольник, внутри которого ограничивается кривая.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Кривая, отредактированная пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.CurveField(UnityEngine.AnimationCurve,UnityEngine.Color,UnityEngine.Rect,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для редактирования AnimationCurve.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Кривая для редактирования.</param>
      <param name="color">Цвет для отображения кривой.</param>
      <param name="ranges">Необязательный прямоугольник, внутри которого ограничивается кривая.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Кривая, отредактированная пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.CurveField(System.String,UnityEngine.AnimationCurve,UnityEngine.Color,UnityEngine.Rect,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для редактирования AnimationCurve.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Кривая для редактирования.</param>
      <param name="color">Цвет для отображения кривой.</param>
      <param name="ranges">Необязательный прямоугольник, внутри которого ограничивается кривая.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Кривая, отредактированная пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.CurveField(UnityEngine.GUIContent,UnityEngine.AnimationCurve,UnityEngine.Color,UnityEngine.Rect,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для редактирования AnimationCurve.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Кривая для редактирования.</param>
      <param name="color">Цвет для отображения кривой.</param>
      <param name="ranges">Необязательный прямоугольник, внутри которого ограничивается кривая.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Кривая, отредактированная пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.CurveField(UnityEditor.SerializedProperty,UnityEngine.Color,UnityEngine.Rect,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для редактирования AnimationCurve.</para>
      </summary>
      <param name="property">Кривая для редактирования.</param>
      <param name="color">Цвет для отображения кривой.</param>
      <param name="ranges">Необязательный прямоугольник, внутри которого ограничивается кривая.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="label">Необязательная метка для отображения перед полем. Передайте [[GUIContent.none], чтобы скрыть метку.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.CurveField(UnityEditor.SerializedProperty,UnityEngine.Color,UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для редактирования AnimationCurve.</para>
      </summary>
      <param name="property">Кривая для редактирования.</param>
      <param name="color">Цвет для отображения кривой.</param>
      <param name="ranges">Необязательный прямоугольник, внутри которого ограничивается кривая.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="label">Необязательная метка для отображения перед полем. Передайте [[GUIContent.none], чтобы скрыть метку.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedDoubleField(System.Double,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле для ввода двойных значений.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед двойным полем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">
Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.
</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет Enter или пока фокус не переместится с двойного поля.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedDoubleField(System.Double,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле для ввода двойных значений.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед двойным полем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">
Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.
</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет Enter или пока фокус не переместится с двойного поля.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedDoubleField(System.String,System.Double,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле для ввода двойных значений.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед двойным полем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">
Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.
</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет Enter или пока фокус не переместится с двойного поля.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedDoubleField(System.String,System.Double,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле для ввода двойных значений.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед двойным полем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">
Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.
</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет Enter или пока фокус не переместится с двойного поля.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedDoubleField(UnityEngine.GUIContent,System.Double,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле для ввода двойных значений.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед двойным полем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">
Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.
</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет Enter или пока фокус не переместится с двойного поля.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedDoubleField(UnityEngine.GUIContent,System.Double,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле для ввода двойных значений.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед двойным полем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">
Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.
</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет Enter или пока фокус не переместится с двойного поля.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedDoubleField">
      <summary>
        <para>Создайте отложенное текстовое поле для ввода двойных значений.</para>
      </summary>
      <param name="property">Свойство double для редактирования.</param>
      <param name="label">Необязательная метка для отображения перед двойным полем. Передайте GUIContent.none, чтобы скрыть метку.</param>
      <param name="options">
Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.
</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedDoubleField">
      <summary>
        <para>Создайте отложенное текстовое поле для ввода двойных значений.</para>
      </summary>
      <param name="property">Свойство double для редактирования.</param>
      <param name="label">Необязательная метка для отображения перед двойным полем. Передайте GUIContent.none, чтобы скрыть метку.</param>
      <param name="options">
Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.
</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedFloatField(System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле для ввода чисел с плавающей запятой.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем с плавающей запятой.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет Enter или пока фокус не переместится из поля с плавающей запятой.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedFloatField(System.Single,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле для ввода чисел с плавающей запятой.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем с плавающей запятой.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет Enter или пока фокус не переместится из поля с плавающей запятой.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedFloatField(System.String,System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле для ввода чисел с плавающей запятой.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем с плавающей запятой.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет Enter или пока фокус не переместится из поля с плавающей запятой.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedFloatField(System.String,System.Single,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле для ввода чисел с плавающей запятой.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем с плавающей запятой.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет Enter или пока фокус не переместится из поля с плавающей запятой.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedFloatField(UnityEngine.GUIContent,System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле для ввода чисел с плавающей запятой.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем с плавающей запятой.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет Enter или пока фокус не переместится из поля с плавающей запятой.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedFloatField(UnityEngine.GUIContent,System.Single,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле для ввода чисел с плавающей запятой.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем с плавающей запятой.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет Enter или пока фокус не переместится из поля с плавающей запятой.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedFloatField(UnityEditor.SerializedProperty,UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле для ввода чисел с плавающей запятой.</para>
      </summary>
      <param name="property">Свойство float для редактирования.</param>
      <param name="label">Необязательная метка для отображения перед полем с плавающей запятой. Передайте GUIContent.none, чтобы скрыть метку.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedFloatField(UnityEditor.SerializedProperty,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле для ввода чисел с плавающей запятой.</para>
      </summary>
      <param name="property">Свойство float для редактирования.</param>
      <param name="label">Необязательная метка для отображения перед полем с плавающей запятой. Передайте GUIContent.none, чтобы скрыть метку.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedIntField(System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле для ввода целых чисел.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет Enter или пока фокус не переместится с поля int.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedIntField(System.Int32,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле для ввода целых чисел.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет Enter или пока фокус не переместится с поля int.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedIntField(System.String,System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле для ввода целых чисел.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет Enter или пока фокус не переместится с поля int.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedIntField(System.String,System.Int32,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле для ввода целых чисел.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет Enter или пока фокус не переместится с поля int.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedIntField(UnityEngine.GUIContent,System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле для ввода целых чисел.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет Enter или пока фокус не переместится с поля int.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedIntField(UnityEngine.GUIContent,System.Int32,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле для ввода целых чисел.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет Enter или пока фокус не переместится с поля int.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedIntField(UnityEditor.SerializedProperty,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле для ввода целых чисел.</para>
      </summary>
      <param name="property">Свойство int для редактирования.</param>
      <param name="label">Необязательная метка для отображения перед полем int. Передайте GUIContent.none, чтобы скрыть метку.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedIntField(UnityEditor.SerializedProperty,UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле для ввода целых чисел.</para>
      </summary>
      <param name="property">Свойство int для редактирования.</param>
      <param name="label">Необязательная метка для отображения перед полем int. Передайте GUIContent.none, чтобы скрыть метку.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedTextField(System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="text">Текст для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет Enter или пока фокус не переместится с текстового поля.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedTextField(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="text">Текст для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет Enter или пока фокус не переместится с текстового поля.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedTextField(System.String,System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="text">Текст для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет Enter или пока фокус не переместится с текстового поля.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedTextField(System.String,System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="text">Текст для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет Enter или пока фокус не переместится с текстового поля.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedTextField(UnityEngine.GUIContent,System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="text">Текст для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет Enter или пока фокус не переместится с текстового поля.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedTextField(UnityEngine.GUIContent,System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="text">Текст для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет Enter или пока фокус не переместится с текстового поля.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedTextField(UnityEditor.SerializedProperty,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле.</para>
      </summary>
      <param name="property">Свойство текста для редактирования.</param>
      <param name="label">Необязательная метка для отображения перед полем int. Передайте GUIContent.none, чтобы скрыть метку.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedTextField(UnityEditor.SerializedProperty,UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле.</para>
      </summary>
      <param name="property">Свойство текста для редактирования.</param>
      <param name="label">Необязательная метка для отображения перед полем int. Передайте GUIContent.none, чтобы скрыть метку.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DoubleField(System.Double,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле для ввода двойных значений.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед двойным полем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DoubleField(System.Double,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле для ввода двойных значений.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед двойным полем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DoubleField(System.String,System.Double,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле для ввода двойных значений.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед двойным полем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DoubleField(System.String,System.Double,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле для ввода двойных значений.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед двойным полем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DoubleField(UnityEngine.GUIContent,System.Double,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле для ввода двойных значений.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед двойным полем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DoubleField(UnityEngine.GUIContent,System.Double,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле для ввода двойных значений.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед двойным полем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DropdownButton(UnityEngine.GUIContent,UnityEngine.FocusType,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте кнопку, реагирующую на нажатие мыши, для отображения собственного выпадающего содержимого.</para>
      </summary>
      <param name="content">Текст, изображение и подсказка для этой кнопки.</param>
      <param name="focusType">Должна ли кнопка выбираться с клавиатуры или нет.</param>
      <param name="style">Необязательный стиль для использования.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>true, когда пользователь нажимает кнопку.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DropdownButton(UnityEngine.GUIContent,UnityEngine.FocusType,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте кнопку, реагирующую на нажатие мыши, для отображения собственного выпадающего содержимого.</para>
      </summary>
      <param name="content">Текст, изображение и подсказка для этой кнопки.</param>
      <param name="focusType">Должна ли кнопка выбираться с клавиатуры или нет.</param>
      <param name="style">Необязательный стиль для использования.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>true, когда пользователь нажимает кнопку.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EditorToolbar(UnityEditor.EditorTools.EditorTool[])">
      <summary>
        <para>Создает панель инструментов, заполненную указанным набором инструментов редактора.</para>
      </summary>
      <param name="tools">Набор инструментов редактора для панели инструментов.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EditorToolbar(System.Collections.Generic.IList`1&lt;T&gt;)">
      <summary>
        <para>Создает панель инструментов, заполненную указанным набором инструментов редактора.</para>
      </summary>
      <param name="tools">Набор инструментов редактора для панели инструментов.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EditorToolbarForTarget(UnityEngine.Object)">
      <summary>
        <para>Создает панель инструментов, заполненную набором инструментов редактора, соответствующих атрибуту EditorToolAttribute целевого объекта.</para>
      </summary>
      <param name="target">Целевой объект.</param>
      <param name="content">Необязательная метка префикса.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EditorToolbarForTarget(UnityEngine.GUIContent,UnityEngine.Object)">
      <summary>
        <para>Создает панель инструментов, заполненную набором инструментов редактора, соответствующих атрибуту EditorToolAttribute целевого объекта.</para>
      </summary>
      <param name="target">Целевой объект.</param>
      <param name="content">Необязательная метка префикса.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EndBuildTargetSelectionGrouping">
      <summary>
        <para>Закрыть группу, начатую с помощью BeginBuildTargetSelectionGrouping.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EndFadeGroup">
      <summary>
        <para>Закрывает группу, начатую с помощью BeginFadeGroup.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EndFoldoutHeaderGroup">
      <summary>
        <para>Закрывает группу, начатую с помощью BeginFoldoutHeaderGroup.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EndHorizontal">
      <summary>
        <para>Закрыть группу, начатую с помощью BeginHorizontal.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EndScrollView">
      <summary>
        <para>Завершает прокрутку, начатую вызовом BeginScrollView.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EndToggleGroup">
      <summary>
        <para>Закрыть группу, начатую с помощью BeginToggleGroup.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EndVertical">
      <summary>
        <para>Закрыть группу, начатую с помощью BeginVertical.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumFlagsField(System.Enum,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Отображает меню с опцией для каждого значения перечислимого типа при нажатии.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем флагов перечисления.</param>
      <param name="enumValue">Значение флагов перечисления.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="includeObsolete">Установите значение true, чтобы включить значения Enum с ObsoleteAttribute. Установите значение false, чтобы исключить значения Enum с ObsoleteAttribute.</param>
      <returns>
        <para>Значение флагов перечисления изменено пользователем. Это битовая маска выбора, где каждый бит представляет индекс значения Enum. (Обратите внимание, что возвращаемое значение само по себе не является Enum).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumFlagsField(System.Enum,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Отображает меню с опцией для каждого значения перечислимого типа при нажатии.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем флагов перечисления.</param>
      <param name="enumValue">Значение флагов перечисления.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="includeObsolete">Установите значение true, чтобы включить значения Enum с ObsoleteAttribute. Установите значение false, чтобы исключить значения Enum с ObsoleteAttribute.</param>
      <returns>
        <para>Значение флагов перечисления изменено пользователем. Это битовая маска выбора, где каждый бит представляет индекс значения Enum. (Обратите внимание, что возвращаемое значение само по себе не является Enum).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumFlagsField(System.String,System.Enum,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Отображает меню с опцией для каждого значения перечислимого типа при нажатии.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем флагов перечисления.</param>
      <param name="enumValue">Значение флагов перечисления.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="includeObsolete">Установите значение true, чтобы включить значения Enum с ObsoleteAttribute. Установите значение false, чтобы исключить значения Enum с ObsoleteAttribute.</param>
      <returns>
        <para>Значение флагов перечисления изменено пользователем. Это битовая маска выбора, где каждый бит представляет индекс значения Enum. (Обратите внимание, что возвращаемое значение само по себе не является Enum).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumFlagsField(System.String,System.Enum,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Отображает меню с опцией для каждого значения перечислимого типа при нажатии.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем флагов перечисления.</param>
      <param name="enumValue">Значение флагов перечисления.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="includeObsolete">Установите значение true, чтобы включить значения Enum с ObsoleteAttribute. Установите значение false, чтобы исключить значения Enum с ObsoleteAttribute.</param>
      <returns>
        <para>Значение флагов перечисления изменено пользователем. Это битовая маска выбора, где каждый бит представляет индекс значения Enum. (Обратите внимание, что возвращаемое значение само по себе не является Enum).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumFlagsField(UnityEngine.GUIContent,System.Enum,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Отображает меню с опцией для каждого значения перечислимого типа при нажатии.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем флагов перечисления.</param>
      <param name="enumValue">Значение флагов перечисления.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="includeObsolete">Установите значение true, чтобы включить значения Enum с ObsoleteAttribute. Установите значение false, чтобы исключить значения Enum с ObsoleteAttribute.</param>
      <returns>
        <para>Значение флагов перечисления изменено пользователем. Это битовая маска выбора, где каждый бит представляет индекс значения Enum. (Обратите внимание, что возвращаемое значение само по себе не является Enum).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumFlagsField(UnityEngine.GUIContent,System.Enum,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Отображает меню с опцией для каждого значения перечислимого типа при нажатии.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем флагов перечисления.</param>
      <param name="enumValue">Значение флагов перечисления.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="includeObsolete">Установите значение true, чтобы включить значения Enum с ObsoleteAttribute. Установите значение false, чтобы исключить значения Enum с ObsoleteAttribute.</param>
      <returns>
        <para>Значение флагов перечисления изменено пользователем. Это битовая маска выбора, где каждый бит представляет индекс значения Enum. (Обратите внимание, что возвращаемое значение само по себе не является Enum).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumFlagsField(UnityEngine.GUIContent,System.Enum,System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Отображает меню с опцией для каждого значения перечислимого типа при нажатии.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем флагов перечисления.</param>
      <param name="enumValue">Значение флагов перечисления.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="includeObsolete">Установите значение true, чтобы включить значения Enum с ObsoleteAttribute. Установите значение false, чтобы исключить значения Enum с ObsoleteAttribute.</param>
      <returns>
        <para>Значение флагов перечисления изменено пользователем. Это битовая маска выбора, где каждый бит представляет индекс значения Enum. (Обратите внимание, что возвращаемое значение само по себе не является Enum).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumFlagsField(UnityEngine.GUIContent,System.Enum,System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Отображает меню с опцией для каждого значения перечислимого типа при нажатии.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем флагов перечисления.</param>
      <param name="enumValue">Значение флагов перечисления.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="includeObsolete">Установите значение true, чтобы включить значения Enum с ObsoleteAttribute. Установите значение false, чтобы исключить значения Enum с ObsoleteAttribute.</param>
      <returns>
        <para>Значение флагов перечисления изменено пользователем. Это битовая маска выбора, где каждый бит представляет индекс значения Enum. (Обратите внимание, что возвращаемое значение само по себе не является Enum).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumMaskField(UnityEngine.GUIContent,System.Enum,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Этот метод устарел. Вместо этого используйте EditorGUILayout.EnumFlagsField.

Создайте поле для масок на основе enum.</para>
      </summary>
      <param name="label">Метка префикса для этого поля.</param>
      <param name="enumValue">Перечисление для флагов.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение изменено пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumMaskField(System.String,System.Enum,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Этот метод устарел. Вместо этого используйте EditorGUILayout.EnumFlagsField.

Создайте поле для масок на основе enum.</para>
      </summary>
      <param name="label">Метка префикса для этого поля.</param>
      <param name="enumValue">Перечисление для флагов.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение изменено пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumMaskField(UnityEngine.GUIContent,System.Enum,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Этот метод устарел. Вместо этого используйте EditorGUILayout.EnumFlagsField.

Создайте поле для масок на основе enum.</para>
      </summary>
      <param name="label">Метка префикса для этого поля.</param>
      <param name="enumValue">Перечисление для флагов.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение изменено пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumMaskField(System.String,System.Enum,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Этот метод устарел. Вместо этого используйте EditorGUILayout.EnumFlagsField.

Создайте поле для масок на основе enum.</para>
      </summary>
      <param name="label">Метка префикса для этого поля.</param>
      <param name="enumValue">Перечисление для флагов.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение изменено пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumMaskField(System.Enum,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Этот метод устарел. Вместо этого используйте EditorGUILayout.EnumFlagsField.

Создайте поле для масок на основе enum.</para>
      </summary>
      <param name="label">Метка префикса для этого поля.</param>
      <param name="enumValue">Перечисление для флагов.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение изменено пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumMaskField(System.Enum,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Этот метод устарел. Вместо этого используйте EditorGUILayout.EnumFlagsField.

Создайте поле для масок на основе enum.</para>
      </summary>
      <param name="label">Метка префикса для этого поля.</param>
      <param name="enumValue">Перечисление для флагов.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение изменено пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumMaskPopup(System.String,System.Enum,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Этот метод устарел. Вместо этого используйте EditorGUILayout.EnumFlagsField.

Создайте всплывающее поле выбора enum для битовой маски.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selected">Параметры перечисления, отображаемые в поле.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Дополнительные параметры макета.</param>
      <returns>
        <para>Параметры перечисления, выбранные пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumMaskPopup(System.String,System.Enum,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Этот метод устарел. Вместо этого используйте EditorGUILayout.EnumFlagsField.

Создайте всплывающее поле выбора enum для битовой маски.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selected">Параметры перечисления, отображаемые в поле.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Дополнительные параметры макета.</param>
      <returns>
        <para>Параметры перечисления, выбранные пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumMaskPopup(UnityEngine.GUIContent,System.Enum,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Этот метод устарел. Вместо этого используйте EditorGUILayout.EnumFlagsField.

Создайте всплывающее поле выбора enum для битовой маски.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selected">Параметры перечисления, отображаемые в поле.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Дополнительные параметры макета.</param>
      <returns>
        <para>Параметры перечисления, выбранные пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumMaskPopup(UnityEngine.GUIContent,System.Enum,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Этот метод устарел. Вместо этого используйте EditorGUILayout.EnumFlagsField.

Создайте всплывающее поле выбора enum для битовой маски.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selected">Параметры перечисления, отображаемые в поле.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Дополнительные параметры макета.</param>
      <returns>
        <para>Параметры перечисления, выбранные пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumPopup(System.Enum,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте всплывающее поле выбора enum.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selected">Параметр перечисления, отображаемый в поле.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="includeObsolete">Установите значение true, чтобы включить значения Enum с ObsoleteAttribute. Установите значение false, чтобы исключить значения Enum с ObsoleteAttribute.</param>
      <param name="checkEnabled">Метод вызывается для каждого отображаемого значения Enum. Указанный метод должен возвращать true, если опция может быть выбрана, иначе false.</param>
      <returns>
        <para>Параметр перечисления, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumPopup(System.Enum,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте всплывающее поле выбора enum.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selected">Параметр перечисления, отображаемый в поле.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="includeObsolete">Установите значение true, чтобы включить значения Enum с ObsoleteAttribute. Установите значение false, чтобы исключить значения Enum с ObsoleteAttribute.</param>
      <param name="checkEnabled">Метод вызывается для каждого отображаемого значения Enum. Указанный метод должен возвращать true, если опция может быть выбрана, иначе false.</param>
      <returns>
        <para>Параметр перечисления, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumPopup(System.String,System.Enum,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте всплывающее поле выбора enum.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selected">Параметр перечисления, отображаемый в поле.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="includeObsolete">Установите значение true, чтобы включить значения Enum с ObsoleteAttribute. Установите значение false, чтобы исключить значения Enum с ObsoleteAttribute.</param>
      <param name="checkEnabled">Метод вызывается для каждого отображаемого значения Enum. Указанный метод должен возвращать true, если опция может быть выбрана, иначе false.</param>
      <returns>
        <para>Параметр перечисления, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumPopup(System.String,System.Enum,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте всплывающее поле выбора enum.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selected">Параметр перечисления, отображаемый в поле.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="includeObsolete">Установите значение true, чтобы включить значения Enum с ObsoleteAttribute. Установите значение false, чтобы исключить значения Enum с ObsoleteAttribute.</param>
      <param name="checkEnabled">Метод вызывается для каждого отображаемого значения Enum. Указанный метод должен возвращать true, если опция может быть выбрана, иначе false.</param>
      <returns>
        <para>Параметр перечисления, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumPopup(UnityEngine.GUIContent,System.Enum,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте всплывающее поле выбора enum.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selected">Параметр перечисления, отображаемый в поле.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="includeObsolete">Установите значение true, чтобы включить значения Enum с ObsoleteAttribute. Установите значение false, чтобы исключить значения Enum с ObsoleteAttribute.</param>
      <param name="checkEnabled">Метод вызывается для каждого отображаемого значения Enum. Указанный метод должен возвращать true, если опция может быть выбрана, иначе false.</param>
      <returns>
        <para>Параметр перечисления, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumPopup(UnityEngine.GUIContent,System.Enum,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте всплывающее поле выбора enum.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selected">Параметр перечисления, отображаемый в поле.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="includeObsolete">Установите значение true, чтобы включить значения Enum с ObsoleteAttribute. Установите значение false, чтобы исключить значения Enum с ObsoleteAttribute.</param>
      <param name="checkEnabled">Метод вызывается для каждого отображаемого значения Enum. Указанный метод должен возвращать true, если опция может быть выбрана, иначе false.</param>
      <returns>
        <para>Параметр перечисления, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumPopup(UnityEngine.GUIContent,System.Enum,System.Func`2&lt;System.Enum,System.Boolean&gt;,System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте всплывающее поле выбора enum.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selected">Параметр перечисления, отображаемый в поле.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="includeObsolete">Установите значение true, чтобы включить значения Enum с ObsoleteAttribute. Установите значение false, чтобы исключить значения Enum с ObsoleteAttribute.</param>
      <param name="checkEnabled">Метод вызывается для каждого отображаемого значения Enum. Указанный метод должен возвращать true, если опция может быть выбрана, иначе false.</param>
      <returns>
        <para>Параметр перечисления, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumPopup(UnityEngine.GUIContent,System.Enum,System.Func`2&lt;System.Enum,System.Boolean&gt;,System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте всплывающее поле выбора enum.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selected">Параметр перечисления, отображаемый в поле.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="includeObsolete">Установите значение true, чтобы включить значения Enum с ObsoleteAttribute. Установите значение false, чтобы исключить значения Enum с ObsoleteAttribute.</param>
      <param name="checkEnabled">Метод вызывается для каждого отображаемого значения Enum. Указанный метод должен возвращать true, если опция может быть выбрана, иначе false.</param>
      <returns>
        <para>Параметр перечисления, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.EditorGUILayout.FadeGroupScope">
      <summary>
        <para>Начинает группу, которую можно скрыть/показать, а переход будет анимирован.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUILayout.FadeGroupScope.visible">
      <summary>
        <para>Видна ли группа.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.FadeGroupScope.#ctor(System.Single)">
      <summary>
        <para>Создайте новую FadeGroupScope и начните соответствующую группу.</para>
      </summary>
      <param name="value">Значение от 0 до 1, где 0 скрыто, а 1 полностью видно.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.FloatField(System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле для ввода значений с плавающей запятой.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем с плавающей запятой.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.FloatField(System.Single,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле для ввода значений с плавающей запятой.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем с плавающей запятой.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.FloatField(System.String,System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле для ввода значений с плавающей запятой.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем с плавающей запятой.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.FloatField(System.String,System.Single,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле для ввода значений с плавающей запятой.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем с плавающей запятой.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.FloatField(UnityEngine.GUIContent,System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле для ввода значений с плавающей запятой.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем с плавающей запятой.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.FloatField(UnityEngine.GUIContent,System.Single,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле для ввода значений с плавающей запятой.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем с плавающей запятой.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Foldout(System.Boolean,System.String)">
      <summary>
        <para>Сделайте метку со стрелкой слева от нее.</para>
      </summary>
      <param name="foldout">Показанное развернутое состояние.</param>
      <param name="content">Ярлык для отображения.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="toggleOnLabelClick">Указывает, переключается ли нажатие на метку в развернутом состоянии. Значение по умолчанию неверно. Установите значение true, чтобы включить метку в интерактивную область.</param>
      <returns>
        <para>Состояние раскрытия, выбранное пользователем. Если true, вы должны визуализировать подобъекты.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Foldout(System.Boolean,System.String,System.Boolean,UnityEngine.GUIStyle)">
      <summary>
        <para>Сделайте метку со стрелкой слева от нее.</para>
      </summary>
      <param name="foldout">Показанное развернутое состояние.</param>
      <param name="content">Ярлык для отображения.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="toggleOnLabelClick">Указывает, переключается ли нажатие на метку в развернутом состоянии. Значение по умолчанию неверно. Установите значение true, чтобы включить метку в интерактивную область.</param>
      <returns>
        <para>Состояние раскрытия, выбранное пользователем. Если true, вы должны визуализировать подобъекты.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Foldout(System.Boolean,UnityEngine.GUIContent)">
      <summary>
        <para>Сделайте метку со стрелкой слева от нее.</para>
      </summary>
      <param name="foldout">Показанное развернутое состояние.</param>
      <param name="content">Ярлык для отображения.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="toggleOnLabelClick">Указывает, переключается ли нажатие на метку в развернутом состоянии. Значение по умолчанию неверно. Установите значение true, чтобы включить метку в интерактивную область.</param>
      <returns>
        <para>Состояние раскрытия, выбранное пользователем. Если true, вы должны визуализировать подобъекты.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Foldout(System.Boolean,UnityEngine.GUIContent,System.Boolean,UnityEngine.GUIStyle)">
      <summary>
        <para>Сделайте метку со стрелкой слева от нее.</para>
      </summary>
      <param name="foldout">Показанное развернутое состояние.</param>
      <param name="content">Ярлык для отображения.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="toggleOnLabelClick">Указывает, переключается ли нажатие на метку в развернутом состоянии. Значение по умолчанию неверно. Установите значение true, чтобы включить метку в интерактивную область.</param>
      <returns>
        <para>Состояние раскрытия, выбранное пользователем. Если true, вы должны визуализировать подобъекты.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Foldout(System.Boolean,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Сделайте метку со стрелкой слева от нее.</para>
      </summary>
      <param name="foldout">Показанное развернутое состояние.</param>
      <param name="content">Ярлык для отображения.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="toggleOnLabelClick">Указывает, переключается ли нажатие на метку в развернутом состоянии. Значение по умолчанию неверно. Установите значение true, чтобы включить метку в интерактивную область.</param>
      <returns>
        <para>Состояние раскрытия, выбранное пользователем. Если true, вы должны визуализировать подобъекты.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Foldout(System.Boolean,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Сделайте метку со стрелкой слева от нее.</para>
      </summary>
      <param name="foldout">Показанное развернутое состояние.</param>
      <param name="content">Ярлык для отображения.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="toggleOnLabelClick">Указывает, переключается ли нажатие на метку в развернутом состоянии. Значение по умолчанию неверно. Установите значение true, чтобы включить метку в интерактивную область.</param>
      <returns>
        <para>Состояние раскрытия, выбранное пользователем. Если true, вы должны визуализировать подобъекты.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.GetControlRect(UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Получите прямоугольник для элемента управления Editor.</para>
      </summary>
      <param name="hasLabel">Необязательное логическое значение, чтобы указать, есть ли у элемента управления метка. Значение по умолчанию — true.</param>
      <param name="height">Высота элемента управления в пикселях. По умолчанию используется EditorGUIUtility.singleLineHeight.</param>
      <param name="style">Необязательный стиль GUIStyle для элемента управления.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют настройки, определенные стилем.
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.GetControlRect(System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Получите прямоугольник для элемента управления Editor.</para>
      </summary>
      <param name="hasLabel">Необязательное логическое значение, чтобы указать, есть ли у элемента управления метка. Значение по умолчанию — true.</param>
      <param name="height">Высота элемента управления в пикселях. По умолчанию используется EditorGUIUtility.singleLineHeight.</param>
      <param name="style">Необязательный стиль GUIStyle для элемента управления.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют настройки, определенные стилем.
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.GetControlRect(System.Boolean,System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Получите прямоугольник для элемента управления Editor.</para>
      </summary>
      <param name="hasLabel">Необязательное логическое значение, чтобы указать, есть ли у элемента управления метка. Значение по умолчанию — true.</param>
      <param name="height">Высота элемента управления в пикселях. По умолчанию используется EditorGUIUtility.singleLineHeight.</param>
      <param name="style">Необязательный стиль GUIStyle для элемента управления.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют настройки, определенные стилем.
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.GetControlRect(System.Boolean,System.Single,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Получите прямоугольник для элемента управления Editor.</para>
      </summary>
      <param name="hasLabel">Необязательное логическое значение, чтобы указать, есть ли у элемента управления метка. Значение по умолчанию — true.</param>
      <param name="height">Высота элемента управления в пикселях. По умолчанию используется EditorGUIUtility.singleLineHeight.</param>
      <param name="style">Необязательный стиль GUIStyle для элемента управления.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют настройки, определенные стилем.
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.GradientField(UnityEngine.Gradient,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для редактирования Градиента.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Градиент для редактирования.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="hdr">
      </param>
      <returns>
        <para>Градиент, отредактированный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.GradientField(System.String,UnityEngine.Gradient,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для редактирования Градиента.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Градиент для редактирования.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="hdr">
      </param>
      <returns>
        <para>Градиент, отредактированный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.GradientField(UnityEngine.GUIContent,UnityEngine.Gradient,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для редактирования Градиента.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Градиент для редактирования.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="hdr">
      </param>
      <returns>
        <para>Градиент, отредактированный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.GradientField(UnityEngine.GUIContent,UnityEngine.Gradient,System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для редактирования Градиента.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Градиент для редактирования.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="hdr">
      </param>
      <returns>
        <para>Градиент, отредактированный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.HelpBox(System.String,UnityEditor.MessageType)">
      <summary>
        <para>Создайте окно справки с сообщением для пользователя.</para>
      </summary>
      <param name="message">Текст сообщения.</param>
      <param name="type">Тип сообщения.</param>
      <param name="wide">Если true, поле будет покрывать всю ширину окна; в противном случае он будет охватывать только часть элементов управления.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.HelpBox(System.String,UnityEditor.MessageType,System.Boolean)">
      <summary>
        <para>Создайте окно справки с сообщением для пользователя.</para>
      </summary>
      <param name="message">Текст сообщения.</param>
      <param name="type">Тип сообщения.</param>
      <param name="wide">Если true, поле будет покрывать всю ширину окна; в противном случае он будет охватывать только часть элементов управления.</param>
    </member>
    <member name="T:UnityEditor.EditorGUILayout.HorizontalScope">
      <summary>
        <para>Одноразовый вспомогательный класс для управления BeginHorizontal / EndHorizontal.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUILayout.HorizontalScope.rect">
      <summary>
        <para>Прямоугольник горизонтальной группы.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.HorizontalScope.#ctor(UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте новую HorizontalScope и начните соответствующую горизонтальную группу.</para>
      </summary>
      <param name="style">Стиль, используемый для фонового изображения и значений заполнения. Если не указывать, фон будет прозрачным.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.HorizontalScope.#ctor(UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте новую HorizontalScope и начните соответствующую горизонтальную группу.</para>
      </summary>
      <param name="style">Стиль, используемый для фонового изображения и значений заполнения. Если не указывать, фон будет прозрачным.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.InspectorTitlebar(System.Boolean,UnityEngine.Object)">
      <summary>
        <para>Создайте заголовок, похожий на окно инспектора.</para>
      </summary>
      <param name="foldout">Развернутое состояние показано стрелкой.</param>
      <param name="targetObj">Объект (например, компонент) или объекты, для которых предназначена панель заголовка.</param>
      <param name="targetObjs">
      </param>
      <returns>
        <para>Состояние разворота, выбранное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.InspectorTitlebar(System.Boolean,UnityEngine.Object[])">
      <summary>
        <para>Создайте заголовок, похожий на окно инспектора.</para>
      </summary>
      <param name="foldout">Развернутое состояние показано стрелкой.</param>
      <param name="targetObj">Объект (например, компонент) или объекты, для которых предназначена панель заголовка.</param>
      <param name="targetObjs">
      </param>
      <returns>
        <para>Состояние разворота, выбранное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntField(System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле для ввода целых чисел.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntField(System.Int32,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле для ввода целых чисел.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntField(System.String,System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле для ввода целых чисел.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntField(System.String,System.Int32,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле для ввода целых чисел.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntField(UnityEngine.GUIContent,System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле для ввода целых чисел.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntField(UnityEngine.GUIContent,System.Int32,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле для ввода целых чисел.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntPopup(System.Int32,System.String[],System.Int32[],UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте целое всплывающее поле выбора.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedValue">Значение опции, отображаемой в поле.</param>
      <param name="displayedOptions">Массив с отображаемыми параметрами, из которых пользователь может выбирать.</param>
      <param name="optionValues">Массив значений для каждой опции.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение параметра, выбранного пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntPopup(System.Int32,System.String[],System.Int32[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте целое всплывающее поле выбора.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedValue">Значение опции, отображаемой в поле.</param>
      <param name="displayedOptions">Массив с отображаемыми параметрами, из которых пользователь может выбирать.</param>
      <param name="optionValues">Массив значений для каждой опции.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение параметра, выбранного пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntPopup(System.Int32,UnityEngine.GUIContent[],System.Int32[],UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте целое всплывающее поле выбора.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedValue">Значение опции, отображаемой в поле.</param>
      <param name="displayedOptions">Массив с отображаемыми параметрами, из которых пользователь может выбирать.</param>
      <param name="optionValues">Массив значений для каждой опции.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение параметра, выбранного пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntPopup(System.Int32,UnityEngine.GUIContent[],System.Int32[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте целое всплывающее поле выбора.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedValue">Значение опции, отображаемой в поле.</param>
      <param name="displayedOptions">Массив с отображаемыми параметрами, из которых пользователь может выбирать.</param>
      <param name="optionValues">Массив значений для каждой опции.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение параметра, выбранного пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntPopup(System.String,System.Int32,System.String[],System.Int32[],UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте целое всплывающее поле выбора.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedValue">Значение опции, отображаемой в поле.</param>
      <param name="displayedOptions">Массив с отображаемыми параметрами, из которых пользователь может выбирать.</param>
      <param name="optionValues">Массив значений для каждой опции.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение параметра, выбранного пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntPopup(System.String,System.Int32,System.String[],System.Int32[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте целое всплывающее поле выбора.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedValue">Значение опции, отображаемой в поле.</param>
      <param name="displayedOptions">Массив с отображаемыми параметрами, из которых пользователь может выбирать.</param>
      <param name="optionValues">Массив значений для каждой опции.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение параметра, выбранного пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntPopup(UnityEngine.GUIContent,System.Int32,UnityEngine.GUIContent[],System.Int32[],UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте целое всплывающее поле выбора.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedValue">Значение опции, отображаемой в поле.</param>
      <param name="displayedOptions">Массив с отображаемыми параметрами, из которых пользователь может выбирать.</param>
      <param name="optionValues">Массив значений для каждой опции.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение параметра, выбранного пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntPopup(UnityEngine.GUIContent,System.Int32,UnityEngine.GUIContent[],System.Int32[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте целое всплывающее поле выбора.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedValue">Значение опции, отображаемой в поле.</param>
      <param name="displayedOptions">Массив с отображаемыми параметрами, из которых пользователь может выбирать.</param>
      <param name="optionValues">Массив значений для каждой опции.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение параметра, выбранного пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntPopup(UnityEditor.SerializedProperty,UnityEngine.GUIContent[],System.Int32[],UnityEngine.GUIContent,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте целое всплывающее поле выбора.</para>
      </summary>
      <param name="property">Значение опции, отображаемой в поле.</param>
      <param name="displayedOptions">Массив с отображаемыми параметрами, из которых пользователь может выбирать.</param>
      <param name="optionValues">Массив значений для каждой опции.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="style">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntPopup(UnityEditor.SerializedProperty,UnityEngine.GUIContent[],System.Int32[],UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте целое всплывающее поле выбора.</para>
      </summary>
      <param name="property">Значение опции, отображаемой в поле.</param>
      <param name="displayedOptions">Массив с отображаемыми параметрами, из которых пользователь может выбирать.</param>
      <param name="optionValues">Массив значений для каждой опции.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="style">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntPopup(UnityEditor.SerializedProperty,UnityEngine.GUIContent[],System.Int32[],UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте целое всплывающее поле выбора.</para>
      </summary>
      <param name="property">Значение опции, отображаемой в поле.</param>
      <param name="displayedOptions">Массив с отображаемыми параметрами, из которых пользователь может выбирать.</param>
      <param name="optionValues">Массив значений для каждой опции.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="style">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntSlider(System.Int32,System.Int32,System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте ползунок, который пользователь может перетаскивать для изменения целочисленного значения между минимальным и максимальным значением.</para>
      </summary>
      <param name="label">Необязательная метка перед ползунком.</param>
      <param name="value">Значение, которое показывает ползунок. Это определяет положение перетаскиваемого бегунка.</param>
      <param name="leftValue">Значение на левом конце ползунка.</param>
      <param name="rightValue">Значение справа от ползунка.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, установленное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntSlider(System.String,System.Int32,System.Int32,System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте ползунок, который пользователь может перетаскивать для изменения целочисленного значения между минимальным и максимальным значением.</para>
      </summary>
      <param name="label">Необязательная метка перед ползунком.</param>
      <param name="value">Значение, которое показывает ползунок. Это определяет положение перетаскиваемого бегунка.</param>
      <param name="leftValue">Значение на левом конце ползунка.</param>
      <param name="rightValue">Значение справа от ползунка.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, установленное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntSlider(UnityEngine.GUIContent,System.Int32,System.Int32,System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте ползунок, который пользователь может перетаскивать для изменения целочисленного значения между минимальным и максимальным значением.</para>
      </summary>
      <param name="label">Необязательная метка перед ползунком.</param>
      <param name="value">Значение, которое показывает ползунок. Это определяет положение перетаскиваемого бегунка.</param>
      <param name="leftValue">Значение на левом конце ползунка.</param>
      <param name="rightValue">Значение справа от ползунка.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, установленное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntSlider(UnityEditor.SerializedProperty,System.Int32,System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте ползунок, который пользователь может перетаскивать для изменения целочисленного значения между минимальным и максимальным значением.</para>
      </summary>
      <param name="label">Необязательная метка перед ползунком.</param>
      <param name="property">Значение, которое показывает ползунок. Это определяет положение перетаскиваемого бегунка.</param>
      <param name="leftValue">Значение на левом конце ползунка.</param>
      <param name="rightValue">Значение справа от ползунка.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntSlider(UnityEditor.SerializedProperty,System.Int32,System.Int32,System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте ползунок, который пользователь может перетаскивать для изменения целочисленного значения между минимальным и максимальным значением.</para>
      </summary>
      <param name="label">Необязательная метка перед ползунком.</param>
      <param name="property">Значение, которое показывает ползунок. Это определяет положение перетаскиваемого бегунка.</param>
      <param name="leftValue">Значение на левом конце ползунка.</param>
      <param name="rightValue">Значение справа от ползунка.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntSlider(UnityEditor.SerializedProperty,System.Int32,System.Int32,UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте ползунок, который пользователь может перетаскивать для изменения целочисленного значения между минимальным и максимальным значением.</para>
      </summary>
      <param name="label">Необязательная метка перед ползунком.</param>
      <param name="property">Значение, которое показывает ползунок. Это определяет положение перетаскиваемого бегунка.</param>
      <param name="leftValue">Значение на левом конце ползунка.</param>
      <param name="rightValue">Значение справа от ползунка.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LabelField(System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте поле метки. (Полезно для отображения информации только для чтения.)</para>
      </summary>
      <param name="label">Метка перед полем метки.</param>
      <param name="label2">Метка, отображаемая справа.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="style">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LabelField(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте поле метки. (Полезно для отображения информации только для чтения.)</para>
      </summary>
      <param name="label">Метка перед полем метки.</param>
      <param name="label2">Метка, отображаемая справа.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="style">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LabelField(UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте поле метки. (Полезно для отображения информации только для чтения.)</para>
      </summary>
      <param name="label">Метка перед полем метки.</param>
      <param name="label2">Метка, отображаемая справа.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="style">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LabelField(UnityEngine.GUIContent,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте поле метки. (Полезно для отображения информации только для чтения.)</para>
      </summary>
      <param name="label">Метка перед полем метки.</param>
      <param name="label2">Метка, отображаемая справа.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="style">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LabelField(System.String,System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте поле метки. (Полезно для отображения информации только для чтения.)</para>
      </summary>
      <param name="label">Метка перед полем метки.</param>
      <param name="label2">Метка, отображаемая справа.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="style">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LabelField(System.String,System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте поле метки. (Полезно для отображения информации только для чтения.)</para>
      </summary>
      <param name="label">Метка перед полем метки.</param>
      <param name="label2">Метка, отображаемая справа.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="style">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LabelField(UnityEngine.GUIContent,UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте поле метки. (Полезно для отображения информации только для чтения.)</para>
      </summary>
      <param name="label">Метка перед полем метки.</param>
      <param name="label2">Метка, отображаемая справа.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="style">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LabelField(UnityEngine.GUIContent,UnityEngine.GUIContent,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте поле метки. (Полезно для отображения информации только для чтения.)</para>
      </summary>
      <param name="label">Метка перед полем метки.</param>
      <param name="label2">Метка, отображаемая справа.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="style">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LayerField(System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле выбора слоя.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="layer">Слой, показанный в поле.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Слой, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LayerField(System.Int32,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле выбора слоя.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="layer">Слой, показанный в поле.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Слой, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LayerField(System.String,System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле выбора слоя.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="layer">Слой, показанный в поле.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Слой, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LayerField(System.String,System.Int32,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле выбора слоя.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="layer">Слой, показанный в поле.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Слой, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LayerField(UnityEngine.GUIContent,System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле выбора слоя.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="layer">Слой, показанный в поле.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Слой, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LayerField(UnityEngine.GUIContent,System.Int32,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле выбора слоя.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="layer">Слой, показанный в поле.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Слой, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LinkButton(System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте интерактивную метку ссылки.</para>
      </summary>
      <param name="label">Метка ссылки.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>true, когда пользователь щелкает ссылку.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LinkButton(UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте интерактивную метку ссылки.</para>
      </summary>
      <param name="label">Метка ссылки.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>true, когда пользователь щелкает ссылку.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LongField(System.Int64,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле для ввода длинных целых чисел.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед длинным полем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LongField(System.Int64,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле для ввода длинных целых чисел.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед длинным полем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LongField(System.String,System.Int64,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле для ввода длинных целых чисел.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед длинным полем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LongField(System.String,System.Int64,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле для ввода длинных целых чисел.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед длинным полем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LongField(UnityEngine.GUIContent,System.Int64,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле для ввода длинных целых чисел.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед длинным полем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LongField(UnityEngine.GUIContent,System.Int64,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле для ввода длинных целых чисел.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед длинным полем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.MaskField(UnityEngine.GUIContent,System.Int32,System.String[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделать поле для масок.</para>
      </summary>
      <param name="label">Метка префикса поля.</param>
      <param name="mask">Текущая маска для отображения.</param>
      <param name="displayedOption">Массив строк, содержащий метки для каждого флага.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="displayedOptions">
      </param>
      <param name="style">
      </param>
      <returns>
        <para>Значение изменено пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.MaskField(System.String,System.Int32,System.String[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделать поле для масок.</para>
      </summary>
      <param name="label">Метка префикса поля.</param>
      <param name="mask">Текущая маска для отображения.</param>
      <param name="displayedOption">Массив строк, содержащий метки для каждого флага.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="displayedOptions">
      </param>
      <param name="style">
      </param>
      <returns>
        <para>Значение изменено пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.MaskField(UnityEngine.GUIContent,System.Int32,System.String[],UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделать поле для масок.</para>
      </summary>
      <param name="label">Метка префикса поля.</param>
      <param name="mask">Текущая маска для отображения.</param>
      <param name="displayedOption">Массив строк, содержащий метки для каждого флага.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="displayedOptions">
      </param>
      <param name="style">
      </param>
      <returns>
        <para>Значение изменено пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.MaskField(System.String,System.Int32,System.String[],UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделать поле для масок.</para>
      </summary>
      <param name="label">Метка префикса поля.</param>
      <param name="mask">Текущая маска для отображения.</param>
      <param name="displayedOption">Массив строк, содержащий метки для каждого флага.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="displayedOptions">
      </param>
      <param name="style">
      </param>
      <returns>
        <para>Значение изменено пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.MaskField(System.Int32,System.String[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделать поле для масок.</para>
      </summary>
      <param name="label">Метка префикса поля.</param>
      <param name="mask">Текущая маска для отображения.</param>
      <param name="displayedOption">Массив строк, содержащий метки для каждого флага.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="displayedOptions">
      </param>
      <param name="style">
      </param>
      <returns>
        <para>Значение изменено пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.MaskField(System.Int32,System.String[],UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделать поле для масок.</para>
      </summary>
      <param name="label">Метка префикса поля.</param>
      <param name="mask">Текущая маска для отображения.</param>
      <param name="displayedOption">Массив строк, содержащий метки для каждого флага.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="displayedOptions">
      </param>
      <param name="style">
      </param>
      <returns>
        <para>Значение изменено пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.MinMaxSlider(System.Single&amp;,System.Single&amp;,System.Single,System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте специальный ползунок, который пользователь может использовать для указания диапазона между минимумом и максимумом.</para>
      </summary>
      <param name="label">Необязательная метка перед ползунком.</param>
      <param name="minValue">Нижнее значение диапазона, отображаемого ползунком, передается по ссылке.</param>
      <param name="maxValue">Верхнее значение диапазона, отображаемого ползунком, переданное по ссылке.</param>
      <param name="minLimit">Ограничение на левом конце ползунка.</param>
      <param name="maxLimit">Ограничение справа от ползунка.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.MinMaxSlider(System.String,System.Single&amp;,System.Single&amp;,System.Single,System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте специальный ползунок, который пользователь может использовать для указания диапазона между минимумом и максимумом.</para>
      </summary>
      <param name="label">Необязательная метка перед ползунком.</param>
      <param name="minValue">Нижнее значение диапазона, отображаемого ползунком, передается по ссылке.</param>
      <param name="maxValue">Верхнее значение диапазона, отображаемого ползунком, переданное по ссылке.</param>
      <param name="minLimit">Ограничение на левом конце ползунка.</param>
      <param name="maxLimit">Ограничение справа от ползунка.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.MinMaxSlider(UnityEngine.GUIContent,System.Single&amp;,System.Single&amp;,System.Single,System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте специальный ползунок, который пользователь может использовать для указания диапазона между минимумом и максимумом.</para>
      </summary>
      <param name="label">Необязательная метка перед ползунком.</param>
      <param name="minValue">Нижнее значение диапазона, отображаемого ползунком, передается по ссылке.</param>
      <param name="maxValue">Верхнее значение диапазона, отображаемого ползунком, переданное по ссылке.</param>
      <param name="minLimit">Ограничение на левом конце ползунка.</param>
      <param name="maxLimit">Ограничение справа от ползунка.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ObjectField(UnityEngine.Object,System.Type,System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для получения объекта любого типа.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="obj">Объект, отображаемый в поле.</param>
      <param name="objType">Тип объектов, которые можно назначать.</param>
      <param name="allowSceneObjects">Разрешить назначение объектов сцены. См. Описание для получения дополнительной информации.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют настройки, определенные стилем.
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Объект, заданный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ObjectField(System.String,UnityEngine.Object,System.Type,System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для получения объекта любого типа.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="obj">Объект, отображаемый в поле.</param>
      <param name="objType">Тип объектов, которые можно назначать.</param>
      <param name="allowSceneObjects">Разрешить назначение объектов сцены. См. Описание для получения дополнительной информации.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют настройки, определенные стилем.
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Объект, заданный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ObjectField(UnityEngine.GUIContent,UnityEngine.Object,System.Type,System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для получения объекта любого типа.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="obj">Объект, отображаемый в поле.</param>
      <param name="objType">Тип объектов, которые можно назначать.</param>
      <param name="allowSceneObjects">Разрешить назначение объектов сцены. См. Описание для получения дополнительной информации.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют настройки, определенные стилем.
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Объект, заданный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ObjectField(UnityEditor.SerializedProperty,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для получения объекта любого типа.</para>
      </summary>
      <param name="property">Свойство ссылки на объект, отображаемое в поле.</param>
      <param name="objType">Тип объектов, которые можно назначать.</param>
      <param name="label">Необязательная метка перед полем. Передайте GUIContent.none, чтобы скрыть метку.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ObjectField(UnityEditor.SerializedProperty,UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для получения объекта любого типа.</para>
      </summary>
      <param name="property">Свойство ссылки на объект, отображаемое в поле.</param>
      <param name="objType">Тип объектов, которые можно назначать.</param>
      <param name="label">Необязательная метка перед полем. Передайте GUIContent.none, чтобы скрыть метку.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ObjectField(UnityEditor.SerializedProperty,System.Type,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для получения объекта любого типа.</para>
      </summary>
      <param name="property">Свойство ссылки на объект, отображаемое в поле.</param>
      <param name="objType">Тип объектов, которые можно назначать.</param>
      <param name="label">Необязательная метка перед полем. Передайте GUIContent.none, чтобы скрыть метку.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ObjectField(UnityEditor.SerializedProperty,System.Type,UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для получения объекта любого типа.</para>
      </summary>
      <param name="property">Свойство ссылки на объект, отображаемое в поле.</param>
      <param name="objType">Тип объектов, которые можно назначать.</param>
      <param name="label">Необязательная метка перед полем. Передайте GUIContent.none, чтобы скрыть метку.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.PasswordField(System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле, в которое пользователь может ввести пароль.</para>
      </summary>
      <param name="label">Необязательный ярлык для отображения перед полем пароля.</param>
      <param name="password">Пароль для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Пароль, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.PasswordField(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле, в которое пользователь может ввести пароль.</para>
      </summary>
      <param name="label">Необязательный ярлык для отображения перед полем пароля.</param>
      <param name="password">Пароль для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Пароль, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.PasswordField(System.String,System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле, в которое пользователь может ввести пароль.</para>
      </summary>
      <param name="label">Необязательный ярлык для отображения перед полем пароля.</param>
      <param name="password">Пароль для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Пароль, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.PasswordField(System.String,System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле, в которое пользователь может ввести пароль.</para>
      </summary>
      <param name="label">Необязательный ярлык для отображения перед полем пароля.</param>
      <param name="password">Пароль для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Пароль, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.PasswordField(UnityEngine.GUIContent,System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле, в которое пользователь может ввести пароль.</para>
      </summary>
      <param name="label">Необязательный ярлык для отображения перед полем пароля.</param>
      <param name="password">Пароль для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Пароль, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.PasswordField(UnityEngine.GUIContent,System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле, в которое пользователь может ввести пароль.</para>
      </summary>
      <param name="label">Необязательный ярлык для отображения перед полем пароля.</param>
      <param name="password">Пароль для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Пароль, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Popup(System.Int32,System.String[],UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте общее всплывающее поле выбора.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedIndex">Индекс опции, которую показывает поле.</param>
      <param name="displayedOptions">Массив с параметрами, показанными во всплывающем окне.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Индекс опции, выбранной пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Popup(System.Int32,System.String[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте общее всплывающее поле выбора.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedIndex">Индекс опции, которую показывает поле.</param>
      <param name="displayedOptions">Массив с параметрами, показанными во всплывающем окне.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Индекс опции, выбранной пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Popup(System.Int32,UnityEngine.GUIContent[],UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте общее всплывающее поле выбора.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedIndex">Индекс опции, которую показывает поле.</param>
      <param name="displayedOptions">Массив с параметрами, показанными во всплывающем окне.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Индекс опции, выбранной пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Popup(System.Int32,UnityEngine.GUIContent[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте общее всплывающее поле выбора.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedIndex">Индекс опции, которую показывает поле.</param>
      <param name="displayedOptions">Массив с параметрами, показанными во всплывающем окне.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Индекс опции, выбранной пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Popup(System.String,System.Int32,System.String[],UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте общее всплывающее поле выбора.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedIndex">Индекс опции, которую показывает поле.</param>
      <param name="displayedOptions">Массив с параметрами, показанными во всплывающем окне.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Индекс опции, выбранной пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Popup(System.String,System.Int32,System.String[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте общее всплывающее поле выбора.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedIndex">Индекс опции, которую показывает поле.</param>
      <param name="displayedOptions">Массив с параметрами, показанными во всплывающем окне.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Индекс опции, выбранной пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Popup(UnityEngine.GUIContent,System.Int32,UnityEngine.GUIContent[],UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте общее всплывающее поле выбора.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedIndex">Индекс опции, которую показывает поле.</param>
      <param name="displayedOptions">Массив с параметрами, показанными во всплывающем окне.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Индекс опции, выбранной пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Popup(UnityEngine.GUIContent,System.Int32,UnityEngine.GUIContent[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте общее всплывающее поле выбора.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedIndex">Индекс опции, которую показывает поле.</param>
      <param name="displayedOptions">Массив с параметрами, показанными во всплывающем окне.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Индекс опции, выбранной пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.PrefixLabel(System.String)">
      <summary>
        <para>Сделайте метку перед каким-нибудь элементом управления.</para>
      </summary>
      <param name="label">Метка для отображения слева от элемента управления.</param>
      <param name="followingStyle">
      </param>
      <param name="labelStyle">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.PrefixLabel(UnityEngine.GUIContent)">
      <summary>
        <para>Сделайте метку перед каким-нибудь элементом управления.</para>
      </summary>
      <param name="label">Метка для отображения слева от элемента управления.</param>
      <param name="followingStyle">
      </param>
      <param name="labelStyle">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.PrefixLabel(System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Сделайте метку перед каким-нибудь элементом управления.</para>
      </summary>
      <param name="label">Метка для отображения слева от элемента управления.</param>
      <param name="followingStyle">
      </param>
      <param name="labelStyle">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.PrefixLabel(System.String,UnityEngine.GUIStyle,UnityEngine.GUIStyle)">
      <summary>
        <para>Сделайте метку перед каким-нибудь элементом управления.</para>
      </summary>
      <param name="label">Метка для отображения слева от элемента управления.</param>
      <param name="followingStyle">
      </param>
      <param name="labelStyle">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.PrefixLabel(UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Сделайте метку перед каким-нибудь элементом управления.</para>
      </summary>
      <param name="label">Метка для отображения слева от элемента управления.</param>
      <param name="followingStyle">
      </param>
      <param name="labelStyle">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.PrefixLabel(UnityEngine.GUIContent,UnityEngine.GUIStyle,UnityEngine.GUIStyle)">
      <summary>
        <para>Сделайте метку перед каким-нибудь элементом управления.</para>
      </summary>
      <param name="label">Метка для отображения слева от элемента управления.</param>
      <param name="followingStyle">
      </param>
      <param name="labelStyle">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.PropertyField(UnityEditor.SerializedProperty,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для SerializedProperty.</para>
      </summary>
      <param name="property">SerializedProperty, для которого создается поле.</param>
      <param name="label">Необязательный ярлык для использования. Если не указано, используется метка самого свойства. Используйте GUIContent.none, чтобы вообще не отображать метку.</param>
      <param name="includeChildren">Если true, свойство, включая дочерние элементы, рисуется; в противном случае только сам элемент управления (например, только раскладку, но ничего под ней).</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение true, если свойство имеет дочерние элементы и развернуто, а для параметра includeChildren установлено значение false; в противном случае ложь.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.PropertyField(UnityEditor.SerializedProperty,UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для SerializedProperty.</para>
      </summary>
      <param name="property">SerializedProperty, для которого создается поле.</param>
      <param name="label">Необязательный ярлык для использования. Если не указано, используется метка самого свойства. Используйте GUIContent.none, чтобы вообще не отображать метку.</param>
      <param name="includeChildren">Если true, свойство, включая дочерние элементы, рисуется; в противном случае только сам элемент управления (например, только раскладку, но ничего под ней).</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение true, если свойство имеет дочерние элементы и развернуто, а для параметра includeChildren установлено значение false; в противном случае ложь.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.PropertyField(UnityEditor.SerializedProperty,System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для SerializedProperty.</para>
      </summary>
      <param name="property">SerializedProperty, для которого создается поле.</param>
      <param name="label">Необязательный ярлык для использования. Если не указано, используется метка самого свойства. Используйте GUIContent.none, чтобы вообще не отображать метку.</param>
      <param name="includeChildren">Если true, свойство, включая дочерние элементы, рисуется; в противном случае только сам элемент управления (например, только раскладку, но ничего под ней).</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение true, если свойство имеет дочерние элементы и развернуто, а для параметра includeChildren установлено значение false; в противном случае ложь.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.PropertyField(UnityEditor.SerializedProperty,UnityEngine.GUIContent,System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для SerializedProperty.</para>
      </summary>
      <param name="property">SerializedProperty, для которого создается поле.</param>
      <param name="label">Необязательный ярлык для использования. Если не указано, используется метка самого свойства. Используйте GUIContent.none, чтобы вообще не отображать метку.</param>
      <param name="includeChildren">Если true, свойство, включая дочерние элементы, рисуется; в противном случае только сам элемент управления (например, только раскладку, но ничего под ней).</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение true, если свойство имеет дочерние элементы и развернуто, а для параметра includeChildren установлено значение false; в противном случае ложь.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.RectField(UnityEngine.Rect,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле X, Y, W и H для ввода Rect.</para>
      </summary>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.RectField(System.String,UnityEngine.Rect,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле X, Y, W и H для ввода Rect.</para>
      </summary>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.RectField(UnityEngine.GUIContent,UnityEngine.Rect,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле X, Y, W и H для ввода Rect.</para>
      </summary>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.RectIntField(UnityEngine.RectInt,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поля X, Y, W и H для ввода RectInt.</para>
      </summary>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.RectIntField(System.String,UnityEngine.RectInt,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поля X, Y, W и H для ввода RectInt.</para>
      </summary>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.RectIntField(UnityEngine.GUIContent,UnityEngine.RectInt,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поля X, Y, W и H для ввода RectInt.</para>
      </summary>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.EditorGUILayout.ScrollViewScope">
      <summary>
        <para>Одноразовый вспомогательный класс для управления BeginScrollView/EndScrollView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUILayout.ScrollViewScope.handleScrollWheel">
      <summary>
        <para>Должен ли этот ScrollView обрабатывать события колеса прокрутки. (по умолчанию: правда).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUILayout.ScrollViewScope.scrollPosition">
      <summary>
        <para>Модифицированный scrollPosition. Передайте это обратно в переменную, которую вы передаете, как показано в примере.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ScrollViewScope.#ctor(UnityEngine.Vector2,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте новый ScrollViewScope и запустите соответствующий ScrollView.</para>
      </summary>
      <param name="scrollPosition">Используемая позиция прокрутки.</param>
      <param name="alwaysShowHorizontal">Всегда ли показывать горизонтальную полосу прокрутки. Если установлено значение false, оно отображается только в том случае, если содержимое внутри ScrollView шире, чем сам вид прокрутки.</param>
      <param name="alwaysShowVertical">Всегда ли показывать вертикальную полосу прокрутки. Если установлено значение false, оно отображается только в том случае, если содержимое ScrollView выше, чем сам вид прокрутки.</param>
      <param name="horizontalScrollbar">Необязательный GUIStyle для горизонтальной полосы прокрутки. Если его не указать, используется стиль HorizontalScrollbar из текущего GUISkin.</param>
      <param name="verticalScrollbar">Необязательный GUIStyle для вертикальной полосы прокрутки. Если его не указать, используется стиль verticalScrollbar из текущей оболочки GUISkin.</param>
      <param name="options">
      </param>
      <param name="style">
      </param>
      <param name="background">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ScrollViewScope.#ctor(UnityEngine.Vector2,System.Boolean,System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте новый ScrollViewScope и запустите соответствующий ScrollView.</para>
      </summary>
      <param name="scrollPosition">Используемая позиция прокрутки.</param>
      <param name="alwaysShowHorizontal">Всегда ли показывать горизонтальную полосу прокрутки. Если установлено значение false, оно отображается только в том случае, если содержимое внутри ScrollView шире, чем сам вид прокрутки.</param>
      <param name="alwaysShowVertical">Всегда ли показывать вертикальную полосу прокрутки. Если установлено значение false, оно отображается только в том случае, если содержимое ScrollView выше, чем сам вид прокрутки.</param>
      <param name="horizontalScrollbar">Необязательный GUIStyle для горизонтальной полосы прокрутки. Если его не указать, используется стиль HorizontalScrollbar из текущего GUISkin.</param>
      <param name="verticalScrollbar">Необязательный GUIStyle для вертикальной полосы прокрутки. Если его не указать, используется стиль verticalScrollbar из текущей оболочки GUISkin.</param>
      <param name="options">
      </param>
      <param name="style">
      </param>
      <param name="background">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ScrollViewScope.#ctor(UnityEngine.Vector2,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте новый ScrollViewScope и запустите соответствующий ScrollView.</para>
      </summary>
      <param name="scrollPosition">Используемая позиция прокрутки.</param>
      <param name="alwaysShowHorizontal">Всегда ли показывать горизонтальную полосу прокрутки. Если установлено значение false, оно отображается только в том случае, если содержимое внутри ScrollView шире, чем сам вид прокрутки.</param>
      <param name="alwaysShowVertical">Всегда ли показывать вертикальную полосу прокрутки. Если установлено значение false, оно отображается только в том случае, если содержимое ScrollView выше, чем сам вид прокрутки.</param>
      <param name="horizontalScrollbar">Необязательный GUIStyle для горизонтальной полосы прокрутки. Если его не указать, используется стиль HorizontalScrollbar из текущего GUISkin.</param>
      <param name="verticalScrollbar">Необязательный GUIStyle для вертикальной полосы прокрутки. Если его не указать, используется стиль verticalScrollbar из текущей оболочки GUISkin.</param>
      <param name="options">
      </param>
      <param name="style">
      </param>
      <param name="background">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ScrollViewScope.#ctor(UnityEngine.Vector2,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте новый ScrollViewScope и запустите соответствующий ScrollView.</para>
      </summary>
      <param name="scrollPosition">Используемая позиция прокрутки.</param>
      <param name="alwaysShowHorizontal">Всегда ли показывать горизонтальную полосу прокрутки. Если установлено значение false, оно отображается только в том случае, если содержимое внутри ScrollView шире, чем сам вид прокрутки.</param>
      <param name="alwaysShowVertical">Всегда ли показывать вертикальную полосу прокрутки. Если установлено значение false, оно отображается только в том случае, если содержимое ScrollView выше, чем сам вид прокрутки.</param>
      <param name="horizontalScrollbar">Необязательный GUIStyle для горизонтальной полосы прокрутки. Если его не указать, используется стиль HorizontalScrollbar из текущего GUISkin.</param>
      <param name="verticalScrollbar">Необязательный GUIStyle для вертикальной полосы прокрутки. Если его не указать, используется стиль verticalScrollbar из текущей оболочки GUISkin.</param>
      <param name="options">
      </param>
      <param name="style">
      </param>
      <param name="background">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ScrollViewScope.#ctor(UnityEngine.Vector2,System.Boolean,System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте новый ScrollViewScope и запустите соответствующий ScrollView.</para>
      </summary>
      <param name="scrollPosition">Используемая позиция прокрутки.</param>
      <param name="alwaysShowHorizontal">Всегда ли показывать горизонтальную полосу прокрутки. Если установлено значение false, оно отображается только в том случае, если содержимое внутри ScrollView шире, чем сам вид прокрутки.</param>
      <param name="alwaysShowVertical">Всегда ли показывать вертикальную полосу прокрутки. Если установлено значение false, оно отображается только в том случае, если содержимое ScrollView выше, чем сам вид прокрутки.</param>
      <param name="horizontalScrollbar">Необязательный GUIStyle для горизонтальной полосы прокрутки. Если его не указать, используется стиль HorizontalScrollbar из текущего GUISkin.</param>
      <param name="verticalScrollbar">Необязательный GUIStyle для вертикальной полосы прокрутки. Если его не указать, используется стиль verticalScrollbar из текущей оболочки GUISkin.</param>
      <param name="options">
      </param>
      <param name="style">
      </param>
      <param name="background">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.SelectableLabel(System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте выбираемое поле метки. (Полезно для отображения информации только для чтения, которую можно скопировать и вставить.)</para>
      </summary>
      <param name="text">Текст для отображения.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.SelectableLabel(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте выбираемое поле метки. (Полезно для отображения информации только для чтения, которую можно скопировать и вставить.)</para>
      </summary>
      <param name="text">Текст для отображения.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Slider(System.Single,System.Single,System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте ползунок, который пользователь может перетаскивать, чтобы изменить значение между минимальным и максимальным значением.</para>
      </summary>
      <param name="label">Необязательная метка перед ползунком.</param>
      <param name="value">Значение, которое показывает ползунок. Это определяет положение перетаскиваемого бегунка.</param>
      <param name="leftValue">Значение на левом конце ползунка.</param>
      <param name="rightValue">Значение справа от ползунка.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, установленное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Slider(System.String,System.Single,System.Single,System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте ползунок, который пользователь может перетаскивать, чтобы изменить значение между минимальным и максимальным значением.</para>
      </summary>
      <param name="label">Необязательная метка перед ползунком.</param>
      <param name="value">Значение, которое показывает ползунок. Это определяет положение перетаскиваемого бегунка.</param>
      <param name="leftValue">Значение на левом конце ползунка.</param>
      <param name="rightValue">Значение справа от ползунка.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, установленное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Slider(UnityEngine.GUIContent,System.Single,System.Single,System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте ползунок, который пользователь может перетаскивать, чтобы изменить значение между минимальным и максимальным значением.</para>
      </summary>
      <param name="label">Необязательная метка перед ползунком.</param>
      <param name="value">Значение, которое показывает ползунок. Это определяет положение перетаскиваемого бегунка.</param>
      <param name="leftValue">Значение на левом конце ползунка.</param>
      <param name="rightValue">Значение справа от ползунка.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, установленное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Slider(UnityEditor.SerializedProperty,System.Single,System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте ползунок, который пользователь может перетаскивать, чтобы изменить значение между минимальным и максимальным значением.</para>
      </summary>
      <param name="label">Необязательная метка перед ползунком.</param>
      <param name="property">Значение, которое показывает ползунок. Это определяет положение перетаскиваемого бегунка.</param>
      <param name="leftValue">Значение на левом конце ползунка.</param>
      <param name="rightValue">Значение справа от ползунка.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Slider(UnityEditor.SerializedProperty,System.Single,System.Single,System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте ползунок, который пользователь может перетаскивать, чтобы изменить значение между минимальным и максимальным значением.</para>
      </summary>
      <param name="label">Необязательная метка перед ползунком.</param>
      <param name="property">Значение, которое показывает ползунок. Это определяет положение перетаскиваемого бегунка.</param>
      <param name="leftValue">Значение на левом конце ползунка.</param>
      <param name="rightValue">Значение справа от ползунка.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Slider(UnityEditor.SerializedProperty,System.Single,System.Single,UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте ползунок, который пользователь может перетаскивать, чтобы изменить значение между минимальным и максимальным значением.</para>
      </summary>
      <param name="label">Необязательная метка перед ползунком.</param>
      <param name="property">Значение, которое показывает ползунок. Это определяет положение перетаскиваемого бегунка.</param>
      <param name="leftValue">Значение на левом конце ползунка.</param>
      <param name="rightValue">Значение справа от ползунка.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Space">
      <summary>
        <para>Сделайте небольшой пробел между предыдущим элементом управления и следующим.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.TagField(System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте поле выбора тега.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="tag">Тег, отображаемый в поле.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Тег, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.TagField(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте поле выбора тега.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="tag">Тег, отображаемый в поле.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Тег, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.TagField(System.String,System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте поле выбора тега.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="tag">Тег, отображаемый в поле.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Тег, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.TagField(System.String,System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте поле выбора тега.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="tag">Тег, отображаемый в поле.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Тег, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.TagField(UnityEngine.GUIContent,System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте поле выбора тега.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="tag">Тег, отображаемый в поле.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Тег, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.TagField(UnityEngine.GUIContent,System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте поле выбора тега.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="tag">Тег, отображаемый в поле.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Тег, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.TextArea(System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовую область.</para>
      </summary>
      <param name="text">Текст для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Текст, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.TextArea(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовую область.</para>
      </summary>
      <param name="text">Текст для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Текст, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.TextField(System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед текстовым полем.</param>
      <param name="text">Текст для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Текст, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.TextField(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед текстовым полем.</param>
      <param name="text">Текст для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Текст, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.TextField(System.String,System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед текстовым полем.</param>
      <param name="text">Текст для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Текст, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.TextField(System.String,System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед текстовым полем.</param>
      <param name="text">Текст для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Текст, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.TextField(UnityEngine.GUIContent,System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед текстовым полем.</param>
      <param name="text">Текст для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Текст, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.TextField(UnityEngine.GUIContent,System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед текстовым полем.</param>
      <param name="text">Текст для редактирования.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Текст, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Toggle(System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте переключатель.</para>
      </summary>
      <param name="label">Необязательная метка перед переключателем.</param>
      <param name="value">Отображаемое состояние переключателя.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительный макет
характеристики. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;

См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Выбранное состояние переключателя.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Toggle(System.String,System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте переключатель.</para>
      </summary>
      <param name="label">Необязательная метка перед переключателем.</param>
      <param name="value">Отображаемое состояние переключателя.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительный макет
характеристики. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;

См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Выбранное состояние переключателя.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Toggle(UnityEngine.GUIContent,System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте переключатель.</para>
      </summary>
      <param name="label">Необязательная метка перед переключателем.</param>
      <param name="value">Отображаемое состояние переключателя.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительный макет
характеристики. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;

См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Выбранное состояние переключателя.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Toggle(System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте переключатель.</para>
      </summary>
      <param name="label">Необязательная метка перед переключателем.</param>
      <param name="value">Отображаемое состояние переключателя.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительный макет
характеристики. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;

См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Выбранное состояние переключателя.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Toggle(System.String,System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте переключатель.</para>
      </summary>
      <param name="label">Необязательная метка перед переключателем.</param>
      <param name="value">Отображаемое состояние переключателя.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительный макет
характеристики. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;

См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Выбранное состояние переключателя.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Toggle(UnityEngine.GUIContent,System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте переключатель.</para>
      </summary>
      <param name="label">Необязательная метка перед переключателем.</param>
      <param name="value">Отображаемое состояние переключателя.</param>
      <param name="style">Необязательный стиль GUISty.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительный макет
характеристики. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;

См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Выбранное состояние переключателя.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.EditorGUILayout.ToggleGroupScope">
      <summary>
        <para>Начните вертикальную группу с переключателя, чтобы включить или отключить все элементы управления внутри одновременно.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUILayout.ToggleGroupScope.enabled">
      <summary>
        <para>Включенное состояние, выбранное пользователем.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ToggleGroupScope.#ctor(System.String,System.Boolean)">
      <summary>
        <para>
        </para>
      </summary>
      <param name="label">Ярлык для отображения над переключаемыми элементами управления.</param>
      <param name="toggle">Включенное состояние группы переключателей.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ToggleGroupScope.#ctor(UnityEngine.GUIContent,System.Boolean)">
      <summary>
        <para>
        </para>
      </summary>
      <param name="label">Ярлык для отображения над переключаемыми элементами управления.</param>
      <param name="toggle">Включенное состояние группы переключателей.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ToggleLeft(System.String,System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле переключателя, где переключатель находится слева, а метка сразу справа от него.</para>
      </summary>
      <param name="label">Метка для отображения рядом с переключателем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="labelStyle">Необязательный GUIStyle для использования в метке.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ToggleLeft(UnityEngine.GUIContent,System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле переключателя, где переключатель находится слева, а метка сразу справа от него.</para>
      </summary>
      <param name="label">Метка для отображения рядом с переключателем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="labelStyle">Необязательный GUIStyle для использования в метке.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ToggleLeft(System.String,System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле переключателя, где переключатель находится слева, а метка сразу справа от него.</para>
      </summary>
      <param name="label">Метка для отображения рядом с переключателем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="labelStyle">Необязательный GUIStyle для использования в метке.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ToggleLeft(UnityEngine.GUIContent,System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле переключателя, где переключатель находится слева, а метка сразу справа от него.</para>
      </summary>
      <param name="label">Метка для отображения рядом с переключателем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="labelStyle">Необязательный GUIStyle для использования в метке.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ToolContextToolbar(UnityEngine.GUIContent,System.Collections.Generic.IList`1&lt;T&gt;)">
      <summary>
        <para>Создает панель инструментов, заполненную указанной коллекцией контекстов инструментов редактора.</para>
      </summary>
      <param name="content">Необязательная метка префикса для отображения перед панелью инструментов. Передайте null, чтобы опустить этот префикс.</param>
      <param name="contexts">Набор инструментов редактора для панели инструментов.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ToolContextToolbarForTarget(UnityEngine.GUIContent,UnityEngine.Object)">
      <summary>
        <para>Создает панель инструментов, заполненную коллекцией EditorToolContext, которая соответствует EditorToolContextAttribute.targetType целевого объекта.</para>
      </summary>
      <param name="content">Необязательная метка префикса. Передайте null, чтобы опустить метку.</param>
      <param name="target">Целевой объект. Это может быть компонент или редактор.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Vector2Field(System.String,UnityEngine.Vector2,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле X и Y для ввода Vector2.</para>
      </summary>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Vector2Field(UnityEngine.GUIContent,UnityEngine.Vector2,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле X и Y для ввода Vector2.</para>
      </summary>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Vector2IntField(System.String,UnityEngine.Vector2Int,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте целочисленное поле X и Y для ввода Vector2Int.</para>
      </summary>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Vector2IntField(UnityEngine.GUIContent,UnityEngine.Vector2Int,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте целочисленное поле X и Y для ввода Vector2Int.</para>
      </summary>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Vector3Field(System.String,UnityEngine.Vector3,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поля X, Y и Z для ввода Vector3.</para>
      </summary>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительный макет
характеристики. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Vector3Field(UnityEngine.GUIContent,UnityEngine.Vector3,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поля X, Y и Z для ввода Vector3.</para>
      </summary>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительный макет
характеристики. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Vector3IntField(System.String,UnityEngine.Vector3Int,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте целочисленное поле X, Y и Z для ввода Vector3Int.</para>
      </summary>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Vector3IntField(UnityEngine.GUIContent,UnityEngine.Vector3Int,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте целочисленное поле X, Y и Z для ввода Vector3Int.</para>
      </summary>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Vector4Field(System.String,UnityEngine.Vector4,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поля X, Y, Z и W для ввода Vector4.</para>
      </summary>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение для редактирования.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.EditorGUILayout.VerticalScope">
      <summary>
        <para>Одноразовый вспомогательный класс для управления BeginVertical/EndVertical.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUILayout.VerticalScope.rect">
      <summary>
        <para>Прямоугольник вертикальной группы.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.VerticalScope.#ctor(UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте новую вертикальную область и начните соответствующую вертикальную группу.</para>
      </summary>
      <param name="style">Стиль, используемый для фонового изображения и значений заполнения. Если не указывать, фон будет прозрачным.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.VerticalScope.#ctor(UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте новую вертикальную область и начните соответствующую вертикальную группу.</para>
      </summary>
      <param name="style">Стиль, используемый для фонового изображения и значений заполнения. Если не указывать, фон будет прозрачным.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="T:UnityEditor.EditorGUIUtility">
      <summary>
        <para>Разные вспомогательные материалы для EditorGUI.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUIUtility.currentViewWidth">
      <summary>
        <para>Ширина области GUI для текущего окна EditorWindow или другого представления. Доступ к этому свойству должен осуществляться только внутри вызова OnGUI.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUIUtility.editingTextField">
      <summary>
        <para>Текстовое поле редактирует текст в данный момент?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUIUtility.fieldWidth">
      <summary>
        <para>Минимальная ширина в пикселях, зарезервированная для полей элементов управления Editor GUI.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUIUtility.hierarchyMode">
      <summary>
        <para>Является ли графический интерфейс редактора режимом иерархии?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUIUtility.isProSkin">
      <summary>
        <para>Использует ли пользователь в настоящее время профессиональный скин? (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUIUtility.labelWidth">
      <summary>
        <para>Ширина в пикселях, зарезервированная для меток элементов управления Editor GUI.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUIUtility.pixelsPerPoint">
      <summary>
        <para>Масштаб точек GUI относительно пикселей экрана для текущего вида

Это значение представляет собой количество пикселей экрана на точку пространства интерфейса. Например, 2.0 на дисплеях Retina. Обратите внимание, что значение может отличаться от одного представления к другому, если представления находятся на мониторах с разными масштабами пользовательского интерфейса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUIUtility.singleLineHeight">
      <summary>
        <para>Получите высоту, используемую для одного элемента управления Editor, такого как однострочный EditorGUI.TextField или EditorGUI.Popup.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUIUtility.standardVerticalSpacing">
      <summary>
        <para>Получите высоту, используемую по умолчанию для вертикального интервала между элементами управления.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUIUtility.systemCopyBuffer">
      <summary>
        <para>Системный буфер копирования.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUIUtility.textFieldHasSelection">
      <summary>
        <para>Истинно, если текстовое поле в данный момент находится в фокусе и текст в нем выделен.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUIUtility.whiteTexture">
      <summary>
        <para>Получите белую текстуру.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUIUtility.wideMode">
      <summary>
        <para>Графический интерфейс редактора сейчас находится в расширенном режиме?</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.AddCursorRect(UnityEngine.Rect,UnityEditor.MouseCursor)">
      <summary>
        <para>Добавьте пользовательский указатель мыши к элементу управления.</para>
      </summary>
      <param name="position">Прямоугольник, внутри которого должен отображаться элемент управления.</param>
      <param name="mouse">Используемый курсор мыши.</param>
      <param name="controlID">ID целевого элемента управления.</param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.AddCursorRect(UnityEngine.Rect,UnityEditor.MouseCursor,System.Int32)">
      <summary>
        <para>Добавьте пользовательский указатель мыши к элементу управления.</para>
      </summary>
      <param name="position">Прямоугольник, внутри которого должен отображаться элемент управления.</param>
      <param name="mouse">Используемый курсор мыши.</param>
      <param name="controlID">ID целевого элемента управления.</param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.CommandEvent(System.String)">
      <summary>
        <para>Создает событие, которое можно отправить в другое окно.</para>
      </summary>
      <param name="commandName">Отправляемая команда.</param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.DrawColorSwatch(UnityEngine.Rect,UnityEngine.Color)">
      <summary>
        <para>Нарисуйте образец цвета.</para>
      </summary>
      <param name="position">Прямоугольник, внутри которого рисуется образец цвета.</param>
      <param name="color">Цвет для рисования.</param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.DrawCurveSwatch(UnityEngine.Rect,UnityEngine.AnimationCurve,UnityEditor.SerializedProperty,UnityEngine.Color,UnityEngine.Color)">
      <summary>
        <para>Нарисуйте образец кривой.</para>
      </summary>
      <param name="position">Прямоугольник, внутри которого рисуется образец цвета.</param>
      <param name="curve">Кривая для рисования.</param>
      <param name="property">Кривая, отображаемая как SerializedProperty.</param>
      <param name="color">Цвет для рисования кривой.</param>
      <param name="bgColor">Цвет для рисования фона.</param>
      <param name="curveRanges">Необязательный параметр для указания диапазона кривой, который должен быть включен в образец.</param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.DrawCurveSwatch(UnityEngine.Rect,UnityEngine.AnimationCurve,UnityEditor.SerializedProperty,UnityEngine.Color,UnityEngine.Color,UnityEngine.Rect)">
      <summary>
        <para>Нарисуйте образец кривой.</para>
      </summary>
      <param name="position">Прямоугольник, внутри которого рисуется образец цвета.</param>
      <param name="curve">Кривая для рисования.</param>
      <param name="property">Кривая, отображаемая как SerializedProperty.</param>
      <param name="color">Цвет для рисования кривой.</param>
      <param name="bgColor">Цвет для рисования фона.</param>
      <param name="curveRanges">Необязательный параметр для указания диапазона кривой, который должен быть включен в образец.</param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.DrawRegionSwatch(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEditor.SerializedProperty,UnityEngine.Color,UnityEngine.Color,UnityEngine.Rect)">
      <summary>
        <para>Нарисуйте образец с заполненной областью между двумя кривыми SerializedProperty.</para>
      </summary>
      <param name="position">
      </param>
      <param name="property">
      </param>
      <param name="property2">
      </param>
      <param name="color">
      </param>
      <param name="bgColor">
      </param>
      <param name="curveRanges">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.DrawRegionSwatch(UnityEngine.Rect,UnityEngine.AnimationCurve,UnityEngine.AnimationCurve,UnityEngine.Color,UnityEngine.Color,UnityEngine.Rect)">
      <summary>
        <para>Нарисуйте образец с заполненной областью между двумя кривыми.</para>
      </summary>
      <param name="position">
      </param>
      <param name="curve">
      </param>
      <param name="curve2">
      </param>
      <param name="color">
      </param>
      <param name="bgColor">
      </param>
      <param name="curveRanges">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.FindTexture(System.String)">
      <summary>
        <para>Получить текстуру из исходного имени файла.</para>
      </summary>
      <param name="name">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.GetBuiltinSkin(UnityEditor.EditorSkin)">
      <summary>
        <para>Получите один из встроенных скинов графического интерфейса, которым может быть вид игры, инспектор или вид скина «Сцена», выбранный параметром.</para>
      </summary>
      <param name="skin">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.GetFlowLayoutedRects(UnityEngine.Rect,UnityEngine.GUIStyle,System.Single,System.Single,System.Collections.Generic.List`1&lt;System.String&gt;)">
      <summary>
        <para>Список макетов строковых элементов слева направо, сверху вниз в заданной области.</para>
      </summary>
      <param name="rect">Область размещения элементов.</param>
      <param name="style">Стиль для элементов.</param>
      <param name="horizontalSpacing">Дополнительный горизонтальный интервал между последовательными элементами.</param>
      <param name="verticalSpacing">Дополнительный интервал по вертикали между строками элементов.</param>
      <param name="items">Строки для макета.</param>
      <returns>
        <para>Список прямоугольников для переданных элементов.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.GetIconForObject(UnityEngine.Object)">
      <summary>
        <para>Получает пользовательский значок, связанный с объектом. Только GameObjects и MonoScripts имеют связанные пользовательские значки.</para>
      </summary>
      <param name="obj">GameObject или MonoScript для запроса</param>
      <returns>
        <para>Возвращает пользовательский значок, связанный с объектом. Если с объектом не связан пользовательский значок, возвращается значение null.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.GetIconSize">
      <summary>
        <para>Получите размер, заданный с помощью SetIconSize.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.GetMainWindowPosition">
      <summary>
        <para>Возвращает положение главного окна редактора Unity.</para>
      </summary>
      <returns>
        <para>Положение главного окна редактора Unity.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.GetObjectPickerControlID">
      <summary>
        <para>ControlID отображаемого в данный момент средства выбора объектов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.GetObjectPickerObject">
      <summary>
        <para>Объект, выбранный в данный момент в средстве выбора объектов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.HasObjectThumbnail(System.Type)">
      <summary>
        <para>Есть ли у данного класса миниатюры для отдельных объектов?</para>
      </summary>
      <param name="objType">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.IconContent(System.String)">
      <summary>
        <para>Получить GUIContent из встроенных ресурсов Unity с заданным именем.</para>
      </summary>
      <param name="name">Имя нужного значка.</param>
      <param name="text">Подсказка для наведения курсора на значок.</param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.IconContent(System.String,System.String)">
      <summary>
        <para>Получить GUIContent из встроенных ресурсов Unity с заданным именем.</para>
      </summary>
      <param name="name">Имя нужного значка.</param>
      <param name="text">Подсказка для наведения курсора на значок.</param>
    </member>
    <member name="T:UnityEditor.EditorGUIUtility.IconSizeScope">
      <summary>
        <para>Помощник одноразовой области для GetIconSize / SetIconSize.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.IconSizeScope.#ctor(UnityEngine.Vector2)">
      <summary>
        <para>Начните IconSizeScope.</para>
      </summary>
      <param name="iconSizeWithinScope">Размер, который будет использоваться для значков, отображаемых как GUIContent в рамках этой области.</param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.IsDisplayReferencedByCameras(System.Int32)">
      <summary>
        <para>Проверьте, может ли какая-либо включенная камера отображать изображение на определенном дисплее.</para>
      </summary>
      <param name="displayIndex">Показать индекс.</param>
      <returns>
        <para>Истинно, если камера будет отображаться на дисплее.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.Load(System.String)">
      <summary>
        <para>Загрузите встроенный ресурс.</para>
      </summary>
      <param name="path">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.LoadRequired(System.String)">
      <summary>
        <para>Загрузите требуемый встроенный ресурс.</para>
      </summary>
      <param name="path">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.LookLikeControls">
      <summary>
        <para>Сделать все EditorGUI похожими на обычные элементы управления.</para>
      </summary>
      <param name="labelWidth">Ширина, используемая для меток с префиксом.</param>
      <param name="fieldWidth">Ширина текстовых записей.</param>
      <param name="_labelWidth">
      </param>
      <param name="_fieldWidth">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.LookLikeControls">
      <summary>
        <para>Сделать все EditorGUI похожими на обычные элементы управления.</para>
      </summary>
      <param name="labelWidth">Ширина, используемая для меток с префиксом.</param>
      <param name="fieldWidth">Ширина текстовых записей.</param>
      <param name="_labelWidth">
      </param>
      <param name="_fieldWidth">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.LookLikeControls(System.Single,System.Single)">
      <summary>
        <para>Сделать все EditorGUI похожими на обычные элементы управления.</para>
      </summary>
      <param name="labelWidth">Ширина, используемая для меток с префиксом.</param>
      <param name="fieldWidth">Ширина текстовых записей.</param>
      <param name="_labelWidth">
      </param>
      <param name="_fieldWidth">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.LookLikeInspector">
      <summary>
        <para>Сделать все EditorGUI похожими на упрощенные элементы управления представлением схемы.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.ObjectContent(UnityEngine.Object,System.Type)">
      <summary>
        <para>Возвращает объект GUIContent с именем и значком объекта.</para>
      </summary>
      <param name="obj">
      </param>
      <param name="type">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.PingObject(UnityEngine.Object)">
      <summary>
        <para>Пингуйте объект в сцене так же, как щелкаете по нему в инспекторе.</para>
      </summary>
      <param name="obj">Объект для проверки связи.</param>
      <param name="targetInstanceID">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.PingObject(System.Int32)">
      <summary>
        <para>Пингуйте объект в сцене так же, как щелкаете по нему в инспекторе.</para>
      </summary>
      <param name="obj">Объект для проверки связи.</param>
      <param name="targetInstanceID">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.PixelsToPoints(UnityEngine.Vector2)">
      <summary>
        <para>Преобразование позиции из пикселя в точечное пространство.</para>
      </summary>
      <param name="position">Позиция GUI в пространстве пикселей.</param>
      <returns>
        <para>Вектор, представляющий одно и то же положение в пространстве точек.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.PixelsToPoints(UnityEngine.Rect)">
      <summary>
        <para>Преобразование прямоугольника из пространства пикселей в пространство точек.</para>
      </summary>
      <param name="rect">Прямоугольник GUI, измеряемый в пикселях.</param>
      <returns>
        <para>Прямоугольник, представляющий ту же площадь в точках.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.PointsToPixels(UnityEngine.Vector2)">
      <summary>
        <para>Преобразование прямоугольника из пространства точек в пространство пикселей.</para>
      </summary>
      <param name="position">Прямоугольник GUI, измеряемый в пунктах.</param>
      <returns>
        <para>Прямоугольник, представляющий ту же область в пикселях.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.PointsToPixels(UnityEngine.Rect)">
      <summary>
        <para>Преобразует позицию из точки в пространство пикселей.</para>
      </summary>
      <param name="rect">Позиция GUI в пространстве точек.</param>
      <returns>
        <para>Та же позиция в пространстве пикселей.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.EditorGUIUtility.PropertyCallbackScope">
      <summary>
        <para>Указывает область, в которой обратный вызов вызывается перед визуализацией каждого свойства.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.PropertyCallbackScope.#ctor(System.Action`2&lt;UnityEngine.Rect,UnityEditor.SerializedProperty&gt;)">
      <summary>
        <para>Начать PropertyCallbackScope.</para>
      </summary>
      <param name="callback">Обратный вызов для каждого отображаемого свойства и перед началом рисования.</param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.PropertyCallbackScope.Dispose">
      <summary>
        <para>Освобождает обратный вызов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.QueueGameViewInputEvent(UnityEngine.Event)">
      <summary>
        <para>Отправить событие ввода в игру.</para>
      </summary>
      <param name="evt">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.RenderGameViewCameras(UnityEngine.Rect,System.Boolean,System.Boolean)">
      <summary>
        <para>Визуализация всех игровых камер.</para>
      </summary>
      <param name="cameraRect">Устройство координирует рендеринг всех игровых камер.</param>
      <param name="gizmos">Показать также гизмо.</param>
      <param name="gui">
      </param>
      <param name="statsRect">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.RenderGameViewCameras(UnityEngine.Rect,UnityEngine.Rect,System.Boolean,System.Boolean)">
      <summary>
        <para>Визуализация всех игровых камер.</para>
      </summary>
      <param name="cameraRect">Устройство координирует рендеринг всех игровых камер.</param>
      <param name="gizmos">Показать также гизмо.</param>
      <param name="gui">
      </param>
      <param name="statsRect">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.SetIconForObject(UnityEngine.Object,UnityEngine.Texture2D)">
      <summary>
        <para>Устанавливает пользовательский значок для связи с GameObject или MonoScript. Пользовательский значок отображается в представлении «Сцена» и в Инспекторе.</para>
      </summary>
      <param name="obj">GameObject или MonoScript, с которым нужно связать значок.</param>
      <param name="icon">Пользовательский значок для связи с GameObject или MonoScript. Если это значение равно null, восстанавливается значок по умолчанию.</param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.SetIconSize(UnityEngine.Vector2)">
      <summary>
        <para>Установить значки, отображаемые как часть GUIContent, для отображения определенного размера.</para>
      </summary>
      <param name="size">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.SetMainWindowPosition(UnityEngine.Rect)">
      <summary>
        <para>Устанавливает положение главного окна редактора Unity.</para>
      </summary>
      <param name="position">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.ShowObjectPicker(UnityEngine.Object,System.Boolean,System.String,System.Int32)">
      <summary>
        <para>Показать средство выбора объектов из кода.</para>
      </summary>
      <param name="obj">Объект, который будет выбран по умолчанию.</param>
      <param name="allowSceneObjects">Разрешен ли выбор объектов сцены или он должен отображать только активы.</param>
      <param name="searchFilter">Применяемый поисковый фильтр по умолчанию.</param>
      <param name="controlID">Идентификатор элемента управления, который необходимо установить. Это полезно, если вы показываете более одного из них. Вы можете получить значение позже.</param>
    </member>
    <member name="T:UnityEditor.EditorJsonUtility">
      <summary>
        <para>Вспомогательные функции для работы с данными JSON и объектами движка.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorJsonUtility.FromJsonOverwrite(System.String,System.Object)">
      <summary>
        <para>Перезаписать данные в объекте, прочитав его представление JSON.</para>
      </summary>
      <param name="json">Представление объекта в формате JSON.</param>
      <param name="objectToOverwrite">Объект для перезаписи.</param>
    </member>
    <member name="M:UnityEditor.EditorJsonUtility.ToJson(System.Object)">
      <summary>
        <para>Создайте JSON-представление объекта.</para>
      </summary>
      <param name="obj">Объект для преобразования в форму JSON.</param>
      <param name="prettyPrint">Если это правда, отформатируйте вывод для удобочитаемости. Если false, отформатируйте вывод для минимального размера. Значение по умолчанию — ложь.</param>
      <returns>
        <para>Данные объекта в формате JSON.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorJsonUtility.ToJson(System.Object,System.Boolean)">
      <summary>
        <para>Создайте JSON-представление объекта.</para>
      </summary>
      <param name="obj">Объект для преобразования в форму JSON.</param>
      <param name="prettyPrint">Если это правда, отформатируйте вывод для удобочитаемости. Если false, отформатируйте вывод для минимального размера. Значение по умолчанию — ложь.</param>
      <returns>
        <para>Данные объекта в формате JSON.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.EditorPrefs">
      <summary>
        <para>Хранит и получает доступ к настройкам редактора Unity.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorPrefs.DeleteAll">
      <summary>
        <para>Удаляет все ключи и значения из настроек. Используйте с осторожностью.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorPrefs.DeleteKey(System.String)">
      <summary>
        <para>Удаляет ключ и соответствующее ему значение из настроек.</para>
      </summary>
      <param name="key">
      </param>
    </member>
    <member name="M:UnityEditor.EditorPrefs.GetBool(System.String)">
      <summary>
        <para>Возвращает значение, соответствующее ключу в файле настроек, если он существует.</para>
      </summary>
      <param name="key">
      </param>
      <param name="defaultValue">
      </param>
    </member>
    <member name="M:UnityEditor.EditorPrefs.GetBool(System.String,System.Boolean)">
      <summary>
        <para>Возвращает значение, соответствующее ключу в файле настроек, если он существует.</para>
      </summary>
      <param name="key">
      </param>
      <param name="defaultValue">
      </param>
    </member>
    <member name="M:UnityEditor.EditorPrefs.GetFloat(System.String)">
      <summary>
        <para>Возвращает значение с плавающей запятой, соответствующее ключу, если он существует в файле настроек.</para>
      </summary>
      <param name="key">Имя ключа для чтения с плавающей запятой.</param>
      <param name="defaultValue">Плавающее значение, которое будет возвращено, если ключа нет в хранилище.</param>
      <returns>
        <para>Значение с плавающей запятой, хранящееся в файле настроек, или идентификатор defaultValue.
запрошенный поплавок не существует.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorPrefs.GetFloat(System.String,System.Single)">
      <summary>
        <para>Возвращает значение с плавающей запятой, соответствующее ключу, если он существует в файле настроек.</para>
      </summary>
      <param name="key">Имя ключа для чтения с плавающей запятой.</param>
      <param name="defaultValue">Плавающее значение, которое будет возвращено, если ключа нет в хранилище.</param>
      <returns>
        <para>Значение с плавающей запятой, хранящееся в файле настроек, или идентификатор defaultValue.
запрошенный поплавок не существует.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorPrefs.GetInt(System.String)">
      <summary>
        <para>Возвращает значение, соответствующее ключу в файле настроек, если он существует.</para>
      </summary>
      <param name="key">Имя ключа для чтения целого числа.</param>
      <param name="defaultValue">Целочисленное значение, которое будет возвращено, если ключа нет в хранилище.</param>
      <returns>
        <para>Значение, хранящееся в файле настроек.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorPrefs.GetInt(System.String,System.Int32)">
      <summary>
        <para>Возвращает значение, соответствующее ключу в файле настроек, если он существует.</para>
      </summary>
      <param name="key">Имя ключа для чтения целого числа.</param>
      <param name="defaultValue">Целочисленное значение, которое будет возвращено, если ключа нет в хранилище.</param>
      <returns>
        <para>Значение, хранящееся в файле настроек.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorPrefs.GetString(System.String)">
      <summary>
        <para>Возвращает значение, соответствующее ключу в файле настроек, если он существует.</para>
      </summary>
      <param name="key">
      </param>
      <param name="defaultValue">
      </param>
    </member>
    <member name="M:UnityEditor.EditorPrefs.GetString(System.String,System.String)">
      <summary>
        <para>Возвращает значение, соответствующее ключу в файле настроек, если он существует.</para>
      </summary>
      <param name="key">
      </param>
      <param name="defaultValue">
      </param>
    </member>
    <member name="M:UnityEditor.EditorPrefs.HasKey(System.String)">
      <summary>
        <para>Возвращает true, если ключ существует в файле настроек.</para>
      </summary>
      <param name="key">Имя ключа для проверки.</param>
      <returns>
        <para>Наличие или отсутствие ключа.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorPrefs.SetBool(System.String,System.Boolean)">
      <summary>
        <para>Устанавливает значение предпочтения, определяемого ключом.</para>
      </summary>
      <param name="key">
      </param>
      <param name="value">
      </param>
    </member>
    <member name="M:UnityEditor.EditorPrefs.SetFloat(System.String,System.Single)">
      <summary>
        <para>Устанавливает значение с плавающей запятой предпочтения, определяемого ключом.</para>
      </summary>
      <param name="key">Имя ключа для записи числа с плавающей запятой.</param>
      <param name="value">Плавающее значение для записи в хранилище.</param>
    </member>
    <member name="M:UnityEditor.EditorPrefs.SetInt(System.String,System.Int32)">
      <summary>
        <para>Задает значение параметра, определяемого ключом, как целое число.</para>
      </summary>
      <param name="key">Имя ключа для записи целого числа.</param>
      <param name="value">Значение целого числа для записи в хранилище.</param>
    </member>
    <member name="M:UnityEditor.EditorPrefs.SetString(System.String,System.String)">
      <summary>
        <para>Устанавливает значение предпочтения, определяемого ключом. Обратите внимание, что EditorPrefs не поддерживает нулевые строки и вместо этого сохраняет пустую строку.</para>
      </summary>
      <param name="key">
      </param>
      <param name="value">
      </param>
    </member>
    <member name="T:UnityEditor.EditorSelectedRenderState">
      <summary>
        <para>Редактор выбрал режим рендеринга для выбора просмотра сцены.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorSelectedRenderState.Hidden">
      <summary>
        <para>Средство визуализации не имеет выделения выделения или каркаса в редакторе.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorSelectedRenderState.Highlight">
      <summary>
        <para>В средстве визуализации есть выделение выделения, но нет каркаса в редакторе.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorSelectedRenderState.Wireframe">
      <summary>
        <para>Средство визуализации имеет каркас, но не выделяет выделение в редакторе.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.EditorSettings">
      <summary>
        <para>Пользовательские настройки для редактора Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.assetNamingUsesSpace">
      <summary>
        <para>Определяет, следует ли вставлять пробел перед числом в повторяющихся именах активов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.assetPipelineMode">
      <summary>
        <para>Выберите режим конвейера ресурсов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.asyncShaderCompilation">
      <summary>
        <para>Включить асинхронную компиляцию шейдеров в представлении «Игра» и «Сцена».</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.cacheServerDownloadBatchSize">
      <summary>
        <para>Управляет размером пакетов, используемых при выполнении запросов на загрузку сервера кэширования.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.cacheServerEnableAuth">
      <summary>
        <para>Включите или отключите аутентификацию на сервере кэширования.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.cacheServerEnableDownload">
      <summary>
        <para>Включите или включите загрузку с кэш-сервера.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.cacheServerEnableTls">
      <summary>
        <para>Переключите, следует ли включить шифрование TLS для кэширования сервера.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.cacheServerEnableUpload">
      <summary>
        <para>Включите или отключите загрузку с кэш-сервера.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.cacheServerEndpoint">
      <summary>
        <para>IP-адрес конечной точки сервера кэширования</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.cacheServerMode">
      <summary>
        <para>Выберите режим кэш-сервера</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.cacheServerNamespacePrefix">
      <summary>
        <para>Задает префикс пространства имен, который будет использоваться для кэш-сервера.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.cacheServerValidationMode">
      <summary>
        <para>Выберите режим проверки сервера Accelerator.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.cachingShaderPreprocessor">
      <summary>
        <para>Включает препроцессор кэширующего шейдера.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.disableCookiesInLightmapper">
      <summary>
        <para>Сейчас это свойство устарело. Используйте EditorSettings.enableCookiesInLightmapper. </para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.enableCookiesInLightmapper">
      <summary>
        <para>Определяет, должен ли Progressive Lightmapper оценивать файлы cookie во время расчета глобального освещения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.enableTextureStreamingInEditMode">
      <summary>
        <para>Включить систему потоковой передачи MIP-карт текстур в режиме редактирования.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.enableTextureStreamingInPlayMode">
      <summary>
        <para>Включить систему потоковой передачи MIP-карт текстур в режиме воспроизведения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.enterPlayModeOptions">
      <summary>
        <para>Определяет состояние параметров входа в режим воспроизведения в редакторе Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.enterPlayModeOptionsEnabled">
      <summary>
        <para>Определяет, включены ли параметры входа в режим воспроизведения в редакторе Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.gameObjectNamingDigits">
      <summary>
        <para>Указывает количество цифр, используемых для чисел в дублированном имени GameoObject.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.gameObjectNamingScheme">
      <summary>
        <para>Указывает, какую схему именования использовать для повторяющихся игровых объектов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.prefabModeAllowAutoSave">
      <summary>
        <para>Разрешить автоматическое сохранение в режиме Prefab для этого проекта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.prefabRegularEnvironment">
      <summary>
        <para>Позволяет указать сцену для использования в качестве префаба.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.prefabUIEnvironment">
      <summary>
        <para>Позволяет указать сцену для использования в качестве префаба пользовательского интерфейса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.projectGenerationRootNamespace">
      <summary>
        <para>Управляет тем, какое корневое пространство имен записывается в проекты c# .csproj, создаваемые Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.projectGenerationUserExtensions">
      <summary>
        <para>Управляет списком расширений файлов, которые будут включены в проекты c# .csproj, создаваемые Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.refreshImportMode">
      <summary>
        <para>Управляет использованием редактором параллельных процессов при импорте ресурсов во время обновления базы данных ресурсов для этого проекта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.serializeInlineMappingsOnOneLine">
      <summary>
        <para>Принуждает Unity записывать ссылки и другие встроенные сопоставления в одну строку, чтобы уменьшить шум управления версиями.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.spritePackerPaddingPower">
      <summary>
        <para>Значение степени двойки для добавления границы (отступа) к спрайтам, упакованным в Atlas (устаревший упаковщик спрайтов).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.unityRemoteCompression">
      <summary>
        <para>Получает или задает метод сжатия, используемый для потока экрана Unity Remote.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.unityRemoteDevice">
      <summary>
        <para>Получает или задает идентификатор устройства, используемый для функции Unity Remote.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.unityRemoteJoystickSource">
      <summary>
        <para>Получает или задает источник джойстика, используемый в редакторе при подключении Unity Remote.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.unityRemoteResolution">
      <summary>
        <para>Получает или задает разрешение, используемое для потока экрана Unity Remote.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.useLegacyProbeSampleCount">
      <summary>
        <para>Включите устаревшее фиксированное количество образцов для запекания световых зондов с Progressive Lightmapper.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.webSecurityEmulationEnabled">
      <summary>
        <para>Определяет, эмулирует ли редактор Unity ограничения сетевой безопасности веб-плеера.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.webSecurityEmulationHostUrl">
      <summary>
        <para>URL-адрес, на котором функция эмуляции веб-безопасности будет делать вид, что находится ваша игра.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.EditorSettings.NamingScheme">
      <summary>
        <para>Какую схему именования использовать для повторяющихся игровых объектов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorSettings.NamingScheme.Dot">
      <summary>
        <para>Добавляет точку, за которой следует число, к имени экземпляра или дубликата GameObject ("Prefab.1").</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorSettings.NamingScheme.SpaceParenthesis">
      <summary>
        <para>Добавляет пробел и число в круглых скобках к имени экземпляра или дубликата GameObject ("Prefab (1)").</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorSettings.NamingScheme.Underscore">
      <summary>
        <para>Добавляет подчеркивание и число к имени созданного или дублированного игрового объекта ("Prefab_1").</para>
      </summary>
    </member>
    <member name="T:UnityEditor.EditorSkin">
      <summary>
        <para>Перечисление, которое выбирает, какую обложку возвращать из EditorGUIUtility.GetBuiltinSkin.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorSkin.Game">
      <summary>
        <para>Скин, используемый для игровых просмотров.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorSkin.Inspector">
      <summary>
        <para>Скин, используемый для инспекторов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorSkin.Scene">
      <summary>
        <para>Тема оформления, используемая для просмотра сцен.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.EditorSnapSettings">
      <summary>
        <para>Управляйте поведением привязки дескриптора в редакторе.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSnapSettings.gridSnapEnabled">
      <summary>
        <para>Получает или задает, включена ли привязка к сетке.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.EditorSnapSettings.gridSnapEnabledChanged(System.Action)">
      <summary>
        <para>Обратный вызов запускается при изменении значения включенной привязки к сетке.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="P:UnityEditor.EditorSnapSettings.move">
      <summary>
        <para>Получает или задает приращение, к которому привязывается обработка преобразования.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSnapSettings.rotate">
      <summary>
        <para>Получает или задает приращение, к которому привязываются ручки поворота.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSnapSettings.scale">
      <summary>
        <para>Получает или задает приращение, к которому привязывается масштаб.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorSnapSettings.ResetSnapSettings">
      <summary>
        <para>Сбрасывает настройки EditorSnap на значения по умолчанию.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.EditorStyles">
      <summary>
        <para>Общие стили GUISty, используемые для элементов управления EditorGUI.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.boldFont">
      <summary>
        <para>Жирный шрифт.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.boldLabel">
      <summary>
        <para>Стиль жирной метки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.centeredGreyMiniLabel">
      <summary>
        <para>Стиль этикетки с мелким шрифтом по центру и серым цветом.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.colorField">
      <summary>
        <para>Стиль, используемый для заголовков полей «Цвет».</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.foldout">
      <summary>
        <para>Стиль, используемый для заголовков EditorGUI.Foldout.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.foldoutHeader">
      <summary>
        <para>Стиль, используемый для заголовков EditorGUILayout.BeginFoldoutHeaderGroup.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.foldoutHeaderIcon">
      <summary>
        <para>Стиль, используемый для значка для EditorGUILayout.BeginFoldoutHeaderGroup.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.foldoutPreDrop">
      <summary>
        <para>Стиль, используемый для заголовков EditorGUI.Foldout.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.helpBox">
      <summary>
        <para>Стиль, используемый для фонового окна для EditorGUI.HelpBox.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.iconButton">
      <summary>
        <para>Стиль, используемый для отдельной кнопки со значком.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.inspectorDefaultMargins">
      <summary>
        <para>Оберните содержимое в вертикальную группу с этим стилем, чтобы получить поля по умолчанию, используемые в Инспекторе.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.inspectorFullWidthMargins">
      <summary>
        <para>Оберните содержимое в вертикальную группу с этим стилем, чтобы получить поля полной ширины в Инспекторе.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.label">
      <summary>
        <para>Стиль, используемый для маркировки во всех перегрузках EditorGUI, которые принимают префиксную метку.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.largeLabel">
      <summary>
        <para>Стиль для этикетки с крупным шрифтом.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.layerMaskField">
      <summary>
        <para>Стиль, используемый для заголовков масок слоя.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.linkLabel">
      <summary>
        <para>Стиль, используемый для ссылок.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.miniBoldFont">
      <summary>
        <para>Жирный мини-шрифт.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.miniBoldLabel">
      <summary>
        <para>Стиль для миниатюрной полужирной метки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.miniButton">
      <summary>
        <para>Стиль, используемый для отдельной маленькой кнопки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.miniButtonLeft">
      <summary>
        <para>Стиль, используемый для самой левой кнопки в горизонтальной группе кнопок.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.miniButtonMid">
      <summary>
        <para>Стиль, используемый для средних кнопок в горизонтальной группе.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.miniButtonRight">
      <summary>
        <para>Стиль, используемый для самой правой кнопки в горизонтальной группе.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.miniFont">
      <summary>
        <para>Мини-шрифт.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.miniLabel">
      <summary>
        <para>Стиль для этикетки с мелким шрифтом.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.miniPullDown">
      <summary>
        <para>Стиль, используемый для раскрывающихся элементов управления.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.miniTextField">
      <summary>
        <para>Текстовое поле меньшего размера.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.numberField">
      <summary>
        <para>Стиль, используемый для редакторов полей для чисел.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.objectField">
      <summary>
        <para>Стиль, используемый для заголовков полей объекта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.objectFieldMiniThumb">
      <summary>
        <para>Стиль, используемый для полей объектов, имеющих миниатюру (например, Текстуры). </para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.objectFieldThumb">
      <summary>
        <para>Стиль, используемый для заголовков кнопки «Выбор» в полях объекта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.popup">
      <summary>
        <para>Стиль, используемый для EditorGUI.Popup, EditorGUI.EnumPopup,.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.radioButton">
      <summary>
        <para>Стиль, используемый для переключателя.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.selectionRect">
      <summary>
        <para>Стиль, используемый для рисования прямоугольника выделения в SceneView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.standardFont">
      <summary>
        <para>Стандартный шрифт.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.textArea">
      <summary>
        <para>Стиль, используемый для EditorGUI.TextArea.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.textField">
      <summary>
        <para>Стиль, используемый для EditorGUI.TextField.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.toggle">
      <summary>
        <para>Стиль, используемый для заголовков для EditorGUI.Toggle.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.toggleGroup">
      <summary>
        <para>Стиль, используемый для заголовков для EditorGUILayout.BeginToggleGroup.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.toolbar">
      <summary>
        <para>Фон панели инструментов сверху окон.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.toolbarButton">
      <summary>
        <para>Стиль кнопок и переключателей на панелях инструментов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.toolbarDropDown">
      <summary>
        <para>Выпадающий список панели инструментов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.toolbarPopup">
      <summary>
        <para>Всплывающее окно панели инструментов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.toolbarSearchField">
      <summary>
        <para>Поле поиска панели инструментов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.toolbarTextField">
      <summary>
        <para>Текстовое поле панели инструментов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.whiteBoldLabel">
      <summary>
        <para>Стиль для белой полужирной метки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.whiteLabel">
      <summary>
        <para>Стиль для белой этикетки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.whiteLargeLabel">
      <summary>
        <para>Стиль для белой большой этикетки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.whiteMiniLabel">
      <summary>
        <para>Стиль для белой мини-этикетки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.wordWrappedLabel">
      <summary>
        <para>Стиль для метки с переносом слов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.wordWrappedMiniLabel">
      <summary>
        <para>Стиль для мини-этикетки с переносом слов.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.EditorTools.EditorTool">
      <summary>
        <para>Используйте этот класс для реализации инструментов редактора. Это базовый класс, от которого унаследованы все инструменты редактора.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorTools.EditorTool.gridSnapEnabled">
      <summary>
        <para>Используйте это свойство, чтобы разрешить текущему EditorTool включать/отключать привязку к сетке.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorTools.EditorTool.target">
      <summary>
        <para>Проверяемый объект.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorTools.EditorTool.targets">
      <summary>
        <para>Массив проверяемых объектов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorTools.EditorTool.toolbarIcon">
      <summary>
        <para>Значок и подсказка для этого пользовательского редактора. Если эта функция не реализована, на панели инструментов отображается значок инспектора для целевого типа. Если тип цели не определен, на панели инструментов отображается значок режима инструмента.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorTools.EditorTool.IsAvailable">
      <summary>
        <para>Проверяет, доступен ли пользовательский инструмент редактора, в зависимости от состояния редактора.</para>
      </summary>
      <returns>
        <para>Возвращает true, если доступен пользовательский инструмент редактора. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorTools.EditorTool.OnActivated">
      <summary>
        <para>Вызванный после этого EditorTool становится активным инструментом.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorTools.EditorTool.OnToolGUI(UnityEditor.EditorWindow)">
      <summary>
        <para>Используйте этот метод для реализации пользовательского инструмента редактирования.</para>
      </summary>
      <param name="window">Окно, в котором отображается инструмент пользовательского редактора.</param>
    </member>
    <member name="M:UnityEditor.EditorTools.EditorTool.OnWillBeDeactivated">
      <summary>
        <para>Вызывается до того, как этот EditorTool перестанет быть активным инструментом.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.EditorTools.EditorToolAttribute">
      <summary>
        <para>Регистрирует EditorTool как глобальный инструмент или инструмент компонента для определенного целевого типа.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorTools.EditorToolAttribute.#ctor(System.String,System.Type,System.Type)">
      <summary>
        <para>Регистрирует EditorTool как инструмент Global или CustomEditor.</para>
      </summary>
      <param name="displayName">Имя для отображения в меню.</param>
      <param name="componentToolTarget">Установите тип, который может редактировать этот инструмент. Установите значение null, если инструмент не является инструментом компонента.</param>
      <param name="editorToolContext">Установите тип EditorToolContext, к которому относится этот инструмент. Когда EditorTool определяет область editorToolContext, этот инструмент не отображается в меню и должен быть активирован методом EditorToolContext.ResolveTool.</param>
    </member>
    <member name="M:UnityEditor.EditorTools.EditorToolAttribute.#ctor(System.String,System.Type)">
      <summary>
        <para>Регистрирует EditorTool как инструмент Global или CustomEditor.</para>
      </summary>
      <param name="displayName">Имя для отображения в меню.</param>
      <param name="componentToolTarget">Установите тип, который может редактировать этот инструмент. Установите значение null, если инструмент не является инструментом компонента.</param>
      <param name="editorToolContext">Установите тип EditorToolContext, к которому относится этот инструмент. Когда EditorTool определяет область editorToolContext, этот инструмент не отображается в меню и должен быть активирован методом EditorToolContext.ResolveTool.</param>
    </member>
    <member name="T:UnityEditor.EditorTools.EditorToolContext">
      <summary>
        <para>Используйте этот класс для реализации специализированных версий встроенных инструментов преобразования. Встроенные инструменты преобразования включают в себя «Перемещение», «Поворот», «Масштабирование», «Прямоугольник» и «Трансформирование».</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorTools.EditorToolContext.target">
      <summary>
        <para>Проверяемый объект.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorTools.EditorToolContext.targets">
      <summary>
        <para>Массив проверяемых объектов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorTools.EditorToolContext.GetEditorToolType(UnityEditor.Tool)">
      <summary>
        <para>Определяет тип EditorTool для данного инструмента.</para>
      </summary>
      <param name="tool">Инструмент, который необходимо преобразовать в тип EditorTool.</param>
      <returns>
        <para>Тип EditorTool для запрошенного инструмента.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorTools.EditorToolContext.OnActivated">
      <summary>
        <para>Вызывается после того, как этот EditorToolContext становится активным контекстом инструмента.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorTools.EditorToolContext.OnToolGUI(UnityEditor.EditorWindow)">
      <summary>
        <para>Реализует любую общую функциональность для набора инструментов манипулирования, доступных для этого контекста.</para>
      </summary>
      <param name="window">Окно, отображающее активный EditorTool.</param>
    </member>
    <member name="M:UnityEditor.EditorTools.EditorToolContext.OnWillBeDeactivated">
      <summary>
        <para>Вызывается до того, как этот EditorToolContext перестанет быть активным контекстом инструмента.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorTools.EditorToolContext.ResolveTool(UnityEditor.Tool)">
      <summary>
        <para>Возвращает соответствующий тип EditorTool для указанного инструмента с учетом контекста.</para>
      </summary>
      <param name="tool">Инструмент для преобразования в тип EditorTool.</param>
      <returns>
        <para>Тип EditorTool для запрошенного инструмента.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.EditorTools.EditorToolContextAttribute">
      <summary>
        <para>Регистрирует EditorToolContext либо как глобальный контекст, либо как контекст компонента для определенного целевого типа.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorTools.EditorToolContextAttribute.#ctor(System.String,System.Type)">
      <summary>
        <para>Регистрирует EditorToolContext либо как глобальный контекст инструмента, либо как контекст инструмента компонента.</para>
      </summary>
      <param name="displayName">Имя для отображения в меню.</param>
      <param name="targetType">Установите тип, который может редактировать этот инструмент. Установите значение null, если инструмент не является инструментом компонента.</param>
    </member>
    <member name="T:UnityEditor.EditorTools.GameObjectToolContext">
      <summary>
        <para>Этот класс представляет контекст по умолчанию для инструментов манипулирования. Когда GameObjectToolContext активен, инструменты манипулирования влияют на свойство преобразования GameObjects в выборе SceneView.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.EditorTools.IDrawSelectedHandles">
      <summary>
        <para>Реализуйте этот интерфейс для рисования маркеров, когда выделение содержит тип, на который нацелен EditorTool.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorTools.IDrawSelectedHandles.OnDrawHandles">
      <summary>
        <para>Реализуйте этот метод для рисования неинтерактивных маркеров, когда доступен пользовательский инструмент редактирования.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.EditorTools.ToolAttribute">
      <summary>
        <para>Базовый класс, от которого наследуются EditorToolAttribute и EditorToolContextAttribute.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorTools.ToolAttribute.displayName">
      <summary>
        <para>Имя, отображаемое в меню.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorTools.ToolAttribute.targetContext">
      <summary>
        <para>Если указано, EditorTool будет доступен только в том случае, если ToolManager.activeContextType равен targetContext.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorTools.ToolAttribute.targetType">
      <summary>
        <para>Установите тип, который может редактировать этот EditorTool или EditorToolContext. Установите значение null, если инструмент не относится к конкретному компоненту и должен быть доступен в любое время.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.EditorTools.ToolManager">
      <summary>
        <para>Этот класс управляет инструментами редактора в представлении «Сцена».</para>
      </summary>
    </member>
    <member name="?:UnityEditor.EditorTools.ToolManager.activeContextChanged(System.Action)">
      <summary>
        <para>Определяет обработчик событий при изменении активного EditorToolContext.</para>
      </summary>
      <param name="value">Событие, возникающее после изменения активного EditorToolContext.</param>
    </member>
    <member name="?:UnityEditor.EditorTools.ToolManager.activeContextChanging(System.Action)">
      <summary>
        <para>Определяет обработчик событий при изменении активного EditorToolContext.</para>
      </summary>
      <param name="value">Событие, возникающее перед изменением активного EditorToolContext.</param>
    </member>
    <member name="P:UnityEditor.EditorTools.ToolManager.activeContextType">
      <summary>
        <para>Получает активный в данный момент тип EditorToolContext. Значение по умолчанию — GameObjectToolContext.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.EditorTools.ToolManager.activeToolChanged(System.Action)">
      <summary>
        <para>Определяет обработчик событий при смене активного инструмента.</para>
      </summary>
      <param name="value">Событие, возникающее после смены активного инструмента.</param>
    </member>
    <member name="?:UnityEditor.EditorTools.ToolManager.activeToolChanging(System.Action)">
      <summary>
        <para>Определяет обработчик событий при смене активного инструмента.</para>
      </summary>
      <param name="value">Событие, возникающее перед сменой активного инструмента.</param>
    </member>
    <member name="P:UnityEditor.EditorTools.ToolManager.activeToolType">
      <summary>
        <para>Получает тип EditorTool, активного в данный момент.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorTools.ToolManager.IsActiveContext(UnityEditor.EditorTools.EditorToolContext)">
      <summary>
        <para>Проверить, является ли EditorToolContext в данный момент активным контекстом инструмента.</para>
      </summary>
      <param name="context">EditorToolContext для сравнения с контекстом активного инструмента.</param>
      <returns>
        <para>Возвращает true, если контекст активен, и false, если это не активный контекст.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorTools.ToolManager.IsActiveTool(UnityEditor.EditorTools.EditorTool)">
      <summary>
        <para>Проверьте, является ли EditorTool в настоящее время активным инструментом.</para>
      </summary>
      <param name="tool">EditorTool для сравнения с активным инструментом.</param>
      <returns>
        <para>Возвращает true, если инструмент активен, и false, если это не активный инструмент.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorTools.ToolManager.RestorePreviousPersistentTool">
      <summary>
        <para>Устанавливает последний использовавшийся глобальный инструмент EditorTool в качестве активного инструмента.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorTools.ToolManager.RestorePreviousTool">
      <summary>
        <para>Устанавливает последний использовавшийся EditorTool в качестве активного инструмента.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorTools.ToolManager.SetActiveContext(System.Type)">
      <summary>
        <para>Задает активный EditorToolContext.</para>
      </summary>
      <param name="context">Тип EditorToolContext, который будет установлен в качестве активного инструмента.</param>
    </member>
    <member name="M:UnityEditor.EditorTools.ToolManager.SetActiveContext">
      <summary>
        <para>Задает активный EditorToolContext.</para>
      </summary>
      <param name="context">Тип EditorToolContext, который будет установлен в качестве активного инструмента.</param>
    </member>
    <member name="M:UnityEditor.EditorTools.ToolManager.SetActiveTool">
      <summary>
        <para>Устанавливает активный EditorTool.</para>
      </summary>
      <param name="type">Тип EditorTool для установки в качестве активного инструмента.</param>
      <param name="tool">Экземпляр EditorTool для установки в качестве активного инструмента.</param>
    </member>
    <member name="M:UnityEditor.EditorTools.ToolManager.SetActiveTool(System.Type)">
      <summary>
        <para>Устанавливает активный EditorTool.</para>
      </summary>
      <param name="type">Тип EditorTool для установки в качестве активного инструмента.</param>
      <param name="tool">Экземпляр EditorTool для установки в качестве активного инструмента.</param>
    </member>
    <member name="M:UnityEditor.EditorTools.ToolManager.SetActiveTool(UnityEditor.EditorTools.EditorTool)">
      <summary>
        <para>Устанавливает активный EditorTool.</para>
      </summary>
      <param name="type">Тип EditorTool для установки в качестве активного инструмента.</param>
      <param name="tool">Экземпляр EditorTool для установки в качестве активного инструмента.</param>
    </member>
    <member name="T:UnityEditor.EditorUserBuildSettings">
      <summary>
        <para>Пользовательские настройки сборки для редактора</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.activeBuildTarget">
      <summary>
        <para>Текущая активная цель сборки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorUserBuildSettings.activeBuildTargetChanged">
      <summary>
        <para>Запускается в ответ на SwitchActiveBuildTarget.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.activeScriptCompilationDefines">
      <summary>
        <para>Директивы DEFINE для компилятора.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.allowDebugging">
      <summary>
        <para>Разрешить подключение отладчиков исходного кода.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.androidBuildSubtarget">
      <summary>
        <para>Варианты платформы Android.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.androidCreateSymbols">
      <summary>
        <para>Задает тип создаваемого пакета символов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.androidCreateSymbolsZip">
      <summary>
        <para>Установите значение true, чтобы создать файл символов.zip в том же месте, что и файл .apk или .aab.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.androidETC2Fallback">
      <summary>
        <para>Отказ от распаковки текстур ETC2 на устройствах Android, которые не поддерживают ETC2.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.androidUseLegacySdkTools">
      <summary>
        <para>Используйте устаревшие инструменты Android SDK для упаковки приложения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.buildAppBundle">
      <summary>
        <para>Установите значение true, чтобы создать пакет Android App Bundle (файл aab) вместо apk. Значение по умолчанию — false.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.buildScriptsOnly">
      <summary>
        <para>Включен ли только скрипт сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.buildWithDeepProfilingSupport">
      <summary>
        <para>Включает поддержку глубокого профилирования в проигрывателе.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.compressFilesInPackage">
      <summary>
        <para>Сжать файлы в пакете.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.compressWithPsArc">
      <summary>
        <para>Сборка данных, сжатых с помощью PSArc.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.connectProfiler">
      <summary>
        <para>Запустите плеер с подключением к профайлеру.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.development">
      <summary>
        <para>Включает сборку для разработки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.enableHeadlessMode">
      <summary>
        <para>Независимо от того, встроен ли автономный проигрыватель в безголовый режим.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.explicitArrayBoundsChecks">
      <summary>
        <para>Активно ли проверяются границы массива?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.explicitDivideByZeroChecks">
      <summary>
        <para>Деление на ноль активно проверяется?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.explicitNullChecks">
      <summary>
        <para>Нулевые ссылки активно проверяются?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.exportAsGoogleAndroidProject">
      <summary>
        <para>Экспорт проекта Android для использования с Android Studio/Gradle.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.forceInstallation">
      <summary>
        <para>Принудительная установка пакета, даже если ошибка.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.forceOptimizeScriptCompilation">
      <summary>
        <para>Принудительная полная оптимизация компиляции скриптов в сборках для разработки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.il2CppCodeGeneration">
      <summary>
        <para>Указывает параметр генерации кода для IL2CPP.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.installInBuildFolder">
      <summary>
        <para>Поместите собранный плеер в папку сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.iOSBuildConfigType">
      <summary>
        <para>Схема, с которой проект будет запускаться в Xcode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.iOSXcodeBuildConfig">
      <summary>
        <para>Схема, которую Xcode использует для запуска этого проекта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.macOSXcodeBuildConfig">
      <summary>
        <para>Схема, которую Xcode использует для запуска этого проекта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.managedDebuggerFixedPort">
      <summary>
        <para>Принудительно укажите порт, используемый управляемым отладчиком. Значение по умолчанию — 0, что означает автоматический выбор порта для конкретной платформы.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.movePackageToDiscOuterEdge">
      <summary>
        <para>Помещает пакет на внешний край диска.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.needSubmissionMaterials">
      <summary>
        <para>Создание материалов для отправки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.overrideMaxTextureSize">
      <summary>
        <para>Переопределение максимального размера текстуры при импорте ресурсов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.overrideTextureCompression">
      <summary>
        <para>Переопределение сжатия текстур при импорте ресурсов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.ps4BuildSubtarget">
      <summary>
        <para>Подцель сборки PS4.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.ps4HardwareTarget">
      <summary>
        <para>Указывает, на какую версию оборудования PS4 ориентироваться.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.selectedBuildTargetGroup">
      <summary>
        <para>Текущая выбранная целевая группа сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.selectedStandaloneTarget">
      <summary>
        <para>Текущая выбранная цель для автономной сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.standaloneBuildSubtarget">
      <summary>
        <para>Подцель автономной сборки для настольных компьютеров.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.streamingInstallLaunchRange">
      <summary>
        <para>При создании пакета потоковой установки Xbox One (makepkg.exe) код генерации макета в Unity назначит каждую сцену и связанные ресурсы отдельным частям. Unity пометит Сцену 0 как часть диапазона запуска, т.е. набор фрагментов, необходимых для запуска игры, вы можете включить дополнительные Сцены в этот диапазон запуска, если хотите, это указывает диапазон Сцен (начиная с 0), который будет входит в стартовый набор. </para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.symlinkLibraries">
      <summary>
        <para>Библиотеки времени выполнения Symlink с проектом iOS Xcode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.symlinkSources">
      <summary>
        <para>Источники символических ссылок при создании проекта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.waitForManagedDebugger">
      <summary>
        <para>Предписывает проигрывателю дождаться подключения управляемого отладчика перед выполнением любого кода скрипта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.waitForPlayerConnection">
      <summary>
        <para>Настраивает проигрыватель на ожидание соединения с проигрывателем при запуске проигрывателя.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.webGLBuildSubtarget">
      <summary>
        <para>Подцель сборки WebGL.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.webGLUsePreBuiltUnityEngine">
      <summary>
        <para>Используйте готовую версию JavaScript для движка Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.windowsDevicePortalAddress">
      <summary>
        <para>Указывает адрес подключения Windows DevicePortal устройства для развертывания и запуска приложения UWP при использовании сборки и запуска.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.windowsDevicePortalPassword">
      <summary>
        <para>Указывает пароль Windows DevicePortal для устройства, на котором будет развернуто и запущено приложение UWP при использовании сборки и запуска.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.windowsDevicePortalUsername">
      <summary>
        <para>Указывает имя пользователя Windows DevicePortal для устройства, на котором будет развернуто и запущено приложение UWP при использовании сборки и запуска.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.wsaBuildAndRunDeployTarget">
      <summary>
        <para>Задает и заставляет устройство Windows запускать приложение UWP при использовании команды "Сборка и запуск".</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.wsaSubtarget">
      <summary>
        <para>Задает и получает тип целевого устройства для запуска приложения при сборке для платформы Магазина Windows.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.wsaUWPBuildType">
      <summary>
        <para>Тип сборки для универсальной платформы Windows.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.wsaUWPSDK">
      <summary>
        <para>Задает и получает целевой SDK UWP для сборки приложения Магазина Windows.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.wsaUWPVisualStudioVersion">
      <summary>
        <para>Задает и получает версию Visual Studio для сборки приложения Магазина Windows.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.xboxBuildSubtarget">
      <summary>
        <para>Подцель Xbox Build.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.xboxOneDeployDrive">
      <summary>
        <para>Текущий выбранный диск для развертывания Xbox One.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.xboxOneDeployMethod">
      <summary>
        <para>Текущий выбранный метод развертывания Xbox One.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.xboxOneNetworkSharePath">
      <summary>
        <para>Путь к общей сетевой папке, например
МОЙ КОМПЬЮТЕР\ОБЩАЯ ПАПКА\.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.xboxOneRebootIfDeployFailsAndRetry">
      <summary>
        <para>Настраивает Xbox на перезагрузку и повторное развертывание в случае сбоя развертывания.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.xboxOneUsername">
      <summary>
        <para>Имя пользователя учетной записи Windows, связанное с общей папкой ПК.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorUserBuildSettings.GetBuildLocation(UnityEditor.BuildTarget)">
      <summary>
        <para>Получить текущее местоположение сборки.</para>
      </summary>
      <param name="target">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUserBuildSettings.GetPlatformSettings(System.String,System.String)">
      <summary>
        <para>Возвращает значение для настройки редактора для конкретной платформы.</para>
      </summary>
      <param name="platformName">Название платформы.</param>
      <param name="name">Название параметра.</param>
    </member>
    <member name="M:UnityEditor.EditorUserBuildSettings.SetBuildLocation(UnityEditor.BuildTarget,System.String)">
      <summary>
        <para>Задайте новое место для сборки.</para>
      </summary>
      <param name="target">
      </param>
      <param name="location">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUserBuildSettings.SetPlatformSettings(System.String,System.String,System.String)">
      <summary>
        <para>Задайте настройку редактора для конкретной платформы.</para>
      </summary>
      <param name="platformName">Название платформы.</param>
      <param name="name">Название параметра.</param>
      <param name="value">Значение параметра.</param>
    </member>
    <member name="M:UnityEditor.EditorUserBuildSettings.SwitchActiveBuildTarget(UnityEditor.BuildTarget)">
      <summary>
        <para>Выберите новую цель сборки, которая будет активной.</para>
      </summary>
      <param name="target">Целевая платформа сборки.</param>
      <param name="targetGroup">Создать целевую группу.</param>
      <returns>
        <para>Истина, если цель сборки была успешно переключена, и ложь в противном случае (например, если проверка лицензии не удалась, файлы отсутствуют или если пользователь отменил операцию через пользовательский интерфейс).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorUserBuildSettings.SwitchActiveBuildTarget(UnityEditor.BuildTargetGroup,UnityEditor.BuildTarget)">
      <summary>
        <para>Выберите новую цель сборки, которая будет активной.</para>
      </summary>
      <param name="target">Целевая платформа сборки.</param>
      <param name="targetGroup">Создать целевую группу.</param>
      <returns>
        <para>Истина, если цель сборки была успешно переключена, и ложь в противном случае (например, если проверка лицензии не удалась, файлы отсутствуют или если пользователь отменил операцию через пользовательский интерфейс).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorUserBuildSettings.SwitchActiveBuildTargetAsync(UnityEditor.BuildTargetGroup,UnityEditor.BuildTarget)">
      <summary>
        <para>Выберите новую цель сборки, которая будет активна во время следующего обновления редактора.</para>
      </summary>
      <param name="targetGroup">Целевая платформа сборки.</param>
      <param name="target">Создать целевую группу.</param>
      <returns>
        <para>Истина, если цель сборки была успешно переключена, и ложь в противном случае (например, если проверка лицензии не удалась, файлы отсутствуют или если пользователь отменил операцию через пользовательский интерфейс).</para>
      </returns>
    </member>
    <member name="T:UnityEditor.EditorUtility">
      <summary>
        <para>Служебные функции редактора.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUtility.scriptCompilationFailed">
      <summary>
        <para>Истинно, если в журнале есть какие-либо сообщения об ошибках компиляции.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorUtility.ClearDefaultParentObject(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Удаляет родительский GameObject по умолчанию либо из определенной сцены, либо из активной сцены.</para>
      </summary>
      <param name="scene">Укажите сцену, чтобы очистить родительский объект по умолчанию для конкретной сцены. Если сцена не указана, этот метод очищает родительский объект по умолчанию для активной сцены.</param>
    </member>
    <member name="M:UnityEditor.EditorUtility.ClearDefaultParentObject">
      <summary>
        <para>Удаляет родительский GameObject по умолчанию либо из определенной сцены, либо из активной сцены.</para>
      </summary>
      <param name="scene">Укажите сцену, чтобы очистить родительский объект по умолчанию для конкретной сцены. Если сцена не указана, этот метод очищает родительский объект по умолчанию для активной сцены.</param>
    </member>
    <member name="M:UnityEditor.EditorUtility.ClearDirty(UnityEngine.Object)">
      <summary>
        <para>Очистить грязный флаг цели.</para>
      </summary>
      <param name="target">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.ClearProgressBar">
      <summary>
        <para>Удаляет индикатор выполнения.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorUtility.CollectDeepHierarchy(UnityEngine.Object[])">
      <summary>
        <para>Соберите все объекты в иерархии, укорененные в каждом из заданных объектов.</para>
      </summary>
      <param name="roots">Массив объектов, с которых начнется поиск.</param>
      <returns>
        <para>Массив объектов, иерархически присоединенных к массиву поиска.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorUtility.CollectDependencies(UnityEngine.Object[])">
      <summary>
        <para>Вычисляет и возвращает список всех активов, от которых зависят активы, перечисленные в корнях.</para>
      </summary>
      <param name="roots">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.CompressCubemapTexture(UnityEngine.Cubemap,UnityEngine.TextureFormat,System.Int32)">
      <summary>
        <para>Сжать текстуру кубической карты.</para>
      </summary>
      <param name="texture">
      </param>
      <param name="format">
      </param>
      <param name="quality">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.CompressCubemapTexture(UnityEngine.Cubemap,UnityEngine.TextureFormat,UnityEditor.TextureCompressionQuality)">
      <summary>
        <para>Сжать текстуру кубической карты.</para>
      </summary>
      <param name="texture">
      </param>
      <param name="format">
      </param>
      <param name="quality">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.CompressTexture(UnityEngine.Texture2D,UnityEngine.TextureFormat,System.Int32)">
      <summary>
        <para>Сжать текстуру.</para>
      </summary>
      <param name="texture">
      </param>
      <param name="format">
      </param>
      <param name="quality">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.CompressTexture(UnityEngine.Texture2D,UnityEngine.TextureFormat,UnityEditor.TextureCompressionQuality)">
      <summary>
        <para>Сжать текстуру.</para>
      </summary>
      <param name="texture">
      </param>
      <param name="format">
      </param>
      <param name="quality">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.CopySerialized(UnityEngine.Object,UnityEngine.Object)">
      <summary>
        <para>Скопируйте все настройки объекта Unity.</para>
      </summary>
      <param name="source">
      </param>
      <param name="dest">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.CopySerializedIfDifferent(UnityEngine.Object,UnityEngine.Object)">
      <summary>
        <para>Скопируйте все настройки объекта Unity во второй объект, если они отличаются.</para>
      </summary>
      <param name="source">
      </param>
      <param name="dest">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.CopySerializedManagedFieldsOnly(System.Object,System.Object)">
      <summary>
        <para>Копирует сериализуемые поля из одного управляемого объекта в другой.</para>
      </summary>
      <param name="source">Объект, из которого копируются данные.</param>
      <param name="dest">Объект для копирования данных.</param>
    </member>
    <member name="M:UnityEditor.EditorUtility.CreateGameObjectWithHideFlags(System.String,UnityEngine.HideFlags,System.Type[])">
      <summary>
        <para>Создает игровой объект с HideFlags и указанными компонентами.</para>
      </summary>
      <param name="name">
      </param>
      <param name="flags">
      </param>
      <param name="components">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.DisplayCancelableProgressBar(System.String,System.String,System.Single)">
      <summary>
        <para>Отображает или обновляет индикатор выполнения с кнопкой отмены.</para>
      </summary>
      <param name="title">
      </param>
      <param name="info">
      </param>
      <param name="progress">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.DisplayDialog(System.String,System.String,System.String)">
      <summary>
        <para>Этот метод отображает модальное диалоговое окно.</para>
      </summary>
      <param name="title">Заголовок окна сообщения.</param>
      <param name="message">Текст сообщения.</param>
      <param name="ok">Метка, отображаемая на кнопке диалога OK.</param>
      <param name="cancel">Метка, отображаемая на кнопке диалогового окна «Отмена».</param>
      <returns>
        <para>Возвращает true, если пользователь нажимает кнопку OK. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorUtility.DisplayDialog(System.String,System.String,System.String,System.String)">
      <summary>
        <para>Этот метод отображает модальное диалоговое окно.</para>
      </summary>
      <param name="title">Заголовок окна сообщения.</param>
      <param name="message">Текст сообщения.</param>
      <param name="ok">Метка, отображаемая на кнопке диалога OK.</param>
      <param name="cancel">Метка, отображаемая на кнопке диалогового окна «Отмена».</param>
      <returns>
        <para>Возвращает true, если пользователь нажимает кнопку OK. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorUtility.DisplayDialog(System.String,System.String,System.String,UnityEditor.DialogOptOutDecisionType,System.String)">
      <summary>
        <para>Этот метод отображает модальное диалоговое окно, которое позволяет пользователю отказаться от повторного отображения текущего диалогового окна.</para>
      </summary>
      <param name="title">Заголовок окна сообщения.</param>
      <param name="message">Текст сообщения.</param>
      <param name="ok">Метка, отображаемая на кнопке диалога OK.</param>
      <param name="cancel">Метка, отображаемая на кнопке диалогового окна «Отмена».</param>
      <param name="dialogOptOutDecisionType">Тип решения об отказе, которое может принять пользователь.</param>
      <param name="dialogOptOutDecisionStorageKey">Уникальная настройка ключа для сохранения решения под.</param>
      <returns>
        <para>Значение true, если пользователь нажимает кнопку «ОК» или ранее отказался. Возвращает false, если пользователь отменяет или закрывает диалоговое окно, не приняв решения.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorUtility.DisplayDialog(System.String,System.String,System.String,System.String,UnityEditor.DialogOptOutDecisionType,System.String)">
      <summary>
        <para>Этот метод отображает модальное диалоговое окно, которое позволяет пользователю отказаться от повторного отображения текущего диалогового окна.</para>
      </summary>
      <param name="title">Заголовок окна сообщения.</param>
      <param name="message">Текст сообщения.</param>
      <param name="ok">Метка, отображаемая на кнопке диалога OK.</param>
      <param name="cancel">Метка, отображаемая на кнопке диалогового окна «Отмена».</param>
      <param name="dialogOptOutDecisionType">Тип решения об отказе, которое может принять пользователь.</param>
      <param name="dialogOptOutDecisionStorageKey">Уникальная настройка ключа для сохранения решения под.</param>
      <returns>
        <para>Значение true, если пользователь нажимает кнопку «ОК» или ранее отказался. Возвращает false, если пользователь отменяет или закрывает диалоговое окно, не приняв решения.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorUtility.DisplayDialogComplex(System.String,System.String,System.String,System.String,System.String)">
      <summary>
        <para>Отображает модальное диалоговое окно с тремя кнопками.</para>
      </summary>
      <param name="title">Название диалога.</param>
      <param name="message">Цель диалога.</param>
      <param name="ok">Выбрана функция диалога.</param>
      <param name="cancel">Закрыть диалоговое окно без каких-либо действий.</param>
      <param name="alt">Выберите альтернативное назначение диалога.</param>
      <returns>
        <para>Возвращает идентификатор выбранной кнопки. Идентификаторы 0, 1 или 2 соответствуют кнопкам ok, cancel и alt соответственно.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorUtility.DisplayPopupMenu(UnityEngine.Rect,System.String,UnityEditor.MenuCommand)">
      <summary>
        <para>Отображает всплывающее меню.</para>
      </summary>
      <param name="position">
      </param>
      <param name="menuItemPath">
      </param>
      <param name="command">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.DisplayProgressBar(System.String,System.String,System.Single)">
      <summary>
        <para>Отображает или обновляет индикатор выполнения.</para>
      </summary>
      <param name="title">
      </param>
      <param name="info">
      </param>
      <param name="progress">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.FocusProjectWindow">
      <summary>
        <para>Выводит окно проекта на передний план и фокусирует его.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorUtility.FormatBytes(System.Int32)">
      <summary>
        <para>Возвращает текст для количества байтов.</para>
      </summary>
      <param name="bytes">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.GetDialogOptOutDecision(UnityEditor.DialogOptOutDecisionType,System.String)">
      <summary>
        <para>Этот метод отображает модальное диалоговое окно, которое позволяет пользователю отказаться от повторного отображения текущего диалогового окна.</para>
      </summary>
      <param name="dialogOptOutDecisionType">Тип решения об отказе, которое может принять пользователь.</param>
      <param name="dialogOptOutDecisionStorageKey">Уникальная настройка ключа для сохранения решения под.</param>
      <returns>
        <para>Значение true, если пользователь ранее отказался от просмотра диалогового окна, связанного с dialogOptOutDecisionStorageKey. Возвращает false, если пользователь еще не отказался.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorUtility.GetDirtyCount(System.Int32)">
      <summary>
        <para>Возвращает целое число, указывающее, сколько раз изменялись сериализованные свойства указанного объекта.</para>
      </summary>
      <param name="instanceID">Идентификатор экземпляра объекта.</param>
      <param name="target">Объект.</param>
    </member>
    <member name="M:UnityEditor.EditorUtility.GetDirtyCount(UnityEngine.Object)">
      <summary>
        <para>Возвращает целое число, указывающее, сколько раз изменялись сериализованные свойства указанного объекта.</para>
      </summary>
      <param name="instanceID">Идентификатор экземпляра объекта.</param>
      <param name="target">Объект.</param>
    </member>
    <member name="M:UnityEditor.EditorUtility.GetObjectEnabled(UnityEngine.Object)">
      <summary>
        <para>Включен ли объект (0 отключен, 1 включен, -1 не имеет включенной кнопки).</para>
      </summary>
      <param name="target">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.InstanceIDToObject(System.Int32)">
      <summary>
        <para>Преобразует идентификатор экземпляра в ссылку на объект.</para>
      </summary>
      <param name="instanceID">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.IsDirty(System.Int32)">
      <summary>
        <para>Получает логическое значение, указывающее, изменился ли указанный объект с момента последнего сохранения.</para>
      </summary>
      <param name="instanceID">Идентификатор экземпляра объекта.</param>
      <param name="target">Объект.</param>
      <returns>
        <para>Истинно, если объект изменился; в противном случае ложь.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorUtility.IsDirty(UnityEngine.Object)">
      <summary>
        <para>Получает логическое значение, указывающее, изменился ли указанный объект с момента последнего сохранения.</para>
      </summary>
      <param name="instanceID">Идентификатор экземпляра объекта.</param>
      <param name="target">Объект.</param>
      <returns>
        <para>Истинно, если объект изменился; в противном случае ложь.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorUtility.IsPersistent(UnityEngine.Object)">
      <summary>
        <para>Определяет, хранится ли объект на диске.</para>
      </summary>
      <param name="target">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.IsRunningUnderCPUEmulation">
      <summary>
        <para>Получает логическое значение. Это значение указывает, не может ли ваш процессор запускать Unity в исходном режиме и работает ли он в эмулированной версии.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorUtility.NaturalCompare(System.String,System.String)">
      <summary>
        <para>Сортировка по-человечески.</para>
      </summary>
      <param name="a">
      </param>
      <param name="b">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.OpenFilePanel(System.String,System.String,System.String)">
      <summary>
        <para>Отображает диалоговое окно «Открыть файл» и возвращает выбранный путь.</para>
      </summary>
      <param name="title">
      </param>
      <param name="directory">
      </param>
      <param name="extension">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.OpenFilePanelWithFilters(System.String,System.String,System.String[])">
      <summary>
        <para>Отображает диалоговое окно «Открыть файл» и возвращает выбранный путь.</para>
      </summary>
      <param name="title">Название диалога.</param>
      <param name="directory">Каталог по умолчанию.</param>
      <param name="filters">Расширения файлов в виде { "Файлы изображений", "png,jpg,jpeg", "Все файлы", "*" }.</param>
    </member>
    <member name="M:UnityEditor.EditorUtility.OpenFolderPanel(System.String,System.String,System.String)">
      <summary>
        <para>Отображает диалоговое окно "открыть папку" и возвращает выбранный путь.</para>
      </summary>
      <param name="title">
      </param>
      <param name="folder">
      </param>
      <param name="defaultName">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.OpenPropertyEditor(UnityEngine.Object)">
      <summary>
        <para>Откройте редактор свойств объекта.</para>
      </summary>
      <param name="obj">Объект для открытия в редакторе свойств.</param>
    </member>
    <member name="M:UnityEditor.EditorUtility.RequestScriptReload">
      <summary>
        <para>Редактор Unity перезагружает сборки сценариев асинхронно в следующем кадре. Это сбрасывает состояние всех скриптов, но Unity не компилирует код, который изменился с момента предыдущей компиляции.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorUtility.SaveFilePanel(System.String,System.String,System.String,System.String)">
      <summary>
        <para>Отображает диалоговое окно «сохранить файл» и возвращает выбранный путь.</para>
      </summary>
      <param name="title">
      </param>
      <param name="directory">
      </param>
      <param name="defaultName">
      </param>
      <param name="extension">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.SaveFilePanelInProject(System.String,System.String,System.String,System.String)">
      <summary>
        <para>Отображает диалоговое окно «сохранить файл» в папке «Активы» проекта и возвращает выбранный путь.</para>
      </summary>
      <param name="title">
      </param>
      <param name="defaultName">
      </param>
      <param name="extension">
      </param>
      <param name="message">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.SaveFolderPanel(System.String,System.String,System.String)">
      <summary>
        <para>Отображает диалоговое окно «сохранить папку» и возвращает выбранный путь.</para>
      </summary>
      <param name="title">
      </param>
      <param name="folder">
      </param>
      <param name="defaultName">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.SetCameraAnimateMaterials(UnityEngine.Camera,System.Boolean)">
      <summary>
        <para>Разрешает этой камере анимацию материалов в редакторе.</para>
      </summary>
      <param name="camera">
      </param>
      <param name="animate">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.SetCameraAnimateMaterialsTime(UnityEngine.Camera,System.Single)">
      <summary>
        <para>Устанавливает глобальное время для этой камеры, которое будет использоваться при рендеринге.</para>
      </summary>
      <param name="camera">
      </param>
      <param name="time">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.SetCustomDiffTool(System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>
        <para>Задайте пользовательские настройки инструмента сравнения.</para>
      </summary>
      <param name="path">Траектория инструмента Diff.</param>
      <param name="twoWayDiff">Двухсторонняя командная строка diff.</param>
      <param name="threeWayDiff">Трехсторонняя командная строка diff.</param>
      <param name="mergeCommand">Объединить командную строку.</param>
      <param name="forceEnableCustomTool">Устанавливает пользовательский инструмент в качестве текущего активного инструмента управления версиями Diff/Merge.</param>
    </member>
    <member name="M:UnityEditor.EditorUtility.SetDefaultParentObject(UnityEngine.GameObject)">
      <summary>
        <para>Задает родительский объект по умолчанию для активной сцены.</para>
      </summary>
      <param name="defaultParentObject">GameObject для установки в качестве родительского объекта по умолчанию.</param>
    </member>
    <member name="M:UnityEditor.EditorUtility.SetDialogOptOutDecision(UnityEditor.DialogOptOutDecisionType,System.String,System.Boolean)">
      <summary>
        <para>Этот метод отображает модальное диалоговое окно, которое позволяет пользователю отказаться от повторного отображения текущего диалогового окна.</para>
      </summary>
      <param name="dialogOptOutDecisionType">Тип решения об отказе, которое может принять пользователь.</param>
      <param name="dialogOptOutDecisionStorageKey">Уникальная настройка ключа для сохранения решения под.</param>
      <param name="optOutDecision">Уникальная настройка ключа для сохранения решения под.</param>
    </member>
    <member name="M:UnityEditor.EditorUtility.SetDirty(UnityEngine.Object)">
      <summary>
        <para>Помечает целевой объект как грязный.</para>
      </summary>
      <param name="target">Объект, который следует пометить как грязный.</param>
    </member>
    <member name="M:UnityEditor.EditorUtility.SetObjectEnabled(UnityEngine.Object,System.Boolean)">
      <summary>
        <para>Установить включенное состояние объекта.</para>
      </summary>
      <param name="target">
      </param>
      <param name="enabled">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.SetSelectedRenderState(UnityEngine.Renderer,UnityEditor.EditorSelectedRenderState)">
      <summary>
        <para>Установите выбранный режим отображения Scene View для этого средства визуализации.</para>
      </summary>
      <param name="renderer">
      </param>
      <param name="renderState">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.SetSelectedWireframeHidden(UnityEngine.Renderer,System.Boolean)">
      <summary>
        <para>Определяет, будет ли скрыт каркас выбранного средства визуализации при выборе игрового объекта, к которому он прикреплен.</para>
      </summary>
      <param name="renderer">
      </param>
      <param name="enabled">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.UnloadUnusedAssetsImmediate">
      <summary>
        <para>Выгружает активы, которые не используются.</para>
      </summary>
      <param name="ignoreReferencesFromScript">При значении true удалять активы, даже если они связаны в скриптах.</param>
    </member>
    <member name="M:UnityEditor.EditorUtility.UnloadUnusedAssetsImmediate">
      <summary>
        <para>Выгружает активы, которые не используются.</para>
      </summary>
      <param name="ignoreReferencesFromScript">При значении true удалять активы, даже если они связаны в скриптах.</param>
    </member>
    <member name="M:UnityEditor.EditorUtility.UpdateGlobalShaderProperties(System.Single)">
      <summary>
        <para>Обновляет глобальные свойства шейдера для использования при рендеринге.</para>
      </summary>
      <param name="time">Время использования. -1 для отключения.</param>
    </member>
    <member name="T:UnityEditor.EditorWindow">
      <summary>
        <para>Унаследуйте от этого класса, чтобы создать окно редактора.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.autoRepaintOnSceneChange">
      <summary>
        <para>Окно автоматически перерисовывается при изменении сцены?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.docked">
      <summary>
        <para>Возвращает true, если EditorWindow закреплен.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.focusedWindow">
      <summary>
        <para>EditorWindow, который в настоящее время имеет фокус клавиатуры. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.hasFocus">
      <summary>
        <para>Возвращает true, если EditorWindow находится в фокусе.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.hasUnsavedChanges">
      <summary>
        <para>Это свойство указывает, будет ли редактор предлагать пользователю сохранить или отменить несохраненные изменения перед закрытием окна.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.maximized">
      <summary>
        <para>Это окно развернуто?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.maxSize">
      <summary>
        <para>Максимальный размер этого окна, когда оно плавающее или модальное. Максимальный размер не используется, когда окно закреплено.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.minSize">
      <summary>
        <para>Минимальный размер этого окна, когда оно плавающее или модальное. Минимальный размер не используется, когда окно закреплено.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.mouseOverWindow">
      <summary>
        <para>EditorWindow в данный момент находится под курсором мыши. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.position">
      <summary>
        <para>Желаемое положение окна в пространстве экрана.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.rootVisualElement">
      <summary>
        <para>Извлекает корневой визуальный элемент этой иерархии окон.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.saveChangesMessage">
      <summary>
        <para>Сообщение, которое отображается пользователю, если ему предлагается сохранить</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.title">
      <summary>
        <para>Заголовок этого окна.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.titleContent">
      <summary>
        <para>GUIContent, используемый для отображения заголовка EditorWindows.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.wantsLessLayoutEvents">
      <summary>
        <para>Указывает, выполняется ли передача макета перед всеми пользовательскими событиями (например, EventType.MouseDown или EventType, KeyDown) или только перед событиями перерисовки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.wantsMouseEnterLeaveWindow">
      <summary>
        <para>Проверяет, принимаются ли события MouseEnterWindow и MouseLeaveWindow в графическом интерфейсе в этом окне редактора.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.wantsMouseMove">
      <summary>
        <para>Проверяет, принимаются ли события MouseMove в графическом интерфейсе в этом окне редактора.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorWindow.BeginWindows">
      <summary>
        <para>Отметьте начальную область всех всплывающих окон.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorWindow.Close">
      <summary>
        <para>Закройте окно редактора.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorWindow.CreateWindow(System.Type[])">
      <summary>
        <para>Создает EditorWindow типа T.</para>
      </summary>
      <param name="T">Тип окна. Должен быть производным от EditorWindow.</param>
      <param name="title">Заголовок созданного окна. Если это значение равно null, используйте имя класса в качестве заголовка.</param>
      <param name="desiredDockNextTo">Массив типов EditorWindow, к которым будет пытаться пристыковаться окно.</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.CreateWindow(System.String,System.Type[])">
      <summary>
        <para>Создает EditorWindow типа T.</para>
      </summary>
      <param name="T">Тип окна. Должен быть производным от EditorWindow.</param>
      <param name="title">Заголовок созданного окна. Если это значение равно null, используйте имя класса в качестве заголовка.</param>
      <param name="desiredDockNextTo">Массив типов EditorWindow, к которым будет пытаться пристыковаться окно.</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.DiscardChanges">
      <summary>
        <para>Отменяет несохраненные изменения содержимого окна.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorWindow.EndWindows">
      <summary>
        <para>Закрыть группу окон, начатую с помощью EditorWindow.BeginWindows.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorWindow.Focus">
      <summary>
        <para>Перемещает фокус клавиатуры на другое окно EditorWindow.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorWindow.FocusWindowIfItsOpen(System.Type)">
      <summary>
        <para>Фокусирует первое найденное окно EditorWindow указанного типа, если оно открыто.</para>
      </summary>
      <param name="t">Тип окна. Должен быть производным от EditorWindow.</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.FocusWindowIfItsOpen">
      <summary>
        <para>Фокусирует первое найденное окно EditorWindow типа T, если оно открыто.</para>
      </summary>
      <param name="T">Тип окна. Должен быть производным от EditorWindow.</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetExtraPaneTypes">
      <summary>
        <para>Получает дополнительные панели, связанные с окном.</para>
      </summary>
      <returns>
        <para>Дополнительные панели, относящиеся к окну.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindow(System.Type)">
      <summary>
        <para>Возвращает первое окно EditorWindow типа t, которое в данный момент находится на экране.</para>
      </summary>
      <param name="t">Тип окна. Должен быть производным от EditorWindow.</param>
      <param name="utility">Установите значение true, чтобы создать плавающее окно утилиты, и значение false, чтобы создать обычное окно.</param>
      <param name="title">Если GetWindow создаст новое окно, оно получит этот заголовок. Если это значение равно null, используйте имя класса в качестве заголовка.</param>
      <param name="focus">Давать ли фокус окну, если оно уже существует. (Если GetWindow создаст новое окно, оно всегда получит фокус).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindow(System.Type,System.Boolean)">
      <summary>
        <para>Возвращает первое окно EditorWindow типа t, которое в данный момент находится на экране.</para>
      </summary>
      <param name="t">Тип окна. Должен быть производным от EditorWindow.</param>
      <param name="utility">Установите значение true, чтобы создать плавающее окно утилиты, и значение false, чтобы создать обычное окно.</param>
      <param name="title">Если GetWindow создаст новое окно, оно получит этот заголовок. Если это значение равно null, используйте имя класса в качестве заголовка.</param>
      <param name="focus">Давать ли фокус окну, если оно уже существует. (Если GetWindow создаст новое окно, оно всегда получит фокус).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindow(System.Type,System.Boolean,System.String)">
      <summary>
        <para>Возвращает первое окно EditorWindow типа t, которое в данный момент находится на экране.</para>
      </summary>
      <param name="t">Тип окна. Должен быть производным от EditorWindow.</param>
      <param name="utility">Установите значение true, чтобы создать плавающее окно утилиты, и значение false, чтобы создать обычное окно.</param>
      <param name="title">Если GetWindow создаст новое окно, оно получит этот заголовок. Если это значение равно null, используйте имя класса в качестве заголовка.</param>
      <param name="focus">Давать ли фокус окну, если оно уже существует. (Если GetWindow создаст новое окно, оно всегда получит фокус).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindow(System.Type,System.Boolean,System.String,System.Boolean)">
      <summary>
        <para>Возвращает первое окно EditorWindow типа t, которое в данный момент находится на экране.</para>
      </summary>
      <param name="t">Тип окна. Должен быть производным от EditorWindow.</param>
      <param name="utility">Установите значение true, чтобы создать плавающее окно утилиты, и значение false, чтобы создать обычное окно.</param>
      <param name="title">Если GetWindow создаст новое окно, оно получит этот заголовок. Если это значение равно null, используйте имя класса в качестве заголовка.</param>
      <param name="focus">Давать ли фокус окну, если оно уже существует. (Если GetWindow создаст новое окно, оно всегда получит фокус).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindow">
      <summary>
        <para>Возвращает первое окно EditorWindow типа T, которое в данный момент находится на экране.</para>
      </summary>
      <param name="T">Тип окна. Должен быть производным от EditorWindow.</param>
      <param name="utility">Установите значение true, чтобы создать плавающее окно утилиты, и значение false, чтобы создать обычное окно.</param>
      <param name="title">Если GetWindow создаст новое окно, оно получит этот заголовок. Если это значение равно null, используйте имя класса в качестве заголовка.</param>
      <param name="focus">Давать ли фокус окну, если оно уже существует. (Если GetWindow создаст новое окно, оно всегда получит фокус).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindow(System.Boolean)">
      <summary>
        <para>Возвращает первое окно EditorWindow типа T, которое в данный момент находится на экране.</para>
      </summary>
      <param name="T">Тип окна. Должен быть производным от EditorWindow.</param>
      <param name="utility">Установите значение true, чтобы создать плавающее окно утилиты, и значение false, чтобы создать обычное окно.</param>
      <param name="title">Если GetWindow создаст новое окно, оно получит этот заголовок. Если это значение равно null, используйте имя класса в качестве заголовка.</param>
      <param name="focus">Давать ли фокус окну, если оно уже существует. (Если GetWindow создаст новое окно, оно всегда получит фокус).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindow(System.Boolean,System.String)">
      <summary>
        <para>Возвращает первое окно EditorWindow типа T, которое в данный момент находится на экране.</para>
      </summary>
      <param name="T">Тип окна. Должен быть производным от EditorWindow.</param>
      <param name="utility">Установите значение true, чтобы создать плавающее окно утилиты, и значение false, чтобы создать обычное окно.</param>
      <param name="title">Если GetWindow создаст новое окно, оно получит этот заголовок. Если это значение равно null, используйте имя класса в качестве заголовка.</param>
      <param name="focus">Давать ли фокус окну, если оно уже существует. (Если GetWindow создаст новое окно, оно всегда получит фокус).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindow(System.String)">
      <summary>
        <para>Возвращает первое окно EditorWindow типа T, которое в данный момент находится на экране.</para>
      </summary>
      <param name="T">Тип окна. Должен быть производным от EditorWindow.</param>
      <param name="utility">Установите значение true, чтобы создать плавающее окно утилиты, и значение false, чтобы создать обычное окно.</param>
      <param name="title">Если GetWindow создаст новое окно, оно получит этот заголовок. Если это значение равно null, используйте имя класса в качестве заголовка.</param>
      <param name="focus">Давать ли фокус окну, если оно уже существует. (Если GetWindow создаст новое окно, оно всегда получит фокус).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindow(System.String,System.Boolean)">
      <summary>
        <para>Возвращает первое окно EditorWindow типа T, которое в данный момент находится на экране.</para>
      </summary>
      <param name="T">Тип окна. Должен быть производным от EditorWindow.</param>
      <param name="utility">Установите значение true, чтобы создать плавающее окно утилиты, и значение false, чтобы создать обычное окно.</param>
      <param name="title">Если GetWindow создаст новое окно, оно получит этот заголовок. Если это значение равно null, используйте имя класса в качестве заголовка.</param>
      <param name="focus">Давать ли фокус окну, если оно уже существует. (Если GetWindow создаст новое окно, оно всегда получит фокус).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindow(System.Boolean,System.String,System.Boolean)">
      <summary>
        <para>Возвращает первое окно EditorWindow типа T, которое в данный момент находится на экране.</para>
      </summary>
      <param name="T">Тип окна. Должен быть производным от EditorWindow.</param>
      <param name="utility">Установите значение true, чтобы создать плавающее окно утилиты, и значение false, чтобы создать обычное окно.</param>
      <param name="title">Если GetWindow создаст новое окно, оно получит этот заголовок. Если это значение равно null, используйте имя класса в качестве заголовка.</param>
      <param name="focus">Давать ли фокус окну, если оно уже существует. (Если GetWindow создаст новое окно, оно всегда получит фокус).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindow(System.Type[])">
      <summary>
        <para>Возвращает первое окно EditorWindow типа T, которое в данный момент находится на экране.</para>
      </summary>
      <param name="T">Тип окна. Должен быть производным от EditorWindow.</param>
      <param name="title">Если GetWindow создаст новое окно, оно получит этот заголовок. Если это значение равно null, используйте имя класса в качестве заголовка.</param>
      <param name="desiredDockNextTo">Массив типов EditorWindow, к которым будет пытаться пристыковаться окно.</param>
      <param name="focus">Давать ли фокус окну, если оно уже существует. (Если GetWindow создаст новое окно, оно всегда получит фокус).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindow(System.String,System.Type[])">
      <summary>
        <para>Возвращает первое окно EditorWindow типа T, которое в данный момент находится на экране.</para>
      </summary>
      <param name="T">Тип окна. Должен быть производным от EditorWindow.</param>
      <param name="title">Если GetWindow создаст новое окно, оно получит этот заголовок. Если это значение равно null, используйте имя класса в качестве заголовка.</param>
      <param name="desiredDockNextTo">Массив типов EditorWindow, к которым будет пытаться пристыковаться окно.</param>
      <param name="focus">Давать ли фокус окну, если оно уже существует. (Если GetWindow создаст новое окно, оно всегда получит фокус).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindow(System.String,System.Boolean,System.Type[])">
      <summary>
        <para>Возвращает первое окно EditorWindow типа T, которое в данный момент находится на экране.</para>
      </summary>
      <param name="T">Тип окна. Должен быть производным от EditorWindow.</param>
      <param name="title">Если GetWindow создаст новое окно, оно получит этот заголовок. Если это значение равно null, используйте имя класса в качестве заголовка.</param>
      <param name="desiredDockNextTo">Массив типов EditorWindow, к которым будет пытаться пристыковаться окно.</param>
      <param name="focus">Давать ли фокус окну, если оно уже существует. (Если GetWindow создаст новое окно, оно всегда получит фокус).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindowWithRect(System.Type,UnityEngine.Rect)">
      <summary>
        <para>Возвращает первое окно EditorWindow типа t, которое в данный момент находится на экране.</para>
      </summary>
      <param name="t">Тип окна. Должен быть производным от EditorWindow.</param>
      <param name="rect">Позиция на экране, где будет отображаться вновь созданное окно.</param>
      <param name="utility">Установите значение true, чтобы создать плавающее окно утилиты, и значение false, чтобы создать обычное окно.</param>
      <param name="title">Если GetWindow создаст новое окно, оно получит этот заголовок. Если это значение равно null, используйте имя класса в качестве заголовка.</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindowWithRect(System.Type,UnityEngine.Rect,System.Boolean)">
      <summary>
        <para>Возвращает первое окно EditorWindow типа t, которое в данный момент находится на экране.</para>
      </summary>
      <param name="t">Тип окна. Должен быть производным от EditorWindow.</param>
      <param name="rect">Позиция на экране, где будет отображаться вновь созданное окно.</param>
      <param name="utility">Установите значение true, чтобы создать плавающее окно утилиты, и значение false, чтобы создать обычное окно.</param>
      <param name="title">Если GetWindow создаст новое окно, оно получит этот заголовок. Если это значение равно null, используйте имя класса в качестве заголовка.</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindowWithRect(System.Type,UnityEngine.Rect,System.Boolean,System.String)">
      <summary>
        <para>Возвращает первое окно EditorWindow типа t, которое в данный момент находится на экране.</para>
      </summary>
      <param name="t">Тип окна. Должен быть производным от EditorWindow.</param>
      <param name="rect">Позиция на экране, где будет отображаться вновь созданное окно.</param>
      <param name="utility">Установите значение true, чтобы создать плавающее окно утилиты, и значение false, чтобы создать обычное окно.</param>
      <param name="title">Если GetWindow создаст новое окно, оно получит этот заголовок. Если это значение равно null, используйте имя класса в качестве заголовка.</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindowWithRect(UnityEngine.Rect)">
      <summary>
        <para>Возвращает первое окно EditorWindow типа t, которое в данный момент находится на экране.</para>
      </summary>
      <param name="t">Тип окна. Должен быть производным от EditorWindow.</param>
      <param name="rect">Позиция на экране, где будет отображаться вновь созданное окно.</param>
      <param name="utility">Установите значение true, чтобы создать плавающее окно утилиты, и значение false, чтобы создать обычное окно.</param>
      <param name="title">Если GetWindow создаст новое окно, оно получит этот заголовок. Если это значение равно null, используйте имя класса в качестве заголовка.</param>
      <param name="focus">Давать ли фокус окну, если оно уже существует. (Если GetWindow создаст новое окно, оно всегда получит фокус).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindowWithRect(UnityEngine.Rect,System.Boolean)">
      <summary>
        <para>Возвращает первое окно EditorWindow типа t, которое в данный момент находится на экране.</para>
      </summary>
      <param name="t">Тип окна. Должен быть производным от EditorWindow.</param>
      <param name="rect">Позиция на экране, где будет отображаться вновь созданное окно.</param>
      <param name="utility">Установите значение true, чтобы создать плавающее окно утилиты, и значение false, чтобы создать обычное окно.</param>
      <param name="title">Если GetWindow создаст новое окно, оно получит этот заголовок. Если это значение равно null, используйте имя класса в качестве заголовка.</param>
      <param name="focus">Давать ли фокус окну, если оно уже существует. (Если GetWindow создаст новое окно, оно всегда получит фокус).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindowWithRect(UnityEngine.Rect,System.Boolean,System.String)">
      <summary>
        <para>Возвращает первое окно EditorWindow типа t, которое в данный момент находится на экране.</para>
      </summary>
      <param name="t">Тип окна. Должен быть производным от EditorWindow.</param>
      <param name="rect">Позиция на экране, где будет отображаться вновь созданное окно.</param>
      <param name="utility">Установите значение true, чтобы создать плавающее окно утилиты, и значение false, чтобы создать обычное окно.</param>
      <param name="title">Если GetWindow создаст новое окно, оно получит этот заголовок. Если это значение равно null, используйте имя класса в качестве заголовка.</param>
      <param name="focus">Давать ли фокус окну, если оно уже существует. (Если GetWindow создаст новое окно, оно всегда получит фокус).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindowWithRect(UnityEngine.Rect,System.Boolean,System.String,System.Boolean)">
      <summary>
        <para>Возвращает первое окно EditorWindow типа t, которое в данный момент находится на экране.</para>
      </summary>
      <param name="t">Тип окна. Должен быть производным от EditorWindow.</param>
      <param name="rect">Позиция на экране, где будет отображаться вновь созданное окно.</param>
      <param name="utility">Установите значение true, чтобы создать плавающее окно утилиты, и значение false, чтобы создать обычное окно.</param>
      <param name="title">Если GetWindow создаст новое окно, оно получит этот заголовок. Если это значение равно null, используйте имя класса в качестве заголовка.</param>
      <param name="focus">Давать ли фокус окну, если оно уже существует. (Если GetWindow создаст новое окно, оно всегда получит фокус).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.HasOpenInstances">
      <summary>
        <para>Проверяет, открыто ли окно редактора.</para>
      </summary>
      <param name="t">Тип окна. Должен быть производным от EditorWindow.</param>
      <returns>
        <para>Возвращает true, если окно EditorWindow, соответствующее указанному типу, открыто. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorWindow.OnBackingScaleFactorChanged">
      <summary>
        <para>Вызывается при изменении масштабирования пользовательского интерфейса для этого EditorWindow.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorWindow.RemoveNotification">
      <summary>
        <para>Прекратить показ уведомления.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorWindow.Repaint">
      <summary>
        <para>Заставьте окно перерисовываться.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorWindow.SaveChanges">
      <summary>
        <para>Выполняет действие по сохранению содержимого окна.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorWindow.SendEvent(UnityEngine.Event)">
      <summary>
        <para>Отправляет событие в окно.</para>
      </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:UnityEditor.EditorWindow.Show">
      <summary>
        <para>Показать окно EditorWindow.</para>
      </summary>
      <param name="immediateDisplay">Немедленно отобразить Show.</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.Show(System.Boolean)">
      <summary>
        <para>Показать окно EditorWindow.</para>
      </summary>
      <param name="immediateDisplay">Немедленно отобразить Show.</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.ShowAsDropDown(UnityEngine.Rect,UnityEngine.Vector2)">
      <summary>
        <para>Показывает окно с раскрывающимся списком и стилем.</para>
      </summary>
      <param name="buttonRect">Кнопка, по которой будет определяться положение окна (см. описание).</param>
      <param name="windowSize">Начальный размер окна.</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.ShowAuxWindow">
      <summary>
        <para>Показать окно редактора во вспомогательном окне.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorWindow.ShowModal">
      <summary>
        <para>Показать окно модального редактора.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorWindow.ShowModalUtility">
      <summary>
        <para>Показать EditorWindow как плавающее модальное окно.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorWindow.ShowNotification(UnityEngine.GUIContent)">
      <summary>
        <para>Показать уведомление.</para>
      </summary>
      <param name="notification">Содержимое сообщения уведомления.</param>
      <param name="fadeoutWait">Продолжительность отображения уведомления. Измеряется в секундах.</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.ShowNotification(UnityEngine.GUIContent,System.Double)">
      <summary>
        <para>Показать уведомление.</para>
      </summary>
      <param name="notification">Содержимое сообщения уведомления.</param>
      <param name="fadeoutWait">Продолжительность отображения уведомления. Измеряется в секундах.</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.ShowPopup">
      <summary>
        <para>Отображает окно редактора с использованием всплывающих окон.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorWindow.ShowUtility">
      <summary>
        <para>Показать EditorWindow как плавающее окно утилиты.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorWindow.TryGetOverlay(System.String,UnityEditor.Overlays.Overlay&amp;)">
      <summary>
        <para>Получите наложение с соответствующим идентификатором из холста EditorWindow.</para>
      </summary>
      <param name="id">Идентификатор наложения, которое необходимо получить.</param>
      <param name="match">Содержит наложение с совпадающим идентификатором или null, если совпадающее наложение не найдено.</param>
      <returns>
        <para>Возвращает true, если оверлей найден, иначе false.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.EditorWindowTitleAttribute">
      <summary>
        <para>Используйте этот класс, чтобы установить текст заголовка и значок для окна редактора. </para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindowTitleAttribute.icon">
      <summary>
        <para>Указывает путь к значку окна редактора по умолчанию.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindowTitleAttribute.title">
      <summary>
        <para>Определяет текст заголовка окна редактора.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindowTitleAttribute.useTypeNameAsIconName">
      <summary>
        <para>Если установлено значение true, Unity устанавливает имя значка окна таким же, как имя его типа.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorWindowTitleAttribute.#ctor">
      <summary>
        <para>Создает содержимое заголовка окна редактора.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.EnterPlayModeOptions">
      <summary>
        <para>Определяет флаги для параметров входа в режим воспроизведения в редакторе Unity.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EnterPlayModeOptions.DisableDomainReload">
      <summary>
        <para>Когда перезагрузка домена отключена, скрипты не перезагружаются при входе в игровой режим. Это позволяет быстрее переключаться в игровой режим, поскольку нет необходимости уничтожать, создавать и перезагружать домен приложения .NET.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EnterPlayModeOptions.DisableSceneReload">
      <summary>
        <para>Когда перезагрузка сцены отключена, Unity сбрасывает состояние сцены и эмулирует все необходимые вызовы постпроцессора при входе в режим воспроизведения вместо перезагрузки всей сцены. Это позволяет быстрее переключаться в режим воспроизведения, поскольку нет необходимости уничтожать, создавать и пробуждать все объекты сцены, а также сериализовать и десериализовывать сцену с диска.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EnterPlayModeOptions.None">
      <summary>
        <para>Это заставляет Unity перезагружать домен приложения .NET и всю сцену при входе в режим воспроизведения.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Events.UnityEventTools">
      <summary>
        <para>Инструменты редактора для работы с постоянными событиями UnityEvents.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.AddBoolPersistentListener(UnityEngine.Events.UnityEventBase,UnityEngine.Events.UnityAction`1&lt;System.Boolean&gt;,System.Boolean)">
      <summary>
        <para>Добавляет к слушателю постоянный, предустановленный вызов.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="call">Функция для вызова.</param>
      <param name="argument">Аргумент для использования при вызове.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.AddFloatPersistentListener(UnityEngine.Events.UnityEventBase,UnityEngine.Events.UnityAction`1&lt;System.Single&gt;,System.Single)">
      <summary>
        <para>Добавляет к слушателю постоянный, предустановленный вызов.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="call">Функция для вызова.</param>
      <param name="argument">Аргумент для использования при вызове.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.AddIntPersistentListener(UnityEngine.Events.UnityEventBase,UnityEngine.Events.UnityAction`1&lt;System.Int32&gt;,System.Int32)">
      <summary>
        <para>Добавляет к слушателю постоянный, предустановленный вызов.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="call">Функция для вызова.</param>
      <param name="argument">Аргумент для использования при вызове.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.AddObjectPersistentListener(UnityEngine.Events.UnityEventBase,UnityEngine.Events.UnityAction`1&lt;T&gt;,T)">
      <summary>
        <para>Добавляет к слушателю постоянный, предустановленный вызов.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="call">Функция для вызова.</param>
      <param name="argument">Аргумент для использования при вызове.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.AddPersistentListener(UnityEngine.Events.UnityEventBase)">
      <summary>
        <para>Добавляет постоянный вызов слушателю. Будет вызываться с аргументами, определенными событием, и отправляться из места вызова.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="call">Функция для вызова.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.AddPersistentListener(UnityEngine.Events.UnityEvent,UnityEngine.Events.UnityAction)">
      <summary>
        <para>Добавляет постоянный вызов слушателю. Будет вызываться с аргументами, определенными событием, и отправляться из места вызова.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="call">Функция для вызова.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.AddPersistentListener(UnityEngine.Events.UnityEvent`1&lt;T0&gt;,UnityEngine.Events.UnityAction`1&lt;T0&gt;)">
      <summary>
        <para>Добавляет постоянный вызов слушателю. Будет вызываться с аргументами, определенными событием, и отправляться из места вызова.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="call">Функция для вызова.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.AddPersistentListener(UnityEngine.Events.UnityEvent`2&lt;T0,T1&gt;,UnityEngine.Events.UnityAction`2&lt;T0,T1&gt;)">
      <summary>
        <para>Добавляет постоянный вызов слушателю. Будет вызываться с аргументами, определенными событием, и отправляться из места вызова.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="call">Функция для вызова.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.AddPersistentListener(UnityEngine.Events.UnityEvent`3&lt;T0,T1,T2&gt;,UnityEngine.Events.UnityAction`3&lt;T0,T1,T2&gt;)">
      <summary>
        <para>Добавляет постоянный вызов слушателю. Будет вызываться с аргументами, определенными событием, и отправляться из места вызова.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="call">Функция для вызова.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.AddPersistentListener(UnityEngine.Events.UnityEvent`4&lt;T0,T1,T2,T3&gt;,UnityEngine.Events.UnityAction`4&lt;T0,T1,T2,T3&gt;)">
      <summary>
        <para>Добавляет постоянный вызов слушателю. Будет вызываться с аргументами, определенными событием, и отправляться из места вызова.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="call">Функция для вызова.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.AddStringPersistentListener(UnityEngine.Events.UnityEventBase,UnityEngine.Events.UnityAction`1&lt;System.String&gt;,System.String)">
      <summary>
        <para>Добавляет к слушателю постоянный, предустановленный вызов.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="call">Функция для вызова.</param>
      <param name="argument">Аргумент для использования при вызове.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.AddVoidPersistentListener(UnityEngine.Events.UnityEventBase,UnityEngine.Events.UnityAction)">
      <summary>
        <para>Добавляет к слушателю постоянный, предустановленный вызов.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="call">Функция для вызова.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RegisterBoolPersistentListener(UnityEngine.Events.UnityEventBase,System.Int32,UnityEngine.Events.UnityAction`1&lt;System.Boolean&gt;,System.Boolean)">
      <summary>
        <para>Изменяет событие по заданному индексу.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="index">Индекс для изменения.</param>
      <param name="call">Функция для вызова.</param>
      <param name="argument">Аргумент для использования при вызове.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RegisterFloatPersistentListener(UnityEngine.Events.UnityEventBase,System.Int32,UnityEngine.Events.UnityAction`1&lt;System.Single&gt;,System.Single)">
      <summary>
        <para>Изменяет событие по заданному индексу.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="index">Индекс для изменения.</param>
      <param name="call">Функция для вызова.</param>
      <param name="argument">Аргумент для использования при вызове.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RegisterIntPersistentListener(UnityEngine.Events.UnityEventBase,System.Int32,UnityEngine.Events.UnityAction`1&lt;System.Int32&gt;,System.Int32)">
      <summary>
        <para>Изменяет событие по заданному индексу.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="index">Индекс для изменения.</param>
      <param name="call">Функция для вызова.</param>
      <param name="argument">Аргумент для использования при вызове.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RegisterObjectPersistentListener(UnityEngine.Events.UnityEventBase,System.Int32,UnityEngine.Events.UnityAction`1&lt;T&gt;,T)">
      <summary>
        <para>Изменяет событие по заданному индексу.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="index">Индекс для изменения.</param>
      <param name="call">Функция для вызова.</param>
      <param name="argument">Аргумент для использования при вызове.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RegisterPersistentListener(UnityEngine.Events.UnityEvent,System.Int32,UnityEngine.Events.UnityAction)">
      <summary>
        <para>Изменяет событие по заданному индексу.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="index">Индекс для изменения.</param>
      <param name="call">Функция для вызова.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RegisterPersistentListener(UnityEngine.Events.UnityEvent`1&lt;T0&gt;,System.Int32,UnityEngine.Events.UnityAction`1&lt;T0&gt;)">
      <summary>
        <para>Изменяет событие по заданному индексу.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="index">Индекс для изменения.</param>
      <param name="call">Функция для вызова.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RegisterPersistentListener(UnityEngine.Events.UnityEvent`2&lt;T0,T1&gt;,System.Int32,UnityEngine.Events.UnityAction`2&lt;T0,T1&gt;)">
      <summary>
        <para>Изменяет событие по заданному индексу.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="index">Индекс для изменения.</param>
      <param name="call">Функция для вызова.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RegisterPersistentListener(UnityEngine.Events.UnityEvent`3&lt;T0,T1,T2&gt;,System.Int32,UnityEngine.Events.UnityAction`3&lt;T0,T1,T2&gt;)">
      <summary>
        <para>Изменяет событие по заданному индексу.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="index">Индекс для изменения.</param>
      <param name="call">Функция для вызова.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RegisterPersistentListener(UnityEngine.Events.UnityEvent`4&lt;T0,T1,T2,T3&gt;,System.Int32,UnityEngine.Events.UnityAction`4&lt;T0,T1,T2,T3&gt;)">
      <summary>
        <para>Изменяет событие по заданному индексу.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="index">Индекс для изменения.</param>
      <param name="call">Функция для вызова.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RegisterStringPersistentListener(UnityEngine.Events.UnityEventBase,System.Int32,UnityEngine.Events.UnityAction`1&lt;System.String&gt;,System.String)">
      <summary>
        <para>Изменяет событие по заданному индексу.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="index">Индекс для изменения.</param>
      <param name="call">Функция для вызова.</param>
      <param name="argument">Аргумент для использования при вызове.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RegisterVoidPersistentListener(UnityEngine.Events.UnityEventBase,System.Int32,UnityEngine.Events.UnityAction)">
      <summary>
        <para>Изменяет событие по заданному индексу.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="index">Индекс для изменения.</param>
      <param name="call">Функция для вызова.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RemovePersistentListener(UnityEngine.Events.UnityEventBase,System.Int32)">
      <summary>
        <para>Удаляет указанную функцию из события.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="index">Индекс для удаления (если указан).</param>
      <param name="call">Функция для удаления (если указана).</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RemovePersistentListener(UnityEngine.Events.UnityEventBase,UnityEngine.Events.UnityAction)">
      <summary>
        <para>Удаляет указанную функцию из события.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="index">Индекс для удаления (если указан).</param>
      <param name="call">Функция для удаления (если указана).</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RemovePersistentListener(UnityEngine.Events.UnityEventBase,UnityEngine.Events.UnityAction`1&lt;T0&gt;)">
      <summary>
        <para>Удаляет указанную функцию из события.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="index">Индекс для удаления (если указан).</param>
      <param name="call">Функция для удаления (если указана).</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RemovePersistentListener(UnityEngine.Events.UnityEventBase,UnityEngine.Events.UnityAction`2&lt;T0,T1&gt;)">
      <summary>
        <para>Удаляет указанную функцию из события.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="index">Индекс для удаления (если указан).</param>
      <param name="call">Функция для удаления (если указана).</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RemovePersistentListener(UnityEngine.Events.UnityEventBase,UnityEngine.Events.UnityAction`3&lt;T0,T1,T2&gt;)">
      <summary>
        <para>Удаляет указанную функцию из события.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="index">Индекс для удаления (если указан).</param>
      <param name="call">Функция для удаления (если указана).</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RemovePersistentListener(UnityEngine.Events.UnityEventBase,UnityEngine.Events.UnityAction`4&lt;T0,T1,T2,T3&gt;)">
      <summary>
        <para>Удаляет указанную функцию из события.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="index">Индекс для удаления (если указан).</param>
      <param name="call">Функция для удаления (если указана).</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.UnregisterPersistentListener(UnityEngine.Events.UnityEventBase,System.Int32)">
      <summary>
        <para>Отменяет регистрацию данного прослушивателя по указанному индексу.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="index">Индекс для отмены регистрации.</param>
    </member>
    <member name="T:UnityEditor.Experimental.ArtifactID">
      <summary>
        <para>Уникально идентифицирует произведенный артефакт, такой как импортированный ресурс (например, результат импорта текстуры).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.ArtifactID.isValid">
      <summary>
        <para>Истинно, если этот ArtifactID действителен.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Experimental.ArtifactID.value">
      <summary>
        <para>Уникальное значение.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Experimental.ArtifactKey">
      <summary>
        <para>ArtifactKey используется для указания артефакта для поиска или создания.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Experimental.ArtifactKey.guid">
      <summary>
        <para>Руководство, указывающее рассматриваемый ресурс.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Experimental.ArtifactKey.importerType">
      <summary>
        <para>Управляемый тип модуля импорта, используемый для создания артефакта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.ArtifactKey.isValid">
      <summary>
        <para>Возвращает true, если значение хэша допустимо. (Только чтение)</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Experimental.ArtifactKey.#ctor(UnityEditor.GUID)">
      <summary>
        <para>Создайте ArtifactKey.</para>
      </summary>
      <param name="g">Руководство.</param>
      <param name="guid">Руководство.</param>
      <param name="importerType">Управляемый тип импортера.</param>
    </member>
    <member name="M:UnityEditor.Experimental.ArtifactKey.#ctor(UnityEditor.GUID,System.Type)">
      <summary>
        <para>Создайте ArtifactKey.</para>
      </summary>
      <param name="g">Руководство.</param>
      <param name="guid">Руководство.</param>
      <param name="importerType">Управляемый тип импортера.</param>
    </member>
    <member name="T:UnityEditor.Experimental.Licensing.LicensingUtility">
      <summary>
        <para>Используйте класс Licensing Utility для запроса разрешений пользователя. Разрешения пользователя называются полномочиями. Права — это простые строки. Например, "com.unity.editor.ui".</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Experimental.Licensing.LicensingUtility.HasEntitlement(System.String)">
      <summary>
        <para>Проверяет, имеет ли текущий пользователь определенные полномочия.</para>
      </summary>
      <param name="entitlement">Запрошенная строка прав.</param>
      <returns>
        <para>Возвращает true, если пользователь имеет право на строку прав. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Experimental.Licensing.LicensingUtility.HasEntitlements(System.String[])">
      <summary>
        <para>Проверяет, имеет ли текущий пользователь право на список разрешений.</para>
      </summary>
      <param name="entitlements">Запрошенный список строк прав.</param>
      <returns>
        <para>Возвращает список строк прав, на которые пользователь имеет право на основе запрошенного списка.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Experimental.Lightmapping">
      <summary>
        <para>Экспериментальные функции карты освещения.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Experimental.Lightmapping.additionalBakedProbesCompleted(System.Action)">
      <summary>
        <para>Событие, которое вызывается, когда завершена запекание дополнительных проб и результаты готовы к выборке.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="P:UnityEditor.Experimental.Lightmapping.extractAmbientOcclusion">
      <summary>
        <para>Записывает отфильтрованную текстуру Ambient Occlusion на диск при создании объекта Lighting Data Asset и будет располагаться рядом с другими картами освещения. Это работает только в режиме On Demand и если включена Ambient Occlusion. Обратите внимание, что значения ползунков прямого и непрямого воздействия не применяются. В настоящее время не поддерживается лайтмапером Progressive GPU. </para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.Lightmapping.probesIgnoreDirectEnvironment">
      <summary>
        <para>Если включено, игнорируется прямой вклад освещения окружающей среды в запеченные датчики.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Experimental.Lightmapping.Bake(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Запускает задание синхронного запекания освещения для целевой сцены.</para>
      </summary>
      <param name="targetScene">Сцена, для которой создаются данные освещения.</param>
      <returns>
        <para>Возвращает true, если Unity успешно завершает работу по запеканию освещения. Возвращает false, если Unity не успешно завершает работу по запеканию освещения.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Experimental.Lightmapping.BakeAsync(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Запускает задание запекания асинхронного освещения для целевой сцены.</para>
      </summary>
      <param name="targetScene">Сцена, для которой создаются данные освещения.</param>
      <returns>
        <para>Возвращает true, если Unity успешно запускает задание по запеканию освещения. Возвращает false, если Unity не удалось успешно запустить задание запекания освещения.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Experimental.Lightmapping.GetAdditionalBakedProbes">
      <summary>
        <para>Получить результат выпечки дополнительных зондов.</para>
      </summary>
      <param name="id">Идентификатор, который использовался для отправки массива позиций для выпечки.</param>
      <returns>
        <para>Истинно, если outBakedProbeSH и outBakedProbeValidity могут быть успешно возвращены.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Experimental.Lightmapping.GetCustomBakeResults(UnityEngine.Vector4[])">
      <summary>
        <para>Получить пользовательские результаты выпечки.</para>
      </summary>
      <param name="results">Ненормализованное количество видимости неба для входных точек (в xyz). Компонент w — это доля лучей, падающих на обратную сторону.</param>
      <returns>
        <para>Истинно, если результаты были получены. False, если нет доступных данных или массив результатов не соответствует количеству точек в выпечке.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Experimental.Lightmapping.SetAdditionalBakedProbes">
      <summary>
        <para>Отправьте дополнительные позиции зонда для запекания с использованием идентификатора.</para>
      </summary>
      <param name="id">Идентификатор для определения позиций для выпечки. Этот идентификатор используется позже для получения результатов для этих позиций.</param>
      <param name="positions">Массив позиций датчиков.</param>
    </member>
    <member name="M:UnityEditor.Experimental.Lightmapping.SetCustomBakeInputs(UnityEngine.Vector4[],System.Int32)">
      <summary>
        <para>Установите пользовательские входы для выпечки.</para>
      </summary>
      <param name="inputData">Положения (xyz) точек, для которых рассчитывается степень видимости неба. Компонент w — это смещение, которое будет применяться к лучу, начинающемуся в данной позиции.</param>
      <param name="sampleCount">Количество выборок верхней полусферы, использованных для расчета видимости неба.</param>
    </member>
    <member name="M:UnityEditor.Experimental.Lightmapping.SetLightDirty(UnityEngine.Light)">
      <summary>
        <para>Вручную устанавливает свет как грязный.</para>
      </summary>
      <param name="light">Свет, который нужно установить как грязный.</param>
    </member>
    <member name="?:UnityEditor.Experimental.Rendering.IScriptableBakedReflectionSystem">
      <summary>
        <para>Определяет необходимые члены для реализации ScriptableBakedReflectionSystem.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.Rendering.IScriptableBakedReflectionSystem.stageCount">
      <summary>
        <para>Количество стадий процесса выпечки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.Rendering.IScriptableBakedReflectionSystem.stateHashes">
      <summary>
        <para>Хэши текущего запеченного состояния ScriptableBakedReflectionSystem.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Experimental.Rendering.IScriptableBakedReflectionSystem.BakeAllReflectionProbes">
      <summary>
        <para>Реализуйте этот метод, чтобы запечь все загруженные датчики отражения.</para>
      </summary>
      <returns>
        <para>Возвращает true, когда процесс запекания отражательного зонда успешно завершен. Возвращает false, если запекание не завершено, например, если текущая сцена никогда не сохранялась.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Experimental.Rendering.IScriptableBakedReflectionSystem.Cancel">
      <summary>
        <para>Отменить текущие задания на выпечку.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Experimental.Rendering.IScriptableBakedReflectionSystem.Clear">
      <summary>
        <para>Очистить состояние ScriptableBakedReflectionSystem.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Experimental.Rendering.IScriptableBakedReflectionSystem.SynchronizeReflectionProbes">
      <summary>
        <para>Синхронизируйте запеченные данные с фактическими компонентами и настройками рендеринга.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Experimental.Rendering.IScriptableBakedReflectionSystem.Tick(UnityEditor.Experimental.Rendering.SceneStateHash,UnityEditor.Experimental.Rendering.IScriptableBakedReflectionSystemStageNotifier)">
      <summary>
        <para>Этот метод вызывается при каждом обновлении редактора до тех пор, пока ScriptableBakedReflectionSystem не укажет, что запекание завершено с помощью handle.SetIsDone(true). (См. IScriptableBakedReflectionSystemStageNotifier.SetIsDone).</para>
      </summary>
      <param name="sceneStateHash">Хэш состояния текущей сцены.</param>
      <param name="handle">Дескриптор для получения уведомлений о статусе этапов процесса выпечки.</param>
    </member>
    <member name="?:UnityEditor.Experimental.Rendering.IScriptableBakedReflectionSystemStageNotifier">
      <summary>
        <para>Реализация этого интерфейса предоставляется при выборе ScriptableBakedReflectionSystem. (См. IScriptableBakedReflectionSystem.Tick).</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Experimental.Rendering.IScriptableBakedReflectionSystemStageNotifier.EnterStage(System.Int32,System.String,System.Single)">
      <summary>
        <para>Обновите информацию о ходе выполнения этапа выпечки.</para>
      </summary>
      <param name="stage">Выполняется текущий этап.</param>
      <param name="progressMessage">Отображаемое сообщение о ходе выполнения.</param>
      <param name="progress">Ход выполнения отчета (от 0 до 1).</param>
    </member>
    <member name="M:UnityEditor.Experimental.Rendering.IScriptableBakedReflectionSystemStageNotifier.ExitStage(System.Int32)">
      <summary>
        <para>Указывает, что этап завершен.</para>
      </summary>
      <param name="stage">Завершенный этап.</param>
    </member>
    <member name="M:UnityEditor.Experimental.Rendering.IScriptableBakedReflectionSystemStageNotifier.SetIsDone(System.Boolean)">
      <summary>
        <para>Указывает, завершена ли выпечка.</para>
      </summary>
      <param name="isDone">Завершена ли выпечка.</param>
    </member>
    <member name="T:UnityEditor.Experimental.Rendering.SceneStateHash">
      <summary>
        <para>Этот класс содержит хэши, представляющие состояние сцены.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.Rendering.SceneStateHash.ambientProbeHash">
      <summary>
        <para>Хэш, представляющий состояние окружающего зонда.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.Rendering.SceneStateHash.sceneObjectsHash">
      <summary>
        <para>Хэш, представляющий состояние объектов сцены.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.Rendering.SceneStateHash.skySettingsHash">
      <summary>
        <para>Хэш, представляющий настройки неба.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Experimental.Rendering.ScriptableBakedReflectionSystem">
      <summary>
        <para>Пустая реализация IScriptableBakedReflectionSystem.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.Rendering.ScriptableBakedReflectionSystem.stageCount">
      <summary>
        <para>Количество стадий процесса выпечки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.Rendering.ScriptableBakedReflectionSystem.stateHashes">
      <summary>
        <para>Хэши текущего запеченного состояния ScriptableBakedReflectionSystem.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Experimental.Rendering.ScriptableBakedReflectionSystem.BakeAllReflectionProbes">
      <summary>
        <para>Реализуйте этот метод, чтобы запечь все загруженные датчики отражения.</para>
      </summary>
      <returns>
        <para>Истинно, если зонд запекался, и ложно, если запекание не было завершено.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Experimental.Rendering.ScriptableBakedReflectionSystem.Cancel">
      <summary>
        <para>Отменить текущие задания на выпечку.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Experimental.Rendering.ScriptableBakedReflectionSystem.Clear">
      <summary>
        <para>Очистить состояние ScriptableBakedReflectionSystem.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Experimental.Rendering.ScriptableBakedReflectionSystem.SynchronizeReflectionProbes">
      <summary>
        <para>Синхронизируйте запеченные данные с фактическими компонентами и настройками рендеринга.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Experimental.Rendering.ScriptableBakedReflectionSystem.Tick(UnityEditor.Experimental.Rendering.SceneStateHash,UnityEditor.Experimental.Rendering.IScriptableBakedReflectionSystemStageNotifier)">
      <summary>
        <para>Этот метод вызывается во время обновления редактора до тех пор, пока ScriptableBakedReflectionSystem не укажет, что запекание завершено, с помощью handle.SetIsDone(true). (См. IScriptableBakedReflectionSystemStageNotifier.SetIsDone).</para>
      </summary>
      <param name="sceneStateHash">Хэш состояния текущей сцены.</param>
      <param name="handle">Дескриптор для получения уведомлений о статусе этапов процесса выпечки.</param>
    </member>
    <member name="T:UnityEditor.Experimental.Rendering.ScriptableBakedReflectionSystemSettings">
      <summary>
        <para>Глобальные настройки для скриптовой запеченной системы отражения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.Rendering.ScriptableBakedReflectionSystemSettings.system">
      <summary>
        <para>Текущая активная ScriptableBakedReflectionSystem, см. IScriptableBakedReflectionSystem.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ExportPackageOptions">
      <summary>
        <para>Опция экспорта пакета. Несколько параметров можно объединить вместе с помощью | оператор.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ExportPackageOptions.Default">
      <summary>
        <para>Режим по умолчанию. Не будет включать зависимости или подкаталоги, а также активы библиотеки, если они специально не включены в список активов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ExportPackageOptions.IncludeDependencies">
      <summary>
        <para>В дополнение к перечисленным путям ресурсов будут также включены все зависимые ресурсы.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ExportPackageOptions.IncludeLibraryAssets">
      <summary>
        <para>Экспортируемый пакет будет включать в себя все библиотечные активы, т.е. настройки проекта, расположенные в папке Library проекта.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ExportPackageOptions.Interactive">
      <summary>
        <para>Операция экспорта будет выполняться асинхронно и показывать экспортированный файл пакета в окне браузера файлов после завершения экспорта.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ExportPackageOptions.Recurse">
      <summary>
        <para>Будет рекурсивно проходить через все перечисленные подкаталоги и включать все активы внутри них.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ExpressionEvaluator">
      <summary>
        <para>Оценивает простые математические выражения; поддерживает int float и операторы: + - * % ^ ( ).</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ExpressionEvaluator.Evaluate(System.String,T&amp;)">
      <summary>
        <para>Вычисляет математическое выражение и возвращает результат.</para>
      </summary>
      <param name="expression">Строка, содержащая математическое выражение (например, "4+3").</param>
      <param name="value">Результат вычисления выражения. Поддерживаемые типы: int, float, long, double.</param>
      <returns>
        <para>Указывает, можно ли успешно вычислить выражение.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.FilePathAttribute">
      <summary>
        <para>Атрибут, указывающий расположение файла относительно папки Project или папки настроек Unity. См. также: FilePathAttribute.Location.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.FilePathAttribute.#ctor(System.String,UnityEditor.FilePathAttribute/Location)">
      <summary>
        <para>
        </para>
      </summary>
      <param name="relativePath">Относительный путь к указанному «местоположению».</param>
      <param name="location">Параметр расположения, указывающий, с какой корневой папкой следует объединить относительный путь.</param>
    </member>
    <member name="T:UnityEditor.FilePathAttribute.Location">
      <summary>
        <para>Указывает расположение папки, которую Unity использует вместе с относительным путем, указанным в конструкторе FilePathAttribute.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.FilePathAttribute.Location.PreferencesFolder">
      <summary>
        <para>Используйте это расположение для сохранения файла относительно папки настроек. Полезно для пользовательских файлов во всех проектах.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.FilePathAttribute.Location.ProjectFolder">
      <summary>
        <para>Используйте это расположение для сохранения файла относительно папки проекта. Полезно для файлов для каждого проекта (не для совместного использования между проектами).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.FileUtil">
      <summary>
        <para>Позволяет перемещать, копировать, удалять операции над файлами или каталогами.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.FileUtil.CopyFileOrDirectory(System.String,System.String)">
      <summary>
        <para>Копирует файл или каталог.</para>
      </summary>
      <param name="source">
      </param>
      <param name="dest">
      </param>
    </member>
    <member name="M:UnityEditor.FileUtil.CopyFileOrDirectoryFollowSymlinks(System.String,System.String)">
      <summary>
        <para>Копирует файл или каталог.</para>
      </summary>
      <param name="source">
      </param>
      <param name="dest">
      </param>
    </member>
    <member name="M:UnityEditor.FileUtil.DeleteFileOrDirectory(System.String)">
      <summary>
        <para>Удаляет файл или каталог по заданному пути.</para>
      </summary>
      <param name="path">
      </param>
    </member>
    <member name="M:UnityEditor.FileUtil.GetLogicalPath(System.String)">
      <summary>
        <para>Преобразует физический путь в логический.</para>
      </summary>
      <param name="path">Физический путь.</param>
      <returns>
        <para>Логический путь.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.FileUtil.GetPhysicalPath(System.String)">
      <summary>
        <para>Преобразует логический путь в физический.</para>
      </summary>
      <param name="path">Логический путь.</param>
      <returns>
        <para>Физический путь.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.FileUtil.GetUniqueTempPathInProject">
      <summary>
        <para>Возвращает уникальный путь в папке Temp в текущем проекте.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.FileUtil.MoveFileOrDirectory(System.String,System.String)">
      <summary>
        <para>Перемещает файл или каталог с заданного пути на другой путь.</para>
      </summary>
      <param name="source">
      </param>
      <param name="dest">
      </param>
    </member>
    <member name="M:UnityEditor.FileUtil.ReplaceDirectory(System.String,System.String)">
      <summary>
        <para>Заменяет каталог.</para>
      </summary>
      <param name="src">
      </param>
      <param name="dst">
      </param>
    </member>
    <member name="M:UnityEditor.FileUtil.ReplaceFile(System.String,System.String)">
      <summary>
        <para>Заменяет файл.</para>
      </summary>
      <param name="src">
      </param>
      <param name="dst">
      </param>
    </member>
    <member name="T:UnityEditor.FontRenderingMode">
      <summary>
        <para>Константы режима отрисовки шрифта для TrueTypeFontImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.FontRenderingMode.HintedRaster">
      <summary>
        <para>Используйте рендеринг шрифтов с подсказками без сглаживания. Это самый четкий вариант рендеринга шрифта, и он может быть наиболее удобочитаемым для небольших размеров шрифта.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.FontRenderingMode.HintedSmooth">
      <summary>
        <para>Используйте рендеринг сглаженного шрифта с хинтингом. Это заставляет линии символов проходить вдоль границ пикселей.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.FontRenderingMode.OSDefault">
      <summary>
        <para>Используйте режим рендеринга шрифтов ОС по умолчанию. Этот режим доступен только для динамических шрифтов, так как статические шрифты генерируются во время сборки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.FontRenderingMode.Smooth">
      <summary>
        <para>Используйте рендеринг шрифтов со сглаживанием. При использовании динамических шрифтов этот режим обеспечивает самую быструю визуализацию текстур шрифтов.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.FontTextureCase">
      <summary>
        <para>Константы случая текстуры для TrueTypeFontImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.FontTextureCase.ASCII">
      <summary>
        <para>Импортировать базовый набор символов ASCII.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.FontTextureCase.ASCIILowerCase">
      <summary>
        <para>Импортировать только набор символов ASCII нижнего регистра.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.FontTextureCase.ASCIIUpperCase">
      <summary>
        <para>Импортировать только набор символов ASCII верхнего регистра.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.FontTextureCase.CustomSet">
      <summary>
        <para>Пользовательский набор символов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.FontTextureCase.Dynamic">
      <summary>
        <para>Преобразование символов в текстуру шрифта во время выполнения по мере необходимости.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.FontTextureCase.Unicode">
      <summary>
        <para>Импортировать набор символов Юникода, общих для латинских алфавитов.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ForceReserializeAssetsOptions">
      <summary>
        <para>Параметры для AssetDatabase.ForceReserializeAssets.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ForceReserializeAssetsOptions.ReserializeAssets">
      <summary>
        <para>Указывает, что AssetDatabase.ForceReserializeAssets должен загружать, обновлять и сохранять активы по путям, переданным функции, но не сопровождающим их мета-файлам.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ForceReserializeAssetsOptions.ReserializeAssetsAndMetadata">
      <summary>
        <para>Указывает, что AssetDatabase.ForceReserializeAssets должен загружать, обновлять и сохранять как ресурсы по путям, переданным функции, так и сопровождающие их мета-файлы.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ForceReserializeAssetsOptions.ReserializeMetadata">
      <summary>
        <para>Указывает, что AssetDatabase.ForceReserializeAssets должен загружать, обновлять и сохранять мета-файлы ресурсов по путям, переданным функции, но не сами ресурсы.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.GameObjectUtility">
      <summary>
        <para>Вспомогательные функции GameObject.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.AreStaticEditorFlagsSet(UnityEngine.GameObject,UnityEditor.StaticEditorFlags)">
      <summary>
        <para>Возвращает true, если переданные в StaticEditorFlags установлены для указанного GameObject.</para>
      </summary>
      <param name="go">GameObject для проверки.</param>
      <param name="flags">Флаги, которые вы хотите проверить.</param>
      <returns>
        <para>Соответствуют ли статические флаги GameObject указанным флагам.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.EnsureUniqueNameForSibling(UnityEngine.GameObject)">
      <summary>
        <para>Вы можете использовать этот метод после того, как один игровой объект станет родительским для другого, чтобы гарантировать, что дочерний игровой объект имеет уникальное имя по сравнению с его одноуровневыми элементами в иерархии.</para>
      </summary>
      <param name="self">GameObject, имя которого вы хотите сделать уникальным.</param>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.GetMonoBehavioursWithMissingScriptCount(UnityEngine.GameObject)">
      <summary>
        <para>Получает количество MonoBehaviours с отсутствующим сценарием для данного GameObject.</para>
      </summary>
      <param name="go">GameObject для запроса.</param>
      <returns>
        <para>Количество MonoBehaviours с отсутствующим скриптом.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.GetNavMeshArea(UnityEngine.GameObject)">
      <summary>
        <para>Получите индекс области навигационной сетки для GameObject.</para>
      </summary>
      <param name="go">GameObject для запроса.</param>
      <returns>
        <para>Индекс области NavMesh.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.GetNavMeshAreaFromName(System.String)">
      <summary>
        <para>Получить индекс области навигационной сетки по имени области.</para>
      </summary>
      <param name="name">Имя области NavMesh для запроса.</param>
      <returns>
        <para>Индекс области NavMesh. Если области NavMesh с запрошенным именем нет, возвращается значение -1.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.GetNavMeshAreaNames">
      <summary>
        <para>Получить все имена областей навигационной сетки.</para>
      </summary>
      <returns>
        <para>Имена всех областей NavMesh.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.GetNavMeshLayer(UnityEngine.GameObject)">
      <summary>
        <para>Получите слой навигационной сетки для GameObject.</para>
      </summary>
      <param name="go">GameObject для проверки.</param>
      <returns>
        <para>Слой навигационной сетки для указанного GameObject.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.GetNavMeshLayerFromName(System.String)">
      <summary>
        <para>Получите слой навигационной сетки по имени слоя.</para>
      </summary>
      <param name="name">Имя слоя навигационной сетки.</param>
      <returns>
        <para>Номер слоя указанного имени слоя навигационной сетки.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.GetNavMeshLayerNames">
      <summary>
        <para>Получить все имена слоев навигационной сетки.</para>
      </summary>
      <returns>
        <para>Массив имен всех слоев навигационной сетки.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.GetStaticEditorFlags(UnityEngine.GameObject)">
      <summary>
        <para>Получает StaticEditorFlags указанного GameObject.</para>
      </summary>
      <param name="go">GameObject, флаги которого вас интересуют.</param>
      <returns>
        <para>Флаги статического редактора указанного GameObject.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.GetUniqueNameForSibling(UnityEngine.Transform,System.String)">
      <summary>
        <para>Вы можете использовать этот метод перед созданием нового одноуровневого объекта или перед созданием родительского объекта для одного игрового объекта, чтобы гарантировать, что новый дочерний игровой объект имеет уникальное имя по сравнению с его одноуровневыми элементами в иерархии.</para>
      </summary>
      <param name="parent">Целевой родитель для нового GameObject. Null означает корневой уровень.</param>
      <param name="name">Запрошено имя для нового GameObject.</param>
      <returns>
        <para>Уникальное имя для нового GameObject.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.ModifyMaskIfGameObjectIsHiddenForPrefabModeInContext(System.UInt64,UnityEngine.GameObject)">
      <summary>
        <para>Используйте этот метод, если для модулей рендеринга требуется пользовательская маска отсечения сцены, которая должна отображаться или скрываться в представлении «Сцена», когда активен режим сборных элементов в контексте.</para>
      </summary>
      <param name="sceneCullingMask">Маска отсечения сцены, предназначенная для использования с пользовательским модулем визуализации.</param>
      <param name="gameObject">GameObject, связанный с пользовательским средством визуализации.</param>
      <returns>
        <para>Если GameObject скрыт для Prefab Mode в Context, возвращается измененная маска отбраковки сцены. Если он не скрыт, то возвращается маска отбраковки входной сцены.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.RemoveMonoBehavioursWithMissingScript(UnityEngine.GameObject)">
      <summary>
        <para>Удаляет MonoBehaviours с отсутствующим скриптом из заданного GameObject.</para>
      </summary>
      <param name="go">GameObject, из которого нужно удалить MonoBehaviours с отсутствующим скриптом.</param>
      <returns>
        <para>Количество удаленных MonoBehaviours с отсутствующим сценарием.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.SetNavMeshArea(UnityEngine.GameObject,System.Int32)">
      <summary>
        <para>Установите область навигационной сетки для игрового объекта.</para>
      </summary>
      <param name="go">GameObject для изменения.</param>
      <param name="areaIndex">Индекс области NavMesh для установки.</param>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.SetNavMeshLayer(UnityEngine.GameObject,System.Int32)">
      <summary>
        <para>Установите слой навигационной сетки для GameObject.</para>
      </summary>
      <param name="go">GameObject, для которого устанавливается слой навигационной сетки.</param>
      <param name="areaIndex">Номер слоя, который вы хотите установить.</param>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.SetParentAndAlign(UnityEngine.GameObject,UnityEngine.GameObject)">
      <summary>
        <para>Устанавливает родителя и дает дочернему элементу тот же слой и позицию.</para>
      </summary>
      <param name="child">GameObject, у которого должен быть новый родительский набор.</param>
      <param name="parent">GameObject, который дочерний элемент должен получить в качестве родителя и из которого должны быть скопированы позиция и слой. Если null, эта функция ничего не делает.</param>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.SetStaticEditorFlags(UnityEngine.GameObject,UnityEditor.StaticEditorFlags)">
      <summary>
        <para>Устанавливает StaticEditorFlags указанного GameObject.</para>
      </summary>
      <param name="go">GameObject, флаги статического редактора которого вы хотите установить.</param>
      <param name="flags">StaticEditorFlags для установки GameObject.</param>
    </member>
    <member name="T:UnityEditor.GenericMenu">
      <summary>
        <para>GenericMenu позволяет создавать собственные контекстные и раскрывающиеся меню.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.GenericMenu.allowDuplicateNames">
      <summary>
        <para>Разрешить наличие в меню нескольких элементов с одинаковыми именами.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.GenericMenu.AddDisabledItem(UnityEngine.GUIContent)">
      <summary>
        <para>Добавить отключенный элемент в меню.</para>
      </summary>
      <param name="content">GUIContent для отображения в качестве отключенного элемента меню.</param>
    </member>
    <member name="M:UnityEditor.GenericMenu.AddDisabledItem(UnityEngine.GUIContent,System.Boolean)">
      <summary>
        <para>Добавить отключенный элемент в меню.</para>
      </summary>
      <param name="content">GUIContent для отображения в качестве отключенного элемента меню.</param>
      <param name="on">Указывает, следует ли показывать, что элемент в данный момент активирован (т. е. галочка рядом с элементом в меню).</param>
    </member>
    <member name="M:UnityEditor.GenericMenu.AddItem(UnityEngine.GUIContent,System.Boolean,UnityEditor.GenericMenu/MenuFunction)">
      <summary>
        <para>Добавить пункт в меню.</para>
      </summary>
      <param name="content">GUIContent для добавления в качестве пункта меню.</param>
      <param name="on">Указывает, показывать ли элемент в данный момент активированным (т. е. галочка рядом с элементом в меню).</param>
      <param name="func">Функция, вызываемая при выборе пункта меню.</param>
    </member>
    <member name="M:UnityEditor.GenericMenu.AddItem(UnityEngine.GUIContent,System.Boolean,UnityEditor.GenericMenu/MenuFunction2,System.Object)">
      <summary>
        <para>Добавить пункт в меню.</para>
      </summary>
      <param name="content">GUIContent для добавления в качестве пункта меню.</param>
      <param name="on">Указывает, показывать ли элемент в данный момент активированным (т. е. галочка рядом с элементом в меню).</param>
      <param name="func">Функция, вызываемая при выборе пункта меню.</param>
      <param name="userData">Данные для передачи в функцию, вызываемую при выборе элемента.</param>
    </member>
    <member name="M:UnityEditor.GenericMenu.AddSeparator(System.String)">
      <summary>
        <para>Добавить пункт-разделитель в меню.</para>
      </summary>
      <param name="path">Путь к подменю, если добавить разделитель в подменю. При добавлении разделителя на верхний уровень меню используйте пустую строку в качестве пути.</param>
    </member>
    <member name="M:UnityEditor.GenericMenu.DropDown(UnityEngine.Rect)">
      <summary>
        <para>Показать меню на данном экране rect.</para>
      </summary>
      <param name="position">Позиция для отображения меню.</param>
    </member>
    <member name="M:UnityEditor.GenericMenu.GetItemCount">
      <summary>
        <para>Получить количество элементов в меню.</para>
      </summary>
      <returns>
        <para>Количество элементов в меню.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.GenericMenu.MenuFunction">
      <summary>
        <para>Функция обратного вызова, вызываемая при выборе пункта меню.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.GenericMenu.MenuFunction2">
      <summary>
        <para>Функция обратного вызова с пользовательскими данными, вызываемая при выборе пункта меню.</para>
      </summary>
      <param name="userData">Данные для передачи в функцию обратного вызова.</param>
    </member>
    <member name="M:UnityEditor.GenericMenu.ShowAsContext">
      <summary>
        <para>Показать меню под мышью при щелчке правой кнопкой мыши.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.GizmoType">
      <summary>
        <para>Определяет способ рисования или выбора гизмо в редакторе Unity.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.GizmoType.Active">
      <summary>
        <para>Нарисуйте гизмо, если он активен (отображается в инспекторе).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.GizmoType.InSelectionHierarchy">
      <summary>
        <para>Нарисуйте гизмо, если он выбран или является дочерним элементом/потомком выбранного.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.GizmoType.NonSelected">
      <summary>
        <para>Нарисуйте гизмо, если он не выбран.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.GizmoType.NotInSelectionHierarchy">
      <summary>
        <para>Нарисуйте гизмо, если он не выбран, а также не выбран родитель/предок.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.GizmoType.Pickable">
      <summary>
        <para>Гизмо можно выбрать в редакторе.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.GizmoType.Selected">
      <summary>
        <para>Нарисуйте гизмо, если он выбран.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.GlobalObjectId">
      <summary>
        <para>Структура, предоставляющая API для стабильных глобальных идентификаторов объектов проекта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.GlobalObjectId.assetGUID">
      <summary>
        <para>GUID актива, которому принадлежит этот объект.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.GlobalObjectId.identifierType">
      <summary>
        <para>Тип идентификатора, представленный в виде целого числа.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.GlobalObjectId.targetObjectId">
      <summary>
        <para>Идентификатор локального файла объекта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.GlobalObjectId.targetPrefabId">
      <summary>
        <para>Идентификатор сборного экземпляра объекта.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.GlobalObjectId.Equals(UnityEditor.GlobalObjectId)">
      <summary>
        <para>Проверить равенство между двумя GlobalObjectIds.</para>
      </summary>
      <param name="other">
      </param>
    </member>
    <member name="M:UnityEditor.GlobalObjectId.GetGlobalObjectIdSlow(UnityEngine.Object)">
      <summary>
        <para>Преобразует ссылку на объект или InstanceID в GlobalObjectId.</para>
      </summary>
      <param name="targetObject">Преобразуемый объект.</param>
      <param name="instanceId">InstanceID объекта, который необходимо преобразовать.</param>
      <returns>
        <para>Преобразованный GlobalObjectId. Если преобразование не удалось, для GlobalObjectId устанавливается нулевой идентификатор по умолчанию: "GlobalObjectId_V1-0-000000000000000000000000000000000-0-0".</para>
      </returns>
    </member>
    <member name="M:UnityEditor.GlobalObjectId.GetGlobalObjectIdSlow(System.Int32)">
      <summary>
        <para>Преобразует ссылку на объект или InstanceID в GlobalObjectId.</para>
      </summary>
      <param name="targetObject">Преобразуемый объект.</param>
      <param name="instanceId">InstanceID объекта, который необходимо преобразовать.</param>
      <returns>
        <para>Преобразованный GlobalObjectId. Если преобразование не удалось, для GlobalObjectId устанавливается нулевой идентификатор по умолчанию: "GlobalObjectId_V1-0-000000000000000000000000000000000-0-0".</para>
      </returns>
    </member>
    <member name="M:UnityEditor.GlobalObjectId.GetGlobalObjectIdsSlow(UnityEngine.Object[],UnityEditor.GlobalObjectId[])">
      <summary>
        <para>Создает массив GlobalObjectIds на основе массива Objects или InstanceID.</para>
      </summary>
      <param name="objects">Массив объектов для преобразования.</param>
      <param name="outputIdentifiers">Результирующий массив GlobalObjectIds.</param>
      <param name="instanceIds">Массив экземпляров для преобразования.</param>
    </member>
    <member name="M:UnityEditor.GlobalObjectId.GetGlobalObjectIdsSlow(System.Int32[],UnityEditor.GlobalObjectId[])">
      <summary>
        <para>Создает массив GlobalObjectIds на основе массива Objects или InstanceID.</para>
      </summary>
      <param name="objects">Массив объектов для преобразования.</param>
      <param name="outputIdentifiers">Результирующий массив GlobalObjectIds.</param>
      <param name="instanceIds">Массив экземпляров для преобразования.</param>
    </member>
    <member name="M:UnityEditor.GlobalObjectId.GlobalObjectIdentifiersToInstanceIDsSlow(UnityEditor.GlobalObjectId[],System.Int32[])">
      <summary>
        <para>Создает массив InstanceID на основе массива GlobalObjectIds.</para>
      </summary>
      <param name="identifiers">Массив GlobalObjectId для преобразования.</param>
      <param name="outputInstanceIDs">Результирующий массив InstanceID.</param>
    </member>
    <member name="M:UnityEditor.GlobalObjectId.GlobalObjectIdentifiersToObjectsSlow(UnityEditor.GlobalObjectId[],UnityEngine.Object[])">
      <summary>
        <para>Создает массив объектов на основе массива GlobalObjectIds.</para>
      </summary>
      <param name="identifiers">Массив GlobalObjectId для преобразования.</param>
      <param name="outputObjects">Результирующий массив ссылок на объекты.</param>
    </member>
    <member name="M:UnityEditor.GlobalObjectId.GlobalObjectIdentifierToInstanceIDSlow(UnityEditor.GlobalObjectId)">
      <summary>
        <para>Преобразует GlobalObjectId в InstanceID.</para>
      </summary>
      <param name="id">GlobalObjectId для поиска.</param>
      <returns>
        <para>Если GlobalObjectId найден, этот метод возвращает преобразованный InstanceID. Возвращает 0, если GlobalObjectId не найден.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.GlobalObjectId.GlobalObjectIdentifierToObjectSlow(UnityEditor.GlobalObjectId)">
      <summary>
        <para>Преобразует GlobalObjectId в ссылку на объект.</para>
      </summary>
      <param name="id">GlobalObjectId для поиска.</param>
      <returns>
        <para>Если GlobalObjectId найден, этот метод возвращает преобразованную ссылку на объект. Возвращает значение null, если GlobalObjectId не найден.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.GlobalObjectId.ToString">
      <summary>
        <para>Получите строковое представление GlobalObjectId.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.GlobalObjectId.TryParse(System.String,UnityEditor.GlobalObjectId&amp;)">
      <summary>
        <para>Разбирает строковое представление GlobalObjectId в структуру GlobalObjectId.</para>
      </summary>
      <param name="stringValue">Строковое представление GlobalObjectId.
Пример: "GlobalObjectId_V1-2-74c253e3f16be4776bb2d88e01f77c8a-902906726-0".</param>
      <param name="id">Структура GlobalObjectId для проанализированных значений.</param>
      <returns>
        <para>Возвращает true, если строковое представление успешно проанализировано. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.GraphicsJobMode">
      <summary>
        <para>Перечисление, используемое для указания используемого режима графических заданий.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.GraphicsJobMode.Legacy">
      <summary>
        <para>Устаревшие графические задания.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.GraphicsJobMode.Native">
      <summary>
        <para>Собственные графические задания.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.GridPalette">
      <summary>
        <para>GridPalette сохраняет настройки ресурсов палитры, когда они отображаются в окне палитры.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.GridPalette.cellSizing">
      <summary>
        <para>Определяет размер ячеек для палитры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.GridPalette.transparencySortAxis">
      <summary>
        <para>Определяет ось сортировки, если режим сортировки с прозрачностью установлен на пользовательскую ось.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.GridPalette.transparencySortMode">
      <summary>
        <para>Определяет режим сортировки прозрачности средств визуализации в палитре.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.GridPalette.CellSizing">
      <summary>
        <para>Управляет размером ячеек палитры.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.GridPalette.CellSizing.Automatic">
      <summary>
        <para>Автоматически изменяет размер ячеек палитры в соответствии с размером спрайтов в палитре.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.GridPalette.CellSizing.Manual">
      <summary>
        <para>Размер ячеек Палитры будет изменен пользователем вручную.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.GUIDrawer">
      <summary>
        <para>Базовый класс для PropertyDrawer и DecoratorDrawer.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Handles">
      <summary>
        <para>Пользовательские элементы управления трехмерным графическим интерфейсом и рисование в представлении «Сцена».</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Handles.centerColor">
      <summary>
        <para>Цвет, используемый для маркеров, представляющих центр чего-либо.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Handles.color">
      <summary>
        <para>Цвета ручек.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Handles.currentCamera">
      <summary>
        <para>Настройте область просмотра и прочее для текущей камеры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Handles.inverseMatrix">
      <summary>
        <para>Обратная матрица для всех операций с дескрипторами.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Handles.lighting">
      <summary>
        <para>Ручки горят?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Handles.lineThickness">
      <summary>
        <para>Извлекает параметр предпочтения пользователя, который управляет толщиной линий манипулятора инструмента. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Handles.matrix">
      <summary>
        <para>Матрица для всех операций с дескрипторами.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Handles.preselectionColor">
      <summary>
        <para>Цвет, используемый для выделения невыбранного дескриптора, находящегося в данный момент под указателем мыши.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Handles.secondaryColor">
      <summary>
        <para>Мягкий цвет для общих вещей.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Handles.selectedColor">
      <summary>
        <para>Цвет для текущего активного дескриптора.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Handles.xAxisColor">
      <summary>
        <para>Цвет, используемый для маркеров, которые манипулируют координатой X чего-либо.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Handles.yAxisColor">
      <summary>
        <para>Цвет, используемый для маркеров, которые манипулируют координатой Y чего-либо.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Handles.zAxisColor">
      <summary>
        <para>Цвет, используемый для маркеров, которые манипулируют координатой Z чего-либо.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Handles.zTest">
      <summary>
        <para>zПроверка дескрипторов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Handles.ArrowHandleCap(System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.EventType)">
      <summary>
        <para>Нарисуйте стрелку, как в инструменте перемещения.</para>
      </summary>
      <param name="controlID">Идентификатор элемента управления для дескриптора.</param>
      <param name="position">Положение дескриптора в пространстве Handles.matrix.</param>
      <param name="rotation">Вращение ручки в пространстве Handles.matrix.</param>
      <param name="size">Размер ручки в пространстве Handles.matrix. Используйте HandleUtility.GetHandleSize, если вам нужен постоянный размер экранного пространства.</param>
      <param name="eventType">Тип события, на который действует дескриптор. По своей конструкции он обрабатывает события EventType.Layout и EventType.Repaint.</param>
    </member>
    <member name="M:UnityEditor.Handles.BeginGUI">
      <summary>
        <para>Начните блок 2D-графического интерфейса внутри графического интерфейса 3D-дескриптора.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Handles.Button(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,System.Single,UnityEditor.Handles/CapFunction)">
      <summary>
        <para>Создайте 3D-кнопку.</para>
      </summary>
      <param name="position">Позиция для рисования кнопки в пространстве Handles.matrix.</param>
      <param name="direction">Вращение кнопки в пространстве Handles.matrix.</param>
      <param name="size">Визуальный размер ручки. Используйте HandleUtility.GetHandleSize, если вам нужен постоянный размер экранного пространства.</param>
      <param name="pickSize">Размер кнопки для обнаружения щелчка. Используйте HandleUtility.GetHandleSize, если вам нужен постоянный размер экранного пространства.</param>
      <param name="capFunction">Стиль отрисовки кнопки.</param>
      <returns>
        <para>Истинно, когда пользователь нажимает кнопку.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Handles.CapFunction">
      <summary>
        <para>Функция для рисования дескриптора, например Handles.RectangleCap.</para>
      </summary>
      <param name="controlID">Идентификатор элемента управления для дескриптора.</param>
      <param name="position">Положение дескриптора в пространстве Handles.matrix.</param>
      <param name="rotation">Вращение ручки в пространстве Handles.matrix.</param>
      <param name="size">Размер маркера в мировых единицах измерения.</param>
      <param name="eventType">Тип события, на который действует дескриптор. По своей конструкции он обрабатывает события EventType.Layout и EventType.Repaint.</param>
    </member>
    <member name="M:UnityEditor.Handles.CircleHandleCap(System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.EventType)">
      <summary>
        <para>Нарисуйте круглую ручку. Передайте это в функции дескриптора.</para>
      </summary>
      <param name="controlID">Идентификатор элемента управления для дескриптора.</param>
      <param name="position">Положение дескриптора в пространстве Handles.matrix.</param>
      <param name="rotation">Вращение ручки в пространстве Handles.matrix.</param>
      <param name="size">Размер ручки в пространстве Handles.matrix. Используйте HandleUtility.GetHandleSize, если вам нужен постоянный размер экранного пространства.</param>
      <param name="eventType">Тип события, на который действует дескриптор. По своей конструкции он обрабатывает события EventType.Layout и EventType.Repaint.</param>
    </member>
    <member name="M:UnityEditor.Handles.ClearCamera(UnityEngine.Rect,UnityEngine.Camera)">
      <summary>
        <para>Очищает камеру.</para>
      </summary>
      <param name="position">Где в сцене очистить.</param>
      <param name="camera">Камера для очистки.</param>
    </member>
    <member name="M:UnityEditor.Handles.ConeHandleCap(System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.EventType)">
      <summary>
        <para>Нарисуйте ручку-конус. Передайте это в функции дескриптора.</para>
      </summary>
      <param name="controlID">Идентификатор элемента управления для дескриптора.</param>
      <param name="position">Положение дескриптора в пространстве Handles.matrix.</param>
      <param name="rotation">Вращение ручки в пространстве Handles.matrix.</param>
      <param name="size">Размер ручки в пространстве Handles.matrix. Используйте HandleUtility.GetHandleSize, если вам нужен постоянный размер экранного пространства.</param>
      <param name="eventType">Тип события, на который действует дескриптор. По своей конструкции он обрабатывает события EventType.Layout и EventType.Repaint.</param>
    </member>
    <member name="M:UnityEditor.Handles.CubeHandleCap(System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.EventType)">
      <summary>
        <para>Нарисуйте ручку куба. Передайте это в функции дескриптора.</para>
      </summary>
      <param name="controlID">Идентификатор элемента управления для дескриптора.</param>
      <param name="position">Положение дескриптора в пространстве Handles.matrix.</param>
      <param name="rotation">Вращение ручки в пространстве Handles.matrix.</param>
      <param name="size">Размер ручки в пространстве Handles.matrix. Используйте HandleUtility.GetHandleSize, если вам нужен постоянный размер экранного пространства.</param>
      <param name="eventType">Тип события, на который действует дескриптор. По своей конструкции он обрабатывает события EventType.Layout и EventType.Repaint.</param>
    </member>
    <member name="M:UnityEditor.Handles.CylinderHandleCap(System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.EventType)">
      <summary>
        <para>Нарисуйте ручку цилиндра. Передайте это в функции дескриптора.</para>
      </summary>
      <param name="controlID">Идентификатор элемента управления для дескриптора.</param>
      <param name="position">Положение дескриптора в пространстве Handles.matrix.</param>
      <param name="rotation">Вращение ручки в пространстве Handles.matrix.</param>
      <param name="size">Размер ручки в пространстве Handles.matrix. Используйте HandleUtility.GetHandleSize, если вам нужен постоянный размер экранного пространства.</param>
      <param name="eventType">Тип события, на который действует дескриптор. По своей конструкции он обрабатывает события EventType.Layout и EventType.Repaint.</param>
    </member>
    <member name="M:UnityEditor.Handles.Disc(System.Int32,UnityEngine.Quaternion,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Boolean,System.Single)">
      <summary>
        <para>Создайте 3D-диск, который можно перетаскивать мышью.</para>
      </summary>
      <param name="id">Идентификатор управления дескриптора.</param>
      <param name="rotation">Вращение диска.</param>
      <param name="position">Центр диска.</param>
      <param name="axis">Ось вращения.</param>
      <param name="size">Размер диска в мировом пространстве.</param>
      <param name="cutoffPlane">Если true, то рисуется/перетаскивается только передняя половина круга. Это полезно, когда у вас много перекрывающихся осей вращения (например, в инструменте поворота по умолчанию), чтобы избежать беспорядка.</param>
      <param name="snap">Размер сетки для привязки.</param>
      <returns>
        <para>Новое значение поворота, измененное взаимодействием пользователя с маркером. Если пользователь не перемещал дескриптор, он вернет то же значение, которое вы передали в функцию.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.Disc(UnityEngine.Quaternion,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Boolean,System.Single)">
      <summary>
        <para>Создайте 3D-диск, который можно перетаскивать мышью.</para>
      </summary>
      <param name="id">Идентификатор управления дескриптора.</param>
      <param name="rotation">Вращение диска.</param>
      <param name="position">Центр диска.</param>
      <param name="axis">Ось вращения.</param>
      <param name="size">Размер диска в мировом пространстве.</param>
      <param name="cutoffPlane">Если true, то рисуется/перетаскивается только передняя половина круга. Это полезно, когда у вас много перекрывающихся осей вращения (например, в инструменте поворота по умолчанию), чтобы избежать беспорядка.</param>
      <param name="snap">Размер сетки для привязки.</param>
      <returns>
        <para>Новое значение поворота, измененное взаимодействием пользователя с маркером. Если пользователь не перемещал дескриптор, он вернет то же значение, которое вы передали в функцию.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.DotHandleCap(System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.EventType)">
      <summary>
        <para>Нарисуйте точечную ручку. Передайте это в функции дескриптора.</para>
      </summary>
      <param name="controlID">Идентификатор элемента управления для дескриптора.</param>
      <param name="position">Положение дескриптора в пространстве Handles.matrix.</param>
      <param name="rotation">Вращение ручки в пространстве Handles.matrix.</param>
      <param name="size">Размер ручки в пространстве Handles.matrix. Используйте HandleUtility.GetHandleSize, если вам нужен постоянный размер экранного пространства.</param>
      <param name="eventType">Тип события, на который действует дескриптор. По своей конструкции он обрабатывает события EventType.Layout и EventType.Repaint.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawAAConvexPolygon(UnityEngine.Vector3[])">
      <summary>
        <para>Нарисуйте сглаженный выпуклый многоугольник, указанный с помощью массива точек.</para>
      </summary>
      <param name="points">Список точек, описывающих выпуклый многоугольник.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawAAPolyLine(UnityEngine.Vector3[])">
      <summary>
        <para>Нарисуйте сглаженную линию, указанную с помощью массива точек и ширины.</para>
      </summary>
      <param name="lineTex">Текстура AA, используемая для рендеринга.</param>
      <param name="width">Ширина линии.</param>
      <param name="points">Список точек для построения линии.</param>
      <param name="actualNumberOfPoints">
      </param>
    </member>
    <member name="M:UnityEditor.Handles.DrawAAPolyLine(System.Single,UnityEngine.Vector3[])">
      <summary>
        <para>Нарисуйте сглаженную линию, указанную с помощью массива точек и ширины.</para>
      </summary>
      <param name="lineTex">Текстура AA, используемая для рендеринга.</param>
      <param name="width">Ширина линии.</param>
      <param name="points">Список точек для построения линии.</param>
      <param name="actualNumberOfPoints">
      </param>
    </member>
    <member name="M:UnityEditor.Handles.DrawAAPolyLine(UnityEngine.Texture2D,UnityEngine.Vector3[])">
      <summary>
        <para>Нарисуйте сглаженную линию, указанную с помощью массива точек и ширины.</para>
      </summary>
      <param name="lineTex">Текстура AA, используемая для рендеринга.</param>
      <param name="width">Ширина линии.</param>
      <param name="points">Список точек для построения линии.</param>
      <param name="actualNumberOfPoints">
      </param>
    </member>
    <member name="M:UnityEditor.Handles.DrawAAPolyLine(System.Single,System.Int32,UnityEngine.Vector3[])">
      <summary>
        <para>Нарисуйте сглаженную линию, указанную с помощью массива точек и ширины.</para>
      </summary>
      <param name="lineTex">Текстура AA, используемая для рендеринга.</param>
      <param name="width">Ширина линии.</param>
      <param name="points">Список точек для построения линии.</param>
      <param name="actualNumberOfPoints">
      </param>
    </member>
    <member name="M:UnityEditor.Handles.DrawAAPolyLine(UnityEngine.Texture2D,System.Single,UnityEngine.Vector3[])">
      <summary>
        <para>Нарисуйте сглаженную линию, указанную с помощью массива точек и ширины.</para>
      </summary>
      <param name="lineTex">Текстура AA, используемая для рендеринга.</param>
      <param name="width">Ширина линии.</param>
      <param name="points">Список точек для построения линии.</param>
      <param name="actualNumberOfPoints">
      </param>
    </member>
    <member name="M:UnityEditor.Handles.DrawBezier(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Texture2D,System.Single)">
      <summary>
        <para>Нарисуйте текстурированную линию Безье через начальную и конечную точки с заданными касательными.</para>
      </summary>
      <param name="startPosition">Начальная точка линии Безье.</param>
      <param name="endPosition">Конечная точка линии Безье.</param>
      <param name="startTangent">Начальная касательная линии Безье.</param>
      <param name="endTangent">Конечная касательная линии Безье.</param>
      <param name="color">Цвет для линии Безье.</param>
      <param name="texture">Текстура, используемая для рисования линии Безье.</param>
      <param name="width">Ширина линии Безье.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawCamera">
      <summary>
        <para>Рисует камеру внутри прямоугольника.</para>
      </summary>
      <param name="position">Область, в которой будет отображаться камера в координатах GUI.</param>
      <param name="camera">Камера для рисования.</param>
      <param name="drawMode">Как отрисовывается камера (текстура, каркас и т. д.).</param>
      <param name="gridParam">Параметры отрисовки сетки (можно не указывать).</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawCamera(UnityEngine.Rect,UnityEngine.Camera)">
      <summary>
        <para>Рисует камеру внутри прямоугольника.</para>
      </summary>
      <param name="position">Область, в которой будет отображаться камера в координатах GUI.</param>
      <param name="camera">Камера для рисования.</param>
      <param name="drawMode">Как отрисовывается камера (текстура, каркас и т. д.).</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawCamera(UnityEngine.Rect,UnityEngine.Camera,UnityEditor.DrawCameraMode)">
      <summary>
        <para>Рисует камеру внутри прямоугольника.</para>
      </summary>
      <param name="position">Область, в которой будет отображаться камера в координатах GUI.</param>
      <param name="camera">Камера для рисования.</param>
      <param name="drawMode">Как отрисовывается камера (текстура, каркас и т. д.).</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawDottedLine(UnityEngine.Vector3,UnityEngine.Vector3,System.Single)">
      <summary>
        <para>Нарисуйте пунктирную линию от p1 до p2.</para>
      </summary>
      <param name="p1">Начальная точка.</param>
      <param name="p2">Конечная точка.</param>
      <param name="screenSpaceSize">Размер в пикселях для длины сегментов линии и промежутков между ними.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawDottedLines(UnityEngine.Vector3[],System.Single)">
      <summary>
        <para>Нарисуйте список сегментов пунктирной линии.</para>
      </summary>
      <param name="lineSegments">Список пар точек, представляющих начало и конец сегментов линии.</param>
      <param name="screenSpaceSize">Размер в пикселях для длины сегментов линии и промежутков между ними.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawDottedLines(UnityEngine.Vector3[],System.Int32[],System.Single)">
      <summary>
        <para>Нарисуйте список индексированных сегментов пунктирной линии.</para>
      </summary>
      <param name="points">Список точек.</param>
      <param name="segmentIndices">Список пар индексов начальной и конечной точек отрезков.</param>
      <param name="screenSpaceSize">Размер в пикселях для длины сегментов линии и промежутков между ними.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawGizmos">
      <summary>
        <para>Нарисуйте подмножество Gizmos (до или после постобработки) для данной камеры.</para>
      </summary>
      <param name="camera">Камера текущего вида.</param>
    </member>
    <member name="T:UnityEditor.Handles.DrawingScope">
      <summary>
        <para>Одноразовая вспомогательная структура для автоматической установки и отмены Handles.color и/или Handles.matrix.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Handles.DrawingScope.originalColor">
      <summary>
        <para>Значение Handles.color на момент создания DrawingScope.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Handles.DrawingScope.originalMatrix">
      <summary>
        <para>Значение Handles.matrix на момент создания этого DrawingScope.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Handles.DrawingScope.#ctor(UnityEngine.Color)">
      <summary>
        <para>Создайте новую DrawingScope и задайте Handles.color и/или Handles.matrix указанные значения.</para>
      </summary>
      <param name="matrix">Матрица, используемая для отображения дескрипторов внутри блока области видимости.</param>
      <param name="color">Цвет, используемый для отображения дескрипторов внутри блока области видимости.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawingScope.#ctor(UnityEngine.Color,UnityEngine.Matrix4x4)">
      <summary>
        <para>Создайте новую DrawingScope и задайте Handles.color и/или Handles.matrix указанные значения.</para>
      </summary>
      <param name="matrix">Матрица, используемая для отображения дескрипторов внутри блока области видимости.</param>
      <param name="color">Цвет, используемый для отображения дескрипторов внутри блока области видимости.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawingScope.#ctor(UnityEngine.Matrix4x4)">
      <summary>
        <para>Создайте новую DrawingScope и задайте Handles.color и/или Handles.matrix указанные значения.</para>
      </summary>
      <param name="matrix">Матрица, используемая для отображения дескрипторов внутри блока области видимости.</param>
      <param name="color">Цвет, используемый для отображения дескрипторов внутри блока области видимости.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawingScope.Dispose">
      <summary>
        <para>Автоматически возвращает Handles.color и Handles.matrix к их значениям до входа в область при выходе из области. Вам не нужно вызывать этот метод вручную.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Handles.DrawLine(UnityEngine.Vector3,UnityEngine.Vector3,System.Single)">
      <summary>
        <para>Рисует линию от p1 до p2.</para>
      </summary>
      <param name="p1">Положение конечной точки первой линии в мировом пространстве.</param>
      <param name="p2">Положение конечной точки второй линии в мировом пространстве.</param>
      <param name="thickness">Толщина линии в точках пользовательского интерфейса (нулевая толщина рисует линию в один пиксель).</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawLine(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Рисует линию от p1 до p2.</para>
      </summary>
      <param name="p1">Положение конечной точки первой линии в мировом пространстве.</param>
      <param name="p2">Положение конечной точки второй линии в мировом пространстве.</param>
      <param name="thickness">Толщина линии в точках пользовательского интерфейса (нулевая толщина рисует линию в один пиксель).</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawLines(UnityEngine.Vector3[])">
      <summary>
        <para>Нарисуйте список сегментов линии.</para>
      </summary>
      <param name="lineSegments">Список пар точек, представляющих начало и конец сегментов линии.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawLines(UnityEngine.Vector3[],System.Int32[])">
      <summary>
        <para>Нарисуйте список сегментов индексированных линий.</para>
      </summary>
      <param name="points">Список точек.</param>
      <param name="segmentIndices">Список пар индексов начальной и конечной точек отрезков.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawPolyLine(UnityEngine.Vector3[])">
      <summary>
        <para>Нарисуйте линию, проходящую через список точек.</para>
      </summary>
      <param name="points">
      </param>
    </member>
    <member name="M:UnityEditor.Handles.DrawSelectionFrame(System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.EventType)">
      <summary>
        <para>Нарисуйте рамку выбора, обращенную к камере.</para>
      </summary>
      <param name="controlID">
      </param>
      <param name="position">
      </param>
      <param name="rotation">
      </param>
      <param name="size">
      </param>
      <param name="eventType">
      </param>
    </member>
    <member name="M:UnityEditor.Handles.DrawSolidArc(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single)">
      <summary>
        <para>Нарисуйте круговой сектор (кусок пирога) в трехмерном пространстве.</para>
      </summary>
      <param name="center">Центр круга.</param>
      <param name="normal">Нормаль круга.</param>
      <param name="from">Направление точки на окружности относительно центра, где начинается сектор.</param>
      <param name="angle">Угол сектора в градусах.</param>
      <param name="radius">Радиус круга

Примечание. Используйте HandleUtility.GetHandleSize, если вы хотите иметь дескрипторы постоянного размера экрана.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawSolidDisc(UnityEngine.Vector3,UnityEngine.Vector3,System.Single)">
      <summary>
        <para>Нарисуйте сплошной плоский диск в трехмерном пространстве.</para>
      </summary>
      <param name="center">Центр диска.</param>
      <param name="normal">Нормаль диска.</param>
      <param name="radius">Радиус диска.

Примечание. Используйте HandleUtility.GetHandleSize, если вы хотите иметь дескрипторы постоянного размера экрана.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawSolidRectangleWithOutline(UnityEngine.Vector3[],UnityEngine.Color,UnityEngine.Color)">
      <summary>
        <para>Нарисуйте сплошной прямоугольник в трехмерном пространстве.</para>
      </summary>
      <param name="verts">4 вершины прямоугольника в мировых координатах.</param>
      <param name="faceColor">Цвет грани прямоугольника.</param>
      <param name="outlineColor">Цвет контура прямоугольника.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawTexture3DSDF(UnityEngine.Texture,System.Single,System.Single,UnityEngine.Gradient)">
      <summary>
        <para>Рисует 3D-текстуру в режиме рендеринга Signed Distance Field в 3D-пространстве.</para>
      </summary>
      <param name="texture">Объемная текстура для рисования.</param>
      <param name="stepScale">Число, на которое умножается размер шага луча. Размер шага луча — это расстояние между двумя соседними пикселями. Значение по умолчанию — 1.</param>
      <param name="surfaceOffset">Интенсивность пикселей, с которой визуализируется поверхность. Когда это значение положительное, Unity расширит отображаемую поверхность. Когда это значение отрицательное, Unity будет отображать пустое пространство как поверхность, а поверхность — как пустое пространство. Значение по умолчанию — 0.</param>
      <param name="customColorRamp">Пользовательский градиент, который Unity использует в качестве цветовой шкалы. Если это не указано, Unity использует &lt;a href="https:ai.googleblog.com201908turbo-improved-rainbow-colormap-for.html"&gt;цветовую шкалу Google Turbo&lt;a&gt;.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawTexture3DSlice(UnityEngine.Texture,UnityEngine.Vector3,UnityEngine.FilterMode,System.Boolean,UnityEngine.Gradient)">
      <summary>
        <para>Рисует 3D-текстуру, используя режим рендеринга Slice в 3D-пространстве.</para>
      </summary>
      <param name="texture">Объемная текстура для рисования.</param>
      <param name="slicePositions">Положения плоскостей выборки текстуры.</param>
      <param name="filterMode">Устанавливает используемый режим фильтрации текстуры.</param>
      <param name="useColorRamp">Включает визуализацию цветовой шкалы.</param>
      <param name="customColorRamp">Пользовательский градиент, который Unity использует в качестве цветовой шкалы. Если это не указано, Unity использует &lt;a href="https:ai.googleblog.com201908turbo-improved-rainbow-colormap-for.html"&gt;цветовую шкалу Google Turbo&lt;a&gt;.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawTexture3DVolume(UnityEngine.Texture,System.Single,System.Single,UnityEngine.FilterMode,System.Boolean,UnityEngine.Gradient)">
      <summary>
        <para>Рисует 3D-текстуру в режиме объемного рендеринга в 3D-пространстве.</para>
      </summary>
      <param name="texture">Объемная текстура для рисования.</param>
      <param name="opacity">Нелинейный модификатор непрозрачности объема. Используйте это для управления непрозрачностью визуализации. Допустимые значения: 0-1 включительно. Значение 1 полностью непрозрачно, а значение 0 полностью прозрачно. Значение по умолчанию — 1.</param>
      <param name="qualityModifier">Устанавливает выборку на количество пикселей текстуры. Более высокие значения приводят к более высокому качеству рендеринга. Значение по умолчанию — 1.</param>
      <param name="filterMode">Устанавливает используемый режим фильтрации текстуры.</param>
      <param name="useColorRamp">Включает визуализацию цветовой шкалы.</param>
      <param name="customColorRamp">Пользовательский градиент, который Unity использует в качестве цветовой шкалы. Если это не указано, Unity использует &lt;a href="https:ai.googleblog.com201908turbo-improved-rainbow-colormap-for.html"&gt;цветовую шкалу Google Turbo&lt;a&gt;.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawWireArc(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single,System.Single)">
      <summary>
        <para>Рисует дугу окружности в трехмерном пространстве.</para>
      </summary>
      <param name="center">Центр круга в мировом пространстве.</param>
      <param name="normal">Нормаль круга в мировом пространстве.</param>
      <param name="from">Направление точки на окружности относительно центра, где начинается дуга.</param>
      <param name="angle">Угол дуги в градусах.</param>
      <param name="radius">Радиус круга в мировых космических единицах.</param>
      <param name="thickness">Толщина линии в точках пользовательского интерфейса (нулевая толщина рисует линию в один пиксель).</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawWireArc(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single)">
      <summary>
        <para>Рисует дугу окружности в трехмерном пространстве.</para>
      </summary>
      <param name="center">Центр круга в мировом пространстве.</param>
      <param name="normal">Нормаль круга в мировом пространстве.</param>
      <param name="from">Направление точки на окружности относительно центра, где начинается дуга.</param>
      <param name="angle">Угол дуги в градусах.</param>
      <param name="radius">Радиус круга в мировых космических единицах.</param>
      <param name="thickness">Толщина линии в точках пользовательского интерфейса (нулевая толщина рисует линию в один пиксель).</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawWireCube(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Нарисуйте каркасную коробку с центром и размером.</para>
      </summary>
      <param name="center">
      </param>
      <param name="size">
      </param>
    </member>
    <member name="M:UnityEditor.Handles.DrawWireDisc(UnityEngine.Vector3,UnityEngine.Vector3,System.Single)">
      <summary>
        <para>Рисует контур плоского диска в трехмерном пространстве.</para>
      </summary>
      <param name="center">Центр диска в мировом пространстве.</param>
      <param name="normal">Нормаль диска в мировом пространстве.</param>
      <param name="radius">Радиус диска в мировых единицах измерения.</param>
      <param name="thickness">Толщина линии в точках пользовательского интерфейса (нулевая толщина рисует линию в один пиксель).</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawWireDisc(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single)">
      <summary>
        <para>Рисует контур плоского диска в трехмерном пространстве.</para>
      </summary>
      <param name="center">Центр диска в мировом пространстве.</param>
      <param name="normal">Нормаль диска в мировом пространстве.</param>
      <param name="radius">Радиус диска в мировых единицах измерения.</param>
      <param name="thickness">Толщина линии в точках пользовательского интерфейса (нулевая толщина рисует линию в один пиксель).</param>
    </member>
    <member name="M:UnityEditor.Handles.EndGUI">
      <summary>
        <para>Завершите блок 2D-графического интерфейса и вернитесь к графическому интерфейсу 3D-дескриптора.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Handles.FreeMoveHandle(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.Vector3,UnityEditor.Handles/CapFunction)">
      <summary>
        <para>Создайте неограниченный маркер перемещения.</para>
      </summary>
      <param name="position">Положение дескриптора в пространстве Handles.matrix.</param>
      <param name="rotation">Вращение ручки в пространстве Handles.matrix.</param>
      <param name="size">Размер ручки в пространстве Handles.matrix. Используйте HandleUtility.GetHandleSize, если вам нужен постоянный размер экранного пространства.</param>
      <param name="snap">Приращение привязки по всем осям. См. Handles.SnapValue.</param>
      <param name="capFunction">Функция, вызываемая для фактического рисования.</param>
      <param name="controlID">Идентификатор элемента управления для дескриптора.</param>
      <returns>
        <para>Новое значение, измененное взаимодействием пользователя с дескриптором. Если пользователь не перемещал дескриптор, он вернет то же значение, которое вы передали в функцию.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.FreeMoveHandle(System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.Vector3,UnityEditor.Handles/CapFunction)">
      <summary>
        <para>Создайте неограниченный маркер перемещения.</para>
      </summary>
      <param name="position">Положение дескриптора в пространстве Handles.matrix.</param>
      <param name="rotation">Вращение ручки в пространстве Handles.matrix.</param>
      <param name="size">Размер ручки в пространстве Handles.matrix. Используйте HandleUtility.GetHandleSize, если вам нужен постоянный размер экранного пространства.</param>
      <param name="snap">Приращение привязки по всем осям. См. Handles.SnapValue.</param>
      <param name="capFunction">Функция, вызываемая для фактического рисования.</param>
      <param name="controlID">Идентификатор элемента управления для дескриптора.</param>
      <returns>
        <para>Новое значение, измененное взаимодействием пользователя с дескриптором. Если пользователь не перемещал дескриптор, он вернет то же значение, которое вы передали в функцию.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.FreeRotateHandle(System.Int32,UnityEngine.Quaternion,UnityEngine.Vector3,System.Single)">
      <summary>
        <para>Создайте дескриптор неограниченного поворота.</para>
      </summary>
      <param name="id">Идентификатор управления дескриптора.</param>
      <param name="rotation">Ориентация ручки.</param>
      <param name="position">Центр ручки в трехмерном пространстве.</param>
      <param name="size">Размер ручки.

Примечание. Используйте HandleUtility.GetHandleSize, если вы хотите иметь дескрипторы постоянного размера экрана.</param>
      <returns>
        <para>Новое значение поворота, измененное взаимодействием пользователя с маркером. Если пользователь не перемещал дескриптор, он вернет то же значение, которое вы передали в функцию.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.FreeRotateHandle(UnityEngine.Quaternion,UnityEngine.Vector3,System.Single)">
      <summary>
        <para>Создайте дескриптор неограниченного поворота.</para>
      </summary>
      <param name="id">Идентификатор управления дескриптора.</param>
      <param name="rotation">Ориентация ручки.</param>
      <param name="position">Центр ручки в трехмерном пространстве.</param>
      <param name="size">Размер ручки.

Примечание. Используйте HandleUtility.GetHandleSize, если вы хотите иметь дескрипторы постоянного размера экрана.</param>
      <returns>
        <para>Новое значение поворота, измененное взаимодействием пользователя с маркером. Если пользователь не перемещал дескриптор, он вернет то же значение, которое вы передали в функцию.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.GetMainGameViewSize">
      <summary>
        <para>Получите ширину и высоту основного вида игры.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Handles.Label(UnityEngine.Vector3,System.String)">
      <summary>
        <para>Создайте текстовую метку, расположенную в трехмерном пространстве.</para>
      </summary>
      <param name="position">Положение в 3D-пространстве, если смотреть с текущей камеры-манипулятора.</param>
      <param name="text">Текст для отображения на этикетке.</param>
      <param name="image">Текстура для отображения на этикетке.</param>
      <param name="content">Текст, изображение и подсказка для этого ярлыка.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль метки из текущего GUISkin.

Примечание. Используйте HandleUtility.GetHandleSize, если вы хотите иметь дескрипторы постоянного размера экрана.</param>
    </member>
    <member name="M:UnityEditor.Handles.Label(UnityEngine.Vector3,UnityEngine.Texture)">
      <summary>
        <para>Создайте текстовую метку, расположенную в трехмерном пространстве.</para>
      </summary>
      <param name="position">Положение в 3D-пространстве, если смотреть с текущей камеры-манипулятора.</param>
      <param name="text">Текст для отображения на этикетке.</param>
      <param name="image">Текстура для отображения на этикетке.</param>
      <param name="content">Текст, изображение и подсказка для этого ярлыка.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль метки из текущего GUISkin.

Примечание. Используйте HandleUtility.GetHandleSize, если вы хотите иметь дескрипторы постоянного размера экрана.</param>
    </member>
    <member name="M:UnityEditor.Handles.Label(UnityEngine.Vector3,UnityEngine.GUIContent)">
      <summary>
        <para>Создайте текстовую метку, расположенную в трехмерном пространстве.</para>
      </summary>
      <param name="position">Положение в 3D-пространстве, если смотреть с текущей камеры-манипулятора.</param>
      <param name="text">Текст для отображения на этикетке.</param>
      <param name="image">Текстура для отображения на этикетке.</param>
      <param name="content">Текст, изображение и подсказка для этого ярлыка.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль метки из текущего GUISkin.

Примечание. Используйте HandleUtility.GetHandleSize, если вы хотите иметь дескрипторы постоянного размера экрана.</param>
    </member>
    <member name="M:UnityEditor.Handles.Label(UnityEngine.Vector3,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Создайте текстовую метку, расположенную в трехмерном пространстве.</para>
      </summary>
      <param name="position">Положение в 3D-пространстве, если смотреть с текущей камеры-манипулятора.</param>
      <param name="text">Текст для отображения на этикетке.</param>
      <param name="image">Текстура для отображения на этикетке.</param>
      <param name="content">Текст, изображение и подсказка для этого ярлыка.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль метки из текущего GUISkin.

Примечание. Используйте HandleUtility.GetHandleSize, если вы хотите иметь дескрипторы постоянного размера экрана.</param>
    </member>
    <member name="M:UnityEditor.Handles.Label(UnityEngine.Vector3,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Создайте текстовую метку, расположенную в трехмерном пространстве.</para>
      </summary>
      <param name="position">Положение в 3D-пространстве, если смотреть с текущей камеры-манипулятора.</param>
      <param name="text">Текст для отображения на этикетке.</param>
      <param name="image">Текстура для отображения на этикетке.</param>
      <param name="content">Текст, изображение и подсказка для этого ярлыка.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль метки из текущего GUISkin.

Примечание. Используйте HandleUtility.GetHandleSize, если вы хотите иметь дескрипторы постоянного размера экрана.</param>
    </member>
    <member name="M:UnityEditor.Handles.MakeBezierPoints(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Int32)">
      <summary>
        <para>Возвращает массив точек к представлению кривой Безье.</para>
      </summary>
      <param name="startPosition">
      </param>
      <param name="endPosition">
      </param>
      <param name="startTangent">
      </param>
      <param name="endTangent">
      </param>
      <param name="division">
      </param>
    </member>
    <member name="M:UnityEditor.Handles.PositionHandle(UnityEngine.Vector3,UnityEngine.Quaternion)">
      <summary>
        <para>Создайте дескриптор положения.</para>
      </summary>
      <param name="position">Центр ручки в трехмерном пространстве.</param>
      <param name="rotation">Ориентация ручки в трехмерном пространстве.</param>
      <returns>
        <para>Новое значение, измененное взаимодействием пользователя с дескриптором. Если пользователь не перемещал дескриптор, он вернет то же значение, которое вы передали в функцию.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.RadiusHandle(UnityEngine.Quaternion,UnityEngine.Vector3,System.Single,System.Boolean)">
      <summary>
        <para>Создайте маркер радиуса просмотра сцены.</para>
      </summary>
      <param name="rotation">Ориентация ручки.</param>
      <param name="position">Центр ручки в трехмерном пространстве.</param>
      <param name="radius">Радиус для изменения.</param>
      <param name="handlesOnly">Следует ли опускать круговой контур радиуса и рисовать только маркеры точек.</param>
      <returns>
        <para>Новое значение, измененное взаимодействием пользователя с дескриптором. Если пользователь не перемещал дескриптор, он вернет то же значение, которое вы передали в функцию.

Примечание. Используйте HandleUtility.GetHandleSize, если вы хотите иметь дескрипторы постоянного размера экрана.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.RadiusHandle(UnityEngine.Quaternion,UnityEngine.Vector3,System.Single)">
      <summary>
        <para>Создайте маркер радиуса просмотра сцены.</para>
      </summary>
      <param name="rotation">Ориентация ручки.</param>
      <param name="position">Центр ручки в трехмерном пространстве.</param>
      <param name="radius">Радиус для изменения.</param>
      <param name="handlesOnly">Следует ли опускать круговой контур радиуса и рисовать только маркеры точек.</param>
      <returns>
        <para>Новое значение, измененное взаимодействием пользователя с дескриптором. Если пользователь не перемещал дескриптор, он вернет то же значение, которое вы передали в функцию.

Примечание. Используйте HandleUtility.GetHandleSize, если вы хотите иметь дескрипторы постоянного размера экрана.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.RectangleHandleCap(System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.EventType)">
      <summary>
        <para>Нарисуйте прямоугольную ручку. Передайте это в функции дескриптора.</para>
      </summary>
      <param name="controlID">Идентификатор элемента управления для дескриптора.</param>
      <param name="position">Положение дескриптора в пространстве Handles.matrix.</param>
      <param name="rotation">Вращение ручки в пространстве Handles.matrix.</param>
      <param name="size">Размер ручки в пространстве Handles.matrix. Используйте HandleUtility.GetHandleSize, если вам нужен постоянный размер экранного пространства.</param>
      <param name="eventType">Тип события, на который действует дескриптор. По своей конструкции он обрабатывает события EventType.Layout и EventType.Repaint.</param>
    </member>
    <member name="M:UnityEditor.Handles.RotationHandle(UnityEngine.Quaternion,UnityEngine.Vector3)">
      <summary>
        <para>Создайте маркер вращения представления сцены.</para>
      </summary>
      <param name="rotation">Ориентация ручки.</param>
      <param name="position">Центр ручки в трехмерном пространстве.</param>
      <returns>
        <para>Новое значение поворота, измененное взаимодействием пользователя с маркером. Если пользователь не перемещал дескриптор, он вернет то же значение, которое вы передали в функцию.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.ScaleHandle(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single)">
      <summary>
        <para>Создайте дескриптор масштаба представления сцены.</para>
      </summary>
      <param name="scale">Масштаб для изменения.</param>
      <param name="position">Положение ручки.</param>
      <param name="rotation">Вращение ручки.</param>
      <param name="size">Позволяет масштабировать размер маркера на экране.</param>
      <returns>
        <para>Новое значение, измененное взаимодействием пользователя с дескриптором. Если пользователь не перемещал дескриптор, он вернет то же значение, которое вы передали в функцию.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.ScaleSlider(System.Single,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,System.Single)">
      <summary>
        <para>Создайте ползунок шкалы направления.</para>
      </summary>
      <param name="scale">Значение, которое пользователь может изменить.</param>
      <param name="position">Положение дескриптора в пространстве Handles.matrix.</param>
      <param name="direction">Направление ручки в пространстве Handles.matrix.</param>
      <param name="rotation">Вращение ручки в пространстве Handles.matrix.</param>
      <param name="size">Размер ручки в пространстве Handles.matrix. Используйте HandleUtility.GetHandleSize, если вам нужен постоянный размер экранного пространства.</param>
      <param name="snap">Шаг привязки. См. Handles.SnapValue.</param>
      <returns>
        <para>Новое значение, измененное взаимодействием пользователя с дескриптором. Если пользователь не перемещал дескриптор, он вернет то же значение, которое вы передали в функцию.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.ScaleValueHandle(System.Single,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEditor.Handles/CapFunction,System.Single)">
      <summary>
        <para>Создайте 3D-манипулятор, который масштабирует одно плавающее число.</para>
      </summary>
      <param name="value">Значение, которое пользователь может изменить.</param>
      <param name="position">Положение дескриптора в пространстве Handles.matrix.</param>
      <param name="rotation">Вращение ручки в пространстве Handles.matrix.</param>
      <param name="size">Размер ручки в пространстве Handles.matrix. Используйте HandleUtility.GetHandleSize, если вам нужен постоянный размер экранного пространства.</param>
      <param name="snap">Шаг привязки. См. Handles.SnapValue.</param>
      <param name="capFunction">Функция, вызываемая для фактического рисования.</param>
      <returns>
        <para>Новое значение, измененное взаимодействием пользователя с дескриптором. Если пользователь не перемещал дескриптор, он вернет то же значение, которое вы передали в функцию.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.SetCamera(UnityEngine.Camera)">
      <summary>
        <para>Настройте текущую камеру так, чтобы все ручки и приспособления отображались с ее настройками.</para>
      </summary>
      <param name="camera">
      </param>
      <param name="position">
      </param>
    </member>
    <member name="M:UnityEditor.Handles.SetCamera(UnityEngine.Rect,UnityEngine.Camera)">
      <summary>
        <para>Настройте текущую камеру так, чтобы все ручки и приспособления отображались с ее настройками.</para>
      </summary>
      <param name="camera">
      </param>
      <param name="position">
      </param>
    </member>
    <member name="M:UnityEditor.Handles.ShouldRenderGizmos">
      <summary>
        <para>Определяет, рисовать ли Gizmos.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Handles.SizeFunction">
      <summary>
        <para>Тип делегата для получения размера дескриптора на основе его текущей позиции.</para>
      </summary>
      <param name="position">Текущее положение дескриптора в пространстве Handles.matrix.</param>
    </member>
    <member name="M:UnityEditor.Handles.Slider(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Создайте 3D-ползунок, который перемещается по одной оси.</para>
      </summary>
      <param name="position">Положение текущей точки в пространстве Handles.matrix.</param>
      <param name="direction">Направление оси ползунка в пространстве Handles.matrix.</param>
      <param name="size">Размер ручки в пространстве Handles.matrix. Используйте HandleUtility.GetHandleSize, если вам нужен постоянный размер экранного пространства.</param>
      <param name="snap">Шаг привязки. См. Handles.SnapValue.</param>
      <param name="capFunction">Функция для вызова фактического рисования. По умолчанию это Handles.ArrowHandleCap, но можно использовать любую функцию с такой же сигнатурой.</param>
      <returns>
        <para>Новое значение, измененное взаимодействием пользователя с дескриптором. Если пользователь не перемещал дескриптор, он вернет значение позиции, переданное в функцию.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.Slider(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEditor.Handles/CapFunction,System.Single)">
      <summary>
        <para>Создайте 3D-ползунок, который перемещается по одной оси.</para>
      </summary>
      <param name="position">Положение текущей точки в пространстве Handles.matrix.</param>
      <param name="direction">Направление оси ползунка в пространстве Handles.matrix.</param>
      <param name="size">Размер ручки в пространстве Handles.matrix. Используйте HandleUtility.GetHandleSize, если вам нужен постоянный размер экранного пространства.</param>
      <param name="snap">Шаг привязки. См. Handles.SnapValue.</param>
      <param name="capFunction">Функция для вызова фактического рисования. По умолчанию это Handles.ArrowHandleCap, но можно использовать любую функцию с такой же сигнатурой.</param>
      <returns>
        <para>Новое значение, измененное взаимодействием пользователя с дескриптором. Если пользователь не перемещал дескриптор, он вернет значение позиции, переданное в функцию.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.Slider2D(System.Int32,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEditor.Handles/CapFunction,UnityEngine.Vector2,System.Boolean)">
      <summary>
        <para>Создайте 3D-ползунок, который перемещается по плоскости, определяемой двумя осями.</para>
      </summary>
      <param name="id">(необязательно) переопределить ControlID по умолчанию для этого экземпляра Slider2D.</param>
      <param name="handlePos">Положение текущей точки в пространстве Handles.matrix.</param>
      <param name="offset">(необязательно) отображает Slider2D в handlePos, но обрабатывает начало Slider2D как handlePos + смещение. Полезно для экземпляров Slider2D, которые размещаются/отрисовываются относительно другого объекта или дескриптора.</param>
      <param name="handleDir">Направление дескриптора в пространстве Handles.matrix, используемое только для рендеринга дескриптора.</param>
      <param name="slideDir1">Первая ось плоскости движения ползунка в пространстве Handles.matrix.</param>
      <param name="slideDir2">Вторая ось плоскости движения ползунка в пространстве Handles.matrix.</param>
      <param name="handleSize">Размер ручки в пространстве Handles.matrix. Используйте HandleUtility.GetHandleSize, если вам нужен постоянный размер экранного пространства.</param>
      <param name="snap">(с плавающей запятой или Vector2) Шаг привязки по обеим осям, равномерный или по осям. См. Handles.SnapValue.</param>
      <param name="drawHelper">(по умолчанию: false) отображать прямоугольник вокруг маркера при перетаскивании.</param>
      <param name="capFunction">Функция, вызываемая для фактического рисования.</param>
      <returns>
        <para>Новое значение, измененное взаимодействием пользователя с дескриптором. Если пользователь не перемещал дескриптор, он вернет значение позиции, переданное в функцию.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.Slider2D(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEditor.Handles/CapFunction,System.Single,System.Boolean)">
      <summary>
        <para>Создайте 3D-ползунок, который перемещается по плоскости, определяемой двумя осями.</para>
      </summary>
      <param name="id">(необязательно) переопределить ControlID по умолчанию для этого экземпляра Slider2D.</param>
      <param name="handlePos">Положение текущей точки в пространстве Handles.matrix.</param>
      <param name="offset">(необязательно) отображает Slider2D в handlePos, но обрабатывает начало Slider2D как handlePos + смещение. Полезно для экземпляров Slider2D, которые размещаются/отрисовываются относительно другого объекта или дескриптора.</param>
      <param name="handleDir">Направление дескриптора в пространстве Handles.matrix, используемое только для рендеринга дескриптора.</param>
      <param name="slideDir1">Первая ось плоскости движения ползунка в пространстве Handles.matrix.</param>
      <param name="slideDir2">Вторая ось плоскости движения ползунка в пространстве Handles.matrix.</param>
      <param name="handleSize">Размер ручки в пространстве Handles.matrix. Используйте HandleUtility.GetHandleSize, если вам нужен постоянный размер экранного пространства.</param>
      <param name="snap">(с плавающей запятой или Vector2) Шаг привязки по обеим осям, равномерный или по осям. См. Handles.SnapValue.</param>
      <param name="drawHelper">(по умолчанию: false) отображать прямоугольник вокруг маркера при перетаскивании.</param>
      <param name="capFunction">Функция, вызываемая для фактического рисования.</param>
      <returns>
        <para>Новое значение, измененное взаимодействием пользователя с дескриптором. Если пользователь не перемещал дескриптор, он вернет значение позиции, переданное в функцию.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.Slider2D(System.Int32,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEditor.Handles/CapFunction,UnityEngine.Vector2,System.Boolean)">
      <summary>
        <para>Создайте 3D-ползунок, который перемещается по плоскости, определяемой двумя осями.</para>
      </summary>
      <param name="id">(необязательно) переопределить ControlID по умолчанию для этого экземпляра Slider2D.</param>
      <param name="handlePos">Положение текущей точки в пространстве Handles.matrix.</param>
      <param name="offset">(необязательно) отображает Slider2D в handlePos, но обрабатывает начало Slider2D как handlePos + смещение. Полезно для экземпляров Slider2D, которые размещаются/отрисовываются относительно другого объекта или дескриптора.</param>
      <param name="handleDir">Направление дескриптора в пространстве Handles.matrix, используемое только для рендеринга дескриптора.</param>
      <param name="slideDir1">Первая ось плоскости движения ползунка в пространстве Handles.matrix.</param>
      <param name="slideDir2">Вторая ось плоскости движения ползунка в пространстве Handles.matrix.</param>
      <param name="handleSize">Размер ручки в пространстве Handles.matrix. Используйте HandleUtility.GetHandleSize, если вам нужен постоянный размер экранного пространства.</param>
      <param name="snap">(с плавающей запятой или Vector2) Шаг привязки по обеим осям, равномерный или по осям. См. Handles.SnapValue.</param>
      <param name="drawHelper">(по умолчанию: false) отображать прямоугольник вокруг маркера при перетаскивании.</param>
      <param name="capFunction">Функция, вызываемая для фактического рисования.</param>
      <returns>
        <para>Новое значение, измененное взаимодействием пользователя с дескриптором. Если пользователь не перемещал дескриптор, он вернет значение позиции, переданное в функцию.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.Slider2D(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEditor.Handles/CapFunction,UnityEngine.Vector2,System.Boolean)">
      <summary>
        <para>Создайте 3D-ползунок, который перемещается по плоскости, определяемой двумя осями.</para>
      </summary>
      <param name="id">(необязательно) переопределить ControlID по умолчанию для этого экземпляра Slider2D.</param>
      <param name="handlePos">Положение текущей точки в пространстве Handles.matrix.</param>
      <param name="offset">(необязательно) отображает Slider2D в handlePos, но обрабатывает начало Slider2D как handlePos + смещение. Полезно для экземпляров Slider2D, которые размещаются/отрисовываются относительно другого объекта или дескриптора.</param>
      <param name="handleDir">Направление дескриптора в пространстве Handles.matrix, используемое только для рендеринга дескриптора.</param>
      <param name="slideDir1">Первая ось плоскости движения ползунка в пространстве Handles.matrix.</param>
      <param name="slideDir2">Вторая ось плоскости движения ползунка в пространстве Handles.matrix.</param>
      <param name="handleSize">Размер ручки в пространстве Handles.matrix. Используйте HandleUtility.GetHandleSize, если вам нужен постоянный размер экранного пространства.</param>
      <param name="snap">(с плавающей запятой или Vector2) Шаг привязки по обеим осям, равномерный или по осям. См. Handles.SnapValue.</param>
      <param name="drawHelper">(по умолчанию: false) отображать прямоугольник вокруг маркера при перетаскивании.</param>
      <param name="capFunction">Функция, вызываемая для фактического рисования.</param>
      <returns>
        <para>Новое значение, измененное взаимодействием пользователя с дескриптором. Если пользователь не перемещал дескриптор, он вернет значение позиции, переданное в функцию.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.SnapToGrid(UnityEngine.Transform[],UnityEngine.SnapAxis)">
      <summary>
        <para>Округляет каждое Transform.position до ближайшего кратного EditorSnap.move.</para>
      </summary>
      <param name="transforms">Преобразования для привязки.</param>
      <param name="axis">Оси, к которым применяется привязка.</param>
    </member>
    <member name="M:UnityEditor.Handles.SnapValue(System.Single,System.Single)">
      <summary>
        <para>Округляет значение до ближайшего кратного привязки, если привязка активна. Обратите внимание, что привязка может быть только положительной.</para>
      </summary>
      <param name="value">Значение для привязки.</param>
      <param name="snap">Приращение для привязки.</param>
      <returns>
        <para>Если привязка активна, значение округляется до ближайшего кратного привязки (привязка может быть только положительной).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.SnapValue(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Округляет значение до ближайшего кратного привязки, если привязка активна. Обратите внимание, что привязка может быть только положительной.</para>
      </summary>
      <param name="value">Значение для привязки.</param>
      <param name="snap">Приращение для привязки.</param>
      <returns>
        <para>Если привязка активна, значение округляется до ближайшего кратного привязки (привязка может быть только положительной).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.SnapValue(UnityEngine.Vector2,UnityEngine.Vector2)">
      <summary>
        <para>Округляет значение до ближайшего кратного привязки, если привязка активна. Обратите внимание, что привязка может быть только положительной.</para>
      </summary>
      <param name="value">Значение для привязки.</param>
      <param name="snap">Приращение для привязки.</param>
      <returns>
        <para>Если привязка активна, значение округляется до ближайшего кратного привязки (привязка может быть только положительной).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.SphereHandleCap(System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.EventType)">
      <summary>
        <para>Нарисуйте ручку сферы. Передайте это в функции дескриптора.</para>
      </summary>
      <param name="controlID">Идентификатор элемента управления для дескриптора.</param>
      <param name="position">Положение дескриптора в пространстве Handles.matrix.</param>
      <param name="rotation">Вращение ручки в пространстве Handles.matrix.</param>
      <param name="eventType">Тип события, на который действует дескриптор. По своей конструкции он обрабатывает события EventType.Layout и EventType.Repaint.</param>
      <param name="size">Размер ручки в пространстве Handles.matrix. Используйте HandleUtility.GetHandleSize, если вам нужен постоянный размер экранного пространства.</param>
    </member>
    <member name="M:UnityEditor.Handles.TransformHandle(UnityEngine.Vector3&amp;,UnityEngine.Quaternion&amp;,UnityEngine.Vector3&amp;)">
      <summary>
        <para>Создает дескриптор преобразования.</para>
      </summary>
      <param name="position">Положение ручки.</param>
      <param name="rotation">Ориентация ручки.</param>
      <param name="scale">Значение масштаба для изменения.</param>
      <param name="uniformScale">Единое значение масштаба для изменения.</param>
    </member>
    <member name="M:UnityEditor.Handles.TransformHandle(UnityEngine.Vector3&amp;,UnityEngine.Quaternion&amp;,System.Single&amp;)">
      <summary>
        <para>Создает дескриптор преобразования.</para>
      </summary>
      <param name="position">Положение ручки.</param>
      <param name="rotation">Ориентация ручки.</param>
      <param name="scale">Значение масштаба для изменения.</param>
      <param name="uniformScale">Единое значение масштаба для изменения.</param>
    </member>
    <member name="M:UnityEditor.Handles.TransformHandle(UnityEngine.Vector3&amp;,UnityEngine.Quaternion&amp;)">
      <summary>
        <para>Создает дескриптор преобразования.</para>
      </summary>
      <param name="position">Положение ручки.</param>
      <param name="rotation">Ориентация ручки.</param>
      <param name="scale">Значение масштаба для изменения.</param>
      <param name="uniformScale">Единое значение масштаба для изменения.</param>
    </member>
    <member name="P:UnityEditor.Handles.UIColliderHandleColor">
      <summary>
        <para>Цвет для визуализации отступов пользовательского интерфейса Unity.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.HandleUtility">
      <summary>
        <para>Вспомогательные функции для графического 3D-интерфейса в стиле просмотра сцен.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.HandleUtility.acceleration">
      <summary>
        <para>Получить стандартное ускорение для перетаскивания значений (только для чтения).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.HandleUtility.niceMouseDelta">
      <summary>
        <para>Получите хорошую дельту мыши, чтобы использовать ее для перетаскивания значения с плавающей запятой (только для чтения).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.HandleUtility.niceMouseDeltaZoom">
      <summary>
        <para>Получить хорошую дельту мыши для масштабирования (только для чтения).</para>
      </summary>
    </member>
    <member name="?:UnityEditor.HandleUtility.pickGameObjectCustomPasses(UnityEditor.HandleUtility/PickGameObjectCallback)">
      <summary>
        <para>Подпишитесь на это событие, чтобы добавить дополнительные объекты выбора в метод HandleUtility.PickGameObject.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="?:UnityEditor.HandleUtility.placeObjectCustomPasses(UnityEditor.HandleUtility/PlaceObjectDelegate)">
      <summary>
        <para>Подпишитесь на это событие, чтобы управлять размещением объекта в SceneView.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="M:UnityEditor.HandleUtility.AddControl(System.Int32,System.Single)">
      <summary>
        <para>Запишите измерение расстояния от ручки.</para>
      </summary>
      <param name="controlId">
      </param>
      <param name="distance">
      </param>
    </member>
    <member name="M:UnityEditor.HandleUtility.AddDefaultControl(System.Int32)">
      <summary>
        <para>Добавьте идентификатор для элемента управления по умолчанию. Это будет выбрано, если ничего другого нет.</para>
      </summary>
      <param name="controlId">
      </param>
    </member>
    <member name="M:UnityEditor.HandleUtility.CalcLineTranslation(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Сопоставьте перетаскивание мышью с движением вдоль линии в трехмерном пространстве.</para>
      </summary>
      <param name="src">Исходная точка перетаскивания.</param>
      <param name="dest">Конечная точка перетаскивания.</param>
      <param name="srcPosition">Трехмерное положение перетаскиваемого объекта в исходном луче.</param>
      <param name="constraintDir">3D-направление ограниченного движения.</param>
      <returns>
        <para>Расстояние, пройденное по ограничениюDir.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.HandleUtility.ClosestPointToArc(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single)">
      <summary>
        <para>Получить точку на дуге (в трехмерном пространстве), ближайшую к текущему положению мыши.</para>
      </summary>
      <param name="center">
      </param>
      <param name="normal">
      </param>
      <param name="from">
      </param>
      <param name="angle">
      </param>
      <param name="radius">
      </param>
    </member>
    <member name="M:UnityEditor.HandleUtility.ClosestPointToDisc(UnityEngine.Vector3,UnityEngine.Vector3,System.Single)">
      <summary>
        <para>Получить точку на диске (в трехмерном пространстве), ближайшую к текущей позиции мыши.</para>
      </summary>
      <param name="center">
      </param>
      <param name="normal">
      </param>
      <param name="radius">
      </param>
    </member>
    <member name="M:UnityEditor.HandleUtility.ClosestPointToPolyLine(UnityEngine.Vector3[])">
      <summary>
        <para>Получить точку на полилинии (в 3D-пространстве), ближайшую к текущему положению мыши.</para>
      </summary>
      <param name="vertices">
      </param>
    </member>
    <member name="M:UnityEditor.HandleUtility.DistancePointBezier(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Вычислить расстояние между точкой и кривой Безье.</para>
      </summary>
      <param name="point">
      </param>
      <param name="startPosition">
      </param>
      <param name="endPosition">
      </param>
      <param name="startTangent">
      </param>
      <param name="endTangent">
      </param>
    </member>
    <member name="M:UnityEditor.HandleUtility.DistancePointLine(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Вычислить расстояние между точкой и линией.</para>
      </summary>
      <param name="point">
      </param>
      <param name="lineStart">
      </param>
      <param name="lineEnd">
      </param>
    </member>
    <member name="M:UnityEditor.HandleUtility.DistancePointToLine(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2)">
      <summary>
        <para>Расстояние от точки p в 2d до линии, определяемой двумя точками a и b.</para>
      </summary>
      <param name="p">
      </param>
      <param name="a">
      </param>
      <param name="b">
      </param>
    </member>
    <member name="M:UnityEditor.HandleUtility.DistancePointToLineSegment(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2)">
      <summary>
        <para>Расстояние от точки p в 2d до отрезка, определяемого двумя точками a и b.</para>
      </summary>
      <param name="p">
      </param>
      <param name="a">
      </param>
      <param name="b">
      </param>
    </member>
    <member name="M:UnityEditor.HandleUtility.DistanceToArc(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single)">
      <summary>
        <para>Возвращает расстояние в пикселях от указателя мыши до 3D-участка диска.</para>
      </summary>
      <param name="center">
      </param>
      <param name="normal">
      </param>
      <param name="from">
      </param>
      <param name="angle">
      </param>
      <param name="radius">
      </param>
    </member>
    <member name="M:UnityEditor.HandleUtility.DistanceToCircle(UnityEngine.Vector3,System.Single)">
      <summary>
        <para>Возвращает расстояние в пикселях от указателя мыши до круга, обращенного к камере.</para>
      </summary>
      <param name="position">
      </param>
      <param name="radius">
      </param>
    </member>
    <member name="M:UnityEditor.HandleUtility.DistanceToCone(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single)">
      <summary>
        <para>Возвращает расстояние в пикселях от указателя мыши до конуса.</para>
      </summary>
      <param name="position">Положение конуса.</param>
      <param name="rotation">Вращение конуса.</param>
      <param name="size">Размер конуса.</param>
      <returns>
        <para>Расстояние от мыши до конуса в пикселях.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.HandleUtility.DistanceToCube(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single)">
      <summary>
        <para>Возвращает расстояние в пикселях от указателя мыши до куба.</para>
      </summary>
      <param name="position">Позиция куба.</param>
      <param name="rotation">Вращение куба.</param>
      <param name="size">Размер куба.</param>
      <returns>
        <para>Расстояние от мыши до куба в пикселях.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.HandleUtility.DistanceToDisc(UnityEngine.Vector3,UnityEngine.Vector3,System.Single)">
      <summary>
        <para>Возвращает расстояние в пикселях от указателя мыши до 3D-диска.</para>
      </summary>
      <param name="center">
      </param>
      <param name="normal">
      </param>
      <param name="radius">
      </param>
    </member>
    <member name="M:UnityEditor.HandleUtility.DistanceToLine(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Возвращает расстояние в пикселях от указателя мыши до линии.</para>
      </summary>
      <param name="p1">
      </param>
      <param name="p2">
      </param>
    </member>
    <member name="M:UnityEditor.HandleUtility.DistanceToPolyLine(UnityEngine.Vector3[])">
      <summary>
        <para>Возвращает расстояние в пикселях от указателя мыши до полилинии.</para>
      </summary>
      <param name="points">
      </param>
    </member>
    <member name="M:UnityEditor.HandleUtility.DistanceToRectangle(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single)">
      <summary>
        <para>Возвращает расстояние в пикселях от указателя мыши до прямоугольника на экране.</para>
      </summary>
      <param name="position">
      </param>
      <param name="rotation">
      </param>
      <param name="size">
      </param>
    </member>
    <member name="M:UnityEditor.HandleUtility.FindNearestVertex(UnityEngine.Vector2,UnityEngine.Vector3&amp;)">
      <summary>
        <para>Возвращает ближайшую вершину к guiPoint в пределах максимального радиуса 50 пикселей.</para>
      </summary>
      <param name="guiPoint">Точка в пространстве GUI.</param>
      <param name="vertex">Ближайшая позиция вершины к guiPoint или значение по умолчанию, если ни одна вершина не находится в пределах минимального расстояния выбора.</param>
      <param name="objectsToSearch">Массив Transform для рассмотрения при выборе ближайшей вершины. При значении null учитываются все активные объекты в открытых сценах.</param>
      <param name="objectsToIgnore">Массив Transform для исключения из рассмотрения при выборе ближайшей вершины.</param>
      <returns>
        <para>Возвращает true, если найдена вершина в пределах 50 пикселей от точки guiPoint, и false, если вершина не найдена в пределах минимального радиуса выбора.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.HandleUtility.FindNearestVertex(UnityEngine.Vector2,UnityEngine.Transform[],UnityEngine.Vector3&amp;)">
      <summary>
        <para>Возвращает ближайшую вершину к guiPoint в пределах максимального радиуса 50 пикселей.</para>
      </summary>
      <param name="guiPoint">Точка в пространстве GUI.</param>
      <param name="vertex">Ближайшая позиция вершины к guiPoint или значение по умолчанию, если ни одна вершина не находится в пределах минимального расстояния выбора.</param>
      <param name="objectsToSearch">Массив Transform для рассмотрения при выборе ближайшей вершины. При значении null учитываются все активные объекты в открытых сценах.</param>
      <param name="objectsToIgnore">Массив Transform для исключения из рассмотрения при выборе ближайшей вершины.</param>
      <returns>
        <para>Возвращает true, если найдена вершина в пределах 50 пикселей от точки guiPoint, и false, если вершина не найдена в пределах минимального радиуса выбора.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.HandleUtility.FindNearestVertex(UnityEngine.Vector2,UnityEngine.Transform[],UnityEngine.Transform[],UnityEngine.Vector3&amp;)">
      <summary>
        <para>Возвращает ближайшую вершину к guiPoint в пределах максимального радиуса 50 пикселей.</para>
      </summary>
      <param name="guiPoint">Точка в пространстве GUI.</param>
      <param name="vertex">Ближайшая позиция вершины к guiPoint или значение по умолчанию, если ни одна вершина не находится в пределах минимального расстояния выбора.</param>
      <param name="objectsToSearch">Массив Transform для рассмотрения при выборе ближайшей вершины. При значении null учитываются все активные объекты в открытых сценах.</param>
      <param name="objectsToIgnore">Массив Transform для исключения из рассмотрения при выборе ближайшей вершины.</param>
      <returns>
        <para>Возвращает true, если найдена вершина в пределах 50 пикселей от точки guiPoint, и false, если вершина не найдена в пределах минимального радиуса выбора.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.HandleUtility.GetHandleSize(UnityEngine.Vector3)">
      <summary>
        <para>Получить размер манипулятора в мировом пространстве в данной позиции.</para>
      </summary>
      <param name="position">Положение маркера в трехмерном пространстве.</param>
      <returns>
        <para>Постоянный размер экрана для ручки, основанный на расстоянии от предоставленной позиции ручки до камеры.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.HandleUtility.GUIPointToScreenPixelCoordinate(UnityEngine.Vector2)">
      <summary>
        <para>Преобразует позицию 2D GUI в координаты пикселей экрана.</para>
      </summary>
      <param name="guiPoint">
      </param>
    </member>
    <member name="M:UnityEditor.HandleUtility.GUIPointToWorldRay(UnityEngine.Vector2)">
      <summary>
        <para>Преобразование положения 2D GUI в мировой космический луч.</para>
      </summary>
      <param name="position">
      </param>
    </member>
    <member name="M:UnityEditor.HandleUtility.PickGameObject(UnityEngine.Vector2,System.Int32&amp;)">
      <summary>
        <para>Выберите игровой объект, ближайший к указанной позиции.</para>
      </summary>
      <param name="selectPrefabRoot">Выберите Сборный.</param>
      <param name="materialIndex">Возвращает индекс в массив материалов компонента Renderer, который находится ближе всего к указанной позиции.</param>
      <param name="position">Позиция в координатах GUI. Верхний левый угол окна равен (0,0), а нижний правый — (Screen.width, Screen.height).</param>
      <param name="ignore">Массив игровых объектов, которые не будут учитываться при выборе ближайшего игрового объекта.</param>
      <param name="filter">Массив GameObjects, который будет рассматриваться исключительно для выбора. Если значение null, все игровые объекты в открытых сценах могут быть выбраны.</param>
      <param name="selection">Массив GameObjects, который будет рассматриваться исключительно для выбора. Если значение null, все игровые объекты в открытых сценах могут быть выбраны.</param>
      <returns>
        <para>GameObject, который находится под запрошенной позицией.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.HandleUtility.PickGameObject(UnityEngine.Vector2,UnityEngine.GameObject[],System.Int32&amp;)">
      <summary>
        <para>Выберите игровой объект, ближайший к указанной позиции.</para>
      </summary>
      <param name="selectPrefabRoot">Выберите Сборный.</param>
      <param name="materialIndex">Возвращает индекс в массив материалов компонента Renderer, который находится ближе всего к указанной позиции.</param>
      <param name="position">Позиция в координатах GUI. Верхний левый угол окна равен (0,0), а нижний правый — (Screen.width, Screen.height).</param>
      <param name="ignore">Массив игровых объектов, которые не будут учитываться при выборе ближайшего игрового объекта.</param>
      <param name="filter">Массив GameObjects, который будет рассматриваться исключительно для выбора. Если значение null, все игровые объекты в открытых сценах могут быть выбраны.</param>
      <param name="selection">Массив GameObjects, который будет рассматриваться исключительно для выбора. Если значение null, все игровые объекты в открытых сценах могут быть выбраны.</param>
      <returns>
        <para>GameObject, который находится под запрошенной позицией.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.HandleUtility.PickGameObject(UnityEngine.Vector2,UnityEngine.GameObject[],UnityEngine.GameObject[],System.Int32&amp;)">
      <summary>
        <para>Выберите игровой объект, ближайший к указанной позиции.</para>
      </summary>
      <param name="selectPrefabRoot">Выберите Сборный.</param>
      <param name="materialIndex">Возвращает индекс в массив материалов компонента Renderer, который находится ближе всего к указанной позиции.</param>
      <param name="position">Позиция в координатах GUI. Верхний левый угол окна равен (0,0), а нижний правый — (Screen.width, Screen.height).</param>
      <param name="ignore">Массив игровых объектов, которые не будут учитываться при выборе ближайшего игрового объекта.</param>
      <param name="filter">Массив GameObjects, который будет рассматриваться исключительно для выбора. Если значение null, все игровые объекты в открытых сценах могут быть выбраны.</param>
      <param name="selection">Массив GameObjects, который будет рассматриваться исключительно для выбора. Если значение null, все игровые объекты в открытых сценах могут быть выбраны.</param>
      <returns>
        <para>GameObject, который находится под запрошенной позицией.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.HandleUtility.PickGameObject(UnityEngine.Vector2,System.Boolean)">
      <summary>
        <para>Выберите игровой объект, ближайший к указанной позиции.</para>
      </summary>
      <param name="selectPrefabRoot">Выберите Сборный.</param>
      <param name="materialIndex">Возвращает индекс в массив материалов компонента Renderer, который находится ближе всего к указанной позиции.</param>
      <param name="position">Позиция в координатах GUI. Верхний левый угол окна равен (0,0), а нижний правый — (Screen.width, Screen.height).</param>
      <param name="ignore">Массив игровых объектов, которые не будут учитываться при выборе ближайшего игрового объекта.</param>
      <param name="filter">Массив GameObjects, который будет рассматриваться исключительно для выбора. Если значение null, все игровые объекты в открытых сценах могут быть выбраны.</param>
      <param name="selection">Массив GameObjects, который будет рассматриваться исключительно для выбора. Если значение null, все игровые объекты в открытых сценах могут быть выбраны.</param>
      <returns>
        <para>GameObject, который находится под запрошенной позицией.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.HandleUtility.PickGameObject(UnityEngine.Vector2,System.Boolean,UnityEngine.GameObject[])">
      <summary>
        <para>Выберите игровой объект, ближайший к указанной позиции.</para>
      </summary>
      <param name="selectPrefabRoot">Выберите Сборный.</param>
      <param name="materialIndex">Возвращает индекс в массив материалов компонента Renderer, который находится ближе всего к указанной позиции.</param>
      <param name="position">Позиция в координатах GUI. Верхний левый угол окна равен (0,0), а нижний правый — (Screen.width, Screen.height).</param>
      <param name="ignore">Массив игровых объектов, которые не будут учитываться при выборе ближайшего игрового объекта.</param>
      <param name="filter">Массив GameObjects, который будет рассматриваться исключительно для выбора. Если значение null, все игровые объекты в открытых сценах могут быть выбраны.</param>
      <param name="selection">Массив GameObjects, который будет рассматриваться исключительно для выбора. Если значение null, все игровые объекты в открытых сценах могут быть выбраны.</param>
      <returns>
        <para>GameObject, который находится под запрошенной позицией.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.HandleUtility.PickGameObject(UnityEngine.Vector2,System.Boolean,UnityEngine.GameObject[],UnityEngine.GameObject[])">
      <summary>
        <para>Выберите игровой объект, ближайший к указанной позиции.</para>
      </summary>
      <param name="selectPrefabRoot">Выберите Сборный.</param>
      <param name="materialIndex">Возвращает индекс в массив материалов компонента Renderer, который находится ближе всего к указанной позиции.</param>
      <param name="position">Позиция в координатах GUI. Верхний левый угол окна равен (0,0), а нижний правый — (Screen.width, Screen.height).</param>
      <param name="ignore">Массив игровых объектов, которые не будут учитываться при выборе ближайшего игрового объекта.</param>
      <param name="filter">Массив GameObjects, который будет рассматриваться исключительно для выбора. Если значение null, все игровые объекты в открытых сценах могут быть выбраны.</param>
      <param name="selection">Массив GameObjects, который будет рассматриваться исключительно для выбора. Если значение null, все игровые объекты в открытых сценах могут быть выбраны.</param>
      <returns>
        <para>GameObject, который находится под запрошенной позицией.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.HandleUtility.PickGameObject(UnityEngine.Vector2,System.Boolean,UnityEngine.GameObject[],UnityEngine.GameObject[],System.Int32&amp;)">
      <summary>
        <para>Выберите игровой объект, ближайший к указанной позиции.</para>
      </summary>
      <param name="selectPrefabRoot">Выберите Сборный.</param>
      <param name="materialIndex">Возвращает индекс в массив материалов компонента Renderer, который находится ближе всего к указанной позиции.</param>
      <param name="position">Позиция в координатах GUI. Верхний левый угол окна равен (0,0), а нижний правый — (Screen.width, Screen.height).</param>
      <param name="ignore">Массив игровых объектов, которые не будут учитываться при выборе ближайшего игрового объекта.</param>
      <param name="filter">Массив GameObjects, который будет рассматриваться исключительно для выбора. Если значение null, все игровые объекты в открытых сценах могут быть выбраны.</param>
      <param name="selection">Массив GameObjects, который будет рассматриваться исключительно для выбора. Если значение null, все игровые объекты в открытых сценах могут быть выбраны.</param>
      <returns>
        <para>GameObject, который находится под запрошенной позицией.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.HandleUtility.PickGameObjectCallback">
      <summary>
        <para>Это определение метода для pickGameObjectCustomPasses.</para>
      </summary>
      <param name="cam">Камера для рендеринга выбираемых объектов.</param>
      <param name="layers">Слой-маска, указывающая, какие слои считать допустимыми для выбора. См. также Camera.cullingMask.</param>
      <param name="position">Позиция в координатах GUI. Верхний левый угол окна равен (0,0), а нижний правый — (Screen.width, Screen.height).</param>
      <param name="ignore">Массив игровых объектов, которые не будут учитываться при выборе ближайшего игрового объекта.</param>
      <param name="filter">Массив GameObjects, которые будут проверяться на выбор пересечения. Если этот аргумент не равен нулю, будут выбраны только игровые объекты в массиве фильтров.</param>
      <param name="materialIndex">Возвращает индекс компонента Renderer в массиве материалов, который находится ближе всего к указанной позиции. Если выбранный объект не содержит MeshRenderer или пересечение выбора не попадает в границы сетки, возвращается -1.</param>
    </member>
    <member name="M:UnityEditor.HandleUtility.PickRectObjects(UnityEngine.Rect)">
      <summary>
        <para>Выберите GameObjects, которые находятся в пределах указанного прямоугольника экрана.</para>
      </summary>
      <param name="rect">Прямоугольник экрана, заданный координатами в пикселях.</param>
    </member>
    <member name="M:UnityEditor.HandleUtility.PickRectObjects(UnityEngine.Rect,System.Boolean)">
      <summary>
        <para>
        </para>
      </summary>
      <param name="rect">
      </param>
      <param name="selectPrefabRootsOnly">
      </param>
    </member>
    <member name="M:UnityEditor.HandleUtility.PlaceObject(UnityEngine.Vector2,UnityEngine.Vector3&amp;,UnityEngine.Vector3&amp;)">
      <summary>
        <para>Направляет луч на загруженные сцены и возвращает ближайшую точку пересечения на коллайдере.</para>
      </summary>
      <param name="guiPosition">Позиция GUI в SceneView. В большинстве случаев вы можете передать Event.current.mousePosition этому параметру.</param>
      <param name="position">Возвращает ближайшую точку пересечения к лучу, брошенному из положения мыши в сцену.</param>
      <param name="normal">Возвращает нормаль ближайшей точки пересечения к лучу, брошенному из положения мыши в сцену.</param>
      <returns>
        <para>Возвращает true, если raycast пересекает что-то в сцене; в противном случае — ложь.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.HandleUtility.PlaceObjectDelegate">
      <summary>
        <para>Это определение метода для placeObjectCustomPasses.</para>
      </summary>
      <param name="guiPosition">Позиция GUI в SceneView. В большинстве случаев вы можете передать Event.current.mousePosition этому параметру.</param>
      <param name="position">Возвращает ближайшую точку пересечения к лучу, брошенному из guiPosition в сцену.</param>
      <param name="normal">Возвращает нормаль ближайшей точки пересечения к лучу, брошенному из положения мыши в сцену.</param>
    </member>
    <member name="M:UnityEditor.HandleUtility.PointOnLineParameter(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Возвращает параметр проекции точки на заданную линию.</para>
      </summary>
      <param name="point">
      </param>
      <param name="linePoint">
      </param>
      <param name="lineDirection">
      </param>
    </member>
    <member name="M:UnityEditor.HandleUtility.PopCamera(UnityEngine.Camera)">
      <summary>
        <para>Получить все настройки камеры.</para>
      </summary>
      <param name="camera">
      </param>
    </member>
    <member name="M:UnityEditor.HandleUtility.ProjectPointLine(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Спроецируйте точку на линию.</para>
      </summary>
      <param name="point">
      </param>
      <param name="lineStart">
      </param>
      <param name="lineEnd">
      </param>
    </member>
    <member name="M:UnityEditor.HandleUtility.PushCamera(UnityEngine.Camera)">
      <summary>
        <para>Сохранить все настройки камеры.</para>
      </summary>
      <param name="camera">
      </param>
    </member>
    <member name="M:UnityEditor.HandleUtility.RaySnap(UnityEngine.Ray)">
      <summary>
        <para>Направляет луч на сцену и сообщает, находится ли объект на его пути.</para>
      </summary>
      <param name="ray">
      </param>
      <returns>
        <para>RaycastHit в штучной упаковке, нуль, если ничего не попало.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.HandleUtility.Repaint">
      <summary>
        <para>Перекрасить текущий вид.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.HandleUtility.WorldPointToSizedRect(UnityEngine.Vector3,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Вычислите прямоугольник, чтобы отобразить элемент 2D GUI рядом с спроецированной точкой в ​​3D-пространстве.</para>
      </summary>
      <param name="position">Используемая позиция в мировом пространстве.</param>
      <param name="content">Содержимое, для которого нужно освободить место.</param>
      <param name="style">Используемый стиль. Выравнивание стиля.</param>
    </member>
    <member name="M:UnityEditor.HandleUtility.WorldToGUIPoint(UnityEngine.Vector3)">
      <summary>
        <para>Преобразование точки мирового пространства в позицию 2D GUI.</para>
      </summary>
      <param name="world">Точка в мировом пространстве.</param>
    </member>
    <member name="M:UnityEditor.HandleUtility.WorldToGUIPointWithDepth(UnityEngine.Vector3)">
      <summary>
        <para>Преобразование точки мирового пространства в позицию 2D GUI.</para>
      </summary>
      <param name="world">Точка в мировом пространстве.</param>
      <returns>
        <para>Vector3, где значения x и y относятся к положению 2D GUI. Значение z — это расстояние в мировых единицах от камеры.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Help">
      <summary>
        <para>Вспомогательный класс для доступа к документации Unity.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Help.BrowseURL(System.String)">
      <summary>
        <para>Открыть URL-адрес в веб-браузере по умолчанию.</para>
      </summary>
      <param name="url">
      </param>
    </member>
    <member name="M:UnityEditor.Help.GetHelpURLForObject(UnityEngine.Object)">
      <summary>
        <para>Получите URL документации по этому объекту.</para>
      </summary>
      <param name="obj">Объект, для которого требуется получить документацию.</param>
      <returns>
        <para>URL-адрес документации для объекта. Обратите внимание, что это может использовать схемы https: или file:.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Help.HasHelpForObject(UnityEngine.Object)">
      <summary>
        <para>Есть ли страница помощи для этого объекта?</para>
      </summary>
      <param name="obj">
      </param>
    </member>
    <member name="M:UnityEditor.Help.ShowHelpForObject(UnityEngine.Object)">
      <summary>
        <para>Показать страницу справки для этого объекта.</para>
      </summary>
      <param name="obj">
      </param>
    </member>
    <member name="M:UnityEditor.Help.ShowHelpPage(System.String)">
      <summary>
        <para>Показать страницу справки.</para>
      </summary>
      <param name="page">
      </param>
    </member>
    <member name="T:UnityEditor.HierarchyDropFlags">
      <summary>
        <para>Определите, как перетаскиваемые объекты должны удаляться по отношению к уже существующим элементам иерархии.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.HierarchyDropFlags.DropAbove">
      <summary>
        <para>Поместите перетаскиваемый объект над одноуровневым элементом иерархии, над которым наведен указатель мыши. dropTargetInstanceID — это элемент иерархии под точкой наведения, а перетаскиваемый объект вставляется над целью.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.HierarchyDropFlags.DropAfterParent">
      <summary>
        <para>Перетащите перетаскиваемый объект в первую дочернюю позицию после родительского элемента иерархии, когда мышь находится между родительским и первым дочерним элементом. dropTargetInstanceID — это первый дочерний объект под родительским объектом, и отброшенный объект вставляется между родительским и первым дочерним элементами. При использовании DropAfterParent DropBetween и DropAbove также используются для предоставления информации для определения местонахождения удаленного объекта.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.HierarchyDropFlags.DropBetween">
      <summary>
        <para>Поместите перетащенный объект между двумя одноуровневыми элементами иерархии, над которыми наведен указатель мыши. dropTargetInstanceID — это элемент иерархии над точкой наведения, перетаскиваемый объект вставляется ниже цели. </para>
      </summary>
    </member>
    <member name="F:UnityEditor.HierarchyDropFlags.DropUpon">
      <summary>
        <para>Поместите перетаскиваемый объект на элемент иерархии, над которым находится мышь. Наведенный элемент — это dropTargetInstanceID, а отброшенный объект вставляется как дочерний элемент цели. Этот флаг также используется при перетаскивании объектов из-за пределов Иерархии в последний элемент Иерархии и под ним для добавления в Сцену. В этом случае dropTargetInstanceID является дескриптором сцены.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.HierarchyDropFlags.None">
      <summary>
        <para>Вставьте перетаскиваемый объект в иерархию. Значение флага по умолчанию равно 0. Единственный случай, когда DropMode равен 0, — это перетаскивание внешних элементов и установлен параметр parentForDraggedObjects. Затем dropTargetInstanceID равен 0, и цель передается в parentForDraggedObjects.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.HierarchyDropFlags.SearchActive">
      <summary>
        <para>Этот флаг устанавливается, если Иерархия показывает результаты поиска. Если поиск активен, разрешен только DropUpon (никакие другие действия не могут быть выполнены с частичным списком элементов).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Highlighter">
      <summary>
        <para>Используйте этот класс, чтобы выделить элементы в редакторе для использования в обучающих программах в редакторе и т.п.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Highlighter.active">
      <summary>
        <para>Есть ли в данный момент активное выделение?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Highlighter.activeRect">
      <summary>
        <para>Прямоугольник в пространстве экрана текущего активного выделения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Highlighter.activeText">
      <summary>
        <para>Текст текущего активного выделения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Highlighter.activeVisible">
      <summary>
        <para>Видно ли текущее активное выделение?</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Highlighter.Highlight(System.String,System.String)">
      <summary>
        <para>Выделяет элемент в редакторе.</para>
      </summary>
      <param name="windowTitle">Заголовок окна, внутри которого находится элемент.</param>
      <param name="text">Текст для идентификации элемента.</param>
      <param name="mode">Необязательный режим для указания способа поиска элемента.</param>
      <returns>
        <para>true, если запрошенный элемент найден; в противном случае ложь.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Highlighter.Highlight(System.String,System.String,UnityEditor.HighlightSearchMode)">
      <summary>
        <para>Выделяет элемент в редакторе.</para>
      </summary>
      <param name="windowTitle">Заголовок окна, внутри которого находится элемент.</param>
      <param name="text">Текст для идентификации элемента.</param>
      <param name="mode">Необязательный режим для указания способа поиска элемента.</param>
      <returns>
        <para>true, если запрошенный элемент найден; в противном случае ложь.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Highlighter.HighlightIdentifier(UnityEngine.Rect,System.String)">
      <summary>
        <para>Вызовите этот метод, чтобы создать идентифицируемый прямоугольник, который может найти средство выделения.</para>
      </summary>
      <param name="position">Позиция, которую необходимо выделить.</param>
      <param name="identifier">Текст идентификатора прямоугольника.</param>
    </member>
    <member name="M:UnityEditor.Highlighter.Stop">
      <summary>
        <para>Останавливает активное выделение.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.HighlightSearchMode">
      <summary>
        <para>Используется, чтобы указать, как найти данный элемент в редакторе для выделения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.HighlightSearchMode.Auto">
      <summary>
        <para>Выделяет первый элемент, найденный с использованием любого из режимов поиска.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.HighlightSearchMode.Content">
      <summary>
        <para>Выделяет элемент, содержащий текст, используя текст в качестве идентификатора.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.HighlightSearchMode.Identifier">
      <summary>
        <para>Выделяет элемент с заданным текстом идентификатора.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.HighlightSearchMode.None">
      <summary>
        <para>Ничего не выделяет.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.HighlightSearchMode.PrefixLabel">
      <summary>
        <para>Выделяет весь элемент управления редактором, используя текст его метки в качестве идентификатора.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.HyperLinkClickedEventArgs">
      <summary>
        <para>Аргументы для события EditorGUI.hyperLinkClicked.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.HyperLinkClickedEventArgs.hyperLinkData">
      <summary>
        <para>Параметры, найденные в теге гиперссылки.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.IApplyRevertPropertyContextMenuItemProvider">
      <summary>
        <para>Используется для определения поведения MonoBehaviour, которое обеспечивает подключение к контекстному меню применения/отката для префабов, открытых в режиме префабов и не префабов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IApplyRevertPropertyContextMenuItemProvider.GetSourceName(UnityEngine.Component)">
      <summary>
        <para>Возвращает конкретное имя компонента, которое будет использоваться в пункте меню «Применить».</para>
      </summary>
      <param name="comp">
      </param>
    </member>
    <member name="M:UnityEditor.IApplyRevertPropertyContextMenuItemProvider.GetSourceTerm">
      <summary>
        <para>Возвращает имя исходного термина, которое будет использоваться в пункте меню «Применить/вернуть».</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IApplyRevertPropertyContextMenuItemProvider.TryGetApplyMethodForFieldName">
      <summary>
        <para>Хук-расширение для пункта меню применения необязательного свойства.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IApplyRevertPropertyContextMenuItemProvider.TryGetRevertMethodForFieldName">
      <summary>
        <para>Хук-расширение для необязательного пункта меню возврата свойств.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.IconKind">
      <summary>
        <para>Вид значка.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IconKind.Any">
      <summary>
        <para>Этот значок можно использовать для любых целей в приложении.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IconKind.Application">
      <summary>
        <para>Этот значок используется для основных значков приложений.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IconKind.Notification">
      <summary>
        <para>Этот значок используется для push-уведомлений.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IconKind.Settings">
      <summary>
        <para>Этот значок используется для настроек.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IconKind.Spotlight">
      <summary>
        <para>Этот значок используется для поиска Spotlight. (только для iOS).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IconKind.Store">
      <summary>
        <para>Этот значок используется в магазине приложений iOS.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.IHasCustomMenu">
      <summary>
        <para>Определяет метод добавления пользовательских пунктов меню в окно редактора.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IHasCustomMenu.AddItemsToMenu(UnityEditor.GenericMenu)">
      <summary>
        <para>Добавляет ваши пользовательские элементы меню в окно редактора.</para>
      </summary>
      <param name="menu">
      </param>
    </member>
    <member name="T:UnityEditor.IHVImageFormatImporter">
      <summary>
        <para>Используйте IHVImageFormatImporter, чтобы изменить параметры импорта Texture2D для текстур в форматах IHV (независимый поставщик оборудования), таких как .DDS и .PVR, из сценариев редактора.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IHVImageFormatImporter.filterMode">
      <summary>
        <para>Режим фильтрации текстуры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IHVImageFormatImporter.isReadable">
      <summary>
        <para>Доступны ли данные текстуры для чтения из скриптов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IHVImageFormatImporter.streamingMipmaps">
      <summary>
        <para>Включить потоковую передачу MIP-карт для этой текстуры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IHVImageFormatImporter.streamingMipmapsPriority">
      <summary>
        <para>Относительный приоритет для этой текстуры при уменьшении размера памяти, чтобы уложиться в бюджет памяти.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IHVImageFormatImporter.wrapMode">
      <summary>
        <para>Режим переноса текстурных координат.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IHVImageFormatImporter.wrapModeU">
      <summary>
        <para>Режим переноса координат текстуры U.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IHVImageFormatImporter.wrapModeV">
      <summary>
        <para>Режим переноса координат V текстуры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IHVImageFormatImporter.wrapModeW">
      <summary>
        <para>Режим переноса координат текстуры W для Texture3D.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Il2Cpp.Il2CppBuildPipelineData">
      <summary>
        <para>Содержит информацию для различных обратных вызовов Iil2CppProcessor.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Il2Cpp.Il2CppBuildPipelineData.inputDirectory">
      <summary>
        <para>Каталог, содержащий сборки, которые будет обрабатывать IL2CPP.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Il2Cpp.Il2CppBuildPipelineData.target">
      <summary>
        <para>Цель сборки.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Il2Cpp.Il2CppBuildPipelineData.#ctor(UnityEditor.BuildTarget,System.String)">
      <summary>
        <para>Создает новый экземпляр Il2CppBuildPipelineData.</para>
      </summary>
      <param name="target">
      </param>
      <param name="inputDirectory">
      </param>
    </member>
    <member name="T:UnityEditor.Il2CppCompilerConfiguration">
      <summary>
        <para>Конфигурация компилятора C++, используемая при компиляции кода, сгенерированного IL2CPP.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Il2CppCompilerConfiguration.Debug">
      <summary>
        <para>Конфигурация отладки отключает все оптимизации, что ускоряет сборку кода, но замедляет его выполнение.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Il2CppCompilerConfiguration.Master">
      <summary>
        <para>Основная конфигурация включает все возможные оптимизации, максимально увеличивая производительность. Например, на платформах, использующих компилятор MSVC++, этот параметр включает генерацию кода во время компоновки. Компиляция кода с использованием этой конфигурации может занять значительно больше времени, чем с использованием конфигурации Release. Unity рекомендует собирать поставляемую версию игры с использованием конфигурации Master, если увеличение времени сборки приемлемо.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Il2CppCompilerConfiguration.Release">
      <summary>
        <para>Конфигурация выпуска позволяет проводить оптимизацию, поэтому скомпилированный код работает быстрее, а размер двоичного файла меньше, но компиляция занимает больше времени.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.ILightingExplorerExtension">
      <summary>
        <para>Интерфейс для расширения обозревателя освещения. Используется для полного переопределения поведения по умолчанию.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ILightingExplorerExtension.GetContentTabs">
      <summary>
        <para>Возвращает вкладки, которые вы выбрали для отображения в обозревателе освещения.</para>
      </summary>
      <returns>
        <para>Вкладки для обозревателя освещения.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ILightingExplorerExtension.OnDisable">
      <summary>
        <para>Это вызывается при вызове Lighting Explorer OnDisable или при переключении на другое расширение.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ILightingExplorerExtension.OnEnable">
      <summary>
        <para>Это вызывается при вызове Lighting Explorer OnEnable или при переключении на другое расширение.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.AdvancedDropdown">
      <summary>
        <para>Наследуйтесь от этого класса, чтобы реализовать собственный раскрывающийся список.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.AdvancedDropdown.minimumSize">
      <summary>
        <para>Минимальный размер выпадающего окна. По умолчанию раскрывающийся список будет пытаться соответствовать ширине данного прямоугольника или отображаемого содержимого.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.AdvancedDropdown.BuildRoot">
      <summary>
        <para>Реализуйте этот метод для создания содержимого раскрывающегося списка.
Этот метод вызывается при отображении раскрывающегося списка.</para>
      </summary>
      <returns>
        <para>Корень списка.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.AdvancedDropdown.ItemSelected(UnityEditor.IMGUI.Controls.AdvancedDropdownItem)">
      <summary>
        <para>Переопределите этот метод, чтобы получать уведомления при выборе элемента.</para>
      </summary>
      <param name="item">Выбранный элемент.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.AdvancedDropdown.Show(UnityEngine.Rect)">
      <summary>
        <para>Вызовите этот метод, чтобы отобразить раскрывающийся список в заданной позиции.</para>
      </summary>
      <param name="rect">Положение кнопки, вызвавшей раскрывающийся список.</param>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.AdvancedDropdownItem">
      <summary>
        <para>Элементы, составляющие раскрывающийся список.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.AdvancedDropdownItem.children">
      <summary>
        <para>Список дочерних элементов этого элемента.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.AdvancedDropdownItem.enabled">
      <summary>
        <para>Истинно, если элемент включен.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.AdvancedDropdownItem.icon">
      <summary>
        <para>Если установлено, этот значок будет отображаться слева от имени элемента.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.AdvancedDropdownItem.id">
      <summary>
        <para>Уникальный идентификатор элемента.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.AdvancedDropdownItem.name">
      <summary>
        <para>Имя, отображаемое для этого элемента при отображении.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.AdvancedDropdownItem.AddChild(UnityEditor.IMGUI.Controls.AdvancedDropdownItem)">
      <summary>
        <para>Добавляет заданный дочерний элемент AdvancedDropdownItem в список дочерних элементов.</para>
      </summary>
      <param name="child">AdvancedDropdownItem для добавления в список дочерних элементов.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.AdvancedDropdownItem.AddSeparator">
      <summary>
        <para>Добавляет разделитель в список дочерних элементов в раскрывающемся списке.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.AdvancedDropdownState">
      <summary>
        <para>Состояние раскрывающегося списка. Этот объект может быть сериализован.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.ArcHandle">
      <summary>
        <para>Класс составной ручки для редактирования угла и радиуса в представлении «Сцена».</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.ArcHandle.angle">
      <summary>
        <para>Возвращает или задает угол дуги для маркера.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.ArcHandle.angleHandleColor">
      <summary>
        <para>Возвращает или задает цвет маркера управления углом.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.ArcHandle.angleHandleDrawFunction">
      <summary>
        <para>Handles.CapFunction для использования при отображении маркера управления углом.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.ArcHandle.angleHandleSizeFunction">
      <summary>
        <para>Handles.SizeFunction, чтобы указать, насколько большим должен быть маркер управления углом.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.ArcHandle.fillColor">
      <summary>
        <para>Возвращает или задает цвет формы дуги.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.ArcHandle.radius">
      <summary>
        <para>Возвращает или указывает радиус дуги для маркера.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.ArcHandle.radiusHandleColor">
      <summary>
        <para>Возвращает или задает цвет маркера управления радиусом.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.ArcHandle.radiusHandleDrawFunction">
      <summary>
        <para>Handles.CapFunction для использования при отображении маркера управления радиусом.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.ArcHandle.radiusHandleSizeFunction">
      <summary>
        <para>Handles.SizeFunction, чтобы указать, насколько большим должен быть маркер управления углом.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.ArcHandle.wireframeColor">
      <summary>
        <para>Возвращает или задает цвет кривой линии снаружи дуги.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.ArcHandle.#ctor">
      <summary>
        <para>Создает новый экземпляр класса ArcHandle.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.ArcHandle.DefaultAngleHandleDrawFunction(System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.EventType)">
      <summary>
        <para>Handles.CapFunction, рисующая линию, заканчивающуюся Handles.CylinderHandleCap.</para>
      </summary>
      <param name="controlID">Идентификатор элемента управления для дескриптора.</param>
      <param name="position">Положение дескриптора в пространстве Handles.matrix.</param>
      <param name="rotation">Вращение ручки в пространстве Handles.matrix.</param>
      <param name="size">Размер ручки в пространстве Handles.matrix. Используйте HandleUtility.GetHandleSize, если вам нужен постоянный размер экранного пространства.</param>
      <param name="eventType">Тип события, на который действует дескриптор. По своей конструкции он обрабатывает события EventType.Layout и EventType.Repaint.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.ArcHandle.DefaultAngleHandleSizeFunction(UnityEngine.Vector3)">
      <summary>
        <para>Функция Handles.SizeFunction, возвращающая фиксированный размер экранного пространства.</para>
      </summary>
      <param name="position">Текущее положение дескриптора в пространстве Handles.matrix.</param>
      <returns>
        <para>Размер, используемый для маркера в указанной позиции.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.ArcHandle.DefaultRadiusHandleSizeFunction(UnityEngine.Vector3)">
      <summary>
        <para>Функция Handles.SizeFunction, возвращающая фиксированный размер экранного пространства.</para>
      </summary>
      <param name="position">Текущее положение дескриптора в пространстве Handles.matrix.</param>
      <returns>
        <para>Размер, используемый для маркера в указанной позиции.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.ArcHandle.DrawHandle">
      <summary>
        <para>Функция для отображения этого экземпляра в текущей камере дескриптора с использованием его текущей конфигурации.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.ArcHandle.SetColorWithoutRadiusHandle(UnityEngine.Color,System.Single)">
      <summary>
        <para>Устанавливает для angleHandleColor, wireframeColor и fillColor одно и то же значение, где fillColor будет иметь указанное значение альфа-канала. Для radiusHandleColor будет задано значение Color.clear, а маркер радиуса будет отключен.</para>
      </summary>
      <param name="color">Цвет, используемый для маркера управления углом и формы заливки.</param>
      <param name="fillColorAlpha">Альфа-значение, используемое для fillColor.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.ArcHandle.SetColorWithRadiusHandle(UnityEngine.Color,System.Single)">
      <summary>
        <para>Устанавливает для angularHandleColor, radiusHandleColor, wireframeColor и fillColor одно и то же значение, где fillColor будет иметь указанное значение альфа-канала.</para>
      </summary>
      <param name="color">Цвет, используемый для маркеров управления углом и радиусом, а также формы заливки.</param>
      <param name="fillColorAlpha">Альфа-значение, используемое для fillColor.</param>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.BoxBoundsHandle">
      <summary>
        <para>Составной дескриптор для редактирования ограничивающего объема прямоугольной формы в представлении «Сцена».</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.BoxBoundsHandle.size">
      <summary>
        <para>Возвращает или указывает размер ограничивающей рамки.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.BoxBoundsHandle.#ctor">
      <summary>
        <para>Создайте новый экземпляр класса BoxBoundsHandle.</para>
      </summary>
      <param name="controlIDHint">Целочисленное значение, используемое для создания согласованных идентификаторов элементов управления для каждого дескриптора элемента управления в этом экземпляре. Не используйте одно и то же значение для всех экземпляров BoxBoundsHandle.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.BoxBoundsHandle.#ctor(System.Int32)">
      <summary>
        <para>Создайте новый экземпляр класса BoxBoundsHandle.</para>
      </summary>
      <param name="controlIDHint">Целочисленное значение, используемое для создания согласованных идентификаторов элементов управления для каждого дескриптора элемента управления в этом экземпляре. Не используйте одно и то же значение для всех экземпляров BoxBoundsHandle.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.BoxBoundsHandle.DrawWireframe">
      <summary>
        <para>Нарисуйте каркасную рамку для этого экземпляра.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.CapsuleBoundsHandle">
      <summary>
        <para>Составной маркер для редактирования ограничивающего объема в форме капсулы в представлении «Сцена».</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.CapsuleBoundsHandle.height">
      <summary>
        <para>Возвращает или указывает высоту ограничивающего объема капсулы.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.CapsuleBoundsHandle.heightAxis">
      <summary>
        <para>Возвращает или задает ось в пространстве маркера, на которую сопоставляется высота. Радиус сопоставляется с остальными осями.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.CapsuleBoundsHandle.radius">
      <summary>
        <para>Возвращает или указывает радиус ограничивающего объема капсулы.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.CapsuleBoundsHandle.#ctor">
      <summary>
        <para>Создайте новый экземпляр класса CapsuleBoundsHandle.</para>
      </summary>
      <param name="controlIDHint">Целочисленное значение, используемое для создания согласованных идентификаторов элементов управления для каждого дескриптора элемента управления в этом экземпляре. Не используйте одно и то же значение для всех экземпляров CapsuleBoundsHandle.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.CapsuleBoundsHandle.#ctor(System.Int32)">
      <summary>
        <para>Создайте новый экземпляр класса CapsuleBoundsHandle.</para>
      </summary>
      <param name="controlIDHint">Целочисленное значение, используемое для создания согласованных идентификаторов элементов управления для каждого дескриптора элемента управления в этом экземпляре. Не используйте одно и то же значение для всех экземпляров CapsuleBoundsHandle.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.CapsuleBoundsHandle.DrawWireframe">
      <summary>
        <para>Нарисуйте каркасную капсулу для этого экземпляра.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.CapsuleBoundsHandle.HeightAxis">
      <summary>
        <para>Перечисление для указания того, какая ось объекта CapsuleBoundsHandle сопоставляется с параметром CapsuleBoundsHandle.height.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.CapsuleBoundsHandle.HeightAxis.X">
      <summary>
        <para>Ось X.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.CapsuleBoundsHandle.HeightAxis.Y">
      <summary>
        <para>Ось Y.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.CapsuleBoundsHandle.HeightAxis.Z">
      <summary>
        <para>Ось Z.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.CapsuleBoundsHandle.OnHandleChanged(UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle/HandleDirection,UnityEngine.Bounds,UnityEngine.Bounds)">
      <summary>
        <para>Обратный вызов при перетаскивании дескриптора управления в сцене.</para>
      </summary>
      <param name="handle">Дескриптор, который был перетащен.</param>
      <param name="boundsOnClick">Необработанные границы объема этого экземпляра на момент щелчка дескриптора управления.</param>
      <param name="newBounds">Необработанные границы объема этого экземпляра на основе обновленного положения ручки.</param>
      <returns>
        <para>Границы, которые должны быть применены к этому экземпляру, со всеми необходимыми изменениями.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.JointAngularLimitHandle">
      <summary>
        <para>Класс составной ручки для редактирования пределов многоосевого углового перемещения в представлении «Сцена».</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.angleHandleDrawFunction">
      <summary>
        <para>Handles.CapFunction для использования при отображении маркера управления углом.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.angleHandleSizeFunction">
      <summary>
        <para>Handles.SizeFunction, чтобы указать, насколько большим должен быть маркер управления углом.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.fillAlpha">
      <summary>
        <para>Возвращает или задает непрозрачность, используемую при рендеринге форм заливки для диапазона движения по каждой оси. По умолчанию 0,1.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.radius">
      <summary>
        <para>Возвращает или задает радиус дуги для маркера. По умолчанию 1.0.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.wireframeAlpha">
      <summary>
        <para>Возвращает или задает непрозрачность, используемую для изогнутых линий вдоль внешней стороны дуг движения. По умолчанию 1.0.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.xHandleColor">
      <summary>
        <para>Возвращает или задает цвет, используемый для маркера, ограничивающего движение вокруг оси X. По умолчанию Handles.xAxisColor.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.xMax">
      <summary>
        <para>Возвращает или задает максимальное угловое движение вокруг оси x.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.xMin">
      <summary>
        <para>Возвращает или задает минимальное угловое движение вокруг оси x.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.xMotion">
      <summary>
        <para>Возвращает или указывает, как ограничивается угловое движение относительно оси X. По умолчанию ConfigurableJointMotion.Limited.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.xRange">
      <summary>
        <para>Возвращает или задает диапазон допустимых значений углового движения вокруг оси x. По умолчанию [-180,0, 180,0].</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.yHandleColor">
      <summary>
        <para>Возвращает или задает цвет, используемый для ручки, ограничивающей движение вокруг оси Y. По умолчанию Handles.yAxisColor.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.yMax">
      <summary>
        <para>Возвращает или задает максимальное угловое движение вокруг оси Y.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.yMin">
      <summary>
        <para>Возвращает или задает минимальное угловое движение вокруг оси Y.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.yMotion">
      <summary>
        <para>Возвращает или указывает, как ограничивается угловое движение относительно оси Y. По умолчанию ConfigurableJointMotion.Limited.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.yRange">
      <summary>
        <para>Возвращает или задает диапазон допустимых значений углового движения вокруг оси Y. По умолчанию [-180,0, 180,0].</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.zHandleColor">
      <summary>
        <para>Возвращает или задает цвет, используемый для маркера, ограничивающего движение вокруг оси Z. По умолчанию Handles.zAxisColor.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.zMax">
      <summary>
        <para>Возвращает или задает максимальное угловое движение вокруг оси Z.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.zMin">
      <summary>
        <para>Возвращает или задает минимальное угловое движение вокруг оси Z.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.zMotion">
      <summary>
        <para>Возвращает или указывает, как ограничивается угловое движение относительно оси Z. По умолчанию ConfigurableJointMotion.Limited.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.zRange">
      <summary>
        <para>Возвращает или задает диапазон допустимых значений углового движения вокруг оси Z. По умолчанию [-180,0, 180,0].</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.#ctor">
      <summary>
        <para>Создает новый экземпляр класса JointAngularLimitHandle.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.DrawHandle">
      <summary>
        <para>Функция для отображения этого экземпляра в текущей камере дескриптора с использованием его текущей конфигурации.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.MultiColumnHeader">
      <summary>
        <para>MultiColumnHeader — это класс общего назначения, который, например, может использоваться с TreeView для создания древовидных представлений с несколькими столбцами и списковых представлений.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.MultiColumnHeader.allowDraggingColumnsToReorder">
      <summary>
        <para>Используйте это свойство, чтобы указать, может ли пользователь перетаскивать столбцы, чтобы изменить их порядок.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.MultiColumnHeader.canSort">
      <summary>
        <para>Используйте это свойство, чтобы указать, включена ли сортировка для всех столбцов.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.IMGUI.Controls.MultiColumnHeader.columnSettingsChanged(System.Action`1&lt;System.Int32&gt;)">
      <summary>
        <para>Событие возникает при изменении каких-либо параметров столбца (например, ширина столбца была изменена).</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="?:UnityEditor.IMGUI.Controls.MultiColumnHeader.columnsSwapped(System.Action`2&lt;System.Int32,System.Int32&gt;)">
      <summary>
        <para>Событие возникает, когда пользователь меняет порядок двух столбцов.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.MultiColumnHeader.currentColumnIndex">
      <summary>
        <para>Индекс столбца, который в данный момент обрабатывается во время события. Это свойство можно использовать для обработки конкретных столбцов при переопределении AddColumnHeaderContextMenuItems.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.MultiColumnHeader.height">
      <summary>
        <para>Настраиваемая высота многоколоночного заголовка.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.MultiColumnHeader.sortedColumnIndex">
      <summary>
        <para>Индекс столбца, который установлен в качестве основного столбца сортировки. Это столбец со стрелкой сортировки над текстом заголовка.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.IMGUI.Controls.MultiColumnHeader.sortingChanged(UnityEditor.IMGUI.Controls.MultiColumnHeader/HeaderCallback)">
      <summary>
        <para>Подпишитесь на это событие, чтобы получать уведомления об изменении сортировки.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.MultiColumnHeader.state">
      <summary>
        <para>Это состояние MultiColumnHeader.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.IMGUI.Controls.MultiColumnHeader.visibleColumnsChanged(UnityEditor.IMGUI.Controls.MultiColumnHeader/HeaderCallback)">
      <summary>
        <para>Подпишитесь на это событие, чтобы получать уведомления об изменении количества видимых столбцов.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.AddColumnHeaderContextMenuItems(UnityEditor.GenericMenu)">
      <summary>
        <para>Переопределите этот метод, чтобы расширить элементы контекстного меню по умолчанию, отображаемые при контекстном щелчке области заголовка.</para>
      </summary>
      <param name="menu">Показано контекстное меню.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.ColumnHeaderClicked(UnityEditor.IMGUI.Controls.MultiColumnHeaderState/Column,System.Int32)">
      <summary>
        <para>Переопределить, чтобы настроить поведение при щелчке заголовка столбца.</para>
      </summary>
      <param name="column">Нажат столбец.</param>
      <param name="columnIndex">Нажат индекс столбца.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.ColumnHeaderGUI(UnityEditor.IMGUI.Controls.MultiColumnHeaderState/Column,UnityEngine.Rect,System.Int32)">
      <summary>
        <para>Переопределите, чтобы настроить графический интерфейс одного заголовка столбца.</para>
      </summary>
      <param name="column">Данные заголовка столбца.</param>
      <param name="headerRect">Rect для заголовка столбца.</param>
      <param name="columnIndex">Индекс столбца.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.#ctor(UnityEditor.IMGUI.Controls.MultiColumnHeaderState)">
      <summary>
        <para>Конструктор.</para>
      </summary>
      <param name="state">Состояние заголовка столбца и состояние столбца.</param>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.MultiColumnHeader.DefaultGUI">
      <summary>
        <para>Методы и свойства графического интерфейса по умолчанию для класса MultiColumnHeader.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.MultiColumnHeader.DefaultGUI.columnContentMargin">
      <summary>
        <para>Поле, которое может использоваться клиентами MultiColumnHeader для управления расстоянием между содержимым в нескольких столбцах.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.MultiColumnHeader.DefaultGUI.defaultHeight">
      <summary>
        <para>Высота заголовка по умолчанию.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.MultiColumnHeader.DefaultGUI.minimumHeight">
      <summary>
        <para>Эта высота является минимальной высотой заголовка и может использоваться только в том случае, если сортировка отключена.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.MultiColumnHeader.DefaultStyles">
      <summary>
        <para>Стили по умолчанию, используемые классом MultiColumnHeader.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.MultiColumnHeader.DefaultStyles.background">
      <summary>
        <para>Стиль, используемый для рендеринга фона заголовка.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.MultiColumnHeader.DefaultStyles.columnHeader">
      <summary>
        <para>Стиль, используемый для текста заголовка с выравниванием по левому краю.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.MultiColumnHeader.DefaultStyles.columnHeaderCenterAligned">
      <summary>
        <para>Стиль, используемый для центрированного текста заголовка.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.MultiColumnHeader.DefaultStyles.columnHeaderRightAligned">
      <summary>
        <para>Стиль, используемый для текста заголовка, выровненного по правому краю.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.GetCellRect(System.Int32,UnityEngine.Rect)">
      <summary>
        <para>Вычисляет прямоугольник ячейки для столбца и строки, используя параметры visibleColumnIndex и rowRect.</para>
      </summary>
      <param name="visibleColumnIndex">
      </param>
      <param name="rowRect">
      </param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.GetColumn(System.Int32)">
      <summary>
        <para>Возвращает данные столбца для заданного индекса столбца.</para>
      </summary>
      <param name="columnIndex">Индекс столбца.</param>
      <returns>
        <para>Данные столбца.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.GetColumnRect(System.Int32)">
      <summary>
        <para>Возвращает столбец заголовка Rect для заданного индекса видимого столбца.</para>
      </summary>
      <param name="visibleColumnIndex">Индекс видимого столбца.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.GetVisibleColumnIndex(System.Int32)">
      <summary>
        <para>Преобразование из индекса столбца в видимый индекс столбца.</para>
      </summary>
      <param name="columnIndex">Индекс столбца.</param>
      <returns>
        <para>Индекс видимого столбца.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.MultiColumnHeader.HeaderCallback">
      <summary>
        <para>Делегат, используемый для событий из MultiColumnHeader.</para>
      </summary>
      <param name="multiColumnHeader">MultiColumnHeader, отправивший это событие.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.IsColumnVisible(System.Int32)">
      <summary>
        <para>Проверьте, виден ли в данный момент столбец в MultiColumnHeader.</para>
      </summary>
      <param name="columnIndex">Индекс столбца.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.IsSortedAscending(System.Int32)">
      <summary>
        <para>Проверьте состояние порядка сортировки для столбца.</para>
      </summary>
      <param name="columnIndex">Индекс столбца.</param>
      <returns>
        <para>Истинно, если отсортировано по возрастанию.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.OnGUI(UnityEngine.Rect,System.Single)">
      <summary>
        <para>Визуализация и обработка ввода для MultiColumnHeader в заданном прямоугольнике.</para>
      </summary>
      <param name="xScroll">Горизонтальное смещение прокрутки.</param>
      <param name="rect">Rect, где нарисован MultiColumnHeader.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.OnSortingChanged">
      <summary>
        <para>Вызывается при сортировке изменений и отправке события sortingChanged.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.OnVisibleColumnsChanged">
      <summary>
        <para>Вызывается при изменении количества видимых столбцов и отправке события visibleColumnsChanged.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.Repaint">
      <summary>
        <para>Запрашивает перерисовку окна, содержащего MultiColumnHeader.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.ResizeToFit">
      <summary>
        <para>Изменяет ширину столбцов, для которых включено автоматическое изменение размера, чтобы все столбцы соответствовали ширине прямоугольника рендеринга MultiColumnHeader.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.SetSortDirection(System.Int32,System.Boolean)">
      <summary>
        <para>Изменить направление сортировки для данного столбца.</para>
      </summary>
      <param name="columnIndex">Индекс столбца.</param>
      <param name="sortAscending">Направление сортировки.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.SetSorting(System.Int32,System.Boolean)">
      <summary>
        <para>Задает основной столбец сортировки и порядок его сортировки.</para>
      </summary>
      <param name="columnIndex">Столбец для сортировки.</param>
      <param name="sortAscending">Порядок сортировки для указанного столбца.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.SetSortingColumns(System.Int32[],System.Boolean[])">
      <summary>
        <para>Задает несколько столбцов сортировки и связанные с ними порядки сортировки.</para>
      </summary>
      <param name="columnIndices">Индексы столбцов отсортированных столбцов.</param>
      <param name="sortAscending">Порядок сортировки для указанных индексов столбцов.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.SortingButton(UnityEditor.IMGUI.Controls.MultiColumnHeaderState/Column,UnityEngine.Rect,System.Int32)">
      <summary>
        <para>Предоставляет логику кнопок для заголовка столбца и отображение стрелки сортировки (если она видна).</para>
      </summary>
      <param name="column">Данные столбца.</param>
      <param name="headerRect">Прямоугольный заголовок столбца.</param>
      <param name="columnIndex">Индекс столбца.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.ToggleVisibility(System.Int32)">
      <summary>
        <para>Метод переключения видимости столбца.</para>
      </summary>
      <param name="columnIndex">Переключить видимость для этого столбца.</param>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.MultiColumnHeaderState">
      <summary>
        <para>Состояние, используемое MultiColumnHeader.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.columns">
      <summary>
        <para>Массив состояний столбцов, используемый классом MultiColumnHeader.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.maximumNumberOfSortedColumns">
      <summary>
        <para>Это свойство управляет максимальным количеством столбцов, возвращаемых свойством sortedColumns.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.sortedColumnIndex">
      <summary>
        <para>Это свойство содержит индекс основного отсортированного столбца.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.sortedColumns">
      <summary>
        <para>Массив индексов столбцов для сортировки по нескольким столбцам.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.visibleColumns">
      <summary>
        <para>Это массив видимых в данный момент индексов столбцов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.widthOfAllVisibleColumns">
      <summary>
        <para>Возвращает сумму ширины всех видимых столбцов в массиве visibleColumns.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.CanOverwriteSerializedFields(UnityEditor.IMGUI.Controls.MultiColumnHeaderState,UnityEditor.IMGUI.Controls.MultiColumnHeaderState)">
      <summary>
        <para>Проверяет, может ли исходное состояние передавать свои сериализованные данные в состояние назначения.</para>
      </summary>
      <param name="source">Состояние, в котором есть сериализованные данные для передачи в состояние назначения.</param>
      <param name="destination">Состояние назначения.</param>
      <returns>
        <para>Возвращает true, если исходное состояние имеет то же количество столбцов, что и целевое состояние.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.Column">
      <summary>
        <para>Состояние столбца.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.Column.allowToggleVisibility">
      <summary>
        <para>Возможность разрешить/запретить скрытие столбца из контекстного меню.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.Column.autoResize">
      <summary>
        <para>Возможность автоматического изменения размера столбца при изменении размера всего MultiColumnHeader.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.Column.canSort">
      <summary>
        <para>Включена ли сортировка для этого столбца. Если false, щелчок левой кнопкой мыши по заголовку этого столбца не дает никакого эффекта.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.Column.contextMenuText">
      <summary>
        <para>Если это установлено, то оно используется для контекстного меню для переключения видимости, если не установлено, то используется ::headerContent.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.Column.headerContent">
      <summary>
        <para>Это GUIContent, который будет отображаться в заголовке столбца.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.Column.headerTextAlignment">
      <summary>
        <para>Выравнивание содержимого заголовка.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.Column.maxWidth">
      <summary>
        <para>Максимальная ширина столбца.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.Column.minWidth">
      <summary>
        <para>Минимальная ширина столбца.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.Column.sortedAscending">
      <summary>
        <para>Значение, определяющее, сортируется ли этот столбец по возрастанию или по убыванию.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.Column.sortingArrowAlignment">
      <summary>
        <para>Выравнивание стрелки сортировки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.Column.userData">
      <summary>
        <para>Сериализованное поле, содержащее целочисленное значение, которое можно использовать в качестве дескриптора для доступа к любым несериализованным пользовательским данным.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.Column.width">
      <summary>
        <para>Ширина столбца.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.#ctor(UnityEditor.IMGUI.Controls.MultiColumnHeaderState/Column[])">
      <summary>
        <para>Конструктор.</para>
      </summary>
      <param name="columns">Данные столбца.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.OverwriteSerializedFields(UnityEditor.IMGUI.Controls.MultiColumnHeaderState,UnityEditor.IMGUI.Controls.MultiColumnHeaderState)">
      <summary>
        <para>Перезаписывает сериализованные поля из исходного состояния в целевое состояние.</para>
      </summary>
      <param name="source">Состояние, в котором есть сериализованные данные для передачи в состояние назначения.</param>
      <param name="destination">Состояние назначения.</param>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle">
      <summary>
        <para>Базовый класс для составного дескриптора для редактирования ограничивающего объема в представлении «Сцена».</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.axes">
      <summary>
        <para>Флаги, определяющие, какие оси должны отображать маркеры управления.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.center">
      <summary>
        <para>Возвращает или задает центр ограничивающего объема для маркера.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.handleColor">
      <summary>
        <para>Возвращает или задает цвет маркеров управления.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.midpointHandleDrawFunction">
      <summary>
        <para>Необязательный Handles.CapFunction для использования при отображении маркеров управления. По умолчанию используется Handles.DotHandleCap, если значение не указано.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.midpointHandleSizeFunction">
      <summary>
        <para>Handles.SizeFunction, чтобы указать, насколько большими должны быть маркеры управления средней точкой.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.wireframeColor">
      <summary>
        <para>Возвращает или задает цвет формы каркаса.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.Axes">
      <summary>
        <para>Перечисление флагов для указания, какие оси в объекте PrimitiveBoundsHandle должны быть включены.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.Axes.All">
      <summary>
        <para>Все оси.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.Axes.None">
      <summary>
        <para>Нет осей.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.Axes.X">
      <summary>
        <para>Ось X (бит 0).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.Axes.Y">
      <summary>
        <para>Ось Y (бит 1).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.Axes.Z">
      <summary>
        <para>Ось Z (бит 2).</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.#ctor">
      <summary>
        <para>Создайте новый экземпляр класса PrimitiveBoundsHandle.</para>
      </summary>
      <param name="controlIDHint">Целочисленное значение, используемое для создания согласованных идентификаторов элементов управления для каждого дескриптора элемента управления в этом экземпляре. Не используйте одно и то же значение для всех ваших экземпляров PrimitiveBoundsHandle.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.#ctor(System.Int32)">
      <summary>
        <para>Создайте новый экземпляр класса PrimitiveBoundsHandle.</para>
      </summary>
      <param name="controlIDHint">Целочисленное значение, используемое для создания согласованных идентификаторов элементов управления для каждого дескриптора элемента управления в этом экземпляре. Не используйте одно и то же значение для всех ваших экземпляров PrimitiveBoundsHandle.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.DefaultMidpointHandleSizeFunction(UnityEngine.Vector3)">
      <summary>
        <para>Функция Handles.SizeFunction, возвращающая фиксированный размер экранного пространства.</para>
      </summary>
      <param name="position">Текущее положение дескриптора в пространстве Handles.matrix.</param>
      <returns>
        <para>Размер, используемый для маркера в указанной позиции.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.DrawHandle">
      <summary>
        <para>Функция для отображения этого экземпляра в текущей камере дескриптора с использованием его текущей конфигурации.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.DrawWireframe">
      <summary>
        <para>Нарисуйте форму каркаса для этого экземпляра. Подклассы должны реализовать этот метод.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.GetSize">
      <summary>
        <para>Получает текущий размер ограничивающего тома для данного экземпляра.</para>
      </summary>
      <returns>
        <para>Текущий размер ограничивающего тома для данного экземпляра.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.HandleDirection">
      <summary>
        <para>Перечисление направлений, в которых перемещается ручка.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.HandleDirection.NegativeX">
      <summary>
        <para>Это значение соответствует перемещению маркера в отрицательном направлении от PrimitiveBoundsHandle.center по оси x.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.HandleDirection.NegativeY">
      <summary>
        <para>Это значение соответствует перемещению маркера в отрицательном направлении от PrimitiveBoundsHandle.center по оси Y.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.HandleDirection.NegativeZ">
      <summary>
        <para>Это значение соответствует перемещению маркера в отрицательном направлении от PrimitiveBoundsHandle.center по оси Z.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.HandleDirection.PositiveX">
      <summary>
        <para>Это значение соответствует перемещению маркера в положительном направлении от PrimitiveBoundsHandle.center по оси x.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.HandleDirection.PositiveY">
      <summary>
        <para>Это значение соответствует перемещению маркера в положительном направлении от PrimitiveBoundsHandle.center по оси Y.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.HandleDirection.PositiveZ">
      <summary>
        <para>Это значение соответствует перемещению маркера в положительном направлении от PrimitiveBoundsHandle.center вдоль оси Z.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.IsAxisEnabled(UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle/Axes)">
      <summary>
        <para>Получает значение, указывающее, включена ли указанная ось для текущего экземпляра.</para>
      </summary>
      <param name="axis">Топоры.</param>
      <param name="vector3Axis">Целое число, соответствующее оси на Vector3. Например, 0 — это x, 1 — это y, а 2 — это z.</param>
      <returns>
        <para>true, если указанная ось включена; в противном случае — ложь.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.IsAxisEnabled(System.Int32)">
      <summary>
        <para>Получает значение, указывающее, включена ли указанная ось для текущего экземпляра.</para>
      </summary>
      <param name="axis">Топоры.</param>
      <param name="vector3Axis">Целое число, соответствующее оси на Vector3. Например, 0 — это x, 1 — это y, а 2 — это z.</param>
      <returns>
        <para>true, если указанная ось включена; в противном случае — ложь.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.OnHandleChanged(UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle/HandleDirection,UnityEngine.Bounds,UnityEngine.Bounds)">
      <summary>
        <para>Обратный вызов при перетаскивании дескриптора управления в сцене.</para>
      </summary>
      <param name="handle">Дескриптор, который был перетащен.</param>
      <param name="boundsOnClick">Необработанные границы объема этого экземпляра на момент щелчка дескриптора управления.</param>
      <param name="newBounds">Необработанные границы объема этого экземпляра на основе обновленного положения ручки.</param>
      <returns>
        <para>Границы, которые должны быть применены к этому экземпляру, со всеми необходимыми изменениями.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.SetColor(UnityEngine.Color)">
      <summary>
        <para>Устанавливает для handleColor и wireframeColor одно и то же значение.</para>
      </summary>
      <param name="color">Цвет, используемый для маркеров управления и формы каркаса.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.SetSize(UnityEngine.Vector3)">
      <summary>
        <para>Задает текущий размер ограничивающего тома для данного экземпляра.</para>
      </summary>
      <param name="size">Vector3, указывающий, насколько велик ограничивающий объем по всем его осям.</param>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.SearchField">
      <summary>
        <para>Элемент управления SearchField создает текстовое поле для ввода пользователем текста, который можно использовать для поиска.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.SearchField.autoSetFocusOnFindCommand">
      <summary>
        <para>Изменяет фокус клавиатуры на поле поиска, когда пользователь нажимает «Ctrl/Cmd + F», если установлено значение true. Это правда по умолчанию.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.IMGUI.Controls.SearchField.downOrUpArrowKeyPressed(UnityEditor.IMGUI.Controls.SearchField/SearchFieldCallback)">
      <summary>
        <para>Это событие отправляется, когда сфокусированное поле поиска обнаруживает, что нажата клавиша «вниз» или «вверх», и может использоваться для переключения фокуса клавиатуры на другой элемент управления, например TreeView.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.SearchField.searchFieldControlID">
      <summary>
        <para>Это controlID, используемый для текстового поля для получения фокуса клавиатуры.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.SearchField.HasFocus">
      <summary>
        <para>Эта функция возвращает значение true, если поле поиска имеет фокус клавиатуры.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.SearchField.OnGUI(System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Эта функция отображает поле поиска со стилем пользовательского интерфейса по умолчанию и использует класс GUILayout для автоматического вычисления положения и размера Rect, в котором он отображается. Передайте необязательный список, чтобы указать дополнительные свойства макета.</para>
      </summary>
      <param name="text">Текстовая строка для отображения в поле поиска.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. &lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Текст, введенный в поле поиска. Вместо этого возвращается исходная строка ввода, если текст поля поиска не был изменен.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.SearchField.OnGUI(UnityEngine.Rect,System.String)">
      <summary>
        <para>Эта функция отображает поле поиска со стилем пользовательского интерфейса по умолчанию в данном Rect.</para>
      </summary>
      <param name="rect">Прямоугольник для поля поиска.</param>
      <param name="text">Текстовая строка для отображения в поле поиска.</param>
      <returns>
        <para>Текст, введенный в поле поиска. Вместо этого возвращается исходная строка ввода, если текст поля поиска не был изменен.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.SearchField.OnGUI(UnityEngine.Rect,System.String,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUIStyle)">
      <summary>
        <para>Эта функция отображает текстовое поле поиска с заданными параметрами Rect и стиля пользовательского интерфейса.</para>
      </summary>
      <param name="rect">Прямоугольник для поля поиска.</param>
      <param name="text">Текстовая строка для отображения в поле поиска.</param>
      <param name="style">Стиль текстового поля.</param>
      <param name="cancelButtonStyle">Стиль кнопки отмены, используемый при наличии текста в поле поиска.</param>
      <param name="emptyCancelButtonStyle">Стиль кнопки отмены, используемый, когда в поле поиска нет текста.</param>
      <returns>
        <para>Текст, введенный в SearchField. Вместо этого возвращается исходная строка ввода, если текст поля поиска не был изменен.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.SearchField.OnToolbarGUI(System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Эта функция отображает поле поиска в стиле пользовательского интерфейса панели инструментов и использует класс GUILayout для автоматического вычисления положения и размера Rect, в который он отображается. Передайте необязательный список, чтобы указать дополнительные свойства макета.</para>
      </summary>
      <param name="text">Текстовая строка для отображения в поле поиска.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. &lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Текст, введенный в поле поиска. Вместо этого возвращается исходная строка ввода, если текст поля поиска не был изменен.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.SearchField.OnToolbarGUI(UnityEngine.Rect,System.String)">
      <summary>
        <para>Эта функция отображает поле поиска со стилем панели инструментов в данном прямоугольнике.</para>
      </summary>
      <param name="rect">Прямоугольник для поля поиска.</param>
      <param name="text">Текстовая строка для отображения в поле поиска.</param>
      <returns>
        <para>Текст, введенный в поле поиска. Вместо этого возвращается исходная строка ввода, если текст поля поиска не был изменен.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.SearchField.SearchFieldCallback">
      <summary>
        <para>Это общий делегат обратного вызова для событий SearchField, который не принимает никаких параметров.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.SearchField.SetFocus">
      <summary>
        <para>Эта функция изменяет фокус клавиатуры на поле поиска, чтобы пользователь мог начать печатать.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.SphereBoundsHandle">
      <summary>
        <para>Составной маркер для редактирования ограничивающего объема в форме сферы в представлении «Сцена».</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.SphereBoundsHandle.radius">
      <summary>
        <para>Возвращает или задает радиус ограничивающего объема сферы.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.SphereBoundsHandle.#ctor">
      <summary>
        <para>Создайте новый экземпляр класса SphereBoundsHandle.</para>
      </summary>
      <param name="controlIDHint">Целочисленное значение, используемое для создания согласованных идентификаторов элементов управления для каждого дескриптора элемента управления в этом экземпляре. Не используйте одно и то же значение для всех экземпляров SphereBoundsHandle.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.SphereBoundsHandle.#ctor(System.Int32)">
      <summary>
        <para>Создайте новый экземпляр класса SphereBoundsHandle.</para>
      </summary>
      <param name="controlIDHint">Целочисленное значение, используемое для создания согласованных идентификаторов элементов управления для каждого дескриптора элемента управления в этом экземпляре. Не используйте одно и то же значение для всех экземпляров SphereBoundsHandle.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.SphereBoundsHandle.DrawWireframe">
      <summary>
        <para>Нарисуйте каркасную сферу для этого экземпляра.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.SphereBoundsHandle.OnHandleChanged(UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle/HandleDirection,UnityEngine.Bounds,UnityEngine.Bounds)">
      <summary>
        <para>Обратный вызов при перетаскивании дескриптора управления в сцене.</para>
      </summary>
      <param name="handle">Дескриптор, который был перетащен.</param>
      <param name="boundsOnClick">Необработанные границы объема этого экземпляра на момент щелчка дескриптора управления.</param>
      <param name="newBounds">Необработанные границы объема этого экземпляра на основе обновленного положения ручки.</param>
      <returns>
        <para>Границы, которые должны быть применены к этому экземпляру, со всеми необходимыми изменениями.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.TreeView">
      <summary>
        <para>TreeView — это элемент управления IMGUI, который позволяет создавать древовидные представления, списковые представления и таблицы с несколькими столбцами для инструментов редактора.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.baseIndent">
      <summary>
        <para>Отступ, используемый для всех строк перед стрелками разворота дерева и содержимым.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.cellMargin">
      <summary>
        <para>При использовании MultiColumnHeader это значение настраивает прямоугольники ячеек, предоставленные для всех столбцов, за исключением столбца раскрывающегося дерева.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.columnIndexForTreeFoldouts">
      <summary>
        <para>При использовании MultiColumnHeader это значение должно быть установлено на индекс столбца, в котором должны отображаться стрелки раскрывающегося списка.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.customFoldoutYOffset">
      <summary>
        <para>Пользовательское вертикальное смещение раскрывающейся стрелки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.depthIndentWidth">
      <summary>
        <para>Значение, которое возвращает отступ складок для каждого увеличения значения глубины.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.extraSpaceBeforeIconAndLabel">
      <summary>
        <para>Значение для управления интервалом перед значком и меткой по умолчанию. Может использоваться, например, для размещения переключателя слева от содержимого.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.foldoutOverride">
      <summary>
        <para>Зарегистрируйте обратный вызов для этого свойства, чтобы переопределить кнопку Foldout в TreeView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.foldoutWidth">
      <summary>
        <para>Ширина встроенной раскрывающейся стрелки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.getNewSelectionOverride">
      <summary>
        <para>Зарегистрируйте обратный вызов для этого поля, чтобы переопределить, как TreeView обрабатывает изменения выбора в ответ на нажатия клавиш и щелчки мыши.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.hasSearch">
      <summary>
        <para>Текущее состояние поиска TreeView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.isDragging">
      <summary>
        <para>Значение true, если пользователь в данный момент перетаскивает один или несколько элементов в TreeView, и значение false в противном случае.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.isInitialized">
      <summary>
        <para>TreeView инициализируется вызовом Reload(). Поэтому возвращает false, пока Reload() не будет вызвана в первый раз.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.multiColumnHeader">
      <summary>
        <para>Получите MultiColumnHeader из TreeView. Может иметь значение null, если TreeView был создан без MultiColumnHeader.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.rootItem">
      <summary>
        <para>Скрытый корневой элемент TreeView (он никогда не отображается).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.rowHeight">
      <summary>
        <para>Фиксированная высота, используемая для каждой строки в TreeView, если GetCustomRowHeight не был переопределен.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.searchString">
      <summary>
        <para>Текущая строка поиска TreeView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.showAlternatingRowBackgrounds">
      <summary>
        <para>Включите этот параметр, чтобы отображались чередующиеся цвета фона строк.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.showBorder">
      <summary>
        <para>Включите это, чтобы показать границу вокруг TreeView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.showingHorizontalScrollBar">
      <summary>
        <para>Возвращает true, если отображается горизонтальная полоса прокрутки, иначе false.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.showingVerticalScrollBar">
      <summary>
        <para>Возвращает true, если отображается вертикальная полоса прокрутки, иначе false.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.state">
      <summary>
        <para>Состояние TreeView (расширенное состояние, выделение, прокрутка и т. д.)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.totalHeight">
      <summary>
        <para>Возвращает сумму высоты строки TreeView, высоты MultiColumnHeader (если используется) и границы (если используется).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.treeViewControlID">
      <summary>
        <para>ControlID, используемый TreeView для получения фокуса управления клавиатурой.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.treeViewRect">
      <summary>
        <para>Rect, в который визуализируется TreeView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.useScrollView">
      <summary>
        <para>При отрисовке содержимого TreeView оно будет заключено в ScrollView?</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.AddExpandedRows(UnityEditor.IMGUI.Controls.TreeViewItem,System.Collections.Generic.IList`1&lt;UnityEditor.IMGUI.Controls.TreeViewItem&gt;)">
      <summary>
        <para>Добавляет развернутые строки полного дерева во входной список. Используйте этот метод только в том случае, если в BuildRoot было построено полное дерево.</para>
      </summary>
      <param name="root">Корень TreeView.</param>
      <param name="rows">Строки, которые будут повторно заполнены с использованием расширенного состояния TreeView.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.AfterRowsGUI">
      <summary>
        <para>Это вызывается после того, как для всех строк вызывается их RowGUI.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.BeforeRowsGUI">
      <summary>
        <para>Это вызывается до того, как для каких-либо строк будет вызван их RowGUI.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.BeginRename(UnityEditor.IMGUI.Controls.TreeViewItem)">
      <summary>
        <para>Показывает наложение переименования для TreeViewItem.</para>
      </summary>
      <param name="item">Элемент для переименования.</param>
      <param name="delay">Задержка в секундах до появления наложения переименования.</param>
      <returns>
        <para>Возвращает true, если было начато переименование. Возвращает false, если переименование уже было активно.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.BeginRename(UnityEditor.IMGUI.Controls.TreeViewItem,System.Single)">
      <summary>
        <para>Показывает наложение переименования для TreeViewItem.</para>
      </summary>
      <param name="item">Элемент для переименования.</param>
      <param name="delay">Задержка в секундах до появления наложения переименования.</param>
      <returns>
        <para>Возвращает true, если было начато переименование. Возвращает false, если переименование уже было активно.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.BuildRoot">
      <summary>
        <para>Абстрактный метод, который требуется реализовать. По умолчанию этот метод должен создавать полное дерево TreeViewItems и возвращать корень.</para>
      </summary>
      <returns>
        <para>Корень дерева. Позже к этому элементу можно получить доступ с помощью 'rootItem'.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.BuildRows(UnityEditor.IMGUI.Controls.TreeViewItem)">
      <summary>
        <para>Переопределите этот метод, чтобы управлять созданием строк.</para>
      </summary>
      <param name="root">Корневой элемент, созданный в методе BuildRoot.</param>
      <returns>
        <para>Список строк, отображаемый в TreeView. Позже к ним можно получить доступ с помощью GetRows().</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.CanBeParent(UnityEditor.IMGUI.Controls.TreeViewItem)">
      <summary>
        <para>Переопределите этот метод, чтобы контролировать, какие элементы могут быть родительскими.</para>
      </summary>
      <param name="item">Может ли этот элемент быть родительским?</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.CanChangeExpandedState(UnityEditor.IMGUI.Controls.TreeViewItem)">
      <summary>
        <para>Переопределите этот метод, чтобы указать, можно ли разворачивать или сворачивать элемент с помощью клавиши или мыши.</para>
      </summary>
      <param name="item">Можно ли этот элемент развернуть/свернуть.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.CanMultiSelect(UnityEditor.IMGUI.Controls.TreeViewItem)">
      <summary>
        <para>Переопределите этот метод, чтобы контролировать, может ли элемент быть частью множественного выбора.</para>
      </summary>
      <param name="item">Может ли этот элемент быть частью множественного выбора.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.CanRename(UnityEditor.IMGUI.Controls.TreeViewItem)">
      <summary>
        <para>Переопределите этот метод, чтобы указать, можно ли переименовывать элемент с помощью сочетания клавиш или щелчка по уже выбранному элементу.</para>
      </summary>
      <param name="item">Можно ли переименовать этот элемент?</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.CanStartDrag(UnityEditor.IMGUI.Controls.TreeView/CanStartDragArgs)">
      <summary>
        <para>Эта функция вызывается всякий раз, когда TreeViewItem щелкают и перетаскивают. По умолчанию возвращает false.</para>
      </summary>
      <param name="args">
      </param>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.TreeView.CanStartDragArgs">
      <summary>
        <para>Аргументы метода для виртуального метода CanStartDrag.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.CanStartDragArgs.draggedItem">
      <summary>
        <para>Элемент, который нужно перетащить.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.CanStartDragArgs.draggedItemIDs">
      <summary>
        <para>Множественный выбор, который нужно перетащить.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.CenterRectUsingSingleLineHeight(UnityEngine.Rect&amp;)">
      <summary>
        <para>Изменяет входной прямоугольник так, чтобы он располагался по центру и имел высоту, равную EditorGUIUtility.singleLineHeight.</para>
      </summary>
      <param name="rect">Rect для изменения и центрирования.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.CollapseAll">
      <summary>
        <para>Свернуть все развернутые элементы в TreeView.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.CommandEventHandling">
      <summary>
        <para>Эта функция вызывается автоматически и обрабатывает события ExecuteCommand для «SelectAll» и «FrameSelection». Переопределите эту функцию, чтобы расширить или избежать событий Command.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.ContextClicked">
      <summary>
        <para>Переопределите этот метод для обработки щелчков контекста за пределами каких-либо элементов (но все еще в прямоугольнике TreeView).</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.ContextClickedItem(System.Int32)">
      <summary>
        <para>Переопределите этот метод для обработки щелчка контекста по элементу с идентификатором TreeViewItem.id.</para>
      </summary>
      <param name="id">Идентификатор TreeViewItem.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.CreateChildListForCollapsedParent">
      <summary>
        <para>Создает фиктивный список TreeViewItem. Полезно при переопределении BuildRows, чтобы предотвратить построение полного дерева элементов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.#ctor(UnityEditor.IMGUI.Controls.TreeViewState)">
      <summary>
        <para>TreeView всегда создается с объектом состояния и, при необходимости, объектом заголовка с несколькими столбцами, если заголовок необходим.</para>
      </summary>
      <param name="state">Состояние TreeView (развернутые элементы, выбор и т. д.)</param>
      <param name="multiColumnHeader">Заголовок с несколькими столбцами для TreeView.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.#ctor(UnityEditor.IMGUI.Controls.TreeViewState,UnityEditor.IMGUI.Controls.MultiColumnHeader)">
      <summary>
        <para>TreeView всегда создается с объектом состояния и, при необходимости, объектом заголовка с несколькими столбцами, если заголовок необходим.</para>
      </summary>
      <param name="state">Состояние TreeView (развернутые элементы, выбор и т. д.)</param>
      <param name="multiColumnHeader">Заголовок с несколькими столбцами для TreeView.</param>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.TreeView.DefaultGUI">
      <summary>
        <para>Методы и свойства графического интерфейса по умолчанию для класса TreeView.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.DefaultGUI.BoldLabel(UnityEngine.Rect,System.String,System.Boolean,System.Boolean)">
      <summary>
        <para>Рисует полужирную метку с правильным цветом текста при выборе и/или фокусе.</para>
      </summary>
      <param name="rect">Rect для рендеринга текста.</param>
      <param name="label">Метка для отображения.</param>
      <param name="selected">Выбранное состояние, используемое для определения цвета текста.</param>
      <param name="focused">Состояние фокусировки, используемое для определения цвета текста.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.DefaultGUI.BoldLabelRightAligned(UnityEngine.Rect,System.String,System.Boolean,System.Boolean)">
      <summary>
        <para>Рисует полужирную метку с выравниванием по правому краю, которая имеет правильный цвет текста при выборе и/или фокусе.</para>
      </summary>
      <param name="rect">Rect для рендеринга текста.</param>
      <param name="label">Метка для отображения.</param>
      <param name="selected">Выбранное состояние, используемое для определения цвета текста.</param>
      <param name="focused">Состояние фокусировки, используемое для определения цвета текста.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.DefaultGUI.FoldoutLabel(UnityEngine.Rect,System.String,System.Boolean,System.Boolean)">
      <summary>
        <para>Рисует складную метку с правильным цветом текста при выборе и/или фокусе.</para>
      </summary>
      <param name="rect">Rect для рендеринга текста.</param>
      <param name="label">Метка для отображения.</param>
      <param name="selected">Выбранное состояние, используемое для определения цвета текста.</param>
      <param name="focused">Состояние фокусировки, используемое для определения цвета текста.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.DefaultGUI.Label(UnityEngine.Rect,System.String,System.Boolean,System.Boolean)">
      <summary>
        <para>Рисует метку с правильным цветом текста при выборе и/или фокусе.</para>
      </summary>
      <param name="rect">Rect для рендеринга текста.</param>
      <param name="label">Метка для отображения.</param>
      <param name="selected">Выбранное состояние, используемое для определения цвета текста.</param>
      <param name="focused">Состояние фокусировки, используемое для определения цвета текста.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.DefaultGUI.LabelRightAligned(UnityEngine.Rect,System.String,System.Boolean,System.Boolean)">
      <summary>
        <para>Рисует метку с выравниванием по правому краю, которая имеет правильный цвет текста при выборе и/или фокусе.</para>
      </summary>
      <param name="rect">Rect для рендеринга текста.</param>
      <param name="label">Метка для отображения.</param>
      <param name="selected">Выбранное состояние, используемое для определения цвета текста.</param>
      <param name="focused">Состояние фокусировки, используемое для определения цвета текста.</param>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.TreeView.DefaultStyles">
      <summary>
        <para>Стили по умолчанию, используемые классом TreeView.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.DefaultStyles.backgroundEven">
      <summary>
        <para>Стиль фона, используемый для чередования цветов фона строки при включении TreeView.showAlternatingRowBackgrounds.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.DefaultStyles.backgroundOdd">
      <summary>
        <para>Стиль фона, используемый для чередования цветов фона строки при включении TreeView.showAlternatingRowBackgrounds.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.DefaultStyles.boldLabel">
      <summary>
        <para>Метка жирным шрифтом с альтернативным цветом текста при выделении и/или фокусе.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.DefaultStyles.boldLabelRightAligned">
      <summary>
        <para>Полужирная метка с выравниванием по правому краю и альтернативным цветом текста при выборе и/или фокусе.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.DefaultStyles.foldoutLabel">
      <summary>
        <para>Метка, которая используется для метки раскладывания с альтернативным цветом текста, когда она выбрана и/или находится в фокусе.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.DefaultStyles.label">
      <summary>
        <para>Выровненная по левому краю метка с альтернативным цветом текста при выборе и/или фокусе.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.DefaultStyles.labelRightAligned">
      <summary>
        <para>Выравнивание по правому краю с альтернативным цветом текста при выборе и/или фокусе.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.DoesItemMatchSearch(UnityEditor.IMGUI.Controls.TreeViewItem,System.String)">
      <summary>
        <para>Переопределите эту функцию, чтобы расширить или изменить поведение поиска.</para>
      </summary>
      <param name="item">Элемент, используемый для сопоставления со строкой поиска.</param>
      <param name="search">Строка поиска TreeView.</param>
      <returns>
        <para>Истина, если элемент соответствует строке поиска, в противном случае — ложь.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.TreeView.DoFoldoutCallback">
      <summary>
        <para>Подпись обратного вызова, используемая для переопределения раскладки TreeView. См. foldoutOverride.</para>
      </summary>
      <param name="position">Rect, чтобы нарисовать раскладку.</param>
      <param name="expandedState">Текущее состояние разворота.</param>
      <param name="style">Стиль кнопки переключения.</param>
      <returns>
        <para>Возвращает true, если раскладка все еще развернута. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.DoubleClickedItem(System.Int32)">
      <summary>
        <para>Переопределите этот метод для обработки событий двойного щелчка по элементу.</para>
      </summary>
      <param name="id">Идентификатор TreeViewItem, по которому дважды щелкнули.</param>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.TreeView.DragAndDropArgs">
      <summary>
        <para>Аргументы метода для виртуального метода HandleDragAndDrop.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.DragAndDropArgs.dragAndDropPosition">
      <summary>
        <para>При перетаскивании элементов текущее перетаскивание может иметь следующие 3 позиции относительно элементов: Над элементом, Между двумя элементами или Снаружи элементов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.DragAndDropArgs.insertAtIndex">
      <summary>
        <para>Этот индекс относится к индексу в списке дочерних элементов parentItem, где находится текущее перетаскивание.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.DragAndDropArgs.parentItem">
      <summary>
        <para>Родительский элемент устанавливается, если перетаскивание происходит либо на этот элемент, либо между двумя его дочерними элементами.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.DragAndDropArgs.performDrop">
      <summary>
        <para>Это значение ложно, пока кнопка мыши нажата, когда кнопка мыши отпущена, оно истинно.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.TreeView.DragAndDropPosition">
      <summary>
        <para>Перечисление, описывающее возможные положения перетаскивания относительно элементов: на элементе, между двумя элементами или вне элементов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.DragAndDropPosition.BetweenItems">
      <summary>
        <para>Это значение используется при перетаскивании между двумя элементами.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.DragAndDropPosition.OutsideItems">
      <summary>
        <para>Это значение используется при перетаскивании за пределы всех элементов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.DragAndDropPosition.UponItem">
      <summary>
        <para>Это значение используется при перетаскивании элемента.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.EndRename">
      <summary>
        <para>Завершает переименование, если отображается наложение переименования. При вызове, когда наложение переименования не отображается, этот метод ничего не делает.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.ExpandAll">
      <summary>
        <para>Разверните все свернутые элементы в TreeView.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.ExpandedStateChanged">
      <summary>
        <para>Переопределить, чтобы получать уведомления, когда элементы развернуты или свернуты. Это общее уведомление об изменении расширенного состояния.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.FindItem(System.Int32,UnityEditor.IMGUI.Controls.TreeViewItem)">
      <summary>
        <para>Находит TreeViewItem по идентификатору.</para>
      </summary>
      <param name="id">Найдите TreeViewItem с этим идентификатором.</param>
      <param name="searchFromThisItem">Устанавливает начало поиска с элемента. Используйте 'rootItem' для поиска по всему дереву.</param>
      <returns>
        <para>Этот метод поиска возвращает найденный объект TreeViewItem и возвращает значение null, если он не найден.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.FindRowOfItem(UnityEditor.IMGUI.Controls.TreeViewItem)">
      <summary>
        <para>Возвращает строку данного TreeViewItem.</para>
      </summary>
      <param name="item">Элемент для поиска строки.</param>
      <returns>
        <para>Строка TreeViewItem.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.FindRows(System.Collections.Generic.IList`1&lt;System.Int32&gt;)">
      <summary>
        <para>Полезно для преобразования идентификаторов TreeViewItem в TreeViewItems с использованием текущих строк.</para>
      </summary>
      <param name="ids">Идентификаторы TreeViewItem.</param>
      <returns>
        <para>TreeViewItems.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.FrameItem(System.Int32)">
      <summary>
        <para>Это покажет элемент с идентификатором id (путем расширения предков этого элемента) и обеспечит его видимость в ScrollView.</para>
      </summary>
      <param name="id">Идентификатор TreeViewItem.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.GetAncestors(System.Int32)">
      <summary>
        <para>Этот метод используется, например, для отображения элементов, которые в данный момент находятся под свернутым элементом.</para>
      </summary>
      <param name="id">Идентификатор TreeViewItem.</param>
      <returns>
        <para>Список всех предков данного элемента с идентификатором id.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.GetCellRectForTreeFoldouts(UnityEngine.Rect)">
      <summary>
        <para>Утилита для настройки нескольких столбцов. Этот метод обрезает входной rowRect по прямоугольнику столбца, определенному columnIndexForTreeFoldouts, чтобы получить прямоугольник ячейки, в котором появляются стрелки складок.</para>
      </summary>
      <param name="rowRect">Rect для строки.</param>
      <returns>
        <para>Прямоугольник ячейки в настройке с несколькими столбцами.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.GetContentIndent(UnityEditor.IMGUI.Controls.TreeViewItem)">
      <summary>
        <para>Возвращает горизонтальное смещение содержимого для элемента. Здесь должно начинаться содержимое (после раскрывающейся стрелки).</para>
      </summary>
      <param name="item">Элемент, используемый для определения отступа.</param>
      <returns>
        <para>Отступ.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.GetCustomRowHeight(System.Int32,UnityEditor.IMGUI.Controls.TreeViewItem)">
      <summary>
        <para>Переопределить для управления высотой отдельных строк.</para>
      </summary>
      <param name="row">Индекс строки.</param>
      <param name="item">Элемент для данной строки.</param>
      <returns>
        <para>Высота строки.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.GetDescendantsThatHaveChildren(System.Int32)">
      <summary>
        <para>Возвращает всех потомков элемента с идентификатором id, у которых есть дочерние элементы.</para>
      </summary>
      <param name="id">Идентификатор TreeViewItem.</param>
      <returns>
        <para>Потомки, у которых есть дети.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.GetExpanded">
      <summary>
        <para>Возвращает список идентификаторов TreeViewItem, которые в настоящее время развернуты в TreeView.</para>
      </summary>
      <returns>
        <para>Идентификаторы TreeViewItem.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.GetFirstAndLastVisibleRows(System.Int32&amp;,System.Int32&amp;)">
      <summary>
        <para>Возвращает первый и последний индексы строк, видимых в представлении прокрутки TreeView.</para>
      </summary>
      <param name="firstRowVisible">Видна первая строка.</param>
      <param name="lastRowVisible">Видна последняя строка.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.GetFoldoutIndent(UnityEditor.IMGUI.Controls.TreeViewItem)">
      <summary>
        <para>Возвращает смещение элемента по горизонтали. Здесь отображается раскрывающаяся стрелка.</para>
      </summary>
      <param name="item">Элемент, используемый для определения отступа.</param>
      <returns>
        <para>Отступ для раскрывающейся стрелки.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.TreeView.GetNewSelectionFunction">
      <summary>
        <para>Обратный вызов, который определяет, как TreeView обрабатывает изменения выбора в ответ на нажатия клавиш и щелчков мыши.</para>
      </summary>
      <param name="clickedItem">Элемент, на который нажали или выбрали с помощью клавиатуры.</param>
      <param name="keepMultiSelection">Следует ли сохранить существующий выбор? Это используется для поддержки перетаскивания или щелчка правой кнопкой мыши одного элемента при множественном выборе.</param>
      <param name="useShiftAsActionKey">Должна ли клавиша действия рассматриваться как клавиша Shift? Если это так, клавиша действия также указывает на выбор диапазона.</param>
      <param name="useActionKeyAsShift">
      </param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.GetRenameRect(UnityEngine.Rect,System.Int32,UnityEditor.IMGUI.Controls.TreeViewItem)">
      <summary>
        <para>Переопределите этот метод, если в RowGUI используется пользовательская обработка графического интерфейса. Этот метод определяет, где появляется наложение переименования.</para>
      </summary>
      <param name="rowRect">Прямоугольник строки для переименовываемого элемента.</param>
      <param name="row">Индекс строки для элемента, который в настоящее время переименовывается.</param>
      <param name="item">TreeViewItem, которые в настоящее время переименовываются.</param>
      <returns>
        <para>Прямоугольник, в котором должно появиться наложение переименования.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.GetRowRect(System.Int32)">
      <summary>
        <para>Получить прямоугольник для строки.</para>
      </summary>
      <param name="row">Индекс строки.</param>
      <returns>
        <para>Строка прямо.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.GetRows">
      <summary>
        <para>Это список элементов TreeViewItem, созданных в BuildRows.</para>
      </summary>
      <returns>
        <para>Строки.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.GetSelection">
      <summary>
        <para>Возвращает список выбранных идентификаторов TreeViewItem.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.HandleDragAndDrop(UnityEditor.IMGUI.Controls.TreeView/DragAndDropArgs)">
      <summary>
        <para>Переопределите эту функцию, чтобы управлять поведением перетаскивания TreeView.</para>
      </summary>
      <param name="args">Перетащите аргументы.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.HasFocus">
      <summary>
        <para>Возвращает true, если TreeView и его EditorWindow имеют фокус клавиатуры.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.HasSelection">
      <summary>
        <para>Возвращает true, если в TreeView есть выбор.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.IsChildListForACollapsedParent(System.Collections.Generic.IList`1&lt;UnityEditor.IMGUI.Controls.TreeViewItem&gt;)">
      <summary>
        <para>Служебный метод для проверки того, идентичен ли дочерний список тому, который возвращается методом CreateChildListForCollapsedParent.</para>
      </summary>
      <param name="childList">Список дочерних элементов TreeViewItem.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.IsExpanded(System.Int32)">
      <summary>
        <para>Возвращает true, если TreeViewItem с идентификатором ID в настоящее время развернут.</para>
      </summary>
      <param name="id">Идентификатор TreeViewItem.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.IsSelected(System.Int32)">
      <summary>
        <para>Возвращает true, если в данный момент выбран TreeViewItem с идентификатором ID.</para>
      </summary>
      <param name="id">Идентификатор TreeViewItem.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.KeyEvent">
      <summary>
        <para>Переопределите этот метод для обработки событий, когда TreeView имеет фокус клавиатуры.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.OnGUI(UnityEngine.Rect)">
      <summary>
        <para>Это основной метод графического интерфейса TreeView, в котором обрабатываются и рисуются элементы TreeViewItem.</para>
      </summary>
      <param name="rect">Rect, где отображается TreeView.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.RefreshCustomRowHeights">
      <summary>
        <para>Обновляет кэш настраиваемых прямоугольников строк на основе высоты, возвращаемой GetCustomRowHeight.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.Reload">
      <summary>
        <para>Вызовите это, чтобы заставить TreeView перезагрузить свои данные. Это, в свою очередь, вызывает вызовы BuildRoot и BuildRows.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.RenameEnded(UnityEditor.IMGUI.Controls.TreeView/RenameEndedArgs)">
      <summary>
        <para>Вызывается, когда переименование завершается пользователем, завершающим процесс переименования, когда наложение переименования теряет фокус или закрывается с помощью EndRename.</para>
      </summary>
      <param name="args">
      </param>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.TreeView.RenameEndedArgs">
      <summary>
        <para>Аргументы метода для виртуального метода RenameEnded.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.RenameEndedArgs.acceptedRename">
      <summary>
        <para>Верно, если переименование принято.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.RenameEndedArgs.itemID">
      <summary>
        <para>Элемент с идентификатором, который переименовывается.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.RenameEndedArgs.newName">
      <summary>
        <para>Имя, введенное в оверлее переименования.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.RenameEndedArgs.originalName">
      <summary>
        <para>Исходное имя при запуске переименования.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.Repaint">
      <summary>
        <para>Запросить перерисовку окна, в котором отображается TreeView.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.RowGUI(UnityEditor.IMGUI.Controls.TreeView/RowGUIArgs)">
      <summary>
        <para>Переопределите этот метод, чтобы добавить пользовательский контент графического интерфейса для строк в TreeView.</para>
      </summary>
      <param name="args">Данные строки.</param>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.TreeView.RowGUIArgs">
      <summary>
        <para>Аргументы метода для виртуального метода RowGUI.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.RowGUIArgs.focused">
      <summary>
        <para>Это значение истинно только тогда, когда TreeView имеет фокус клавиатуры, а окно TreeView имеет фокус.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.RowGUIArgs.isRenaming">
      <summary>
        <para>Это значение истинно, когда элемент ::item в данный момент переименовывается.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.RowGUIArgs.item">
      <summary>
        <para>Элемент для текущей строки, обрабатываемой в TreeView.RowGUI.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.RowGUIArgs.label">
      <summary>
        <para>Метка, используемая для отображения текста элемента displayName. Обратите внимание, что это пустая строка, когда isRenaming == true.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.RowGUIArgs.row">
      <summary>
        <para>Индекс строки в списке текущих строк.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.RowGUIArgs.rowRect">
      <summary>
        <para>Прямоугольник строки для текущей обрабатываемой строки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.RowGUIArgs.selected">
      <summary>
        <para>Это значение истинно, если элемент текущей строки является частью текущего выбора.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.RowGUIArgs.GetCellRect(System.Int32)">
      <summary>
        <para>При использовании MultiColumnHeader для TreeView этот метод можно использовать для получения прямоугольников ячеек строки с использованием видимых столбцов MultiColumnHeader.</para>
      </summary>
      <param name="visibleColumnIndex">Указатель в список видимых столбцов многостолбцового заголовка.</param>
      <returns>
        <para>Прямоугольник ячейки, определяемый пересечением прямоугольника строки и прямоугольника видимого столбца.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.RowGUIArgs.GetColumn(System.Int32)">
      <summary>
        <para>При использовании MultiColumnHeader для TreeView этот метод можно использовать для преобразования индекса из списка видимых столбцов в индекс в фактические столбцы в MultiColumnHeaderState.</para>
      </summary>
      <param name="visibleColumnIndex">Этот индекс является индексом в текущих видимых столбцах.</param>
      <returns>
        <para>Индекс столбца в массиве столбцов в MultiColumnHeaderState.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.RowGUIArgs.GetNumVisibleColumns">
      <summary>
        <para>При использовании MultiColumnHeader для TreeView используйте этот метод, чтобы получить количество видимых столбцов, отображаемых в данный момент в MultiColumnHeader.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.SearchChanged(System.String)">
      <summary>
        <para>Переопределите метод, чтобы получать уведомления об изменениях строки поиска.</para>
      </summary>
      <param name="newSearch">
      </param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.SelectAllRows">
      <summary>
        <para>Выбирает все строки в TreeView.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.SelectionChanged(System.Collections.Generic.IList`1&lt;System.Int32&gt;)">
      <summary>
        <para>Переопределите метод, чтобы получать уведомления об изменениях выбора.</para>
      </summary>
      <param name="selectedIds">Идентификаторы TreeViewItem.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.SelectionClick(UnityEditor.IMGUI.Controls.TreeViewItem,System.Boolean)">
      <summary>
        <para>Используйте этот метод в RowGUI для выполнения логики щелчка мыши.</para>
      </summary>
      <param name="item">Нажат TreeViewItem.</param>
      <param name="keepMultiSelection">Если true, то сохраняется множественный выбор при нажатии на элемент, который уже является частью выбора. Если false, то выбор очищается перед выбором элемента, по которому щелкнули. Для щелчков левой кнопкой это обычно ложно. Для контекстных кликов это обычно верно, поэтому контекстная операция может работать с множественным выбором.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.SetExpanded(System.Int32,System.Boolean)">
      <summary>
        <para>Установить один TreeViewItem для развертывания или свертывания.</para>
      </summary>
      <param name="id">Идентификатор TreeViewItem.</param>
      <param name="expanded">True расширяет элемент. False сворачивает элемент.</param>
      <returns>
        <para>Истина, если элемент изменил развернутое состояние, и ложь, если элемент уже имел развернутое состояние.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.SetExpanded(System.Collections.Generic.IList`1&lt;System.Int32&gt;)">
      <summary>
        <para>Установите текущие расширенные элементы TreeViewItems для TreeView. Это перезапишет предыдущее развернутое состояние.</para>
      </summary>
      <param name="ids">Список идентификаторов элементов, которые следует расширить.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.SetExpandedRecursive(System.Int32,System.Boolean)">
      <summary>
        <para>Разверните или сверните все элементы под элементом с идентификатором.</para>
      </summary>
      <param name="id">Идентификатор TreeViewItem.</param>
      <param name="expanded">Расширенное состояние: true расширяет, false сворачивает.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.SetFocus">
      <summary>
        <para>Вызов этой функции изменяет фокус клавиатуры на TreeView.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.SetFocusAndEnsureSelectedItem">
      <summary>
        <para>Вызов этой функции изменяет фокус клавиатуры на TreeView и обеспечивает выбор элемента. Используйте эту функцию, чтобы включить навигацию по дереву с помощью клавиш.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.SetSelection(System.Collections.Generic.IList`1&lt;System.Int32&gt;)">
      <summary>
        <para>Установите выбранные элементы TreeView.</para>
      </summary>
      <param name="selectedIDs">Идентификаторы TreeViewItem.</param>
      <param name="options">Варианты дополнительной логики, выполняемой после выбора. См. раздел TreeViewSelectionOptions.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.SetSelection(System.Collections.Generic.IList`1&lt;System.Int32&gt;,UnityEditor.IMGUI.Controls.TreeViewSelectionOptions)">
      <summary>
        <para>Установите выбранные элементы TreeView.</para>
      </summary>
      <param name="selectedIDs">Идентификаторы TreeViewItem.</param>
      <param name="options">Варианты дополнительной логики, выполняемой после выбора. См. раздел TreeViewSelectionOptions.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.SetupDepthsFromParentsAndChildren(UnityEditor.IMGUI.Controls.TreeViewItem)">
      <summary>
        <para>Служебный метод, использующий глубину входного элемента TreeViewItem для установки правильной глубины для всех его потомков TreeViewItems.</para>
      </summary>
      <param name="root">TreeViewItem, из которого потомки должны обновлять свою глубину.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.SetupDragAndDrop(UnityEditor.IMGUI.Controls.TreeView/SetupDragAndDropArgs)">
      <summary>
        <para>Эта функция вызывается, когда CanStartDrag возвращает значение true.</para>
      </summary>
      <param name="args">
      </param>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.TreeView.SetupDragAndDropArgs">
      <summary>
        <para>Аргументы метода для виртуального метода SetupDragAndDrop.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.SetupDragAndDropArgs.draggedItemIDs">
      <summary>
        <para>Идентификаторы TreeViewItem перетаскиваются.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.SetupParentsAndChildrenFromDepths(UnityEditor.IMGUI.Controls.TreeViewItem,System.Collections.Generic.IList`1&lt;UnityEditor.IMGUI.Controls.TreeViewItem&gt;)">
      <summary>
        <para>Служебный метод для инициализации всех родительских и дочерних свойств строк с использованием установленных значений порядка и глубины.</para>
      </summary>
      <param name="root">Скрытый корневой элемент.</param>
      <param name="rows">TreeViewItems, для которых задано только свойство depth.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.SingleClickedItem(System.Int32)">
      <summary>
        <para>Переопределите этот метод для обработки событий одиночного щелчка по элементу.</para>
      </summary>
      <param name="id">Идентификатор элемента TreeViewItem, по которому был выполнен одиночный щелчок.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.SortItemIDsInRowOrder(System.Collections.Generic.IList`1&lt;System.Int32&gt;)">
      <summary>
        <para>Возвращает список, отсортированный в том порядке, в котором они отображаются в TreeView.</para>
      </summary>
      <param name="ids">Идентификаторы TreeViewItem.</param>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.TreeViewItem">
      <summary>
        <para>TreeViewItem используется для построения древовидного представления древовидной структуры данных.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeViewItem.children">
      <summary>
        <para>Список дочерних элементов этого TreeViewItem.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeViewItem.depth">
      <summary>
        <para>Глубина относится к тому, сколько предков имеет этот элемент, и соответствует количеству горизонтальных «отступов», которые имеет этот элемент.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeViewItem.displayName">
      <summary>
        <para>Имя, отображаемое для этого элемента при отображении.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeViewItem.hasChildren">
      <summary>
        <para>Возвращает true, если у дочерних элементов есть какие-либо элементы.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeViewItem.icon">
      <summary>
        <para>Если установлено, этот значок будет отображаться слева от displayName. Значок по умолчанию отображается размером 16x16 точек.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeViewItem.id">
      <summary>
        <para>Уникальный идентификатор элемента.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeViewItem.parent">
      <summary>
        <para>Родитель этого TreeViewItem. Если он равен null, он считается корнем дерева TreeViewItem.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeViewItem.AddChild(UnityEditor.IMGUI.Controls.TreeViewItem)">
      <summary>
        <para>Вспомогательный метод, который добавляет дочерний элемент TreeViewItem в список дочерних элементов и устанавливает родительское свойство для дочернего элемента.</para>
      </summary>
      <param name="child">TreeViewItem для добавления в список дочерних элементов.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeViewItem.#ctor(System.Int32)">
      <summary>
        <para>Конструктор TreeViewItem.</para>
      </summary>
      <param name="id">Уникальный идентификатор для идентификации этого TreeViewItem среди всех TreeViewItems TreeView. См. также id.</param>
      <param name="depth">Глубина этого TreeViewItem. См. также глубину.</param>
      <param name="displayName">Визуализированное имя этого TreeViewItem. См. также displayName.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeViewItem.#ctor(System.Int32,System.Int32)">
      <summary>
        <para>Конструктор TreeViewItem.</para>
      </summary>
      <param name="id">Уникальный идентификатор для идентификации этого TreeViewItem среди всех TreeViewItems TreeView. См. также id.</param>
      <param name="depth">Глубина этого TreeViewItem. См. также глубину.</param>
      <param name="displayName">Визуализированное имя этого TreeViewItem. См. также displayName.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeViewItem.#ctor(System.Int32,System.Int32,System.String)">
      <summary>
        <para>Конструктор TreeViewItem.</para>
      </summary>
      <param name="id">Уникальный идентификатор для идентификации этого TreeViewItem среди всех TreeViewItems TreeView. См. также id.</param>
      <param name="depth">Глубина этого TreeViewItem. См. также глубину.</param>
      <param name="displayName">Визуализированное имя этого TreeViewItem. См. также displayName.</param>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.TreeViewSelectionOptions">
      <summary>
        <para>Перечисление, используемое методом TreeView.SetSelection.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeViewSelectionOptions.FireSelectionChanged">
      <summary>
        <para>Если этот флаг передан в TreeView.SetSelection, то TreeView вызовет свой метод TreeView.SelectionChanged.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeViewSelectionOptions.None">
      <summary>
        <para>Если этот флаг передается в TreeView.SetSelection, никакая дополнительная логика не выполняется после выбора настройки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeViewSelectionOptions.RevealAndFrame">
      <summary>
        <para>Если этот флаг передается в TreeView.SetSelection, то TreeView будет следить за тем, чтобы последний элемент в списке выбора ввода отображался на экране.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.TreeViewState">
      <summary>
        <para>TreeViewState содержит сериализуемую информацию о состоянии для TreeView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeViewState.expandedIDs">
      <summary>
        <para>Это список развернутых в настоящее время идентификаторов TreeViewItem.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeViewState.lastClickedID">
      <summary>
        <para>Идентификатор для TreeViewItem, который в настоящее время используется для множественного выбора и навигации с помощью клавиш.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeViewState.scrollPos">
      <summary>
        <para>Текущие значения прокрутки представления прокрутки TreeView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeViewState.searchString">
      <summary>
        <para>Состояние строки поиска, которое можно использовать в TreeView для фильтрации данных дерева при создании TreeViewItems.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeViewState.selectedIDs">
      <summary>
        <para>Выбранные идентификаторы TreeViewItem. Использование API SetSelection и IsSelected позволит получить доступ к этому состоянию.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ImportAssetOptions">
      <summary>
        <para>Параметры импорта активов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ImportAssetOptions.Default">
      <summary>
        <para>Параметры импорта по умолчанию.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ImportAssetOptions.DontDownloadFromCacheServer">
      <summary>
        <para>Принудительно выполните полный повторный импорт, но не загружайте ресурсы с кэш-сервера.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ImportAssetOptions.ForceSynchronousImport">
      <summary>
        <para>Синхронно импортировать все активы.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ImportAssetOptions.ForceUncompressedImport">
      <summary>
        <para>Принудительно импортирует ресурсы как несжатые для выпусков.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ImportAssetOptions.ForceUpdate">
      <summary>
        <para>Инициированный пользователем импорт активов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ImportAssetOptions.ImportRecursive">
      <summary>
        <para>При импорте папки также импортируйте все ее содержимое.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.InitializeOnEnterPlayModeAttribute">
      <summary>
        <para>Разрешить инициализацию метода класса редактора, когда Unity входит в режим воспроизведения.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.InitializeOnLoadAttribute">
      <summary>
        <para>Позволяет инициализировать класс Editor при загрузке Unity и при перекомпиляции скриптов.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.InitializeOnLoadMethodAttribute">
      <summary>
        <para>Разрешить инициализацию метода класса редактора, когда Unity загружается без действий пользователя.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.InteractionMode">
      <summary>
        <para>Режим взаимодействия, пользовательский или автоматизированный, с которым вызывается метод API.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.InteractionMode.AutomatedAction">
      <summary>
        <para>Используйте этот параметр, чтобы запретить методу показывать какие-либо диалоговые окна пользователю и предотвратить его запись в историю отмен.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.InteractionMode.UserAction">
      <summary>
        <para>Используйте этот параметр, чтобы разрешить методу показывать пользователю диалоговые окна и разрешить запись в историю отмен.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.iOSAppInBackgroundBehavior">
      <summary>
        <para>Поведение приложения при входе в фоновый режим.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSAppInBackgroundBehavior.Custom">
      <summary>
        <para>Пользовательское фоновое поведение, см. iOSBackgroundMode для конкретных фоновых режимов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSAppInBackgroundBehavior.Exit">
      <summary>
        <para>Приложение должно завершаться при входе в фоновый режим.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSAppInBackgroundBehavior.Suspend">
      <summary>
        <para>Приложение должно приостанавливать выполнение при переходе в фоновый режим.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.iOSBackgroundMode">
      <summary>
        <para>Фоновые режимы, поддерживаемые приложением, соответствуют настройкам проекта в Xcode.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSBackgroundMode.Audio">
      <summary>
        <para>Аудио, AirPlay и картинка в картинке.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSBackgroundMode.BluetoothCentral">
      <summary>
        <para>Используются аксессуары Bluetooth LE.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSBackgroundMode.BluetoothPeripheral">
      <summary>
        <para>Действует как аксессуар Bluetooth LE.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSBackgroundMode.ExternalAccessory">
      <summary>
        <para>Связь с внешним аксессуаром.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSBackgroundMode.Fetch">
      <summary>
        <para>Фоновая загрузка.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSBackgroundMode.Location">
      <summary>
        <para>Обновления местоположения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSBackgroundMode.NewsstandContent">
      <summary>
        <para>Загрузка газетного киоска.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSBackgroundMode.None">
      <summary>
        <para>Фоновые режимы не поддерживаются.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSBackgroundMode.RemoteNotification">
      <summary>
        <para>Удаленные уведомления.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSBackgroundMode.VOIP">
      <summary>
        <para>Голос по IP.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.iOSBuildType">
      <summary>
        <para>Создайте конфигурации для сгенерированного проекта Xcode.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSBuildType.Debug">
      <summary>
        <para>Конфигурация сборки настроена на отладку для сгенерированного проекта Xcode.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSBuildType.Release">
      <summary>
        <para>Для конфигурации сборки задано значение Release для сгенерированного проекта Xcode с включенной оптимизацией.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.iOSDeviceRequirement">
      <summary>
        <para>Описание требований к устройству, используемое для настройки App Slicing.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.iOSDeviceRequirement.values">
      <summary>
        <para>Значения описания требований к устройству.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.iOSDeviceRequirement.#ctor">
      <summary>
        <para>Создает описание требований к новому устройству.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.iOSLaunchScreenImageType">
      <summary>
        <para>Настройки экрана запуска iOS.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSLaunchScreenImageType.iPadImage">
      <summary>
        <para>Запустите изображение экрана на iPad.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSLaunchScreenImageType.iPhoneLandscapeImage">
      <summary>
        <para>Горизонтально ориентированное изображение стартового экрана на iPhone.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSLaunchScreenImageType.iPhonePortraitImage">
      <summary>
        <para>Изображение стартового экрана в портретной ориентации на iPhone.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.iOSLaunchScreenType">
      <summary>
        <para>Настройки экрана запуска iOS.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSLaunchScreenType.CustomStoryboard">
      <summary>
        <para>Используйте указанный пользовательский файл раскадровки (.storyboard) в настройках проигрывателя.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSLaunchScreenType.CustomXib">
      <summary>
        <para>Используйте указанный пользовательский файл Interface Builder (.xib) в настройках проигрывателя.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSLaunchScreenType.Default">
      <summary>
        <para>Используйте экран запуска по умолчанию (темно-синий фон).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSLaunchScreenType.ImageAndBackgroundConstant">
      <summary>
        <para>Используйте пользовательское изображение экрана запуска, указанное в настройках проигрывателя iOS или с помощью PlayerSettings.iOS.SetLaunchScreenImage, и используйте его исходные размеры.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSLaunchScreenType.ImageAndBackgroundRelative">
      <summary>
        <para>Используйте пользовательское изображение экрана запуска, указанное в настройках проигрывателя iOS или с помощью PlayerSettings.iOS.SetLaunchScreenImage, которое будет масштабироваться по всему экрану.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSLaunchScreenType.None">
      <summary>
        <para>Создайте проект Xcode без каких-либо настраиваемых экранов запуска.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.iOSSdkVersion">
      <summary>
        <para>Поддерживаемые версии iOS SDK.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSSdkVersion.DeviceSDK">
      <summary>
        <para>SDK устройства.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSSdkVersion.SimulatorSDK">
      <summary>
        <para>SDK симулятора.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.iOSShowActivityIndicatorOnLoading">
      <summary>
        <para>Индикатор активности при загрузке.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSShowActivityIndicatorOnLoading.DontShow">
      <summary>
        <para>Не показывать.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSShowActivityIndicatorOnLoading.Gray">
      <summary>
        <para>Серый.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSShowActivityIndicatorOnLoading.White">
      <summary>
        <para>Белый.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSShowActivityIndicatorOnLoading.WhiteLarge">
      <summary>
        <para>Белый Большой.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.iOSStatusBarStyle">
      <summary>
        <para>Стиль строки состояния iOS.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSStatusBarStyle.Default">
      <summary>
        <para>По умолчанию.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSStatusBarStyle.LightContent">
      <summary>
        <para>Светлая строка состояния, предназначенная для использования на темном фоне.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.iOSTargetDevice">
      <summary>
        <para>Целевое устройство iOS.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSTargetDevice.iPadOnly">
      <summary>
        <para>Только для iPad.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSTargetDevice.iPhoneAndiPad">
      <summary>
        <para>Универсальный: iPhone/iPod + iPad.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSTargetDevice.iPhoneOnly">
      <summary>
        <para>Только iPhone/iPod.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.iOSTargetOSVersion">
      <summary>
        <para>Поддерживаемые версии развертывания iOS.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSTargetOSVersion.iOS_4_0">
      <summary>
        <para>iOS 4.0.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSTargetOSVersion.iOS_4_1">
      <summary>
        <para>iOS 4.1.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSTargetOSVersion.iOS_4_2">
      <summary>
        <para>iOS 4.2.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSTargetOSVersion.iOS_4_3">
      <summary>
        <para>iOS 4.3.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSTargetOSVersion.iOS_5_0">
      <summary>
        <para>iOS 5.0.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSTargetOSVersion.iOS_5_1">
      <summary>
        <para>iOS 5.1.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSTargetOSVersion.iOS_6_0">
      <summary>
        <para>iOS 6.0.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSTargetOSVersion.iOS_7_0">
      <summary>
        <para>iOS 7.0.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSTargetOSVersion.iOS_7_1">
      <summary>
        <para>iOS 7.1.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSTargetOSVersion.iOS_8_0">
      <summary>
        <para>iOS 8.0.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSTargetOSVersion.iOS_8_1">
      <summary>
        <para>iOS 8.1.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSTargetOSVersion.Unknown">
      <summary>
        <para>Неизвестная версия iOS, управляемая пользователем.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.ITerrainLayerCustomUI">
      <summary>
        <para>Предоставляет интерфейс для отображения пользовательского интерфейса TerrainLayer в инспекторе слоев Terrain.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ITerrainLayerCustomUI.OnTerrainLayerGUI(UnityEngine.TerrainLayer,UnityEngine.Terrain)">
      <summary>
        <para>Рисует пользовательский графический интерфейс для слоя ландшафта.</para>
      </summary>
      <param name="terrainLayer">Объект TerrainLayer.</param>
      <param name="terrain">Объект Terrain, на котором выбран объект TerrainLayer, заданный параметром terrainLayer.</param>
      <returns>
        <para>Верните false, чтобы Unity отрисовывал инспектор TerrainLayer по умолчанию. В противном случае нарисуйте собственный графический интерфейс и верните true.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.L10n">
      <summary>
        <para>Класс для локализации текста.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.L10n.Tr(System.String)">
      <summary>
        <para>Эта функция ссылается на файл po, такой как ja.po, как на актив. Требуется Asmdef и [сборка: UnityEditor.Localization].</para>
      </summary>
      <param name="str">Исходный текст, в основном английский.</param>
      <returns>
        <para>Локализованный текст.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.LightEditor">
      <summary>
        <para>Класс, используемый для рендеринга редактора освещения при выборе источника света в редакторе Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.settings">
      <summary>
        <para>Помощник по настройкам, который можно использовать для рендеринга пользовательского LightEditor.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.OnDestroy">
      <summary>
        <para>См. ScriptableObject.OnDestroy.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.OnEnable">
      <summary>
        <para>См. ScriptableObject.OnEnable.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.OnInspectorGUI">
      <summary>
        <para>См. Editor.OnInspectorGUI.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.OnSceneGUI">
      <summary>
        <para>См. Editor.OnSceneGUI.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.LightEditor.Settings">
      <summary>
        <para>Содержит все доступные для рисования элементы LightEditor.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.areaSizeX">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемого объекта Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.areaSizeY">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемого объекта Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.bakedShadowAngleProp">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемого объекта Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.bakedShadowRadiusProp">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемого объекта Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.bounceIntensity">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемого объекта Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.color">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемого объекта Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.colorTemperature">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемого объекта Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.cookie">
      <summary>
        <para>Текстура лёгкого печенья, используемая источником света.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.cookieProp">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемого объекта Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.cookieSize">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемого объекта Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.cullingMask">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемого объекта Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.flare">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемого объекта Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.halo">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемого объекта Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.innerSpotAngle">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемого объекта Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.intensity">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемого объекта Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.isAreaLightType">
      <summary>
        <para>Является ли текущий источник света областью или нет. Зональные источники света включают прямоугольные и дисковые источники света.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.isBakedOrMixed">
      <summary>
        <para>Является ли текущий свет запеченным или смешанным.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.isCompletelyBaked">
      <summary>
        <para>Свет полностью запечен.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.isMixed">
      <summary>
        <para>Текущий свет смешанный.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.isRealtime">
      <summary>
        <para>Свет работает в режиме реального времени?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.light">
      <summary>
        <para>Осматриваемый свет.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.lightmapping">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемого объекта Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.lightShape">
      <summary>
        <para>Это свойство описывает форму светового пятна. Только Scriptable Render Pipelines используют это свойство; встроенный рендерер не поддерживает его.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.lightType">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемого объекта Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.range">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемого объекта Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.renderingLayerMask">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемого объекта Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.renderMode">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемого объекта Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.shadowsBias">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемого объекта Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.shadowsNearPlane">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемого объекта Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.shadowsNormalBias">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемого объекта Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.shadowsResolution">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемого объекта Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.shadowsStrength">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемого объекта Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.shadowsType">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемого объекта Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.spotAngle">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемого объекта Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.useColorTemperature">
      <summary>
        <para>Открытое свойство SerializedProperty для проверяемого объекта Light.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.ApplyModifiedProperties">
      <summary>
        <para>См. SerializedObject.ApplyModifiedProperties.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawArea">
      <summary>
        <para>Рисует виджет области LightEditor по умолчанию.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawBakedShadowAngle">
      <summary>
        <para>Рисует запеченный виджет угла тени LightEditor по умолчанию.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawBakedShadowRadius">
      <summary>
        <para>Рисует виджет радиуса запеченной тени LightEditor по умолчанию.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawBounceIntensity">
      <summary>
        <para>Рисует виджет интенсивности отскока LightEditor по умолчанию.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawColor">
      <summary>
        <para>Рисует цветной виджет LightEditor по умолчанию.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawCookie">
      <summary>
        <para>Рисует виджет cookie LightEditor по умолчанию.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawCookieSize">
      <summary>
        <para>Отрисовывает виджет размера файла cookie LightEditor по умолчанию.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawCullingMask">
      <summary>
        <para>Рисует виджет маски отбраковки LightEditor по умолчанию.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawFlare">
      <summary>
        <para>Рисует виджет бликов LightEditor по умолчанию.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawHalo">
      <summary>
        <para>Рисует виджет ореола LightEditor по умолчанию.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawInnerAndOuterSpotAngle">
      <summary>
        <para>Рисует стандартные виджеты внутреннего и внешнего угла пятна LightEditor.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawIntensity">
      <summary>
        <para>Рисует виджет интенсивности LightEditor по умолчанию.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawLightmapping">
      <summary>
        <para>Отрисовывает виджет карты освещения LightEditor по умолчанию.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawLightType">
      <summary>
        <para>Рисует виджет типа освещения LightEditor по умолчанию.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawRange(System.Boolean)">
      <summary>
        <para>Рисует виджет диапазона LightEditor по умолчанию.</para>
      </summary>
      <param name="showAreaOptions">
      </param>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawRenderingLayerMask">
      <summary>
        <para>Рисует виджет LightEditor по умолчанию для рендеринга LayerMask.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawRenderMode">
      <summary>
        <para>Рисует виджет режима рендеринга LightEditor по умолчанию.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawRuntimeShadow">
      <summary>
        <para>Отрисовывает виджет теней среды выполнения LightEditor по умолчанию.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawShadowsType">
      <summary>
        <para>Рисует виджет типа теней LightEditor по умолчанию.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawSpotAngle">
      <summary>
        <para>Отрисовывает виджет угла точки LightEditor по умолчанию.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.OnDestroy">
      <summary>
        <para>Очистить состояние внутренних настроек.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.OnEnable">
      <summary>
        <para>Заполните параметры из указанного SerializedObject.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.Update">
      <summary>
        <para>См. SerializedObject.Update.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.LightingDataAsset">
      <summary>
        <para>Актив данных освещения, используемый активной сценой.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.LightingExplorerExtensionAttribute">
      <summary>
        <para>Атрибут для обозначения класса расширения для Lighting Explorer. Поддерживает одно расширение на каждый конвейер рендеринга.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightingExplorerExtensionAttribute.#ctor(System.Type)">
      <summary>
        <para>Конструктор.</para>
      </summary>
      <param name="renderPipeline">Тип, который наследуется от RenderPipelineAsset, используемого для фильтрации класса.</param>
    </member>
    <member name="T:UnityEditor.LightingExplorerTab">
      <summary>
        <para>Создайте собственные вкладки для обозревателя освещения.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightingExplorerTab.#ctor(System.String,System.Func`1&lt;UnityEngine.Object[]&gt;,System.Func`1&lt;UnityEditor.LightingExplorerTableColumn[]&gt;)">
      <summary>
        <para>Конструктор.</para>
      </summary>
      <param name="title">Название вкладки.</param>
      <param name="objects">Объекты, которые должна содержать вкладка.</param>
      <param name="columns">Как столбцы должны выглядеть и вести себя.</param>
      <param name="showFilterGUI">
      </param>
    </member>
    <member name="T:UnityEditor.LightingExplorerTableColumn">
      <summary>
        <para>Это используется при определении того, как столбец должен выглядеть и вести себя в обозревателе освещения.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.LightingExplorerTableColumn.ComparePropertiesDelegate">
      <summary>
        <para>Делегат для сравнения свойств для сортировки.</para>
      </summary>
      <param name="lhs">
      </param>
      <param name="rhs">
      </param>
    </member>
    <member name="T:UnityEditor.LightingExplorerTableColumn.CopyPropertiesDelegate">
      <summary>
        <para>Делегат для копирования свойств.</para>
      </summary>
      <param name="target">
      </param>
      <param name="source">
      </param>
    </member>
    <member name="M:UnityEditor.LightingExplorerTableColumn.#ctor(UnityEditor.LightingExplorerTableColumn/DataType,UnityEngine.GUIContent,System.String,System.Int32,UnityEditor.LightingExplorerTableColumn/OnGUIDelegate,UnityEditor.LightingExplorerTableColumn/ComparePropertiesDelegate,UnityEditor.LightingExplorerTableColumn/CopyPropertiesDelegate,System.Int32[])">
      <summary>
        <para>Конструктор.</para>
      </summary>
      <param name="type">В зависимости от того, какой тип LightingExplorer.DataType мы используем, будут использоваться встроенные методы сравнения и отрисовки. Если вы хотите полностью перегрузить это, используйте LightingExplorer.DataType.Custom.</param>
      <param name="headerContent">Заголовок для заголовка столбца.</param>
      <param name="propertyName">Имя свойства объекта, который вы хотите использовать. Если вы используете LightingExplorer.DataType.Name, выберите «null».</param>
      <param name="width">Ширина колонны. Минимальная ширина равна этому значению, деленному на 2. Значение по умолчанию — 100.</param>
      <param name="onGUIDelegate">Если вы хотите нарисовать свойство иначе, чем по умолчанию, предоставьте этот делегат. Если вы используете LightingExprlorer.DataType.Custom, вы должны переопределить это.</param>
      <param name="compareDelegate">Если вы хотите отсортировать свойства иначе, чем по умолчанию, предоставьте этот делегат. Если вы используете LightingExplorer.DataType.Custom, вы должны переопределить это.</param>
      <param name="copyDelegate">Если вы хотите копировать свойства иначе, чем по умолчанию, предоставьте этот делегат. </param>
      <param name="dependencyIndices">Если вы зависите от другого свойства Serialized, отличного от свойства в вашем столбце, используйте это поле, чтобы указать, какие индексы следует включать. Первый столбец имеет индекс 0.</param>
    </member>
    <member name="T:UnityEditor.LightingExplorerTableColumn.DataType">
      <summary>
        <para>Тип данных, определяющий поведение по умолчанию для рисования и сравнения элементов в столбцах.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightingExplorerTableColumn.DataType.Checkbox">
      <summary>
        <para>Рисует флажок и обрабатывает сравнение для сортировки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightingExplorerTableColumn.DataType.Color">
      <summary>
        <para>Рисует цветовую рамку и обрабатывает сравнение для сортировки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightingExplorerTableColumn.DataType.Custom">
      <summary>
        <para>Нет рисунка или сравнения для сортировки. Используйте делегаты в конструкторе, чтобы переопределить их.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightingExplorerTableColumn.DataType.Enum">
      <summary>
        <para>Рисует поле перечисления и обрабатывает сравнение для сортировки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightingExplorerTableColumn.DataType.Float">
      <summary>
        <para>Рисует поле с плавающей запятой и обрабатывает сравнение для сортировки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightingExplorerTableColumn.DataType.Int">
      <summary>
        <para>Рисует поле int и обрабатывает сравнение для сортировки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightingExplorerTableColumn.DataType.Name">
      <summary>
        <para>Рисует поле имени и обрабатывает сравнение для сортировки. Также реализует поле поиска для фильтрации строк.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.LightingExplorerTableColumn.OnGUIDelegate">
      <summary>
        <para>Делегат для рисования свойства.</para>
      </summary>
      <param name="r">Текущий прямоугольник, где он будет отображаться в TableView.</param>
      <param name="prop">Свойство, указанное с помощью 'propertyName' в конструкторе.</param>
      <param name="dependencies">Массив свойств, указанный с помощью 'dependencyIndicies' в конструкторе.</param>
    </member>
    <member name="T:UnityEditor.LightingWindowEnvironmentSection">
      <summary>
        <para>Базовый класс для инспектора, который переопределяет раздел «Окружающая среда» окна «Освещение».</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightingWindowEnvironmentSection.OnDisable">
      <summary>
        <para>OnDisable вызывается, когда это переопределение Инспектора больше не используется.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightingWindowEnvironmentSection.OnEnable">
      <summary>
        <para>OnEnable вызывается при использовании этого переопределения Inspector.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightingWindowEnvironmentSection.OnInspectorGUI">
      <summary>
        <para>Обратный вызов, который вызывается при рисовании раздела «Среда» в окне «Освещение».</para>
      </summary>
    </member>
    <member name="T:UnityEditor.LightmapBakeQuality">
      <summary>
        <para>Настройка качества запекания для LightmapEditorSettings.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapBakeQuality.High">
      <summary>
        <para>Высококачественная запекание для окончательного рендеринга.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapBakeQuality.Low">
      <summary>
        <para>Запекание низкого качества для предварительного просмотра.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.LightmapEditorSettings">
      <summary>
        <para>Сейчас этот класс устарел. Используйте настройки освещения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.aoExponentDirect">
      <summary>
        <para>Сейчас это свойство устарело. Используйте LightingSettings.aoExponentDirect.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.aoExponentIndirect">
      <summary>
        <para>Сейчас это свойство устарело. Используйте LightingSettings.aoExponentIndirect.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.aoMaxDistance">
      <summary>
        <para>Сейчас это свойство устарело. Используйте LightingSettings.aoMaxDistance.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.bakeResolution">
      <summary>
        <para>Сейчас это свойство устарело. Используйте LightingSettings.lightmapResolution.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.bounces">
      <summary>
        <para>Сейчас это свойство устарело. Используйте LightingSettings.bounces.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.denoiserTypeAO">
      <summary>
        <para>Сейчас это свойство устарело. Используйте LightingSettings.denoiserTypeAO.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.denoiserTypeDirect">
      <summary>
        <para>Сейчас это свойство устарело. Используйте LightingSettings.denoiserTypeDirect.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.denoiserTypeIndirect">
      <summary>
        <para>Сейчас это свойство устарело. Используйте LightingSettings.denoiserTypeIndirect.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.directSampleCount">
      <summary>
        <para>Сейчас это свойство устарело. Используйте LightingSettings.directSampleCount.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.enableAmbientOcclusion">
      <summary>
        <para>Сейчас это свойство устарело. Используйте LightingSettings.ao.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.environmentSampleCount">
      <summary>
        <para>Сейчас это свойство устарело. Используйте LightingSettings.environmentSampleCount.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.exportTrainingData">
      <summary>
        <para>Сейчас это свойство устарело. Используйте LightingSettings.exportTrainingData.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.filteringAtrousPositionSigmaAO">
      <summary>
        <para>Сейчас это свойство устарело. Используйте LightingSettings.filteringAtrousPositionSigmaAO.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.filteringAtrousPositionSigmaDirect">
      <summary>
        <para>Сейчас это свойство устарело. Используйте LightingSettings.filteringAtrousPositionSigmaDirect.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.filteringAtrousPositionSigmaIndirect">
      <summary>
        <para>Сейчас это свойство устарело. Используйте LightingSettings.filteringAtrousPositionSigmaIndirect.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.filteringGaussRadiusAO">
      <summary>
        <para>Сейчас это свойство устарело. Используйте LightingSettings.filteringGaussRadiusAO.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.filteringGaussRadiusDirect">
      <summary>
        <para>Сейчас это свойство устарело. Используйте LightingSettings.filteringGaussRadiusDirect.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.filteringGaussRadiusIndirect">
      <summary>
        <para>Сейчас это свойство устарело. Используйте LightingSettings.filteringGaussRadiusIndirect.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.filteringMode">
      <summary>
        <para>Сейчас это свойство устарело. Используйте LightingSettings.filteringMode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.filterTypeAO">
      <summary>
        <para>Сейчас это свойство устарело. Используйте LightingSettings.filterTypeAO.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.filterTypeDirect">
      <summary>
        <para>Сейчас это свойство устарело. Используйте LightingSettings.filterTypeDirect.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.filterTypeIndirect">
      <summary>
        <para>Сейчас это свойство устарело. Используйте LightingSettings.filterTypeIndirect.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.indirectSampleCount">
      <summary>
        <para>Сейчас это свойство устарело. Используйте LightingSettings.indirectSampleCount.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.lightmapper">
      <summary>
        <para>Сейчас это свойство устарело. Используйте LightingSettings.lightmapper.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.lightmapsMode">
      <summary>
        <para>Сейчас это свойство устарело. Используйте LightingSettings.directionalityMode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.maxAtlasHeight">
      <summary>
        <para>Сейчас это свойство устарело. Вместо этого используйте maxAtlasSize.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.maxAtlasSize">
      <summary>
        <para>Сейчас это свойство устарело. Используйте LightingSettings.lightmapMaxSize.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.maxAtlasWidth">
      <summary>
        <para>Сейчас это свойство устарело. Вместо этого используйте maxAtlasSize.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.mixedBakeMode">
      <summary>
        <para>Сейчас это свойство устарело. Используйте LightingSettings.mixedBakeMode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.padding">
      <summary>
        <para>Сейчас это свойство устарело. Используйте LightingSettings.lightmapPadding.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.prioritizeView">
      <summary>
        <para>Сейчас это свойство устарело. Используйте LightingSettings.prioritizeView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.realtimeResolution">
      <summary>
        <para>Сейчас это свойство устарело. Используйте LightingSettings.indirectResolution.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.reflectionCubemapCompression">
      <summary>
        <para>Определяет, как Unity будет сжимать запеченную кубическую карту отражения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.sampling">
      <summary>
        <para>Сейчас это свойство устарело. Используйте LightingSettings.sampling.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.textureCompression">
      <summary>
        <para>Сейчас это свойство устарело. Используйте LightingSettings.compressLightmaps.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.trainingDataDestination">
      <summary>
        <para>Сейчас это свойство устарело. Используйте LightingSettings.trainingDataDestination.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.LightmapEditorSettings.DenoiserType">
      <summary>
        <para>Это перечисление устарело. Используйте LightingSettings.DenoiserType.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapEditorSettings.DenoiserType.None">
      <summary>
        <para>Сейчас этот тип устарел. Используйте LightingSettings.DenoiserType.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapEditorSettings.DenoiserType.OpenImage">
      <summary>
        <para>Сейчас этот тип устарел. Используйте LightingSettings.DenoiserType.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapEditorSettings.DenoiserType.Optix">
      <summary>
        <para>Сейчас этот тип устарел. Используйте LightingSettings.DenoiserType.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapEditorSettings.DenoiserType.RadeonPro">
      <summary>
        <para>Сейчас этот тип устарел. Используйте LightingSettings.DenoiserType.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.LightmapEditorSettings.FilterMode">
      <summary>
        <para>Это перечисление устарело. Используйте LightingSettings.FilterMode.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapEditorSettings.FilterMode.Advanced">
      <summary>
        <para>Сейчас этот тип устарел. Используйте LightingSettings.FilterMode.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapEditorSettings.FilterMode.Auto">
      <summary>
        <para>Сейчас этот тип устарел. Используйте LightingSettings.FilterMode.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapEditorSettings.FilterMode.None">
      <summary>
        <para>Сейчас этот тип устарел. Используйте LightingSettings.FilterMode.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.LightmapEditorSettings.FilterType">
      <summary>
        <para>Это перечисление устарело. Используйте LightingSettings.FilterType.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapEditorSettings.FilterType.ATrous">
      <summary>
        <para>Сейчас этот тип устарел. Используйте LightingSettings.FilterType.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapEditorSettings.FilterType.Gaussian">
      <summary>
        <para>Сейчас этот тип устарел. Используйте LightingSettings.FilterType.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapEditorSettings.FilterType.None">
      <summary>
        <para>Сейчас этот тип устарел. Используйте LightingSettings.FilterType.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.LightmapEditorSettings.Lightmapper">
      <summary>
        <para>Это перечисление устарело. Используйте LightingSettings.Lightmapper.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapEditorSettings.Lightmapper.Enlighten">
      <summary>
        <para>Сейчас этот тип устарел. Используйте LightingSettings.Lightmapper.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapEditorSettings.Lightmapper.ProgressiveCPU">
      <summary>
        <para>Сейчас этот тип устарел. Используйте LightingSettings.Lightmapper.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapEditorSettings.Lightmapper.ProgressiveGPU">
      <summary>
        <para>Сейчас этот тип устарел. Используйте LightingSettings.Lightmapper.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.LightmapEditorSettings.Sampling">
      <summary>
        <para>Это перечисление устарело. Используйте LightingSettings.Sampling.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapEditorSettings.Sampling.Auto">
      <summary>
        <para>Сейчас этот тип устарел. Используйте LightingSettings.Sampling.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapEditorSettings.Sampling.Fixed">
      <summary>
        <para>Сейчас этот тип устарел. Используйте LightingSettings.Sampling.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.LightmapParameters">
      <summary>
        <para>Настраивает способ запекания освещения в Unity и может быть назначен экземпляру или активу LightingSettings.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.antiAliasingSamples">
      <summary>
        <para>Максимальное количество раз для суперсэмплирования текселя для уменьшения алиасинга.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.backFaceTolerance">
      <summary>
        <para>Процент лучей, выпущенных из источника луча, которые должны попасть на передние грани, чтобы считаться пригодными для использования.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.bakedLightmapTag">
      <summary>
        <para>BakedLightmapTag — это целое число, влияющее на назначение запеченных карт освещения. Объекты с разными значениями запеченногоLightmapTag гарантированно не будут назначены одной и той же карте освещения, даже если другие параметры запекания одинаковы.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.blurRadius">
      <summary>
        <para>Радиус (в текселях) фильтра постобработки, размывающего запеченное прямое освещение.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.clusterResolution">
      <summary>
        <para>Управляет разрешением, с которым Enlighten Realtime Global Illumination сохраняет и может передавать входной свет.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.directLightQuality">
      <summary>
        <para>Количество лучей, используемых для источников света с площадью. Обеспечивает точное мягкое затенение.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.irradianceBudget">
      <summary>
        <para>Объем данных, используемых для текселей Enlighten Realtime Global Illumination. Указывает, насколько подробный вид сцены имеет тексель. Небольшие значения означают более усредненное освещение.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.irradianceQuality">
      <summary>
        <para>Количество лучей, которые нужно отбросить для расчета форм-факторов освещенности.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.isTransparent">
      <summary>
        <para>Если этот параметр включен, объект кажется прозрачным во время расчетов освещения GlobalIllumination.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.limitLightmapCount">
      <summary>
        <para>Если этот параметр включен, объекты с одинаковыми параметрами карты освещения будут упакованы в карты освещения LightmapParameters.maxLightmapCount.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.maxLightmapCount">
      <summary>
        <para>Максимальное количество карт освещения, созданных для объектов с одинаковыми параметрами карты освещения. Это свойство игнорируется, если LightmapParameters.limitLightmapCount имеет значение false.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.modellingTolerance">
      <summary>
        <para>Максимальный размер промежутков, который можно игнорировать для GI (множитель на размер пикселя).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.pushoff">
      <summary>
        <para>Расстояние смещения начала луча от геометрии при выполнении трассировки лучей в единицах моделирования. Unity применяет смещение ко всему запеченному освещению: прямое освещение, непрямое освещение, освещение окружающей среды и окружающее затенение.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.resolution">
      <summary>
        <para>Разрешение текселей на метр, используемое для карт освещения в реальном времени. Это значение умножается на LightingSettings.indirectResolution.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.stitchEdges">
      <summary>
        <para>Должны ли пары ребер сшиваться вместе.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.systemTag">
      <summary>
        <para>Системный тег — это целочисленный идентификатор. Это позволяет принудительно перевести объект в другую систему глобального освещения Enlighten Realtime Global Illumination, даже если все остальные параметры одинаковы.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.AOAntiAliasingSamples">
      <summary>
        <para>Максимальное количество раз для суперсэмплирования текселя для уменьшения алиасинга в AO.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.AOQuality">
      <summary>
        <para>Количество лучей, отбрасываемых для вычисления окружающего затенения.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightmapParameters.AssignToLightingSettings(UnityEngine.LightingSettings)">
      <summary>
        <para>Назначает себя экземпляру или активу LightingSettings.</para>
      </summary>
      <param name="lightingSettings">
      </param>
    </member>
    <member name="M:UnityEditor.LightmapParameters.GetLightmapParametersForLightingSettings(UnityEngine.LightingSettings)">
      <summary>
        <para>Возвращает назначенные LightmapParameters для указанных LightingSettings.</para>
      </summary>
      <param name="lightingSettings">
      </param>
    </member>
    <member name="M:UnityEditor.LightmapParameters.SetLightmapParametersForLightingSettings(UnityEditor.LightmapParameters,UnityEngine.LightingSettings)">
      <summary>
        <para>Задает LightmapParameters для указанных LightingSettings.</para>
      </summary>
      <param name="parameters">
      </param>
      <param name="lightingSettings">
      </param>
    </member>
    <member name="T:UnityEditor.Lightmapping">
      <summary>
        <para>Позволяет управлять заданием карты освещения.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Lightmapping.bakeCompleted(System.Action)">
      <summary>
        <para>Событие, которое вызывается, когда задание на выпечку завершено. Вызывается, только если LightingSettings.autoGenerate имеет значение false.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="P:UnityEditor.Lightmapping.bakedGI">
      <summary>
        <para>Сейчас это свойство устарело. Используйте LightingSettings.bakedGI.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Lightmapping.bakeStarted(System.Action)">
      <summary>
        <para>Событие, вызываемое при запуске выпечки. Вызывается, только если LightingSettings.autoGenerate имеет значение false.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="P:UnityEditor.Lightmapping.bounceBoost">
      <summary>
        <para>Сейчас это свойство устарело. Используйте LightingSettings.albedoBoost.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Lightmapping.buildProgress">
      <summary>
        <para>Возвращает текущий ход сборки карты освещения или 0, если Lightmapping.isRunning имеет значение false.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Lightmapping.completed">
      <summary>
        <para>Делегат, который вызывается после завершения задания на выпечку.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Lightmapping.giWorkflowMode">
      <summary>
        <para>Сейчас это свойство устарело. Используйте LightingSettings.autoGenerate.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Lightmapping.indirectOutputScale">
      <summary>
        <para>Сейчас это свойство устарело. Используйте LightingSettings.indirectScale.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Lightmapping.isRunning">
      <summary>
        <para>Возвращает true, когда выполняется задание выпечки, в противном случае — false (только для чтения).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Lightmapping.lightingDataAsset">
      <summary>
        <para>Актив данных освещения, используемый активной сценой.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Lightmapping.lightingDataAssetCleared(System.Action)">
      <summary>
        <para>Событие, вызываемое при удалении ресурса LightingData из проекта.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="?:UnityEditor.Lightmapping.lightingDataCleared(System.Action)">
      <summary>
        <para>Событие, вызываемое при удалении запеченных данных Global Illumination из сцены и из средств визуализации.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="?:UnityEditor.Lightmapping.lightingDataUpdated(System.Action)">
      <summary>
        <para>Событие, которое вызывается при обновлении любых данных освещения в рамках процесса поддержки GI.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="P:UnityEditor.Lightmapping.lightingSettings">
      <summary>
        <para>LightingSettings, которые будут использоваться для текущей сцены. Вызовет исключение, если оно равно null.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Lightmapping.lightingSettingsDefaults">
      <summary>
        <para>Параметры освещения по умолчанию, которые Unity использует для сцен, где параметры освещения не назначены. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Lightmapping.realtimeGI">
      <summary>
        <para>Сейчас это свойство устарело. Используйте LightingSettings.realtimeGI.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Lightmapping.started(UnityEditor.Lightmapping/OnStartedFunction)">
      <summary>
        <para>Делегат, который вызывается при запуске задания выпечки.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="M:UnityEditor.Lightmapping.Bake">
      <summary>
        <para>Запускает синхронное задание выпечки.</para>
      </summary>
      <returns>
        <para>Возвращает true, если запекание прошло успешно. Возвращает false и выводит предупреждающее сообщение, если запустить запекание невозможно.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Lightmapping.BakeAsync">
      <summary>
        <para>Запускает асинхронное задание выпечки.</para>
      </summary>
      <returns>
        <para>Возвращает true, если запекание было успешно запущено. Возвращает false и выводит предупреждающее сообщение, если запустить запекание невозможно.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Lightmapping.BakeLightProbesOnly">
      <summary>
        <para>Запускает синхронное задание запекания, но запекает только световые датчики.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Lightmapping.BakeLightProbesOnlyAsync">
      <summary>
        <para>Запускает асинхронное задание запекания, но запекает только световые зонды.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Lightmapping.BakeMultipleScenes(System.String[])">
      <summary>
        <para>Запекает массив сцен.</para>
      </summary>
      <param name="paths">Путь сцен, которые необходимо запечь.</param>
    </member>
    <member name="M:UnityEditor.Lightmapping.BakeReflectionProbe(UnityEngine.ReflectionProbe,System.String)">
      <summary>
        <para>Запускает синхронное задание запекания для зонда.</para>
      </summary>
      <param name="probe">Целевой зонд.</param>
      <param name="path">Место, где будет сохранена кубическая карта.</param>
      <returns>
        <para>Возвращает true, если запекание прошло успешно.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Lightmapping.BakeSelected">
      <summary>
        <para>Запускает синхронное задание выпечки для выбранных объектов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Lightmapping.BakeSelectedAsync">
      <summary>
        <para>Запускает асинхронное задание выпечки для выбранных объектов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Lightmapping.Cancel">
      <summary>
        <para>Отменяет текущее задание асинхронной выпечки.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Lightmapping.Clear">
      <summary>
        <para>Удаляет все данные времени выполнения для загруженных в данный момент сцен.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Lightmapping.ClearDiskCache">
      <summary>
        <para>Очищает кеш, используемый картами освещения, датчиками отражения и отражением по умолчанию.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Lightmapping.ClearLightingDataAsset">
      <summary>
        <para>Для загруженных в данный момент сцен этот метод удаляет актив данных освещения и все связанные карты освещения и активы зонда отражения.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Lightmapping.ForceStop">
      <summary>
        <para>Заставьте Progressive Path Tracer остановить запекание и использовать вычисленные результаты как есть.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Lightmapping.GetLightingSettingsForScene(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Получает объект LightingSettings объекта SceneManagement.Scene.</para>
      </summary>
      <param name="scene">Объект SceneManagement.Scene.</param>
      <returns>
        <para>Объект LightingSettings, если Scene.isLoaded имеет значение true. В противном случае возвращает значение null.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Lightmapping.GetTerrainGIChunks(UnityEngine.Terrain,System.Int32&amp;,System.Int32&amp;)">
      <summary>
        <para>Узнайте, на сколько частей разделен ландшафт для запекания GI.</para>
      </summary>
      <param name="terrain">Местность.</param>
      <param name="numChunksX">Количество чанков по ширине ландшафта.</param>
      <param name="numChunksY">Количество чанков в длине ландшафта.</param>
    </member>
    <member name="T:UnityEditor.Lightmapping.GIWorkflowMode">
      <summary>
        <para>Режим рабочего процесса для запекания карты освещения. По умолчанию используется Итеративный.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Lightmapping.GIWorkflowMode.Iterative">
      <summary>
        <para>Сейчас это свойство устарело. Используйте LightingSettings.autoGenerate.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Lightmapping.GIWorkflowMode.Legacy">
      <summary>
        <para>Устарела поддержка карты освещения 4.x.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Lightmapping.GIWorkflowMode.OnDemand">
      <summary>
        <para>Сейчас это свойство устарело. Используйте LightingSettings.autoGenerate.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Lightmapping.OnCompletedFunction">
      <summary>
        <para>Делегат, используемый обратным вызовом Lightmapping.completed.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Lightmapping.OnStartedFunction">
      <summary>
        <para>Делегат, используемый обратным вызовом Lightmapping.started.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Lightmapping.SetLightingSettingsForScene(UnityEngine.SceneManagement.Scene,UnityEngine.LightingSettings)">
      <summary>
        <para>Применяет параметры, указанные в объекте LightingSettings, к объекту SceneManagement.Scene.</para>
      </summary>
      <param name="scene">Объект SceneManagement.Scene. Если свойство Scene.isLoaded имеет значение false, метод не применяет параметры.</param>
      <param name="lightingSettings">Объект LightingSettings.</param>
    </member>
    <member name="M:UnityEditor.Lightmapping.SetLightingSettingsForScenes(UnityEngine.SceneManagement.Scene[],UnityEngine.LightingSettings)">
      <summary>
        <para>Применяет параметры, указанные в объекте LightingSettings, к массиву объектов SceneManagement.Scene.</para>
      </summary>
      <param name="scenes">Массив объектов SceneManagement.Scene. Если свойство Scene.isLoaded объекта Scene имеет значение false, метод не применяет параметры к этому объекту.</param>
      <param name="lightingSettings">Объект LightingSettings.</param>
    </member>
    <member name="M:UnityEditor.Lightmapping.Tetrahedralize(UnityEngine.Vector3[],System.Int32[]&amp;,UnityEngine.Vector3[]&amp;)">
      <summary>
        <para>Вычисляет тетраэдры по позициям с помощью тетраэдрализации Делоне.</para>
      </summary>
      <param name="positions">Массив позиций Light Probe.</param>
      <param name="outIndices">Массив, который Unity заполняет обновленными индексами Light Probe.</param>
      <param name="outPositions">Массив, который Unity заполняет обновленными позициями Light Probe.</param>
    </member>
    <member name="M:UnityEditor.Lightmapping.TryGetLightingSettings(UnityEngine.LightingSettings&amp;)">
      <summary>
        <para>Получает настройки освещения для текущей сцены. Возвращает false, если оно равно null.</para>
      </summary>
      <param name="settings">См. Lightmapping.lightingSettings.</param>
      <returns>
        <para>Возвращает true, если объект есть, и false, если его нет.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Localization.Editor.LocalizationGroup">
      <summary>
        <para>Пока экземпляр жив, система локализации использует словарь для локализации.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Localization.Editor.LocalizationGroup.locGroupName">
      <summary>
        <para>Аксессор текущего имени группы.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Localization.Editor.LocalizationGroup.#ctor">
      <summary>
        <para>Установить текущую группу локализации.</para>
      </summary>
      <param name="behaviour">Используйте сборку, которой принадлежит поведение.</param>
      <param name="type">Используйте сборку, к которой принадлежит тип.</param>
      <param name="obj">Используйте сборку, которой принадлежит объект.</param>
    </member>
    <member name="M:UnityEditor.Localization.Editor.LocalizationGroup.#ctor(UnityEngine.Behaviour)">
      <summary>
        <para>Установить текущую группу локализации.</para>
      </summary>
      <param name="behaviour">Используйте сборку, которой принадлежит поведение.</param>
      <param name="type">Используйте сборку, к которой принадлежит тип.</param>
      <param name="obj">Используйте сборку, которой принадлежит объект.</param>
    </member>
    <member name="M:UnityEditor.Localization.Editor.LocalizationGroup.#ctor(System.Type)">
      <summary>
        <para>Установить текущую группу локализации.</para>
      </summary>
      <param name="behaviour">Используйте сборку, которой принадлежит поведение.</param>
      <param name="type">Используйте сборку, к которой принадлежит тип.</param>
      <param name="obj">Используйте сборку, которой принадлежит объект.</param>
    </member>
    <member name="M:UnityEditor.Localization.Editor.LocalizationGroup.#ctor(System.Object)">
      <summary>
        <para>Установить текущую группу локализации.</para>
      </summary>
      <param name="behaviour">Используйте сборку, которой принадлежит поведение.</param>
      <param name="type">Используйте сборку, к которой принадлежит тип.</param>
      <param name="obj">Используйте сборку, которой принадлежит объект.</param>
    </member>
    <member name="M:UnityEditor.Localization.Editor.LocalizationGroup.Dispose">
      <summary>
        <para>Поскольку LocalizationGroup является IDisposable, Dispose можно вызывать явно.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.LocalizationAttribute">
      <summary>
        <para>Атрибут сборки для локализации.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LocalizationAttribute.#ctor(System.String)">
      <summary>
        <para>Конструктор по умолчанию.</para>
      </summary>
      <param name="locGroupName">
      </param>
    </member>
    <member name="T:UnityEditor.LocalizationGroup">
      <summary>
        <para>Это обеспечивает автоматическую систему локализации. Это можно вызвать рекурсивно.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LocalizationGroup.locGroupName">
      <summary>
        <para>Текущее имя группы для локализации.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LocalizationGroup.#ctor">
      <summary>
        <para>Конструктор по умолчанию.</para>
      </summary>
      <param name="behaviour">
      </param>
      <param name="type">
      </param>
      <param name="obj">
      </param>
    </member>
    <member name="M:UnityEditor.LocalizationGroup.#ctor(UnityEngine.Behaviour)">
      <summary>
        <para>Конструктор по умолчанию.</para>
      </summary>
      <param name="behaviour">
      </param>
      <param name="type">
      </param>
      <param name="obj">
      </param>
    </member>
    <member name="M:UnityEditor.LocalizationGroup.#ctor(System.Type)">
      <summary>
        <para>Конструктор по умолчанию.</para>
      </summary>
      <param name="behaviour">
      </param>
      <param name="type">
      </param>
      <param name="obj">
      </param>
    </member>
    <member name="M:UnityEditor.LocalizationGroup.#ctor(System.Object)">
      <summary>
        <para>Конструктор по умолчанию.</para>
      </summary>
      <param name="behaviour">
      </param>
      <param name="type">
      </param>
      <param name="obj">
      </param>
    </member>
    <member name="M:UnityEditor.LocalizationGroup.Dispose">
      <summary>
        <para>Утилизировать текущее состояние.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.LODUtility">
      <summary>
        <para>Помощники LOD Utility.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LODUtility.CalculateLODGroupBoundingBox(UnityEngine.LODGroup)">
      <summary>
        <para>Пересчитать ограничивающий регион для данной LODGroup.</para>
      </summary>
      <param name="group">
      </param>
    </member>
    <member name="T:UnityEditor.MacFullscreenMode">
      <summary>
        <para>Полноэкранный режим Mac.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MacFullscreenMode.FullscreenWindow">
      <summary>
        <para>Полноэкранное окно.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MacFullscreenMode.FullscreenWindowWithDockAndMenuBar">
      <summary>
        <para>Полноэкранное окно с панелью Dock и меню.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ManagedReferenceMissingType">
      <summary>
        <para>Представляет объект управляемой ссылки с отсутствующим типом.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ManagedReferenceMissingType.assemblyName">
      <summary>
        <para>Имя сборки, в которой Unity ожидает найти класс. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ManagedReferenceMissingType.className">
      <summary>
        <para>Имя класса, необходимого для создания экземпляра управляемой ссылки. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ManagedReferenceMissingType.namespaceName">
      <summary>
        <para>Пространство имен, в котором Unity ожидает найти класс. Пространства имен являются необязательными, поэтому они могут содержать пустую строку. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ManagedReferenceMissingType.referenceId">
      <summary>
        <para>Идентификатор управляемой ссылки. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ManagedReferenceMissingType.serializedData">
      <summary>
        <para>Строка, обобщающая содержимое сериализованных данных отсутствующего объекта. (Только чтение)</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ManagedStrippingLevel">
      <summary>
        <para>Определяет, насколько агрессивно Unity удаляет неиспользуемый управляемый (C#) код.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ManagedStrippingLevel.Disabled">
      <summary>
        <para>Не удаляйте код.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ManagedStrippingLevel.High">
      <summary>
        <para>UnityLinker будет удалять как можно больше. Это еще больше уменьшит размер кода по сравнению с тем, чего может достичь Medium. Однако это дополнительное снижение может сопровождаться компромиссами. Возможные побочные эффекты могут включать отладку управляемого кода некоторых методов, которые могут больше не работать. Возможно, вам придется поддерживать пользовательский файл link.xml, и некоторые пути кода отражения могут вести себя иначе.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ManagedStrippingLevel.Low">
      <summary>
        <para>Удалите недостижимый управляемый код, чтобы уменьшить размер сборки и время сборки Mono/IL2CPP.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ManagedStrippingLevel.Medium">
      <summary>
        <para>Запустите UnityLinker в менее консервативном режиме, чем Low. Это еще больше уменьшит размер кода по сравнению с тем, чего может достичь Low. Однако это дополнительное снижение может сопровождаться компромиссами. Возможные побочные эффекты могут включать в себя необходимость поддерживать пользовательский файл link.xml, а некоторые пути кода отражения могут вести себя иначе.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ManagedStrippingLevel.Minimal">
      <summary>
        <para>Библиотеки классов, UnityEngine и сборки среды выполнения Windows будут удалены. Все остальные сборки копируются.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MaterialEditor">
      <summary>
        <para>Редактор материалов Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MaterialEditor.customShaderGUI">
      <summary>
        <para>Возвращает пользовательский интерфейс ShaderGUI, реализованный шейдером.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MaterialEditor.isVisible">
      <summary>
        <para>Текущий материал развернут.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MaterialEditor.kMiniTextureFieldLabelIndentLevel">
      <summary>
        <para>Полезно для отступов свойств шейдера, которым нужен тот же отступ, что и для поля мини-текстуры.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialEditor.ApplyMaterialPropertyDrawers(UnityEngine.Material)">
      <summary>
        <para>Применить исходные значения MaterialPropertyDrawer.</para>
      </summary>
      <param name="material">
      </param>
      <param name="targets">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.ApplyMaterialPropertyDrawers(UnityEngine.Object[])">
      <summary>
        <para>Применить исходные значения MaterialPropertyDrawer.</para>
      </summary>
      <param name="material">
      </param>
      <param name="targets">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.Awake">
      <summary>
        <para>Вызывается при пробуждении редактора.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialEditor.BeginAnimatedCheck(UnityEngine.Rect,UnityEditor.MaterialProperty)">
      <summary>
        <para>Создает оболочку Property, удобную для того, чтобы обычные элементы управления GUI работали с MaterialProperty.</para>
      </summary>
      <param name="totalPosition">Прямоугольник на экране для использования в качестве элемента управления, включая метку, если применимо.</param>
      <param name="prop">Свойство MaterialProperty, используемое для элемента управления.</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.BeginAnimatedCheck(UnityEditor.MaterialProperty)">
      <summary>
        <para>Создает оболочку Property, удобную для того, чтобы обычные элементы управления GUI работали с MaterialProperty.</para>
      </summary>
      <param name="totalPosition">Прямоугольник на экране для использования в качестве элемента управления, включая метку, если применимо.</param>
      <param name="prop">Свойство MaterialProperty, используемое для элемента управления.</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.ColorProperty(UnityEngine.Rect,UnityEditor.MaterialProperty,System.String)">
      <summary>
        <para>Нарисуйте поле свойства для свойства цветового шейдера.</para>
      </summary>
      <param name="label">Ярлык свойства.</param>
      <param name="position">
      </param>
      <param name="prop">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.ColorProperty(UnityEditor.MaterialProperty,System.String)">
      <summary>
        <para>Нарисуйте поле свойства для свойства цветового шейдера.</para>
      </summary>
      <param name="label">Ярлык свойства.</param>
      <param name="position">
      </param>
      <param name="prop">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.DefaultPreviewGUI(UnityEngine.Rect,UnityEngine.GUIStyle)">
      <summary>
        <para>Обработка области предварительного просмотра материалов по умолчанию.</para>
      </summary>
      <param name="r">
      </param>
      <param name="background">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.DefaultPreviewSettingsGUI">
      <summary>
        <para>Панель инструментов по умолчанию для области предварительного просмотра материала.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialEditor.DefaultShaderProperty(UnityEditor.MaterialProperty,System.String)">
      <summary>
        <para>Обрабатывает пользовательский интерфейс для одного свойства шейдера, игнорируя любые настраиваемые ящики.</para>
      </summary>
      <param name="prop">
      </param>
      <param name="label">
      </param>
      <param name="position">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.DefaultShaderProperty(UnityEngine.Rect,UnityEditor.MaterialProperty,System.String)">
      <summary>
        <para>Обрабатывает пользовательский интерфейс для одного свойства шейдера, игнорируя любые настраиваемые ящики.</para>
      </summary>
      <param name="prop">
      </param>
      <param name="label">
      </param>
      <param name="position">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.DoubleSidedGIField">
      <summary>
        <para>Отображение пользовательского интерфейса для редактирования параметра двустороннего глобального освещения материала.
Возвращает true, если пользовательский интерфейс действительно отображается, т. е. материал поддерживает параметр «Двустороннее глобальное освещение».
+ См. также: Material.doubleSidedGI.</para>
      </summary>
      <returns>
        <para>Истина, если пользовательский интерфейс отображается, и ложь в противном случае.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.EmissionEnabledProperty">
      <summary>
        <para>Эта функция отрисовывает пользовательский интерфейс для управления включением эмиссии материала.</para>
      </summary>
      <returns>
        <para>Возвращает true, если включено, или false, если отключено или смешано из-за множественного редактирования.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.EnableInstancingField">
      <summary>
        <para>Отобразить пользовательский интерфейс для редактирования параметра очереди рендеринга материала.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialEditor.EnableInstancingField(UnityEngine.Rect)">
      <summary>
        <para>Отобразить пользовательский интерфейс для редактирования параметра очереди рендеринга материала в указанном прямоугольнике.</para>
      </summary>
      <param name="r">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.EndAnimatedCheck">
      <summary>
        <para>Завершает оболочку свойства, начатую с помощью BeginAnimatedCheck.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialEditor.FixupEmissiveFlag(UnityEngine.Color,UnityEngine.MaterialGlobalIlluminationFlags)">
      <summary>
        <para>Возвращает правильно установленный глобальный флаг освещения на основе переданного флага и заданного цвета.</para>
      </summary>
      <param name="col">Цвет излучения.</param>
      <param name="flags">Текущий флаг глобального освещения.</param>
      <returns>
        <para>Фиксированный флаг.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.FixupEmissiveFlag(UnityEngine.Material)">
      <summary>
        <para>Правильно устанавливает флаг globalIllumination для данного Материала в зависимости от текущего состояния флага и свойства излучения материала.</para>
      </summary>
      <param name="mat">Материал для фиксации.</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.FloatProperty(UnityEditor.MaterialProperty,System.String)">
      <summary>
        <para>Нарисуйте поле свойства для свойства плавающего шейдера.</para>
      </summary>
      <param name="label">Ярлык свойства.</param>
      <param name="prop">
      </param>
      <param name="position">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.FloatProperty(UnityEngine.Rect,UnityEditor.MaterialProperty,System.String)">
      <summary>
        <para>Нарисуйте поле свойства для свойства плавающего шейдера.</para>
      </summary>
      <param name="label">Ярлык свойства.</param>
      <param name="prop">
      </param>
      <param name="position">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.GetDefaultPropertyHeight(UnityEditor.MaterialProperty)">
      <summary>
        <para>Рассчитайте высоту, необходимую для свойства, игнорируя пользовательские ящики.</para>
      </summary>
      <param name="prop">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.GetFlexibleRectBetweenFieldAndRightEdge(UnityEngine.Rect)">
      <summary>
        <para>Утилита для разметки графического интерфейса ShaderGUI. Используется, например, для прямоугольника после выровненного по левому краю поля Color.</para>
      </summary>
      <param name="r">Поле Rec.</param>
      <returns>
        <para>Вложенный прямоугольник ввода Rect.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.GetFlexibleRectBetweenLabelAndField(UnityEngine.Rect)">
      <summary>
        <para>Служебный метод для разметки графического интерфейса ShaderGUI.</para>
      </summary>
      <param name="r">Поле Rec.</param>
      <returns>
        <para>Вложенный прямоугольник ввода Rect.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.GetLeftAlignedFieldRect(UnityEngine.Rect)">
      <summary>
        <para>Служебный метод для разметки графического интерфейса ShaderGUI.</para>
      </summary>
      <param name="r">Поле Rec.</param>
      <returns>
        <para>Вложенный прямоугольник ввода Rect.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.GetMaterialProperties(UnityEngine.Object[])">
      <summary>
        <para>Получите информацию о свойствах шейдера материалов, которые вы передаете.</para>
      </summary>
      <param name="mats">Выбранные материалы.</param>
      <returns>
        <para>Возвращает свойства материала.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.GetMaterialProperty(UnityEngine.Object[],System.String)">
      <summary>
        <para>Получить информацию об одном свойстве шейдера.</para>
      </summary>
      <param name="mats">Выбранные материалы.</param>
      <param name="name">Имя свойства.</param>
      <param name="propertyIndex">Индекс свойства.</param>
      <returns>
        <para>Возвращает свойство по указанному индексу.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.GetMaterialProperty(UnityEngine.Object[],System.Int32)">
      <summary>
        <para>Получить информацию об одном свойстве шейдера.</para>
      </summary>
      <param name="mats">Выбранные материалы.</param>
      <param name="name">Имя свойства.</param>
      <param name="propertyIndex">Индекс свойства.</param>
      <returns>
        <para>Возвращает свойство по указанному индексу.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.GetMaterialPropertyNames(UnityEngine.Object[])">
      <summary>
        <para>Получает имена свойств шейдера материалов, которые вы передаете.</para>
      </summary>
      <param name="mats">Выбранные материалы.</param>
      <returns>
        <para>Возвращает имена свойств материала.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.GetPropertyHeight(UnityEditor.MaterialProperty)">
      <summary>
        <para>Вычислите высоту, необходимую для свойства.</para>
      </summary>
      <param name="prop">
      </param>
      <param name="label">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.GetPropertyHeight(UnityEditor.MaterialProperty,System.String)">
      <summary>
        <para>Вычислите высоту, необходимую для свойства.</para>
      </summary>
      <param name="prop">
      </param>
      <param name="label">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.GetRectAfterLabelWidth(UnityEngine.Rect)">
      <summary>
        <para>Утилита для разметки графического интерфейса ShaderGUI. Это прямоугольник после метки, который можно использовать для нескольких свойств. Входной прямоугольник можно получить, вызвав: EditorGUILayout.GetControlRect.</para>
      </summary>
      <param name="r">Линия Прямой</param>
      <returns>
        <para>Вложенный прямоугольник ввода Rect.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.GetRightAlignedFieldRect(UnityEngine.Rect)">
      <summary>
        <para>Служебный метод для разметки графического интерфейса ShaderGUI.</para>
      </summary>
      <param name="r">Поле Rec.</param>
      <returns>
        <para>Вложенный прямоугольник ввода Rect.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.GetTextureOffset(System.String,System.Boolean&amp;,System.Boolean&amp;)">
      <summary>
        <para>Получить значение заданного смещения текстуры для заданного свойства текстуры.</para>
      </summary>
      <param name="propertyName">Имя свойства текстуры, смещение которого вы хотите проверить.</param>
      <param name="hasMixedValueX">Имеет ли смещение x несколько значений?</param>
      <param name="hasMixedValueY">Имеет ли смещение y несколько значений?</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.GetTexturePropertyCustomArea(UnityEngine.Rect)">
      <summary>
        <para>Возвращает свободный прямоугольник под меткой и перед большим полем объекта большого пальца. Используется, например, для свойств мозаики и смещения.</para>
      </summary>
      <param name="position">Общий прямоугольник свойства текстуры.</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.GetTextureScale(System.String,System.Boolean&amp;,System.Boolean&amp;)">
      <summary>
        <para>Получить значение заданного масштаба текстуры для заданного свойства текстуры.</para>
      </summary>
      <param name="propertyName">Имя свойства текстуры, масштаб которого вы хотите проверить.</param>
      <param name="hasMixedValueX">Имеет ли шкала x несколько значений?</param>
      <param name="hasMixedValueY">Имеет ли шкала Y несколько значений?</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.HasPreviewGUI">
      <summary>
        <para>Можно ли предварительно просмотреть этот компонент в его текущем состоянии?</para>
      </summary>
      <returns>
        <para>Истинно, если этот компонент можно предварительно просмотреть в его текущем состоянии.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.HelpBoxWithButton(UnityEngine.GUIContent,UnityEngine.GUIContent)">
      <summary>
        <para>Сделайте окно справки с сообщением и кнопкой. Возвращает true, если кнопка была нажата.</para>
      </summary>
      <param name="messageContent">Текст сообщения.</param>
      <param name="buttonContent">Текст кнопки.</param>
      <returns>
        <para>Возвращает true, если кнопка была нажата.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.IntegerProperty(UnityEditor.MaterialProperty,System.String)">
      <summary>
        <para>Нарисуйте поле свойства для целочисленного свойства шейдера.</para>
      </summary>
      <param name="label">Ярлык свойства.</param>
      <param name="prop">
      </param>
      <param name="position">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.IntegerProperty(UnityEngine.Rect,UnityEditor.MaterialProperty,System.String)">
      <summary>
        <para>Нарисуйте поле свойства для целочисленного свойства шейдера.</para>
      </summary>
      <param name="label">Ярлык свойства.</param>
      <param name="prop">
      </param>
      <param name="position">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.IsInstancingEnabled">
      <summary>
        <para>Определяет, установлен ли флажок Enable Instancing.</para>
      </summary>
      <returns>
        <para>Возвращает true, если установлен флажок Enable Instancing.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.LightmapEmissionFlagsProperty(System.Int32,System.Boolean)">
      <summary>
        <para>Рисует пользовательский интерфейс для установки флага глобального освещения материала.</para>
      </summary>
      <param name="indent">Уровень отступа для свойства.</param>
      <param name="enabled">Истинно, если для материала включена эмиссия, в противном случае — ложь.</param>
      <param name="ignoreEmissionColor">Истинно, если свойство всегда должно отображаться.</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.LightmapEmissionFlagsProperty(System.Int32,System.Boolean,System.Boolean)">
      <summary>
        <para>Рисует пользовательский интерфейс для установки флага глобального освещения материала.</para>
      </summary>
      <param name="indent">Уровень отступа для свойства.</param>
      <param name="enabled">Истинно, если для материала включена эмиссия, в противном случае — ложь.</param>
      <param name="ignoreEmissionColor">Истинно, если свойство всегда должно отображаться.</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.LightmapEmissionProperty">
      <summary>
        <para>Эта функция отрисовывает пользовательский интерфейс для свойства излучения карты освещения. (Нет, в реальном времени, запеченный)

См. также: флаги MaterialLightmapFlags.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialEditor.LightmapEmissionProperty">
      <summary>
        <para>Эта функция отрисовывает пользовательский интерфейс для свойства излучения карты освещения. (Нет, в реальном времени, запеченный)

См. также: флаги MaterialLightmapFlags.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialEditor.LightmapEmissionProperty">
      <summary>
        <para>Эта функция отрисовывает пользовательский интерфейс для свойства излучения карты освещения. (Нет, в реальном времени, запеченный)

См. также: флаги MaterialLightmapFlags.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialEditor.OnDisable">
      <summary>
        <para>Вызывается, когда редактор отключен. Если переопределено, вызовите базовую функцию OnDisable(), чтобы убедиться, что инспектор материалов настроен правильно.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialEditor.OnEnable">
      <summary>
        <para>Вызывается при включенном редакторе. Если он переопределен, вызовите базовую функцию OnEnable(), чтобы убедиться, что инспектор материалов настроен правильно.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialEditor.OnInspectorGUI">
      <summary>
        <para>Реализуйте специальный код GUI MaterialEditor здесь. Если вы хотите просто расширить существующий редактор, вызовите базовый OnInspectorGUI() перед выполнением любого пользовательского кода графического интерфейса.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialEditor.OnPreviewGUI(UnityEngine.Rect,UnityEngine.GUIStyle)">
      <summary>
        <para>Пользовательский предварительный просмотр для компонента изображения.</para>
      </summary>
      <param name="r">Прямоугольник, в котором будет отображаться предварительный просмотр.</param>
      <param name="background">Фоновое изображение.</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.OnShaderChanged">
      <summary>
        <para>Обратный вызов, который вызывается при изменении шейдера материала в инспекторе.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialEditor.PropertiesChanged">
      <summary>
        <para>Всякий раз, когда свойство материала изменяется, вызывайте эту функцию. Это перестроит инспектор и проверит свойства.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialEditor.PropertiesDefaultGUI(UnityEditor.MaterialProperty[])">
      <summary>
        <para>Отображение свойств шейдера по умолчанию.</para>
      </summary>
      <param name="props">Массив свойств материала.</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.PropertiesGUI">
      <summary>
        <para>Визуализировать стандартные свойства материала. Этот метод либо отображает свойства с использованием экземпляра ShaderGUI, если он найден, либо использует PropertiesDefaultGUI.</para>
      </summary>
      <returns>
        <para>Возвращает true, если какое-либо значение было изменено.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.RangeProperty(UnityEditor.MaterialProperty,System.String)">
      <summary>
        <para>Нарисуйте ползунок диапазона для свойства шейдера диапазона.</para>
      </summary>
      <param name="label">Ярлык свойства.</param>
      <param name="prop">Редактируемое свойство.</param>
      <param name="position">Положение и размер ползунка диапазона.</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.RangeProperty(UnityEngine.Rect,UnityEditor.MaterialProperty,System.String)">
      <summary>
        <para>Нарисуйте ползунок диапазона для свойства шейдера диапазона.</para>
      </summary>
      <param name="label">Ярлык свойства.</param>
      <param name="prop">Редактируемое свойство.</param>
      <param name="position">Положение и размер ползунка диапазона.</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.RegisterPropertyChangeUndo(System.String)">
      <summary>
        <para>Вызывайте это при изменении свойства материала. Это добавит отмену для действия.</para>
      </summary>
      <param name="label">Отменить метку.</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.RenderQueueField">
      <summary>
        <para>Отобразить пользовательский интерфейс для редактирования параметра очереди рендеринга материала.</para>
      </summary>
      <param name="r">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.RenderQueueField(UnityEngine.Rect)">
      <summary>
        <para>Отобразить пользовательский интерфейс для редактирования параметра очереди рендеринга материала.</para>
      </summary>
      <param name="r">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.RequiresConstantRepaint">
      <summary>
        <para>Нужно ли постоянно перерисовывать это редактирование в его текущем состоянии?</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialEditor.SetDefaultGUIWidths">
      <summary>
        <para>Задайте EditorGUIUtility.fieldWidth и labelWidth значения по умолчанию, которые использует PropertiesGUI.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialEditor.SetShader(UnityEngine.Shader)">
      <summary>
        <para>Установите шейдер материала.</para>
      </summary>
      <param name="shader">Шейдер для установки.</param>
      <param name="registerUndo">Должна быть зарегистрирована отмена.</param>
      <param name="newShader">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.SetShader(UnityEngine.Shader,System.Boolean)">
      <summary>
        <para>Установите шейдер материала.</para>
      </summary>
      <param name="shader">Шейдер для установки.</param>
      <param name="registerUndo">Должна быть зарегистрирована отмена.</param>
      <param name="newShader">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.SetTextureOffset(System.String,UnityEngine.Vector2,System.Int32)">
      <summary>
        <para>Установите смещение данного свойства текстуры.</para>
      </summary>
      <param name="propertyName">Имя свойства текстуры, смещение которого вы хотите изменить.</param>
      <param name="value">Масштаб для установки.</param>
      <param name="coord">Установите компонент x или y смещения (0 для x, 1 для y).</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.SetTextureScale(System.String,UnityEngine.Vector2,System.Int32)">
      <summary>
        <para>Установите масштаб данного свойства текстуры.</para>
      </summary>
      <param name="propertyName">Имя свойства текстуры, масштаб которого вы хотите изменить.</param>
      <param name="value">Масштаб для установки.</param>
      <param name="coord">Установите компонент шкалы x или y (0 для x, 1 для y).</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.ShaderProperty(UnityEditor.MaterialProperty,System.String)">
      <summary>
        <para>Handes UI для одного свойства шейдера.</para>
      </summary>
      <param name="prop">
      </param>
      <param name="label">
      </param>
      <param name="position">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.ShaderProperty(UnityEngine.Rect,UnityEditor.MaterialProperty,System.String)">
      <summary>
        <para>Handes UI для одного свойства шейдера.</para>
      </summary>
      <param name="prop">
      </param>
      <param name="label">
      </param>
      <param name="position">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TextureCompatibilityWarning(UnityEditor.MaterialProperty)">
      <summary>
        <para>Проверяет, имеет ли конкретное свойство неправильный тип текстуры, указанный материалом, отображает соответствующее предупреждение и предлагает пользователю автоматически исправить проблему.</para>
      </summary>
      <param name="prop">Свойство текстуры для проверки и отображения предупреждения при необходимости.</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TextureProperty(UnityEditor.MaterialProperty,System.String)">
      <summary>
        <para>Нарисуйте поле свойства для свойства шейдера текстуры.</para>
      </summary>
      <param name="label">Метка для поля.</param>
      <param name="scaleOffset">Отрисовка масштаба/смещения.</param>
      <param name="prop">
      </param>
      <param name="position">
      </param>
      <param name="tooltip">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TextureProperty(UnityEditor.MaterialProperty,System.String,System.Boolean)">
      <summary>
        <para>Нарисуйте поле свойства для свойства шейдера текстуры.</para>
      </summary>
      <param name="label">Метка для поля.</param>
      <param name="scaleOffset">Отрисовка масштаба/смещения.</param>
      <param name="prop">
      </param>
      <param name="position">
      </param>
      <param name="tooltip">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TextureProperty(UnityEngine.Rect,UnityEditor.MaterialProperty,System.String)">
      <summary>
        <para>Нарисуйте поле свойства для свойства шейдера текстуры.</para>
      </summary>
      <param name="label">Метка для поля.</param>
      <param name="scaleOffset">Отрисовка масштаба/смещения.</param>
      <param name="prop">
      </param>
      <param name="position">
      </param>
      <param name="tooltip">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TextureProperty(UnityEngine.Rect,UnityEditor.MaterialProperty,System.String,System.Boolean)">
      <summary>
        <para>Нарисуйте поле свойства для свойства шейдера текстуры.</para>
      </summary>
      <param name="label">Метка для поля.</param>
      <param name="scaleOffset">Отрисовка масштаба/смещения.</param>
      <param name="prop">
      </param>
      <param name="position">
      </param>
      <param name="tooltip">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TextureProperty(UnityEngine.Rect,UnityEditor.MaterialProperty,System.String,System.String,System.Boolean)">
      <summary>
        <para>Нарисуйте поле свойства для свойства шейдера текстуры.</para>
      </summary>
      <param name="label">Метка для поля.</param>
      <param name="scaleOffset">Отрисовка масштаба/смещения.</param>
      <param name="prop">
      </param>
      <param name="position">
      </param>
      <param name="tooltip">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TexturePropertyMiniThumbnail(UnityEngine.Rect,UnityEditor.MaterialProperty,System.String,System.String)">
      <summary>
        <para>Нарисуйте поле свойства для свойства шейдера текстуры, которое занимает только одну высоту строки.</para>
      </summary>
      <param name="position">Обратите внимание, что этот элемент управления должен отображаться в формате.</param>
      <param name="label">Метка для поля.</param>
      <param name="prop">
      </param>
      <param name="tooltip">
      </param>
      <returns>
        <para>Возвращает общую высоту, используемую этим элементом управления.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TexturePropertySingleLine(UnityEngine.GUIContent,UnityEditor.MaterialProperty)">
      <summary>
        <para>Метод отображения элемента управления свойствами текстуры с дополнительными встроенными свойствами.</para>
      </summary>
      <param name="label">Метка, используемая для свойства текстуры.</param>
      <param name="textureProp">Свойство текстуры.</param>
      <param name="extraProperty1">Первое необязательное свойство, встроенное после свойства текстуры.</param>
      <param name="extraProperty2">Второе необязательное свойство, встроенное после extraProperty1.</param>
      <returns>
        <para>Возвращает использованный прямоугольник.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TexturePropertySingleLine(UnityEngine.GUIContent,UnityEditor.MaterialProperty,UnityEditor.MaterialProperty)">
      <summary>
        <para>Метод отображения элемента управления свойствами текстуры с дополнительными встроенными свойствами.</para>
      </summary>
      <param name="label">Метка, используемая для свойства текстуры.</param>
      <param name="textureProp">Свойство текстуры.</param>
      <param name="extraProperty1">Первое необязательное свойство, встроенное после свойства текстуры.</param>
      <param name="extraProperty2">Второе необязательное свойство, встроенное после extraProperty1.</param>
      <returns>
        <para>Возвращает использованный прямоугольник.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TexturePropertySingleLine(UnityEngine.GUIContent,UnityEditor.MaterialProperty,UnityEditor.MaterialProperty,UnityEditor.MaterialProperty)">
      <summary>
        <para>Метод отображения элемента управления свойствами текстуры с дополнительными встроенными свойствами.</para>
      </summary>
      <param name="label">Метка, используемая для свойства текстуры.</param>
      <param name="textureProp">Свойство текстуры.</param>
      <param name="extraProperty1">Первое необязательное свойство, встроенное после свойства текстуры.</param>
      <param name="extraProperty2">Второе необязательное свойство, встроенное после extraProperty1.</param>
      <returns>
        <para>Возвращает использованный прямоугольник.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TexturePropertyTwoLines(UnityEngine.GUIContent,UnityEditor.MaterialProperty,UnityEditor.MaterialProperty,UnityEngine.GUIContent,UnityEditor.MaterialProperty)">
      <summary>
        <para>Способ отображения компактного расположения свойств.</para>
      </summary>
      <param name="label">Метка, используемая для свойства текстуры.</param>
      <param name="textureProp">Свойство текстуры.</param>
      <param name="extraProperty1">Первое дополнительное свойство, встроенное после свойства текстуры.</param>
      <param name="label2">Метка для второго дополнительного свойства (на новой строке и с отступом).</param>
      <param name="extraProperty2">Второе свойство в новой строке под текстурой.</param>
      <returns>
        <para>Возвращает использованный прямоугольник.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TexturePropertyWithHDRColor(UnityEngine.GUIContent,UnityEditor.MaterialProperty,UnityEditor.MaterialProperty,System.Boolean)">
      <summary>
        <para>Метод отображения элемента управления свойствами текстуры с полем цвета HDR и плавающим полем яркости цвета.</para>
      </summary>
      <param name="label">Метка, используемая для свойства текстуры.</param>
      <param name="textureProp">Свойство текстуры.</param>
      <param name="colorProperty">Свойство цвета (будет рассматриваться как цвет HDR).</param>
      <param name="showAlpha">Если false, информация об альфа-канале будет скрыта в графическом интерфейсе.</param>
      <param name="hdrConfig">
      </param>
      <returns>
        <para>Вернуть использованный Rect.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TexturePropertyWithHDRColor(UnityEngine.GUIContent,UnityEditor.MaterialProperty,UnityEditor.MaterialProperty,UnityEditor.ColorPickerHDRConfig,System.Boolean)">
      <summary>
        <para>Метод отображения элемента управления свойствами текстуры с полем цвета HDR и плавающим полем яркости цвета.</para>
      </summary>
      <param name="label">Метка, используемая для свойства текстуры.</param>
      <param name="textureProp">Свойство текстуры.</param>
      <param name="colorProperty">Свойство цвета (будет рассматриваться как цвет HDR).</param>
      <param name="showAlpha">Если false, информация об альфа-канале будет скрыта в графическом интерфейсе.</param>
      <param name="hdrConfig">
      </param>
      <returns>
        <para>Вернуть использованный Rect.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TextureScaleOffsetProperty(UnityEngine.Rect,UnityEditor.MaterialProperty)">
      <summary>
        <para>Отрисовывает свойства мозаики и смещения для текстуры.</para>
      </summary>
      <param name="position">Rect, чтобы нарисовать этот элемент управления.</param>
      <param name="property">Свойство для рисования.</param>
      <param name="partOfTexturePropertyControl">Если этот элемент управления должен отображаться под управлением свойства большой текстуры, используйте значение «true». Если этот элемент управления должен отображаться отдельно, используйте false.</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TextureScaleOffsetProperty(UnityEngine.Rect,UnityEditor.MaterialProperty,System.Boolean)">
      <summary>
        <para>Отрисовывает свойства мозаики и смещения для текстуры.</para>
      </summary>
      <param name="position">Rect, чтобы нарисовать этот элемент управления.</param>
      <param name="property">Свойство для рисования.</param>
      <param name="partOfTexturePropertyControl">Если этот элемент управления должен отображаться под управлением свойства большой текстуры, используйте значение «true». Если этот элемент управления должен отображаться отдельно, используйте false.</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TextureScaleOffsetProperty(UnityEngine.Rect,UnityEngine.Vector4)">
      <summary>
        <para>ЗАДАЧА.</para>
      </summary>
      <param name="position">
      </param>
      <param name="scaleOffset">
      </param>
      <param name="partOfTexturePropertyControl">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TextureScaleOffsetProperty(UnityEngine.Rect,UnityEngine.Vector4,System.Boolean)">
      <summary>
        <para>ЗАДАЧА.</para>
      </summary>
      <param name="position">
      </param>
      <param name="scaleOffset">
      </param>
      <param name="partOfTexturePropertyControl">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.VectorProperty(UnityEditor.MaterialProperty,System.String)">
      <summary>
        <para>Нарисуйте поле свойства для свойства векторного шейдера.</para>
      </summary>
      <param name="label">Метка для поля.</param>
      <param name="prop">
      </param>
      <param name="position">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.VectorProperty(UnityEngine.Rect,UnityEditor.MaterialProperty,System.String)">
      <summary>
        <para>Нарисуйте поле свойства для свойства векторного шейдера.</para>
      </summary>
      <param name="label">Метка для поля.</param>
      <param name="prop">
      </param>
      <param name="position">
      </param>
    </member>
    <member name="T:UnityEditor.MaterialEditorExtensions">
      <summary>
        <para>Методы расширения для типа ресурса «Материал» в редакторе.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialEditorExtensions.PerformBumpMapCheck(UnityEngine.Material)">
      <summary>
        <para>Перебирает все свойства материала с флагом MaterialProperty.PropFlags.Normal и проверяет, импортируются ли текстуры, на которые ссылаются эти свойства, как TextureImporterType.NormalMap.</para>
      </summary>
      <param name="material">Целевой материал.</param>
    </member>
    <member name="T:UnityEditor.MaterialProperty">
      <summary>
        <para>Описывает информацию и значение одного свойства шейдера.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MaterialProperty.colorValue">
      <summary>
        <para>Значение цвета свойства.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MaterialProperty.displayName">
      <summary>
        <para>Отображаемое имя свойства (только для чтения).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MaterialProperty.flags">
      <summary>
        <para>Флаги, управляющие отображением свойства (только для чтения).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MaterialProperty.floatValue">
      <summary>
        <para>Плавающее значение свойства.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MaterialProperty.hasMixedValue">
      <summary>
        <para>Имеет ли это свойство несколько разных значений? (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MaterialProperty.intValue">
      <summary>
        <para>Целое значение свойства.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MaterialProperty.name">
      <summary>
        <para>Имя свойства (только для чтения).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MaterialProperty.rangeLimits">
      <summary>
        <para>Минимальные и максимальные пределы свойства ранжированного числа с плавающей запятой (только для чтения).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MaterialProperty.targets">
      <summary>
        <para>Материальные объекты, редактируемые этим свойством (только для чтения).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MaterialProperty.textureDimension">
      <summary>
        <para>Измерение текстуры (2D, кубическая карта и т. д.) свойства (только для чтения).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MaterialProperty.textureValue">
      <summary>
        <para>Текстурное значение свойства.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MaterialProperty.type">
      <summary>
        <para>Тип свойства (только для чтения).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MaterialProperty.vectorValue">
      <summary>
        <para>Векторное значение свойства.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MaterialProperty.PropFlags">
      <summary>
        <para>Флаги, управляющие отображением свойства материала.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MaterialProperty.PropFlags.Gamma">
      <summary>
        <para>Означает, что значения этого свойства находятся в гамма-пространстве и не должны подвергаться гамма-коррекции.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MaterialProperty.PropFlags.HDR">
      <summary>
        <para>Указывает, что значения этого свойства содержат данные расширенного динамического диапазона (HDR).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MaterialProperty.PropFlags.HideInInspector">
      <summary>
        <para>Не показывать свойство в Инспекторе.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MaterialProperty.PropFlags.None">
      <summary>
        <para>Флаги не установлены.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MaterialProperty.PropFlags.NonModifiableTextureData">
      <summary>
        <para>Не позволяйте редактировать это свойство текстуры в Инспекторе.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MaterialProperty.PropFlags.Normal">
      <summary>
        <para>Указывает, что значения этого свойства содержат данные Normal (нормализованный вектор).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MaterialProperty.PropFlags.NoScaleOffset">
      <summary>
        <para>Не показывать поля масштаба/смещения UV рядом с текстурой.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MaterialProperty.PropFlags.PerRendererData">
      <summary>
        <para>В инспекторе материалов значение этого свойства будет запрашиваться из блока свойств материала средства визуализации, а не из материала. Значение также будет доступно только для чтения. Это соответствует атрибуту «[PerRendererData]» перед свойством в коде шейдера.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MaterialProperty.PropType">
      <summary>
        <para>Тип свойства материала.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MaterialProperty.PropType.Color">
      <summary>
        <para>Свойство цвета.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MaterialProperty.PropType.Float">
      <summary>
        <para>Свойство с плавающей запятой.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MaterialProperty.PropType.Int">
      <summary>
        <para>Целое свойство.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MaterialProperty.PropType.Range">
      <summary>
        <para>Свойство Ranged float (с минимальными/максимальными значениями).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MaterialProperty.PropType.Texture">
      <summary>
        <para>Свойство текстуры.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MaterialProperty.PropType.Vector">
      <summary>
        <para>Свойство вектора.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MaterialPropertyDrawer">
      <summary>
        <para>Базовый класс, из которого создаются ящики пользовательских свойств материалов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialPropertyDrawer.Apply(UnityEditor.MaterialProperty)">
      <summary>
        <para>Примените к материалу дополнительные начальные значения.</para>
      </summary>
      <param name="prop">Свойство MaterialProperty, для которого применяются значения.</param>
    </member>
    <member name="M:UnityEditor.MaterialPropertyDrawer.GetPropertyHeight(UnityEditor.MaterialProperty,System.String,UnityEditor.MaterialEditor)">
      <summary>
        <para>Переопределите этот метод, чтобы указать высоту графического интерфейса для этого свойства в пикселях.</para>
      </summary>
      <param name="prop">MaterialProperty, для которого создается настраиваемый графический интерфейс.</param>
      <param name="label">Метка этого свойства.</param>
      <param name="editor">Текущий редактор материалов.</param>
    </member>
    <member name="M:UnityEditor.MaterialPropertyDrawer.OnGUI(UnityEngine.Rect,UnityEditor.MaterialProperty,System.String,UnityEditor.MaterialEditor)">
      <summary>
        <para>Переопределите этот метод, чтобы создать собственный графический интерфейс для свойства.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в графическом интерфейсе свойства.</param>
      <param name="prop">MaterialProperty, для которого создается настраиваемый графический интерфейс.</param>
      <param name="label">Метка этого свойства.</param>
      <param name="editor">Текущий редактор материалов.</param>
    </member>
    <member name="T:UnityEditor.Media.AudioTrackAttributes">
      <summary>
        <para>Дескриптор формата звуковой дорожки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Media.AudioTrackAttributes.channelCount">
      <summary>
        <para>Количество каналов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Media.AudioTrackAttributes.language">
      <summary>
        <para>Язык диалога, если применимо. Может быть пустым.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Media.AudioTrackAttributes.sampleRate">
      <summary>
        <para>Частота дискретизации звука.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Media.H264EncoderAttributes">
      <summary>
        <para>Дескриптор для атрибутов кодировщика H.264.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Media.H264EncoderAttributes.gopSize">
      <summary>
        <para>Максимальный размер группы изображений в кадрах.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Media.H264EncoderAttributes.numConsecutiveBFrames">
      <summary>
        <para>Максимальное количество последовательных кадров B между кадрами I и P.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Media.H264EncoderAttributes.profile">
      <summary>
        <para>VideoEncodingProfile для закодированного видео.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Media.MediaEncoder">
      <summary>
        <para>Кодирует изображения и аудиосэмплы в аудио- или видеофайл.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Media.MediaEncoder.AddFrame(UnityEngine.Texture2D)">
      <summary>
        <para>Добавляет кадр к видеодорожке файла.</para>
      </summary>
      <param name="texture">Текстура, содержащая пиксели для записи в дорожку для текущего кадра.</param>
      <param name="time">Отметка времени для нового кадра.</param>
      <returns>
        <para>Истинно, если операция прошла успешно. False в противном случае.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Media.MediaEncoder.AddFrame(UnityEngine.Texture2D,UnityEditor.Media.MediaTime)">
      <summary>
        <para>Добавляет кадр к видеодорожке файла.</para>
      </summary>
      <param name="texture">Текстура, содержащая пиксели для записи в дорожку для текущего кадра.</param>
      <param name="time">Отметка времени для нового кадра.</param>
      <returns>
        <para>Истинно, если операция прошла успешно. False в противном случае.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Media.MediaEncoder.AddFrame(System.Int32,System.Int32,System.Int32,UnityEngine.TextureFormat,Unity.Collections.NativeArray`1&lt;System.Byte&gt;)">
      <summary>
        <para>Добавляет кадр из необработанного буфера к видеодорожке файла.</para>
      </summary>
      <param name="width">Ширина изображения.</param>
      <param name="height">Высота изображения.</param>
      <param name="rowBytes">Байты в одной строке пикселей. Полезно, если строки содержат отступы. Можно установить на 0, если нет отступов.</param>
      <param name="format">Пиксельный формат. В настоящее время поддерживается только TextureFormat.RGBA32.</param>
      <param name="data">Байты, содержащие изображение.</param>
      <param name="time">Отметка времени для нового кадра.</param>
      <returns>
        <para>Истинно, если операция прошла успешно. False в противном случае.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Media.MediaEncoder.AddFrame(System.Int32,System.Int32,System.Int32,UnityEngine.TextureFormat,Unity.Collections.NativeArray`1&lt;System.Byte&gt;,UnityEditor.Media.MediaTime)">
      <summary>
        <para>Добавляет кадр из необработанного буфера к видеодорожке файла.</para>
      </summary>
      <param name="width">Ширина изображения.</param>
      <param name="height">Высота изображения.</param>
      <param name="rowBytes">Байты в одной строке пикселей. Полезно, если строки содержат отступы. Можно установить на 0, если нет отступов.</param>
      <param name="format">Пиксельный формат. В настоящее время поддерживается только TextureFormat.RGBA32.</param>
      <param name="data">Байты, содержащие изображение.</param>
      <param name="time">Отметка времени для нового кадра.</param>
      <returns>
        <para>Истинно, если операция прошла успешно. False в противном случае.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Media.MediaEncoder.AddSamples(System.UInt16,Unity.Collections.NativeArray`1&lt;System.Single&gt;)">
      <summary>
        <para>Добавляет образцы кадров к указанной звуковой дорожке.</para>
      </summary>
      <param name="trackIndex">Индекс дорожки, на которую будут добавлены образцы кадров.</param>
      <param name="interleavedSamples">Примеры кадров для добавления. Ожидается, что образцы будут чередоваться.</param>
      <returns>
        <para>Истинно, если операция прошла успешно. False в противном случае.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Media.MediaEncoder.AddSamples(Unity.Collections.NativeArray`1&lt;System.Single&gt;)">
      <summary>
        <para>Добавляет образцы кадров к указанной звуковой дорожке.</para>
      </summary>
      <param name="trackIndex">Индекс дорожки, на которую будут добавлены образцы кадров.</param>
      <param name="interleavedSamples">Примеры кадров для добавления. Ожидается, что образцы будут чередоваться.</param>
      <returns>
        <para>Истинно, если операция прошла успешно. False в противном случае.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Media.MediaEncoder.#ctor(System.String,UnityEditor.Media.VideoTrackAttributes,UnityEditor.Media.AudioTrackAttributes[])">
      <summary>
        <para>Создайте новый кодировщик с различными аранжировками дорожек.</para>
      </summary>
      <param name="filePath">Путь к записываемому медиафайлу.</param>
      <param name="videoAttrs">Атрибуты видеодорожки файла, если они есть.</param>
      <param name="audioAttrs">Атрибуты звуковых дорожек файла, если они есть.</param>
    </member>
    <member name="M:UnityEditor.Media.MediaEncoder.#ctor(System.String,UnityEditor.Media.VideoTrackEncoderAttributes,UnityEditor.Media.AudioTrackAttributes[])">
      <summary>
        <para>Создайте новый кодировщик с различными аранжировками дорожек.</para>
      </summary>
      <param name="filePath">Путь к записываемому медиафайлу.</param>
      <param name="videoAttrs">Атрибуты видеодорожки файла, если они есть.</param>
      <param name="audioAttrs">Атрибуты звуковых дорожек файла, если они есть.</param>
    </member>
    <member name="M:UnityEditor.Media.MediaEncoder.#ctor(System.String,UnityEditor.Media.VideoTrackAttributes,UnityEditor.Media.AudioTrackAttributes)">
      <summary>
        <para>Создайте новый кодировщик с различными аранжировками дорожек.</para>
      </summary>
      <param name="filePath">Путь к записываемому медиафайлу.</param>
      <param name="videoAttrs">Атрибуты видеодорожки файла, если они есть.</param>
      <param name="audioAttrs">Атрибуты звуковых дорожек файла, если они есть.</param>
    </member>
    <member name="M:UnityEditor.Media.MediaEncoder.#ctor(System.String,UnityEditor.Media.VideoTrackEncoderAttributes,UnityEditor.Media.AudioTrackAttributes)">
      <summary>
        <para>Создайте новый кодировщик с различными аранжировками дорожек.</para>
      </summary>
      <param name="filePath">Путь к записываемому медиафайлу.</param>
      <param name="videoAttrs">Атрибуты видеодорожки файла, если они есть.</param>
      <param name="audioAttrs">Атрибуты звуковых дорожек файла, если они есть.</param>
    </member>
    <member name="M:UnityEditor.Media.MediaEncoder.#ctor(System.String,UnityEditor.Media.VideoTrackAttributes)">
      <summary>
        <para>Создайте новый кодировщик с различными аранжировками дорожек.</para>
      </summary>
      <param name="filePath">Путь к записываемому медиафайлу.</param>
      <param name="videoAttrs">Атрибуты видеодорожки файла, если они есть.</param>
      <param name="audioAttrs">Атрибуты звуковых дорожек файла, если они есть.</param>
    </member>
    <member name="M:UnityEditor.Media.MediaEncoder.#ctor(System.String,UnityEditor.Media.VideoTrackEncoderAttributes)">
      <summary>
        <para>Создайте новый кодировщик с различными аранжировками дорожек.</para>
      </summary>
      <param name="filePath">Путь к записываемому медиафайлу.</param>
      <param name="videoAttrs">Атрибуты видеодорожки файла, если они есть.</param>
      <param name="audioAttrs">Атрибуты звуковых дорожек файла, если они есть.</param>
    </member>
    <member name="M:UnityEditor.Media.MediaEncoder.#ctor(System.String,UnityEditor.Media.AudioTrackAttributes[])">
      <summary>
        <para>Создайте новый кодировщик с различными аранжировками дорожек.</para>
      </summary>
      <param name="filePath">Путь к записываемому медиафайлу.</param>
      <param name="videoAttrs">Атрибуты видеодорожки файла, если они есть.</param>
      <param name="audioAttrs">Атрибуты звуковых дорожек файла, если они есть.</param>
    </member>
    <member name="M:UnityEditor.Media.MediaEncoder.#ctor(System.String,UnityEditor.Media.AudioTrackAttributes)">
      <summary>
        <para>Создайте новый кодировщик с различными аранжировками дорожек.</para>
      </summary>
      <param name="filePath">Путь к записываемому медиафайлу.</param>
      <param name="videoAttrs">Атрибуты видеодорожки файла, если они есть.</param>
      <param name="audioAttrs">Атрибуты звуковых дорожек файла, если они есть.</param>
    </member>
    <member name="M:UnityEditor.Media.MediaEncoder.Dispose">
      <summary>
        <para>Завершает запись всех дорожек и закрывает записываемый файл.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Media.MediaRational">
      <summary>
        <para>Рациональное число, полезное для точного выражения дробей.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Media.MediaRational.denominator">
      <summary>
        <para>Знаменатель дроби.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Media.MediaRational.inverse">
      <summary>
        <para>Обратное рациональное число.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Media.MediaRational.isNegative">
      <summary>
        <para>Является ли рациональное число отрицательным.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Media.MediaRational.isValid">
      <summary>
        <para>Допустимо ли рациональное число.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Media.MediaRational.isZero">
      <summary>
        <para>Является ли рациональное число нулем.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Media.MediaRational.numerator">
      <summary>
        <para>Числитель дроби.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Media.MediaRational.#ctor(System.Int32)">
      <summary>
        <para>Строит рациональное число. Версия, в которой опущен знаменатель, устанавливает его равным 1.</para>
      </summary>
      <param name="numerator">Числитель рационального числа.</param>
      <param name="denominator">Знаменатель рационального числа.</param>
    </member>
    <member name="M:UnityEditor.Media.MediaRational.#ctor(System.Int32,System.Int32)">
      <summary>
        <para>Строит рациональное число. Версия, в которой опущен знаменатель, устанавливает его равным 1.</para>
      </summary>
      <param name="numerator">Числитель рационального числа.</param>
      <param name="denominator">Знаменатель рационального числа.</param>
    </member>
    <member name="F:UnityEditor.Media.MediaRational.Invalid">
      <summary>
        <para>Недопустимое рациональное значение.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Media.MediaRational.op_Explicit(UnityEditor.Media.MediaRational)">
      <summary>
        <para>Возвращает рациональное значение, выраженное как значение с плавающей запятой.</para>
      </summary>
      <param name="r">Рациональное число для преобразования.</param>
    </member>
    <member name="M:UnityEditor.Media.MediaRational.Set(System.Int32,System.Int32)">
      <summary>
        <para>Устанавливает числитель и знаменатель, выполняя нормализацию.</para>
      </summary>
      <param name="numerator">Новое значение рационального числителя.</param>
      <param name="denominator">Новое значение рационального знаменателя.</param>
    </member>
    <member name="T:UnityEditor.Media.MediaTime">
      <summary>
        <para>Представление времени для использования с медиаконтейнерами.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Media.MediaTime.count">
      <summary>
        <para>Количество выборок для значения времени.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Media.MediaTime.rate">
      <summary>
        <para>Скорость, используемая для преобразования счетчика в секунды.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Media.MediaTime.#ctor(System.Int64)">
      <summary>
        <para>Создает значение времени с целым числом секунд, используя 1 Гц для скорости.</para>
      </summary>
      <param name="seconds">Количество секунд в значении времени.</param>
    </member>
    <member name="M:UnityEditor.Media.MediaTime.#ctor(System.Int64,System.UInt32,System.UInt32)">
      <summary>
        <para>Создает значение времени для указанного числа выборок и скорости.</para>
      </summary>
      <param name="count">Количество выборок для значения времени.</param>
      <param name="rateNumerator">Числитель скорости, используемой значением времени.</param>
      <param name="rateDenominator">Знаменатель скорости, используемой значением времени.</param>
    </member>
    <member name="F:UnityEditor.Media.MediaTime.Invalid">
      <summary>
        <para>Недопустимое значение времени.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Media.MediaTime.op_Explicit(UnityEditor.Media.MediaTime)">
      <summary>
        <para>Возвращает значение времени, выраженное в виде числа секунд с плавающей запятой.</para>
      </summary>
      <param name="t">Время конвертировать.</param>
    </member>
    <member name="T:UnityEditor.Media.VideoTrackAttributes">
      <summary>
        <para>Дескриптор формата звуковой дорожки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Media.VideoTrackAttributes.bitRateMode">
      <summary>
        <para>VideoBitrateMode для закодированного видео.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Media.VideoTrackAttributes.frameRate">
      <summary>
        <para>Кадров в секунду.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Media.VideoTrackAttributes.height">
      <summary>
        <para>Высота изображения в пикселях.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Media.VideoTrackAttributes.includeAlpha">
      <summary>
        <para>Истинно, если дорожка должна включать альфа-канал, найденный в текстуре, переданной в AddFrame. False в противном случае.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Media.VideoTrackAttributes.width">
      <summary>
        <para>Ширина изображения в пикселях.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Media.VideoTrackEncoderAttributes">
      <summary>
        <para>Дескриптор формата видеодорожки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Media.VideoTrackEncoderAttributes.bitRateMode">
      <summary>
        <para>VideoBitrateMode для закодированного видео.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Media.VideoTrackEncoderAttributes.frameRate">
      <summary>
        <para>Частота кадров закодированного видео в кадрах в секунду, выраженная в дробях.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Media.VideoTrackEncoderAttributes.height">
      <summary>
        <para>Высота изображения в пикселях.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Media.VideoTrackEncoderAttributes.includeAlpha">
      <summary>
        <para>Истинно, если дорожка должна включать альфа-канал, найденный в текстуре, переданной в AddFrame. False в противном случае.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Media.VideoTrackEncoderAttributes.targetBitRate">
      <summary>
        <para>Целевая скорость передачи данных для кодировщика.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Media.VideoTrackEncoderAttributes.width">
      <summary>
        <para>Ширина изображения в пикселях.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Media.VideoTrackEncoderAttributes.#ctor(UnityEditor.Media.H264EncoderAttributes)">
      <summary>
        <para>Создайте новый атрибут VideoTrackEncoderAttributes с определенными параметрами кодирования H.264.</para>
      </summary>
      <param name="h264Attrs">Атрибуты кодирования H.264 (только для macOS и Windows).</param>
      <param name="vp8Attrs">Атрибуты кодирования VP8.</param>
    </member>
    <member name="M:UnityEditor.Media.VideoTrackEncoderAttributes.#ctor(UnityEditor.Media.VP8EncoderAttributes)">
      <summary>
        <para>Создайте новый атрибут VideoTrackEncoderAttributes с определенными параметрами кодирования H.264.</para>
      </summary>
      <param name="h264Attrs">Атрибуты кодирования H.264 (только для macOS и Windows).</param>
      <param name="vp8Attrs">Атрибуты кодирования VP8.</param>
    </member>
    <member name="T:UnityEditor.Media.VP8EncoderAttributes">
      <summary>
        <para>Дескриптор атрибутов кодировщика VP8.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Media.VP8EncoderAttributes.keyframeDistance">
      <summary>
        <para>Максимальное расстояние между I-кадрами.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MemoryProfiler.Connection">
      <summary>
        <para>Пара индексов from и to, описывающих, какая вещь поддерживает жизнь другой вещи.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.Connection.from">
      <summary>
        <para>Индексируйте виртуальный список всех дескрипторов GC, за которыми следуют все собственные объекты.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.Connection.to">
      <summary>
        <para>Индексируйте виртуальный список всех дескрипторов GC, за которыми следуют все собственные объекты.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MemoryProfiler.FieldDescription">
      <summary>
        <para>Описание поля управляемого типа.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.FieldDescription.isStatic">
      <summary>
        <para>Является ли это поле статическим?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.FieldDescription.name">
      <summary>
        <para>Имя этого поля.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.FieldDescription.offset">
      <summary>
        <para>Смещение этого поля.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.FieldDescription.typeIndex">
      <summary>
        <para>Индекс типа в PackedMemorySnapshot.typeDescriptions типа, которому принадлежит это поле.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MemoryProfiler.MemorySection">
      <summary>
        <para>Дамп участка памяти профилируемого плеера.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.MemorySection.bytes">
      <summary>
        <para>Фактические байты дампа памяти.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.MemorySection.startAddress">
      <summary>
        <para>Начальный адрес этого фрагмента памяти.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MemoryProfiler.MemorySnapshot">
      <summary>
        <para>MemorySnapshot — это инструмент профилирования, помогающий диагностировать использование памяти.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.MemoryProfiler.MemorySnapshot.OnSnapshotReceived(System.Action`1&lt;UnityEditor.MemoryProfiler.PackedMemorySnapshot&gt;)">
      <summary>
        <para>Событие, которое будет запущено, когда через соединение с профилировщиком будет получен новый снимок памяти. Его аргументом будет PackedMemorySnapshot.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="M:UnityEditor.MemoryProfiler.MemorySnapshot.RequestNewSnapshot">
      <summary>
        <para>Запрашивает новый снимок из текущей подключенной цели профилировщика. Моментальные снимки памяти поддерживаются в бэкендах сценариев IL2CPP и Mono .NET 3.5/4.0, хотя .NET 3.5 устарел с версии 2018.3.


ПРИМЕЧАНИЕ. Каждый моментальный снимок состоит примерно из одного управляемого объекта на каждый записанный управляемый объект. Снимки, сделанные из редактора, будут содержать объекты из всех предыдущих снимков, которые еще не были удалены сборщиком мусора. Поэтому повторные снимки редактора могут расти в геометрической прогрессии. Если вам больше не нужен старый снимок, рекомендуется обнулить все ссылки на него и вызвать GC.Collect(), прежде чем делать новый.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MemoryProfiler.PackedGCHandle">
      <summary>
        <para>Описание дескриптора GC, используемого виртуальной машиной.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedGCHandle.target">
      <summary>
        <para>Адрес управляемого объекта, на который ссылается дескриптор GC.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MemoryProfiler.PackedMemorySnapshot">
      <summary>
        <para>PackedMemorySnapshot — это компактное представление моментального снимка памяти.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedMemorySnapshot.connections">
      <summary>
        <para>Connections — это массив пар from, to, которые описывают, какие вещи поддерживают какие другие вещи.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedMemorySnapshot.gcHandles">
      <summary>
        <para>Все дескрипторы сборщика мусора, используемые в моментальном снимке памяти.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedMemorySnapshot.managedHeapSections">
      <summary>
        <para>Массив фактических разделов памяти управляемой кучи.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedMemorySnapshot.nativeObjects">
      <summary>
        <para>Все собственные объекты C++, которые были загружены во время моментального снимка.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedMemorySnapshot.nativeTypes">
      <summary>
        <para>Описания всех типов единства C++, о которых знает профилированный игрок.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedMemorySnapshot.typeDescriptions">
      <summary>
        <para>Описания всех управляемых типов, которые были известны виртуальной машине на момент создания моментального снимка.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedMemorySnapshot.virtualMachineInformation">
      <summary>
        <para>Информация о запущенной виртуальной машине, выполняющей управляющий код внутри проигрывателя.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MemoryProfiler.PackedNativeType">
      <summary>
        <para>Описание типа единства C++.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedNativeType.name">
      <summary>
        <para>Имя этого типа единства C++.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedNativeType.nativeBaseTypeArrayIndex">
      <summary>
        <para>Индекс, используемый для получения собственного описания базового класса C++ из массива PackedMemorySnapshot.nativeTypes.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MemoryProfiler.PackedNativeUnityEngineObject">
      <summary>
        <para>Описание объекта единства C++ в памяти.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedNativeUnityEngineObject.hideFlags">
      <summary>
        <para>HideFlags, которые есть у этого нативного объекта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedNativeUnityEngineObject.instanceId">
      <summary>
        <para>InstanceId этого объекта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedNativeUnityEngineObject.isDontDestroyOnLoad">
      <summary>
        <para>Был ли этот объект помечен как DontDestroyOnLoad?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedNativeUnityEngineObject.isManager">
      <summary>
        <para>Является ли этот нативный объект внутренним объектом диспетчера Unity?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedNativeUnityEngineObject.isPersistent">
      <summary>
        <para>Является ли этот объект постоянным? (Ресурсы являются постоянными, объекты, хранящиеся в сценах, и динамически создаваемые объекты не являются постоянными).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedNativeUnityEngineObject.name">
      <summary>
        <para>Имя этого объекта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedNativeUnityEngineObject.nativeObjectAddress">
      <summary>
        <para>Адрес памяти собственного объекта C++. Это соответствует полю "m_CachedPtr" в UnityEngine.Object.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedNativeUnityEngineObject.nativeTypeArrayIndex">
      <summary>
        <para>Индекс, используемый для получения описания собственного типа C++ из массива PackedMemorySnapshot.nativeTypes.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedNativeUnityEngineObject.size">
      <summary>
        <para>Размер в байтах этого объекта.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MemoryProfiler.PackedNativeUnityEngineObject.ObjectFlags">
      <summary>
        <para>Эквивалент Profiling.PackedNativeUnityEngineObject.ObjectFlags в старом API профилировщика памяти.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MemoryProfiler.PackedNativeUnityEngineObject.ObjectFlags.IsDontDestroyOnLoad">
      <summary>
        <para>Эквивалент Profiling.PackedNativeUnityEngineObject.ObjectFlags.IsDontDestroyOnLoad в старом API профилировщика памяти.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MemoryProfiler.PackedNativeUnityEngineObject.ObjectFlags.IsManager">
      <summary>
        <para>Эквивалент Profiling.PackedNativeUnityEngineObject.ObjectFlags.IsManager в старом API профилировщика памяти.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MemoryProfiler.PackedNativeUnityEngineObject.ObjectFlags.IsPersistent">
      <summary>
        <para>Эквивалент Profiling.PackedNativeUnityEngineObject.ObjectFlags.IsPersistent в старом API профилировщика памяти.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MemoryProfiler.TypeDescription">
      <summary>
        <para>Описание управляемого типа.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.TypeDescription.arrayRank">
      <summary>
        <para>Если это тип массива, это вернет ранг массива. (1 для одномерного массива, 2 для двумерного массива и т. д.)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.TypeDescription.assembly">
      <summary>
        <para>Имя сборки, из которой был загружен этот тип.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.TypeDescription.baseOrElementTypeIndex">
      <summary>
        <para>Базовый тип для этого типа, на который указывает индекс в PackedMemorySnapshot.typeDescriptions.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.TypeDescription.fields">
      <summary>
        <para>Массив, содержащий описания всех полей этого типа.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.TypeDescription.isArray">
      <summary>
        <para>Является ли этот тип массивом?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.TypeDescription.isValueType">
      <summary>
        <para>Является ли этот тип типом значения? (если это не тип значения, это ссылочный тип)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.TypeDescription.name">
      <summary>
        <para>Имя этого типа.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.TypeDescription.size">
      <summary>
        <para>Размер в байтах экземпляра этого типа. Если этот тип является типом массива, это описывает количество байтов, которое будет занимать один элемент в массиве.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.TypeDescription.staticFieldBytes">
      <summary>
        <para>Фактическое содержимое байтов, в которых хранятся статические поля этого типа, на момент создания моментального снимка.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.TypeDescription.typeIndex">
      <summary>
        <para>TypeIndex этого типа. Этот индекс является индексом в массиве PackedMemorySnapshot.typeDescriptions.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.TypeDescription.typeInfoAddress">
      <summary>
        <para>Адрес в памяти, содержащий описание этого типа внутри виртуальной машины. Это можно использовать для сопоставления управляемых объектов в куче с их соответствующим TypeDescription, поскольку первый указатель управляемого объекта указывает на описание его типа.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MemoryProfiler.TypeDescription.TypeFlags">
      <summary>
        <para>Эквивалент Profiling.TypeFlags в старом API профилировщика памяти.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MemoryProfiler.TypeDescription.TypeFlags.kArray">
      <summary>
        <para>Эквивалент Profiling.TypeFlags.kArray в старом API профилировщика памяти.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MemoryProfiler.TypeDescription.TypeFlags.kArrayRankMask">
      <summary>
        <para>Эквивалент Profiling.TypeFlags.kArrayRankMask в старом API профилировщика памяти.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MemoryProfiler.TypeDescription.TypeFlags.kValueType">
      <summary>
        <para>Эквивалент Profiling.TypeFlags.kValueType в старом API профилировщика памяти.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MemoryProfiler.VirtualMachineInformation">
      <summary>
        <para>Информация о виртуальной машине, выполняющей управляемый код внутри проигрывателя.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.VirtualMachineInformation.allocationGranularity">
      <summary>
        <para>Детализация распределения в байтах, используемых распределителем виртуальной машины.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.VirtualMachineInformation.arrayBoundsOffsetInHeader">
      <summary>
        <para>Смещение в байтах внутри заголовка объекта массива, где хранятся границы массива.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.VirtualMachineInformation.arrayHeaderSize">
      <summary>
        <para>Размер в байтах заголовка объекта массива.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.VirtualMachineInformation.arraySizeOffsetInHeader">
      <summary>
        <para>Смещение в байтах внутри заголовка объекта массива, где хранится размер массива.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.VirtualMachineInformation.heapFormatVersion">
      <summary>
        <para>Номер версии, который изменится при изменении макета объекта внутри управляемой кучи.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.VirtualMachineInformation.objectHeaderSize">
      <summary>
        <para>Размер в байтах заголовка каждого управляемого объекта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.VirtualMachineInformation.pointerSize">
      <summary>
        <para>Размер указателя в байтах.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Menu">
      <summary>
        <para>Класс меню для управления пунктом меню.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Menu.#ctor">
      <summary>
        <para>Конструктор по умолчанию.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Menu.GetChecked(System.String)">
      <summary>
        <para>Получить статус проверки данного меню.</para>
      </summary>
      <param name="menuPath">
      </param>
    </member>
    <member name="M:UnityEditor.Menu.GetEnabled(System.String)">
      <summary>
        <para>Получает статус включения пункта меню.</para>
      </summary>
      <param name="menuPath">Разделенный косой чертой путь к позиции элемента в меню. Например, «Сцена/место на поверхности».</param>
      <returns>
        <para>Истинно, если пункт меню включен. False в противном случае.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Menu.SetChecked(System.String,System.Boolean)">
      <summary>
        <para>Установить статус проверки данного меню.</para>
      </summary>
      <param name="menuPath">
      </param>
      <param name="isChecked">
      </param>
    </member>
    <member name="T:UnityEditor.MenuCommand">
      <summary>
        <para>Используется для извлечения контекста для MenuItem.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MenuCommand.context">
      <summary>
        <para>Контекст — это объект, который является целью команды меню.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MenuCommand.userData">
      <summary>
        <para>Целое число для передачи пользовательской информации в пункт меню.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MenuCommand.#ctor(UnityEngine.Object,System.Int32)">
      <summary>
        <para>Создает новый объект MenuCommand.</para>
      </summary>
      <param name="inContext">
      </param>
      <param name="inUserData">
      </param>
    </member>
    <member name="M:UnityEditor.MenuCommand.#ctor(UnityEngine.Object)">
      <summary>
        <para>Создает новый объект MenuCommand.</para>
      </summary>
      <param name="inContext">
      </param>
    </member>
    <member name="T:UnityEditor.MenuItem">
      <summary>
        <para>Атрибут MenuItem позволяет добавлять пункты меню в главное меню и контекстные меню окна Инспектора.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MenuItem.editorModes">
      <summary>
        <para>Указывает режимы редактора, для которых отображается элемент. Если вы не укажете никаких режимов редактора, элемент будет отображаться только для режима по умолчанию.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MenuItem.#ctor(System.String)">
      <summary>
        <para>Создает пункт меню и вызывает следующую за ним статическую функцию при выборе пункта меню.</para>
      </summary>
      <param name="itemName">itemName — это элемент меню, представленный в виде имени пути.
Например, пункт меню может быть "GameObject/Do Something".</param>
      <param name="isValidateFunction">Если isValidateFunction имеет значение true, это проверка
функция и будет вызываться перед вызовом функции меню с тем же именем элемента.</param>
      <param name="priority">Порядок отображения пунктов меню.</param>
    </member>
    <member name="M:UnityEditor.MenuItem.#ctor(System.String,System.Boolean)">
      <summary>
        <para>Создает пункт меню и вызывает следующую за ним статическую функцию при выборе пункта меню.</para>
      </summary>
      <param name="itemName">itemName — это элемент меню, представленный в виде имени пути.
Например, пункт меню может быть "GameObject/Do Something".</param>
      <param name="isValidateFunction">Если isValidateFunction имеет значение true, это проверка
функция и будет вызываться перед вызовом функции меню с тем же именем элемента.</param>
      <param name="priority">Порядок отображения пунктов меню.</param>
    </member>
    <member name="M:UnityEditor.MenuItem.#ctor(System.String,System.Boolean,System.Int32)">
      <summary>
        <para>Создает пункт меню и вызывает следующую за ним статическую функцию при выборе пункта меню.</para>
      </summary>
      <param name="itemName">itemName — это элемент меню, представленный в виде имени пути.
Например, пункт меню может быть "GameObject/Do Something".</param>
      <param name="isValidateFunction">Если isValidateFunction имеет значение true, это проверка
функция и будет вызываться перед вызовом функции меню с тем же именем элемента.</param>
      <param name="priority">Порядок отображения пунктов меню.</param>
    </member>
    <member name="T:UnityEditor.MeshOptimizationFlags">
      <summary>
        <para>Параметры для управления оптимизацией данных сетки во время импорта активов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MeshOptimizationFlags.Everything">
      <summary>
        <para>Выполнить максимальную оптимизацию данных сетки, включить все параметры оптимизации.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MeshOptimizationFlags.PolygonOrder">
      <summary>
        <para>Оптимизируйте порядок полигонов в сетке, чтобы лучше использовать внутренние кэши графических процессоров для повышения производительности рендеринга.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MeshOptimizationFlags.VertexOrder">
      <summary>
        <para>Оптимизируйте порядок вершин в сетке, чтобы лучше использовать внутренние кэши графических процессоров для повышения производительности рендеринга.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MeshPreview">
      <summary>
        <para>Используйте этот класс для визуализации интерактивного предварительного просмотра сетки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MeshPreview.mesh">
      <summary>
        <para>Сетка для отображения в области предварительного просмотра.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MeshPreview.#ctor(UnityEngine.Mesh)">
      <summary>
        <para>Создает новый экземпляр MeshPreview с целью Mesh.</para>
      </summary>
      <param name="target">Отображаемая сетка.</param>
    </member>
    <member name="M:UnityEditor.MeshPreview.Dispose">
      <summary>
        <para>Освобождает выделенные ресурсы, связанные с этим объектом.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MeshPreview.GetInfoString(UnityEngine.Mesh)">
      <summary>
        <para>Возвращает краткую сводку атрибутов сетки (например, содержит ли эта сетка положения, нормали, касательные и т. д.).</para>
      </summary>
      <param name="mesh">Сетка, для которой создается сводная фраза.</param>
      <returns>
        <para>Краткое описание атрибутов сетки.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MeshPreview.OnPreviewGUI(UnityEngine.Rect,UnityEngine.GUIStyle)">
      <summary>
        <para>Вызовите это из Editor.OnPreviewGUI или ObjectPreview.OnPreviewGUI, чтобы нарисовать предварительный просмотр сетки.</para>
      </summary>
      <param name="rect">Прямоугольник, в котором будет отображаться предварительный просмотр.</param>
      <param name="background">Стиль фона.</param>
    </member>
    <member name="M:UnityEditor.MeshPreview.OnPreviewSettings">
      <summary>
        <para>Вызовите это из Editor.OnPreviewSettings или ObjectPreview.OnPreviewSettings, чтобы нарисовать дополнительные настройки, связанные с предварительным просмотром сетки.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MeshPreview.RenderStaticPreview(System.Int32,System.Int32)">
      <summary>
        <para>Создает предварительный просмотр текстуры для переопределения Editor.RenderStaticPreview. Будет отрисована текущая сетка.</para>
      </summary>
      <param name="width">Ширина для рендеринга текстуры.</param>
      <param name="height">Высота для рендеринга текстуры.</param>
      <returns>
        <para>Возвращает визуализированную текстуру текущего меша с настройками по умолчанию.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.MeshUtility">
      <summary>
        <para>Различные утилиты для работы с сеткой.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MeshUtility.AcquireReadOnlyMeshData(UnityEngine.Mesh)">
      <summary>
        <para>Получает снимок данных Mesh для доступа только для чтения в редакторе Unity.</para>
      </summary>
      <param name="mesh">Входная сетка.</param>
      <param name="meshes">Входные сетки.</param>
      <returns>
        <para>Возвращает доступный только для чтения снимок данных Mesh. См. Mesh.MeshDataArray и Mesh.MeshData.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MeshUtility.AcquireReadOnlyMeshData(UnityEngine.Mesh[])">
      <summary>
        <para>Получает снимок данных Mesh для доступа только для чтения в редакторе Unity.</para>
      </summary>
      <param name="mesh">Входная сетка.</param>
      <param name="meshes">Входные сетки.</param>
      <returns>
        <para>Возвращает доступный только для чтения снимок данных Mesh. См. Mesh.MeshDataArray и Mesh.MeshData.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MeshUtility.AcquireReadOnlyMeshData(System.Collections.Generic.List`1&lt;UnityEngine.Mesh&gt;)">
      <summary>
        <para>Получает снимок данных Mesh для доступа только для чтения в редакторе Unity.</para>
      </summary>
      <param name="mesh">Входная сетка.</param>
      <param name="meshes">Входные сетки.</param>
      <returns>
        <para>Возвращает доступный только для чтения снимок данных Mesh. См. Mesh.MeshDataArray и Mesh.MeshData.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MeshUtility.GetMeshCompression(UnityEngine.Mesh)">
      <summary>
        <para>Возвращает параметр сжатия сетки для сетки.</para>
      </summary>
      <param name="mesh">Сетка для получения информации.</param>
    </member>
    <member name="M:UnityEditor.MeshUtility.Optimize(UnityEngine.Mesh)">
      <summary>
        <para>Оптимизирует данные сетки для повышения производительности рендеринга.</para>
      </summary>
      <param name="mesh">
      </param>
    </member>
    <member name="M:UnityEditor.MeshUtility.SetMeshCompression(UnityEngine.Mesh,UnityEditor.ModelImporterMeshCompression)">
      <summary>
        <para>Измените параметр сжатия сетки для сетки.</para>
      </summary>
      <param name="mesh">Сетка, для которой устанавливается режим сжатия.</param>
      <param name="compression">Устанавливаемый режим сжатия.</param>
    </member>
    <member name="M:UnityEditor.MeshUtility.SetPerTriangleUV2(UnityEngine.Mesh,UnityEngine.Vector2[])">
      <summary>
        <para>Будет вставлять uv2 для каждого треугольника в сетку и обрабатывать разделение вершин и т. д.</para>
      </summary>
      <param name="src">
      </param>
      <param name="triUV">
      </param>
    </member>
    <member name="T:UnityEditor.MessageType">
      <summary>
        <para>Типы пользовательских сообщений.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MessageType.Error">
      <summary>
        <para>Сообщение об ошибке.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MessageType.Info">
      <summary>
        <para>Информационное сообщение.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MessageType.None">
      <summary>
        <para>Нейтральное сообщение.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MessageType.Warning">
      <summary>
        <para>Предупреждающее сообщение.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MobileTextureSubtarget">
      <summary>
        <para>Формат сжатой текстуры для целевой платформы сборки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MobileTextureSubtarget.ASTC">
      <summary>
        <para>Сжатие текстур ASTC.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MobileTextureSubtarget.DXT">
      <summary>
        <para>Сжатие текстур S3. Поддерживается на устройствах с графическими процессорами NVidia Tegra, Vivante и Intel.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MobileTextureSubtarget.ETC">
      <summary>
        <para>Сжатие текстур ETC1 (или ETC2 для текстур с альфой). ETC1 поддерживается всеми устройствами. ETC2 доступен на устройствах, поддерживающих OpenGL ES 3.0; на устройствах OpenGL ES 2 текстура распаковывается на CPU.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MobileTextureSubtarget.ETC2">
      <summary>
        <para>Сжатие текстур ETC2. Доступно на устройствах, поддерживающих OpenGL ES 3.0; на устройствах OpenGL ES 2 текстура распаковывается на CPU.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MobileTextureSubtarget.Generic">
      <summary>
        <para>Не переопределяйте сжатие текстур.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MobileTextureSubtarget.PVRTC">
      <summary>
        <para>Сжатие текстур PowerVR. Доступно на устройствах с графическим процессором PowerVR.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporter">
      <summary>
        <para>Средство импорта моделей позволяет изменять параметры импорта из сценариев редактора.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.addCollider">
      <summary>
        <para>Добавить в импортированные сетки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.animationCompression">
      <summary>
        <para>Настройка сжатия анимации.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.animationPositionError">
      <summary>
        <para>Допущена ошибка сжатия положения анимации.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.animationRotationError">
      <summary>
        <para>Допущена ошибка сжатия вращения анимации.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.animationScaleError">
      <summary>
        <para>Допущена ошибка сжатия масштаба анимации.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.animationType">
      <summary>
        <para>Режим генерации аниматора.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.animationWrapMode">
      <summary>
        <para>Режим переноса по умолчанию для сгенерированных анимационных клипов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.autoGenerateAvatarMappingIfUnspecified">
      <summary>
        <para>Создать автоматическое сопоставление, если при импорте гуманоидной анимации не указан avatarSetup.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.avatarSetup">
      <summary>
        <para>Поколение аватара импортированной модели.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.bakeAxisConversion">
      <summary>
        <para>Вычисляет преобразование осей геометрии и анимации для моделей, определенных в системе осей, которая отличается от системы Unity (левша, Z вперед, Y-вверх).

Если этот параметр включен, Unity преобразует данные геометрии и анимации, чтобы преобразовать ось.

Когда отключено, Unity преобразует корневой GameObject иерархии, чтобы преобразовать ось.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.bakeIK">
      <summary>
        <para>Запекать инверсную кинематику (IK) при импорте.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.clipAnimations">
      <summary>
        <para>Анимационные клипы, на которые нужно разделить анимацию. См. также: ModelImporterClipAnimation.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.defaultClipAnimations">
      <summary>
        <para>Создайте список всех анимационных клипов по умолчанию на основе TakeInfo.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.extraExposedTransformPaths">
      <summary>
        <para>Настройка оптимизации анимации.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.extraUserProperties">
      <summary>
        <para>Дополнительные свойства, которые следует рассматривать как свойства пользователя.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.fileScale">
      <summary>
        <para>Коэффициент масштабирования, используемый, когда для параметра useFileScale установлено значение true (только для чтения).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.generateAnimations">
      <summary>
        <para>Варианты создания анимации.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.generateMaterials">
      <summary>
        <para>Варианты создания материалов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.generateSecondaryUV">
      <summary>
        <para>Создайте вторичный набор UV для карт освещения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.globalScale">
      <summary>
        <para>Глобальный коэффициент масштабирования для импорта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.humanDescription">
      <summary>
        <para>Описание человека, которое используется для создания аватара в процессе импорта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.humanoidOversampling">
      <summary>
        <para>Определяет, насколько передискретизация используется при импорте гуманоидных анимаций для перенацеливания.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.importAnimatedCustomProperties">
      <summary>
        <para>Импорт анимированных пользовательских свойств из файла.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.importAnimation">
      <summary>
        <para>Импортировать анимацию из файла.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.importBlendShapeNormals">
      <summary>
        <para>Параметры импорта обычных форм смешивания.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.importBlendShapes">
      <summary>
        <para>Управляет импортом BlendShapes.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.importCameras">
      <summary>
        <para>Управляет импортом камер. Основные свойства, такие как поле зрения, расстояние в ближней плоскости и расстояние в дальней плоскости, можно анимировать.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.importConstraints">
      <summary>
        <para>Импорт ограничений анимации.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.importedTakeInfos">
      <summary>
        <para>Создает список всех импортированных дублей.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.importLights">
      <summary>
        <para>Управляет импортом источников света. Обратите внимание, что, поскольку в инструментах DCC свет определяется по-разному, некоторые типы или свойства света могут быть не экспортированы. Основные свойства, такие как цвет и интенсивность, можно анимировать.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.importMaterials">
      <summary>
        <para>Импорт материалов из файла.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.importNormals">
      <summary>
        <para>Параметры импорта нормалей вершин.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.importTangents">
      <summary>
        <para>Параметры импорта касательной к вершине.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.importVisibility">
      <summary>
        <para>Используйте свойства видимости для включения или отключения компонентов MeshRenderer.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.indexFormat">
      <summary>
        <para>Формат импортированных данных буфера индекса сетки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.isBakeIKSupported">
      <summary>
        <para>Поддерживается ли Bake Inverse Kinematics (IK) этим импортером.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.isFileScaleUsed">
      <summary>
        <para>Используется ли FileScale при импорте.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.isReadable">
      <summary>
        <para>Доступны ли вершины и индексы сетки из скрипта?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.isTangentImportSupported">
      <summary>
        <para>Поддерживается ли импорт касательных этим средством импорта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.isUseFileUnitsSupported">
      <summary>
        <para>Поддерживается ли useFileUnits для этого ресурса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.keepQuads">
      <summary>
        <para>Если это правда, любые четырехугольники, существующие в данных сетки до их импорта, сохраняются как четырехугольники, а не разделяются на два треугольника для целей тесселяции. Установите для этого параметра значение false, чтобы отключить это поведение.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.materialImportMode">
      <summary>
        <para>Параметры создания материала.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.materialLocation">
      <summary>
        <para>Параметры места импорта материалов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.materialName">
      <summary>
        <para>Настройка именования материалов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.materialSearch">
      <summary>
        <para>Существующая настройка поиска материалов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.maxBonesPerVertex">
      <summary>
        <para>Максимальное количество костей на вершину, хранящееся в данных этого меша.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.meshCompression">
      <summary>
        <para>Параметр сжатия сетки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.meshOptimizationFlags">
      <summary>
        <para>Параметры для управления оптимизацией данных сетки во время импорта активов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.minBoneWeight">
      <summary>
        <para>Минимальный вес кости, который необходимо сохранить.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.motionNodeName">
      <summary>
        <para>Путь преобразования, используемый для создания движения анимации.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.normalCalculationMode">
      <summary>
        <para>Нормальные параметры генерации для ModelImporter.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.normalImportMode">
      <summary>
        <para>Режим импорта нормалей.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.normalSmoothingAngle">
      <summary>
        <para>Угол сглаживания (в градусах) для вычисления нормалей.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.normalSmoothingSource">
      <summary>
        <para>Источник информации о сглаживании для расчета нормалей.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.optimizeBones">
      <summary>
        <para>Импортируйте кости только там, где они соединены с вершинами.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.optimizeGameObjects">
      <summary>
        <para>Настройка оптимизации анимации.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.optimizeMesh">
      <summary>
        <para>Настройка оптимизации вершин.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.optimizeMeshPolygons">
      <summary>
        <para>Оптимизируйте порядок полигонов в сетке, чтобы лучше использовать внутренние кэши графических процессоров для повышения производительности рендеринга.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.optimizeMeshVertices">
      <summary>
        <para>Оптимизируйте порядок вершин в сетке, чтобы лучше использовать внутренние кэши графических процессоров для повышения производительности рендеринга.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.preserveHierarchy">
      <summary>
        <para>Если true, всегда создавайте явный корень Prefab. В противном случае, если модель имеет один корень, он повторно используется как корень префаба.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.referencedClips">
      <summary>
        <para>Создает список всех импортированных анимаций.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.removeConstantScaleCurves">
      <summary>
        <para>Удаляет постоянные кривые анимации со значениями, идентичными начальному значению масштаба объекта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.resampleCurves">
      <summary>
        <para>Если установлено значение false, импортер не будет передискретизировать кривые, когда это возможно.
Подробнее о.

Заметки:

- Некоторые неподдерживаемые функции FBX (такие как PreRotation или PostRotation для преобразований) переопределяют этот параметр. В этих ситуациях кривые анимации все равно будут передискретизированы, даже если этот параметр отключен. Для достижения наилучших результатов избегайте использования PreRotation, PostRotation и GetRotationPivot.

- Эта опция появилась в версии 5.3. До этой версии поведение импорта в Unity было таким, как если бы эта опция была всегда включена. Поэтому включение этой опции дает то же поведение, что и импорт анимации до версии 5.3.
</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.secondaryUVAngleDistortion">
      <summary>
        <para>Порог углового искажения (в градусах) при генерации вторичного UV.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.secondaryUVAreaDistortion">
      <summary>
        <para>Порог искажения площади при генерации вторичного UV.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.secondaryUVHardAngle">
      <summary>
        <para>Жесткий угол (в градусах) для генерации вторичного UV.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.secondaryUVMarginMethod">
      <summary>
        <para>Метод, используемый для обработки полей при создании вторичного UV.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.secondaryUVMinLightmapResolution">
      <summary>
        <para>Минимальное разрешение карты освещения в текселях на единицу, которое, как ожидается, будет иметь связанная модель.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.secondaryUVMinObjectScale">
      <summary>
        <para>Минимальный масштаб объекта, который, как ожидается, будет иметь связанная модель.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.secondaryUVPackMargin">
      <summary>
        <para>Поле между диаграммами при упаковке вторичного UV.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.skinWeights">
      <summary>
        <para>Параметры импорта веса кожи.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.sortHierarchyByName">
      <summary>
        <para>Сортирует иерархию gameObject по имени.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.sourceAvatar">
      <summary>
        <para>Импортирует HumanDescription из данного аватара.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.splitTangentsAcrossSeams">
      <summary>
        <para>Должны ли касательные быть разделены по швам UV.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.swapUVChannels">
      <summary>
        <para>Поменяйте местами первичный и вторичный UV-каналы при импорте.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.tangentImportMode">
      <summary>
        <para>Режим импорта касательных.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.transformPaths">
      <summary>
        <para>Создает список всех импортированных преобразований.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.useFileScale">
      <summary>
        <para>Используйте FileScale при импорте.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.useFileUnits">
      <summary>
        <para>Определить файловые единицы и импортировать как 1FileUnit=1UnityUnit, в противном случае он будет импортирован как 1cm=1UnityUnit.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.useSRGBMaterialColor">
      <summary>
        <para>Если этот параметр отключен, цвета альбедо импортированных материалов преобразуются в гамма-пространство. Это свойство должно быть отключено при использовании линейного цветового пространства в настройках рендеринга Player.
Значение по умолчанию — true.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.weldVertices">
      <summary>
        <para>Объедините вершины, находящиеся в одном и том же месте в пространстве.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ModelImporter.CreateDefaultMaskForClip(UnityEditor.ModelImporterClipAnimation)">
      <summary>
        <para>Создает маску, соответствующую иерархии модели, и применяет ее к предоставленному объекту ModelImporterClipAnimation.</para>
      </summary>
      <param name="clip">Клип, к которому будет применена маска.</param>
    </member>
    <member name="M:UnityEditor.ModelImporter.ExtractTextures(System.String)">
      <summary>
        <para>Извлекает встроенные текстуры из файла модели (например, FBX или SketchUp).</para>
      </summary>
      <param name="folderPath">Каталог, в который будут извлечены текстуры.</param>
      <returns>
        <para>Возвращает true, если текстуры извлечены успешно, иначе false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ModelImporter.SearchAndRemapMaterials(UnityEditor.ModelImporterMaterialName,UnityEditor.ModelImporterMaterialSearch)">
      <summary>
        <para>Найдите в проекте подходящие материалы и используйте их вместо внутренних материалов.</para>
      </summary>
      <param name="nameOption">Параметр сопоставления имен.</param>
      <param name="searchOption">Вариант типа поиска.</param>
      <returns>
        <para>Возвращает false, если исходный файл пуст или недействителен. В противном случае возвращает true.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.ModelImporterAnimationCompression">
      <summary>
        <para>Параметры сжатия анимации для ModelImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterAnimationCompression.KeyframeReduction">
      <summary>
        <para>Выполнить сокращение ключевых кадров.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterAnimationCompression.KeyframeReductionAndCompression">
      <summary>
        <para>Выполните сокращение и сжатие ключевых кадров.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterAnimationCompression.Off">
      <summary>
        <para>Без сжатия анимации.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterAnimationCompression.Optimal">
      <summary>
        <para>Выполните сокращение ключевых кадров и выберите наилучшее представление кривой анимации во время выполнения, чтобы уменьшить объем памяти (по умолчанию).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterAnimationType">
      <summary>
        <para>Режим анимации для ModelImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterAnimationType.Generic">
      <summary>
        <para>Создайте общий аниматор.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterAnimationType.Human">
      <summary>
        <para>Создайте аниматора человека.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterAnimationType.Legacy">
      <summary>
        <para>Создайте устаревший тип анимации.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterAnimationType.None">
      <summary>
        <para>Не генерировать данные анимации.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterAvatarSetup">
      <summary>
        <para>Установите режим генерации аватара для ModelImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterAvatarSetup.CopyFromOther">
      <summary>
        <para>Скопируйте аватар из другой модели.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterAvatarSetup.CreateFromThisModel">
      <summary>
        <para>Создайте аватар из этой модели и сохраните его как дополнительный объект.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterAvatarSetup.NoAvatar">
      <summary>
        <para>Отключить создание аватара для этой модели.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterClipAnimation">
      <summary>
        <para>Анимационные клипы, на которые нужно разделить анимацию.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.additiveReferencePoseFrame">
      <summary>
        <para>Аддитивный опорный кадр позы.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.curves">
      <summary>
        <para>Дополнительные кривые, которые будут добавлены в процессе импорта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.cycleOffset">
      <summary>
        <para>Смещение к циклу зацикленной анимации, если другое время в ней должно быть началом.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.events">
      <summary>
        <para>AnimationEvents, которые будут добавлены в процессе импорта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.firstFrame">
      <summary>
        <para>Первый кадр клипа.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.hasAdditiveReferencePose">
      <summary>
        <para>Включите, чтобы определить дополнительную опорную позу.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.heightFromFeet">
      <summary>
        <para>Сохраняет ноги в соответствии с положением корневого преобразования.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.heightOffset">
      <summary>
        <para>Смещение в корневую позицию по вертикали.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.keepOriginalOrientation">
      <summary>
        <para>Сохраняет вертикальное положение, заданное в исходном файле.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.keepOriginalPositionXZ">
      <summary>
        <para>Сохраняет вертикальное положение, заданное в исходном файле.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.keepOriginalPositionY">
      <summary>
        <para>Сохраняет вертикальное положение, заданное в исходном файле.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.lastFrame">
      <summary>
        <para>Последний кадр клипа.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.lockRootHeightY">
      <summary>
        <para>Включите, чтобы вертикальное корневое движение было запечено в движении костей. Отключите, чтобы вертикальное корневое движение сохранялось как корневое движение.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.lockRootPositionXZ">
      <summary>
        <para>Включите, чтобы горизонтальное корневое движение было запечено в движении костей. Отключите, чтобы горизонтальное корневое движение сохранялось как корневое движение.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.lockRootRotation">
      <summary>
        <para>Включите, чтобы корневое вращение было запечено в движении костей. Отключите, чтобы корневое вращение сохранялось как корневое движение.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.loop">
      <summary>
        <para>Является ли клип зацикленной анимацией?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.loopPose">
      <summary>
        <para>Включите, чтобы плавно зациклить движение.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.loopTime">
      <summary>
        <para>Включите, чтобы зациклить клип.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.maskNeedsUpdating">
      <summary>
        <para>Возвращает true, если исходная маска AvatarMask изменилась. Это происходит, только если для параметра ModelImporterClipAnimation.maskType установлено значение ClipAnimationMaskType.CopyFromOther.
Чтобы принудительно перезагрузить маску, просто задайте для параметра ModelImporterClipAnimation.maskSource желаемую маску аватара.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.maskSource">
      <summary>
        <para>AvatarMask, используемый для маскировки преобразований в процессе импорта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.maskType">
      <summary>
        <para>Определите тип маски.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.mirror">
      <summary>
        <para>Зеркальное отражение слева и справа в этом клипе.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.name">
      <summary>
        <para>Название клипа.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.rotationOffset">
      <summary>
        <para>Смещение в градусах относительно корневого поворота.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.takeName">
      <summary>
        <para>Возьми имя.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.wrapMode">
      <summary>
        <para>Режим переноса анимации.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ModelImporterClipAnimation.ConfigureClipFromMask(UnityEngine.AvatarMask)">
      <summary>
        <para>Скопируйте настройки маски из AvatarMask в конфигурацию клипа.</para>
      </summary>
      <param name="mask">AvatarMask, из которого будут импортированы настройки маски.</param>
    </member>
    <member name="M:UnityEditor.ModelImporterClipAnimation.ConfigureMaskFromClip(UnityEngine.AvatarMask&amp;)">
      <summary>
        <para>Скопируйте текущие настройки маскирования из клипа в AvatarMask.</para>
      </summary>
      <param name="mask">AvatarMask, в котором будут сохранены значения маскирования.</param>
    </member>
    <member name="T:UnityEditor.ModelImporterGenerateAnimations">
      <summary>
        <para>Параметры генерации анимации для ModelImporter. Эти параметры относятся к устаревшей системе анимации, их следует использовать только в том случае, если ModelImporter.animationType==ModelImporterAnimationType.Legacy.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterGenerateAnimations.GenerateAnimations">
      <summary>
        <para>Режим импорта анимации по умолчанию (все анимации хранятся в корневом объекте).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterGenerateAnimations.InNodes">
      <summary>
        <para>Создавайте анимацию в объектах, которые анимируются.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterGenerateAnimations.InOriginalRoots">
      <summary>
        <para>Создание анимации в корневых объектах пакета анимации.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterGenerateAnimations.InRoot">
      <summary>
        <para>Создание анимации в корневых объектах преобразования.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterGenerateAnimations.None">
      <summary>
        <para>Не создавать анимацию.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterGenerateMaterials">
      <summary>
        <para>Параметры генерации материалов для ModelImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterGenerateMaterials.None">
      <summary>
        <para>Не создавать материалы.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterGenerateMaterials.PerSourceMaterial">
      <summary>
        <para>Создайте материал для каждого материала в исходном активе.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterGenerateMaterials.PerTexture">
      <summary>
        <para>Создайте материал для каждой используемой текстуры.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterHumanoidOversampling">
      <summary>
        <para>Доступные множители Humanoid Oversampling.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterHumanoidOversampling.X1">
      <summary>
        <para>Множитель передискретизации гуманоида по умолчанию = 1, что эквивалентно отсутствию передискретизации.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterHumanoidOversampling.X2">
      <summary>
        <para>Humanoid Oversampling сэмплирует в 2 раза чаще, чем в импортированном файле.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterHumanoidOversampling.X4">
      <summary>
        <para>Humanoid Oversampling сэмплирует в 4 раза чаще, чем в импортированном файле.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterHumanoidOversampling.X8">
      <summary>
        <para>Семплы Humanoid Oversampling с частотой дискретизации в 8 раз выше, чем в импортированном файле.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterIndexFormat">
      <summary>
        <para>Формат импортированных данных буфера индекса сетки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterIndexFormat.Auto">
      <summary>
        <para>Используйте 16- или 32-битный индексный буфер в зависимости от размера сетки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterIndexFormat.UInt16">
      <summary>
        <para>Использовать 16-битный индексный буфер.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterIndexFormat.UInt32">
      <summary>
        <para>Использовать 32-битный индексный буфер.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterMaterialImportMode">
      <summary>
        <para>Параметры импорта материалов для ModelImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterMaterialImportMode.ImportStandard">
      <summary>
        <para>Импортер модели импортирует материалы в стандартном режиме.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterMaterialImportMode.ImportViaMaterialDescription">
      <summary>
        <para>Включает PreprocessMaterialDescription AssetPostprocessor в текущем модуле импорта.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterMaterialImportMode.None">
      <summary>
        <para>Импортер модели не импортирует материалы.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterMaterialLocation">
      <summary>
        <para>Параметры импорта материалов для ModelImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterMaterialLocation.External">
      <summary>
        <para>Извлеките материалы и текстуры из модели.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterMaterialLocation.InPrefab">
      <summary>
        <para>Unity импортирует материалы как вспомогательные активы.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterMaterialName">
      <summary>
        <para>Параметры именования материалов для ModelImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterMaterialName.BasedOnMaterialName">
      <summary>
        <para>Используйте имя материала вида &lt;materialName&gt;.mat.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterMaterialName.BasedOnModelNameAndMaterialName">
      <summary>
        <para>Используйте имена материалов в форме &lt;modelFileName&gt;-&lt;materialName&gt;.mat.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterMaterialName.BasedOnTextureName">
      <summary>
        <para>Используйте имена материалов в форме &lt;textureName&gt;.mat.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterMaterialName.BasedOnTextureName_Or_ModelNameAndMaterialName">
      <summary>
        <para>&lt;textureName&gt;.mat или &lt;modelFileName&gt;-&lt;materialName&gt;.mat имя материала.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterMaterialSearch">
      <summary>
        <para>Параметры поиска материалов для ModelImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterMaterialSearch.Everywhere">
      <summary>
        <para>Искать во всем проекте.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterMaterialSearch.Local">
      <summary>
        <para>Поиск в локальной папке материалов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterMaterialSearch.RecursiveUp">
      <summary>
        <para>Рекурсивный поиск в папках материалов.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterMeshCompression">
      <summary>
        <para>Параметры сжатия сетки для ModelImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterMeshCompression.High">
      <summary>
        <para>Высокая степень сжатия сетки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterMeshCompression.Low">
      <summary>
        <para>Незначительное сжатие сетки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterMeshCompression.Medium">
      <summary>
        <para>Средняя степень сжатия сетки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterMeshCompression.Off">
      <summary>
        <para>Нет сжатия сетки (по умолчанию).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterNormalCalculationMode">
      <summary>
        <para>Нормальные параметры генерации для ModelImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterNormalCalculationMode.AngleWeighted">
      <summary>
        <para>Нормали взвешиваются по углу вершины на каждой грани.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterNormalCalculationMode.AreaAndAngleWeighted">
      <summary>
        <para>Нормали взвешиваются как по площади лица, так и по углу вершины на каждой грани.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterNormalCalculationMode.AreaWeighted">
      <summary>
        <para>Нормали взвешиваются по площади лица.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterNormalCalculationMode.Unweighted">
      <summary>
        <para>Нормали не взвешиваются.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterNormalCalculationMode.Unweighted_Legacy">
      <summary>
        <para>Нормали не взвешены. Этот параметр использует устаревший алгоритм обработки жестких границ.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterNormals">
      <summary>
        <para>Нормальные параметры генерации для ModelImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterNormals.Calculate">
      <summary>
        <para>Вычислить нормали вершин.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterNormals.Import">
      <summary>
        <para>Импорт нормалей вершин из файла модели (по умолчанию).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterNormals.None">
      <summary>
        <para>Не импортировать нормали вершин.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterNormalSmoothingSource">
      <summary>
        <para>Источник информации о сглаживании для расчета нормалей в ModelImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterNormalSmoothingSource.FromAngle">
      <summary>
        <para>Используйте угол между соседними гранями, чтобы определить, является ли край гладким или жестким.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterNormalSmoothingSource.FromSmoothingGroups">
      <summary>
        <para>Используйте группы сглаживания, чтобы определить, какие края гладкие, а какие жесткие.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterNormalSmoothingSource.None">
      <summary>
        <para>Не создавайте резких краев.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterNormalSmoothingSource.PreferSmoothingGroups">
      <summary>
        <para>Используйте группы сглаживания, если они присутствуют в файле модели, в противном случае используйте угол (по умолчанию).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterSecondaryUVMarginMethod">
      <summary>
        <para>Методы обработки полей во время генерации карты освещения UV в ModelImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterSecondaryUVMarginMethod.Calculate">
      <summary>
        <para>Рассчитайте подходящие поля карты освещения UV на основе ожидаемого разрешения карты освещения и масштаба объекта.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterSecondaryUVMarginMethod.Manual">
      <summary>
        <para>Укажите размер упаковки вручную.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterSkinWeights">
      <summary>
        <para>Параметры веса скина для ModelImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterSkinWeights.Custom">
      <summary>
        <para>Импорт произвольного количества костей на вершину.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterSkinWeights.Standard">
      <summary>
        <para>Импортируйте стандартное количество костей на вершину (в настоящее время 4).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterTangents">
      <summary>
        <para>Параметры генерации касательной к вершине для ModelImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterTangents.CalculateLegacy">
      <summary>
        <para>Вычислить касательные с помощью устаревшего алгоритма.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterTangents.CalculateLegacyWithSplitTangents">
      <summary>
        <para>Вычислить касательные с помощью устаревшего алгоритма с разделением на UV-диаграммы.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterTangents.CalculateMikk">
      <summary>
        <para>Расчет касательных с помощью MikkTSpace (по умолчанию).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterTangents.Import">
      <summary>
        <para>Импортировать касательные вершины из файла модели.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterTangents.None">
      <summary>
        <para>Не импортировать касательные к вершинам.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterTangentSpaceMode">
      <summary>
        <para>Параметры создания касательного пространства для ModelImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterTangentSpaceMode.Calculate">
      <summary>
        <para>Вычислить касательные.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterTangentSpaceMode.Import">
      <summary>
        <para>Импорт нормалей/касательных из файла.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterTangentSpaceMode.None">
      <summary>
        <para>Нормали/касательные полосы.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MonoImporter">
      <summary>
        <para>Представляет сценарий C# в проекте.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MonoImporter.GetAllRuntimeMonoScripts">
      <summary>
        <para>Получает массив сценариев, которые будут доступны во время выполнения.</para>
      </summary>
      <returns>
        <para>Возвращает массив скриптов.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MonoImporter.GetDefaultReference(System.String)">
      <summary>
        <para>Получает значение по умолчанию для поля ссылки в импортированном MonoScript.</para>
      </summary>
      <param name="name">Имя общедоступного поля в импортированном MonoScript.</param>
      <returns>
        <para>Объект Unity для использования в качестве значения по умолчанию для данного поля ссылки.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MonoImporter.GetExecutionOrder(UnityEditor.MonoScript)">
      <summary>
        <para>Получает порядок выполнения для MonoScript.</para>
      </summary>
      <param name="script">Сценарий для получения порядка выполнения.</param>
      <returns>
        <para>Возвращает порядок выполнения для данного MonoScript.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MonoImporter.GetIcon">
      <summary>
        <para>Получает значок для связи с импортированным MonoScript.</para>
      </summary>
      <returns>
        <para>Возвращает пользовательский значок, который будет связан с импортированным MonoScript. Если никакой пользовательский значок не будет связан с импортированным MonoScript, возвращает значение null.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MonoImporter.GetScript">
      <summary>
        <para>Получает импортированный MonoScript. Если импортированный файл C# содержит несколько классов, возвращается первый из них.</para>
      </summary>
      <returns>
        <para>Возвращает импортированный скрипт.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MonoImporter.SetDefaultReferences(System.String[],UnityEngine.Object[])">
      <summary>
        <para>Задает ссылки по умолчанию для этого моноскрипта.</para>
      </summary>
      <param name="name">Массив имен общедоступных полей в импортированном MonoScript. Тип каждого поля должен быть производным от UnityEngine.Object.</param>
      <param name="target">Массив объектов для использования в качестве значений по умолчанию. Размер массива должен соответствовать размеру массива имен. Массив может содержать нулевые значения.</param>
    </member>
    <member name="M:UnityEditor.MonoImporter.SetExecutionOrder(UnityEditor.MonoScript,System.Int32)">
      <summary>
        <para>Устанавливает порядок выполнения для MonoScript. Этот метод заставляет Unity повторно импортировать MonoImporter для целевого скрипта.</para>
      </summary>
      <param name="script">Сценарий, для которого устанавливается порядок выполнения.</param>
      <param name="order">Порядок выполнения данного MonoScript.</param>
    </member>
    <member name="M:UnityEditor.MonoImporter.SetIcon(UnityEngine.Texture2D)">
      <summary>
        <para>Устанавливает пользовательский значок для связи с импортированным MonoScript.</para>
      </summary>
      <param name="icon">Пользовательский значок для связи с импортированным MonoScript. Когда значение равно null, Unity восстанавливает значок по умолчанию.</param>
    </member>
    <member name="T:UnityEditor.MonoScript">
      <summary>
        <para>Представление ресурсов скрипта.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MonoScript.FromMonoBehaviour(UnityEngine.MonoBehaviour)">
      <summary>
        <para>Возвращает объект MonoScript, содержащий указанный MonoBehaviour.</para>
      </summary>
      <param name="behaviour">MonoBehaviour, для которого должен быть возвращен MonoScript.</param>
    </member>
    <member name="M:UnityEditor.MonoScript.FromScriptableObject(UnityEngine.ScriptableObject)">
      <summary>
        <para>Возвращает объект MonoScript, содержащий указанный ScriptableObject.</para>
      </summary>
      <param name="scriptableObject">ScriptableObject, для которого должен быть возвращен MonoScript.</param>
    </member>
    <member name="M:UnityEditor.MonoScript.GetClass">
      <summary>
        <para>Возвращает объект System.Type класса, реализованного этим скриптом.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MouseCursor">
      <summary>
        <para>Пользовательские формы курсора мыши, используемые с EditorGUIUtility.AddCursorRect.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.Arrow">
      <summary>
        <para>Обычная стрелка-указатель.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.ArrowMinus">
      <summary>
        <para>Стрелка со знаком минус рядом с ней.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.ArrowPlus">
      <summary>
        <para>Стрелка со значком плюса рядом с ней.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.CustomCursor">
      <summary>
        <para>Текущий пользовательский курсор.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.FPS">
      <summary>
        <para>Курсор с глазом и стилизованными клавишами со стрелками для навигации в FPS.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.Link">
      <summary>
        <para>Стрелка со значком ссылки (для назначения указателей).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.MoveArrow">
      <summary>
        <para>Стрелка с символом перемещения рядом с ней для вида сцены.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.Orbit">
      <summary>
        <para>Курсор с прицелом на орбиту.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.Pan">
      <summary>
        <para>Курсор с тянущейся рукой для панорамирования.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.ResizeHorizontal">
      <summary>
        <para>Горизонтальные стрелки изменения размера.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.ResizeUpLeft">
      <summary>
        <para>Изменить размер вверх-влево для краев окна.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.ResizeUpRight">
      <summary>
        <para>Изменение размера вверх-вправо для краев окна.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.ResizeVertical">
      <summary>
        <para>Вертикальные стрелки изменения размера.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.RotateArrow">
      <summary>
        <para>Стрелка с символом поворота рядом с ней для вида сцены.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.ScaleArrow">
      <summary>
        <para>Стрелка с символом масштаба рядом с ней для вида сцены.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.SlideArrow">
      <summary>
        <para>Стрелка с маленькими стрелками для обозначения скольжения по числовым полям.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.SplitResizeLeftRight">
      <summary>
        <para>Стрелки влево-вправо для изменения размера оконных разделителей.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.SplitResizeUpDown">
      <summary>
        <para>Стрелки вверх-вниз для изменения размера оконных разделителей.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.Text">
      <summary>
        <para>Текстовый курсор.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.Zoom">
      <summary>
        <para>Курсор с увеличительным стеклом для увеличения.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MPE.ChannelClient">
      <summary>
        <para>ChannelClient — это клиент WebSocket, который подключается к ChannelService Unity, который является сервером WebSocket.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MPE.ChannelClient.channelName">
      <summary>
        <para>Имя канала, к которому подключен этот ChannelClient. Имя соответствует маршруту URL-адреса, используемого для подключения к ChannelService Unity. Например, 127.0.0.1:8928/&lt;имя моего канала&gt;.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MPE.ChannelClient.clientId">
      <summary>
        <para>Идентификатор канала, который по сути является хэшем имени канала. См. ChannelService.ChannelNameToId.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MPE.ChannelClient.isAutoTick">
      <summary>
        <para>Указывает, обрабатывает ли Unity (отмечает) входящие и исходящие сообщения этого ChannelClient автоматически или пользователь обрабатывает (отмечает) их вручную либо в основном потоке, либо в выделенном потоке.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.Close">
      <summary>
        <para>Закрывает ChannelClient. Это закрывает клиент WebSocket, но не канал в ChannelService. Другие ChannelClient по-прежнему могут подключаться к тому же каналу.</para>
      </summary>
      <param name="channelName">Имя канала, который нужно закрыть.</param>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.Close(System.String)">
      <summary>
        <para>Закрывает ChannelClient. Это закрывает клиент WebSocket, но не канал в ChannelService. Другие ChannelClient по-прежнему могут подключаться к тому же каналу.</para>
      </summary>
      <param name="channelName">Имя канала, который нужно закрыть.</param>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.GetChannelClientInfo">
      <summary>
        <para>Получает ChannelClientInfo для определенного канала.</para>
      </summary>
      <param name="channelName">Имя канала для получения информации.</param>
      <param name="clientId">Идентификатор канала, о котором требуется получить информацию.</param>
      <returns>
        <para>Структура, описывающая канал.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.GetChannelClientInfo(System.String)">
      <summary>
        <para>Получает ChannelClientInfo для определенного канала.</para>
      </summary>
      <param name="channelName">Имя канала для получения информации.</param>
      <param name="clientId">Идентификатор канала, о котором требуется получить информацию.</param>
      <returns>
        <para>Структура, описывающая канал.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.GetChannelClientInfo(System.Int32)">
      <summary>
        <para>Получает ChannelClientInfo для определенного канала.</para>
      </summary>
      <param name="channelName">Имя канала для получения информации.</param>
      <param name="clientId">Идентификатор канала, о котором требуется получить информацию.</param>
      <returns>
        <para>Структура, описывающая канал.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.GetChannelClientList">
      <summary>
        <para>Получает информацию для всех ChannelClient, работающих на одном экземпляре Unity.</para>
      </summary>
      <returns>
        <para>Список ChannelClientInfo для всех клиентов.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.GetOrCreateClient(System.String)">
      <summary>
        <para>Создает новый ChannelClient на определенном канале. Если клиент уже существует, этот метод получает клиента.</para>
      </summary>
      <param name="channelName">Название канала, который нужно открыть. Это соответствует последней части URL-адреса WebSocket. Например, "127.0.0.1:9090/&lt;channelName&gt;".</param>
      <returns>
        <para>Экземпляр только что созданного или существующего ChannelClient.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.IsConnected">
      <summary>
        <para>Проверяет, подключен ли ChannelClient к ChannelService.</para>
      </summary>
      <returns>
        <para>Возвращает true, если соединение установлено, и false в противном случае.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.NewRequestId">
      <summary>
        <para>Создает уникальный идентификатор запроса для этого ChannelClient в этом экземпляре Unity. Дополнительные сведения о запросах см. в разделе ChannelClient.Request.</para>
      </summary>
      <param name="clientId">Идентификатор ChannelClient для создания запроса.</param>
      <returns>
        <para>Идентификатор запроса.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.NewRequestId(System.Int32)">
      <summary>
        <para>Создает уникальный идентификатор запроса для этого ChannelClient в этом экземпляре Unity. Дополнительные сведения о запросах см. в разделе ChannelClient.Request.</para>
      </summary>
      <param name="clientId">Идентификатор ChannelClient для создания запроса.</param>
      <returns>
        <para>Идентификатор запроса.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.RegisterMessageHandler(System.Action`1&lt;System.String&gt;)">
      <summary>
        <para>Регистрирует новый обработчик на конкретном канале. Новый обработчик вызывается всякий раз, когда сообщение отправляется в ChannelClient.</para>
      </summary>
      <param name="handler">Обработчик всех входящих сообщений на указанном канале.</param>
      <returns>
        <para>Действие, которое при вызове отменяет регистрацию обработчика ChannelClient (см. ChannelClient.UnregisterMessageHandler).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.RegisterMessageHandler(System.Action`1&lt;System.Byte[]&gt;)">
      <summary>
        <para>Регистрирует новый обработчик на конкретном канале. Новый обработчик вызывается всякий раз, когда сообщение отправляется в ChannelClient.</para>
      </summary>
      <param name="handler">Обработчик всех входящих сообщений на указанном канале.</param>
      <returns>
        <para>Действие, которое при вызове отменяет регистрацию обработчика ChannelClient (см. ChannelClient.UnregisterMessageHandler).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.Send(System.String)">
      <summary>
        <para>Отправляет ASCII или двоичное сообщение в ChannelService. В зависимости от того, как обработчик канала обрабатывает сообщение, оно также может быть отправлено другим соединениям.</para>
      </summary>
      <param name="data">Данные для отправки.</param>
      <param name="connectionId">Идентификатор соединения клиента, отправляющего данные.</param>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.Send(System.Byte[])">
      <summary>
        <para>Отправляет ASCII или двоичное сообщение в ChannelService. В зависимости от того, как обработчик канала обрабатывает сообщение, оно также может быть отправлено другим соединениям.</para>
      </summary>
      <param name="data">Данные для отправки.</param>
      <param name="connectionId">Идентификатор соединения клиента, отправляющего данные.</param>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.Send(System.Int32,System.Byte[])">
      <summary>
        <para>Отправляет ASCII или двоичное сообщение в ChannelService. В зависимости от того, как обработчик канала обрабатывает сообщение, оно также может быть отправлено другим соединениям.</para>
      </summary>
      <param name="data">Данные для отправки.</param>
      <param name="connectionId">Идентификатор соединения клиента, отправляющего данные.</param>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.Shutdown">
      <summary>
        <para>Закрывает все ChannelClient в этом экземпляре Unity.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.Start(System.Boolean)">
      <summary>
        <para>Запускает существующий ChannelClient, чтобы он прослушивал входящие и исходящие сообщения.</para>
      </summary>
      <param name="autoTick">Указывает, обрабатывает ли Unity (отмечает) входящие и исходящие сообщения этого ChannelClient автоматически или пользователь обрабатывает (отмечает) их вручную либо в основном потоке, либо в выделенном потоке.</param>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.Stop">
      <summary>
        <para>Не позволяет конкретному ChannelClient прослушивать новые сообщения. Это отличается от ChannelClient.Close, поскольку вы можете перезапустить клиент канала с помощью ChannelClient.Start.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.Tick">
      <summary>
        <para>Помечает ChannelClient. Когда вы вызываете этот метод, он проверяет, нужно ли обрабатывать какие-либо входящие сообщения с сервера и нужно ли отправлять какие-либо исходящие сообщения на сервер.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.UnregisterMessageHandler(System.Action`1&lt;System.String&gt;)">
      <summary>
        <para>Отменяет регистрацию определенного обработчика канала в ChannelClient.</para>
      </summary>
      <param name="handler">Обработчик отмены регистрации.</param>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.UnregisterMessageHandler(System.Action`1&lt;System.Byte[]&gt;)">
      <summary>
        <para>Отменяет регистрацию определенного обработчика канала в ChannelClient.</para>
      </summary>
      <param name="handler">Обработчик отмены регистрации.</param>
    </member>
    <member name="T:UnityEditor.MPE.ChannelClientInfo">
      <summary>
        <para>Структура, содержащая все данные подключения ChannelClient.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MPE.ChannelClientInfo.clientId">
      <summary>
        <para>Идентификатор канала канала (см. ChannelClient.clientId).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MPE.ChannelClientInfo.connectionId">
      <summary>
        <para>Идентификатор подключения ChannelClient.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MPE.ChannelClientInfo.name">
      <summary>
        <para>Имя ChannelClient (см. ChannelClient.channelName. Это соответствует маршруту URL-адреса, подключающегося к ChannelService. Например, "127.0.0.1:9292/&lt;channelName&gt;".</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MPE.ChannelClientScope">
      <summary>
        <para>Область, которую можно использовать для открытия клиента канала на определенном канале и закрытия канала, когда область заканчивается.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MPE.ChannelClientScope.client">
      <summary>
        <para>Получить клиент Chanel этой области.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClientScope.#ctor(System.Boolean,System.String,System.Action`1&lt;System.String&gt;,System.Boolean)">
      <summary>
        <para>Создайте новую область клиента канала.</para>
      </summary>
      <param name="autoTick">Если true, клиент канала запускается в режиме автоматической галочки.</param>
      <param name="channelName">Имя открываемого канала.</param>
      <param name="handler">Обработчик для обработки сообщения на канале.</param>
      <param name="closeClientOnExit">Если true, закрывает клиент при выходе.</param>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClientScope.#ctor(System.Boolean,System.String,System.Action`1&lt;System.Byte[]&gt;,System.Boolean)">
      <summary>
        <para>Создайте новую область клиента канала.</para>
      </summary>
      <param name="autoTick">Если true, клиент канала запускается в режиме автоматической галочки.</param>
      <param name="channelName">Имя открываемого канала.</param>
      <param name="handler">Обработчик для обработки сообщения на канале.</param>
      <param name="closeClientOnExit">Если true, закрывает клиент при выходе.</param>
    </member>
    <member name="T:UnityEditor.MPE.ChannelInfo">
      <summary>
        <para>Структура, содержащая информацию о подключении канала в ChannelService.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MPE.ChannelInfo.id">
      <summary>
        <para>Идентификатор конкретного канала. Обычно это хэш имени канала.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MPE.ChannelInfo.name">
      <summary>
        <para>Название канала. Это соответствует маршруту URL-адреса, который подключается к ChannelService. Например, "127.0.0.1:9292/&lt;channelName&gt;".</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MPE.ChannelScope">
      <summary>
        <para>Область, которую нельзя использовать для открытия канала и которая закроет канал, когда область действия закончится.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MPE.ChannelService">
      <summary>
        <para>ChannelService инкапсулирует сервер WebSocket, работающий в Unity.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.Broadcast(System.Int32,System.Byte[])">
      <summary>
        <para>Отправляет сообщение всем соединениям ChannelClient определенного канала.</para>
      </summary>
      <param name="channelId">ID канала для отправки сообщения.</param>
      <param name="data">Сообщение для отправки. Он может быть двоичным или UTF8.</param>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.Broadcast(System.Int32,System.String)">
      <summary>
        <para>Отправляет сообщение всем соединениям ChannelClient определенного канала.</para>
      </summary>
      <param name="channelId">ID канала для отправки сообщения.</param>
      <param name="data">Сообщение для отправки. Он может быть двоичным или UTF8.</param>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.BroadcastBinary(System.Int32,System.Byte[])">
      <summary>
        <para>Отправляет сообщение всем соединениям ChannelClient определенного канала.</para>
      </summary>
      <param name="channelId">ID канала для отправки сообщения.</param>
      <param name="data">Двоичные данные для отправки.</param>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.ChannelNameToId(System.String)">
      <summary>
        <para>Закрывает определенный канал и все подключения к этому каналу.</para>
      </summary>
      <param name="channelName">Имя канала.</param>
      <returns>
        <para>Идентификатор канала.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.CloseChannel(System.String)">
      <summary>
        <para>Закрывает определенный канал и все подключения к этому каналу.</para>
      </summary>
      <param name="channelName">Имя канала, который нужно закрыть.</param>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.GetAddress">
      <summary>
        <para>Получает адрес ChannelService. Это всегда местный адрес. Например, 127.0.0.1.</para>
      </summary>
      <returns>
        <para>Адрес, по которому ChannelService прослушивает новые соединения.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.GetChannelClientList">
      <summary>
        <para>Получает список всех клиентов канала, подключенных к ChannelService.</para>
      </summary>
      <returns>
        <para>Список, содержащий ChannelInfo для каждого клиента канала.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.GetChannelList">
      <summary>
        <para>Получает список каналов, открытых в ChannelService. По умолчанию ChannelService всегда имеет канал «состояние» и канал «события».</para>
      </summary>
      <returns>
        <para>Список, содержащий ChannelInfo для каждого открытого канала.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.GetOrCreateChannel(System.String,System.Action`2&lt;System.Int32,System.Byte[]&gt;)">
      <summary>
        <para>Получает или создает новый канал.</para>
      </summary>
      <param name="channelName">Имя канала для извлечения.</param>
      <param name="handler">Обработчик канала для регистрации.</param>
      <returns>
        <para>Это действие можно вызвать, чтобы отменить регистрацию обработчика в канале (см. ChannelService.UnregisterMessageHandler).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.GetPort">
      <summary>
        <para>Получает порт, на котором работает ChannelService. Этот порт выбирается случайным образом при первом запуске ChannelService. В качестве альтернативы вы можете указать порт из командной строки, используя переключатель --ump-channel-service-port &lt;portNumber&gt;.</para>
      </summary>
      <returns>
        <para>Номер порта ChannelService.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.IsRunning">
      <summary>
        <para>Проверяет, работает ли ChannelService и прослушивает ли новые соединения..</para>
      </summary>
      <returns>
        <para>Истина, если служба запущена, и ложь, если нет.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.RegisterMessageHandler(System.String,System.Action`2&lt;System.Int32,System.Byte[]&gt;)">
      <summary>
        <para>Регистрирует обработчик для обработки всех входящих сообщений на указанном канале.</para>
      </summary>
      <param name="channelName">Название канала.</param>
      <param name="handler">Обработчик, обрабатывающий сообщения.</param>
      <returns>
        <para>Действие, которое можно использовать для отмены регистрации обработчика в обработке сообщений (см. ChannelService.UnregisterMessageHandler).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.Send(System.Int32,System.Byte[])">
      <summary>
        <para>Отправляет сообщение на определенное соединение. Сообщение может быть двоичным или UTF8.</para>
      </summary>
      <param name="connectionId">Идентификатор соединения. Это соответствует ChannelClientInfo.channelClientId.</param>
      <param name="data">Данные для отправки подключенному клиенту.</param>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.Send(System.Int32,System.String)">
      <summary>
        <para>Отправляет сообщение на определенное соединение. Сообщение может быть двоичным или UTF8.</para>
      </summary>
      <param name="connectionId">Идентификатор соединения. Это соответствует ChannelClientInfo.channelClientId.</param>
      <param name="data">Данные для отправки подключенному клиенту.</param>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.Start">
      <summary>
        <para>Запускает ChannelService. После запуска ChannelService он прослушивает соединение по URL-адресу, предоставленному: &lt;ChannelService Address&gt;:&lt;ChannelServicePort&gt;&lt;channelName&gt;, например, 127.0.0.1:9976events. См. ChannelService.GetAddress и ChannelService.GetPort.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.Stop">
      <summary>
        <para>Запрещает ChannelService прослушивать соединения и закрывает все уже установленные соединения.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.UnregisterMessageHandler(System.String,System.Action`2&lt;System.Int32,System.Byte[]&gt;)">
      <summary>
        <para>Отменяет регистрацию определенного обработчика в канале.</para>
      </summary>
      <param name="channelName">Канал, на котором прекращается обработка сообщений.</param>
      <param name="handler">Обработчик отмены регистрации.</param>
    </member>
    <member name="T:UnityEditor.MPE.EventDataSerialization">
      <summary>
        <para>Тип сериализации для отправки сообщения с аргументами с помощью EventService. Дополнительные сведения о сериализации аргументов см. в разделах ChannelService.Broadcast и ChannelService.Emit.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MPE.EventDataSerialization.JsonUtility">
      <summary>
        <para>Используйте JsonUtility.ToJson для сериализации аргумента сообщения. К сообщению добавляются дополнительные метаданные, чтобы указать, в какой тип нужно преобразовать JSON при его получении.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MPE.EventDataSerialization.StandardJson">
      <summary>
        <para>Используйте обычный JSON для отправки сообщения с помощью [[EventService]. Принимающий обработчик получает объекты JSON (Dictionary&lt;string, object&gt;, List&lt;object&gt;, примитивные типы) в качестве аргументов своего ChannelHandler.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MPE.EventService">
      <summary>
        <para>EventService — это одноэлементная реализация ChannelClient, которая работает на всех экземплярах Unity. Он подключен к каналу «события» и позволяет экземпляру Unity отправлять сообщения JSON другим службам EventServices во внешнем процессе или другим экземплярам Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MPE.EventService.isConnected">
      <summary>
        <para>Служба EventService подключена к каналу «events» службы ChannelService.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MPE.EventService.CancelRequest(System.String,System.String)">
      <summary>
        <para>Проверяет, есть ли отложенный запрос на конкретное событие и, если есть, отменяет его. Дополнительные сведения о запросе см. в разделе EventService.Request.</para>
      </summary>
      <param name="eventType">Отменяемое событие.</param>
      <param name="message">Сообщение об ошибке, отправленное в ожидающий запрос.</param>
      <returns>
        <para>Возвращает true, если ожидающий запрос был найден и отменен, иначе false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.EventService.Clear">
      <summary>
        <para>Удалить все ожидающие запросы.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MPE.EventService.Close">
      <summary>
        <para>Закрывает службу EventService, разрывает соединения с ChannelService и гарантирует, что обработчики больше не обрабатываются.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MPE.EventService.Emit(System.String,System.Object,System.Int32,UnityEditor.MPE.EventDataSerialization)">
      <summary>
        <para>Отправляет сообщение «выстрелил и забыл» всем ChannelClient, подключенным к маршруту «events».</para>
      </summary>
      <param name="eventType">Имя типа сообщения.</param>
      <param name="args">Аргументы, отправленные с сообщением.</param>
      <param name="targetId">Когда вы отправляете событие в определенное соединение, это идентификатор соединения. По умолчанию установлено значение -1, которое отправляет сообщение всем другим службам EventServices.</param>
      <param name="eventDataSerialization">Указывает, как сериализовать аргументы запроса. Это может быть стандартный JSON или JSON с аннотацией JsonUtility. Вы можете использовать последний для преобразования аргумента в конкретный объект Unity, который поддерживает JsonUtility.FromJson.</param>
    </member>
    <member name="M:UnityEditor.MPE.EventService.Emit(System.String,System.Object[],System.Int32,UnityEditor.MPE.EventDataSerialization)">
      <summary>
        <para>Отправляет сообщение «выстрелил и забыл» всем ChannelClient, подключенным к маршруту «events».</para>
      </summary>
      <param name="eventType">Имя типа сообщения.</param>
      <param name="args">Аргументы, отправленные с сообщением.</param>
      <param name="targetId">Когда вы отправляете событие в определенное соединение, это идентификатор соединения. По умолчанию установлено значение -1, которое отправляет сообщение всем другим службам EventServices.</param>
      <param name="eventDataSerialization">Указывает, как сериализовать аргументы запроса. Это может быть стандартный JSON или JSON с аннотацией JsonUtility. Вы можете использовать последний для преобразования аргумента в конкретный объект Unity, который поддерживает JsonUtility.FromJson.</param>
    </member>
    <member name="M:UnityEditor.MPE.EventService.IsRequestPending(System.String)">
      <summary>
        <para>Проверяет, ожидает ли запрос определенного события. Дополнительные сведения о запросе см. в разделе EventService.Request.</para>
      </summary>
      <param name="eventType">Название типа события.</param>
      <returns>
        <para>Истинно, если есть ожидающий запрос для этого события. False в противном случае.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.EventService.Log(System.String)">
      <summary>
        <para>Отправляет сообщение журнала в ChannelService. Сообщения журнала печатаются в окне консоли.</para>
      </summary>
      <param name="msg">Сообщение для отправки.</param>
      <param name="logType">Тип сообщения (например, информация, предупреждение или ошибка).</param>
    </member>
    <member name="M:UnityEditor.MPE.EventService.Log(System.String,UnityEngine.LogType)">
      <summary>
        <para>Отправляет сообщение журнала в ChannelService. Сообщения журнала печатаются в окне консоли.</para>
      </summary>
      <param name="msg">Сообщение для отправки.</param>
      <param name="logType">Тип сообщения (например, информация, предупреждение или ошибка).</param>
    </member>
    <member name="M:UnityEditor.MPE.EventService.RegisterEventHandler(System.String,System.Action`2&lt;System.String,System.Object[]&gt;)">
      <summary>
        <para>Регистрирует обработчик для определенного типа события. Обработчик вызывается всякий раз, когда отправляется сообщение указанного типа. Сообщения отправляются с помощью EventService.Emit или EventService.Request.</para>
      </summary>
      <param name="eventType">Имя типа события.</param>
      <param name="handler">Обработчик.</param>
      <returns>
        <para>Действие, которое при вызове отменяет регистрацию обработчика (см. EventService.Off).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.EventService.RegisterEventHandler(System.String,System.Func`3&lt;System.String,System.Object[],System.Object&gt;)">
      <summary>
        <para>Регистрирует обработчик для определенного типа события. Обработчик вызывается всякий раз, когда отправляется сообщение указанного типа. Сообщения отправляются с помощью EventService.Emit или EventService.Request.</para>
      </summary>
      <param name="eventType">Имя типа события.</param>
      <param name="handler">Обработчик.</param>
      <returns>
        <para>Действие, которое при вызове отменяет регистрацию обработчика (см. EventService.Off).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.EventService.Request(System.String,System.Action`2&lt;System.Exception,System.Object[]&gt;,System.Object,System.Int64,UnityEditor.MPE.EventDataSerialization)">
      <summary>
        <para>Отправляет запрос всем подключенным клиентам на канале «события».</para>
      </summary>
      <param name="eventType">Имя типа события запроса.</param>
      <param name="promiseHandler">Обработчик, вызываемый, когда запрос либо выполняется, либо отменяется, либо истекает время ожидания.</param>
      <param name="args">Аргументы, отправленные с событием запроса.</param>
      <param name="timeoutInMs">Значение тайм-аута в миллисекундах. По истечении этого времени Запрос считается отмененным.</param>
      <param name="eventDataSerialization">Указывает, как сериализовать аргументы запроса. Это может быть стандартный JSON или JSON с аннотацией JsonUtility. Вы можете использовать последний для преобразования аргумента в конкретный объект Unity, который поддерживает JsonUtility.FromJson.</param>
    </member>
    <member name="M:UnityEditor.MPE.EventService.Request(System.String,System.Action`2&lt;System.Exception,System.Object[]&gt;,System.Object[],System.Int64,UnityEditor.MPE.EventDataSerialization)">
      <summary>
        <para>Отправляет запрос всем подключенным клиентам на канале «события».</para>
      </summary>
      <param name="eventType">Имя типа события запроса.</param>
      <param name="promiseHandler">Обработчик, вызываемый, когда запрос либо выполняется, либо отменяется, либо истекает время ожидания.</param>
      <param name="args">Аргументы, отправленные с событием запроса.</param>
      <param name="timeoutInMs">Значение тайм-аута в миллисекундах. По истечении этого времени Запрос считается отмененным.</param>
      <param name="eventDataSerialization">Указывает, как сериализовать аргументы запроса. Это может быть стандартный JSON или JSON с аннотацией JsonUtility. Вы можете использовать последний для преобразования аргумента в конкретный объект Unity, который поддерживает JsonUtility.FromJson.</param>
    </member>
    <member name="M:UnityEditor.MPE.EventService.Start">
      <summary>
        <para>Запускает EventService, чтобы он прослушивал новые сообщения.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MPE.EventService.Tick">
      <summary>
        <para>Помечает EventService. Это обрабатывает все входящие и исходящие сообщения. По умолчанию EventService помечен для каждого EditorApplication.update.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MPE.EventService.UnregisterEventHandler(System.String,System.Func`3&lt;System.String,System.Object[],System.Object&gt;)">
      <summary>
        <para>Отменяет регистрацию обработчика определенного события.</para>
      </summary>
      <param name="eventType">Событие, для которого нужно отменить регистрацию.</param>
      <param name="handler">Обработчик отмены регистрации.</param>
    </member>
    <member name="T:UnityEditor.MPE.ProcessEvent">
      <summary>
        <para>Перечисление, представляющее события, которые может получать RoleProvider.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MPE.ProcessEvent.AfterDomainReload">
      <summary>
        <para>Происходит перезагрузка домена.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MPE.ProcessEvent.Create">
      <summary>
        <para>Создается новый процесс.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MPE.ProcessEvent.Initialize">
      <summary>
        <para>Инициализируется новый процесс.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MPE.ProcessEvent.Shutdown">
      <summary>
        <para>Новый процесс вот-вот завершится.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MPE.ProcessLevel">
      <summary>
        <para>Тип текущего процесса. Это может быть главный экземпляр Unity или дополнительный экземпляр, подключенный к главному.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MPE.ProcessLevel.Main">
      <summary>
        <para>Текущий процесс является основным экземпляром UnityEditor.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MPE.ProcessLevel.Secondary">
      <summary>
        <para>Текущий процесс является вторичным экземпляром UnityEditor, подключенным к главному экземпляру.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MPE.ProcessService">
      <summary>
        <para>*Это экспериментальная функция.* ProcessService позволяет запускать подчиненный экземпляр UnityEditor, открытый для того же проекта, что и главный экземпляр, с определенным атрибутом RoleProviderAttribute.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MPE.ProcessService.level">
      <summary>
        <para>Уровень ProcessLevel работающего экземпляра UnityEditor.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MPE.ProcessService.roleName">
      <summary>
        <para>Имя роли запущенного процесса UnityEditor. Дополнительные сведения о том, как зарегистрировать обработчики для определенной роли процесса, см. в разделе RoleProviderAttribute. Для процесса UnityEditor уровня ProcessLevel Master имя_роли всегда пусто.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MPE.ProcessService.DisableProfileConnection">
      <summary>
        <para>Закрывает соединение с профилировщиком.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MPE.ProcessService.EnableProfileConnection(System.String)">
      <summary>
        <para>Разрешает подключение к Profiler. Автономный Profiler использует этот метод.</para>
      </summary>
      <param name="dataPath">Где сохранять данные профилирования. Обычно это значение Application.dataPath.</param>
      <returns>
        <para>Больше 0 в случае успеха.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ProcessService.GetProcessState(System.Int32)">
      <summary>
        <para>Получает ProcessState данного экземпляра UnityEditor.</para>
      </summary>
      <param name="pid">Идентификатор процесса.</param>
      <returns>
        <para>Состояние запрошенного процесса.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ProcessService.HasCapability(System.String)">
      <summary>
        <para>Проверяет, имеет ли текущий процесс заданную возможность.</para>
      </summary>
      <param name="capName">Имя возможности.</param>
      <returns>
        <para>Истинно, если у процесса есть возможность. False в противном случае.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ProcessService.IsChannelServiceStarted">
      <summary>
        <para>Проверяет, запущен ли уже ChannelService.</para>
      </summary>
      <returns>
        <para>Истинно, если ChannelService запущен. False в противном случае.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ProcessService.Launch(System.String,System.String[])">
      <summary>
        <para>Запускает дополнительный экземпляр UnityEditor в том же проекте, что и главный экземпляр.</para>
      </summary>
      <param name="roleName">Имя, соответствующее атрибуту RoleProviderAttribute запускаемого процесса.</param>
      <param name="keyValuePairs">Аргументы, переданные подчиненному процессу.</param>
      <returns>
        <para>Идентификатор подчиненного процесса. Значение 0 означает, что подчиненный процесс не может быть запущен.</para>
      </returns>
    </member>
    <member name="?:UnityEditor.MPE.ProcessService.ProcessExitedEvent(System.Action`2&lt;System.Int32,UnityEditor.MPE.ProcessState&gt;)">
      <summary>
        <para>Событие, инициированное в главном экземпляре UnityEditor при запуске подчиненного экземпляра с выходом ProcessService.Launch.</para>
      </summary>
      <param name="value">Первый параметр — это идентификатор процесса (PID) завершившегося подчиненного процесса. Второй параметр — это ProcessState подчиненного процесса.</param>
    </member>
    <member name="M:UnityEditor.MPE.ProcessService.ReadParameter(System.String)">
      <summary>
        <para>Вспомогательная функция для чтения аргументов командной строки, переданных текущему процессу.</para>
      </summary>
      <param name="paramName">Конкретное имя параметра командной строки.</param>
      <returns>
        <para>Значение параметра. Если он пуст, параметр не использовался в командной строке.</para>
      </returns>
    </member>
    <member name="?:UnityEditor.MPE.ProcessService.SlaveProcessExitedEvent(System.Action`2&lt;System.Int32,UnityEditor.MPE.ProcessState&gt;)">
      <summary>
        <para>Событие, инициированное в главном экземпляре UnityEditor при запуске подчиненного экземпляра с выходом ProcessService.LaunchSlave.</para>
      </summary>
      <param name="value">Первый параметр — это идентификатор процесса (PID) завершившегося подчиненного процесса. Второй параметр — это ProcessState подчиненного процесса.</param>
    </member>
    <member name="M:UnityEditor.MPE.ProcessService.Terminate(System.Int32)">
      <summary>
        <para>Завершает процесс редактирования.</para>
      </summary>
      <param name="pid">Идентификатор процесса, который нужно завершить.</param>
    </member>
    <member name="T:UnityEditor.MPE.ProcessState">
      <summary>
        <para>Описывает состояние конкретного процесса UnityEditor.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MPE.ProcessState.FinishedSuccessfully">
      <summary>
        <para>Запрошенный процесс UnityEditor успешно завершен.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MPE.ProcessState.FinishedWithError">
      <summary>
        <para>Запрошенный процесс UnityEditor завершился с ошибкой.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MPE.ProcessState.Running">
      <summary>
        <para>Запрошенный процесс UnityEditor запущен.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MPE.ProcessState.UnknownProcess">
      <summary>
        <para>Запрошенный процесс UnityEditor неизвестен.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MPE.RoleProviderAttribute">
      <summary>
        <para>Атрибут, используемый для оформления функции, которая определяет, как подчиненный процесс может взаимодействовать с основным экземпляром Unity.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MPE.RoleProviderAttribute.eventType">
      <summary>
        <para>Событие, инициированное процессом.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MPE.RoleProviderAttribute.level">
      <summary>
        <para>Уровень процесса (главный или подчиненный), на котором зарегистрирован обработчик.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MPE.RoleProviderAttribute.name">
      <summary>
        <para>Имя поставщика ролей. Например, StandaloneProfiler.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MPE.RoleProviderAttribute.#ctor(System.String,UnityEditor.MPE.ProcessEvent)">
      <summary>
        <para>Конструктор для RoleProviderAttribute. Позволяет зарегистрировать обработчик, который запускается, когда определенное событие ProcessEvent запускается в процессе UnityEditor определенного уровня ProcessLevel.</para>
      </summary>
      <param name="name">Имя поставщика ролей. Например, StandaloneProfiler.</param>
      <param name="eventType">Событие, инициированное процессом.</param>
      <param name="level">Уровень процесса (главный или подчиненный), на котором должен быть зарегистрирован этот обработчик.</param>
    </member>
    <member name="M:UnityEditor.MPE.RoleProviderAttribute.#ctor(UnityEditor.MPE.ProcessLevel,UnityEditor.MPE.ProcessEvent)">
      <summary>
        <para>Конструктор для RoleProviderAttribute. Позволяет зарегистрировать обработчик, который запускается, когда определенное событие ProcessEvent запускается в процессе UnityEditor определенного уровня ProcessLevel.</para>
      </summary>
      <param name="name">Имя поставщика ролей. Например, StandaloneProfiler.</param>
      <param name="eventType">Событие, инициированное процессом.</param>
      <param name="level">Уровень процесса (главный или подчиненный), на котором должен быть зарегистрирован этот обработчик.</param>
    </member>
    <member name="T:UnityEditor.Networking.PlayerConnection.ConnectedPlayer">
      <summary>
        <para>Информация о подключенном игроке.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Networking.PlayerConnection.ConnectedPlayer.name">
      <summary>
        <para>Имя подключенного игрока.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Networking.PlayerConnection.ConnectedPlayer.playerId">
      <summary>
        <para>ID подключенного игрока.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Networking.PlayerConnection.EditorConnection">
      <summary>
        <para>Обрабатывает подключение редактора к проигрывателю.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Networking.PlayerConnection.EditorConnection.ConnectedPlayers">
      <summary>
        <para>Список подключенных игроков.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Networking.PlayerConnection.EditorConnection.DisconnectAll">
      <summary>
        <para>Разрывает все активные соединения между редактором и проигрывателями.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Networking.PlayerConnection.EditorConnection.Initialize">
      <summary>
        <para>Инициализирует EditorConnection.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Networking.PlayerConnection.EditorConnection.Register(System.Guid,UnityEngine.Events.UnityAction`1&lt;UnityEngine.Networking.PlayerConnection.MessageEventArgs&gt;)">
      <summary>
        <para>Регистрирует обратный вызов для определенного идентификатора сообщения.</para>
      </summary>
      <param name="messageId">Идентификатор сообщения, которое вызывает обратный вызов при получении редактором.</param>
      <param name="callback">Действие, которое выполняется, когда сообщение с идентификатором messageId получено редактором.
Обратный вызов включает в себя данные, отправленные игроком, и идентификатор игрока.
Идентификатор игрока используется для различения нескольких игроков, подключенных к одному и тому же редактору.</param>
    </member>
    <member name="M:UnityEditor.Networking.PlayerConnection.EditorConnection.RegisterConnection(UnityEngine.Events.UnityAction`1&lt;System.Int32&gt;)">
      <summary>
        <para>Регистрирует обратный вызов, выполняемый при подключении нового игрока к редактору.</para>
      </summary>
      <param name="callback">Действие вызывается при подключении нового игрока с идентификатором игрока.</param>
    </member>
    <member name="M:UnityEditor.Networking.PlayerConnection.EditorConnection.RegisterDisconnection(UnityEngine.Events.UnityAction`1&lt;System.Int32&gt;)">
      <summary>
        <para>Регистрирует обратный вызов для Player, когда этот Player отключается.</para>
      </summary>
      <param name="callback">Действие, которое вызывается, когда игрок с заданным идентификатором игрока отключается.</param>
    </member>
    <member name="M:UnityEditor.Networking.PlayerConnection.EditorConnection.Send(System.Guid,System.Byte[],System.Int32)">
      <summary>
        <para>Отправляет данные подключенным проигрывателям.</para>
      </summary>
      <param name="messageId">Идентификатор типа сообщения для отправки подключенным игрокам.</param>
      <param name="playerId">ID игрока, которому вы хотите отправить это сообщение. Если вы хотите отправить его всем игрокам, установите для этого параметра значение 0.</param>
      <param name="data">
      </param>
    </member>
    <member name="M:UnityEditor.Networking.PlayerConnection.EditorConnection.Send(System.Guid,System.Byte[])">
      <summary>
        <para>Отправляет данные подключенным проигрывателям.</para>
      </summary>
      <param name="messageId">Идентификатор типа сообщения для отправки подключенным игрокам.</param>
      <param name="playerId">ID игрока, которому вы хотите отправить это сообщение. Если вы хотите отправить его всем игрокам, установите для этого параметра значение 0.</param>
      <param name="data">
      </param>
    </member>
    <member name="M:UnityEditor.Networking.PlayerConnection.EditorConnection.TrySend(System.Guid,System.Byte[],System.Int32)">
      <summary>
        <para>Пытается отправить данные из редактора на подключенные проигрыватели.</para>
      </summary>
      <param name="messageId">Идентификатор типа сообщения для отправки подключенным игрокам.</param>
      <param name="playerId">ID игрока, которому вы хотите отправить это сообщение. Если вы хотите отправить его всем игрокам, установите значение 0..</param>
      <param name="data">
      </param>
      <returns>
        <para>Возвращает true, если редактор успешно отправляет данные, и false, если в кольцевом буфере сокета нет места или отправка не удалась.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Networking.PlayerConnection.EditorConnection.TrySend(System.Guid,System.Byte[])">
      <summary>
        <para>Пытается отправить данные из редактора на подключенные проигрыватели.</para>
      </summary>
      <param name="messageId">Идентификатор типа сообщения для отправки подключенным игрокам.</param>
      <param name="playerId">ID игрока, которому вы хотите отправить это сообщение. Если вы хотите отправить его всем игрокам, установите значение 0..</param>
      <param name="data">
      </param>
      <returns>
        <para>Возвращает true, если редактор успешно отправляет данные, и false, если в кольцевом буфере сокета нет места или отправка не удалась.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Networking.PlayerConnection.EditorConnection.Unregister(System.Guid,UnityEngine.Events.UnityAction`1&lt;UnityEngine.Networking.PlayerConnection.MessageEventArgs&gt;)">
      <summary>
        <para>Отменяет регистрацию зарегистрированного обратного вызова.</para>
      </summary>
      <param name="messageId">Идентификатор сообщения, связанный с обратным вызовом, регистрацию которого вы хотите отменить.</param>
      <param name="callback">Обратный вызов Action, регистрацию которого вы хотите отменить.</param>
    </member>
    <member name="M:UnityEditor.Networking.PlayerConnection.EditorConnection.UnregisterConnection(UnityEngine.Events.UnityAction`1&lt;System.Int32&gt;)">
      <summary>
        <para>Отменяет регистрацию обратного вызова соединения.</para>
      </summary>
      <param name="callback">
      </param>
    </member>
    <member name="M:UnityEditor.Networking.PlayerConnection.EditorConnection.UnregisterDisconnection(UnityEngine.Events.UnityAction`1&lt;System.Int32&gt;)">
      <summary>
        <para>Отменяет регистрацию обратного вызова отключения.</para>
      </summary>
      <param name="callback">
      </param>
    </member>
    <member name="T:UnityEditor.Networking.PlayerConnection.PlayerConnectionGUI">
      <summary>
        <para>Этот класс содержит методы для рисования пользовательского интерфейса редактора IMGUI, связанного с подключением игрока.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Networking.PlayerConnection.PlayerConnectionGUI.ConnectionTargetSelectionDropdown(UnityEngine.Rect,UnityEngine.Networking.PlayerConnection.IConnectionState,UnityEngine.GUIStyle)">
      <summary>
        <para>Отобразить раскрывающуюся кнопку и меню, чтобы пользователь мог выбрать и установить соединение с проигрывателем.</para>
      </summary>
      <param name="rect">Где нарисовать раскрывающуюся кнопку.</param>
      <param name="state">Состояние соединения, которое используется в EditorWindow, отображающем этот раскрывающийся список. Используйте Networking.PlayerConnection.PlayerConnectionGUIUtility.GetConnectionState, чтобы получить состояние в OnEnable, и не забудьте удалить это состояние в OnDisable.</param>
      <param name="style">Определите стиль GUIStyle, в котором должна отображаться кнопка раскрывающегося списка. Если стиль не указан, будет отображаться кнопка раскрывающегося списка по умолчанию.</param>
    </member>
    <member name="T:UnityEditor.Networking.PlayerConnection.PlayerConnectionGUILayout">
      <summary>
        <para>Этот класс содержит методы для рисования и автоматического макета пользовательского интерфейса редактора IMGUI, связанного с подключением игрока.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Networking.PlayerConnection.PlayerConnectionGUILayout.ConnectionTargetSelectionDropdown(UnityEngine.Networking.PlayerConnection.IConnectionState,UnityEngine.GUIStyle)">
      <summary>
        <para>Отобразить раскрывающуюся кнопку и меню, чтобы пользователь мог выбрать и установить соединение с проигрывателем.</para>
      </summary>
      <param name="state">Состояние соединения, которое использует EditorWindow, отображающий раскрывающийся список. Используйте Networking.PlayerConnection.PlayerConnectionGUIUtility.GetConnectionState, чтобы получить состояние в OnEnable. Убедитесь, что вы избавились от этого состояния в OnDisable, чтобы избежать его утечки.</param>
      <param name="style">Определите стиль GUIStyle, в котором должна отображаться кнопка раскрывающегося списка. Если не указано иное, будет отображаться кнопка раскрывающегося списка по умолчанию.</param>
    </member>
    <member name="T:UnityEditor.Networking.PlayerConnection.PlayerConnectionGUIUtility">
      <summary>
        <para>Различные вспомогательные методы для Networking.PlayerConnection.PlayerConnectionGUI.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Networking.PlayerConnection.PlayerConnectionGUIUtility.GetConnectionState(UnityEditor.EditorWindow,System.Action`1&lt;System.String&gt;)">
      <summary>
        <para>Этот метод создает объект отслеживания состояния для установления и отображения соединения редактора с проигрывателем.</para>
      </summary>
      <param name="parentWindow">EditorWindow, который будет использовать соединение.</param>
      <param name="connectedCallback">Обратный вызов, который запускается всякий раз, когда попытка подключения, инициированная пользователем, завершается успешно.</param>
      <returns>
        <para>Возвращает несериализованное состояние подключения к Player, которое используется в Networking.PlayerConnection.PlayerConnectionGUI.ConnectionTargetSelectionDropdown или Networking.PlayerConnection.PlayerConnectionGUILayout.ConnectionTargetSelectionDropdown. Возвращаемый объект состояния подключения содержит информацию о том, какая цель подключена к проигрывателю и какие цели доступны.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.NormalMapEncoding">
      <summary>
        <para>Описывает кодирование карт нормалей.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.NormalMapEncoding.DXT5nm">
      <summary>
        <para>Двухкомпонентное кодирование карт нормалей в стиле DXT5nm.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.NormalMapEncoding.XYZ">
      <summary>
        <para>Трехкомпонентное кодирование карты нормалей.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ObjectChangeEvents">
      <summary>
        <para>Предоставляет события, позволяющие отслеживать необратимые изменения объектов в редакторе.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.ObjectChangeEvents.changesPublished(UnityEditor.ObjectChangeEvents/ObjectChangeEventsHandler)">
      <summary>
        <para>Событие, которое возникает один раз за кадр, если были записаны какие-либо необратимые изменения.</para>
      </summary>
      <param name="value">Поток событий, записанных с момента последнего кадра.</param>
    </member>
    <member name="T:UnityEditor.ObjectChangeEvents.ObjectChangeEventsHandler">
      <summary>
        <para>Делегат, используемый для события, публикующего изменения объекта.</para>
      </summary>
      <param name="stream">Поток событий, записанных с момента последнего кадра.</param>
    </member>
    <member name="T:UnityEditor.ObjectChangeEventStream">
      <summary>
        <para>Представляет поток событий, описывающий изменения, примененные к объектам в памяти в течение кадра.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ObjectChangeEventStream.isCreated">
      <summary>
        <para>Указывает, имеет ли ObjectChangeEventStream выделенный буфер памяти.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ObjectChangeEventStream.length">
      <summary>
        <para>Количество событий в потоке.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ObjectChangeEventStream.Builder">
      <summary>
        <para>Предоставляет способ создания экземпляра ObjectChangeEventStream.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ObjectChangeEventStream.Builder.eventCount">
      <summary>
        <para>Количество событий, которые были записаны в этом экземпляре на данный момент.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.Builder.#ctor(Unity.Collections.Allocator)">
      <summary>
        <para>Создает новый экземпляр.</para>
      </summary>
      <param name="allocator">Используемый распределитель.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.Builder.Dispose">
      <summary>
        <para>Освобождает память, связанную с этим экземпляром.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.Builder.PushChangeAssetObjectPropertiesEvent(UnityEditor.ChangeAssetObjectPropertiesEventArgs&amp;)">
      <summary>
        <para>Добавляет ChangeAssetObjectPropertiesEventArgs в конец потока.</para>
      </summary>
      <param name="data">Данные события для добавления в поток.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.Builder.PushChangeGameObjectOrComponentPropertiesEvent(UnityEditor.ChangeGameObjectOrComponentPropertiesEventArgs&amp;)">
      <summary>
        <para>Добавляет ChangeGameObjectOrComponentPropertiesEventArgs в конец потока.</para>
      </summary>
      <param name="data">Данные события для добавления в поток.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.Builder.PushChangeGameObjectParentEvent(UnityEditor.ChangeGameObjectParentEventArgs&amp;)">
      <summary>
        <para>Добавляет ChangeGameObjectParentEventArgs в конец потока.</para>
      </summary>
      <param name="data">Данные события для добавления в поток.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.Builder.PushChangeGameObjectStructureEvent(UnityEditor.ChangeGameObjectStructureEventArgs&amp;)">
      <summary>
        <para>Добавляет ChangeGameObjectStructureEventArgs в конец потока.</para>
      </summary>
      <param name="data">Данные события для добавления в поток.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.Builder.PushChangeGameObjectStructureHierarchyEvent(UnityEditor.ChangeGameObjectStructureHierarchyEventArgs&amp;)">
      <summary>
        <para>Добавляет ChangeGameObjectStructureHierarchyEventArgs в конец потока.</para>
      </summary>
      <param name="data">Данные события для добавления в поток.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.Builder.PushChangeSceneEvent(UnityEditor.ChangeSceneEventArgs&amp;)">
      <summary>
        <para>Добавляет ChangeSceneEventArgs в конец потока.</para>
      </summary>
      <param name="data">Данные события для добавления в поток.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.Builder.PushCreateAssetObjectEvent(UnityEditor.CreateAssetObjectEventArgs&amp;)">
      <summary>
        <para>Добавляет CreateAssetObjectEventArgs в конец потока.</para>
      </summary>
      <param name="data">Данные события для добавления в поток.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.Builder.PushCreateGameObjectHierarchyEvent(UnityEditor.CreateGameObjectHierarchyEventArgs&amp;)">
      <summary>
        <para>Добавляет CreateGameObjectHierarchyEventArgs в конец потока.</para>
      </summary>
      <param name="data">Данные события для добавления в поток.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.Builder.PushDestroyAssetObjectEvent(UnityEditor.DestroyAssetObjectEventArgs&amp;)">
      <summary>
        <para>Добавляет DestroyAssetObjectEventArgs в конец потока.</para>
      </summary>
      <param name="data">Данные события для добавления в поток.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.Builder.PushDestroyGameObjectHierarchyEvent(UnityEditor.DestroyGameObjectHierarchyEventArgs&amp;)">
      <summary>
        <para>Добавляет DestroyGameObjectHierarchyEventArgs в конец потока.</para>
      </summary>
      <param name="data">Данные события для добавления в поток.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.Builder.PushUpdatePrefabInstancesEvent(UnityEditor.UpdatePrefabInstancesEventArgs&amp;)">
      <summary>
        <para>Добавляет UpdatePrefabInstancesEventArgs в конец потока.</para>
      </summary>
      <param name="data">Данные события для добавления в поток.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.Builder.ToStream(Unity.Collections.Allocator)">
      <summary>
        <para>Копирует данные, собранные в этом экземпляре, в новый экземпляр ObjectChangeEventStream.</para>
      </summary>
      <param name="allocator">Распределитель для нового потока.</param>
      <returns>
        <para>Новый поток, содержащий все события, записанные в этом экземпляре на момент вызова функции.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.Clone(Unity.Collections.Allocator)">
      <summary>
        <para>Создает копию этого потока с указанным распределителем.</para>
      </summary>
      <param name="allocator">Распределитель, используемый для выделения памяти для копии.</param>
      <returns>
        <para>Копия потока, содержащего те же события, но в отдельном расположении памяти.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.Dispose">
      <summary>
        <para>Освобождает память, связанную с этим потоком.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.GetChangeAssetObjectPropertiesEvent(System.Int32,UnityEditor.ChangeAssetObjectPropertiesEventArgs&amp;)">
      <summary>
        <para>Извлекает данные события по заданному индексу в виде ChangeAssetObjectPropertiesEventArgs. Выдает исключение, если запрошенный тип события не соответствует событию, хранящемуся в потоке.</para>
      </summary>
      <param name="eventIdx">Индекс события, для которого нужно получить данные.</param>
      <param name="data">Данные, связанные с событием.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.GetChangeGameObjectOrComponentPropertiesEvent(System.Int32,UnityEditor.ChangeGameObjectOrComponentPropertiesEventArgs&amp;)">
      <summary>
        <para>Извлекает данные события по заданному индексу в виде ChangeAssetObjectPropertiesEventArgs. Выдает исключение, если запрошенный тип события не соответствует событию, хранящемуся в потоке.</para>
      </summary>
      <param name="eventIdx">Индекс события, для которого нужно получить данные.</param>
      <param name="data">Данные, связанные с событием.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.GetChangeGameObjectParentEvent(System.Int32,UnityEditor.ChangeGameObjectParentEventArgs&amp;)">
      <summary>
        <para>Извлекает данные о событии по заданному индексу в виде ChangeGameObjectParentEventArgs. Выдает исключение, если запрошенный тип события не соответствует событию, хранящемуся в потоке.</para>
      </summary>
      <param name="eventIdx">Индекс события, для которого нужно получить данные.</param>
      <param name="data">Данные, связанные с событием.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.GetChangeGameObjectStructureEvent(System.Int32,UnityEditor.ChangeGameObjectStructureEventArgs&amp;)">
      <summary>
        <para>Извлекает данные о событии по заданному индексу в виде ChangeGameObjectStructureEventArgs. Выдает исключение, если запрошенный тип события не соответствует событию, хранящемуся в потоке.</para>
      </summary>
      <param name="eventIdx">Индекс события, для которого нужно получить данные.</param>
      <param name="data">Данные, связанные с событием.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.GetChangeGameObjectStructureHierarchyEvent(System.Int32,UnityEditor.ChangeGameObjectStructureHierarchyEventArgs&amp;)">
      <summary>
        <para>Извлекает данные о событии по заданному индексу в виде ChangeGameObjectStructureHierarchyEventArgs. Выдает исключение, если запрошенный тип события не соответствует событию, хранящемуся в потоке.</para>
      </summary>
      <param name="eventIdx">Индекс события, для которого нужно получить данные.</param>
      <param name="data">Данные, связанные с событием.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.GetChangeSceneEvent(System.Int32,UnityEditor.ChangeSceneEventArgs&amp;)">
      <summary>
        <para>Извлекает данные события по заданному индексу в виде ChangeSceneEventArgs. Выдает исключение, если запрошенный тип события не соответствует событию, хранящемуся в потоке.</para>
      </summary>
      <param name="eventIdx">Индекс события, для которого нужно получить данные.</param>
      <param name="data">
      </param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.GetCreateAssetObjectEvent(System.Int32,UnityEditor.CreateAssetObjectEventArgs&amp;)">
      <summary>
        <para>Извлекает данные события по заданному индексу в виде CreateAssetObjectEventArgs. Выдает исключение, если запрошенный тип события не соответствует событию, хранящемуся в потоке.</para>
      </summary>
      <param name="eventIdx">Индекс события, для которого нужно получить данные.</param>
      <param name="data">Данные, связанные с событием.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.GetCreateGameObjectHierarchyEvent(System.Int32,UnityEditor.CreateGameObjectHierarchyEventArgs&amp;)">
      <summary>
        <para>Извлекает данные о событии по заданному индексу в виде CreateGameObjectHierarchyEventArgs. Выдает исключение, если запрошенный тип события не соответствует событию, хранящемуся в потоке.</para>
      </summary>
      <param name="eventIdx">Индекс события, для которого нужно получить данные.</param>
      <param name="data">Данные, связанные с событием.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.GetDestroyAssetObjectEvent(System.Int32,UnityEditor.DestroyAssetObjectEventArgs&amp;)">
      <summary>
        <para>Извлекает данные события по заданному индексу в виде DestroyAssetObjectEventArgs. Выдает исключение, если запрошенный тип события не соответствует событию, хранящемуся в потоке.</para>
      </summary>
      <param name="eventIdx">Индекс события, для которого нужно получить данные.</param>
      <param name="data">Данные, связанные с событием.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.GetDestroyGameObjectHierarchyEvent(System.Int32,UnityEditor.DestroyGameObjectHierarchyEventArgs&amp;)">
      <summary>
        <para>Извлекает данные о событии по заданному индексу в виде DestroyGameObjectHierarchyEventArgs. Выдает исключение, если запрошенный тип события не соответствует событию, хранящемуся в потоке.</para>
      </summary>
      <param name="eventIdx">Индекс события, для которого нужно получить данные.</param>
      <param name="data">Данные, связанные с событием.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.GetEventType(System.Int32)">
      <summary>
        <para>Возвращает тип события по указанному индексу.</para>
      </summary>
      <param name="eventIdx">Индекс события, тип которого должен быть возвращен.</param>
      <returns>
        <para>Тип события по указанному индексу.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.GetUpdatePrefabInstancesEvent(System.Int32,UnityEditor.UpdatePrefabInstancesEventArgs&amp;)">
      <summary>
        <para>Извлекает данные события по заданному индексу в виде UpdatePrefabInstancesEventArgs. Выдает исключение, если запрошенный тип события не соответствует событию, хранящемуся в потоке.</para>
      </summary>
      <param name="eventIdx">Индекс события, для которого нужно получить данные.</param>
      <param name="data">Данные, связанные с событием.</param>
    </member>
    <member name="T:UnityEditor.ObjectChangeKind">
      <summary>
        <para>Это перечисление описывает различные виды изменений, которые можно отслеживать в ObjectChangeEventStream. Каждое событие имеет соответствующий тип в ObjectChangeEvents.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ObjectChangeKind.ChangeAssetObjectProperties">
      <summary>
        <para>Изменение этого типа указывает на изменение свойства объекта актива в памяти. Это происходит, например, когда Undo.RecordObject используется с экземпляром актива (например, текстуры).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ObjectChangeKind.ChangeGameObjectOrComponentProperties">
      <summary>
        <para>Изменение этого типа указывает на изменение свойства игрового объекта или компонента. Это происходит, например, когда Undo.RecordObject используется с экземпляром компонента.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ObjectChangeKind.ChangeGameObjectParent">
      <summary>
        <para>Изменение этого типа указывает на то, что родитель GameObject изменился. Это происходит при использовании Undo.SetTransformParent или SceneManager.MoveGameObjectToScene.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ObjectChangeKind.ChangeGameObjectStructure">
      <summary>
        <para>Изменение этого типа указывает на изменение структуры GameObject. Это происходит, когда компонент добавляется или удаляется из GameObject с помощью Undo.AddComponent или Undo.DestroyObjectImmediate.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ObjectChangeKind.ChangeGameObjectStructureHierarchy">
      <summary>
        <para>Изменение этого типа указывает на то, что структура GameObject изменилась, и любой GameObject в иерархии ниже него мог измениться. Это происходит, например, при использовании Undo.RegisterFullObjectHierarchyUndo.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ObjectChangeKind.ChangeScene">
      <summary>
        <para>Изменение этого типа указывает на то, что открытая сцена была изменена («загрязнена») без какой-либо более конкретной информации. Это происходит, например, при использовании EditorSceneManager.MarkSceneDirty.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ObjectChangeKind.CreateAssetObject">
      <summary>
        <para>Изменение этого типа указывает на то, что объект актива был создан. Это происходит, например, когда Undo.RegisterCreatedObjectUndo используется с экземпляром ресурса (например, текстуры).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ObjectChangeKind.CreateGameObjectHierarchy">
      <summary>
        <para>Изменение этого типа указывает на то, что GameObject был создан, возможно, с дополнительными объектами ниже него в иерархии. Это происходит, например, когда Undo.RegisterCreatedObjectUndo используется с GameObject.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ObjectChangeKind.DestroyAssetObject">
      <summary>
        <para>Изменение этого типа указывает на то, что объект актива был уничтожен. Это происходит, например, когда Undo.DestroyObjectImmediate используется с экземпляром актива (например, текстуры).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ObjectChangeKind.DestroyGameObjectHierarchy">
      <summary>
        <para>Изменение этого типа указывает на то, что GameObject и вся иерархия ниже него уничтожены. Это происходит, например, когда Undo.DestroyObjectImmediate используется с GameObject.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ObjectChangeKind.None">
      <summary>
        <para>Указывает на неинициализированное значение.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ObjectChangeKind.UpdatePrefabInstances">
      <summary>
        <para>Изменение этого типа указывает на то, что экземпляры префаба в открытой сцене были обновлены из-за изменения исходного префаба.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ObjectFactory">
      <summary>
        <para>Используйте DefaultObject для создания нового объекта UnityEngine.Object в редакторе.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.ObjectFactory.componentWasAdded(System.Action`1&lt;UnityEngine.Component&gt;)">
      <summary>
        <para>Это вызывается каждый раз, когда новый Компонент или MonoBehaviour добавляется к GameObject с помощью ObjectFactory.</para>
      </summary>
      <param name="value">Обратный вызов для добавления в список вызовов.</param>
    </member>
    <member name="M:UnityEditor.ObjectFactory.AddComponent(UnityEngine.GameObject,System.Type)">
      <summary>
        <para>Создает новый компонент и добавляет его к указанному GameObject.</para>
      </summary>
      <param name="gameObject">GameObject для добавления нового компонента.</param>
      <param name="type">Тип компонента для создания и добавления в GameObject.</param>
      <returns>
        <para>Возвращает компонент, который был создан и добавлен в GameObject.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ObjectFactory.AddComponent(UnityEngine.GameObject)">
      <summary>
        <para>Создает новый компонент и добавляет его к указанному GameObject.</para>
      </summary>
      <param name="gameObject">GameObject для добавления нового компонента.</param>
      <param name="type">Тип компонента для создания и добавления в GameObject.</param>
      <returns>
        <para>Возвращает компонент, который был создан и добавлен в GameObject.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ObjectFactory.CreateGameObject(System.String,System.Type[])">
      <summary>
        <para>Создает новый GameObject.</para>
      </summary>
      <param name="name">Имя игрового объекта.</param>
      <param name="types">Необязательные типы для добавления к GameObject при создании.</param>
      <param name="scene">Сцена, в которой должен быть создан GameObject.</param>
      <param name="hideFlags">HideFlags для присвоения GameObject.</param>
      <returns>
        <para>Возвращает созданный GameObject.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ObjectFactory.CreateGameObject(UnityEngine.SceneManagement.Scene,UnityEngine.HideFlags,System.String,System.Type[])">
      <summary>
        <para>Создает новый GameObject.</para>
      </summary>
      <param name="name">Имя игрового объекта.</param>
      <param name="types">Необязательные типы для добавления к GameObject при создании.</param>
      <param name="scene">Сцена, в которой должен быть создан GameObject.</param>
      <param name="hideFlags">HideFlags для присвоения GameObject.</param>
      <returns>
        <para>Возвращает созданный GameObject.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ObjectFactory.CreateInstance(System.Type)">
      <summary>
        <para>Создать новый экземпляр данного типа.</para>
      </summary>
      <param name="type">Тип создаваемого экземпляра.</param>
    </member>
    <member name="M:UnityEditor.ObjectFactory.CreateInstance">
      <summary>
        <para>Создать новый экземпляр данного типа.</para>
      </summary>
      <param name="type">Тип создаваемого экземпляра.</param>
    </member>
    <member name="M:UnityEditor.ObjectFactory.CreatePrimitive(UnityEngine.PrimitiveType)">
      <summary>
        <para>Создает примитив GameObject.</para>
      </summary>
      <param name="type">Тип создаваемого примитива.</param>
    </member>
    <member name="T:UnityEditor.ObjectNames">
      <summary>
        <para>Вспомогательный класс для создания отображаемых имен для объектов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ObjectNames.GetClassName(UnityEngine.Object)">
      <summary>
        <para>Имя класса объекта.</para>
      </summary>
      <param name="obj">
      </param>
    </member>
    <member name="M:UnityEditor.ObjectNames.GetDragAndDropTitle(UnityEngine.Object)">
      <summary>
        <para>Перетащите название объекта.</para>
      </summary>
      <param name="obj">
      </param>
    </member>
    <member name="M:UnityEditor.ObjectNames.GetInspectorTitle(UnityEngine.Object)">
      <summary>
        <para>Название инспектора для объекта.</para>
      </summary>
      <param name="obj">
      </param>
    </member>
    <member name="M:UnityEditor.ObjectNames.GetUniqueName(System.String[],System.String)">
      <summary>
        <para>Создайте уникальное имя, используя предоставленное имя в качестве основы.

Если целевое имя находится в предоставленном списке существующих имен, уникальное имя создается путем добавления следующего доступного числового приращения.</para>
      </summary>
      <param name="existingNames">Список ранее существовавших имен.</param>
      <param name="name">Желаемое имя для использования как есть или в качестве основы.</param>
      <returns>
        <para>Имя не найдено в списке ранее существовавших имен.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ObjectNames.NicifyVariableName(System.String)">
      <summary>
        <para>Сделать отображаемое имя для переменной.</para>
      </summary>
      <param name="name">
      </param>
    </member>
    <member name="M:UnityEditor.ObjectNames.SetNameSmart(UnityEngine.Object,System.String)">
      <summary>
        <para>Задает имя объекта.</para>
      </summary>
      <param name="obj">
      </param>
      <param name="name">
      </param>
    </member>
    <member name="T:UnityEditor.ObjectPreview">
      <summary>
        <para>Базовый класс для создания пользовательских превью.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ObjectPreview.target">
      <summary>
        <para>Объект, который в данный момент просматривается.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ObjectPreview.Cleanup">
      <summary>
        <para>Используйте эту функцию, чтобы освободить ресурсы, выделенные реализацией ObjectPreview.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ObjectPreview.DrawPreview(UnityEngine.Rect)">
      <summary>
        <para>Это первая точка входа для предварительного просмотра чертежа.</para>
      </summary>
      <param name="previewArea">Доступная область для рисования превью.</param>
    </member>
    <member name="M:UnityEditor.ObjectPreview.GetInfoString">
      <summary>
        <para>Реализуйте этот метод, чтобы отображать информацию об объекте поверх предварительного просмотра объекта.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ObjectPreview.GetPreviewTitle">
      <summary>
        <para>Переопределите этот метод, если хотите изменить метку области предварительного просмотра.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ObjectPreview.HasPreviewGUI">
      <summary>
        <para>Можно ли предварительно просмотреть этот компонент в его текущем состоянии?</para>
      </summary>
      <returns>
        <para>Истинно, если этот компонент можно предварительно просмотреть в его текущем состоянии.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ObjectPreview.Initialize(UnityEngine.Object[])">
      <summary>
        <para>Вызывается при создании предварительного просмотра с просматриваемыми объектами.</para>
      </summary>
      <param name="targets">Просматриваемые объекты.</param>
    </member>
    <member name="M:UnityEditor.ObjectPreview.MoveNextTarget">
      <summary>
        <para>Вызывается для перебора целей, будет использоваться при предварительном просмотре более чем одной цели.</para>
      </summary>
      <returns>
        <para>Истинно, если есть другая доступная цель.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ObjectPreview.OnInteractivePreviewGUI(UnityEngine.Rect,UnityEngine.GUIStyle)">
      <summary>
        <para>Реализовать создание собственного интерактивного пользовательского предварительного просмотра. Интерактивные пользовательские предварительные просмотры используются в области предварительного просмотра инспектора и селектора объектов.</para>
      </summary>
      <param name="r">Прямоугольник, в котором будет отображаться предварительный просмотр.</param>
      <param name="background">Фоновое изображение.</param>
    </member>
    <member name="M:UnityEditor.ObjectPreview.OnPreviewGUI(UnityEngine.Rect,UnityEngine.GUIStyle)">
      <summary>
        <para>Реализовать создание собственного пользовательского предварительного просмотра для области предварительного просмотра инспектора, заголовков основного редактора и селектора объектов.</para>
      </summary>
      <param name="r">Прямоугольник, в котором будет отображаться предварительный просмотр.</param>
      <param name="background">Фоновое изображение.</param>
    </member>
    <member name="M:UnityEditor.ObjectPreview.OnPreviewSettings">
      <summary>
        <para>Переопределите этот метод, если вы хотите отображать пользовательские элементы управления в заголовке предварительного просмотра.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ObjectPreview.ResetTarget">
      <summary>
        <para>Вызывается для сброса цели перед ее итерацией.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Overlays.IMGUIOverlay">
      <summary>
        <para>IMGUIOverlay — это реализация Overlay, предоставляющая UIElements.IMGUIContainer.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Overlays.IMGUIOverlay.CreatePanelContent">
      <summary>
        <para>CreatePanelContent вызывается OverlayCanvas при отображении этого наложения.</para>
      </summary>
      <returns>
        <para>Возвращает содержимое этого наложения.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Overlays.IMGUIOverlay.OnGUI">
      <summary>
        <para>Реализуйте элементы управления и логику IMGUI в этом методе.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Overlays.ISupportsOverlays">
      <summary>
        <para>Реализуйте этот интерфейс, чтобы включить наложения в EditorWindow.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Overlays.ITransientOverlay">
      <summary>
        <para>Временные наложения — это тип наложения, который не контролируется пользователем и отображается только в активном представлении сцены по запросу свойства visible. Реализация ITransientOverlay в классе Overlay определяет его для этого особого поведения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Overlays.ITransientOverlay.visible">
      <summary>
        <para>Используйте visible, чтобы включить или отключить рендеринг этого наложения.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Overlays.Layout">
      <summary>
        <para>Возможные макеты для оверлея.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Overlays.Layout.All">
      <summary>
        <para>Эквивалент Layout.Panel | Макет.Горизонтальная панель инструментов | Макет.Вертикальная панель инструментов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Overlays.Layout.HorizontalToolbar">
      <summary>
        <para>Содержимое будет иметь размер, соответствующий размеру панели инструментов, и будет расположено горизонтально.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Overlays.Layout.Panel">
      <summary>
        <para>Содержимое будет представлено в виде обычного наложения с заголовком заголовка и областью содержимого.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Overlays.Layout.VerticalToolbar">
      <summary>
        <para>Размер содержимого будет соответствовать размеру панели инструментов и расположен по вертикали.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Overlays.Overlay">
      <summary>
        <para>Наложения — это постоянные и настраиваемые панели и панели инструментов, доступные в окнах редактора. Используйте наложения, чтобы отображать действия и параметры инструментов удобным и контролируемым пользователем способом.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Overlays.Overlay.collapsed">
      <summary>
        <para>Определяет, находится ли наложение в свернутом виде.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Overlays.Overlay.collapsedChanged(System.Action`1&lt;System.Boolean&gt;)">
      <summary>
        <para>Вызывается при изменении значения Overlay.collapsed.</para>
      </summary>
      <param name="value">Вызывается со значением true, когда наложение переходит в свернутое состояние, и false, когда выходит из свернутого состояния.</param>
    </member>
    <member name="P:UnityEditor.Overlays.Overlay.containerWindow">
      <summary>
        <para>EditorWindow, в котором содержится оверлей.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Overlays.Overlay.displayed">
      <summary>
        <para>Показывает или скрывает наложение.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Overlays.Overlay.displayedChanged(System.Action`1&lt;System.Boolean&gt;)">
      <summary>
        <para>Этот обратный вызов вызывается при изменении значения Overlay.displayed.</para>
      </summary>
      <param name="value">Обратный вызов, принимающий новое отображаемое состояние этого наложения.</param>
    </member>
    <member name="P:UnityEditor.Overlays.Overlay.displayName">
      <summary>
        <para>Название наложения, используемое в качестве заголовка.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Overlays.Overlay.floating">
      <summary>
        <para>Возвращает true, если наложение является плавающим, возвращает false, если наложение закреплено в углу или на панели инструментов.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Overlays.Overlay.floatingChanged(System.Action`1&lt;System.Boolean&gt;)">
      <summary>
        <para>Вызывается при изменении значения float.</para>
      </summary>
      <param name="value">Обратный вызов, принимающий новое плавающее состояние этого наложения.</param>
    </member>
    <member name="P:UnityEditor.Overlays.Overlay.floatingPosition">
      <summary>
        <para>Локальное положение ближайшего угла наложения к ближайшему положению закрепления при плавании.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Overlays.Overlay.floatingPositionChanged(System.Action`1&lt;UnityEngine.Vector3&gt;)">
      <summary>
        <para>Это событие вызывается при изменении Overlay.floatingPosition.</para>
      </summary>
      <param name="value">Обратный вызов, принимающий новую позицию наложения.</param>
    </member>
    <member name="P:UnityEditor.Overlays.Overlay.id">
      <summary>
        <para>Уникальный идентификатор наложения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Overlays.Overlay.isInToolbar">
      <summary>
        <para>Возвращает true, если оверлей закреплен на панели инструментов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Overlays.Overlay.layout">
      <summary>
        <para>Описывает режим презентации для наложения.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Overlays.Overlay.layoutChanged(System.Action`1&lt;UnityEditor.Overlays.Layout&gt;)">
      <summary>
        <para>Подпишитесь на это событие, чтобы получать уведомления об изменении свойства Overlay.Layout.</para>
      </summary>
      <param name="value">.layoutChanged вызывается при изменении Overlay.layout.</param>
    </member>
    <member name="F:UnityEditor.Overlays.Overlay.ussClassName">
      <summary>
        <para>Имя класса USS элементов этого типа.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Overlays.Overlay.CreatePanelContent">
      <summary>
        <para>Реализуйте этот метод, чтобы вернуть содержимое визуального элемента.</para>
      </summary>
      <returns>
        <para>Визуальный элемент, содержащий содержимое вашего оверлея.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Overlays.Overlay.OnCreated">
      <summary>
        <para>OnCreated вызывается при создании экземпляра наложения в холсте наложения.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Overlays.Overlay.OnWillBeDestroyed">
      <summary>
        <para>Вызывается, когда оверлей собирается быть уничтоженным.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Overlays.Overlay.Undock">
      <summary>
        <para>Если это наложение в данный момент находится на панели инструментов, оно будет удалено и вернется в плавающее состояние.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Overlays.OverlayAttribute">
      <summary>
        <para>Атрибут, используемый для регистрации класса в качестве наложения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Overlays.OverlayAttribute.defaultDisplay">
      <summary>
        <para>Установите для этого значения значение true, чтобы целевое наложение отображалось при создании экземпляра нового экземпляра типа EditorWindow.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Overlays.OverlayAttribute.displayName">
      <summary>
        <para>Определяет отображаемое имя наложения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Overlays.OverlayAttribute.editorWindowType">
      <summary>
        <para>Определяет, в каком типе EditorWindow будет использоваться оверлей.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Overlays.OverlayAttribute.id">
      <summary>
        <para>Определяет уникальный идентификатор, используемый для идентификации наложения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Overlays.OverlayAttribute.ussName">
      <summary>
        <para>Имя корневого визуального элемента наложения.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Overlays.OverlayAttribute.#ctor(System.Type,System.String,System.String,System.String,System.Boolean)">
      <summary>
        <para>Атрибут, используемый для регистрации класса в качестве наложения.</para>
      </summary>
      <param name="id">Определяет уникальный идентификатор, используемый для идентификации наложения.</param>
      <param name="ussName">Имя корневого визуального элемента наложения.</param>
      <param name="editorWindowType">Определяет, в каком типе EditorWindow будет использоваться оверлей.</param>
      <param name="displayName">Определяет отображаемое имя наложения.</param>
      <param name="defaultDisplay">Истинно, если это наложение включено по умолчанию в новых окнах.</param>
      <param name="defaultLayout">Макет, с которым это наложение будет инициализировано в новых окнах.</param>
    </member>
    <member name="M:UnityEditor.Overlays.OverlayAttribute.#ctor(System.Type,System.String,System.String,System.Boolean)">
      <summary>
        <para>Атрибут, используемый для регистрации класса в качестве наложения.</para>
      </summary>
      <param name="id">Определяет уникальный идентификатор, используемый для идентификации наложения.</param>
      <param name="ussName">Имя корневого визуального элемента наложения.</param>
      <param name="editorWindowType">Определяет, в каком типе EditorWindow будет использоваться оверлей.</param>
      <param name="displayName">Определяет отображаемое имя наложения.</param>
      <param name="defaultDisplay">Истинно, если это наложение включено по умолчанию в новых окнах.</param>
      <param name="defaultLayout">Макет, с которым это наложение будет инициализировано в новых окнах.</param>
    </member>
    <member name="M:UnityEditor.Overlays.OverlayAttribute.#ctor(System.Type,System.String,System.Boolean)">
      <summary>
        <para>Атрибут, используемый для регистрации класса в качестве наложения.</para>
      </summary>
      <param name="id">Определяет уникальный идентификатор, используемый для идентификации наложения.</param>
      <param name="ussName">Имя корневого визуального элемента наложения.</param>
      <param name="editorWindowType">Определяет, в каком типе EditorWindow будет использоваться оверлей.</param>
      <param name="displayName">Определяет отображаемое имя наложения.</param>
      <param name="defaultDisplay">Истинно, если это наложение включено по умолчанию в новых окнах.</param>
      <param name="defaultLayout">Макет, с которым это наложение будет инициализировано в новых окнах.</param>
    </member>
    <member name="T:UnityEditor.Overlays.ToolbarOverlay">
      <summary>
        <para>ToolbarOverlay — это реализация Overlay, обеспечивающая основу для Overlays, которые можно размещать на горизонтальных или вертикальных панелях инструментов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Overlays.ToolbarOverlay.CreateHorizontalToolbarContent">
      <summary>
        <para>Создает корневой VisualElement горизонтального содержимого ToolbarOverlay.</para>
      </summary>
      <returns>
        <para>Корневой элемент горизонтального содержимого ToolbarOverlay.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Overlays.ToolbarOverlay.CreatePanelContent">
      <summary>
        <para>Создает корневой элемент VisualElement содержимого ToolbarOverlay в макете панели.</para>
      </summary>
      <returns>
        <para>Корневой элемент содержимого панели ToolbarOverlay.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Overlays.ToolbarOverlay.CreateVerticalToolbarContent">
      <summary>
        <para>Создает корневой VisualElement вертикального содержимого ToolbarOverlay.</para>
      </summary>
      <returns>
        <para>Корневой элемент вертикального содержимого ToolbarOverlay.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.PackageManager.AuthorInfo">
      <summary>
        <para>Идентифицирует автора пакета.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.AuthorInfo.email">
      <summary>
        <para>Адрес электронной почты автора (необязательно).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.AuthorInfo.name">
      <summary>
        <para>Имя автора.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.AuthorInfo.url">
      <summary>
        <para>URL-адрес автора (необязательно).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.BuildUtilities">
      <summary>
        <para>Служебный класс, который позволяет пакетам регистрировать обратные вызовы сборки в диспетчере пакетов Unity.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PackageManager.BuildUtilities.RegisterShouldIncludeInBuildCallback(UnityEditor.PackageManager.IShouldIncludeInBuildCallback)">
      <summary>
        <para>Регистрирует объект обратного вызова для пакета.</para>
      </summary>
      <param name="cb">Объект класса, реализующего интерфейс IShouldIncludeInBuildCallback.</param>
    </member>
    <member name="T:UnityEditor.PackageManager.Client">
      <summary>
        <para>Используйте класс клиента Unity Package Manager для управления пакетами, используемыми в проекте.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PackageManager.Client.Add(System.String)">
      <summary>
        <para>Добавляет зависимость пакета в проект. Запрос новой или другой зависимости часто приводит к изменению установленных пакетов, но только после того, как диспетчер пакетов построит граф зависимостей для разрешения любых конфликтов версий. Для получения дополнительной информации см. </para>
      </summary>
      <param name="identifier">Строка, представляющая добавляемый пакет:
 

 
- Чтобы установить конкретную версию пакета, используйте идентификатор пакета (« имя@версия »). Это единственный способ установить версию.
 
- Для установки последних совместимых (.
 
- Чтобы установить пакет git, укажите a.
 
- Чтобы установить пакет, укажите значение в формате «файл:путь к папке пакета».
 
- Чтобы установить пакет, укажите значение в формате "файл:путь к/файлу-пакета.tgz".
 

 
ArgumentException создается, если идентификатор имеет значение null или пуст.
</param>
      <returns>
        <para>Экземпляр AddRequest, который можно использовать для мониторинга асинхронной операции и получения результата после ее завершения.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PackageManager.Client.AddAndRemove(System.String[],System.String[])">
      <summary>
        <para>Добавляет зависимости пакетов в проект и удаляет зависимости пакетов из проекта. Запрос различных зависимостей часто приводит к изменению установленных пакетов, но только после того, как диспетчер пакетов построит граф зависимостей для разрешения любых конфликтов версий. Для получения дополнительной информации см.
 

 
Вызов этой функции намного эффективнее, чем вызов функций «Добавить» и «Удалить» несколько раз, потому что для этой функции диспетчер пакетов должен решить список зависимостей только один раз, вместо того, чтобы строить новый граф зависимостей после каждого вызова.</para>
      </summary>
      <param name="packagesToAdd">Массив строк, представляющих пакеты, которые необходимо добавить:
 

 
- Чтобы установить конкретную версию пакета, используйте идентификатор пакета (« имя@версия »). Это единственный способ установить версию.
 
- Для установки последних совместимых (.
 
- Чтобы установить пакет git, укажите a.
 
- Чтобы установить пакет, укажите значение в формате «файл:путь к папке пакета».
 
- Чтобы установить пакет, укажите значение в формате "файл:путь к/файлу-пакета.tgz".
 

 
ArgumentException выдается, если packagesToAdd содержит нулевые или пустые значения.
</param>
      <param name="packagesToRemove">Массив строк, представляющих имена пакетов, которые необходимо удалить.
 

 
ArgumentException выдается, если packagesToRemove содержит нулевые или пустые значения.
</param>
      <returns>
        <para>Экземпляр AddAndRemoveRequest, который можно использовать для мониторинга асинхронной операции и извлечения результата после ее завершения.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PackageManager.Client.Embed(System.String)">
      <summary>
        <para>пакет внутри проекта.</para>
      </summary>
      <param name="packageName">Имя пакета для встраивания. Этот пакет должен быть прямой зависимостью от проекта. ArgumentException выдается, если packageName имеет значение null или пусто.</param>
      <returns>
        <para>Экземпляр EmbedRequest, который можно использовать для мониторинга асинхронной операции и извлечения результата после ее завершения.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PackageManager.Client.List">
      <summary>
        <para>Список пакетов, от которых зависит проект.</para>
      </summary>
      <param name="offlineMode">Указывает, запрашивает ли диспетчер пакетов последнюю информацию о пакетах проекта из удаленного реестра пакетов Unity. Когда offlineMode имеет значение true, объекты PackageManager.PackageInfo в PackageCollection, возвращаемые диспетчером пакетов, содержат информацию, полученную из локального кэша пакетов, которая может быть устаревшей.</param>
      <param name="includeIndirectDependencies">Установите значение true, чтобы включить косвенные зависимости в PackageCollection, возвращаемый диспетчером пакетов. Косвенные зависимости включают пакеты, на которые есть ссылки в манифестах пакетов проекта или в манифестах других косвенных зависимостей. Установите значение false, чтобы включить только те пакеты, которые перечислены непосредственно в манифесте проекта.
Примечание. Сообщенная версия может не соответствовать версии, запрошенной в манифесте проекта. Для получения дополнительной информации см. </param>
      <returns>
        <para>Экземпляр ListRequest, который можно использовать для наблюдения за асинхронной операцией и извлечения результата после завершения операции.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PackageManager.Client.List(System.Boolean)">
      <summary>
        <para>Список пакетов, от которых зависит проект.</para>
      </summary>
      <param name="offlineMode">Указывает, запрашивает ли диспетчер пакетов последнюю информацию о пакетах проекта из удаленного реестра пакетов Unity. Когда offlineMode имеет значение true, объекты PackageManager.PackageInfo в PackageCollection, возвращаемые диспетчером пакетов, содержат информацию, полученную из локального кэша пакетов, которая может быть устаревшей.</param>
      <param name="includeIndirectDependencies">Установите значение true, чтобы включить косвенные зависимости в PackageCollection, возвращаемый диспетчером пакетов. Косвенные зависимости включают пакеты, на которые есть ссылки в манифестах пакетов проекта или в манифестах других косвенных зависимостей. Установите значение false, чтобы включить только те пакеты, которые перечислены непосредственно в манифесте проекта.
Примечание. Сообщенная версия может не соответствовать версии, запрошенной в манифесте проекта. Для получения дополнительной информации см. </param>
      <returns>
        <para>Экземпляр ListRequest, который можно использовать для наблюдения за асинхронной операцией и извлечения результата после завершения операции.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PackageManager.Client.List(System.Boolean,System.Boolean)">
      <summary>
        <para>Список пакетов, от которых зависит проект.</para>
      </summary>
      <param name="offlineMode">Указывает, запрашивает ли диспетчер пакетов последнюю информацию о пакетах проекта из удаленного реестра пакетов Unity. Когда offlineMode имеет значение true, объекты PackageManager.PackageInfo в PackageCollection, возвращаемые диспетчером пакетов, содержат информацию, полученную из локального кэша пакетов, которая может быть устаревшей.</param>
      <param name="includeIndirectDependencies">Установите значение true, чтобы включить косвенные зависимости в PackageCollection, возвращаемый диспетчером пакетов. Косвенные зависимости включают пакеты, на которые есть ссылки в манифестах пакетов проекта или в манифестах других косвенных зависимостей. Установите значение false, чтобы включить только те пакеты, которые перечислены непосредственно в манифесте проекта.
Примечание. Сообщенная версия может не соответствовать версии, запрошенной в манифесте проекта. Для получения дополнительной информации см. </param>
      <returns>
        <para>Экземпляр ListRequest, который можно использовать для наблюдения за асинхронной операцией и извлечения результата после завершения операции.</para>
      </returns>
    </member>
    <member name="P:UnityEditor.PackageManager.Client.LogLevel">
      <summary>
        <para>Получает или задает уровень журнала, который диспетчер пакетов использует при записи в файлы Editor.log и upm.log. По умолчанию LogLevel.Info.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PackageManager.Client.Pack(System.String,System.String)">
      <summary>
        <para>Создает архив GZip из папки пакета. Формат и содержимое файла такие же, как если бы пакет был опубликован в реестре пакетов.</para>
      </summary>
      <param name="packageFolder">Папка с пакетом. ArgumentException выдается, если packageFolder имеет значение null или пуст.</param>
      <param name="targetFolder">Папка, в которую диспетчер пакетов запишет архивный файл GZip. Диспетчер пакетов создаст эту папку, если она еще не существует. ArgumentException создается, если targetFolder имеет значение null или пуст.</param>
      <returns>
        <para>Экземпляр PackRequest, который можно использовать для мониторинга асинхронной операции и извлечения результата после ее завершения.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PackageManager.Client.Remove(System.String)">
      <summary>
        <para>Удаляет зависимость пакета от проекта. Удаление зависимости часто приводит к изменению установленных пакетов, но только после того, как диспетчер пакетов построит граф зависимостей для разрешения любых конфликтов версий. Для получения дополнительной информации см. </para>
      </summary>
      <param name="packageName">Имя пакета, который необходимо удалить из проекта. ArgumentException выдается, если packageName имеет значение null или пусто.</param>
      <returns>
        <para>Экземпляр RemoveRequest, который можно использовать для отслеживания состояния асинхронной операции.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PackageManager.Client.ResetToEditorDefaults">
      <summary>
        <para>Сбрасывает список пакетов, установленных для этого проекта, к конфигурации редактора по умолчанию. Эта операция очищает все пакеты, добавленные в проект, и сохраняет только пакеты, установленные для конфигурации по умолчанию текущего редактора.</para>
      </summary>
      <returns>
        <para>Экземпляр ResetToEditorDefaultsRequest, который можно использовать для отслеживания состояния асинхронной операции.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PackageManager.Client.Resolve">
      <summary>
        <para>Заставляет диспетчер пакетов разрешать пакеты проекта, переустанавливая все измененные или отсутствующие пакеты и удаляя посторонние пакеты.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PackageManager.Client.Search(System.String)">
      <summary>
        <para>Выполняет поиск указанного пакета в реестре пакетов Unity.</para>
      </summary>
      <param name="packageIdOrName">Или ID пакета. ArgumentException выдается, если packageIdOrName имеет значение null или пустое.
</param>
      <param name="offlineMode">Указывает, запрашивает ли диспетчер пакетов последнюю информацию о пакетах проекта из удаленного реестра пакетов Unity. Когда offlineMode имеет значение true, объект PackageManager.PackageInfo, возвращаемый диспетчером пакетов, содержит информацию, полученную из локального кэша пакетов, которая может быть устаревшей.</param>
      <returns>
        <para>Экземпляр SearchRequest, который можно использовать для мониторинга асинхронной операции и извлечения результата после ее завершения.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PackageManager.Client.Search(System.String,System.Boolean)">
      <summary>
        <para>Выполняет поиск указанного пакета в реестре пакетов Unity.</para>
      </summary>
      <param name="packageIdOrName">Или ID пакета. ArgumentException выдается, если packageIdOrName имеет значение null или пустое.
</param>
      <param name="offlineMode">Указывает, запрашивает ли диспетчер пакетов последнюю информацию о пакетах проекта из удаленного реестра пакетов Unity. Когда offlineMode имеет значение true, объект PackageManager.PackageInfo, возвращаемый диспетчером пакетов, содержит информацию, полученную из локального кэша пакетов, которая может быть устаревшей.</param>
      <returns>
        <para>Экземпляр SearchRequest, который можно использовать для мониторинга асинхронной операции и извлечения результата после ее завершения.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PackageManager.Client.SearchAll">
      <summary>
        <para>Выполняет поиск в реестре пакетов Unity всех пакетов, совместимых с текущей версией Unity.</para>
      </summary>
      <param name="offlineMode">Указывает, запрашивает ли диспетчер пакетов последнюю информацию о пакетах проекта из удаленного реестра пакетов Unity. Когда offlineMode имеет значение true, объекты PackageManager.PackageInfo, возвращаемые диспетчером пакетов, содержат информацию, полученную из локального кэша пакетов, которая может быть устаревшей.</param>
      <returns>
        <para>Экземпляр SearchRequest, который можно использовать для мониторинга асинхронной операции и извлечения результата после ее завершения.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PackageManager.Client.SearchAll(System.Boolean)">
      <summary>
        <para>Выполняет поиск в реестре пакетов Unity всех пакетов, совместимых с текущей версией Unity.</para>
      </summary>
      <param name="offlineMode">Указывает, запрашивает ли диспетчер пакетов последнюю информацию о пакетах проекта из удаленного реестра пакетов Unity. Когда offlineMode имеет значение true, объекты PackageManager.PackageInfo, возвращаемые диспетчером пакетов, содержат информацию, полученную из локального кэша пакетов, которая может быть устаревшей.</param>
      <returns>
        <para>Экземпляр SearchRequest, который можно использовать для мониторинга асинхронной операции и извлечения результата после ее завершения.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.PackageManager.DependencyInfo">
      <summary>
        <para>Структура, описывающая зависимости от других пакетов в PackageInfo.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.DependencyInfo.name">
      <summary>
        <para>Имя зависимости.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.DependencyInfo.version">
      <summary>
        <para>Версия зависимости.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.Error">
      <summary>
        <para>Структура, описывающая ошибку пакетной операции.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.Error.errorCode">
      <summary>
        <para>Числовой код ошибки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.Error.message">
      <summary>
        <para>Сообщение об ошибке или описание.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.ErrorCode">
      <summary>
        <para>Ошибка операции с пакетом.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.ErrorCode.AggregateError">
      <summary>
        <para>Во время операции произошла одна или более ошибок.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.ErrorCode.Conflict">
      <summary>
        <para>Обнаружены конфликтующие версии пакетов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.ErrorCode.Forbidden">
      <summary>
        <para>Операция не разрешена.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.ErrorCode.InvalidParameter">
      <summary>
        <para>У операции были недопустимые параметры.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.ErrorCode.NotFound">
      <summary>
        <para>Пакет, необходимый для выполнения операции, не найден.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.ErrorCode.Unknown">
      <summary>
        <para>Операция привела к неизвестной ошибке.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.Events">
      <summary>
        <para>Интерфейс для доступа к событиям диспетчера пакетов.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.PackageManager.Events.registeredPackages(System.Action`1&lt;UnityEditor.PackageManager.PackageRegistrationEventArgs&gt;)">
      <summary>
        <para>Событие возникает после применения изменений к списку зарегистрированных пакетов.</para>
      </summary>
      <param name="value">Структура PackageRegistrationEventArgs, описывающая изменения в списке зарегистрированных пакетов.</param>
    </member>
    <member name="?:UnityEditor.PackageManager.Events.registeringPackages(System.Action`1&lt;UnityEditor.PackageManager.PackageRegistrationEventArgs&gt;)">
      <summary>
        <para>Событие, возникающее перед применением изменений к списку зарегистрированных пакетов.</para>
      </summary>
      <param name="value">Структура PackageRegistrationEventArgs, описывающая изменения в списке зарегистрированных пакетов.</param>
    </member>
    <member name="T:UnityEditor.PackageManager.GitInfo">
      <summary>
        <para>Идентифицирует конкретную версию для использования хэша коммита Git.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.GitInfo.hash">
      <summary>
        <para>Возвращает разрешенный хэш коммита Git для запрошенной версии этого пакета.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.GitInfo.revision">
      <summary>
        <para>Возвращает запрошенную версию Git для пакета Git.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.PackageManager.IShouldIncludeInBuildCallback">
      <summary>
        <para>Интерфейс, используемый диспетчером пакетов для запроса информации о сборке пакетов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.IShouldIncludeInBuildCallback.PackageName">
      <summary>
        <para>Имя пакета.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PackageManager.IShouldIncludeInBuildCallback.ShouldIncludeInBuild(System.String)">
      <summary>
        <para>Определяет, включать ли управляемый подключаемый модуль в сборку.</para>
      </summary>
      <param name="path">Абсолютный путь управляемого подключаемого модуля для включения или исключения.</param>
      <returns>
        <para>Возвращает значение true, чтобы включить плагин, указанный путем, в сборку; в противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.PackageManager.LogLevel">
      <summary>
        <para>Описывает различные уровни журнальной информации, поддерживаемые диспетчером пакетов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.LogLevel.Debug">
      <summary>
        <para>Сообщается об отладочных сообщениях в дополнение к чему-либо на уровне LogLevel.Verbose.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.LogLevel.Error">
      <summary>
        <para>Регистрируются только непредвиденные ошибки и сбои.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.LogLevel.Info">
      <summary>
        <para>Сообщаются информационные сообщения высокого уровня в дополнение к сообщениям уровня LogLevel.Warn.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.LogLevel.Silly">
      <summary>
        <para>Сообщается о чрезвычайно подробных сообщениях в дополнение к сообщениям уровня LogLevel.Debug.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.LogLevel.Verbose">
      <summary>
        <para>Сообщаются подробные информационные сообщения в дополнение к сообщениям уровня LogLevel.Info.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.LogLevel.Warn">
      <summary>
        <para>Сообщается о ненормальных ситуациях, которые могут привести к проблемам, в дополнение к чему-либо на уровне LogLevel.Error.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.PackageCollection">
      <summary>
        <para>Коллекция объектов PackageManager.PackageInfo.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageCollection.error">
      <summary>
        <para>Ошибка, связанная с коллекцией пакетов.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.PackageInfo">
      <summary>
        <para>Структура, описывающая пакет Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.assetPath">
      <summary>
        <para>Путь актива пакета в AssetDatabase.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.author">
      <summary>
        <para>Экземпляр AuthorInfo автора пакета.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.category">
      <summary>
        <para>Категория пакета.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.changelogUrl">
      <summary>
        <para>Пользовательский URL-адрес журнала изменений для пакета.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.datePublished">
      <summary>
        <para>Дата и время публикации пакета.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.dependencies">
      <summary>
        <para>Массив DependencyInfos со списком всех пакетов, от которых напрямую зависит этот пакет.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.description">
      <summary>
        <para>Подробное описание пакета.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.displayName">
      <summary>
        <para>Понятное отображаемое имя пакета.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.documentationUrl">
      <summary>
        <para>Пользовательский URL-адрес документации для пакета.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.errors">
      <summary>
        <para>Ошибки, связанные с пакетом.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.git">
      <summary>
        <para>Экземпляр GitInfo, предоставляющий подробную информацию о пакете Git.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.isDirectDependency">
      <summary>
        <para>Если пакет является прямой зависимостью от проекта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.keywords">
      <summary>
        <para>Массив ключевых слов, связанных с пакетом.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.licensesUrl">
      <summary>
        <para>Пользовательский URL-адрес для лицензий пакета.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.name">
      <summary>
        <para>Уникальное имя пакета.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.packageId">
      <summary>
        <para>Идентификатор пакета.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.registry">
      <summary>
        <para>Реестр, в котором диспетчер пакетов может найти этот пакет.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.repository">
      <summary>
        <para>Экземпляр RepositoryInfo, содержащий информацию о репозитории, в котором размещен пакет.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.resolvedDependencies">
      <summary>
        <para>Массив экземпляров DependencyInfo, в котором перечислены все пакеты, от которых прямо или косвенно зависит этот пакет, и версии, к которым они разрешены.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.resolvedPath">
      <summary>
        <para>Локальный путь к проекту на диске.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.source">
      <summary>
        <para>Источник содержимого пакета.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.type">
      <summary>
        <para>Тип пакета.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.version">
      <summary>
        <para>Версия пакета.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.versions">
      <summary>
        <para>Экземпляр VersionsInfo, содержащий информацию о доступных версиях пакета.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PackageManager.PackageInfo.FindForAssembly(System.Reflection.Assembly)">
      <summary>
        <para>Извлекает информацию о пакете, содержащем сборку, или определение сборки, использованное для сборки этой сборки.</para>
      </summary>
      <param name="assembly">Сборка.</param>
      <returns>
        <para>Экземпляр PackageManager.PackageInfo, описывающий пакет, или null, если сборка или ее определение сборки не входят в пакет.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PackageManager.PackageInfo.FindForAssetPath(System.String)">
      <summary>
        <para>Извлекает информацию о пакете, содержащем ресурс, на основе пути к этому ресурсу.</para>
      </summary>
      <param name="assetPath">Путь к файлу ресурса.</param>
      <returns>
        <para>Экземпляр PackageManager.PackageInfo, описывающий пакет, или null, если актив не находится в пакете.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PackageManager.PackageInfo.GetAllRegisteredPackages">
      <summary>
        <para>Получает информацию обо всех загруженных в данный момент пакетах.</para>
      </summary>
      <returns>
        <para>Массив экземпляров PackageManager.PackageInfo, описывающих каждый пакет.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.PackageManager.PackageRegistrationEventArgs">
      <summary>
        <para>Структура, описывающая записи PackageManager.PackageInfo для регистрации или отмены регистрации в процессе регистрации диспетчера пакетов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageRegistrationEventArgs.added">
      <summary>
        <para>Коллекция записей PackageManager.PackageInfo для добавления в процессе регистрации диспетчера пакетов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageRegistrationEventArgs.changedFrom">
      <summary>
        <para>Набор записей PackageManager.PackageInfo, описывающих пакеты, которые должны быть переопределены другой версией в процессе регистрации диспетчера пакетов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageRegistrationEventArgs.changedTo">
      <summary>
        <para>Коллекция записей PackageManager.PackageInfo, описывающих пакеты, которые переопределяют ранее зарегистрированную версию в процессе регистрации диспетчера пакетов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageRegistrationEventArgs.removed">
      <summary>
        <para>Коллекция записей PackageManager.PackageInfo, которые необходимо удалить в процессе регистрации диспетчера пакетов.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.PackageSource">
      <summary>
        <para>Источник пакетов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.PackageSource.BuiltIn">
      <summary>
        <para>Пакет встроен и является частью Unity.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.PackageSource.Embedded">
      <summary>
        <para>Пакет встроен в проект Unity.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.PackageSource.Git">
      <summary>
        <para>На пакет ссылается непосредственно URL-адрес Git.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.PackageSource.Local">
      <summary>
        <para>На пакет ссылается локальный путь.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.PackageSource.LocalTarball">
      <summary>
        <para>На пакет ссылается локальный путь, указывающий на архивный файл GZip.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.PackageSource.Registry">
      <summary>
        <para>Пакет взят из реестра.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.PackageSource.Unknown">
      <summary>
        <para>Источник пакета неизвестен.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.PackOperationResult">
      <summary>
        <para>Структура, описывающая результат операции Client.Pack.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackOperationResult.tarballPath">
      <summary>
        <para>Путь к файлу, созданному операцией Client.Pack.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.RegistryInfo">
      <summary>
        <para>Предоставляет информацию о реестре пакетов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.RegistryInfo.isDefault">
      <summary>
        <para>Является ли это реестром по умолчанию, реестром Unity или одним из реестров с ограниченной областью действия, настроенных в манифесте проекта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.RegistryInfo.name">
      <summary>
        <para>Имя реестра.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.RegistryInfo.url">
      <summary>
        <para>URL-адрес реестра.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.RepositoryInfo">
      <summary>
        <para>Включает информацию о репозитории, в котором размещен пакет.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.RepositoryInfo.path">
      <summary>
        <para>Относительный путь к корню пакета в репозитории, если он отличается от корня репозитория.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.RepositoryInfo.revision">
      <summary>
        <para>Идентификатор версии, соответствующий версии пакета.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.RepositoryInfo.type">
      <summary>
        <para>Тип репозитория, например git.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.RepositoryInfo.url">
      <summary>
        <para>URL-адрес репозитория исходного кода.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.Requests.AddAndRemoveRequest">
      <summary>
        <para>Представляет асинхронный запрос на добавление зависимостей пакета в проект и/или удаление зависимостей пакета из проекта.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.Requests.AddRequest">
      <summary>
        <para>Представляет асинхронный запрос на добавление пакета в проект.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.Requests.EmbedRequest">
      <summary>
        <para>Представляет асинхронный запрос на встраивание пакета в проект.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.Requests.ListRequest">
      <summary>
        <para>Представляет асинхронный запрос для получения списка пакетов в проекте.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.Requests.PackRequest">
      <summary>
        <para>Представляет асинхронный запрос на упаковку папки пакета.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.Requests.RemoveRequest">
      <summary>
        <para>Представляет асинхронный запрос на удаление пакета из проекта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.Requests.RemoveRequest.PackageIdOrName">
      <summary>
        <para>Пакет удаляется этим запросом.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.Requests.Request">
      <summary>
        <para>Отслеживает состояние асинхронной операции сервера Unity Package Manager (Upm).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.Requests.Request.Error">
      <summary>
        <para>Ошибка, возвращаемая запросом, если таковая имеется.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.Requests.Request.IsCompleted">
      <summary>
        <para>Завершен ли запрос.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.Requests.Request.Status">
      <summary>
        <para>Статус запроса.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.Requests.Request`1">
      <summary>
        <para>Отслеживает состояние асинхронной операции сервера Unity Package Manager (Upm), которая возвращает непустой ответ.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.Requests.Request_1.Result">
      <summary>
        <para>Ответ на запрос.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.Requests.ResetToEditorDefaultsRequest">
      <summary>
        <para>Представляет асинхронный запрос на сброс пакетов проекта до текущей конфигурации редактора по умолчанию.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.Requests.SearchRequest">
      <summary>
        <para>Представляет асинхронный запрос на поиск пакета.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.Requests.SearchRequest.PackageIdOrName">
      <summary>
        <para>Идентификатор или имя пакета, используемое в этой операции поиска.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.StatusCode">
      <summary>
        <para>Статус операции диспетчера пакетов Unity.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.StatusCode.Failure">
      <summary>
        <para>Не удалось выполнить операцию диспетчера пакетов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.StatusCode.InProgress">
      <summary>
        <para>Выполняется операция диспетчера пакетов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.StatusCode.Success">
      <summary>
        <para>Операция диспетчера пакетов успешно завершена.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.VersionsInfo">
      <summary>
        <para>Определяет доступные версии пакета, а также совместимые, последние и рекомендуемые версии.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.VersionsInfo.all">
      <summary>
        <para>Все доступные версии пакета.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.VersionsInfo.compatible">
      <summary>
        <para>Версии пакета, совместимые с текущей версией Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.VersionsInfo.latest">
      <summary>
        <para>Последняя версия пакета.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.VersionsInfo.latestCompatible">
      <summary>
        <para>Последняя версия пакета, совместимая с текущей версией Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.VersionsInfo.recommended">
      <summary>
        <para>Устаревший. Вместо этого используйте свойство VersionsInfo.verified.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.VersionsInfo.verified">
      <summary>
        <para>Версия пакета, проверенная на совместимость с текущей версией Unity. Если проверенной версии нет, то это свойство является пустой строкой.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PauseState">
      <summary>
        <para>Перечисление, указывающее текущее состояние паузы редактора.

См. также: PlayModeStateChange, EditorApplication.pauseStateChanged, EditorApplication.isPaused.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PauseState.Paused">
      <summary>
        <para>Происходит, как только редактор приостанавливается, что может произойти как в режиме редактирования, так и в режиме воспроизведения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PauseState.Unpaused">
      <summary>
        <para>Происходит, как только редактор возобновляет паузу, что может произойти как в режиме редактирования, так и в режиме воспроизведения.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PhysicsDebugWindow">
      <summary>
        <para>Отображает параметры визуализации отладки физики.

Визуализация отладки физики отображается, только если открыто это окно.

См. также: PhysicsVisualizationSettings.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PhysicsVisualizationSettings">
      <summary>
        <para>Этот класс содержит настройки, управляющие визуализацией отладки физики.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PhysicsVisualizationSettings.articulationBodyColor">
      <summary>
        <para>Цвет тел артикуляции.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PhysicsVisualizationSettings.baseAlpha">
      <summary>
        <para>Величина альфа-канала, используемая для смешивания прозрачности.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PhysicsVisualizationSettings.colorVariance">
      <summary>
        <para>Используется для выделения соседних коллайдеров.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PhysicsVisualizationSettings.devOptions">
      <summary>
        <para>Показывает дополнительные параметры, используемые для разработки и отладки визуализации физики.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PhysicsVisualizationSettings.dirtyCount">
      <summary>
        <para>Грязный маркер, используемый для обновления графического интерфейса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PhysicsVisualizationSettings.enableMouseSelect">
      <summary>
        <para>Включает режимы выделения при наведении курсора мыши и выделения мышью.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PhysicsVisualizationSettings.forceOverdraw">
      <summary>
        <para>Принудительное рисование коллайдеров поверх любой другой геометрии, независимо от глубины.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PhysicsVisualizationSettings.kinematicColor">
      <summary>
        <para>Цвет для кинематических твердых тел.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PhysicsVisualizationSettings.rigidbodyColor">
      <summary>
        <para>Цвет для твердых тел, преимущественно активных.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PhysicsVisualizationSettings.showCollisionGeometry">
      <summary>
        <para>Должно ли PhysicsDebugWindow отображать геометрию столкновения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PhysicsVisualizationSettings.sleepingBodyColor">
      <summary>
        <para>Цвет для твердых тел, которые контролируются симулятором физики, но в данный момент не моделируются.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PhysicsVisualizationSettings.staticColor">
      <summary>
        <para>Цвет для коллайдеров, не имеющих компонента Rigidbody.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PhysicsVisualizationSettings.terrainTilesMax">
      <summary>
        <para>Максимальное количество тайлов сетки, доступных для рисования всех Terrain Colliders.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PhysicsVisualizationSettings.triggerColor">
      <summary>
        <para>Цвет коллайдеров, являющихся триггерами.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PhysicsVisualizationSettings.useSceneCam">
      <summary>
        <para>Управляет использованием камеры SceneView или GameView. Не отображается в пользовательском интерфейсе.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PhysicsVisualizationSettings.viewDistance">
      <summary>
        <para>Коллайдеры на этом расстоянии будут отображаться.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.ClearMouseHighlight">
      <summary>
        <para>Очищает выделенный коллайдер.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.DeinitDebugDraw">
      <summary>
        <para>Деинициализирует систему визуализации отладки физики и отслеживания изменений коллайдеров.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PhysicsVisualizationSettings.FilterWorkflow">
      <summary>
        <para>Определяет, должен ли рабочий процесс в окне отладки физики быть инклюзивным.
(&lt;a href="PhysicsVisualizationSettings.FilterWorkflow.ShowSelectedItems.html"&gt;ShowSelectedItems&lt;a&gt;) или монопольно (&lt;a href="PhysicsVisualizationSettings.FilterWorkflow.HideSelectedItems.html"&gt;HideSelectedItems&lt;a&gt;).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PhysicsVisualizationSettings.FilterWorkflow.HideSelectedItems">
      <summary>
        <para>С помощью HideSelectedItems вы можете скрыть выбранные элементы фильтра, чтобы легко отбрасывать неинтересные свойства Collider, тем самым упрощая обзор и навигацию.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PhysicsVisualizationSettings.FilterWorkflow.ShowSelectedItems">
      <summary>
        <para>С помощью ShowSelectedItems и кнопки Select None можно легко отслеживать очень специфические коллайдеры.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowArticulationBodies">
      <summary>
        <para>Должны ли тела артикуляции отображаться визуализатором физики.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowBoxColliders">
      <summary>
        <para>Должны ли быть показаны BoxColliders.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowCapsuleColliders">
      <summary>
        <para>Должны ли отображаться CapsuleColliders.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowCollisionLayer(System.Int32)">
      <summary>
        <para>Должен ли данный слой учитываться фильтром отображения.</para>
      </summary>
      <param name="layer">
      </param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowCollisionLayerMask">
      <summary>
        <para>Должна ли маска, представляющая слои, учитываться фильтром отображения.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowKinematicBodies">
      <summary>
        <para>Должны ли кинематические твердые тела учитываться фильтром отображения.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowMeshColliders(UnityEditor.PhysicsVisualizationSettings/MeshColliderType)">
      <summary>
        <para>Должны ли отображаться MeshColliders.</para>
      </summary>
      <param name="colliderType">
      </param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowPhysicsSceneMask">
      <summary>
        <para>Возвращает маску, представляющую сцены, включенные фильтром отображения</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowRigidbodies">
      <summary>
        <para>Должны ли какие-либо твердые тела учитываться фильтром отображения.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowSleepingBodies">
      <summary>
        <para>Должны ли спящие твердые тела учитываться фильтром отображения.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowSphereColliders">
      <summary>
        <para>Должны ли отображаться SphereColliders.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowStaticColliders">
      <summary>
        <para>Должны ли коллайдеры без компонента Rigidbody учитываться фильтром отображения.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowTerrainColliders">
      <summary>
        <para>Должны ли отображаться TerrainColliders.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowTriggers">
      <summary>
        <para>Должны ли триггеры учитываться фильтром отображения.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.HasMouseHighlight">
      <summary>
        <para>Возвращает true, если в настоящий момент выделен какой-либо физический объект.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.InitDebugDraw">
      <summary>
        <para>Инициализирует систему визуализации отладки физики. Для визуализации любых физических объектов система должна быть инициализирована. Обычно он инициализируется PhysicsDebugWindow.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PhysicsVisualizationSettings.MeshColliderType">
      <summary>
        <para>Является ли MeshCollider выпуклым.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PhysicsVisualizationSettings.MeshColliderType.Convex">
      <summary>
        <para>Соответствует MeshCollider.convex верно.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PhysicsVisualizationSettings.MeshColliderType.NonConvex">
      <summary>
        <para>Соответствует MeshCollider.convex имеет значение false.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.Reset">
      <summary>
        <para>Сбрасывает параметры визуализации в состояние по умолчанию.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowArticulationBodies(System.Boolean)">
      <summary>
        <para>Должны ли тела артикуляции отображаться визуализатором физики.</para>
      </summary>
      <param name="show">Значение для установки.</param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowBoxColliders(System.Boolean)">
      <summary>
        <para>Должны ли быть показаны BoxColliders.</para>
      </summary>
      <param name="show">
      </param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowCapsuleColliders(System.Boolean)">
      <summary>
        <para>Должны ли отображаться CapsuleColliders.</para>
      </summary>
      <param name="show">
      </param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowCollisionLayer(System.Int32,System.Boolean)">
      <summary>
        <para>Должен ли данный слой учитываться фильтром отображения.</para>
      </summary>
      <param name="layer">
      </param>
      <param name="show">
      </param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowCollisionLayerMask(System.Int32)">
      <summary>
        <para>Должна ли маска, представляющая слои, учитываться фильтром отображения.</para>
      </summary>
      <param name="mask">
      </param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowForAllFilters(System.Boolean)">
      <summary>
        <para>Включает или отключает все элементы фильтрации.</para>
      </summary>
      <param name="selected">
      </param>
      <param name="filterWorkflow">
      </param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowForAllFilters(UnityEditor.PhysicsVisualizationSettings/FilterWorkflow,System.Boolean)">
      <summary>
        <para>Включает или отключает все элементы фильтрации.</para>
      </summary>
      <param name="selected">
      </param>
      <param name="filterWorkflow">
      </param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowKinematicBodies(System.Boolean)">
      <summary>
        <para>Должны ли кинематические твердые тела учитываться фильтром отображения.</para>
      </summary>
      <param name="show">
      </param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowMeshColliders(UnityEditor.PhysicsVisualizationSettings/MeshColliderType,System.Boolean)">
      <summary>
        <para>Должны ли отображаться MeshColliders.</para>
      </summary>
      <param name="colliderType">
      </param>
      <param name="show">
      </param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowPhysicsSceneMask(System.Int32)">
      <summary>
        <para>Должна ли маска сцены учитываться фильтром отображения.</para>
      </summary>
      <param name="mask">
      </param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowRigidbodies(System.Boolean)">
      <summary>
        <para>Должны ли какие-либо твердые тела учитываться фильтром отображения.</para>
      </summary>
      <param name="show">
      </param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowSleepingBodies(System.Boolean)">
      <summary>
        <para>Должны ли спящие твердые тела и тела артикуляции учитываться фильтром отображения.</para>
      </summary>
      <param name="show">
      </param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowSphereColliders(System.Boolean)">
      <summary>
        <para>Должны ли отображаться SphereColliders.</para>
      </summary>
      <param name="show">
      </param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowStaticColliders(System.Boolean)">
      <summary>
        <para>Должны ли коллайдеры без компонента Rigidbody учитываться фильтром отображения.</para>
      </summary>
      <param name="show">
      </param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowTerrainColliders(System.Boolean)">
      <summary>
        <para>Должны ли отображаться TerrainColliders.</para>
      </summary>
      <param name="show">
      </param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowTriggers(System.Boolean)">
      <summary>
        <para>Должны ли триггеры учитываться фильтром отображения.</para>
      </summary>
      <param name="show">
      </param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.UpdateMouseHighlight(UnityEngine.Vector2)">
      <summary>
        <para>Обновляет подсветку при наведении курсора в заданной позиции мыши на экране.</para>
      </summary>
      <param name="screenPos">
      </param>
    </member>
    <member name="T:UnityEditor.PivotMode">
      <summary>
        <para>Где находится ручка инструмента.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PivotMode.Center">
      <summary>
        <para>Ручка инструмента находится в графическом центре выделения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PivotMode.Pivot">
      <summary>
        <para>Ручка инструмента находится в точке поворота активного объекта.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PivotRotation">
      <summary>
        <para>Как ориентирована ручка инструмента.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PivotRotation.Global">
      <summary>
        <para>Ручка инструмента выровнена по глобальным осям.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PivotRotation.Local">
      <summary>
        <para>Ручка инструмента ориентирована от активного объекта.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlatformIcon">
      <summary>
        <para>Контейнер слотов для значков.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlatformIcon.height">
      <summary>
        <para>Высота значка в пикселях.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlatformIcon.kind">
      <summary>
        <para>Тип PlatformIconKind зависит от целевой платформы.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlatformIcon.layerCount">
      <summary>
        <para>Количество слоев текстуры, которые в настоящее время содержит слот значка.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlatformIcon.maxLayerCount">
      <summary>
        <para>Максимальное количество слоев текстуры, необходимое для слота значка.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlatformIcon.minLayerCount">
      <summary>
        <para>Минимальное количество слоев текстуры, необходимое для слота значка.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlatformIcon.width">
      <summary>
        <para>Ширина значка в пикселях.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PlatformIcon.GetTexture(System.Int32)">
      <summary>
        <para>Получить текстуру, которая в данный момент назначена указанному слою.</para>
      </summary>
      <param name="layer">Не может быть больше, чем PlatformIcon.maxLayerCount.</param>
    </member>
    <member name="M:UnityEditor.PlatformIcon.GetTextures">
      <summary>
        <para>Получить массив всех текстур, которые в настоящее время назначены слоту значка.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PlatformIcon.SetTexture(UnityEngine.Texture2D,System.Int32)">
      <summary>
        <para>Назначить текстуру указанному слою.</para>
      </summary>
      <param name="layer">Не может быть больше, чем PlatformIcon.maxLayerCount.</param>
      <param name="texture">
      </param>
    </member>
    <member name="M:UnityEditor.PlatformIcon.SetTextures(UnityEngine.Texture2D[])">
      <summary>
        <para>Назначьте все доступные слои значков.</para>
      </summary>
      <param name="textures">Должен быть массивом размера PlatformIcon.maxLayerCount.</param>
    </member>
    <member name="T:UnityEditor.PlatformIconKind">
      <summary>
        <para>Оболочка вида значка.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Playables.PlayableOutputEditorExtensions">
      <summary>
        <para>Расширения редактора для всех типов, реализующих IPlayableOutput.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Playables.PlayableOutputEditorExtensions.GetEditorName(U)">
      <summary>
        <para>Возвращает имя PlayableOutput.</para>
      </summary>
      <param name="output">PlayableOutput, используемый этой операцией.</param>
    </member>
    <member name="T:UnityEditor.Playables.Utility">
      <summary>
        <para>Служебные функции редактора для графа Playable и его узлов.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Playables.Utility.destroyingGraph(System.Action`1&lt;UnityEngine.Playables.PlayableGraph&gt;)">
      <summary>
        <para>Событие срабатывает всякий раз, когда PlayableGraph уничтожается.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="?:UnityEditor.Playables.Utility.graphCreated(System.Action`1&lt;UnityEngine.Playables.PlayableGraph&gt;)">
      <summary>
        <para>Событие запускается всякий раз, когда создается новый PlayableGraph.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="M:UnityEditor.Playables.Utility.GetAllGraphs">
      <summary>
        <para>Возвращает все существующие PlayableGraphs.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerConnectionInitiateMode">
      <summary>
        <para>Описывает, как проигрыватель подключается к редактору.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerConnectionInitiateMode.None">
      <summary>
        <para>Режим подключения плеера не установлен.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerConnectionInitiateMode.PlayerConnectsToHost">
      <summary>
        <para>Подключение игрока инициируется игроком, подключающимся к хосту, обычно хостом является редактор.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerConnectionInitiateMode.PlayerListens">
      <summary>
        <para>Подключение к проигрывателю инициируется проигрывателем, передающим свой IP-адрес, а затем к проигрывателю подключается Редактор.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings">
      <summary>
        <para>Настройки игрока — это место, где вы определяете различные параметры финальной игры, которую вы создадите в Unity. Некоторые из этих значений используются в диалоговом окне разрешения, которое открывается при открытии отдельной игры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.accelerometerFrequency">
      <summary>
        <para>Частота обновления акселерометра.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.actionOnDotNetUnhandledException">
      <summary>
        <para>Задает поведение при сбое при необработанном исключении .NET.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.advancedLicense">
      <summary>
        <para>Используется расширенная версия?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.allowedAutorotateToLandscapeLeft">
      <summary>
        <para>Поддерживается ли автоматический поворот в альбомную левостороннюю ориентацию?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.allowedAutorotateToLandscapeRight">
      <summary>
        <para>Поддерживается ли автоматический поворот в альбомную ориентацию вправо?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.allowedAutorotateToPortrait">
      <summary>
        <para>Поддерживается ли автоматический поворот в портретную ориентацию?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.allowedAutorotateToPortraitUpsideDown">
      <summary>
        <para>Поддерживается ли автоматический поворот в книжную ориентацию вверх ногами?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.allowFullscreenSwitch">
      <summary>
        <para>Если этот параметр включен, пользователь может переключаться между полноэкранным и оконным режимами с помощью горячих клавиш ОС.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.allowUnsafeCode">
      <summary>
        <para>Разрешить компиляцию «небезопасного» кода C# для предопределенных сборок.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.aotOptions">
      <summary>
        <para>Дополнительные параметры компиляции AOT. Используется платформами AOT.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.apiCompatibilityLevel">
      <summary>
        <para>Устарело. Вместо этого используйте PlayerSettings.GetApiCompatibilityLevel и PlayerSettings.SetApiCompatibilityLevel.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.applicationIdentifier">
      <summary>
        <para>Идентификатор приложения для текущей выбранной цели сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.assemblyVersionValidation">
      <summary>
        <para>Установите значение true для точного соответствия версий сборок со строгими именами.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.bakeCollisionMeshes">
      <summary>
        <para>Предварительно запекайте сетки коллизий при сборке игрока.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.bundleVersion">
      <summary>
        <para>Версия пакета приложений, совместно используемая платформами iOS и Android.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.captureSingleScreen">
      <summary>
        <para>Определяет, должны ли полноэкранные игры затемнять дополнительные дисплеи.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.cloudProjectId">
      <summary>
        <para>Уникальный идентификатор облачного проекта. Он уникален для каждого проекта (только для чтения).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.colorSpace">
      <summary>
        <para>Установите цветовое пространство рендеринга для текущего проекта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.companyName">
      <summary>
        <para>Название вашей компании.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.cursorHotspot">
      <summary>
        <para>Позиция щелчка курсора по умолчанию в пикселях от верхнего левого угла изображения курсора.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.d3d11FullscreenMode">
      <summary>
        <para>Определите, как обрабатывать полноэкранный режим в автономных версиях Windows (режим Direct3D 11).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.d3d9FullscreenMode">
      <summary>
        <para>Определите, как обрабатывать полноэкранный режим в автономных версиях Windows (режим Direct3D 9).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.defaultCursor">
      <summary>
        <para>Курсор по умолчанию для вашего приложения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.defaultInterfaceOrientation">
      <summary>
        <para>Ориентация экрана по умолчанию для мобильных устройств.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.defaultIsFullScreen">
      <summary>
        <para>Если этот параметр включен, по умолчанию игра будет работать в полноэкранном режиме.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.defaultScreenHeight">
      <summary>
        <para>Вертикальный размер окна автономного проигрывателя по умолчанию.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.defaultScreenWidth">
      <summary>
        <para>Горизонтальный размер окна автономного проигрывателя по умолчанию.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.defaultWebScreenHeight">
      <summary>
        <para>Вертикальный размер окна веб-плеера по умолчанию.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.defaultWebScreenWidth">
      <summary>
        <para>Горизонтальный размер окна веб-плеера по умолчанию.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.displayResolutionDialog">
      <summary>
        <para>Определяет поведение диалогового окна разрешения при запуске продукта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.enable360StereoCapture">
      <summary>
        <para>Включить поддержку 360 Stereo Capture для текущей цели сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.enableCrashReportAPI">
      <summary>
        <para>Включает CrashReport API.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.enableFrameTimingStats">
      <summary>
        <para>Включить статистику синхронизации кадров.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.enableInternalProfiler">
      <summary>
        <para>Включает внутренний профилировщик.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.enableMetalAPIValidation">
      <summary>
        <para>Включает проверку Metal API в редакторе.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.enableOpenGLProfilerGPURecorders">
      <summary>
        <para>Включить использование ProfilerRecorder для записи таймингов графического процессора при рендеринге с помощью OpenGL.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.firstStreamedLevelWithResources">
      <summary>
        <para>Первый уровень, чтобы иметь доступ ко всем ресурсам Resources.Load в Streamed Web Players.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.forceSingleInstance">
      <summary>
        <para>Ограничить автономные проигрыватели одним одновременно работающим экземпляром.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.fullScreenMode">
      <summary>
        <para>Независимый от платформы параметр для определения полноэкранного поведения. Не все платформы поддерживают все режимы.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.gcIncremental">
      <summary>
        <para>Позволяет включить или отключить добавочный режим для сборки мусора.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.gpuSkinning">
      <summary>
        <para>Включите скин GPU на поддерживаемых платформах.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.graphicsJobMode">
      <summary>
        <para>Выбирает режим графического задания для использования на платформах, поддерживающих как исходные, так и устаревшие графические задания.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.graphicsJobs">
      <summary>
        <para>Включить графические задания (многопоточный рендеринг).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iPhoneBundleIdentifier">
      <summary>
        <para>Идентификатор пакета приложения для iPhone.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.keyaliasPass">
      <summary>
        <para>Пароль для ключа, используемого для подписи приложения Android.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.keystorePass">
      <summary>
        <para>Пароль, используемый для взаимодействия с хранилищем ключей Android.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.legacyClampBlendShapeWeights">
      <summary>
        <para>Определяет, фиксируется ли диапазон веса BlendShape в SkinnedMeshRenderers.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.locationUsageDescription">
      <summary>
        <para>Описывает причину доступа к данным о местоположении пользователя.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.logObjCUncaughtExceptions">
      <summary>
        <para>Регистрируются ли необработанные исключения ObjC?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.macFullscreenMode">
      <summary>
        <para>Определите, как обрабатывать полноэкранный режим в автономных версиях macOS.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.macRetinaSupport">
      <summary>
        <para>Включить поддержку Retina для macOS.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.mipStripping">
      <summary>
        <para>Включить удаление MIP-файлов для всех платформ.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.muteOtherAudioSources">
      <summary>
        <para>Останавливает или разрешает воспроизведение звука из других приложений в фоновом режиме во время работы вашего приложения Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.openGLRequireES31">
      <summary>
        <para>Указывает, требуется ли приложению поддержка OpenGL ES 3.1.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.openGLRequireES31AEP">
      <summary>
        <para>Указывает, требуется ли приложению поддержка OpenGL ES 3.1 AEP.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.openGLRequireES32">
      <summary>
        <para>Указывает, требуется ли приложению поддержка OpenGL ES 3.2.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.preserveFramebufferAlpha">
      <summary>
        <para>Если этот параметр включен, значение альфа-канала сохраняется в буфере кадра для поддержки рендеринга через собственный пользовательский интерфейс на Android.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.productName">
      <summary>
        <para>Название вашего продукта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.protectGraphicsMemory">
      <summary>
        <para>Защитите графическую память.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.renderingPath">
      <summary>
        <para>Какой путь рендеринга включен?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.resetResolutionOnWindowResize">
      <summary>
        <para>Указывает, сбрасывать ли разрешение экрана приложения при изменении собственного размера окна.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.resizableWindow">
      <summary>
        <para>Используйте окно с изменяемым размером в отдельных сборках проигрывателя.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.resolutionDialogBanner">
      <summary>
        <para>Изображение для отображения в диалоговом окне разрешения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.runInBackground">
      <summary>
        <para>Если этот параметр включен, ваша игра продолжит работу после потери фокуса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.scriptingRuntimeVersion">
      <summary>
        <para>Параметр версии среды выполнения сценариев. Измените это, чтобы установить версию, которую использует редактор, и перезапустите редактор, чтобы изменения вступили в силу.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.showUnitySplashScreen">
      <summary>
        <para>Должен ли отображаться встроенный экран-заставка Unity?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.singlePassStereoRendering">
      <summary>
        <para>Должна ли Unity поддерживать однопроходный стереорендеринг?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.splashScreenStyle">
      <summary>
        <para>Стиль, используемый для встроенной заставки Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.statusBarHidden">
      <summary>
        <para>Возвращает, если строка состояния должна быть скрыта. Поддерживается только на iOS; на Android строка состояния всегда скрыта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.stereoRenderingPath">
      <summary>
        <para>Активный путь стереорендеринга</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.stereoscopic3D">
      <summary>
        <para>Должен ли проигрыватель воспроизводиться в стереоскопическом 3D на поддерживаемом оборудовании?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.stripEngineCode">
      <summary>
        <para>Удалите неиспользуемый код Engine из вашей сборки (только для IL2CPP).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.strippingLevel">
      <summary>
        <para>Устарело. Вместо этого используйте PlayerSettings.GetManagedStrippingLevel и PlayerSettings.SetManagedStrippingLevel.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.stripUnusedMeshComponents">
      <summary>
        <para>Следует ли исключить из сборки игры неиспользуемые компоненты Mesh?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.suppressCommonWarnings">
      <summary>
        <para>Подавляет распространенные предупреждения C#.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.uploadClearedTextureDataAfterCreationFromScript">
      <summary>
        <para>Загрузите инициализированные данные Текстуры после создания из скрипта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.use32BitDisplayBuffer">
      <summary>
        <para>Используется 32-битный буфер отображения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.useAnimatedAutorotation">
      <summary>
        <para>Разрешить ОС автоматически поворачивать экран при изменении ориентации устройства.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.useDirect3D11">
      <summary>
        <para>Следует ли использовать Direct3D 11, когда он доступен?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.useFlipModelSwapchain">
      <summary>
        <para>Используйте цепочку перестановки моделей DXGI для D3D11.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.useHDRDisplay">
      <summary>
        <para>Переключите дисплей в режим HDR (если доступно).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.useMacAppStoreValidation">
      <summary>
        <para>Включить проверку получения для Mac App Store.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.usePlayerLog">
      <summary>
        <para>Запишите файл журнала с отладочной информацией.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.useReferenceAssemblies">
      <summary>
        <para>Установите значение true, чтобы Unity использовала эталонные сборки Roslyn при компиляции скриптов. Включено по умолчанию.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.virtualRealitySplashScreen">
      <summary>
        <para>Экран-заставка для виртуальной реальности.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.virtualRealitySupported">
      <summary>
        <para>Включить поддержку виртуальной реальности для текущей цели сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.visibleInBackground">
      <summary>
        <para>В Windows показывать приложение в фоновом режиме, если используется полноэкранный оконный режим.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.vulkanEnableLateAcquireNextImage">
      <summary>
        <para>Задерживает получение изображения цепи обмена до тех пор, пока кадр не будет отрендерен.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.vulkanEnablePreTransform">
      <summary>
        <para>Применяет поворот дисплея во время рендеринга.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.vulkanEnableSetSRGBWrite">
      <summary>
        <para>Включает Graphics.SetSRGBWrite() в модуле визуализации Vulkan.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.vulkanNumSwapchainBuffers">
      <summary>
        <para>Установите количество буферов цепочки обмена, которые будут использоваться с визуализатором Vulkan</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.vulkanUseSWCommandBuffers">
      <summary>
        <para>Используйте программные буферы команд для построения команд рендеринга на Vulkan.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.Android">
      <summary>
        <para>Настройки проигрывателя для Android.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.androidIsGame">
      <summary>
        <para>Публикуйте сборку как игру, а не как обычное приложение. Этот параметр влияет на устройства под управлением Android 5.0 Lollipop и более поздних версий.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.androidTargetDevices">
      <summary>
        <para>Выберите, на каких устройствах разрешено запускать приложение Android (все устройства, только мобильные телефоны, планшеты и телевизоры или только устройства с Chrome OS).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.androidTVCompatibility">
      <summary>
        <para>Предоставьте сборку, совместимую с Android TV.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.blitType">
      <summary>
        <para>Выберите способ отображения содержимого на экране.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.buildApkPerCpuArchitecture">
      <summary>
        <para>Создайте отдельный APK для каждой архитектуры ЦП.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.bundleVersionCode">
      <summary>
        <para>Код версии пакета Android.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.chromeosInputEmulation">
      <summary>
        <para>Снимите флажок, чтобы отключить поведение Chrome OS по умолчанию для преобразования событий ввода с мыши и сенсорной панели в события ввода с сенсорного экрана.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.defaultWindowHeight">
      <summary>
        <para>Вертикальный размер окна Android Player по умолчанию в пикселях.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.defaultWindowWidth">
      <summary>
        <para>Горизонтальный размер окна Android Player по умолчанию в пикселях.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.disableDepthAndStencilBuffers">
      <summary>
        <para>Отключить буферы глубины и трафарета.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.forceInternetPermission">
      <summary>
        <para>Флаг принудительного доступа к Интернету.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.forceSDCardPermission">
      <summary>
        <para>Принудительное разрешение SD-карты.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.fullscreenMode">
      <summary>
        <para>Режим отображения для Android Player сборок вашего приложения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.keyaliasName">
      <summary>
        <para>Псевдоним ключа Android.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.keyaliasPass">
      <summary>
        <para>Псевдоним пароля ключа Android.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.keystoreName">
      <summary>
        <para>Имя хранилища ключей Android.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.keystorePass">
      <summary>
        <para>Пароль хранилища ключей Android.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.licenseVerification">
      <summary>
        <para>Флаг проверки лицензии.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.maxAspectRatio">
      <summary>
        <para>Максимальное соотношение сторон, поддерживаемое приложением.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.minifyDebug">
      <summary>
        <para>Включите, чтобы минимизировать отладочную сборку.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.minifyRelease">
      <summary>
        <para>Включите, чтобы минимизировать сборку выпуска.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.minifyWithR8">
      <summary>
        <para>Используйте R8 для выполнения минификации.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.minimumWindowHeight">
      <summary>
        <para>Минимальный вертикальный размер окна Android Player в пикселях.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.minimumWindowWidth">
      <summary>
        <para>Минимальный горизонтальный размер окна Android Player в пикселях.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.minSdkVersion">
      <summary>
        <para>Минимальный уровень API, необходимый для запуска вашего приложения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.optimizedFramePacing">
      <summary>
        <para>Включить оптимизированную синхронизацию кадров.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.preferredInstallLocation">
      <summary>
        <para>Предпочтительное место установки приложения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.renderOutsideSafeArea">
      <summary>
        <para>Расширяет макет рендеринга до области выреза дисплея, используя все доступное пространство экрана.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.resizableWindow">
      <summary>
        <para>Указывает, поддерживает ли сборка Android Player вашего приложения изменяемый размер окна.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.showActivityIndicatorOnLoading">
      <summary>
        <para>Приложение должно отображать ActivityIndicator при загрузке.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.splashScreenScale">
      <summary>
        <para>Режим масштабирования экрана-заставки Android.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.startInFullscreen">
      <summary>
        <para>Запустить в полноэкранном режиме.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.targetArchitectures">
      <summary>
        <para>Набор архитектур ЦП для цели сборки Android.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.targetDevice">
      <summary>
        <para>Целевое устройство Android.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.targetSdkVersion">
      <summary>
        <para>Целевой уровень API вашего приложения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.use24BitDepthBuffer">
      <summary>
        <para>Используется 24-битный буфер глубины.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.useAPKExpansionFiles">
      <summary>
        <para>Используйте файлы расширения APK.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.useCustomKeystore">
      <summary>
        <para>Включить подписывание приложений с помощью пользовательского хранилища ключей.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.ARCoreEnabled">
      <summary>
        <para>Включите поддержку Google ARCore на поддерживаемых устройствах.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.D3DHDRBitDepth">
      <summary>
        <para>Количество битов в каждом цветовом канале для буферов цепочки обмена. (режим Direct3D 11 и Direct3D 12).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.Facebook">
      <summary>
        <para>Специальные настройки проигрывателя Facebook.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetAdditionalCompilerArguments(UnityEditor.Build.NamedBuildTarget)">
      <summary>
        <para>Получает массив дополнительных аргументов компилятора, установленных для определенного объекта NamedBuildTarget.</para>
      </summary>
      <param name="buildTarget">NamedBuildTarget, для которого нужно получить аргументы компилятора.</param>
      <returns>
        <para>Возвращает массив с аргументами компилятора, связанными с NamedBuildTarget.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetAdditionalCompilerArgumentsForGroup(UnityEditor.BuildTargetGroup)">
      <summary>
        <para>BuildTargetGroup помечен как устаревший в будущем. Вместо этого используйте PlayerSettings.GetAdditionalCompilerArguments.</para>
      </summary>
      <param name="targetGroup">Группа BuildTargetGroup, для которой нужно получить аргументы компилятора.</param>
      <returns>
        <para>Возвращает массив с аргументами компилятора, связанными с BuildTargetGroup.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetAdditionalIl2CppArgs">
      <summary>
        <para>Получите дополнительные аргументы, переданные компилятору IL2CPP в процессе сборки проигрывателя.</para>
      </summary>
      <returns>
        <para>Дополнительные аргументы, передаваемые компилятору IL2CPP в процессе сборки.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetApiCompatibilityLevel(UnityEditor.Build.NamedBuildTarget)">
      <summary>
        <para>Получает уровень совместимости .NET API для указанной цели сборки.</para>
      </summary>
      <param name="buildTarget">Объект NamedBuildTarget.</param>
      <returns>
        <para>Возвращает ApiCompatibilityLevel, связанный с NamedBuildTarget.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetApiCompatibilityLevel(UnityEditor.BuildTargetGroup)">
      <summary>
        <para>BuildTargetGroup помечен как устаревший в будущем. Вместо этого используйте NamedBuildTarget.</para>
      </summary>
      <param name="buildTargetGroup">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetApplicationIdentifier(UnityEditor.Build.NamedBuildTarget)">
      <summary>
        <para>Получить идентификатор приложения для указанной платформы.</para>
      </summary>
      <param name="buildTarget">Объект NamedBuildTarget.</param>
      <returns>
        <para>Возвращает идентификатор приложения, связанный с NamedBuildTarget.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetApplicationIdentifier(UnityEditor.BuildTargetGroup)">
      <summary>
        <para>BuildTargetGroup помечен как устаревший в будущем. Вместо этого используйте NamedBuildTarget.</para>
      </summary>
      <param name="targetGroup">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetArchitecture(UnityEditor.Build.NamedBuildTarget)">
      <summary>
        <para>Получает архитектуру для заданной цели сборки.</para>
      </summary>
      <param name="buildTarget">Объект NamedBuildTarget.</param>
      <returns>
        <para>Целочисленное значение, связанное с архитектурой цели сборки. 0 — нет, 1 — ARM64, 2 — универсальный.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetArchitecture(UnityEditor.BuildTargetGroup)">
      <summary>
        <para>BuildTargetGroup помечен как устаревший в будущем. Вместо этого используйте NamedBuildTarget.</para>
      </summary>
      <param name="targetGroup">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetDefaultScriptingBackend(UnityEditor.Build.NamedBuildTarget)">
      <summary>
        <para>Возвращает ScriptingImplementation по умолчанию для выбранной цели сборки.</para>
      </summary>
      <param name="buildTarget">Объект NamedBuildTarget.</param>
      <returns>
        <para>Объект ScriptingImplementation, описывающий серверную часть сценариев по умолчанию для выбранной цели сборки.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetDefaultScriptingBackend(UnityEditor.BuildTargetGroup)">
      <summary>
        <para>BuildTargetGroup помечен как устаревший в будущем. Вместо этого используйте NamedBuildTarget.</para>
      </summary>
      <param name="targetGroup">Группа платформ, для которой нужно получить серверную часть сценариев.</param>
      <returns>
        <para>Объект ScriptingImplementation, описывающий серверную часть сценариев по умолчанию, используемую в этой цели сборки.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetDefaultShaderChunkCount">
      <summary>
        <para>Получает ограничение по умолчанию на количество фрагментов вариантов шейдера, которые Unity загружает и хранит в памяти.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetDefaultShaderChunkSizeInMB">
      <summary>
        <para>Получает размер по умолчанию для фрагментов сжатых вариантов шейдера.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetGraphicsAPIs(UnityEditor.BuildTarget)">
      <summary>
        <para>Получить графические API для использования на платформе сборки.</para>
      </summary>
      <param name="platform">Платформа, для которой нужно получить API.</param>
      <returns>
        <para>Массив графических API.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetIcons(UnityEditor.Build.NamedBuildTarget,UnityEditor.IconKind)">
      <summary>
        <para>Возвращает список назначенных значков для указанной цели сборки.</para>
      </summary>
      <param name="buildTarget">Объект NamedBuildTarget.</param>
      <param name="kind">IconKind.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetIconsForTargetGroup(UnityEditor.BuildTargetGroup)">
      <summary>
        <para>BuildTargetGroup помечен как устаревший в будущем. Вместо этого используйте PlayerSettings.GetIcons.</para>
      </summary>
      <param name="platform">
      </param>
      <param name="kind">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetIconsForTargetGroup(UnityEditor.BuildTargetGroup,UnityEditor.IconKind)">
      <summary>
        <para>BuildTargetGroup помечен как устаревший в будущем. Вместо этого используйте PlayerSettings.GetIcons.</para>
      </summary>
      <param name="platform">
      </param>
      <param name="kind">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetIconSizes(UnityEditor.Build.NamedBuildTarget,UnityEditor.IconKind)">
      <summary>
        <para>Возвращает список размеров значков для указанной платформы.</para>
      </summary>
      <param name="buildTarget">Объект NamedBuildTarget.</param>
      <param name="kind">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetIconSizesForTargetGroup(UnityEditor.BuildTargetGroup)">
      <summary>
        <para>BuildTargetGroup помечен как устаревший в будущем. Вместо этого используйте PlayerSettings.GetIconSizes.</para>
      </summary>
      <param name="platform">
      </param>
      <param name="kind">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetIconSizesForTargetGroup(UnityEditor.BuildTargetGroup,UnityEditor.IconKind)">
      <summary>
        <para>BuildTargetGroup помечен как устаревший в будущем. Вместо этого используйте PlayerSettings.GetIconSizes.</para>
      </summary>
      <param name="platform">
      </param>
      <param name="kind">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetIl2CppCompilerConfiguration(UnityEditor.Build.NamedBuildTarget)">
      <summary>
        <para>Получает конфигурацию компилятора, используемую при компиляции сгенерированного кода C++ для указанной вами цели сборки.</para>
      </summary>
      <param name="buildTarget">Объект NamedBuildTarget.</param>
      <returns>
        <para>Возвращает конфигурацию компилятора.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetIl2CppCompilerConfiguration(UnityEditor.BuildTargetGroup)">
      <summary>
        <para>BuildTargetGroup помечен как устаревший в будущем. Вместо этого используйте NamedBuildTarget.</para>
      </summary>
      <param name="targetGroup">Создать целевую группу.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetIncrementalIl2CppBuild(UnityEditor.Build.NamedBuildTarget)">
      <summary>
        <para>Получает значение опции инкрементной сборки il2cpp.</para>
      </summary>
      <param name="buildTarget">Объект NamedBuildTarget.</param>
      <returns>
        <para>Возвращает логическое значение, указывающее, настроена ли цель сборки, поддерживаемая IL2CPP, на использование добавочных сборок.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetIncrementalIl2CppBuild(UnityEditor.BuildTargetGroup)">
      <summary>
        <para>BuildTargetGroup помечен как устаревший в будущем. Вместо этого используйте NamedBuildTarget.</para>
      </summary>
      <param name="targetGroup">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetManagedStrippingLevel(UnityEditor.Build.NamedBuildTarget)">
      <summary>
        <para>Получает набор управляемого уровня удаления кода для выбранной цели сборки</para>
      </summary>
      <param name="buildTarget">Объект NamedBuildTarget.</param>
      <returns>
        <para>Возвращает ManagedStrippingLevel по умолчанию для выбранной цели сборки.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetManagedStrippingLevel(UnityEditor.BuildTargetGroup)">
      <summary>
        <para>BuildTargetGroup помечен как устаревший в будущем. Вместо этого используйте NamedBuildTarget.</para>
      </summary>
      <param name="targetGroup">Целевая группа платформ, для которой требуется получить уровень разделения кода.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetMobileMTRendering(UnityEditor.Build.NamedBuildTarget)">
      <summary>
        <para>Проверьте, включена ли опция многопоточного рендеринга для мобильной платформы.</para>
      </summary>
      <param name="buildTarget">Объект NamedBuildTarget. (Только для iOS, tvOS и Android).</param>
      <returns>
        <para>Возвращает значение true, если включен параметр многопоточной визуализации для цели сборки.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetMobileMTRendering(UnityEditor.BuildTargetGroup)">
      <summary>
        <para>BuildTargetGroup помечен как устаревший в будущем. Вместо этого используйте NamedBuildTarget.</para>
      </summary>
      <param name="targetGroup">Мобильная платформа (только iOS, tvOS и Android).</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetNormalMapEncoding(UnityEditor.Build.NamedBuildTarget)">
      <summary>
        <para>Получает NormalMapEncoding для выбранной цели сборки.</para>
      </summary>
      <param name="buildTarget">Объект NamedBuildTarget.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetNormalMapEncoding(UnityEditor.BuildTargetGroup)">
      <summary>
        <para>BuildTargetGroup помечен как устаревший в будущем. Вместо этого используйте NamedBuildTarget.</para>
      </summary>
      <param name="platform">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetOverrideShaderChunkSettingsForPlatform(UnityEditor.BuildTarget)">
      <summary>
        <para>Если значение равно true, настройки для buildTarget переопределяют настройки по умолчанию.</para>
      </summary>
      <param name="buildTarget">Цель сборки для проверки переопределения.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetPlatformIcons(UnityEditor.Build.NamedBuildTarget,UnityEditor.PlatformIconKind)">
      <summary>
        <para>Получает список доступных слотов значков для указанной цели сборки и типа PlatformIconKind|kind.</para>
      </summary>
      <param name="buildTarget">Объект NamedBuildTarget.</param>
      <param name="kind">Каждая платформа поддерживает свой набор типов значков PlatformIconKind|. Их можно найти в пространстве имен конкретной платформы (например, iOSPlatformIconKind.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetPlatformIcons(UnityEditor.BuildTargetGroup,UnityEditor.PlatformIconKind)">
      <summary>
        <para>BuildTargetGroup помечен как устаревший в будущем. Вместо этого используйте NamedBuildTarget.</para>
      </summary>
      <param name="platform">Полный список платформ, поддерживающих этот API, и поддерживаемые типы значков можно найти в разделе PlatformIconKind|виды значков.</param>
      <param name="kind">Каждая платформа поддерживает свой набор типов значков PlatformIconKind|. Их можно найти в пространстве имен конкретной платформы (например, iOSPlatformIconKind).</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetPreloadedAssets">
      <summary>
        <para>Возвращает активы, которые будут загружены при запуске в проигрывателе и останутся активными до завершения работы проигрывателя.</para>
      </summary>
      <returns>
        <para>Ресурсы для предварительной загрузки.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetPropertyBool(System.String,UnityEditor.BuildTargetGroup)">
      <summary>
        <para>Сейчас это устарело. Вместо этого используйте явный API. Например, PlayerSettings.WebGL.useEmbeddedResources.</para>
      </summary>
      <param name="name">Имя свойства.</param>
      <param name="target">BuildTarget, для которого должно применяться это свойство (используйте значение по умолчанию BuildTargetGroup.Unknown, чтобы применить его ко всем целям).</param>
      <returns>
        <para>Текущее значение свойства.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetPropertyInt(System.String,UnityEditor.BuildTargetGroup)">
      <summary>
        <para>Возвращает свойство PlayerSettings с именем int (с необязательным целевым объектом сборки, к которому оно должно применяться).</para>
      </summary>
      <param name="name">Имя свойства.</param>
      <param name="target">BuildTarget, для которого должно применяться это свойство (используйте значение по умолчанию BuildTargetGroup.Unknown, чтобы применить его ко всем целям).</param>
      <returns>
        <para>Текущее значение свойства.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetPropertyOptionalBool(System.String,System.Boolean&amp;,UnityEditor.BuildTargetGroup)">
      <summary>
        <para>Ищет свойство и присваивает его значение заданной переменной.</para>
      </summary>
      <param name="name">Имя свойства.</param>
      <param name="value">Переменная, в которой сохраняется значение свойства, если оно установлено.</param>
      <param name="target">Необязательная целевая группа сборки, к которой применяется это свойство.</param>
      <returns>
        <para>Истинно, если свойство было установлено и его значение присвоено данной переменной.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetPropertyOptionalInt(System.String,System.Int32&amp;,UnityEditor.BuildTargetGroup)">
      <summary>
        <para>Ищет свойство и присваивает его значение заданной переменной.</para>
      </summary>
      <param name="name">Имя свойства.</param>
      <param name="value">Переменная, в которой сохраняется значение свойства, если оно установлено.</param>
      <param name="target">Необязательная целевая группа сборки, к которой применяется это свойство.</param>
      <returns>
        <para>Истинно, если свойство было установлено и его значение присвоено данной переменной.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetPropertyOptionalString(System.String,System.String&amp;,UnityEditor.BuildTargetGroup)">
      <summary>
        <para>Ищет свойство и присваивает его значение заданной переменной.</para>
      </summary>
      <param name="name">Имя свойства.</param>
      <param name="value">Переменная, в которой сохраняется значение свойства, если оно установлено.</param>
      <param name="target">Необязательная целевая группа сборки, к которой применяется это свойство.</param>
      <returns>
        <para>Истинно, если свойство было установлено и его значение присвоено данной переменной.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetPropertyString(System.String,UnityEditor.BuildTargetGroup)">
      <summary>
        <para>Возвращает именованное строковое свойство PlayerSettings (с необязательным целевым объектом сборки, к которому оно должно применяться).</para>
      </summary>
      <param name="name">Имя свойства.</param>
      <param name="target">BuildTarget, для которого должно применяться это свойство (используйте значение по умолчанию BuildTargetGroup.Unknown, чтобы применить его ко всем целям).</param>
      <returns>
        <para>Текущее значение свойства.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetScriptingBackend(UnityEditor.Build.NamedBuildTarget)">
      <summary>
        <para>Получает среду сценариев для выбранной цели сборки.</para>
      </summary>
      <param name="buildTarget">Объект NamedBuildTarget.</param>
      <returns>
        <para>Возвращает серверные части сценариев IL2CPP, Mono или .NET.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetScriptingBackend(UnityEditor.BuildTargetGroup)">
      <summary>
        <para>BuildTargetGroup помечен как устаревший в будущем. Вместо этого используйте NamedBuildTarget.</para>
      </summary>
      <param name="targetGroup">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetScriptingDefineSymbols(UnityEditor.Build.NamedBuildTarget)">
      <summary>
        <para>Получает указанные пользователем символы для компиляции сценария для выбранной цели сборки.</para>
      </summary>
      <param name="buildTarget">Объект NamedBuildTarget.</param>
      <returns>
        <para>Строка, содержащая символы для заданного имени цели сборки.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetScriptingDefineSymbols(UnityEditor.Build.NamedBuildTarget,System.String[]&amp;)">
      <summary>
        <para>Получает указанные пользователем символы для компиляции сценария для выбранной цели сборки.</para>
      </summary>
      <param name="buildTarget">Объект NamedBuildTarget.</param>
      <param name="defines">Массив строк, в котором Unity хранит символы для заданного имени цели сборки.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetScriptingDefineSymbolsForGroup(UnityEditor.BuildTargetGroup)">
      <summary>
        <para>BuildTargetGroup помечен как устаревший в будущем. Вместо этого используйте PlayerSettings.GetScriptingDefineSymbols.</para>
      </summary>
      <param name="targetGroup">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetShaderChunkCountForPlatform(UnityEditor.BuildTarget)">
      <summary>
        <para>Получает ограничение по умолчанию на количество фрагментов вариантов шейдера, которые Unity загружает и хранит в памяти для цели сборки.</para>
      </summary>
      <param name="buildTarget">Цель сборки, для которой нужно получить количество фрагментов шейдера.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetShaderChunkSizeInMBForPlatform(UnityEditor.BuildTarget)">
      <summary>
        <para>Получает размер по умолчанию для фрагментов сжатых вариантов шейдера для цели сборки.</para>
      </summary>
      <param name="buildTarget">Цель сборки, для которой нужно получить размер фрагмента шейдера.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetShaderPrecisionModel">
      <summary>
        <para>Получает модель точности активного шейдера.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetStackTraceLogType(UnityEngine.LogType)">
      <summary>
        <para>Получает параметры ведения журнала трассировки стека.</para>
      </summary>
      <param name="logType">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetSupportedIconKinds(UnityEditor.Build.NamedBuildTarget)">
      <summary>
        <para>Извлекает все типы значков, которые поддерживает указанная цель сборки</para>
      </summary>
      <param name="buildTarget">Объект NamedBuildTarget.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetSupportedIconKindsForPlatform(UnityEditor.BuildTargetGroup)">
      <summary>
        <para>BuildTargetGroup помечен как устаревший в будущем. Вместо этого используйте PlayerSettings.GetSupportedIconKinds.</para>
      </summary>
      <param name="platform">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetTemplateCustomValue(System.String)">
      <summary>
        <para>Возвращает значение пользовательской переменной шаблона.</para>
      </summary>
      <param name="name">Имя переменной.</param>
      <returns>
        <para>Текущее значение пользовательской переменной шаблона.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetUseDefaultGraphicsAPIs(UnityEditor.BuildTarget)">
      <summary>
        <para>Использует ли платформа сборки автоматический выбор графического API?</para>
      </summary>
      <param name="platform">Платформа, для которой нужно получить флаг.</param>
      <returns>
        <para>Следует ли использовать лучший доступный графический API.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetVirtualRealitySupported(UnityEditor.BuildTargetGroup)">
      <summary>
        <para>Возвращает информацию о том, включена ли поддержка виртуальной реальности для данной BuildTargetGroup.</para>
      </summary>
      <param name="targetGroup">Группа BuildTargetGroup, для которой возвращается значение.</param>
      <returns>
        <para>True, если включена поддержка виртуальной реальности.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetVirtualTexturingSupportEnabled">
      <summary>
        <para>Включено ли виртуальное текстурирование.</para>
      </summary>
      <returns>
        <para>True, если виртуальное текстурирование включено, иначе false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.HasAspectRatio(UnityEditor.AspectRatio)">
      <summary>
        <para>Возвращает значение, включено ли указанное соотношение сторон.</para>
      </summary>
      <param name="aspectRatio">
      </param>
    </member>
    <member name="T:UnityEditor.PlayerSettings.iOS">
      <summary>
        <para>Настройки проигрывателя для iOS.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.allowHTTPDownload">
      <summary>
        <para>Должны ли быть разрешены небезопасные загрузки HTTP?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.appInBackgroundBehavior">
      <summary>
        <para>Поведение приложения при входе в фоновый режим.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.appleDeveloperTeamID">
      <summary>
        <para>Задайте для этого свойства свой идентификатор команды разработчиков Apple. Вы можете найти это на веб-сайте Apple Developer в разделе &lt;a href="https:developer.apple.comaccount#membership"&gt; Account &gt; Membership &lt;/a&gt; . Это устанавливает идентификатор команды для сгенерированного проекта Xcode, позволяя разработчикам использовать функции сборки и запуска. Здесь должен быть указан идентификатор команды разработчиков Apple для автоматической подписи вашего приложения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.appleEnableAutomaticSigning">
      <summary>
        <para>Установите для этого свойства значение true, чтобы Xcode попытался автоматически подписать ваше приложение на основе вашего идентификатора appleDeveloperTeamID.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.applicationDisplayName">
      <summary>
        <para>Отображаемое имя приложения iOS.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.backgroundModes">
      <summary>
        <para>Поддерживаемые режимы выполнения в фоновом режиме (когда appInBackgroundBehavior имеет значение iOSAppInBackgroundBehavior.Custom).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.buildNumber">
      <summary>
        <para>Номер сборки пакета</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.cameraUsageDescription">
      <summary>
        <para>Описывает причину доступа к камере пользователя.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.deferSystemGesturesMode">
      <summary>
        <para>Откладывать системные жесты до второго смахивания по определенным краям.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.deferSystemGesturesMode">
      <summary>
        <para>Откладывать системные жесты до второго смахивания по определенным краям.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.disableDepthAndStencilBuffers">
      <summary>
        <para>Отключить буферы глубины и трафарета.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.exitOnSuspend">
      <summary>
        <para>Приложение должно завершиться, когда оно переведено в фоновый режим.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.forceHardShadowsOnMetal">
      <summary>
        <para>Должны ли применяться жесткие тени при работе на (мобильном) Metal.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.hideHomeButton">
      <summary>
        <para>Указывает, должна ли кнопка «Домой» быть скрыта в сборке iOS этого приложения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.iOSManualProvisioningProfileID">
      <summary>
        <para>Универсальный уникальный идентификатор (UUID) профиля обеспечения, который Xcode будет использовать для создания вашего приложения iOS в режиме ручной подписи.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.iOSManualProvisioningProfileType">
      <summary>
        <para>Тип ProvisioningProfileType, который будет установлен при создании проекта iOS Xcode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.iOSUrlSchemes">
      <summary>
        <para>Массив схем URL, поддерживаемых приложением.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.locationUsageDescription">
      <summary>
        <para>Описывает причину доступа к данным о местоположении пользователя.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.microphoneUsageDescription">
      <summary>
        <para>Описывает причину доступа к микрофону пользователя.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.overrideIPodMusic">
      <summary>
        <para>Определяет поведение iPod при воспроизведении.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.prerenderedIcon">
      <summary>
        <para>Значок предварительно визуализируется.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.requiresFullScreen">
      <summary>
        <para>RequiresFullScreen сопоставляется с настройкой сборки plist Apple UIRequiresFullScreen, которая используется для отказа от участия в режимах Slide Over и Split View для многозадачности iOS 9.0.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.requiresPersistentWiFi">
      <summary>
        <para>Приложению требуется постоянный WiFi.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.scriptCallOptimization">
      <summary>
        <para>Оптимизация вызова скрипта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.sdkVersion">
      <summary>
        <para>Активная версия iOS SDK, используемая для сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.showActivityIndicatorOnLoading">
      <summary>
        <para>Приложение должно отображать ActivityIndicator при загрузке.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.statusBarStyle">
      <summary>
        <para>Стиль строки состояния.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.targetDevice">
      <summary>
        <para>Целевое устройство.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.targetOSVersion">
      <summary>
        <para>Развертывание минимальной версии iOS.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.targetOSVersionString">
      <summary>
        <para>Развертывание минимальной версии iOS.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.tvOSManualProvisioningProfileID">
      <summary>
        <para>Универсальный уникальный идентификатор (UUID) профиля подготовки, который Xcode будет использовать для создания приложения tvOS в режиме ручной подписи.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.tvOSManualProvisioningProfileType">
      <summary>
        <para>ProvisioningProfileType, который будет установлен при сборке проекта tvOS Xcode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.useOnDemandResources">
      <summary>
        <para>Указывает, будет ли приложение использовать API ресурсов по запросу (ODR).</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PlayerSettings.iOS.SetiPadLaunchScreenType(UnityEditor.iOSLaunchScreenType)">
      <summary>
        <para>Задает режим, который будет использоваться для создания файла Interface Builder экрана запуска приложения (.xib) для iPad.</para>
      </summary>
      <param name="type">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.iOS.SetiPhoneLaunchScreenType(UnityEditor.iOSLaunchScreenType)">
      <summary>
        <para>Устанавливает режим, который будет использоваться для создания файла Interface Builder экрана запуска приложения (.xib) для iPhone.</para>
      </summary>
      <param name="type">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.iOS.SetLaunchScreenImage(UnityEngine.Texture2D,UnityEditor.iOSLaunchScreenImageType)">
      <summary>
        <para>Устанавливает изображение, которое будет отображаться на экране при запуске игры для указанного устройства iOS.</para>
      </summary>
      <param name="image">
      </param>
      <param name="type">
      </param>
    </member>
    <member name="P:UnityEditor.PlayerSettings.MTRendering">
      <summary>
        <para>Включен ли многопоточный рендеринг?</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.PS4">
      <summary>
        <para>Настройки проигрывателя для PlayStation®4.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.PS4.PS4AppCategory">
      <summary>
        <para>Категория приложения PS4.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.PS4.PS4AppCategory.Application">
      <summary>
        <para>Приложение.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.PS4.PS4EnterButtonAssignment">
      <summary>
        <para>PS4 введите назначение кнопок.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.PS4.PS4EnterButtonAssignment.CircleButton">
      <summary>
        <para>Кнопка с кружком.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.PS4.PS4EnterButtonAssignment.CrossButton">
      <summary>
        <para>Крестообразная кнопка.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.PS4.PS4RemotePlayKeyAssignment">
      <summary>
        <para>Назначение клавиши удаленного воспроизведения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.PS4.PS4RemotePlayKeyAssignment.None">
      <summary>
        <para>Нет назначения клавиши удаленного воспроизведения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.PS4.PS4RemotePlayKeyAssignment.PatternA">
      <summary>
        <para>Конфигурация раскладки клавиш удаленного воспроизведения A.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.PS4.PS4RemotePlayKeyAssignment.PatternB">
      <summary>
        <para>Конфигурация раскладки клавиш удаленного воспроизведения B.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.PS4.PS4RemotePlayKeyAssignment.PatternC">
      <summary>
        <para>Конфигурация раскладки клавиш удаленного воспроизведения C.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.PS4.PS4RemotePlayKeyAssignment.PatternD">
      <summary>
        <para>Конфигурация раскладки клавиш удаленного воспроизведения D.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.PS4.PS4RemotePlayKeyAssignment.PatternE">
      <summary>
        <para>Конфигурация раскладки клавиш удаленного воспроизведения E.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.PS4.PS4RemotePlayKeyAssignment.PatternF">
      <summary>
        <para>Конфигурация раскладки клавиш удаленного воспроизведения F.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.PS4.PS4RemotePlayKeyAssignment.PatternG">
      <summary>
        <para>Конфигурация раскладки клавиш удаленного воспроизведения G.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.PS4.PS4RemotePlayKeyAssignment.PatternH">
      <summary>
        <para>Конфигурация раскладки клавиш удаленного воспроизведения H.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetAdditionalCompilerArguments(UnityEditor.Build.NamedBuildTarget,System.String[])">
      <summary>
        <para>Задает дополнительные аргументы компилятора для цели сборки.</para>
      </summary>
      <param name="buildTarget">Объект NamedBuildTarget.</param>
      <param name="additionalCompilerArguments">Массив дополнительных аргументов компилятора.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetAdditionalCompilerArgumentsForGroup(UnityEditor.BuildTargetGroup,System.String[])">
      <summary>
        <para>BuildTargetGroup помечен как устаревший в будущем. Вместо этого используйте PlayerSettings.SetAdditionalCompilerArguments.</para>
      </summary>
      <param name="targetGroup">Группа BuildTargetGroup, для которой задаются дополнительные аргументы компилятора.</param>
      <param name="additionalCompilerArguments">Массив дополнительных аргументов компилятора.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetAdditionalIl2CppArgs(System.String)">
      <summary>
        <para>Установите дополнительные аргументы, передаваемые компилятору IL2CPP в процессе сборки.</para>
      </summary>
      <param name="additionalArgs">Дополнительные аргументы, переданные компилятору IL2CPP в процессе сборки.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetApiCompatibilityLevel(UnityEditor.Build.NamedBuildTarget,UnityEditor.ApiCompatibilityLevel)">
      <summary>
        <para>Задает уровень совместимости .NET API для указанной цели сборки.</para>
      </summary>
      <param name="buildTarget">Объект NamedBuildTarget.</param>
      <param name="value">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetApiCompatibilityLevel(UnityEditor.BuildTargetGroup,UnityEditor.ApiCompatibilityLevel)">
      <summary>
        <para>BuildTargetGroup помечен как устаревший в будущем. Вместо этого используйте NamedBuildTarget.</para>
      </summary>
      <param name="buildTargetGroup">
      </param>
      <param name="value">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetApiCompatibilityLevel(UnityEditor.BuildTargetGroup,UnityEditor.ApiCompatibilityLevel)">
      <summary>
        <para>BuildTargetGroup помечен как устаревший в будущем. Вместо этого используйте NamedBuildTarget.</para>
      </summary>
      <param name="buildTargetGroup">
      </param>
      <param name="value">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetApplicationIdentifier(UnityEditor.Build.NamedBuildTarget,System.String)">
      <summary>
        <para>Установить идентификатор приложения для указанной платформы.</para>
      </summary>
      <param name="buildTarget">Объект NamedBuildTarget.</param>
      <param name="identifier">
      </param>
      <param name="targetGroup">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetApplicationIdentifier(UnityEditor.BuildTargetGroup,System.String)">
      <summary>
        <para>Установить идентификатор приложения для указанной платформы.</para>
      </summary>
      <param name="buildTarget">Объект NamedBuildTarget.</param>
      <param name="identifier">
      </param>
      <param name="targetGroup">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetArchitecture(UnityEditor.Build.NamedBuildTarget,System.Int32)">
      <summary>
        <para>Задает архитектуру для данной цели сборки.</para>
      </summary>
      <param name="buildTarget">Объект NamedBuildTarget.</param>
      <param name="architecture">Целочисленное значение, связанное с архитектурой цели сборки. 0 — нет, 1 — ARM64, 2 — универсальный.</param>
      <param name="targetGroup">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetArchitecture(UnityEditor.BuildTargetGroup,System.Int32)">
      <summary>
        <para>Задает архитектуру для данной цели сборки.</para>
      </summary>
      <param name="buildTarget">Объект NamedBuildTarget.</param>
      <param name="architecture">Целочисленное значение, связанное с архитектурой цели сборки. 0 — нет, 1 — ARM64, 2 — универсальный.</param>
      <param name="targetGroup">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetAspectRatio(UnityEditor.AspectRatio,System.Boolean)">
      <summary>
        <para>Включает указанное соотношение сторон.</para>
      </summary>
      <param name="aspectRatio">
      </param>
      <param name="enable">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetDefaultShaderChunkCount(System.Int32)">
      <summary>
        <para>Устанавливает ограничение по умолчанию на количество фрагментов вариантов шейдера, которые Unity загружает и хранит в памяти.</para>
      </summary>
      <param name="buildTarget">Цель сборки, для которой задается количество фрагментов шейдера.</param>
      <param name="chunkCount">Максимальное количество чанков для хранения в памяти для каждого шейдера.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetDefaultShaderChunkSizeInMB(System.Int32)">
      <summary>
        <para>Задает размер по умолчанию для фрагментов сжатых вариантов шейдера.</para>
      </summary>
      <param name="sizeInMegabytes">Размер фрагмента в мегабайтах.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetGraphicsAPIs(UnityEditor.BuildTarget,UnityEngine.Rendering.GraphicsDeviceType[])">
      <summary>
        <para>Задает графические API, используемые на платформе сборки.</para>
      </summary>
      <param name="platform">Платформа, для которой устанавливаются API.</param>
      <param name="apis">Массив графических API.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetIcons(UnityEditor.Build.NamedBuildTarget,UnityEngine.Texture2D[],UnityEditor.IconKind)">
      <summary>
        <para>Назначает список значков для указанной платформы.</para>
      </summary>
      <param name="buildTarget">Объект NamedBuildTarget.</param>
      <param name="icons">
      </param>
      <param name="kind">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetIconsForTargetGroup(UnityEditor.BuildTargetGroup,UnityEngine.Texture2D[])">
      <summary>
        <para>BuildTargetGroup помечен как устаревший в будущем. Вместо этого используйте PlayerSettings.SetIcons.</para>
      </summary>
      <param name="platform">
      </param>
      <param name="icons">
      </param>
      <param name="kind">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetIconsForTargetGroup(UnityEditor.BuildTargetGroup,UnityEngine.Texture2D[],UnityEditor.IconKind)">
      <summary>
        <para>BuildTargetGroup помечен как устаревший в будущем. Вместо этого используйте PlayerSettings.SetIcons.</para>
      </summary>
      <param name="platform">
      </param>
      <param name="icons">
      </param>
      <param name="kind">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetIl2CppCompilerConfiguration(UnityEditor.Build.NamedBuildTarget,UnityEditor.Il2CppCompilerConfiguration)">
      <summary>
        <para>Задает конфигурацию компилятора, используемую при компиляции сгенерированного кода C++ для конкретной цели сборки.</para>
      </summary>
      <param name="buildTarget">Объект NamedBuildTarget.</param>
      <param name="targetGroup">Создать целевую группу.</param>
      <param name="configuration">Конфигурация компилятора.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetIl2CppCompilerConfiguration(UnityEditor.BuildTargetGroup,UnityEditor.Il2CppCompilerConfiguration)">
      <summary>
        <para>Задает конфигурацию компилятора, используемую при компиляции сгенерированного кода C++ для конкретной цели сборки.</para>
      </summary>
      <param name="buildTarget">Объект NamedBuildTarget.</param>
      <param name="targetGroup">Создать целевую группу.</param>
      <param name="configuration">Конфигурация компилятора.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetIncrementalIl2CppBuild(UnityEditor.Build.NamedBuildTarget,System.Boolean)">
      <summary>
        <para>Устанавливает флаг инкрементной сборки.</para>
      </summary>
      <param name="buildTarget">Объект NamedBuildTarget.</param>
      <param name="enabled">
      </param>
      <param name="targetGroup">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetIncrementalIl2CppBuild(UnityEditor.BuildTargetGroup,System.Boolean)">
      <summary>
        <para>Устанавливает флаг инкрементной сборки.</para>
      </summary>
      <param name="buildTarget">Объект NamedBuildTarget.</param>
      <param name="enabled">
      </param>
      <param name="targetGroup">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetManagedStrippingLevel(UnityEditor.Build.NamedBuildTarget,UnityEditor.ManagedStrippingLevel)">
      <summary>
        <para>Задает уровень удаления управляемого кода для указанной цели сборки.</para>
      </summary>
      <param name="level">Желаемый уровень разделения управляемого кода.</param>
      <param name="buildTarget">Объект NamedBuildTarget.</param>
      <param name="targetGroup">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetManagedStrippingLevel(UnityEditor.BuildTargetGroup,UnityEditor.ManagedStrippingLevel)">
      <summary>
        <para>Задает уровень удаления управляемого кода для указанной цели сборки.</para>
      </summary>
      <param name="level">Желаемый уровень разделения управляемого кода.</param>
      <param name="buildTarget">Объект NamedBuildTarget.</param>
      <param name="targetGroup">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetManagedStrippingLevel(UnityEditor.BuildTargetGroup,UnityEditor.ManagedStrippingLevel)">
      <summary>
        <para>Задает уровень удаления управляемого кода для указанной цели сборки.</para>
      </summary>
      <param name="level">Желаемый уровень разделения управляемого кода.</param>
      <param name="buildTarget">Объект NamedBuildTarget.</param>
      <param name="targetGroup">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetMobileMTRendering(UnityEditor.Build.NamedBuildTarget,System.Boolean)">
      <summary>
        <para>Включить или отключить параметр многопоточного рендеринга для мобильной платформы.</para>
      </summary>
      <param name="targetGroup">Мобильная платформа (только iOS, tvOS и Android).</param>
      <param name="buildTarget">NamedBuildTarget (только iOS, tvOS и Android).</param>
      <param name="enable">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetMobileMTRendering(UnityEditor.BuildTargetGroup,System.Boolean)">
      <summary>
        <para>Включить или отключить параметр многопоточного рендеринга для мобильной платформы.</para>
      </summary>
      <param name="targetGroup">Мобильная платформа (только iOS, tvOS и Android).</param>
      <param name="buildTarget">NamedBuildTarget (только iOS, tvOS и Android).</param>
      <param name="enable">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetNormalMapEncoding(UnityEditor.Build.NamedBuildTarget,UnityEditor.NormalMapEncoding)">
      <summary>
        <para>Задает кодировку карты нормалей для данной цели сборки.</para>
      </summary>
      <param name="encoding">Желаемая кодировка карты нормалей.</param>
      <param name="buildTarget">NamedBuildTarget (только для Android, iOS и tvOS).</param>
      <param name="platform">Целевая группа сборки платформы, для которой вы хотите установить кодировку карты нормалей.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetNormalMapEncoding(UnityEditor.BuildTargetGroup,UnityEditor.NormalMapEncoding)">
      <summary>
        <para>Задает кодировку карты нормалей для данной цели сборки.</para>
      </summary>
      <param name="encoding">Желаемая кодировка карты нормалей.</param>
      <param name="buildTarget">NamedBuildTarget (только для Android, iOS и tvOS).</param>
      <param name="platform">Целевая группа сборки платформы, для которой вы хотите установить кодировку карты нормалей.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetOverrideShaderChunkSettingsForPlatform(UnityEditor.BuildTarget,System.Boolean)">
      <summary>
        <para>Включите этот параметр, чтобы переопределить настройки фрагмента варианта шейдера по умолчанию.</para>
      </summary>
      <param name="buildTarget">Цель сборки, для которой устанавливается переопределение.</param>
      <param name="value">Установите значение true, если вы хотите, чтобы настройки для buildTarget переопределяли настройки по умолчанию.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetPlatformIcons(UnityEditor.Build.NamedBuildTarget,UnityEditor.PlatformIconKind,UnityEditor.PlatformIcon[])">
      <summary>
        <para>Назначить список значков для указанной платформы и вида значков.</para>
      </summary>
      <param name="platform">Полный список платформ, поддерживающих этот API, можно найти в разделе PlatformIconKind|виды значков.</param>
      <param name="icons">Все доступные слоты PlatformIcon должны быть получены с помощью GetPlatformIcons.</param>
      <param name="buildTarget">Объект NamedBuildTarget.</param>
      <param name="kind">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetPlatformIcons(UnityEditor.BuildTargetGroup,UnityEditor.PlatformIconKind,UnityEditor.PlatformIcon[])">
      <summary>
        <para>Назначить список значков для указанной платформы и вида значков.</para>
      </summary>
      <param name="platform">Полный список платформ, поддерживающих этот API, можно найти в разделе PlatformIconKind|виды значков.</param>
      <param name="icons">Все доступные слоты PlatformIcon должны быть получены с помощью GetPlatformIcons.</param>
      <param name="buildTarget">Объект NamedBuildTarget.</param>
      <param name="kind">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetPreloadedAssets(UnityEngine.Object[])">
      <summary>
        <para>Назначает активы, которые будут загружаться при запуске в проигрывателе и оставаться активными до тех пор, пока проигрыватель не завершит работу.</para>
      </summary>
      <param name="assets">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetPropertyBool(System.String,System.Boolean,UnityEditor.BuildTargetGroup)">
      <summary>
        <para>Сейчас это устарело. Вместо этого используйте явный API. Например, PlayerSettings.WebGL.useEmbeddedResources.</para>
      </summary>
      <param name="name">Имя свойства.</param>
      <param name="value">Значение свойства (bool).</param>
      <param name="target">BuildTarget, для которого должно применяться это свойство (используйте значение по умолчанию BuildTargetGroup.Unknown, чтобы применить его ко всем целям).</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetPropertyInt(System.String,System.Int32,UnityEditor.BuildTargetGroup)">
      <summary>
        <para>Задает свойство PlayerSettings с именем int.</para>
      </summary>
      <param name="name">Имя свойства.</param>
      <param name="value">Значение свойства (целое число).</param>
      <param name="target">BuildTarget, для которого должно применяться это свойство (используйте значение по умолчанию BuildTargetGroup.Unknown, чтобы применить его ко всем целям).</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetPropertyString(System.String,System.String,UnityEditor.BuildTargetGroup)">
      <summary>
        <para>Задает именованное строковое свойство PlayerSettings.</para>
      </summary>
      <param name="name">Имя свойства.</param>
      <param name="value">Значение свойства (строка).</param>
      <param name="target">BuildTarget, для которого должно применяться это свойство (используйте значение по умолчанию BuildTargetGroup.Unknown, чтобы применить его ко всем целям).</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetScriptingBackend(UnityEditor.Build.NamedBuildTarget,UnityEditor.ScriptingImplementation)">
      <summary>
        <para>Задает среду сценариев для данной цели сборки.</para>
      </summary>
      <param name="buildTarget">Объект NamedBuildTarget.</param>
      <param name="backend">ScriptingImplementation.</param>
      <param name="targetGroup">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetScriptingBackend(UnityEditor.BuildTargetGroup,UnityEditor.ScriptingImplementation)">
      <summary>
        <para>Задает среду сценариев для данной цели сборки.</para>
      </summary>
      <param name="buildTarget">Объект NamedBuildTarget.</param>
      <param name="backend">ScriptingImplementation.</param>
      <param name="targetGroup">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetScriptingDefineSymbols(UnityEditor.Build.NamedBuildTarget,System.String)">
      <summary>
        <para>Установить пользовательские символы для компиляции скрипта для данной цели сборки.</para>
      </summary>
      <param name="buildTarget">Объект NamedBuildTarget.</param>
      <param name="defines">Символы для этой цели сборки передаются в виде массива или строки, разделенных точкой с запятой.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetScriptingDefineSymbols(UnityEditor.Build.NamedBuildTarget,System.String[])">
      <summary>
        <para>Установить пользовательские символы для компиляции скрипта для данной цели сборки.</para>
      </summary>
      <param name="buildTarget">Объект NamedBuildTarget.</param>
      <param name="defines">Символы для этой цели сборки передаются в виде массива или строки, разделенных точкой с запятой.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetScriptingDefineSymbolsForGroup(UnityEditor.BuildTargetGroup,System.String)">
      <summary>
        <para>BuildTargetGroup помечен как устаревший в будущем. Вместо этого используйте PlayerSettings.SetScriptingDefineSymbols.</para>
      </summary>
      <param name="targetGroup">Название группы устройств.</param>
      <param name="defines">Символы для этой группы могут передаваться как массив или как строка, разделенная точкой с запятой.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetScriptingDefineSymbolsForGroup(UnityEditor.BuildTargetGroup,System.String[])">
      <summary>
        <para>BuildTargetGroup помечен как устаревший в будущем. Вместо этого используйте PlayerSettings.SetScriptingDefineSymbols.</para>
      </summary>
      <param name="targetGroup">Название группы устройств.</param>
      <param name="defines">Символы для этой группы могут передаваться как массив или как строка, разделенная точкой с запятой.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetShaderChunkCountForPlatform(UnityEditor.BuildTarget,System.Int32)">
      <summary>
        <para>Устанавливает ограничение по умолчанию на количество фрагментов вариантов шейдера, которые Unity загружает и хранит в памяти цели сборки.</para>
      </summary>
      <param name="buildTarget">Цель сборки, для которой задается количество фрагментов шейдера.</param>
      <param name="chunkCount">Максимальное количество чанков для хранения в памяти для каждого шейдера.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetShaderChunkSizeInMBForPlatform(UnityEditor.BuildTarget,System.Int32)">
      <summary>
        <para>Задает размер по умолчанию для фрагментов сжатых вариантов шейдера в целевом объекте сборки.</para>
      </summary>
      <param name="buildTarget">Цель сборки, для которой устанавливается размер блока шейдера.</param>
      <param name="sizeInMegabytes">Размер фрагмента в мегабайтах.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetShaderPrecisionModel(UnityEditor.ShaderPrecisionModel)">
      <summary>
        <para>Задает модель точности шейдера.</para>
      </summary>
      <param name="model">Новая модель точности для использования.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetStackTraceLogType(UnityEngine.LogType,UnityEngine.StackTraceLogType)">
      <summary>
        <para>Задайте параметры ведения журнала трассировки стека.
Примечание: вызов этой функции неявно вызовет Application.SetStackTraceLogType.</para>
      </summary>
      <param name="logType">
      </param>
      <param name="stackTraceType">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetTemplateCustomValue(System.String,System.String)">
      <summary>
        <para>Задает значение пользовательской переменной шаблона.</para>
      </summary>
      <param name="name">Имя переменной.</param>
      <param name="value">Значение пользовательской переменной шаблона.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetUseDefaultGraphicsAPIs(UnityEditor.BuildTarget,System.Boolean)">
      <summary>
        <para>Должна ли платформа сборки использовать автоматический выбор графического API.</para>
      </summary>
      <param name="platform">Платформа, для которой устанавливается флаг.</param>
      <param name="automatic">Следует ли использовать лучший доступный графический API?</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetVirtualRealitySupported(UnityEditor.BuildTargetGroup,System.Boolean)">
      <summary>
        <para>Определяет, включена ли поддержка виртуальной реальности для данной BuildTargetGroup.</para>
      </summary>
      <param name="targetGroup">Группа BuildTargetGroup, для которой нужно задать значение.</param>
      <param name="value">Значение для установки, true для включения, false для отключения.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetVirtualTexturingSupportEnabled(System.Boolean)">
      <summary>
        <para>Включить виртуальное текстурирование.</para>
      </summary>
      <param name="enabled">True для включения, false для отключения.</param>
    </member>
    <member name="T:UnityEditor.PlayerSettings.SplashScreen">
      <summary>
        <para>Интерфейс к настройкам проигрывателя заставок.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.SplashScreen.animationBackgroundZoom">
      <summary>
        <para>Целевой масштаб (от 0 до 1) для фона, когда он достигает конца общей продолжительности анимации SplashScreen. Используется только в том случае, если для параметра animationMode установлено значение PlayerSettings.SplashScreen.AnimationMode.Custom|AnimationMode.Custom.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.SplashScreen.animationLogoZoom">
      <summary>
        <para>Целевой масштаб (от 0 до 1) для логотипа, когда он достигает конца общей продолжительности анимации логотипа. Используется только в том случае, если для параметра animationMode установлено значение PlayerSettings.SplashScreen.AnimationMode.Custom|AnimationMode.Custom.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.SplashScreen.animationMode">
      <summary>
        <para>Тип анимации, применяемой во время заставки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.SplashScreen.background">
      <summary>
        <para>Фоновый спрайт, отображаемый в ландшафтном режиме. Также отображается в портретном режиме, если backgroundPortrait имеет значение null.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.SplashScreen.backgroundColor">
      <summary>
        <para>Цвет фона, отображаемый, если фоновый спрайт не назначен. По умолчанию используется темно-синий цвет RGB(34.44,54).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.SplashScreen.backgroundPortrait">
      <summary>
        <para>Фоновый спрайт, отображаемый в портретном режиме.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.SplashScreen.blurBackgroundImage">
      <summary>
        <para>Определяет, применяет ли Unity эффект размытия к фоновому спрайту на экране-заставке.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.SplashScreen.drawMode">
      <summary>
        <para>Определяет, как должен отображаться логотип Unity, если он включен. Если в [logos] нет логотипа Unity, по умолчанию используется режим рисования PlayerSettings.SplashScreen.DrawMode.UnityLogoBelow|DrawMode.UnityLogoBelow.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.SplashScreen.logos">
      <summary>
        <para>Коллекция логотипов, отображаемых во время заставки. Логотипы рисуются в порядке возрастания, начиная с индекса 0, затем 1 и т. д. </para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.SplashScreen.overlayOpacity">
      <summary>
        <para>Для увеличения контраста между фоном и логотипами применяется модификатор цвета наложения. Непрозрачность наложения является силой этого эффекта. Примечание. Для уменьшения значения ниже 0,5 требуется лицензия Plus/Pro.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.SplashScreen.show">
      <summary>
        <para>Установите для этого параметра значение true, чтобы отображать экран-заставку при запуске приложения. Установите значение false, чтобы отключить заставку. Примечание. Для отключения экрана-заставки требуется лицензия Plus/Pro.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.SplashScreen.showUnityLogo">
      <summary>
        <para>Установите для этого параметра значение true, чтобы отображать логотип Unity во время заставки. Установите значение false, чтобы отключить логотип Unity. Примечание. Для отключения логотипа Unity требуется лицензия Plus/Pro.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.SplashScreen.unityLogoStyle">
      <summary>
        <para>Стиль, используемый для логотипа Unity во время экрана-заставки.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.SplashScreen.AnimationMode">
      <summary>
        <para>Тип анимации, применяемой во время экрана-заставки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.SplashScreen.AnimationMode.Custom">
      <summary>
        <para>Анимирует экран-заставку, используя пользовательские значения из PlayerSettings.SplashScreen.animationBackgroundZoom и PlayerSettings.SplashScreen.animationLogoZoom.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.SplashScreen.AnimationMode.Dolly">
      <summary>
        <para>Анимирует экран-заставку с имитацией эффекта тележки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.SplashScreen.AnimationMode.Static">
      <summary>
        <para>К логотипу или фону экрана-заставки анимация не применяется.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.SplashScreen.DrawMode">
      <summary>
        <para>Определяет, как должен отображаться логотип Unity, если он включен.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.SplashScreen.DrawMode.AllSequential">
      <summary>
        <para>Логотип Unity отображается последовательно, если он существует в коллекции PlayerSettings.SplashScreen.logos.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.SplashScreen.DrawMode.UnityLogoBelow">
      <summary>
        <para>Логотип Unity отображается в нижней части экрана на протяжении всего экрана-заставки, а логотипы PlayerSettings.SplashScreen.logos отображаются в центре.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.SplashScreen.UnityLogoStyle">
      <summary>
        <para>Стиль, используемый для логотипа Unity во время экрана-заставки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.SplashScreen.UnityLogoStyle.DarkOnLight">
      <summary>
        <para>Темный логотип Unity на светлом фоне.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.SplashScreen.UnityLogoStyle.LightOnDark">
      <summary>
        <para>Белый логотип Unity на темном фоне.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.SplashScreenLogo">
      <summary>
        <para>Один логотип, который отображается во время заставки. Управляет отображаемым спрайтом и его длительностью.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.SplashScreenLogo.duration">
      <summary>
        <para>Общее время в секундах, в течение которого отображается логотип. Минимальная продолжительность — 2 секунды.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.SplashScreenLogo.logo">
      <summary>
        <para>Спрайт, который показан во время этого логотипа. Если это значение равно null, то в течение этого времени логотип отображаться не будет.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.SplashScreenLogo.unityLogo">
      <summary>
        <para>Sprite с логотипом Unity.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SplashScreenLogo.Create(System.Single,UnityEngine.Sprite)">
      <summary>
        <para>Создает новый логотип Splash Screen с заданной длительностью и спрайтом логотипа.</para>
      </summary>
      <param name="duration">Общее время в секундах, в течение которого будет отображаться логотип. Обратите внимание, что минимальное время составляет 2 секунды.</param>
      <param name="logo">Логотип Sprite для отображения.</param>
      <returns>
        <para>Новый логотип.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SplashScreenLogo.CreateWithUnityLogo(System.Single)">
      <summary>
        <para>Создает новый логотип Splash Screen с заданной длительностью и логотипом единства.</para>
      </summary>
      <param name="duration">Общее время в секундах, в течение которого будет отображаться логотип. Обратите внимание, что минимальное время составляет 2 секунды.</param>
      <returns>
        <para>Новый логотип.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.PlayerSettings.Switch">
      <summary>
        <para>Настройки проигрывателя Nintendo Switch.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.Switch.ApplicationAttribute">
      <summary>
        <para>Настройки проигрывателя для платформы Nintendo Switch.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.Switch.Languages">
      <summary>
        <para>Настройки проигрывателя для платформы Nintendo Switch.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.Switch.LogoHandling">
      <summary>
        <para>Настройки проигрывателя для платформы Nintendo Switch.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.Switch.LogoType">
      <summary>
        <para>Настройки проигрывателя для платформы Nintendo Switch.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.Switch.RatingCategories">
      <summary>
        <para>Настройки проигрывателя для платформы Nintendo Switch.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.Switch.StartupUserAccount">
      <summary>
        <para>Настройки проигрывателя для платформы Nintendo Switch.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.Switch.TouchScreenUsage">
      <summary>
        <para>Настройки проигрывателя для платформы Nintendo Switch.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.tvOS">
      <summary>
        <para>Настройки проигрывателя для tvOS.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.tvOS.buildNumber">
      <summary>
        <para>Номер сборки пакета</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.tvOS.requireExtendedGameController">
      <summary>
        <para>Для приложения требуется расширенный игровой контроллер.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.tvOS.sdkVersion">
      <summary>
        <para>Активная версия tvOS SDK, используемая для сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.tvOS.targetOSVersion">
      <summary>
        <para>Развертывание минимальной версии tvOS.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.tvOS.targetOSVersionString">
      <summary>
        <para>Развертывание минимальной версии tvOS.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.VRWindowsMixedReality">
      <summary>
        <para>Специальные настройки проигрывателя Windows Mixed Reality.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.VRWindowsMixedReality.depthBufferFormat">
      <summary>
        <para>Установите запрошенный формат буфера глубины на 16-битный или 24-битный.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.VRWindowsMixedReality.depthBufferSharingEnabled">
      <summary>
        <para>Переключить поддержку совместного использования буфера глубины между Unity и ОС. Это позволяет повысить стабильность при работе в Windows Mixed Reality. Для иммерсивных гарнитур это позволяет операционной системе перепроецировать отрендеренную сцену при потере точности отслеживания. Для голографических гарнитур это позволяет операционной системе автоматически устанавливать точку фокусировки вдоль плоскости, которая пересекает большую часть контента в вашей сцене.

Смотрите также:</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.VRWindowsMixedReality.DepthBufferFormat">
      <summary>
        <para>Перечисление, предоставляющее допустимые значения для PlayerSettings.VRWindowsMixedReality.depthBufferFormat.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.VRWindowsMixedReality.DepthBufferFormat.DepthBufferFormat16Bit">
      <summary>
        <para>Установите буфер глубины Windows Mixed Reality на 16 бит глубины. Это уменьшит объем памяти (и, возможно, повысит производительность) за счет проверки глубины и точности.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.VRWindowsMixedReality.DepthBufferFormat.DepthBufferFormat24Bit">
      <summary>
        <para>Установите буфер глубины Windows Mixed Reality на 24 бита глубины. Это улучшит проверку глубины и точность за счет большего объема памяти.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.WebGL">
      <summary>
        <para>Специальные настройки проигрывателя WebGL.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WebGL.compressionFormat">
      <summary>
        <para>CompressionFormat определяет тип сжатия, в который кодируются ресурсы WebGL.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WebGL.dataCaching">
      <summary>
        <para>Включает автоматическое кэширование файлов unityweb.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WebGL.debugSymbolMode">
      <summary>
        <para>Включает создание файла символов отладки в выходном каталоге сборки. Поддерживаемые параметры: встроенные символы отладки и символы отладки во внешнем файле.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WebGL.debugSymbols">
      <summary>
        <para>Включает создание файла символов отладки в выходном каталоге сборки. Это свойство устарело и заменено свойством debugSymbolMode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WebGL.decompressionFallback">
      <summary>
        <para>Включите резервный код распаковки для файлов сборки в загрузчик.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WebGL.exceptionSupport">
      <summary>
        <para>Поддержка исключений для сборок WebGL.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WebGL.linkerTarget">
      <summary>
        <para>Позволяет указать формат WebGLLinkerTarget|веб-сборки, который используется при сборке проекта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WebGL.memorySize">
      <summary>
        <para>Размер памяти для сборки WebGL в мегабайтах.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WebGL.nameFilesAsHashes">
      <summary>
        <para>Позволяет использовать хэш MD5 содержимого несжатого файла в качестве имени файла для каждого файла в сборке.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WebGL.template">
      <summary>
        <para>Путь к ресурсу шаблона WebGL.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WebGL.threadsSupport">
      <summary>
        <para>Поддержка многопоточности в WebGL.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WebGL.wasmArithmeticExceptions">
      <summary>
        <para>Режим треппинга для кода WebAssembly.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.WSA">
      <summary>
        <para>Предоставляет доступ к настройкам проигрывателя для приложения Microsoft Store.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.applicationDescription">
      <summary>
        <para>Текст описания, который Microsoft Store отображает вместе с вашим приложением.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.certificateIssuer">
      <summary>
        <para>Издатель сертификата для текущего сертификата универсальной платформы Windows.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.certificateNotAfter">
      <summary>
        <para>Дата истечения срока действия текущего сертификата универсальной платформы Windows.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.certificatePath">
      <summary>
        <para>Путь к файлу для текущего сертификата универсальной платформы Windows.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.certificateSubject">
      <summary>
        <para>Субъект текущего сертификата универсальной платформы Windows.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.defaultTileSize">
      <summary>
        <para>PlayerSettings.WSADefaultTileSize|тип размера плитки для использования в качестве размера по умолчанию для плитки приложения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.enableIndependentInputSource">
      <summary>
        <para>Включает и отключает функцию независимого источника входного сигнала.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.enableLowLatencyPresentationAPI">
      <summary>
        <para>Включает и отключает API презентаций с малой задержкой.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.inputSource">
      <summary>
        <para>Тип источника ввода PlayerSettings.WSAInputSource|для событий ввода с помощью мыши, пера и касания в приложении XAML.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.largeTileShowName">
      <summary>
        <para>Имя приложения для отображения на PlayerSettings.WSAImageType.UWPSquare310x310Logo|Large Tile.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.lastRequiredScene">
      <summary>
        <para>Индексный номер сцены из списка для последней сцены, которая должна присутствовать в сборке потоковой установки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.mediumTileShowName">
      <summary>
        <para>Имя приложения для отображения на плитке PlayerSettings.WSAImageType.UWPSquare150x150Logo|Medium.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.packageName">
      <summary>
        <para>Имя пакета приложения универсальной платформы Windows для установки на устройство.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.packageVersion">
      <summary>
        <para>Версия пакета приложения универсальной платформы Windows для установки на устройство.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.splashScreenBackgroundColor">
      <summary>
        <para>Цвет фона переопределения для экрана-заставки Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.supportStreamingInstall">
      <summary>
        <para>Указывает, можно ли запустить пакет приложений универсальной платформы Windows до завершения установки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.tileBackgroundColor">
      <summary>
        <para>Цвет фона для использования плиток приложения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.tileForegroundText">
      <summary>
        <para>Цветовой стиль PlayerSettings.WSAApplicationForegroundText|для использования в тексте заголовка в плитке приложения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.tileShortName">
      <summary>
        <para>Альтернативное, более короткое имя заголовка для отображения на плитке приложения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.tileShowName">
      <summary>
        <para>Указывает, какие плитки PlayerSettings.WSAApplicationShowName|отображают отображаемое имя приложения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.transparentSwapchain">
      <summary>
        <para>Устанавливает для AlphaMode в цепочке обмена значение DXGI_ALPHA_MODE_PREMULTIPLIED.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.vcxProjDefaultLanguage">
      <summary>
        <para>Задает значение XML &lt;defaultLanguage&gt;, указанное в сгенерированном файле проекта Visual Studio (.vcxproj). Применяется только к первоначальному созданию файлов, уже существующие файлы не будут изменены. Когда пусто, будет использоваться «en-US».

Применяется только к платформе UWP.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.wideTileShowName">
      <summary>
        <para>Указывает, отображать ли имя приложения на плитке PlayerSettings.WSAImageType.UWPWide310x150Logo|wide.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.WSA.Declarations">
      <summary>
        <para>Представляет дополнительные параметры приложения универсальной платформы Windows, записанные в манифест пакета.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.Declarations.fileTypeAssociations">
      <summary>
        <para>Типы файлов PlayerSettings.WSAFileTypeAssociations|для регистрации приложения в качестве обработчика по умолчанию.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.Declarations.protocolName">
      <summary>
        <para>Схема URI для регистрации приложения в качестве обработчика по умолчанию.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PlayerSettings.WSA.GetCapability(UnityEditor.PlayerSettings/WSACapability)">
      <summary>
        <para>Проверяет, устанавливает ли ваш проект указанную возможность PlayerSettings.WSACapability|UWP.</para>
      </summary>
      <param name="capability">PlayerSettings.WSACapability|Тип возможности UWP для проверки.</param>
      <returns>
        <para>Возвращает true, если ваш проект устанавливает указанную возможность. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.WSA.GetTargetDeviceFamily(UnityEditor.PlayerSettings/WSATargetFamily)">
      <summary>
        <para>Проверяет, нацелен ли ваш проект на указанное семейство устройств PlayerSettings.WSATargetFamily|.</para>
      </summary>
      <param name="family">PlayerSettings.WSATargetFamily|Тип семейства устройств для проверки.</param>
      <returns>
        <para>Возвращает true, если проект нацелен на семейство устройств. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.WSA.GetVisualAssetsImage(UnityEditor.PlayerSettings/WSAImageType,UnityEditor.PlayerSettings/WSAImageScale)">
      <summary>
        <para>Извлекает путь ресурса для изображения, которое вы установили в качестве логотипа пакета универсальной платформы Windows.</para>
      </summary>
      <param name="type">PlayerSettings.WSAImageType|Тип логотипа UWP, для которого требуется получить имя актива.</param>
      <param name="scale">PlayerSettings.WSAImageScale|Тип масштаба UWP, для которого требуется получить имя актива.</param>
      <returns>
        <para>Возвращает путь ресурса для изображения, установленного в настоящее время как указанный логотип. Если вы не установили изображение, возвращает пустую строку.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.WSA.SetCapability(UnityEditor.PlayerSettings/WSACapability,System.Boolean)">
      <summary>
        <para>Включает или удаляет указанные возможности PlayerSettings.WSACapability|UWP в сборке универсальной платформы Windows.</para>
      </summary>
      <param name="capability">PlayerSettings.WSACapability|Тип возможности UWP для изменения.</param>
      <param name="value">Значение true, чтобы включить возможность в сборку UWP, или значение false, чтобы удалить ее.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.WSA.SetCertificate(System.String,System.String)">
      <summary>
        <para>Задает сертификат, который будет использоваться для подписи пакета приложений универсальной платформы Windows.</para>
      </summary>
      <param name="path">Относительный путь актива к файлу сертификата (.pfx).</param>
      <param name="password">Пароль сертификата. Если сертификат не требует пароля, используйте пустую строку.</param>
      <returns>
        <para>Возвращает true, если Unity успешно обновляет сертификат. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.WSA.SetTargetDeviceFamily(UnityEditor.PlayerSettings/WSATargetFamily,System.Boolean)">
      <summary>
        <para>Добавляет или удаляет указанное семейство устройств PlayerSettings.WSATargetFamily|UWP из списка семейств устройств, поддерживаемых сборкой приложения универсальной платформы Windows.</para>
      </summary>
      <param name="family">PlayerSettings.WSATargetFamily|Тип семейства устройств для изменения.</param>
      <param name="value">Значение true, чтобы выбрать семейство устройств в сборке UWP, или значение false, чтобы удалить его.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.WSA.SetVisualAssetsImage(System.String,UnityEditor.PlayerSettings/WSAImageType,UnityEditor.PlayerSettings/WSAImageScale)">
      <summary>
        <para>Задает изображение для использования в качестве логотипа пакета универсальной платформы Windows.</para>
      </summary>
      <param name="image">Путь ресурса для изображения, используемого в качестве указанного логотипа.</param>
      <param name="type">PlayerSettings.WSAImageType|Тип логотипа UWP, для которого назначается изображение.</param>
      <param name="scale">PlayerSettings.WSAImageScale|Тип масштаба UWP, для которого назначается изображение.</param>
    </member>
    <member name="T:UnityEditor.PlayerSettings.WSAApplicationForegroundText">
      <summary>
        <para>Значения цветового стиля текста заголовка, отображаемого на плитках приложений универсальной платформы Windows.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAApplicationForegroundText.Dark">
      <summary>
        <para>Использует темный текст в плитках приложений универсальной платформы Windows.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAApplicationForegroundText.Light">
      <summary>
        <para>Использует светлый текст в плитках приложений универсальной платформы Windows.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.WSAApplicationShowName">
      <summary>
        <para>Параметры, для которых PlayerSettings.WSAImageType|типы плиток отображают имя приложения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAApplicationShowName.AllLogos">
      <summary>
        <para>Отображает имя приложения на всех размерах плитки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAApplicationShowName.NoLogos">
      <summary>
        <para>Не отображает имя приложения на любом размере плитки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAApplicationShowName.NotSet">
      <summary>
        <para>Указывает, что вы не задали имя приложения и используете поведение универсальной платформы Windows по умолчанию.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAApplicationShowName.StandardLogoOnly">
      <summary>
        <para>Отображает имя приложения для PlayerSettings.WSAImageType.UWPSquare150x150Logo|средних и PlayerSettings.WSAImageType.UWPSquare310x310Logo|крупных плиток.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAApplicationShowName.WideLogoOnly">
      <summary>
        <para>Отображает имя приложения для плиток PlayerSettings.WSAImageType.UWPWide310x150Logo|широких.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.WSACapability">
      <summary>
        <para>Параметры для возможностей приложений универсальной платформы Windows.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.AllJoyn">
      <summary>
        <para>Позволяет вашему приложению приложениям и устройствам с поддержкой AllJoyn в сети обнаруживать друг друга и взаимодействовать друг с другом.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.Appointments">
      <summary>
        <para>Позволяет вашему приложению получить доступ к магазину встреч конечного пользователя.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.BackgroundMediaPlayback">
      <summary>
        <para>Позволяет вашему приложению продолжать воспроизведение мультимедиа, пока приложение находится в фоновом режиме.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.BlockedChatMessages">
      <summary>
        <para>Позволяет приложению получать доступ к SMS- и MMS-сообщениям, блокируемым спам-фильтром.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.Bluetooth">
      <summary>
        <para>Позволяет вашему приложению обмениваться данными с устройствами Bluetooth, сопряженными с устройством.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.Chat">
      <summary>
        <para>Позволяет вашему приложению читать и удалять текстовые сообщения, а также сохранять сообщения в системном хранилище данных.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.CodeGeneration">
      <summary>
        <para>Позволяет вашему приложению получать доступ к определенным API, обеспечивающим компиляцию «точно в срок».</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.Contacts">
      <summary>
        <para>Предоставляет вашему приложению ограниченный доступ к агрегированному представлению контактов из разных контактов</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.EnterpriseAuthentication">
      <summary>
        <para>Позволяет вашему приложению использовать учетные данные домена Windows для входа на удаленные ресурсы.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.GazeInput">
      <summary>
        <para>Позволяет вашему приложению определять, куда смотрит пользователь, когда его устройство подключено к совместимому устройству отслеживания взгляда.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.HumanInterfaceDevice">
      <summary>
        <para>Позволяет вашему приложению взаимодействовать с подключенными устройствами интерфейса пользователя (HID).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.InputInjectionBrokered">
      <summary>
        <para>Позволяет вашему приложению программно внедрять в систему различные формы ввода, такие как HID, касание, перо, клавиатура или мышь.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.InternetClient">
      <summary>
        <para>Позволяет вашему приложению получать входящие данные из Интернета.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.InternetClientServer">
      <summary>
        <para>Позволяет вашему приложению отправлять и получать интернет-данные.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.Location">
      <summary>
        <para>Позволяет приложению получать доступ к функциям определения местоположения устройства, если они доступны.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.LowLevelDevices">
      <summary>
        <para>Позволяет вашему приложению получать доступ к пользовательским устройствам, которые соответствуют требованиям, установленным Microsoft.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.Microphone">
      <summary>
        <para>Позволяет вашему приложению получать доступ к аудиопотоку микрофонов, подключенных к устройству.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.MusicLibrary">
      <summary>
        <para>Позволяет вашему приложению получать доступ к файлам в музыкальной библиотеке пользователя.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.Objects3D">
      <summary>
        <para>Позволяет вашему приложению получать доступ к файлам в папке Windows 3D Object.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.OfflineMapsManagement">
      <summary>
        <para>Позволяет вашему приложению получать доступ к автономным картам.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.PhoneCall">
      <summary>
        <para>Позволяет приложению получать доступ ко всем телефонным линиям на устройстве и выполнять различные функции.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.PhoneCallHistoryPublic">
      <summary>
        <para>Позволяет вашему приложению считывать информацию об истории вызовов сотовой связи и некоторой голосовой связи через Интернет-протокол (VoIP) на устройстве.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.PicturesLibrary">
      <summary>
        <para>Позволяет вашему приложению получать доступ к файлам в библиотеке изображений пользователя.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.PointOfService">
      <summary>
        <para>Позволяет приложению получать доступ к API в пространстве имен Windows.Devices.PointOfService.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.PrivateNetworkClientServer">
      <summary>
        <para>Позволяет вашему приложению отправлять и получать данные в локальной сети.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.Proximity">
      <summary>
        <para>Позволяет вашему приложению инициировать соединения между несколькими устройствами, находящимися в непосредственной близости, для связи друг с другом.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.RecordedCallsFolder">
      <summary>
        <para>Позволяет вашему приложению получать доступ к папке записанных звонков.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.RemoteSystem">
      <summary>
        <para>Позволяет вашему приложению получать доступ к списку устройств, связанных с учетной записью Microsoft пользователя.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.RemovableStorage">
      <summary>
        <para>Позволяет вашему приложению получать доступ к файлам на съемном носителе, например на USB-накопителе или внешнем жестком диске.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.SharedUserCertificates">
      <summary>
        <para>Позволяет вашему приложению добавлять и получать доступ к сертификатам программного и аппаратного обеспечения в общем хранилище пользовательских данных.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.SpatialPerception">
      <summary>
        <para>Позволяет вашему приложению получать доступ к данным пространственного картирования через устройство смешанной реальности.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.SystemManagement">
      <summary>
        <para>Позволяет вашему приложению использовать базовые привилегии системного администратора. Это включает в себя выключение или перезагрузку устройства, а также доступ к языковому стандарту и часовому поясу.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.UserAccountInformation">
      <summary>
        <para>Позволяет приложению получать доступ к имени и изображению конечного пользователя.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.UserDataTasks">
      <summary>
        <para>Позволяет вашему приложению получать доступ к текущему состоянию параметров задачи.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.UserNotificationListener">
      <summary>
        <para>Позволяет вашему приложению получать доступ к текущему состоянию настроек уведомлений.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.VideosLibrary">
      <summary>
        <para>Позволяет вашему приложению получать доступ к файлам видеотеки пользователя.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.VoipCall">
      <summary>
        <para>Позволяет вашему приложению получать доступ к API вызова голосовой связи через интернет-протокол (VoIP) в пространстве имен Windows.ApplicationModel.Calls.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.WebCam">
      <summary>
        <para>Позволяет вашему приложению получать доступ к видеопотоку встроенных и внешних веб-камер.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.WSADefaultTileSize">
      <summary>
        <para>Параметры размера плитки приложения по умолчанию.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSADefaultTileSize.Medium">
      <summary>
        <para>В качестве размера плитки приложения по умолчанию используется плитка среднего размера.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSADefaultTileSize.NotSet">
      <summary>
        <para>Не использует размер плитки приложения по умолчанию.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSADefaultTileSize.Wide">
      <summary>
        <para>В качестве размера плитки приложения по умолчанию используется плитка большого размера.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.WSAFileTypeAssociations">
      <summary>
        <para>Представляет типы файлов, для которых приложение регистрируется в качестве обработчика по умолчанию.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAFileTypeAssociations.name">
      <summary>
        <para>Имя ассоциации типов файлов. Это нужно для организации и группировки типов файлов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAFileTypeAssociations.supportedFileTypes">
      <summary>
        <para>Набор PlayerSettings.WSASupportedFileType|типов файлов и содержимого, поддерживаемых вашим приложением.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.WSAImageScale">
      <summary>
        <para>Параметры набора значений размеров, применяемых к изображениям логотипа и значков универсальной платформы Windows. Эти параметры задают варианты для разных размеров экрана и разрешения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAImageScale.100">
      <summary>
        <para>Использует масштабный коэффициент 100%.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAImageScale.125">
      <summary>
        <para>Использует масштабный коэффициент 125%.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAImageScale.150">
      <summary>
        <para>Использует масштабный коэффициент 150%.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAImageScale.200">
      <summary>
        <para>Использует масштабный коэффициент 200%.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAImageScale.400">
      <summary>
        <para>Использует масштабный коэффициент 400%.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAImageScale.Target16">
      <summary>
        <para>Ориентирован на размер 16 x 16 пикселей.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAImageScale.Target24">
      <summary>
        <para>Ориентирован на размер 24 x 24 пикселя.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAImageScale.Target256">
      <summary>
        <para>Целевой размер 256 x 256 пикселей.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAImageScale.Target32">
      <summary>
        <para>Целевой размер 32 x 32 пикселя.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAImageScale.Target48">
      <summary>
        <para>Целевой размер 48 x 48 пикселей.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.WSAImageType">
      <summary>
        <para>Параметры для типов изображений значков и логотипов, представляющих приложение. Например, изображения для отображения в Microsoft Store, меню «Пуск» или на панели задач.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAImageType.PackageLogo">
      <summary>
        <para>Изображение, представляющее ваше приложение в Microsoft Store.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAImageType.SplashScreenImage">
      <summary>
        <para>Изображение, отображаемое в качестве экрана-заставки при открытии приложения универсальной платформы Windows.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAImageType.UWPSquare150x150Logo">
      <summary>
        <para>Изображение, отображаемое в качестве средней плитки в меню «Пуск» и в Microsoft Store.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAImageType.UWPSquare310x310Logo">
      <summary>
        <para>Изображение для отображения в виде большой плитки в меню «Пуск» и в Microsoft Store.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAImageType.UWPSquare44x44Logo">
      <summary>
        <para>Изображение, отображаемое в качестве значка приложения в меню «Пуск», на панели задач и в диспетчере задач.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAImageType.UWPSquare71x71Logo">
      <summary>
        <para>Изображение для отображения в виде маленькой плитки в меню «Пуск».</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAImageType.UWPWide310x150Logo">
      <summary>
        <para>Изображение, которое будет отображаться в виде широкой плитки в меню «Пуск» и в Microsoft Store.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.WSAInputSource">
      <summary>
        <para>Параметры источника ввода, из которого приложение XAML может получать события ввода указателя.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAInputSource.CoreWindow">
      <summary>
        <para>Указывает, что ввод указателя поступает из CoreWindow. Это параметр по умолчанию.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAInputSource.IndependentInputSource">
      <summary>
        <para>Указывает, что ввод указателя поступает из основного объекта ввода SwapChainPanel.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAInputSource.SwapChainPanel">
      <summary>
        <para>Указывает, что ввод указателя поступает из SwapChainPanel.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.WSASupportedFileType">
      <summary>
        <para>Представляет один файл и тип содержимого для регистрации приложения в качестве обработчика по умолчанию.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSASupportedFileType.contentType">
      <summary>
        <para>Тип содержимого MIME, используемый типом файла.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSASupportedFileType.fileType">
      <summary>
        <para>Расширение файла, определяющее тип файла.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.WSATargetFamily">
      <summary>
        <para>Параметры набора семейств устройств универсальной платформы Windows, которые ваше приложение может напрямую поддерживать.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSATargetFamily.Desktop">
      <summary>
        <para>Ориентирован на семейство устройств, в которое входят настольные ПК, ноутбуки и планшеты.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSATargetFamily.Holographic">
      <summary>
        <para>Нацелено на семейство устройств, в которое входят устройства HoloLens.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSATargetFamily.IoT">
      <summary>
        <para>Ориентирован на семейство устройств, в которое входят устройства Интернета вещей (IoT).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSATargetFamily.IoTHeadless">
      <summary>
        <para>Ориентирован на семейство устройств, которое включает устройства Интернета вещей (IoT) без пользовательского интерфейса.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSATargetFamily.Mobile">
      <summary>
        <para>Нацелено на семейство устройств, в которое входят смартфоны.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSATargetFamily.Team">
      <summary>
        <para>Ориентирован на семейство устройств, включающее Surface Hub.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSATargetFamily.Xbox">
      <summary>
        <para>Нацелено на семейство устройств, в которое входят консоли Xbox.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.XboxOne">
      <summary>
        <para>Конкретные настройки проигрывателя Xbox One.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayModeStateChange">
      <summary>
        <para>Перечисление, указывающее изменение состояния режима воспроизведения редактора.

См. также: PauseState, EditorApplication.playModeStateChanged, EditorApplication.isPlaying.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayModeStateChange.EnteredEditMode">
      <summary>
        <para>Происходит при следующем обновлении приложения Editor, если оно находится в режиме редактирования, а ранее было в режиме воспроизведения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayModeStateChange.EnteredPlayMode">
      <summary>
        <para>Происходит при следующем обновлении приложения Editor, если оно находится в режиме воспроизведения, а ранее было в режиме редактирования.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayModeStateChange.ExitingEditMode">
      <summary>
        <para>Происходит при выходе из режима редактирования до того, как редактор перейдет в режим воспроизведения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayModeStateChange.ExitingPlayMode">
      <summary>
        <para>Происходит при выходе из режима воспроизведения до того, как редактор перейдет в режим редактирования.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PluginImporter">
      <summary>
        <para>Представляет модуль импорта плагинов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PluginImporter.isNativePlugin">
      <summary>
        <para>Является ли плагин нативным или управляемым? Примечание. Библиотеки C++ с поддержкой CLR считаются собственными подключаемыми модулями, поскольку Unity не может загружать такие библиотеки. Вы по-прежнему можете получить к ним доступ через P/Invoke.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PluginImporter.isPreloaded">
      <summary>
        <para>Загружается ли встроенный плагин во время запуска или по запросу?</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PluginImporter.ClearSettings">
      <summary>
        <para>Очистите все настройки плагина и установите для совместимости с любой платформой значение true.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PluginImporter.#ctor">
      <summary>
        <para>Конструктор.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PluginImporter.DefineConstraints">
      <summary>
        <para>Позволяет указать список директив #define, которые определяют, следует ли включать подключаемый модуль.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PluginImporter.GetAllImporters">
      <summary>
        <para>Возвращает все средства импорта плагинов для всех платформ.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PluginImporter.GetCompatibleWithAnyPlatform">
      <summary>
        <para>Проверяет, помечен ли подключаемый модуль как совместимый с любой платформой.</para>
      </summary>
      <returns>
        <para>Истина, если подключаемый модуль помечен как совместимый с любой платформой, в противном случае возвращает ложь.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PluginImporter.GetCompatibleWithEditor">
      <summary>
        <para>Совместим ли плагин с редактором.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PluginImporter.GetCompatibleWithPlatform(UnityEditor.BuildTarget)">
      <summary>
        <para>Совместим ли плагин с указанной платформой.</para>
      </summary>
      <param name="platform">Целевая платформа.</param>
      <param name="platformName">
      </param>
    </member>
    <member name="M:UnityEditor.PluginImporter.GetCompatibleWithPlatform(System.String)">
      <summary>
        <para>Совместим ли плагин с указанной платформой.</para>
      </summary>
      <param name="platform">Целевая платформа.</param>
      <param name="platformName">
      </param>
    </member>
    <member name="M:UnityEditor.PluginImporter.GetEditorData(System.String)">
      <summary>
        <para>Возвращает данные редактора для указанного ключа.</para>
      </summary>
      <param name="key">Значение ключа для данных.</param>
    </member>
    <member name="M:UnityEditor.PluginImporter.GetExcludeEditorFromAnyPlatform">
      <summary>
        <para>Исключен ли редактор, если для любой платформы установлено значение true.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PluginImporter.GetExcludeFromAnyPlatform(System.String)">
      <summary>
        <para>Исключается ли платформа, если для любой платформы задано значение true.</para>
      </summary>
      <param name="platform">Целевая платформа.</param>
      <param name="platformName">
      </param>
    </member>
    <member name="M:UnityEditor.PluginImporter.GetExcludeFromAnyPlatform(UnityEditor.BuildTarget)">
      <summary>
        <para>Исключается ли платформа, если для любой платформы задано значение true.</para>
      </summary>
      <param name="platform">Целевая платформа.</param>
      <param name="platformName">
      </param>
    </member>
    <member name="M:UnityEditor.PluginImporter.GetIcon(System.String)">
      <summary>
        <para>Получает пользовательский значок для связи с MonoScript во время импорта.</para>
      </summary>
      <param name="className">Полное имя класса MonoScript, импортированного этим подключаемым модулем.</param>
      <returns>
        <para>Возвращает пользовательский значок, который будет связан с импортированным MonoScript. Если никакой пользовательский значок не будет связан с импортированным MonoScript, возвращает значение null.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PluginImporter.GetImporters(UnityEditor.BuildTarget)">
      <summary>
        <para>Возвращает все импортеры плагинов для указанной платформы.</para>
      </summary>
      <param name="platform">Целевая платформа.</param>
      <param name="platformName">Название целевой платформы.</param>
    </member>
    <member name="M:UnityEditor.PluginImporter.GetImporters(System.String)">
      <summary>
        <para>Возвращает все импортеры плагинов для указанной платформы.</para>
      </summary>
      <param name="platform">Целевая платформа.</param>
      <param name="platformName">Название целевой платформы.</param>
    </member>
    <member name="M:UnityEditor.PluginImporter.GetIsOverridable">
      <summary>
        <para>Определяет, будет ли этот подключаемый модуль переопределяться, если в папку вашего проекта будет помещен подключаемый модуль с таким же именем.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PluginImporter.GetPlatformData(UnityEditor.BuildTarget,System.String)">
      <summary>
        <para>Получить данные для конкретной платформы.</para>
      </summary>
      <param name="platform">Целевая платформа.</param>
      <param name="key">Значение ключа для данных.</param>
      <param name="platformName">
      </param>
    </member>
    <member name="M:UnityEditor.PluginImporter.GetPlatformData(System.String,System.String)">
      <summary>
        <para>Получить данные для конкретной платформы.</para>
      </summary>
      <param name="platform">Целевая платформа.</param>
      <param name="key">Значение ключа для данных.</param>
      <param name="platformName">
      </param>
    </member>
    <member name="T:UnityEditor.PluginImporter.IncludeInBuildDelegate">
      <summary>
        <para>Делегат для использования с SetIncludeInBuildDelegate.</para>
      </summary>
      <param name="path">
      </param>
    </member>
    <member name="M:UnityEditor.PluginImporter.SetCompatibleWithAnyPlatform(System.Boolean)">
      <summary>
        <para>Устанавливает совместимость с любой платформой.</para>
      </summary>
      <param name="enable">Определяет, совместим ли подключаемый модуль с любой платформой.</param>
    </member>
    <member name="M:UnityEditor.PluginImporter.SetCompatibleWithEditor(System.Boolean)">
      <summary>
        <para>Устанавливает совместимость с любым редактором.</para>
      </summary>
      <param name="enable">Совместим ли плагин с редактором.</param>
    </member>
    <member name="M:UnityEditor.PluginImporter.SetCompatibleWithPlatform(UnityEditor.BuildTarget,System.Boolean)">
      <summary>
        <para>Устанавливает совместимость с указанной платформой.</para>
      </summary>
      <param name="platform">Целевая платформа.</param>
      <param name="enable">Совместим ли плагин с указанной платформой.</param>
      <param name="platformName">Целевая платформа.</param>
    </member>
    <member name="M:UnityEditor.PluginImporter.SetCompatibleWithPlatform(System.String,System.Boolean)">
      <summary>
        <para>Устанавливает совместимость с указанной платформой.</para>
      </summary>
      <param name="platform">Целевая платформа.</param>
      <param name="enable">Совместим ли плагин с указанной платформой.</param>
      <param name="platformName">Целевая платформа.</param>
    </member>
    <member name="M:UnityEditor.PluginImporter.SetEditorData(System.String,System.String)">
      <summary>
        <para>Устанавливает данные, специфичные для редактора.</para>
      </summary>
      <param name="key">Значение ключа для данных.</param>
      <param name="value">Данные.</param>
    </member>
    <member name="M:UnityEditor.PluginImporter.SetExcludeEditorFromAnyPlatform(System.Boolean)">
      <summary>
        <para>Исключить Editor из совместимых платформ, если для параметра Any Platform установлено значение true.</para>
      </summary>
      <param name="excludedFromAny">
      </param>
    </member>
    <member name="M:UnityEditor.PluginImporter.SetExcludeFromAnyPlatform(System.String,System.Boolean)">
      <summary>
        <para>Исключить платформу из совместимых платформ, если для параметра Любая платформа установлено значение true.</para>
      </summary>
      <param name="platformName">Целевая платформа.</param>
      <param name="excludedFromAny">
      </param>
      <param name="platform">
      </param>
    </member>
    <member name="M:UnityEditor.PluginImporter.SetExcludeFromAnyPlatform(UnityEditor.BuildTarget,System.Boolean)">
      <summary>
        <para>Исключить платформу из совместимых платформ, если для параметра Любая платформа установлено значение true.</para>
      </summary>
      <param name="platformName">Целевая платформа.</param>
      <param name="excludedFromAny">
      </param>
      <param name="platform">
      </param>
    </member>
    <member name="M:UnityEditor.PluginImporter.SetIcon(System.String,UnityEngine.Texture2D)">
      <summary>
        <para>Устанавливает пользовательский значок для связи с моноскриптом, импортированным управляемым подключаемым модулем.</para>
      </summary>
      <param name="className">Полное имя класса MonoScript, импортированного этим управляемым подключаемым модулем.</param>
      <param name="icon">Пользовательский значок для связи с импортированным MonoScript. Когда значение равно null, Unity восстанавливает значок по умолчанию.</param>
    </member>
    <member name="M:UnityEditor.PluginImporter.SetIncludeInBuildDelegate(UnityEditor.PluginImporter/IncludeInBuildDelegate)">
      <summary>
        <para>Установка функции делегата для вызова с помощью ShouldIncludeInBuild.</para>
      </summary>
      <param name="includeInBuildDelegate">
      </param>
    </member>
    <member name="M:UnityEditor.PluginImporter.SetPlatformData(UnityEditor.BuildTarget,System.String,System.String)">
      <summary>
        <para>Задает данные для конкретной платформы.</para>
      </summary>
      <param name="platform">Целевая платформа.</param>
      <param name="key">Значение ключа для данных.</param>
      <param name="value">Данные.</param>
      <param name="platformName">
      </param>
    </member>
    <member name="M:UnityEditor.PluginImporter.SetPlatformData(System.String,System.String,System.String)">
      <summary>
        <para>Задает данные для конкретной платформы.</para>
      </summary>
      <param name="platform">Целевая платформа.</param>
      <param name="key">Значение ключа для данных.</param>
      <param name="value">Данные.</param>
      <param name="platformName">
      </param>
    </member>
    <member name="M:UnityEditor.PluginImporter.ShouldIncludeInBuild">
      <summary>
        <para>Определяет, следует ли включать этот подключаемый модуль в текущую цель сборки.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PopupWindow">
      <summary>
        <para>Класс, используемый для отображения всплывающих окон, наследуемых от PopupWindowContent.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PopupWindow.OnDisable">
      <summary>
        <para>См. ScriptableObject.OnEnable.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PopupWindow.OnEnable">
      <summary>
        <para>См. ScriptableObject.OnDisable.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PopupWindow.Show(UnityEngine.Rect,UnityEditor.PopupWindowContent)">
      <summary>
        <para>Показать всплывающее окно с заданным PopupWindowContent.</para>
      </summary>
      <param name="activatorRect">Прямоугольник кнопки, которая открывает всплывающее окно.</param>
      <param name="windowContent">Содержимое для отображения во всплывающем окне.</param>
    </member>
    <member name="T:UnityEditor.PopupWindowContent">
      <summary>
        <para>Класс, используемый для реализации содержимого всплывающего окна.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PopupWindowContent.editorWindow">
      <summary>
        <para>EditorWindow, содержащий содержимое всплывающего окна.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PopupWindowContent.GetWindowSize">
      <summary>
        <para>Размер всплывающего окна.</para>
      </summary>
      <returns>
        <para>Размер всплывающего окна.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PopupWindowContent.OnClose">
      <summary>
        <para>Обратный вызов при закрытии всплывающего окна.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PopupWindowContent.OnGUI(UnityEngine.Rect)">
      <summary>
        <para>Обратный вызов для рисования элементов управления GUI для всплывающего окна.</para>
      </summary>
      <param name="rect">Прямоугольник, внутри которого будет отрисовываться графический интерфейс.</param>
    </member>
    <member name="M:UnityEditor.PopupWindowContent.OnOpen">
      <summary>
        <para>Обратный вызов при открытии всплывающего окна.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PrefabAssetType">
      <summary>
        <para>Перечисление, указывающее тип Prefab Asset, например, Regular, Model и Variant.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabAssetType.MissingAsset">
      <summary>
        <para>Запрашиваемый объект является частью экземпляра Prefab, но поскольку актив отсутствует, фактический тип Prefab определить невозможно.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabAssetType.Model">
      <summary>
        <para>Запрашиваемый объект является частью сборной модели.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabAssetType.NotAPrefab">
      <summary>
        <para>Запрашиваемый объект вообще не является частью префаба.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabAssetType.Regular">
      <summary>
        <para>Запрашиваемый объект является частью обычного префаба.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabAssetType.Variant">
      <summary>
        <para>Запрашиваемый объект является частью Prefab Variant.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PrefabInstanceStatus">
      <summary>
        <para>Перечисление со статусом о том, правильно ли экземпляр Prefab подключен к своему ресурсу.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabInstanceStatus.Connected">
      <summary>
        <para>Экземпляр Prefab подключен к своему Prefab Asset.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabInstanceStatus.Disconnected">
      <summary>
        <para>Экземпляр Prefab не подключен к своему Prefab Asset.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabInstanceStatus.MissingAsset">
      <summary>
        <para>В экземпляре Prefab отсутствует его Prefab Asset.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabInstanceStatus.NotAPrefab">
      <summary>
        <para>Объект не является частью экземпляра Prefab.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PrefabType">
      <summary>
        <para>Тип объекта Prefab, возвращаемый PrefabUtility.GetPrefabType.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabType.DisconnectedModelPrefabInstance">
      <summary>
        <para>Объект является экземпляром импортированной 3D-модели, но соединение разорвано.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabType.DisconnectedPrefabInstance">
      <summary>
        <para>Объект является экземпляром префаба, созданного пользователем, но соединение разорвано.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabType.MissingPrefabInstance">
      <summary>
        <para>Объект был экземпляром префаба, но исходный префаб найти не удалось.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabType.ModelPrefab">
      <summary>
        <para>Объект представляет собой импортированный актив 3D-модели.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabType.ModelPrefabInstance">
      <summary>
        <para>Объект является экземпляром импортированной 3D-модели.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabType.None">
      <summary>
        <para>Объект не является префабом или экземпляром префаба.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabType.Prefab">
      <summary>
        <para>Объект представляет собой сборный ресурс, созданный пользователем.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabType.PrefabInstance">
      <summary>
        <para>Объект является экземпляром созданного пользователем Prefab.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PrefabUnpackMode">
      <summary>
        <para>Перечисление, используемое для определения того, как следует распаковывать префаб.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabUnpackMode.Completely">
      <summary>
        <para>Используйте это, чтобы удалить всю информацию о префабах из экземпляра префаба.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabUnpackMode.OutermostRoot">
      <summary>
        <para>Используйте этот режим, чтобы распаковать только самый внешний слой префаба.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PrefabUtility">
      <summary>
        <para>Вспомогательный класс для любых операций, связанных с Prefab.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabUtility.prefabInstanceUpdated">
      <summary>
        <para>Unity автоматически вызывает этот метод при обновлении экземпляров Prefab в сцене.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PrefabUtility.ApplyAddedComponent(UnityEngine.Component,System.String,UnityEditor.InteractionMode)">
      <summary>
        <para>Применяет добавленный компонент к сборному активу по заданному пути актива.</para>
      </summary>
      <param name="action">Режим взаимодействия для этого действия.</param>
      <param name="assetPath">Путь Prefab Asset, к которому нужно применить.</param>
      <param name="component">Добавленный компонент в экземпляр Prefab для применения.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.ApplyAddedGameObject(UnityEngine.GameObject,System.String,UnityEditor.InteractionMode)">
      <summary>
        <para>Применяет добавленный GameObject к сборному ассету по указанному пути ассета.</para>
      </summary>
      <param name="gameObject">Добавленный GameObject в экземпляр Prefab для применения.</param>
      <param name="assetPath">Путь Prefab Asset, к которому нужно применить.</param>
      <param name="action">Режим взаимодействия для этого действия.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.ApplyAddedGameObjects(UnityEngine.GameObject[],System.String,UnityEditor.InteractionMode)">
      <summary>
        <para>Применяет добавленные игровые объекты к сборному ресурсу по заданному пути ресурса.</para>
      </summary>
      <param name="gameObjects">Добавленные игровые объекты в экземпляре Prefab для применения.</param>
      <param name="assetPath">Путь Prefab Asset, к которому нужно применить.</param>
      <param name="action">Режим взаимодействия для этого действия.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.ApplyObjectOverride(UnityEngine.Object,System.String,UnityEditor.InteractionMode)">
      <summary>
        <para>Применяет все переопределенные свойства компонента экземпляра Prefab или GameObject к Prefab Asset по заданному пути актива.</para>
      </summary>
      <param name="instanceComponentOrGameObject">Применяемый объект экземпляра Prefab.</param>
      <param name="assetPath">Путь Prefab Asset, к которому нужно применить.</param>
      <param name="action">Режим взаимодействия для этого действия.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.ApplyPrefabInstance(UnityEngine.GameObject,UnityEditor.InteractionMode)">
      <summary>
        <para>Применяет все переопределения экземпляра Prefab к его Prefab Asset.</para>
      </summary>
      <param name="instanceRoot">Корень данного экземпляра Prefab.</param>
      <param name="action">Режим взаимодействия для этого действия.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.ApplyPropertyOverride(UnityEditor.SerializedProperty,System.String,UnityEditor.InteractionMode)">
      <summary>
        <para>Применяет одно переопределенное свойство экземпляра Prefab к Prefab Asset по заданному пути актива.</para>
      </summary>
      <param name="instanceProperty">Объект SerializedProperty, представляющий применяемое свойство.</param>
      <param name="assetPath">Путь Prefab Asset, к которому нужно применить.</param>
      <param name="action">Режим взаимодействия для этого действия.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.ApplyRemovedComponent(UnityEngine.GameObject,UnityEngine.Component,UnityEditor.InteractionMode)">
      <summary>
        <para>Удаляет компонент из Prefab Asset, на котором находится компонент.</para>
      </summary>
      <param name="instanceGameObject">GameObject в экземпляре Prefab, из которого был удален компонент.</param>
      <param name="assetComponent">Компонент в Prefab Asset, соответствующий удаленному компоненту в экземпляре.</param>
      <param name="action">Режим взаимодействия для этого действия.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.ConnectGameObjectToPrefab(UnityEngine.GameObject,UnityEngine.GameObject)">
      <summary>
        <para>Соединяет исходный префаб с игровым объектом.</para>
      </summary>
      <param name="go">Отключенный GameObject, который вы хотите переподключить.</param>
      <param name="sourcePrefab">Исходный префаб для подключения к GameObject.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.CreateEmptyPrefab(System.String)">
      <summary>
        <para>Создает пустой префаб по указанному пути.</para>
      </summary>
      <param name="path">Путь ресурса для нового пустого префаба.</param>
      <returns>
        <para>Ссылка на новый Prefab Asset.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.CreatePrefab(System.String,UnityEngine.GameObject)">
      <summary>
        <para>Создает Prefab из иерархии игровых объектов.</para>
      </summary>
      <param name="path">Путь сохранения префаба.</param>
      <param name="go">GameObject, из которого вы хотите создать Prefab.</param>
      <param name="options">
      </param>
      <returns>
        <para>Ссылка на созданный Prefab.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.CreatePrefab(System.String,UnityEngine.GameObject,UnityEditor.ReplacePrefabOptions)">
      <summary>
        <para>Создает Prefab из иерархии игровых объектов.</para>
      </summary>
      <param name="path">Путь сохранения префаба.</param>
      <param name="go">GameObject, из которого вы хотите создать Prefab.</param>
      <param name="options">
      </param>
      <returns>
        <para>Ссылка на созданный Prefab.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.DisconnectPrefabInstance(UnityEngine.Object)">
      <summary>
        <para>Устарело. По состоянию на 2018.3 этот метод ничего не делает.</para>
      </summary>
      <param name="targetObject">
      </param>
    </member>
    <member name="T:UnityEditor.PrefabUtility.EditPrefabContentsScope">
      <summary>
        <para>Одноразовая вспомогательная структура для автоматической загрузки содержимого файла Prefab, сохранения содержимого и повторной выгрузки содержимого.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabUtility.EditPrefabContentsScope.assetPath">
      <summary>
        <para>Путь к файлу сборного актива.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabUtility.EditPrefabContentsScope.prefabContentsRoot">
      <summary>
        <para>Корневой GameObject содержимого Prefab.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PrefabUtility.EditPrefabContentsScope.#ctor(System.String)">
      <summary>
        <para>
        </para>
      </summary>
      <param name="assetPath">Путь к файлу сборного актива.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.FindAllInstancesOfPrefab(UnityEngine.GameObject)">
      <summary>
        <para>Извлекает корневые GameObjects для всех экземпляров ресурса Prefab с корневым prefabRoot, найденным во всех загруженных в данный момент сценах. Если prefabRoot не является допустимым корневым игровым объектом Prefab, генерируется исключение ArgumentException.</para>
      </summary>
      <param name="prefabRoot">Корневой GameObject сборного ассета.</param>
      <param name="scene">Сцена для поиска экземпляров Prefab. Указанная сцена должна быть допустимой и загруженной.</param>
      <returns>
        <para>Корневые игровые объекты для всех экземпляров ресурса Prefab с корневым prefabRoot.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.FindAllInstancesOfPrefab(UnityEngine.GameObject,UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Извлекает корневые GameObjects для всех экземпляров ресурса Prefab с корневым prefabRoot, найденным во всех загруженных в данный момент сценах. Если prefabRoot не является допустимым корневым игровым объектом Prefab, генерируется исключение ArgumentException.</para>
      </summary>
      <param name="prefabRoot">Корневой GameObject сборного ассета.</param>
      <param name="scene">Сцена для поиска экземпляров Prefab. Указанная сцена должна быть допустимой и загруженной.</param>
      <returns>
        <para>Корневые игровые объекты для всех экземпляров ресурса Prefab с корневым prefabRoot.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.FindPrefabRoot(UnityEngine.GameObject)">
      <summary>
        <para>Извлекает корневой GameObject Prefab, частью которого является предоставленный GameObject.</para>
      </summary>
      <param name="source">Объект для проверки.</param>
      <returns>
        <para>Корень префаба.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.FindRootGameObjectWithSameParentPrefab(UnityEngine.GameObject)">
      <summary>
        <para>Извлекает самый верхний GameObject, который имеет тот же родительский элемент Prefab, что и цель.</para>
      </summary>
      <param name="target">GameObject для использования в поиске.</param>
      <returns>
        <para>GameObject в корне префаба.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.FindValidUploadPrefabInstanceRoot(UnityEngine.GameObject)">
      <summary>
        <para>Возвращает корневой GameObject экземпляра Prefab, если этот корневой экземпляр Prefab является родителем Prefab.</para>
      </summary>
      <param name="target">GameObject для обработки.</param>
      <returns>
        <para>Вернуть корневой игровой объект Prefab Asset.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetAddedComponents(UnityEngine.GameObject)">
      <summary>
        <para>Извлекает список объектов PrefabUtility.AddedComponent, содержащих информацию о переопределениях добавленных компонентов в экземпляре Prefab.</para>
      </summary>
      <param name="prefabInstance">Экземпляр Prefab, о котором нужно получить информацию.</param>
      <returns>
        <para>Список объектов с информацией о добавленных компонентах.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetAddedGameObjects(UnityEngine.GameObject)">
      <summary>
        <para>Извлекает список объектов PrefabUtility.AddedGameObject, которые содержат информацию о добавленных игровых объектах в экземпляре Prefab.</para>
      </summary>
      <param name="prefabInstance">Экземпляр Prefab, о котором нужно получить информацию.</param>
      <returns>
        <para>Список объектов с информацией о добавленных GameObjects.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetCorrespondingObjectFromOriginalSource(TObject)">
      <summary>
        <para>Извлекает исходный объект для данного объекта.</para>
      </summary>
      <param name="componentOrGameObject">Объект, из которого нужно найти соответствующий исходный объект.</param>
      <returns>
        <para>Соответствующий объект из исходного источника или null.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetCorrespondingObjectFromSource(TObject)">
      <summary>
        <para>Извлекает соответствующий объект актива источника или null, если он не может быть найден.</para>
      </summary>
      <param name="componentOrGameObject">Объект, из которого нужно найти соответствующий объект.</param>
      <returns>
        <para>Соответствующий объект или null.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetCorrespondingObjectFromSourceAtPath(TObject,System.String)">
      <summary>
        <para>Извлекает соответствующий объект данного объекта из заданного пути Prefab Asset.</para>
      </summary>
      <param name="componentOrGameObject">Объект, из которого нужно найти соответствующий объект.</param>
      <param name="assetPath">Путь ресурса Prefab Asset, из которого нужно получить соответствующий объект.</param>
      <returns>
        <para>Соответствующий объект или null.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetIconForGameObject(UnityEngine.GameObject)">
      <summary>
        <para>Получает значок для данного GameObject.</para>
      </summary>
      <param name="gameObject">GameObject, для которого нужно получить значок.</param>
      <returns>
        <para>Значок для GameObject.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetNearestPrefabInstanceRoot(UnityEngine.Object)">
      <summary>
        <para>Извлекает GameObject, который является корнем ближайшего экземпляра Prefab, частью которого является объект.</para>
      </summary>
      <param name="componentOrGameObject">Объект для проверки. Должен быть компонентом или GameObject.</param>
      <returns>
        <para>Ближайший корень экземпляра Prefab.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetObjectOverrides(UnityEngine.GameObject,System.Boolean)">
      <summary>
        <para>Извлекает список объектов с информацией о переопределениях объектов в экземпляре Prefab.</para>
      </summary>
      <param name="prefabInstance">Экземпляр Prefab, о котором нужно получить информацию.</param>
      <param name="includeDefaultOverrides">Если установлено значение true, компоненты также будут включены, даже если они содержат только переопределения PrefabUtility.IsDefaultOverride|переопределения по умолчанию. False по умолчанию.</param>
      <returns>
        <para>Список объектов с информацией о переопределениях объектов.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetOutermostPrefabInstanceRoot(UnityEngine.Object)">
      <summary>
        <para>Извлекает GameObject, который является корнем самого внешнего экземпляра Prefab, частью которого является объект.</para>
      </summary>
      <param name="componentOrGameObject">Объект для проверки. Должен быть компонентом или GameObject.</param>
      <returns>
        <para>Самый внешний корень экземпляра Prefab.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetPrefabAssetPathOfNearestInstanceRoot(UnityEngine.Object)">
      <summary>
        <para>Извлекает путь актива ближайшего корня экземпляра Prefab, частью которого является указанный объект.</para>
      </summary>
      <param name="instanceComponentOrGameObject">Объект в экземпляре Prefab, путь к которому нужно получить.</param>
      <returns>
        <para>Путь ресурса.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetPrefabAssetType(UnityEngine.Object)">
      <summary>
        <para>Извлекает значение перечисления, указывающее тип Prefab Asset, например, Regular Prefab, Model Prefab и Prefab Variant.</para>
      </summary>
      <param name="componentOrGameObject">Объект, являющийся частью Prefab Asset или Prefab экземпляра.</param>
      <returns>
        <para>Тип префаба.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetPrefabInstanceHandle(UnityEngine.Object)">
      <summary>
        <para>Извлекает объект PrefabInstance для самого внешнего экземпляра Prefab, частью которого является предоставленный объект.</para>
      </summary>
      <param name="instanceComponentOrGameObject">Объект из экземпляра Prefab.</param>
      <returns>
        <para>Дескриптор экземпляра Prefab.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetPrefabInstanceStatus(UnityEngine.Object)">
      <summary>
        <para>Определяет, правильно ли подключен экземпляр Prefab к своему ресурсу.</para>
      </summary>
      <param name="componentOrGameObject">Объект, являющийся частью экземпляра Prefab.</param>
      <returns>
        <para>Статус экземпляра Prefab.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetPrefabObject(UnityEngine.Object)">
      <summary>
        <para>Извлекает объемлющий Prefab для любого объекта, содержащегося внутри.</para>
      </summary>
      <param name="targetObject">Объект, содержащийся в объекте Prefab.</param>
      <returns>
        <para>Префаб, в котором содержится объект.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetPrefabParent(UnityEngine.Object)">
      <summary>
        <para>Возвращает родительский объект актива источника или null, если он не может быть найден.</para>
      </summary>
      <param name="obj">
      </param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetPrefabType(UnityEngine.Object)">
      <summary>
        <para>Для данного объекта возвращает его тип Prefab (None, если это не Prefab).</para>
      </summary>
      <param name="target">
      </param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetPropertyModifications(UnityEngine.Object)">
      <summary>
        <para>Извлекает все изменения, примененные к экземпляру префаба, по сравнению с родительским префабом.</para>
      </summary>
      <param name="targetPrefab">
      </param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetRemovedComponents(UnityEngine.GameObject)">
      <summary>
        <para>Возвращает список объектов с информацией об удаленных переопределениях компонентов в экземпляре Prefab.</para>
      </summary>
      <param name="prefabInstance">Экземпляр Prefab, о котором нужно получить информацию.</param>
      <returns>
        <para>Список объектов с информацией об удаленных компонентах.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.HasManagedReferencesWithMissingTypes(UnityEngine.Object)">
      <summary>
        <para>Определяет, содержит ли ресурс Prefab объекта какие-либо MonoBehaviours с отсутствующими типами SerializeReference.</para>
      </summary>
      <param name="componentOrGameObject">Объект, являющийся частью сборного актива.</param>
      <param name="assetComponentOrGameObject">
      </param>
      <returns>
        <para>Возвращает true, если отсутствуют типы SerializeReference непосредственно в ресурсе Prefab, за исключением вложенных Prefab.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.HasPrefabInstanceAnyOverrides(UnityEngine.GameObject,System.Boolean)">
      <summary>
        <para>Возвращает true, если данный экземпляр Prefab имеет какие-либо переопределения.</para>
      </summary>
      <param name="instanceRoot">Корневой GameObject экземпляра Prefab для проверки.</param>
      <param name="includeDefaultOverrides">Установите значение true, чтобы переопределения по умолчанию также считались переопределениями.</param>
      <returns>
        <para>Возвращает true, если есть какие-либо переопределения.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.InstantiateAttachedAsset(UnityEngine.Object)">
      <summary>
        <para>Создайте экземпляр актива, на который ссылается префаб, и используйте его в экземпляре префаба.</para>
      </summary>
      <param name="targetObject">
      </param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.InstantiatePrefab(UnityEngine.Object)">
      <summary>
        <para>Создает экземпляр данного префаба в данной сцене.</para>
      </summary>
      <param name="target">Сборный актив для создания экземпляра.</param>
      <param name="destinationScene">Сцена для создания префаба.</param>
      <param name="assetComponentOrGameObject">
      </param>
      <returns>
        <para>GameObject в корне префаба.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.InstantiatePrefab(UnityEngine.Object,UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Создает экземпляр данного префаба в данной сцене.</para>
      </summary>
      <param name="target">Сборный актив для создания экземпляра.</param>
      <param name="destinationScene">Сцена для создания префаба.</param>
      <param name="assetComponentOrGameObject">
      </param>
      <returns>
        <para>GameObject в корне префаба.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.IsAddedComponentOverride(UnityEngine.Object)">
      <summary>
        <para>Этот компонент добавлен в экземпляр Prefab в качестве переопределения?</para>
      </summary>
      <param name="component">Компонент для проверки.</param>
      <returns>
        <para>Истинно, если компонент является добавленным компонентом.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.IsAddedGameObjectOverride(UnityEngine.GameObject)">
      <summary>
        <para>Добавляется ли этот GameObject в качестве дочернего элемента в экземпляр Prefab в качестве переопределения?</para>
      </summary>
      <param name="gameObject">GameObject для проверки.</param>
      <returns>
        <para>Истинно, если GameObject является добавленным GameObject.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.IsAnyPrefabInstanceRoot(UnityEngine.GameObject)">
      <summary>
        <para>Является ли GameObject корнем любого экземпляра Prefab?</para>
      </summary>
      <param name="gameObject">GameObject для проверки.</param>
      <returns>
        <para>Истинно, если GameObject является корневым GameObject любого экземпляра Prefab.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.IsDefaultOverride(UnityEditor.PropertyModification)">
      <summary>
        <para>Возвращает true, если данная модификация считается переопределением PrefabUtility.IsDefaultOverride|по умолчанию.</para>
      </summary>
      <param name="modification">Модификация рассматриваемого свойства.</param>
      <returns>
        <para>Истинно, если свойство является переопределением по умолчанию.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.IsDisconnectedFromPrefabAsset(UnityEngine.Object)">
      <summary>
        <para>Возвращает true, если данный объект является частью экземпляра, где объект PrefabInstance отсутствует, но данный объект имеет допустимый соответствующий объект.</para>
      </summary>
      <param name="componentOrGameObject">Объект для проверки. Должен быть GameObject или компонентом.</param>
      <returns>
        <para>Истинно, если экземпляр отключен.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.IsOutermostPrefabInstanceRoot(UnityEngine.GameObject)">
      <summary>
        <para>Является ли GameObject корнем экземпляра префаба, за исключением вложенных префабов?</para>
      </summary>
      <param name="gameObject">GameObject для проверки.</param>
      <returns>
        <para>Истинно, если GameObject является самым внешним корнем экземпляра Prefab.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.IsPartOfAnyPrefab(UnityEngine.Object)">
      <summary>
        <para>Возвращает true, если данный объект является частью любого Prefab.</para>
      </summary>
      <param name="componentOrGameObject">Объект для проверки. Должен быть компонентом или GameObject.</param>
      <returns>
        <para>Истинно, если объект является частью префаба.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.IsPartOfImmutablePrefab(UnityEngine.Object)">
      <summary>
        <para>Является ли этот объект частью префаба, который нельзя редактировать?</para>
      </summary>
      <param name="componentOrGameObject">Объект для проверки. Должен быть компонентом или GameObject.</param>
      <returns>
        <para>Истинно, если объект является частью префаба, который нельзя редактировать.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.IsPartOfModelPrefab(UnityEngine.Object)">
      <summary>
        <para>Возвращает true, если данный объект является частью актива сборной модели или экземпляра сборной модели.</para>
      </summary>
      <param name="componentOrGameObject">Объект для проверки. Должен быть компонентом или GameObject.</param>
      <returns>
        <para>Истинно, если данный объект является частью сборной модели.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.IsPartOfNonAssetPrefabInstance(UnityEngine.Object)">
      <summary>
        <para>Возвращает true, если данный объект является частью экземпляра Prefab, а не частью актива.</para>
      </summary>
      <param name="componentOrGameObject">Объект для проверки. Должен быть компонентом или GameObject.</param>
      <returns>
        <para>Истинно, если объект является частью экземпляра Prefab, который не находится внутри Prefab Asset.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.IsPartOfPrefabAsset(UnityEngine.Object)">
      <summary>
        <para>Возвращает true, если данный объект является частью Prefab Asset.</para>
      </summary>
      <param name="componentOrGameObject">Объект для проверки. Должен быть компонентом или GameObject.</param>
      <returns>
        <para>Истинно, если объект является частью Prefab Asset.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.IsPartOfPrefabInstance(UnityEngine.Object)">
      <summary>
        <para>Возвращает true, если данный объект является частью экземпляра Prefab.</para>
      </summary>
      <param name="componentOrGameObject">Объект для проверки. Должен быть компонентом или GameObject.</param>
      <returns>
        <para>Истинно, если объект является частью экземпляра Prefab.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.IsPartOfPrefabThatCanBeAppliedTo(UnityEngine.Object)">
      <summary>
        <para>Является ли этот объект частью префаба, к которому нельзя применить?</para>
      </summary>
      <param name="gameObjectOrComponent">Объект для проверки. Должен быть компонентом или GameObject.</param>
      <returns>
        <para>Истинно, если объект является частью префаба, к которому нельзя применить.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.IsPartOfRegularPrefab(UnityEngine.Object)">
      <summary>
        <para>Возвращает true, если данный объект является частью обычного экземпляра Prefab или Prefab Asset.</para>
      </summary>
      <param name="componentOrGameObject">Объект для проверки. Должен быть компонентом или GameObject.</param>
      <returns>
        <para>Истинно, если данный объект является частью обычного экземпляра Prefab или Prefab Asset.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.IsPartOfVariantPrefab(UnityEngine.Object)">
      <summary>
        <para>Возвращает true, если данный объект является частью Prefab Variant Asset или экземпляра Prefab Variant.</para>
      </summary>
      <param name="componentOrGameObject">Объект для проверки. Должен быть компонентом или GameObject.</param>
      <returns>
        <para>Истинно, если данный объект является частью Prefab Variant.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.IsPrefabAssetMissing(UnityEngine.Object)">
      <summary>
        <para>Возвращает true, если данный объект является частью экземпляра Prefab, но исходный актив отсутствует.</para>
      </summary>
      <param name="instanceComponentOrGameObject">Объект для проверки. Должен быть компонентом или GameObject.</param>
      <returns>
        <para>Истинно, если данный объект является частью экземпляра Prefab, но исходный актив отсутствует.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.LoadPrefabContents(System.String)">
      <summary>
        <para>Загружает Prefab Asset по заданному пути в изолированную сцену и возвращает корневой GameObject Prefab.</para>
      </summary>
      <param name="assetPath">Путь Prefab Asset для загрузки содержимого.</param>
      <returns>
        <para>Корень загруженного содержимого.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.LoadPrefabContentsIntoPreviewScene(System.String,UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Загружает Prefab Asset по заданному пути в заданную сцену предварительного просмотра и возвращает корневой GameObject Prefab.</para>
      </summary>
      <param name="scene">Сцена для загрузки содержимого.</param>
      <param name="prefabPath">Путь Prefab Asset для загрузки содержимого.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.MergeAllPrefabInstances(UnityEngine.Object)">
      <summary>
        <para>Принудительное повторное слияние всех экземпляров Prefab этого Prefab.</para>
      </summary>
      <param name="targetObject">
      </param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.MergePrefabInstance(UnityEngine.GameObject)">
      <summary>
        <para>Заставляет экземпляр Prefab объединиться с изменениями из Prefab Asset.</para>
      </summary>
      <param name="instanceRoot">Корень экземпляра Prefab для обновления.</param>
    </member>
    <member name="T:UnityEditor.PrefabUtility.PrefabInstanceUpdated">
      <summary>
        <para>Делегат для метода, который вызывается после обновления экземпляров Prefab в сцене.</para>
      </summary>
      <param name="instance">
      </param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.ReconnectToLastPrefab(UnityEngine.GameObject)">
      <summary>
        <para>Соединяет игровой объект с префабом, к которому он был подключен в последний раз.</para>
      </summary>
      <param name="go">
      </param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.RecordPrefabInstancePropertyModifications(UnityEngine.Object)">
      <summary>
        <para>Вызывает запись изменений, внесенных в экземпляр Prefab.</para>
      </summary>
      <param name="targetObject">Объект для обработки.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.ReplacePrefab(UnityEngine.GameObject,UnityEngine.Object)">
      <summary>
        <para>Заменяет targetPrefab копией иерархии игровых объектов go.</para>
      </summary>
      <param name="go">
      </param>
      <param name="targetPrefab">
      </param>
      <param name="replaceOptions">
      </param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.ReplacePrefab(UnityEngine.GameObject,UnityEngine.Object,UnityEditor.ReplacePrefabOptions)">
      <summary>
        <para>Заменяет targetPrefab копией иерархии игровых объектов go.</para>
      </summary>
      <param name="go">
      </param>
      <param name="targetPrefab">
      </param>
      <param name="replaceOptions">
      </param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.ResetToPrefabState(UnityEngine.Object)">
      <summary>
        <para>Сбрасывает свойства компонента или игрового объекта в родительское состояние Prefab.</para>
      </summary>
      <param name="obj">
      </param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.RevertAddedComponent(UnityEngine.Component,UnityEditor.InteractionMode)">
      <summary>
        <para>Удаляет этот добавленный компонент в экземпляре Prefab.</para>
      </summary>
      <param name="component">Добавленный компонент в экземпляр Prefab для возврата.</param>
      <param name="action">Режим взаимодействия для этого действия.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.RevertAddedGameObject(UnityEngine.GameObject,UnityEditor.InteractionMode)">
      <summary>
        <para>Удаляет этот добавленный GameObject из экземпляра Prefab.</para>
      </summary>
      <param name="action">Режим взаимодействия для этого действия.</param>
      <param name="gameObject">Добавленный GameObject в экземпляр Prefab для возврата.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.RevertObjectOverride(UnityEngine.Object,UnityEditor.InteractionMode)">
      <summary>
        <para>Восстанавливает все переопределенные свойства компонента экземпляра Prefab или GameObject.</para>
      </summary>
      <param name="action">Режим взаимодействия для этого действия.</param>
      <param name="instanceComponentOrGameObject">Объект в экземпляре Prefab для возврата.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.RevertPrefabInstance(UnityEngine.GameObject)">
      <summary>
        <para>Отменяет все переопределения экземпляра Prefab.</para>
      </summary>
      <param name="instanceRoot">Корень экземпляра Prefab.</param>
      <param name="action">Режим взаимодействия для этого действия.</param>
      <param name="go">
      </param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.RevertPrefabInstance(UnityEngine.GameObject,UnityEditor.InteractionMode)">
      <summary>
        <para>Отменяет все переопределения экземпляра Prefab.</para>
      </summary>
      <param name="instanceRoot">Корень экземпляра Prefab.</param>
      <param name="action">Режим взаимодействия для этого действия.</param>
      <param name="go">
      </param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.RevertPropertyOverride(UnityEditor.SerializedProperty,UnityEditor.InteractionMode)">
      <summary>
        <para>Отменить переопределение одного свойства экземпляра Prefab.</para>
      </summary>
      <param name="action">Режим взаимодействия для этого действия.</param>
      <param name="instanceProperty">Объект SerializedProperty, представляющий возвращаемое свойство.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.RevertRemovedComponent(UnityEngine.GameObject,UnityEngine.Component,UnityEditor.InteractionMode)">
      <summary>
        <para>Добавляет этот удаленный компонент обратно в экземпляр Prefab.</para>
      </summary>
      <param name="assetComponent">Удаленный компонент в экземпляре Prefab для восстановления.</param>
      <param name="action">Режим взаимодействия для этого действия.</param>
      <param name="instanceGameObject">GameObject в экземпляре Prefab, из которого был удален компонент.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.SaveAsPrefabAsset(UnityEngine.GameObject,System.String)">
      <summary>
        <para>Используйте эту функцию для создания Prefab Asset по указанному пути от заданного GameObject, включая любые дочерние элементы в сцене без изменения входных объектов.</para>
      </summary>
      <param name="instanceRoot">GameObject для сохранения в качестве Prefab Asset.</param>
      <param name="assetPath">Путь для сохранения префаба.</param>
      <param name="success">Результат действия сохранения, успешный или неуспешный. Используйте это вместе с журналом консоли, чтобы лучше понять процесс сохранения.</param>
      <returns>
        <para>Корневой GameObject сохраненного Prefab Asset, если он доступен.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.SaveAsPrefabAsset(UnityEngine.GameObject,System.String,System.Boolean&amp;)">
      <summary>
        <para>Используйте эту функцию для создания Prefab Asset по указанному пути от заданного GameObject, включая любые дочерние элементы в сцене без изменения входных объектов.</para>
      </summary>
      <param name="instanceRoot">GameObject для сохранения в качестве Prefab Asset.</param>
      <param name="assetPath">Путь для сохранения префаба.</param>
      <param name="success">Результат действия сохранения, успешный или неуспешный. Используйте это вместе с журналом консоли, чтобы лучше понять процесс сохранения.</param>
      <returns>
        <para>Корневой GameObject сохраненного Prefab Asset, если он доступен.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.SaveAsPrefabAssetAndConnect(UnityEngine.GameObject,System.String,UnityEditor.InteractionMode)">
      <summary>
        <para>Используйте эту функцию, чтобы создать префаб-ассет по заданному пути из данного игрового объекта, включая любые дочерние элементы в сцене, и в то же время превратить данный игровой объект в экземпляр нового префаба.</para>
      </summary>
      <param name="instanceRoot">GameObject, который нужно сохранить как Prefab и превратить в экземпляр Prefab.</param>
      <param name="assetPath">Путь для сохранения префаба.</param>
      <param name="action">Режим взаимодействия, используемый для этого действия.</param>
      <param name="success">Результат действия сохранения, успешный или неуспешный. Используйте это вместе с журналом консоли, чтобы лучше понять процесс сохранения.</param>
      <returns>
        <para>Корневой GameObject сохраненного Prefab Asset, если он доступен.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.SaveAsPrefabAssetAndConnect(UnityEngine.GameObject,System.String,UnityEditor.InteractionMode,System.Boolean&amp;)">
      <summary>
        <para>Используйте эту функцию, чтобы создать префаб-ассет по заданному пути из данного игрового объекта, включая любые дочерние элементы в сцене, и в то же время превратить данный игровой объект в экземпляр нового префаба.</para>
      </summary>
      <param name="instanceRoot">GameObject, который нужно сохранить как Prefab и превратить в экземпляр Prefab.</param>
      <param name="assetPath">Путь для сохранения префаба.</param>
      <param name="action">Режим взаимодействия, используемый для этого действия.</param>
      <param name="success">Результат действия сохранения, успешный или неуспешный. Используйте это вместе с журналом консоли, чтобы лучше понять процесс сохранения.</param>
      <returns>
        <para>Корневой GameObject сохраненного Prefab Asset, если он доступен.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.SavePrefabAsset(UnityEngine.GameObject)">
      <summary>
        <para>Используйте эту функцию, чтобы сохранить версию существующего Prefab Asset, который находится в памяти, обратно на диск.</para>
      </summary>
      <param name="asset">Любой игровой объект, который является частью Prefab Asset для сохранения.</param>
      <param name="savedSuccessfully">Результат действия сохранения, успешный или неуспешный. Используйте это вместе с журналом консоли, чтобы лучше понять процесс сохранения.</param>
      <returns>
        <para>Корневой GameObject сохраненного Prefab Asset.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.SavePrefabAsset(UnityEngine.GameObject,System.Boolean&amp;)">
      <summary>
        <para>Используйте эту функцию, чтобы сохранить версию существующего Prefab Asset, который находится в памяти, обратно на диск.</para>
      </summary>
      <param name="asset">Любой игровой объект, который является частью Prefab Asset для сохранения.</param>
      <param name="savedSuccessfully">Результат действия сохранения, успешный или неуспешный. Используйте это вместе с журналом консоли, чтобы лучше понять процесс сохранения.</param>
      <returns>
        <para>Корневой GameObject сохраненного Prefab Asset.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.SetPropertyModifications(UnityEngine.Object,UnityEditor.PropertyModification[])">
      <summary>
        <para>Назначает все изменения, примененные к экземпляру префаба по сравнению с родительским префабом.</para>
      </summary>
      <param name="targetPrefab">
      </param>
      <param name="modifications">
      </param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.UnloadPrefabContents(UnityEngine.GameObject)">
      <summary>
        <para>Освобождает содержимое из префаба, ранее загруженного с помощью LoadPrefabContents из памяти.</para>
      </summary>
      <param name="contentsRoot">Корень загруженного содержимого Prefab.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.UnpackAllInstancesOfPrefab(UnityEngine.GameObject,UnityEditor.PrefabUnpackMode,UnityEditor.InteractionMode)">
      <summary>
        <para>Распаковывает все экземпляры заданного корневого игрового объекта Prefab Asset во всех открытых сценах, чтобы все экземпляры были заменены содержимым Prefab Asset с сохранением всех значений переопределения.</para>
      </summary>
      <param name="prefabRoot">Корневой GameObject Prefab Asset, используемый для поиска всех экземпляров Prefab в открытых сценах, которые необходимо распаковать.</param>
      <param name="unpackMode">Нужно ли распаковывать самый внешний корень или распаковывать полностью.</param>
      <param name="action">Режим взаимодействия, используемый для этого действия.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.UnpackPrefabInstance(UnityEngine.GameObject,UnityEditor.PrefabUnpackMode,UnityEditor.InteractionMode)">
      <summary>
        <para>Распаковывает данный экземпляр Prefab, чтобы он был заменен содержимым Prefab Asset с сохранением всех значений переопределения.</para>
      </summary>
      <param name="instanceRoot">Корень экземпляра Prefab для распаковки.</param>
      <param name="unpackMode">Нужно ли распаковывать самый внешний корень или распаковывать полностью.</param>
      <param name="action">Режим взаимодействия, используемый для этого действия.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.UnpackPrefabInstanceAndReturnNewOutermostRoots(UnityEngine.GameObject,UnityEditor.PrefabUnpackMode)">
      <summary>
        <para>Эта функция распаковывает данный экземпляр Prefab, используя поведение, указанное в unpackMode.</para>
      </summary>
      <param name="instanceRoot">Корневой GameObject экземпляра Prefab.</param>
      <param name="unpackMode">Используемый режим распаковки.</param>
      <returns>
        <para>Массив GameObjects, представляющих корни распакованных экземпляров Prefab.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.PreferenceItem">
      <summary>
        <para>(Устарело: вместо этого используйте класс SettingsProvider.) Атрибут PreferenceItem позволяет добавлять разделы настроек в окно настроек.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PreferenceItem.#ctor(System.String)">
      <summary>
        <para>Создает раздел в окне настроек с именем name и вызывает следующую статическую функцию для графического интерфейса раздела.</para>
      </summary>
      <param name="name">
      </param>
    </member>
    <member name="T:UnityEditor.PreprocessorOverride">
      <summary>
        <para>Задает препроцессор, который Unity использует для компиляции этого шейдера.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PreprocessorOverride.ForceCachingPreprocessor">
      <summary>
        <para>Используйте препроцессор кэширующего шейдера.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PreprocessorOverride.ForcePlatformPreprocessor">
      <summary>
        <para>Используйте препроцессоры компиляторов платформы.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PreprocessorOverride.UseProjectSettings">
      <summary>
        <para>Используйте препроцессор, определенный в настройках редактора вашего проекта.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Presets.DefaultPreset">
      <summary>
        <para>Эта структура определяет пресет по умолчанию.
См. информацию об использовании Preset.GetDefaultListForType и Preset.SetDefaultListForType.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Presets.DefaultPreset.enabled">
      <summary>
        <para>Установите для этого значения значение false, чтобы отключить этот параметр DefaultPreset из списка предустановок по умолчанию, не удаляя его.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Presets.DefaultPreset.filter">
      <summary>
        <para>Фильтр поиска, который сравнивается с экземпляром объекта. DefaultPreset.m_Preset применяется к экземпляру объекта, если он соответствует фильтру поиска.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Presets.DefaultPreset.m_Filter">
      <summary>
        <para>Фильтр поиска, который сравнивается с экземпляром объекта. DefaultPreset.m_Preset применяется к экземпляру объекта, если он соответствует фильтру поиска.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Presets.DefaultPreset.m_Preset">
      <summary>
        <para>Предустановка применяется к экземпляру объекта, если он соответствует фильтру поиска, определенному в DefaultPreset.m_Filter.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Presets.DefaultPreset.preset">
      <summary>
        <para>Предустановка применяется к экземпляру объекта, если он соответствует фильтру поиска, определенному в DefaultPreset.m_Filter.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Presets.DefaultPresetSelectorReceiver">
      <summary>
        <para>Базовая реализация PresetSelectorReceiver.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Presets.DefaultPresetSelectorReceiver.OnSelectionChanged(UnityEditor.Presets.Preset)">
      <summary>
        <para>Применяет предустановку к каждой цели. Если Preset имеет значение null, этот метод изменяет значение каждой цели.</para>
      </summary>
      <param name="selection">
      </param>
    </member>
    <member name="M:UnityEditor.Presets.DefaultPresetSelectorReceiver.OnSelectionClosed(UnityEditor.Presets.Preset)">
      <summary>
        <para>Применяет текущий выбор, а затем уничтожает себя.</para>
      </summary>
      <param name="selection">
      </param>
    </member>
    <member name="T:UnityEditor.Presets.Preset">
      <summary>
        <para>Предустановка содержит значения по умолчанию для объекта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Presets.Preset.excludedProperties">
      <summary>
        <para>Список свойств, которые следует игнорировать при применении предустановки к объекту.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Presets.Preset.ApplyTo(UnityEngine.Object)">
      <summary>
        <para>Применяет этот пресет к целевому объекту.</para>
      </summary>
      <param name="target">Целевой объект, который будет обновлен сериализованными значениями Preset.</param>
      <param name="selectedPropertyPaths">Необязательный список имен свойств, которые применяются к цели.</param>
      <returns>
        <para>Возвращает true, если целевой объект был успешно обновлен пресетом, в противном случае — false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Presets.Preset.ApplyTo(UnityEngine.Object,System.String[])">
      <summary>
        <para>Применяет этот пресет к целевому объекту.</para>
      </summary>
      <param name="target">Целевой объект, который будет обновлен сериализованными значениями Preset.</param>
      <param name="selectedPropertyPaths">Необязательный список имен свойств, которые применяются к цели.</param>
      <returns>
        <para>Возвращает true, если целевой объект был успешно обновлен пресетом, в противном случае — false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Presets.Preset.CanBeAppliedTo(UnityEngine.Object)">
      <summary>
        <para>Возвращает true, если этот пресет можно применить к целевому объекту.</para>
      </summary>
      <param name="target">
      </param>
    </member>
    <member name="M:UnityEditor.Presets.Preset.#ctor(UnityEngine.Object)">
      <summary>
        <para>Создает новый пресет из заданного объекта.</para>
      </summary>
      <param name="source">Используется пресетом для определения его целевого типа и сериализованных значений.</param>
    </member>
    <member name="M:UnityEditor.Presets.Preset.DataEquals(UnityEngine.Object)">
      <summary>
        <para>Определяет, имеет ли целевой объект те же сериализованные значения, что и предустановка.</para>
      </summary>
      <param name="target">Целевой объект для сравнения с пресетом.</param>
      <returns>
        <para>Возвращает true, если целевой объект имеет те же сериализованные значения, что и пресет. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Presets.Preset.GetAllDefaultTypes">
      <summary>
        <para>Возвращает все PresetType, у которых есть хотя бы одна запись DefaultPreset в списке пресетов по умолчанию.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Presets.Preset.GetDefaultForObject(UnityEngine.Object)">
      <summary>
        <para>Возвращает текущую предустановку по умолчанию, назначенную тому же типу объекта. Возвращает null, если нет подходящего значения по умолчанию.</para>
      </summary>
      <param name="target">
      </param>
    </member>
    <member name="M:UnityEditor.Presets.Preset.GetDefaultForPreset(UnityEditor.Presets.Preset)">
      <summary>
        <para>Возвращает текущий пресет по умолчанию, назначенный тому же типу пресета. Возвращает null, если нет подходящего значения по умолчанию.</para>
      </summary>
      <param name="preset">
      </param>
    </member>
    <member name="M:UnityEditor.Presets.Preset.GetDefaultPresetsForObject(UnityEngine.Object)">
      <summary>
        <para>Получает упорядоченный список пресетов, которые устанавливают значения по умолчанию при применении к цели.</para>
      </summary>
      <param name="target">Экземпляр объекта протестирован на соответствие каждому фильтру поиска DefaultPreset.m_Filter.</param>
      <returns>
        <para>Возвращает упорядоченный список пресетов, соответствующих указанной цели.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Presets.Preset.GetDefaultPresetsForType(UnityEditor.Presets.PresetType)">
      <summary>
        <para>Получает упорядоченный список DefaultPreset на основе указанного PresetType.</para>
      </summary>
      <param name="type">Допустимый PresetType по умолчанию.</param>
      <returns>
        <para>Возвращает список DefaultPreset из PresetManager, которые соответствуют указанному PresetType.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Presets.Preset.GetPresetType">
      <summary>
        <para>Возвращает PresetType этого пресета.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Presets.Preset.GetTargetFullTypeName">
      <summary>
        <para>Возвращает удобочитаемую строку целевого полного типа этого пресета, включая пространство имен.</para>
      </summary>
      <returns>
        <para>Полное имя целевого типа предустановки.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Presets.Preset.GetTargetTypeName">
      <summary>
        <para>Возвращает удобочитаемую строку целевого типа этого пресета.</para>
      </summary>
      <returns>
        <para>Полное имя целевого типа предустановки.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Presets.Preset.IsObjectExcludedFromDefaultPresets(UnityEngine.Object)">
      <summary>
        <para>Возвращает true, если этот объект не может иметь пресет по умолчанию.</para>
      </summary>
      <param name="target">
      </param>
    </member>
    <member name="M:UnityEditor.Presets.Preset.IsObjectExcludedFromPresets(UnityEngine.Object)">
      <summary>
        <para>Возвращает true, если этот объект недоступен в системе пресетов.</para>
      </summary>
      <param name="target">
      </param>
    </member>
    <member name="M:UnityEditor.Presets.Preset.IsPresetExcludedFromDefaultPresets(UnityEditor.Presets.Preset)">
      <summary>
        <para>Возвращает true, если этот пресет не может быть установлен по умолчанию.</para>
      </summary>
      <param name="preset">
      </param>
    </member>
    <member name="M:UnityEditor.Presets.Preset.IsValid">
      <summary>
        <para>Возвращает true, если тип предустановки для этой предустановки действителен.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Presets.Preset.PropertyModifications">
      <summary>
        <para>Возвращает копию массива PropertyModification, принадлежащего этому пресету.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Presets.Preset.RemoveFromDefault(UnityEditor.Presets.Preset)">
      <summary>
        <para>Удалите тип Preset из значений по умолчанию в проекте.</para>
      </summary>
      <param name="preset">
      </param>
    </member>
    <member name="M:UnityEditor.Presets.Preset.SetAsDefault(UnityEditor.Presets.Preset)">
      <summary>
        <para>Устанавливает предустановку по умолчанию для ее целевого типа в проекте.</para>
      </summary>
      <param name="preset">Предустановленный ресурс для установки по умолчанию.</param>
      <returns>
        <para>Возвращает true, если предустановка успешно установлена ​​по умолчанию, или false в противном случае.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Presets.Preset.SetDefaultPresetsForType(UnityEditor.Presets.PresetType,UnityEditor.Presets.DefaultPreset[])">
      <summary>
        <para>Задает список предустановок по умолчанию с фильтром для определенного типа предустановки.</para>
      </summary>
      <param name="type">Допустимый PresetType по умолчанию.</param>
      <param name="presets">Упорядоченный список DefaultPreset.</param>
      <returns>
        <para>Возвращает true, если список был установлен по умолчанию. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Presets.Preset.UpdateProperties(UnityEngine.Object)">
      <summary>
        <para>Обновляет свойства этого пресета из значений данного объекта. Тип данного объекта должен соответствовать типу этого пресета.</para>
      </summary>
      <param name="source">Используется пресетом для получения новых сериализованных значений.</param>
      <returns>
        <para>Возвращает true, если предустановка была обновлена, иначе false.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Presets.PresetSelector">
      <summary>
        <para>Этот класс реализует модальное окно, которое выбирает пресет из проекта.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Presets.PresetSelector.DrawPresetButton(UnityEngine.Rect,UnityEngine.Object[])">
      <summary>
        <para>Нарисуйте кнопку Preset, которая открывает PresetSelector по умолчанию, используя массив target.</para>
      </summary>
      <param name="rectangle">Объект Rect, в котором нарисован значок PresetSelector.</param>
      <param name="targets">Список объектов, к которым применяется выбранный пресет.</param>
    </member>
    <member name="M:UnityEditor.Presets.PresetSelector.ShowSelector(UnityEngine.Object[],UnityEditor.Presets.Preset,System.Boolean)">
      <summary>
        <para>Открывает модальное окно для выбора пресета.</para>
      </summary>
      <param name="targets">Список объектов, к которым применяется выбранный пресет. DefaultPresetSelectorReceiver применяет выбор Preset.</param>
      <param name="currentSelection">Выбранный пресет при открытии окна. Установите значение «null», чтобы не выбирать.</param>
      <param name="createNewAllowed">Установите значение true, чтобы отобразить кнопку «Сохранить текущий в…». Установите значение false, чтобы скрыть эту кнопку.</param>
      <param name="target">Объект, определяющий тип выбранного ресурса Preset. Модальное окно фильтрует вид селектора на основе этого объекта.</param>
      <param name="eventReceiver">Экземпляр PresetSelectorReceiver, который PresetSelector использует для отправки событий.</param>
      <param name="presetType">Фильтрует список пресетов на основе определенного PresetType. Используйте этот параметр для установки PresetType, если цель не указана.</param>
    </member>
    <member name="M:UnityEditor.Presets.PresetSelector.ShowSelector(UnityEngine.Object,UnityEditor.Presets.Preset,System.Boolean,UnityEditor.Presets.PresetSelectorReceiver)">
      <summary>
        <para>Открывает модальное окно для выбора пресета.</para>
      </summary>
      <param name="targets">Список объектов, к которым применяется выбранный пресет. DefaultPresetSelectorReceiver применяет выбор Preset.</param>
      <param name="currentSelection">Выбранный пресет при открытии окна. Установите значение «null», чтобы не выбирать.</param>
      <param name="createNewAllowed">Установите значение true, чтобы отобразить кнопку «Сохранить текущий в…». Установите значение false, чтобы скрыть эту кнопку.</param>
      <param name="target">Объект, определяющий тип выбранного ресурса Preset. Модальное окно фильтрует вид селектора на основе этого объекта.</param>
      <param name="eventReceiver">Экземпляр PresetSelectorReceiver, который PresetSelector использует для отправки событий.</param>
      <param name="presetType">Фильтрует список пресетов на основе определенного PresetType. Используйте этот параметр для установки PresetType, если цель не указана.</param>
    </member>
    <member name="M:UnityEditor.Presets.PresetSelector.ShowSelector(UnityEditor.Presets.PresetType,UnityEditor.Presets.Preset,System.Boolean,UnityEditor.Presets.PresetSelectorReceiver)">
      <summary>
        <para>Открывает модальное окно для выбора пресета.</para>
      </summary>
      <param name="targets">Список объектов, к которым применяется выбранный пресет. DefaultPresetSelectorReceiver применяет выбор Preset.</param>
      <param name="currentSelection">Выбранный пресет при открытии окна. Установите значение «null», чтобы не выбирать.</param>
      <param name="createNewAllowed">Установите значение true, чтобы отобразить кнопку «Сохранить текущий в…». Установите значение false, чтобы скрыть эту кнопку.</param>
      <param name="target">Объект, определяющий тип выбранного ресурса Preset. Модальное окно фильтрует вид селектора на основе этого объекта.</param>
      <param name="eventReceiver">Экземпляр PresetSelectorReceiver, который PresetSelector использует для отправки событий.</param>
      <param name="presetType">Фильтрует список пресетов на основе определенного PresetType. Используйте этот параметр для установки PresetType, если цель не указана.</param>
    </member>
    <member name="T:UnityEditor.Presets.PresetSelectorReceiver">
      <summary>
        <para>Реализуйте этот класс для управления изменением выбора при выборе пресета в PresetSelector.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Presets.PresetSelectorReceiver.OnSelectionChanged(UnityEditor.Presets.Preset)">
      <summary>
        <para>Когда в модальном окне выбран новый пресет, этот метод вызывается PresetSelector.</para>
      </summary>
      <param name="selection">Этот параметр имеет значение null, если в PresetSelector выбрано значение «Нет».</param>
    </member>
    <member name="M:UnityEditor.Presets.PresetSelectorReceiver.OnSelectionClosed(UnityEditor.Presets.Preset)">
      <summary>
        <para>Этот метод вызывается PresetSelector при закрытии модального окна.</para>
      </summary>
      <param name="selection">
      </param>
    </member>
    <member name="T:UnityEditor.Presets.PresetType">
      <summary>
        <para>Сохраняет тип, к которому можно применить пресет.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Presets.PresetType.GetManagedTypeName">
      <summary>
        <para>Извлекает удобочитаемое пространство имен и имя целевого класса, независимо от того, является ли он управляемым классом C# или собственным классом C++.</para>
      </summary>
      <returns>
        <para>Возвращает полное пространство имен и тип целевого класса.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Presets.PresetType.IsValid">
      <summary>
        <para>Проверяет, соответствует ли PresetType допустимому собственному или управляемому классу.</para>
      </summary>
      <returns>
        <para>Возвращает true, если PresetType действителен. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Presets.PresetType.IsValidDefault">
      <summary>
        <para>Проверяет, можно ли использовать PresetType в системе DefaultPreset.</para>
      </summary>
      <returns>
        <para>Возвращает true, если PresetType является допустимым типом по умолчанию. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.ProfilerWindow">
      <summary>
        <para>Используйте класс ProfilerWindow для взаимодействия с модулями.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ProfilerWindow.cpuModuleIdentifier">
      <summary>
        <para>Идентификатор.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ProfilerWindow.cpuModuleName">
      <summary>
        <para>Устарело: вместо этого используйте ProfilerWindow.cpuModuleIdentifier.
Имя.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ProfilerWindow.firstAvailableFrameIndex">
      <summary>
        <para>Индекс первого кадра, доступного в окне Profiler, или -1, если нет доступных кадров.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ProfilerWindow.gpuModuleIdentifier">
      <summary>
        <para>Идентификатор.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ProfilerWindow.gpuModuleName">
      <summary>
        <para>Устарело: вместо этого используйте ProfilerWindow.gpuModuleIdentifier.
Имя.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ProfilerWindow.lastAvailableFrameIndex">
      <summary>
        <para>Индекс последнего кадра, доступного в окне Profiler, или -1, если нет доступных кадров.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ProfilerWindow.selectedFrameIndex">
      <summary>
        <para>Отсчитываемый от нуля индекс кадра, выбранного в данный момент в окне Profiler.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ProfilerWindow.selectedModuleIdentifier">
      <summary>
        <para>Идентификатор того, что в данный момент выбран в окне профилировщика, или нуль, если ни один модуль в данный момент не выбран.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ProfilerWindow.selectedModuleName">
      <summary>
        <para>Устарело: вместо этого используйте ProfilerWindow.selectedModuleIdentifier.
Имя того, что в данный момент выбрано в окне профилировщика, или значение null, если в данный момент не выбран ни один модуль.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ProfilerWindow.GetFrameTimeViewSampleSelectionController(System.String)">
      <summary>
        <para>Извлекает объект IProfilerFrameTimeSampleSelectionController, который можно использовать для управления выбором.</para>
      </summary>
      <param name="moduleIdentifier">Идентификатор модуля Profiler, контроллер выбора которого вы хотите получить. В настоящее время допустимы только ProfilerWindow.cpuModuleIdentifier и ProfilerWindow.gpuModuleIdentifier, другие параметры вызовут исключение ArgumentException.</param>
      <returns>
        <para>Объект IProfilerFrameTimeSampleSelectionController, с помощью которого можно управлять выбором указанного модуля Profiler.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ProfilerWindow.SelectAndStayOnLatestFrame">
      <summary>
        <para>Выбирает самый новый кадр, который был профилирован, и если более новые кадры профилированы или загружены в окно профилировщика, окно профилировщика будет продолжать показывать самый новый кадр из них.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.ProfilerWindow.SelectedFrameIndexChanged(System.Action`1&lt;System.Int64&gt;)">
      <summary>
        <para>Вызывает методы из своего списка вызовов при изменении индекса выбранного фрейма в окне Profiler.</para>
      </summary>
      <param name="value">Отсчитываемый от нуля индекс кадра, выбранного в данный момент в окне Profiler. Длинный.</param>
    </member>
    <member name="T:UnityEditor.Profiling.FrameDataView">
      <summary>
        <para>Базовая функциональность для доступа к данным Profiler.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.FrameDataView.frameFps">
      <summary>
        <para>Текущее количество кадров в секунду (FPS) для кадра.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.FrameDataView.frameGpuTimeMs">
      <summary>
        <para>Время кадра графического процессора в миллисекундах.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.FrameDataView.frameGpuTimeNs">
      <summary>
        <para>Время кадра графического процессора в наносекундах.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.FrameDataView.frameIndex">
      <summary>
        <para>Индекс кадра для FrameDataView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.FrameDataView.frameStartTimeMs">
      <summary>
        <para>Время начала кадра ЦП в миллисекундах.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.FrameDataView.frameStartTimeNs">
      <summary>
        <para>Время начала кадра ЦП в наносекундах.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.FrameDataView.frameTimeMs">
      <summary>
        <para>Время кадра ЦП в миллисекундах.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.FrameDataView.frameTimeNs">
      <summary>
        <para>Количество кадров ЦП в наносекундах.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.FrameDataView.invalidMarkerId">
      <summary>
        <para>Идентификатор недопустимого маркера.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.FrameDataView.invalidThreadId">
      <summary>
        <para>Эта константа определяет идентификатор потока, который не соответствует ни одному допустимому идентификатору потока.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.FrameDataView.invalidThreadIndex">
      <summary>
        <para>Эта константа определяет индекс потока, который не соответствует ни одному допустимому индексу потока.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.FrameDataView.maxDepth">
      <summary>
        <para>Максимальные уровни дочерних выборок в данных потока.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.FrameDataView.sampleCount">
      <summary>
        <para>Количество семплов в кадре для потока.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.FrameDataView.threadGroupName">
      <summary>
        <para>Имя группы, к которой принадлежит поток.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.FrameDataView.threadId">
      <summary>
        <para>Постоянный идентификатор, связанный с потоком.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.FrameDataView.threadIndex">
      <summary>
        <para>Индекс потока в текущем кадре.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.FrameDataView.threadName">
      <summary>
        <para>Имя потока.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.FrameDataView.valid">
      <summary>
        <para>Истинно после того, как данные кадра для потока обработаны и готовы к извлечению.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetAllCategories(System.Collections.Generic.List`1&lt;UnityEditor.Profiling.ProfilerCategoryInfo&gt;)">
      <summary>
        <para>Получает все доступные категории Profiler для текущего сеанса профилирования.</para>
      </summary>
      <param name="categoryInfoList">Список заполнен ProfilerCategoryInfo.</param>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetCategoryInfo(System.UInt16)">
      <summary>
        <para>Получает информацию о категории Profiler для заданного идентификатора категории.</para>
      </summary>
      <param name="id">Идентификатор категории.</param>
      <returns>
        <para>Возвращает структуру ProfilerCategoryInfo на основе предоставленного идентификатора. Если идентификатор не существует, создается исключение.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetCounterValueAsDouble(System.Int32)">
      <summary>
        <para>Получает последнее значение маркера счетчика в кадре как тип данных double'.</para>
      </summary>
      <param name="markerId">Идентификатор маркера.</param>
      <returns>
        <para>Возвращает значение счетчика как двойное.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetCounterValueAsFloat(System.Int32)">
      <summary>
        <para>Получает последнее значение маркера счетчика в кадре как тип данных с плавающей запятой'.</para>
      </summary>
      <param name="markerId">Идентификатор маркера.</param>
      <returns>
        <para>Возвращает значение счетчика в виде числа с плавающей запятой.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetCounterValueAsInt(System.Int32)">
      <summary>
        <para>Получает последнее значение маркера счетчика в кадре как тип данных int'.</para>
      </summary>
      <param name="markerId">Идентификатор маркера.</param>
      <returns>
        <para>Возвращает значение счетчика как int.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetCounterValueAsLong(System.Int32)">
      <summary>
        <para>Получает последнее значение маркера счетчика в кадре как тип данных long.</para>
      </summary>
      <param name="markerId">Идентификатор маркера.</param>
      <returns>
        <para>Возвращает значение счетчика как long.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetCounterValuePtr(System.Int32)">
      <summary>
        <para>Получает небезопасный указатель на последнее значение маркера счетчика в кадре.</para>
      </summary>
      <param name="markerId">Идентификатор маркера.</param>
      <returns>
        <para>Возвращает небезопасный указатель на значение счетчика.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetFrameMetaData(System.Guid,System.Int32)">
      <summary>
        <para>Извлекает метаданные, связанные с кадром.</para>
      </summary>
      <param name="id">Идентификатор проекта или пакета.</param>
      <param name="tag">Индекс потока данных.</param>
      <param name="index">Индекс фрагмента.</param>
      <returns>
        <para>Возвращает метаданные кадра в виде массива NativeArray.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetFrameMetaData(System.Guid,System.Int32,System.Int32)">
      <summary>
        <para>Извлекает метаданные, связанные с кадром.</para>
      </summary>
      <param name="id">Идентификатор проекта или пакета.</param>
      <param name="tag">Индекс потока данных.</param>
      <param name="index">Индекс фрагмента.</param>
      <returns>
        <para>Возвращает метаданные кадра в виде массива NativeArray.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetFrameMetaDataCount(System.Guid,System.Int32)">
      <summary>
        <para>Получает общее количество фрагментов метаданных для каждой пары идентификатора и тега в кадре.</para>
      </summary>
      <param name="id">Идентификатор проекта или пакета.</param>
      <param name="tag">Индекс потока данных.</param>
      <returns>
        <para>Возвращает количество фрагментов метаданных.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetMarkerCategoryIndex(System.Int32)">
      <summary>
        <para>Получает категорию маркера Profiler для определенного идентификатора маркера.</para>
      </summary>
      <param name="markerId">Идентификатор маркера.</param>
      <returns>
        <para>Возвращает индекс категории Profiler.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetMarkerFlags(System.Int32)">
      <summary>
        <para>Получает флаги маркера Profiler для определенного идентификатора маркера.</para>
      </summary>
      <param name="markerId">Идентификатор маркера.</param>
      <returns>
        <para>Возвращает флаги маркеров Profiler.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetMarkerId(System.String)">
      <summary>
        <para>Получить идентификатор маркера Profiler для определенного имени.</para>
      </summary>
      <param name="markerName">Имя маркера.</param>
      <returns>
        <para>Возвращает идентификатор маркера в виде целого числа. Возвращает invalidMarkerId, если в захвате нет такого маркера.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetMarkerMetadataInfo(System.Int32)">
      <summary>
        <para>Получает метаданные маркера Profiler для определенного идентификатора маркера.</para>
      </summary>
      <param name="markerId">Идентификатор маркера.</param>
      <returns>
        <para>Возвращает массив информационных структур метаданных.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetMarkerName(System.Int32)">
      <summary>
        <para>Получает имя маркера Profiler для определенного идентификатора маркера.</para>
      </summary>
      <param name="markerId">Идентификатор маркера.</param>
      <returns>
        <para>Возвращает имя маркера. Возвращает null, если идентификатор неизвестен.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetMarkers(System.Collections.Generic.List`1&lt;UnityEditor.Profiling.FrameDataView/MarkerInfo&gt;)">
      <summary>
        <para>Получает все доступные маркеры для текущего сеанса профилирования.</para>
      </summary>
      <param name="markerInfoList">Список, заполненный дескрипторами маркеров.</param>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetSessionMetaData(System.Guid,System.Int32)">
      <summary>
        <para>Извлекает метаданные сеанса, в котором произошел этот кадр, в виде массива NativeArray.</para>
      </summary>
      <param name="id">Уникальный идентификатор, связанный с данными.</param>
      <param name="tag">Индекс потока данных.</param>
      <param name="index">Индекс фрагмента.</param>
      <returns>
        <para>Возвращает метаданные сеанса в виде массива NativeArray.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetSessionMetaData(System.Guid,System.Int32,System.Int32)">
      <summary>
        <para>Извлекает метаданные сеанса, в котором произошел этот кадр, в виде массива NativeArray.</para>
      </summary>
      <param name="id">Уникальный идентификатор, связанный с данными.</param>
      <param name="tag">Индекс потока данных.</param>
      <param name="index">Индекс фрагмента.</param>
      <returns>
        <para>Возвращает метаданные сеанса в виде массива NativeArray.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetSessionMetaDataCount(System.Guid,System.Int32)">
      <summary>
        <para>Получает общее количество фрагментов метаданных для каждой пары идентификатора и тега в сеансе Profiler.</para>
      </summary>
      <param name="id">Уникальный идентификатор, связанный с данными.</param>
      <param name="tag">Индекс потока данных.</param>
      <returns>
        <para>Возвращает количество фрагментов метаданных.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.HasCounterValue(System.Int32)">
      <summary>
        <para>Возвращает true для маркера, который включает счетчик в активном фрейме.</para>
      </summary>
      <param name="markerId">Идентификатор маркера.</param>
    </member>
    <member name="T:UnityEditor.Profiling.FrameDataView.MarkerInfo">
      <summary>
        <para>Структура дескриптора маркера.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.FrameDataView.MarkerInfo.category">
      <summary>
        <para>Категория маркера.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.FrameDataView.MarkerInfo.flags">
      <summary>
        <para>Флаги маркеров.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.FrameDataView.MarkerInfo.id">
      <summary>
        <para>Идентификатор маркера.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.FrameDataView.MarkerInfo.metadataInfo">
      <summary>
        <para>Информация о метаданных.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.FrameDataView.MarkerInfo.name">
      <summary>
        <para>Имя маркера.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Profiling.FrameDataView.MarkerMetadataInfo">
      <summary>
        <para>Дескриптор метаданных маркера.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.FrameDataView.MarkerMetadataInfo.name">
      <summary>
        <para>Имя параметра метаданных.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.FrameDataView.MarkerMetadataInfo.type">
      <summary>
        <para>Тип метаданных.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.FrameDataView.MarkerMetadataInfo.unit">
      <summary>
        <para>Блок метаданных.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Profiling.FrameDataView.MethodInfo">
      <summary>
        <para>Структура дескриптора управляемого метода.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.FrameDataView.MethodInfo.methodName">
      <summary>
        <para>Полное имя метода.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.FrameDataView.MethodInfo.sourceFileLine">
      <summary>
        <para>Номер строки в исходном файле, где определен метод.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.FrameDataView.MethodInfo.sourceFileName">
      <summary>
        <para>Имя исходного файла, в котором определен метод.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.ResolveMethodInfo(System.UInt64)">
      <summary>
        <para>Возвращает имя метода и информацию о местоположении для указанного адреса метода.</para>
      </summary>
      <param name="addr">Указатель инструкции.</param>
      <returns>
        <para>Имя метода и информация о местоположении.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.HierarchyFrameDataView">
      <summary>
        <para>Предоставляет доступ к данным Profiler для определенного кадра и потока.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.HierarchyFrameDataView.columnCalls">
      <summary>
        <para>Столбец Звонки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.HierarchyFrameDataView.columnDontSort">
      <summary>
        <para>Идентификатор столбца, указывающий, отключена ли сортировка.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.HierarchyFrameDataView.columnGcMemory">
      <summary>
        <para>Столбец "Распределение GC".</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.HierarchyFrameDataView.columnName">
      <summary>
        <para>Столбец Имя образца профилировщика.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.HierarchyFrameDataView.columnObjectName">
      <summary>
        <para>Столбец Имя объекта.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.HierarchyFrameDataView.columnSelfPercent">
      <summary>
        <para>Процент времени, которое ЦП тратит на сам вызов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.HierarchyFrameDataView.columnSelfTime">
      <summary>
        <para>Количество времени, которое ЦП тратит на сам вызов. Количество времени выражается в миллисекундах.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.HierarchyFrameDataView.columnStartTime">
      <summary>
        <para>Время начала вызова в миллисекундах.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.HierarchyFrameDataView.columnTotalPercent">
      <summary>
        <para>Процент времени, которое ЦП проводит в иерархии вызовов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.HierarchyFrameDataView.columnTotalTime">
      <summary>
        <para>Количество времени, которое ЦП проводит в иерархии вызовов. Количество времени выражается в миллисекундах.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.HierarchyFrameDataView.columnWarningCount">
      <summary>
        <para>Количество образцов, находящихся внутри пути выполнения кода, неоптимального с точки зрения производительности.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.HierarchyFrameDataView.invalidSampleId">
      <summary>
        <para>Индекс недопустимого элемента.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.HierarchyFrameDataView.sortColumn">
      <summary>
        <para>Идентификатор столбца, определяющий столбец сортировки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.HierarchyFrameDataView.sortColumnAscending">
      <summary>
        <para>Является ли порядок сортировки по возрастанию, true, или по убыванию, false.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.HierarchyFrameDataView.viewMode">
      <summary>
        <para>Режим просмотра, который определяет способ агрегирования данных.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemAncestors(System.Int32,System.Collections.Generic.List`1&lt;System.Int32&gt;)">
      <summary>
        <para>Извлекает список предков элементов иерархии.</para>
      </summary>
      <param name="id">Идентификатор элемента иерархии.</param>
      <param name="outAncestors">Список, заполненный идентификаторами предков элементов в результате вызова метода.</param>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemCallstack(System.Int32,System.Collections.Generic.List`1&lt;System.UInt64&gt;)">
      <summary>
        <para>Получает стек вызовов, связанный с указанным элементом иерархии.</para>
      </summary>
      <param name="id">Идентификатор элемента иерархии.</param>
      <param name="outCallstack">Список, заполненный указателями стека вызовов в результате вызова метода.</param>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemCategoryIndex(System.Int32)">
      <summary>
        <para>Получает категорию маркера Profiler для определенного идентификатора маркера.</para>
      </summary>
      <param name="id">Идентификатор элемента иерархии.</param>
      <returns>
        <para>Возвращает индекс категории Profiler.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemChildren(System.Int32,System.Collections.Generic.List`1&lt;System.Int32&gt;)">
      <summary>
        <para>Извлекает список дочерних элементов иерархии.</para>
      </summary>
      <param name="id">Идентификатор элемента иерархии.</param>
      <param name="outChildren">Список, заполненный идентификаторами дочерних элементов в результате вызова метода.</param>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemColumnData(System.Int32,System.Int32)">
      <summary>
        <para>Возвращает строковое представление значения элемента иерархии, связанного со столбцом.</para>
      </summary>
      <param name="id">Идентификатор элемента иерархии.</param>
      <param name="column">Идентификатор столбца.</param>
      <returns>
        <para>Значение соответствующего столбца в виде строки.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemColumnDataAsDouble(System.Int32,System.Int32)">
      <summary>
        <para>Возвращает двойное представление значения элемента иерархии, связанного со столбцом.</para>
      </summary>
      <param name="id">Идентификатор элемента иерархии.</param>
      <param name="column">Идентификатор столбца.</param>
      <returns>
        <para>Значение соответствующего столбца как двойное.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemColumnDataAsFloat(System.Int32,System.Int32)">
      <summary>
        <para>Возвращает плавающее представление значения элемента иерархии, связанного со столбцом.</para>
      </summary>
      <param name="id">Идентификатор элемента иерархии.</param>
      <param name="column">Идентификатор столбца.</param>
      <returns>
        <para>Значение соответствующего столбца как float.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemColumnDataAsSingle(System.Int32,System.Int32)">
      <summary>
        <para>Возвращает плавающее представление значения элемента иерархии, связанного со столбцом.</para>
      </summary>
      <param name="id">Идентификатор элемента иерархии.</param>
      <param name="column">Идентификатор столбца.</param>
      <returns>
        <para>Значение соответствующего столбца как float.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemDepth(System.Int32)">
      <summary>
        <para>Возвращает уровень иерархии элемента.</para>
      </summary>
      <param name="id">Идентификатор элемента иерархии.</param>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemDescendantsThatHaveChildren(System.Int32,System.Collections.Generic.List`1&lt;System.Int32&gt;)">
      <summary>
        <para>Используйте для получения списка потомков элемента иерархии, у которых есть другие дочерние элементы.</para>
      </summary>
      <param name="id">Идентификатор элемента иерархии.</param>
      <param name="outChildren">Список, заполненный элементом, со всеми дочерними идентификаторами, у которых есть дочерние элементы.</param>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemInstanceID(System.Int32)">
      <summary>
        <para>Возвращает InstanceID объекта UnityEngine.Object, связанного с образцом.</para>
      </summary>
      <param name="id">Идентификатор элемента иерархии.</param>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMarkerFlags(System.Int32)">
      <summary>
        <para>Используйте для получения флагов использования маркера.</para>
      </summary>
      <param name="id">Идентификатор элемента иерархии.</param>
      <returns>
        <para>Флаги использования маркера.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMarkerID(System.Int32)">
      <summary>
        <para>Возвращает маркер Profiler, который однозначно идентифицирует имя образца.</para>
      </summary>
      <param name="id">Идентификатор элемента иерархии.</param>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMarkerIDPath(System.Int32,System.Collections.Generic.List`1&lt;System.Int32&gt;)">
      <summary>
        <para>Используйте для получения списка идентификаторов маркеров всех родительских элементов иерархии.</para>
      </summary>
      <param name="id">Идентификатор элемента иерархии.</param>
      <param name="outFullIdPath">Список, заполненный маркерными идентификаторами всех предков элемента в результате вызова метода.</param>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMergedSampleCallstack(System.Int32,System.Int32,System.Collections.Generic.List`1&lt;System.UInt64&gt;)">
      <summary>
        <para>Получает стек вызовов, связанный с указанным элементом иерархии.</para>
      </summary>
      <param name="sampleIndex">Объединенный образец индекса.</param>
      <param name="id">Идентификатор элемента иерархии.</param>
      <param name="outCallstack">Список, заполненный указателями стека вызовов в результате вызова метода.</param>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMergedSamplesColumnData(System.Int32,System.Int32,System.Collections.Generic.List`1&lt;System.String&gt;)">
      <summary>
        <para>Используйте для получения значений объединенных выборок элемента иерархии.</para>
      </summary>
      <param name="id">Идентификатор элемента иерархии.</param>
      <param name="column">Идентификатор столбца.</param>
      <param name="outStrings">Список, заполненный значениями объединенных выборок в результате вызова метода.</param>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMergedSamplesColumnDataAsDoubles(System.Int32,System.Int32,System.Collections.Generic.List`1&lt;System.Double&gt;)">
      <summary>
        <para>Извлекает объединенные выборки для определенного элемента иерархии. Объединенные выборки возвращаются в виде списка двойников через параметр outValues.</para>
      </summary>
      <param name="id">Идентификатор элемента иерархии.</param>
      <param name="column">Идентификатор столбца.</param>
      <param name="outValues">Объединенные выборки для указанного элемента иерархии, возвращенные как список двойников. При необходимости размер этого списка изменяется.</param>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMergedSamplesColumnDataAsFloats(System.Int32,System.Int32,System.Collections.Generic.List`1&lt;System.Single&gt;)">
      <summary>
        <para>Извлекает объединенные выборки для определенного элемента иерархии. Объединенные выборки возвращаются в виде списка с плавающей запятой через параметр outValues.</para>
      </summary>
      <param name="id">Идентификатор элемента иерархии.</param>
      <param name="column">Идентификатор столбца.</param>
      <param name="outValues">Объединенные выборки для указанного элемента иерархии, возвращенные в виде списка с плавающей запятой. При необходимости размер этого списка изменяется.</param>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMergedSamplesCount(System.Int32)">
      <summary>
        <para>Возвращает количество объединенных выборок, представленное элементом иерархии.</para>
      </summary>
      <param name="id">Идентификатор элемента иерархии.</param>
      <returns>
        <para>Возвращает количество объединенных выборок, представленных элементом дерева.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMergedSamplesInstanceID(System.Int32,System.Collections.Generic.List`1&lt;System.Int32&gt;)">
      <summary>
        <para>Извлекает instanceID объединенных образцов, соответствующих элементу иерархии.</para>
      </summary>
      <param name="id">Идентификатор элемента иерархии.</param>
      <param name="outInstanceIds">Список, заполненный значениями InstanceID объединенных образцов в результате вызова метода.</param>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMergedSamplesMetadata(System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Возвращает строковое представление значения метаданных элемента иерархии.</para>
      </summary>
      <param name="id">Идентификатор элемента иерархии.</param>
      <param name="sampleIndex">Объединенный образец индекса.</param>
      <param name="metadataIndex">Индекс метаданных.</param>
      <returns>
        <para>Возвращает значение метаданных в виде строки.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMergedSamplesMetadataAsFloat(System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Возвращает плавающее представление значения метаданных элемента иерархии.</para>
      </summary>
      <param name="id">Идентификатор элемента иерархии.</param>
      <param name="sampleIndex">Объединенный образец индекса.</param>
      <param name="metadataIndex">Индекс метаданных.</param>
      <returns>
        <para>Возвращает значение метаданных в виде числа с плавающей запятой.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMergedSamplesMetadataAsLong(System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Возвращает длинное представление значения метаданных элемента иерархии.</para>
      </summary>
      <param name="id">Идентификатор элемента иерархии.</param>
      <param name="sampleIndex">Объединенный образец индекса.</param>
      <param name="metadataIndex">Индекс метаданных.</param>
      <returns>
        <para>Возвращает значение метаданных как long.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMergedSamplesMetadataCount(System.Int32,System.Int32)">
      <summary>
        <para>Возвращает количество метаданных, связанных с элементом иерархии.</para>
      </summary>
      <param name="id">Идентификатор элемента иерархии.</param>
      <param name="sampleIndex">Объединенный образец индекса.</param>
      <returns>
        <para>Возвращает количество метаданных.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMetadata(System.Int32,System.Int32)">
      <summary>
        <para>Возвращает строковое представление значения метаданных элемента иерархии.</para>
      </summary>
      <param name="id">Идентификатор элемента иерархии.</param>
      <param name="index">Индекс метаданных.</param>
      <returns>
        <para>Значение метаданных в виде строки.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMetadataAsFloat(System.Int32,System.Int32)">
      <summary>
        <para>Возвращает плавающее представление значения метаданных элемента иерархии.</para>
      </summary>
      <param name="id">Идентификатор элемента иерархии.</param>
      <param name="index">Индекс метаданных.</param>
      <returns>
        <para>Значение метаданных как float.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMetadataAsLong(System.Int32,System.Int32)">
      <summary>
        <para>Возвращает длинное представление значения метаданных элемента иерархии.</para>
      </summary>
      <param name="id">Идентификатор элемента иерархии.</param>
      <param name="index">Индекс метаданных.</param>
      <returns>
        <para>Значение метаданных как long.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMetadataCount(System.Int32)">
      <summary>
        <para>Возвращает количество метаданных, связанных с элементом иерархии.</para>
      </summary>
      <param name="id">Идентификатор элемента иерархии.</param>
      <returns>
        <para>Счетчик метаданных.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemName(System.Int32)">
      <summary>
        <para>Получает образец имени, связанного с элементом.</para>
      </summary>
      <param name="id">Идентификатор элемента иерархии.</param>
      <returns>
        <para>Возвращает имя элемента. Возвращает null, если идентификатор недействителен.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemPath(System.Int32)">
      <summary>
        <para>Извлекает путь к элементу иерархии в виде строки. Каждый уровень разделяется косой чертой ('/').</para>
      </summary>
      <param name="id">Идентификатор элемента иерархии.</param>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemRawFrameDataViewIndices(System.Int32,System.Collections.Generic.List`1&lt;System.Int32&gt;)">
      <summary>
        <para>Извлекает необработанные индексы всех выборок, связанных с этим идентификатором элемента иерархии.</para>
      </summary>
      <param name="id">Идентификатор элемента иерархии.</param>
      <param name="outSampleIndices">Список, заполненный всеми индексами выборки профилировщика, представленными элементом иерархии.</param>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetRootItemID">
      <summary>
        <para>Получает идентификатор корневого элемента дерева.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.HasItemChildren(System.Int32)">
      <summary>
        <para>Проверяет, есть ли у элемента дерева дочерние элементы.</para>
      </summary>
      <param name="id">Идентификатор элемента иерархии.</param>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.ItemContainsRawFrameDataViewIndex(System.Int32,System.Int32)">
      <summary>
        <para>Проверяет, соответствует ли предоставленный индекс необработанной выборки любому из индексов необработанной выборки, связанных с этим идентификатором элемента иерархии.</para>
      </summary>
      <param name="id">Идентификатор элемента иерархии.</param>
      <param name="sampleIndex">Конкретный образец индекса профилировщика, который следует проверить, если он представлен этим элементом иерархии.</param>
      <returns>
        <para>Истина, если образец индекса представлен этим элементом иерархии, и ложь, если это не так.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.ResolveItemCallstack(System.Int32)">
      <summary>
        <para>Получает стек вызовов, связанный с указанным элементом иерархии.</para>
      </summary>
      <param name="id">Идентификатор элемента иерархии.</param>
      <returns>
        <para>Возвращает стек вызовов, связанный с элементом иерархии. Возвращает пустую строку, если стек вызовов пуст или метод не выполнен.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.ResolveItemMergedSampleCallstack(System.Int32,System.Int32)">
      <summary>
        <para>Получает стек вызовов, связанный с образцом определенного элемента.</para>
      </summary>
      <param name="id">Идентификатор элемента иерархии.</param>
      <param name="sampleIndex">Объединенный образец индекса.</param>
      <returns>
        <para>Возвращает стек вызовов, связанный с образцом определенного элемента. Возвращает пустую строку, если стек вызовов пуст или метод не выполнен.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.Sort(System.Int32,System.Boolean)">
      <summary>
        <para>Сортирует представление иерархии.</para>
      </summary>
      <param name="sortColumn">
      </param>
      <param name="sortAscending">
      </param>
    </member>
    <member name="T:UnityEditor.Profiling.HierarchyFrameDataView.ViewModes">
      <summary>
        <para>Перечисление ViewModes определяет правила агрегирования данных.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.HierarchyFrameDataView.ViewModes.Default">
      <summary>
        <para>Устанавливает режим просмотра на необработанную иерархию, которая представляет каждый образец отдельным элементом.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.HierarchyFrameDataView.ViewModes.HideEditorOnlySamples">
      <summary>
        <para>Пропускает подиерархии, представляющие пути кода только для редактора.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.HierarchyFrameDataView.ViewModes.MergeSamplesWithTheSameName">
      <summary>
        <para>Объединяет и объединяет образцы с одинаковыми именами в один элемент иерархии.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Profiling.IProfilerFrameTimeViewSampleSelectionController">
      <summary>
        <para>Этот интерфейс определяет объект IProfilerFrameTimeSampleSelectionController, который можно использовать для управления выбором.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.IProfilerFrameTimeViewSampleSelectionController.focusedThreadIndex">
      <summary>
        <para>Индекс потока, выбранного для отображения в .</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.IProfilerFrameTimeViewSampleSelectionController.sampleNameSearchFilter">
      <summary>
        <para>Это отфильтровывает образцы, отображаемые в представлении Hierarchy, чтобы включить только имена, которые включают эту строку.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.IProfilerFrameTimeViewSampleSelectionController.selection">
      <summary>
        <para>Получить текущий выбор в выборке времени кадра на основе.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Profiling.IProfilerFrameTimeViewSampleSelectionController.selectionChanged(System.Action`2&lt;UnityEditor.Profiling.IProfilerFrameTimeViewSampleSelectionController,UnityEditor.Profiling.ProfilerTimeSampleSelection&gt;)">
      <summary>
        <para>Вызывает методы в своем списке вызовов при изменении выбора в этом. Первый параметр содержит модуль Profiler, в котором произошло изменение выбора, второй параметр — новый выбор.</para>
      </summary>
      <param name="value">Первый параметр содержит модуль Profiler, в котором произошло изменение выбора, второй параметр — новый выбор.</param>
    </member>
    <member name="M:UnityEditor.Profiling.IProfilerFrameTimeViewSampleSelectionController.ClearSelection">
      <summary>
        <para>Вызовите этот метод, чтобы очистить текущий выбор в этом представлении времени кадра на основе.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.IProfilerFrameTimeViewSampleSelectionController.SetSelection(UnityEditor.Profiling.ProfilerTimeSampleSelection)">
      <summary>
        <para>Установите текущий выбор в модуле Profiler на основе выборки времени кадра, например.</para>
      </summary>
      <param name="selection">Полностью описанный выбор, созданный с помощью конструктора ProfilerTimeSampleSelection или ранее полученный с помощью ProfilerWindow.selection.</param>
      <returns>
        <para>Возвращает true, если выбор был успешно установлен, и false, если он был отклонен из-за того, что не удалось найти подходящий образец.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.ArrayEntries`1">
      <summary>
        <para>Абстрактный вспомогательный класс, предоставляющий методы для извлечения массивов элементов данных универсального типа.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.ArrayEntries_1.GetEntries(System.UInt32,System.UInt32,T[]&amp;)">
      <summary>
        <para>Извлекает подмножество записей в массиве.</para>
      </summary>
      <param name="indexStart">Index, чтобы начать индексирование записей.</param>
      <param name="numEntries">Количество элементов для извлечения.</param>
      <param name="dataOut">Массив для хранения возвращенных данных.</param>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.ArrayEntries_1.GetNumEntries">
      <summary>
        <para>Получает количество записей в исходном массиве.</para>
      </summary>
      <returns>
        <para>Количество записей.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.ConnectionEntries">
      <summary>
        <para>Класс, в котором хранятся записи данных, относящиеся к данным Connection, возвращаемым PackedMemorySnapshot.connections.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.ConnectionEntries.from">
      <summary>
        <para>Массив индексов в массиве объектов дескрипторов GC, на который ссылается свойство to.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.ConnectionEntries.to">
      <summary>
        <para>Массив объектов дескриптора сборщика мусора.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.ConnectionEntries.GetNumEntries">
      <summary>
        <para>Получает количество записей подключения.</para>
      </summary>
      <returns>
        <para>Количество записей.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.FieldDescriptionEntries">
      <summary>
        <para>Класс, содержащий данные записи описания поля, возвращаемые PackedMemorySnapshot.fieldDescriptions.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.FieldDescriptionEntries.fieldDescriptionName">
      <summary>
        <para>Массив имен полей.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.FieldDescriptionEntries.isStatic">
      <summary>
        <para>Истинно, если это поле является статическим; в противном случае ложь.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.FieldDescriptionEntries.offset">
      <summary>
        <para>Массив значений смещения от начала класса для полей, на которые ссылается свойство fieldDescriptionName.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.FieldDescriptionEntries.typeIndex">
      <summary>
        <para>TypeIndex в PackedMemorySnapshot.typeDescriptions типа, которому принадлежит это поле.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.FieldDescriptionEntries.GetNumEntries">
      <summary>
        <para>Получает количество записей описания поля.</para>
      </summary>
      <returns>
        <para>Количество записей.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.GCHandleEntries">
      <summary>
        <para>Класс, содержащий данные GCHandle. Возвращено PackedMemorySnapshot.gcHandles.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.GCHandleEntries.target">
      <summary>
        <para>Массив адресов управляемых объектов, на которые ссылается сборщик мусора.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.GCHandleEntries.GetNumEntries">
      <summary>
        <para>Получает количество записей GCHandle.</para>
      </summary>
      <returns>
        <para>Количество записей.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.ManagedMemorySectionEntries">
      <summary>
        <para>Класс, содержащий данные MemorySection, возвращаемые PackedMemorySnapshot.managedHeapSections и PackedMemorySnapshot.managedStacks.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.ManagedMemorySectionEntries.bytes">
      <summary>
        <para>Массив массивов байтов, содержащих дампы памяти.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.ManagedMemorySectionEntries.startAddress">
      <summary>
        <para>Массив адресов начального местоположения в памяти дампов памяти, на которые ссылается свойство startAddress.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.ManagedMemorySectionEntries.GetNumEntries">
      <summary>
        <para>Получает количество записей раздела управляемой памяти.</para>
      </summary>
      <returns>
        <para>Количество записей.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.NativeAllocationEntries">
      <summary>
        <para>Класс, в котором хранятся данные записи собственного распределения, возвращаемые PackedMemorySnapshot.nativeAllocations.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeAllocationEntries.address">
      <summary>
        <para>Массив, содержащий адреса собственных выделений памяти.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeAllocationEntries.allocationSiteId">
      <summary>
        <para>Идентификатор сайта размещения, используемый NativeAllocationSiteEntries.id.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeAllocationEntries.memoryRegionIndex">
      <summary>
        <para>Массив индексов, указывающих, какую область памяти, начальную область, внутреннюю область или конечную область представляет выделение памяти.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeAllocationEntries.overheadSize">
      <summary>
        <para>Массив, указывающий в байтах, какая часть памяти в возвращаемом собственном выделении не является частью вашего запроса. Служебная память используется для заголовков распределения и других метаданных, описывающих выделение.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeAllocationEntries.paddingSize">
      <summary>
        <para>Массив, указывающий в байтах количество заполнения, используемого для выравнивания возвращаемого собственного распределения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeAllocationEntries.rootReferenceId">
      <summary>
        <para>Массив идентификаторов корневых ссылок для выделения. Соответствует записям в массиве NativeRootReferenceEntries.id.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeAllocationEntries.size">
      <summary>
        <para>Массив, содержащий общий размер собственного распределения в байтах.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.NativeAllocationEntries.GetNumEntries">
      <summary>
        <para>Получает записи о распределении номеров.</para>
      </summary>
      <returns>
        <para>Количество записей.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.NativeAllocationSiteEntries">
      <summary>
        <para>Класс, содержащий собственные записи сайта размещения, возвращаемые PackedMemorySnapshot.nativeAllocationSites.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeAllocationSiteEntries.callstackSymbols">
      <summary>
        <para>Массив символов стека вызовов, соответствующих этому участку размещения, ссылающийся на NativeCallstackSymbolEntries.symbol.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeAllocationSiteEntries.id">
      <summary>
        <para>Массив, содержащий идентификаторы мест размещения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeAllocationSiteEntries.memoryLabelIndex">
      <summary>
        <para>Массив, содержащий метки памяти, прикрепленные к сайтам выделения. Ссылается по индексу в PackedMemorySnapshot.nativeMemoryLabels.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.NativeAllocationSiteEntries.GetNumEntries">
      <summary>
        <para>Получает количество записей собственного сайта размещения.</para>
      </summary>
      <returns>
        <para>Количество записей.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.NativeCallstackSymbolEntries">
      <summary>
        <para>Класс, содержащий собственные данные символа стека вызовов, возвращаемые PackedMemorySnapshot.nativeCallstackSymbols.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeCallstackSymbolEntries.readableStackTrace">
      <summary>
        <para>Массив читаемых трассировок стека символов обратного вызова.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeCallstackSymbolEntries.symbol">
      <summary>
        <para>Массив адресов символов обратного вызова, на которые ссылается свойство NativeAllocationSiteEntries.callstackSymbols.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.NativeCallstackSymbolEntries.GetNumEntries">
      <summary>
        <para>Получает количество записей символа стека вызовов.</para>
      </summary>
      <returns>
        <para>Количество записей.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.NativeMemoryLabelEntries">
      <summary>
        <para>Класс, в котором хранятся данные меток собственной памяти, возвращаемые PackedMemorySnapshot.nativeMemoryLabels.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeMemoryLabelEntries.memoryLabelName">
      <summary>
        <para>Массив, содержащий имена меток памяти.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.NativeMemoryLabelEntries.GetNumEntries">
      <summary>
        <para>Получает количество записей метки памяти.</para>
      </summary>
      <returns>
        <para>Количество записей.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.NativeMemoryRegionEntries">
      <summary>
        <para>Класс, содержащий данные области собственной памяти, возвращаемые PackedMemorySnapshot.nativeMemoryRegions.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeMemoryRegionEntries.addressBase">
      <summary>
        <para>Массив, содержащий адреса областей памяти. Для неконечных записей, содержащих дочерние области памяти, устанавливается значение 0.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeMemoryRegionEntries.addressSize">
      <summary>
        <para>Массив, содержащий накопленный размер области памяти в байтах, включая все его дочерние элементы.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeMemoryRegionEntries.firstAllocationIndex">
      <summary>
        <para>Массив, содержащий индексы в массиве PackedMemorySnapshot.nativeAllocations, определяющие первое выделение, содержащееся в области памяти.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeMemoryRegionEntries.memoryRegionName">
      <summary>
        <para>Массив, содержащий имена областей памяти.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeMemoryRegionEntries.numAllocations">
      <summary>
        <para>Массив, содержащий количество выделений, включая дочерние элементы, которые содержат области памяти.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeMemoryRegionEntries.parentIndex">
      <summary>
        <para>Родитель этой области памяти, на которую ссылается индекс в этом массиве записей. Корневая область памяти содержит родительский индекс -1.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.NativeMemoryRegionEntries.GetNumEntries">
      <summary>
        <para>Получает количество записей области памяти.</para>
      </summary>
      <returns>
        <para>Количество записей.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.NativeObjectEntries">
      <summary>
        <para>Класс, в котором хранятся собственные данные объекта, возвращаемые PackedMemorySnapshot.nativeObjects.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeObjectEntries.flags">
      <summary>
        <para>Массив содержит флаги, прикрепленные к объектам собственной памяти, на которые есть ссылки в массиве NativeObjectEntries.nativeObjectAddress.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeObjectEntries.gcHandleIndex">
      <summary>
        <para>Индекс дескриптора в массиве PackedMemorySnapshot.gcHandles.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeObjectEntries.hideFlags">
      <summary>
        <para>Флаги скрытия, прикрепленные к этому собственному объекту.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeObjectEntries.instanceId">
      <summary>
        <para>Идентификатор экземпляра этого собственного объекта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeObjectEntries.nativeObjectAddress">
      <summary>
        <para>Массив адресов памяти, указывающих на собственные объекты C++. Это соответствует полю "m_CachePtr" объекта UnityEngine.Object.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeObjectEntries.nativeTypeArrayIndex">
      <summary>
        <para>Массив индексов в массиве PackedMemorySnapshot.nativeTypes, используемый для получения описания собственного типа C++.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeObjectEntries.objectName">
      <summary>
        <para>Массив, содержащий имена собственных объектов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeObjectEntries.rootReferenceId">
      <summary>
        <para>Массив, содержащий идентификаторы корневых ссылок собственных объектов. Соответствует записям в массиве NativeRootReferenceEntries.id.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeObjectEntries.size">
      <summary>
        <para>Размер в байтах этого объекта.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.NativeObjectEntries.GetNumEntries">
      <summary>
        <para>Получает количество записей собственных объектов.</para>
      </summary>
      <returns>
        <para>Количество записей.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.NativeRootReferenceEntries">
      <summary>
        <para>Класс, в котором хранятся собственные корневые справочные данные, возвращаемые PackedMemorySnapshot.rootReferences.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeRootReferenceEntries.accumulatedSize">
      <summary>
        <para>Массив, содержащий совокупные размеры всех распределений, зарегистрированных для корневых ссылок.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeRootReferenceEntries.areaName">
      <summary>
        <para>Массив, содержащий имена областей корневых ссылок.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeRootReferenceEntries.id">
      <summary>
        <para>Массив, содержащий идентификаторы корневых ссылок.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeRootReferenceEntries.objectName">
      <summary>
        <para>Массив, содержащий имена объектов корневых ссылок.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.NativeRootReferenceEntries.GetNumEntries">
      <summary>
        <para>Получает количество записей корневой ссылки.</para>
      </summary>
      <returns>
        <para>Количество записей.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.NativeTypeEntries">
      <summary>
        <para>Класс, содержащий записи собственного типа, возвращаемые PackedMemorySnapshot.nativeTypes.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeTypeEntries.nativeBaseTypeArrayIndex">
      <summary>
        <para>Массив индексов в массиве PackedMemorySnapshot.nativeTypes, используемый для извлечения собственного описания базового класса C++.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeTypeEntries.typeName">
      <summary>
        <para>Массив имен единичного типа C++.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.NativeTypeEntries.GetNumEntries">
      <summary>
        <para>Получает количество записей собственного типа.</para>
      </summary>
      <returns>
        <para>Количество записей.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.ObjectFlags">
      <summary>
        <para>Флаги, которые можно установить для собственного объекта.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.Memory.Experimental.ObjectFlags.IsDontDestroyOnLoad">
      <summary>
        <para>Указывает, что объект помечен как DontDestroyOnLoad.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.Memory.Experimental.ObjectFlags.IsManager">
      <summary>
        <para>Указывает, что объект помечен как менеджер.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.Memory.Experimental.ObjectFlags.IsPersistent">
      <summary>
        <para>Указывает, что объект установлен как постоянный.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.ObjectFlagsExtensions">
      <summary>
        <para>Класс расширения, который содержит функции-члены для ObjectFlags.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.ObjectFlagsExtensions.IsDontDestroyOnLoad(UnityEditor.Profiling.Memory.Experimental.ObjectFlags)">
      <summary>
        <para>Истинно, если объект помечен как DontDestroyOnLoad; в противном случае ложь.</para>
      </summary>
      <param name="flags">ObjectFlags для вычисления (доступно через this).</param>
      <returns>
        <para>Возвращает значение true, если объект, связанный с этим ObjectFlags, помечен как DontDestroyOnLoad.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.ObjectFlagsExtensions.IsManager(UnityEditor.Profiling.Memory.Experimental.ObjectFlags)">
      <summary>
        <para>Истина, если объект является менеджером, иначе ложь.</para>
      </summary>
      <param name="flags">ObjectFlags для вычисления (доступно через this).</param>
      <returns>
        <para>Возвращает true, если объект, связанный с этим ObjectFlags, является менеджером.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.ObjectFlagsExtensions.IsPersistent(UnityEditor.Profiling.Memory.Experimental.ObjectFlags)">
      <summary>
        <para>Истина, если объект помечен как постоянный, в противном случае — ложь.</para>
      </summary>
      <param name="flags">ObjectFlags для работы (доступны через this).</param>
      <returns>
        <para>Возвращает true, если объект, связанный с этим ObjectFlags, помечен как Persistent.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot">
      <summary>
        <para>PackedMemorySnapshot — это компактное представление снимка памяти, отправленного игроком через соединение с профилировщиком.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.captureFlags">
      <summary>
        <para>Флаги, соответствующие полям, представленным в возвращенном снимке памяти.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.connections">
      <summary>
        <para>Connections — это массив пар from, to, которые описывают, какие вещи поддерживают какие другие вещи.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.fieldDescriptions">
      <summary>
        <para>Массив описаний полей, на который ссылаются записи описания типа по индексу массива.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.filePath">
      <summary>
        <para>Путь к файлу моментального снимка памяти.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.gcHandles">
      <summary>
        <para>Все дескрипторы сборщика мусора, используемые в моментальном снимке памяти.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.managedHeapSections">
      <summary>
        <para>Массив фактических разделов памяти управляемой кучи.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.managedStacks">
      <summary>
        <para>Массив управляемых стеков в моментальном снимке памяти.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.metadata">
      <summary>
        <para>Метаданные, собранные во время захвата моментального снимка памяти.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.nativeAllocations">
      <summary>
        <para>Массив собственных данных распределения, захваченных в C++.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.nativeAllocationSites">
      <summary>
        <para>Массив собственных данных сайта размещения, захваченных в C++.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.nativeCallstackSymbols">
      <summary>
        <para>Массив символов стека вызовов, используемый собственными данными сайта распределения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.nativeMemoryLabels">
      <summary>
        <para>Массив меток памяти, используемых собственными данными сайта размещения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.nativeMemoryRegions">
      <summary>
        <para>Массив областей собственной памяти, в которых размещаются собственные выделения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.nativeObjects">
      <summary>
        <para>Все собственные объекты C++, которые были загружены во время моментального снимка.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.nativeRootReferences">
      <summary>
        <para>Массив собственных корневых ссылок, которые представляют владение собственными данными распределения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.nativeTypes">
      <summary>
        <para>Описания всех типов единства C++, о которых знает профилированный игрок.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.recordDate">
      <summary>
        <para>Время и дата записи моментального снимка.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.typeDescriptions">
      <summary>
        <para>Массив индексов в PackedMemorySnapshot.typeDescriptions, определяющий тип, к которому принадлежит это поле.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.version">
      <summary>
        <para>Текущая версия формата снимка.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.virtualMachineInformation">
      <summary>
        <para>Информация о виртуальной машине, выполняющей управляемый код внутри проигрывателя.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.Convert(UnityEditor.MemoryProfiler.PackedMemorySnapshot,System.String)">
      <summary>
        <para>Преобразует указанный объект старого формата MemoryProfiler.PackedMemorySnapshot в новый объект формата PackedMemorySnapshot и записывает его в расположение и имя файла, указанные в пути записи.</para>
      </summary>
      <param name="snapshot">Объект моментального снимка старого формата.</param>
      <param name="writePath">Путь назначения и имя файла для файла, содержащего преобразованный снимок.</param>
      <returns>
        <para>Истинно, если преобразование прошло успешно; в противном случае ложь.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.Dispose">
      <summary>
        <para>Удаляет существующий объект PackedMemorySnapshot и закрывает средство чтения файлов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.Load(System.String)">
      <summary>
        <para>Загрузить снимок памяти из заданного пути к файлу.</para>
      </summary>
      <param name="path">Абсолютный путь к файлу для загрузки файла моментального снимка.</param>
      <returns>
        <para>Снимок памяти.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.Save(UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot,System.String)">
      <summary>
        <para>Скопируйте файл моментального снимка памяти по указанному пути к файлу.</para>
      </summary>
      <param name="snapshot">Снимок исходной памяти.</param>
      <param name="writePath">Где создать копию моментального снимка памяти.</param>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.TypeDescriptionEntries">
      <summary>
        <para>Класс, содержащий записи описания типа, возвращенные из PackedMemorySnapshot.typeDescriptions.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.TypeDescriptionEntries.assembly">
      <summary>
        <para>Имя сборки, из которой был загружен этот тип.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.TypeDescriptionEntries.baseOrElementTypeIndex">
      <summary>
        <para>Базовый тип для этого типа, на который указывает индекс в PackedMemorySnapshot.typeDescriptions.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.TypeDescriptionEntries.fieldIndices">
      <summary>
        <para>Массив, содержащий индексы, указывающие на описания всех полей этого типа, доступных из PackedMemorySnapshot.fieldDescriptions.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.TypeDescriptionEntries.flags">
      <summary>
        <para>Флаги, установленные для этого описания типа, которые определяют, является ли этот тип массивом или типом значения, и ранг массива типа.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.TypeDescriptionEntries.size">
      <summary>
        <para>Размер в байтах экземпляра этого типа. Если этот тип является типом массива, это описывает количество байтов, которое будет занимать один элемент в массиве.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.TypeDescriptionEntries.staticFieldBytes">
      <summary>
        <para>Фактическое содержимое байтов, в которых хранятся статические поля этого типа, на момент создания моментального снимка.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.TypeDescriptionEntries.typeDescriptionName">
      <summary>
        <para>Имя этого типа.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.TypeDescriptionEntries.typeIndex">
      <summary>
        <para>Индекс типа этого типа. Этот индекс является индексом в массиве PackedMemorySnapshot.typeDescriptions.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.TypeDescriptionEntries.typeInfoAddress">
      <summary>
        <para>Адрес в памяти, содержащий описание этого типа внутри виртуальной машины. Это можно использовать для сопоставления управляемых объектов в куче с их соответствующим TypeDescription, поскольку первый указатель управляемого объекта указывает на описание его типа.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.TypeDescriptionEntries.GetNumEntries">
      <summary>
        <para>Количество записей описания типа.</para>
      </summary>
      <returns>
        <para>Количество записей.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.TypeFlags">
      <summary>
        <para>Информация о кодировке перечисления для описания типа о том, является ли он типом значения или типом массива, и рангом массива, если тип является массивом. Возвращается TypeDescriptionEntries.flags.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.Memory.Experimental.TypeFlags.kArray">
      <summary>
        <para>Установите, если этот тип является массивом.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.Memory.Experimental.TypeFlags.kArrayRankMask">
      <summary>
        <para>Если TypeFlags.kArray установлен, перечисление, замаскированное этим значением, вернет ранг массива (1 для одномерного массива, 2 для двумерного массива и т. д.).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.Memory.Experimental.TypeFlags.kValueType">
      <summary>
        <para>Установите, если это значение является типом значения. Если не задано, тип является ссылочным.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.TypeFlagsExtensions">
      <summary>
        <para>Класс расширения, содержащий функции-члены для TypeFlags.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.TypeFlagsExtensions.ArrayRank(UnityEditor.Profiling.Memory.Experimental.TypeFlags)">
      <summary>
        <para>Если тип является типом массива, извлекает ранг массива флагов типа.</para>
      </summary>
      <param name="flags">TypeFlags для вычисления ранга массива (доступно через this).</param>
      <returns>
        <para>Ранг массива, закодированный в флагах типа.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.TypeFlagsExtensions.IsArray(UnityEditor.Profiling.Memory.Experimental.TypeFlags)">
      <summary>
        <para>Возвращает, описывает ли флаг тип массива.</para>
      </summary>
      <param name="flags">TypeFlags для вычисления (доступно через this).</param>
      <returns>
        <para>Возвращает true, если Type, связанный с этим TypeFlags, является массивом.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.TypeFlagsExtensions.IsValueType(UnityEditor.Profiling.Memory.Experimental.TypeFlags)">
      <summary>
        <para>Возвращает, описывает ли тип тип значения.</para>
      </summary>
      <param name="flags">TypeFlags для вычисления (доступно через this).</param>
      <returns>
        <para>Возвращает значение true, если тип, связанный с этим флагом TypeFlags, является типом значения (в отличие от ссылочного типа).</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.VirtualMachineInformation">
      <summary>
        <para>Информация о виртуальной машине, предоставившей снимок памяти.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.VirtualMachineInformation.allocationGranularity">
      <summary>
        <para>Детализация распределения в байтах, используемых распределителем виртуальной машины.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.VirtualMachineInformation.arrayBoundsOffsetInHeader">
      <summary>
        <para>Смещение в байтах внутри заголовка объекта массива, где хранятся границы массива.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.VirtualMachineInformation.arrayHeaderSize">
      <summary>
        <para>Размер в байтах заголовка объекта массива.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.VirtualMachineInformation.arraySizeOffsetInHeader">
      <summary>
        <para>Смещение в байтах внутри заголовка объекта массива, где хранится размер массива.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.VirtualMachineInformation.objectHeaderSize">
      <summary>
        <para>Размер в байтах заголовка каждого управляемого объекта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.VirtualMachineInformation.pointerSize">
      <summary>
        <para>Размер указателя в байтах.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Profiling.ProfilerCategoryInfo">
      <summary>
        <para>Структура дескриптора информации о категории.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.ProfilerCategoryInfo.color">
      <summary>
        <para>Цвет категории Profiler в виде Color32.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.ProfilerCategoryInfo.flags">
      <summary>
        <para>Флаги для отображения того, определена ли категория пользователем или встроена в Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.ProfilerCategoryInfo.id">
      <summary>
        <para>Идентификатор, используемый Unity для отслеживания категории.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.ProfilerCategoryInfo.name">
      <summary>
        <para>Имя, используемое Unity для категории.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Profiling.ProfilerEditorUtility">
      <summary>
        <para>Служебный класс для инструментов Profiler в редакторе Unity.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.ProfilerEditorUtility.SetSelection(UnityEditor.Profiling.IProfilerFrameTimeViewSampleSelectionController,System.String,System.Int64,System.String,System.String,System.UInt64)">
      <summary>
        <para>Установите текущий выбор в модуле Profiler на основе выборки времени кадра, например.</para>
      </summary>
      <param name="controller">Объект контроллера модуля Profiler, выбор которого вы хотите установить. Когда значение равно null, Unity генерирует исключение NullArgumentException.</param>
      <param name="markerNameOrMarkerNamePath">Имя семпла, который нужно выбрать, или имена всех сэмплов в стеке семплов. Разделяйте каждое имя символом , оканчивающимся на образец, который следует выбрать. Не добавляйте трейлинг. Если Unity не может найти сэмпл, соответствующий этому имени или стеку сэмплов, он не устанавливает выборку, и этот метод возвращает false. Если это значение равно null или представляет собой пустую строку, Unity генерирует исключение ArgumentException.</param>
      <param name="frameIndex">Индекс кадра на основе 0. Это значение по умолчанию равно -1, что означает, что выбор установлен в текущем отображаемом кадре. Обратите внимание, что пользовательский интерфейс окна Profiler показывает индекс кадра как n+1. Когда это значение выходит за пределы диапазона, описанного ProfilerWindow.firstAvailableFrameIndex и ProfilerWindow.lastAvailableFrameIndex, или не равно -1, Unity создает исключение ArgumentOutOfRangeException.</param>
      <param name="threadGroupName">Имя группы потоков. По умолчанию параметр представляет собой пустую строку. Null или пустая строка означают, что поток не является частью группы потоков. «Задание», «Загрузка» и «Потоки сценариев» являются примерами имен таких групп потоков.</param>
      <param name="threadName">Имя потока, например «Основной поток», «Поток рендеринга» или «Рабочий 0». Этот параметр по умолчанию имеет значение «Основной поток». Если это значение равно null или представляет собой пустую строку, Unity генерирует исключение ArgumentException.</param>
      <param name="threadId">Идентификатор потока. Когда передается значение по умолчанию FrameDataView.invalidThreadId, Unity ищет образец в первом потоке, соответствующем предоставленным threadGroupName и threadName. Укажите этот threadId, если существует несколько потоков с одинаковым именем. Используйте RawFrameDataView.threadId или HierarchyFrameDataView.threadId, чтобы получить идентификатор для определенного потока, если вам нужно, чтобы он был конкретным.</param>
      <returns>
        <para>Возвращает true, если выбор был успешно установлен, и false, если он был отклонен из-за того, что не удалось найти подходящий образец.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.ProfilerEditorUtility.SetSelection(UnityEditor.Profiling.IProfilerFrameTimeViewSampleSelectionController,System.Int64,System.String,System.String,System.String,System.String,System.UInt64)">
      <summary>
        <para>Установите текущий выбор в модуле Profiler на основе выборки времени кадра, например.</para>
      </summary>
      <param name="controller">Объект контроллера модуля Profiler, выбор которого вы хотите установить. Когда значение равно null, Unity генерирует исключение NullArgumentException.</param>
      <param name="frameIndex">Индекс кадра на основе 0. Обратите внимание, что пользовательский интерфейс окна Profiler показывает индекс кадра как n+1. Когда это значение выходит за пределы диапазона, описанного в ProfilerWindow.firstAvailableFrameIndex и ProfilerWindow.lastAvailableFrameIndex, или меньше 0, Unity генерирует исключение ArgumentOutOfRangeException.</param>
      <param name="threadGroupName">Имя группы потоков. Null или пустая строка означают, что поток не является частью группы потоков. «Задание», «Загрузка» и «Потоки сценариев» являются примерами имен таких групп потоков.</param>
      <param name="threadName">Имя потока, например «Основной поток», «Поток рендеринга» или «Рабочий 0». Если это значение равно null или представляет собой пустую строку, Unity генерирует исключение ArgumentException.</param>
      <param name="sampleName">Имя образца для выбора. Если Unity не может найти образец, соответствующий этому имени, он не устанавливает выбор, и этот метод возвращает значение false. Когда это значение равно null или пустой строке, Unity создает исключение ArgumentNullException или ArgumentException соответственно.</param>
      <param name="markerNamePath">Имена всех сэмплов в стеке семплов, разделенные символом , которые определяют базовый путь для поиска. Подобно структуре файловых папок, этот базовый путь определяет, где Unity ищет образец, соответствующий имени образца. Искомый sampleName может быть последним элементом в этом пути маркера или любым его дочерним образцом. Не добавляйте трейлинг. Если не удается найти ни одного образца, соответствующего этому пути стека сэмпла и sampleName, выбор не устанавливается, и этот метод возвращает значение false. По умолчанию это значение равно null, что означает, что в стеке сэмпла не установлено никаких требований, и выбирается первый сэмпл, соответствующий сэмплуName.</param>
      <param name="threadId">Идентификатор потока. Когда передается значение по умолчанию FrameDataView.invalidThreadId, Unity ищет образец в первом потоке, соответствующем предоставленным threadGroupName и threadName. Укажите этот threadId, если существует несколько потоков с одинаковым именем. Используйте RawFrameDataView.threadId или HierarchyFrameDataView.threadId, чтобы получить идентификатор для определенного потока, если вам нужно, чтобы он был конкретным.</param>
      <param name="sampleMarkerId">Используйте HierarchyFrameDataView или RawFrameDataView, чтобы получить идентификаторы маркеров. Если не удается найти образец, соответствующий этому пути стека образцов и sampleMarkerId, выбор не устанавливается, и этот метод возвращает значение false.</param>
      <param name="markerIdPath">Список идентификаторов маркеров Profiler для всех образцов в стеке образцов, которые определяют базовый путь для поиска. Подобно структуре файловых папок, этот базовый путь определяет, где Unity ищет образец, соответствующий sampleMarkerId. Искомый sampleMarkerId может быть последним элементом в этом пути маркера или любым его дочерним образцом. Если не удается найти образец, соответствующий этому пути стека образцов и sampleMarkerId, выбор не устанавливается, и этот метод возвращает значение false. По умолчанию это значение равно null, что означает, что в стеке сэмпла не установлено никаких требований, и выбирается первый семпл, соответствующий sampleMarkerId.</param>
      <returns>
        <para>Возвращает true, если выбор был успешно установлен, и false, если он был отклонен из-за того, что не удалось найти подходящий образец.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.ProfilerEditorUtility.SetSelection(UnityEditor.Profiling.IProfilerFrameTimeViewSampleSelectionController,System.Int64,System.String,System.String,System.Int32,System.Collections.Generic.List`1&lt;System.Int32&gt;,System.UInt64)">
      <summary>
        <para>Установите текущий выбор в модуле Profiler на основе выборки времени кадра, например.</para>
      </summary>
      <param name="controller">Объект контроллера модуля Profiler, выбор которого вы хотите установить. Когда значение равно null, Unity генерирует исключение NullArgumentException.</param>
      <param name="frameIndex">Индекс кадра на основе 0. Обратите внимание, что пользовательский интерфейс окна Profiler показывает индекс кадра как n+1. Когда это значение выходит за пределы диапазона, описанного в ProfilerWindow.firstAvailableFrameIndex и ProfilerWindow.lastAvailableFrameIndex, или меньше 0, Unity генерирует исключение ArgumentOutOfRangeException.</param>
      <param name="threadGroupName">Имя группы потоков. Null или пустая строка означают, что поток не является частью группы потоков. «Задание», «Загрузка» и «Потоки сценариев» являются примерами имен таких групп потоков.</param>
      <param name="threadName">Имя потока, например «Основной поток», «Поток рендеринга» или «Рабочий 0». Если это значение равно null или представляет собой пустую строку, Unity генерирует исключение ArgumentException.</param>
      <param name="sampleName">Имя образца для выбора. Если Unity не может найти образец, соответствующий этому имени, он не устанавливает выбор, и этот метод возвращает значение false. Когда это значение равно null или пустой строке, Unity создает исключение ArgumentNullException или ArgumentException соответственно.</param>
      <param name="markerNamePath">Имена всех сэмплов в стеке семплов, разделенные символом , которые определяют базовый путь для поиска. Подобно структуре файловых папок, этот базовый путь определяет, где Unity ищет образец, соответствующий имени образца. Искомый sampleName может быть последним элементом в этом пути маркера или любым его дочерним образцом. Не добавляйте трейлинг. Если не удается найти ни одного образца, соответствующего этому пути стека сэмпла и sampleName, выбор не устанавливается, и этот метод возвращает значение false. По умолчанию это значение равно null, что означает, что в стеке сэмпла не установлено никаких требований, и выбирается первый сэмпл, соответствующий сэмплуName.</param>
      <param name="threadId">Идентификатор потока. Когда передается значение по умолчанию FrameDataView.invalidThreadId, Unity ищет образец в первом потоке, соответствующем предоставленным threadGroupName и threadName. Укажите этот threadId, если существует несколько потоков с одинаковым именем. Используйте RawFrameDataView.threadId или HierarchyFrameDataView.threadId, чтобы получить идентификатор для определенного потока, если вам нужно, чтобы он был конкретным.</param>
      <param name="sampleMarkerId">Используйте HierarchyFrameDataView или RawFrameDataView, чтобы получить идентификаторы маркеров. Если не удается найти образец, соответствующий этому пути стека образцов и sampleMarkerId, выбор не устанавливается, и этот метод возвращает значение false.</param>
      <param name="markerIdPath">Список идентификаторов маркеров Profiler для всех образцов в стеке образцов, которые определяют базовый путь для поиска. Подобно структуре файловых папок, этот базовый путь определяет, где Unity ищет образец, соответствующий sampleMarkerId. Искомый sampleMarkerId может быть последним элементом в этом пути маркера или любым его дочерним образцом. Если не удается найти образец, соответствующий этому пути стека образцов и sampleMarkerId, выбор не устанавливается, и этот метод возвращает значение false. По умолчанию это значение равно null, что означает, что в стеке сэмпла не установлено никаких требований, и выбирается первый семпл, соответствующий sampleMarkerId.</param>
      <returns>
        <para>Возвращает true, если выбор был успешно установлен, и false, если он был отклонен из-за того, что не удалось найти подходящий образец.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.ProfilerTimeSampleSelection">
      <summary>
        <para>Объект, описывающий выборку, сделанную на основе выборки времени кадра.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.ProfilerTimeSampleSelection.frameIndex">
      <summary>
        <para>Индекс кадра на основе 0. Обратите внимание, что пользовательский интерфейс окна Profiler показывает индекс кадра как n+1.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.ProfilerTimeSampleSelection.markerNamePath">
      <summary>
        <para>Список имен всех ProfilerMarker|ProfilerMarkers, которые составляют Sample Stack этого выбора. Unity заполняет этот список объектом выбора, если он был передан в IProfilerFrameTimeSampleSelectionController.SetSelection и принят как допустимый выбор.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.ProfilerTimeSampleSelection.markerPathDepth">
      <summary>
        <para>Сокращение для _markerNamePath.Count. Когда _markerNamePath имеет значение null, это значение равно 0. </para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.ProfilerTimeSampleSelection.rawSampleIndex">
      <summary>
        <para>Необработанный индекс выборки, то есть индекс, как если бы он использовался с RawFrameDataView, а НЕ идентификатор элемента, как он использовался бы с HierarchyFrameDataView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.ProfilerTimeSampleSelection.rawSampleIndices">
      <summary>
        <para>Образец, выбранный в представлении Hierarchy, может соответствовать нескольким образцам в RawFrameDataView. Это список всех этих примеров индексов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.ProfilerTimeSampleSelection.sampleDisplayName">
      <summary>
        <para>Имя семпла, отображаемое в файле. Это может быть более короткая версия, чем последний элемент в _markerNamePath.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.ProfilerTimeSampleSelection.threadGroupName">
      <summary>
        <para>Имя группы потока, в котором находится этот образец. Если поток не является частью группы потоков, это значение равно string.empty.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.ProfilerTimeSampleSelection.threadId">
      <summary>
        <para>Идентификатор потока, в котором находится этот образец.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.ProfilerTimeSampleSelection.threadName">
      <summary>
        <para>Имя потока, в котором находится этот образец.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.ProfilerTimeSampleSelection.#ctor(System.Int64,System.String,System.String,System.UInt64,System.Int32,System.String)">
      <summary>
        <para>Создает объект выбора, который можно передать в IProfilerFrameTimeSampleSelectionController.SetSelection для изменения выбора.</para>
      </summary>
      <param name="frameIndex">Индекс фрейма, основанный на 0, в котором находится образец. Обратите внимание, что пользовательский интерфейс Profiler Window показывает индекс фрейма как n+1. Если это значение выходит за пределы диапазона, описанного в ProfilerWindow.firstAvailableFrameIndex и ProfilerWindow.lastAvailableFrameIndex, или меньше 0, Unity выдает исключение ArgumentOutOfRangeException.</param>
      <param name="threadGroupName">Имя группы потоков. Пустая строка, означающая, что поток не является частью группы потоков. «Задание», «Загрузка» и «Потоки сценариев» являются примерами имен таких групп потоков.</param>
      <param name="threadName">Имя потока, например «Основной поток», «Поток рендеринга» или «Рабочий 0». Если это значение равно null или представляет собой пустую строку, Unity выдаст исключение ArgumentException.</param>
      <param name="threadId">Идентификатор потока. Когда передается значение по умолчанию FrameDataView.invalidThreadId, Unity ищет образец в первом потоке, соответствующем предоставленным threadGroupName и threadName. Укажите этот threadId, если существует несколько потоков с одинаковым именем. Используйте RawFrameDataView.threadId или HierarchyFrameDataView.threadId, чтобы получить идентификатор для определенного потока, если вам нужно, чтобы он был конкретным.</param>
      <param name="rawSampleIndex">Необработанный индекс выборки, то есть индекс, как если бы он использовался с RawFrameDataView, а НЕ идентификатор элемента, как он будет использоваться с HierarchyFrameDataView. Используйте HierarchyFrameDataView.ViewMode.MergeSamplesWithTheSameName для получения необработанных выборочных индексов при работе с HierarchyFrameDataView.</param>
      <param name="sampleName">Название образца. Когда это значение равно null или пусто, оно будет заполнено Unity при правильном выборе путем передачи этого объекта в IProfilerFrameTimeSampleSelectionController.SetSelection.</param>
      <param name="rawSampleIndices">Список примеров индексов, используемых с RawFrameDataView, а НЕ список идентификаторов элементов, которые будут использоваться с HierarchyFrameDataView. Используйте HierarchyFrameDataView.ViewMode.MergeSamplesWithTheSameName для получения необработанных выборочных индексов при работе с HierarchyFrameDataView. Когда этот список пуст, Unity генерирует исключение ArgumentException.</param>
      <param name="selection">Существующий выбор для создания копии. Когда это значение равно null, Unity создает исключение ArgumentNullException.</param>
    </member>
    <member name="M:UnityEditor.Profiling.ProfilerTimeSampleSelection.#ctor(System.Int64,System.String,System.String,System.UInt64,System.Collections.Generic.IList`1&lt;System.Int32&gt;,System.String)">
      <summary>
        <para>Создает объект выбора, который можно передать в IProfilerFrameTimeSampleSelectionController.SetSelection для изменения выбора.</para>
      </summary>
      <param name="frameIndex">Индекс фрейма, основанный на 0, в котором находится образец. Обратите внимание, что пользовательский интерфейс Profiler Window показывает индекс фрейма как n+1. Если это значение выходит за пределы диапазона, описанного в ProfilerWindow.firstAvailableFrameIndex и ProfilerWindow.lastAvailableFrameIndex, или меньше 0, Unity выдает исключение ArgumentOutOfRangeException.</param>
      <param name="threadGroupName">Имя группы потоков. Пустая строка, означающая, что поток не является частью группы потоков. «Задание», «Загрузка» и «Потоки сценариев» являются примерами имен таких групп потоков.</param>
      <param name="threadName">Имя потока, например «Основной поток», «Поток рендеринга» или «Рабочий 0». Если это значение равно null или представляет собой пустую строку, Unity выдаст исключение ArgumentException.</param>
      <param name="threadId">Идентификатор потока. Когда передается значение по умолчанию FrameDataView.invalidThreadId, Unity ищет образец в первом потоке, соответствующем предоставленным threadGroupName и threadName. Укажите этот threadId, если существует несколько потоков с одинаковым именем. Используйте RawFrameDataView.threadId или HierarchyFrameDataView.threadId, чтобы получить идентификатор для определенного потока, если вам нужно, чтобы он был конкретным.</param>
      <param name="rawSampleIndex">Необработанный индекс выборки, то есть индекс, как если бы он использовался с RawFrameDataView, а НЕ идентификатор элемента, как он будет использоваться с HierarchyFrameDataView. Используйте HierarchyFrameDataView.ViewMode.MergeSamplesWithTheSameName для получения необработанных выборочных индексов при работе с HierarchyFrameDataView.</param>
      <param name="sampleName">Название образца. Когда это значение равно null или пусто, оно будет заполнено Unity при правильном выборе путем передачи этого объекта в IProfilerFrameTimeSampleSelectionController.SetSelection.</param>
      <param name="rawSampleIndices">Список примеров индексов, используемых с RawFrameDataView, а НЕ список идентификаторов элементов, которые будут использоваться с HierarchyFrameDataView. Используйте HierarchyFrameDataView.ViewMode.MergeSamplesWithTheSameName для получения необработанных выборочных индексов при работе с HierarchyFrameDataView. Когда этот список пуст, Unity генерирует исключение ArgumentException.</param>
      <param name="selection">Существующий выбор для создания копии. Когда это значение равно null, Unity создает исключение ArgumentNullException.</param>
    </member>
    <member name="M:UnityEditor.Profiling.ProfilerTimeSampleSelection.#ctor(UnityEditor.Profiling.ProfilerTimeSampleSelection)">
      <summary>
        <para>Создает объект выбора, который можно передать в IProfilerFrameTimeSampleSelectionController.SetSelection для изменения выбора.</para>
      </summary>
      <param name="frameIndex">Индекс фрейма, основанный на 0, в котором находится образец. Обратите внимание, что пользовательский интерфейс Profiler Window показывает индекс фрейма как n+1. Если это значение выходит за пределы диапазона, описанного в ProfilerWindow.firstAvailableFrameIndex и ProfilerWindow.lastAvailableFrameIndex, или меньше 0, Unity выдает исключение ArgumentOutOfRangeException.</param>
      <param name="threadGroupName">Имя группы потоков. Пустая строка, означающая, что поток не является частью группы потоков. «Задание», «Загрузка» и «Потоки сценариев» являются примерами имен таких групп потоков.</param>
      <param name="threadName">Имя потока, например «Основной поток», «Поток рендеринга» или «Рабочий 0». Если это значение равно null или представляет собой пустую строку, Unity выдаст исключение ArgumentException.</param>
      <param name="threadId">Идентификатор потока. Когда передается значение по умолчанию FrameDataView.invalidThreadId, Unity ищет образец в первом потоке, соответствующем предоставленным threadGroupName и threadName. Укажите этот threadId, если существует несколько потоков с одинаковым именем. Используйте RawFrameDataView.threadId или HierarchyFrameDataView.threadId, чтобы получить идентификатор для определенного потока, если вам нужно, чтобы он был конкретным.</param>
      <param name="rawSampleIndex">Необработанный индекс выборки, то есть индекс, как если бы он использовался с RawFrameDataView, а НЕ идентификатор элемента, как он будет использоваться с HierarchyFrameDataView. Используйте HierarchyFrameDataView.ViewMode.MergeSamplesWithTheSameName для получения необработанных выборочных индексов при работе с HierarchyFrameDataView.</param>
      <param name="sampleName">Название образца. Когда это значение равно null или пусто, оно будет заполнено Unity при правильном выборе путем передачи этого объекта в IProfilerFrameTimeSampleSelectionController.SetSelection.</param>
      <param name="rawSampleIndices">Список примеров индексов, используемых с RawFrameDataView, а НЕ список идентификаторов элементов, которые будут использоваться с HierarchyFrameDataView. Используйте HierarchyFrameDataView.ViewMode.MergeSamplesWithTheSameName для получения необработанных выборочных индексов при работе с HierarchyFrameDataView. Когда этот список пуст, Unity генерирует исключение ArgumentException.</param>
      <param name="selection">Существующий выбор для создания копии. Когда это значение равно null, Unity создает исключение ArgumentNullException.</param>
    </member>
    <member name="T:UnityEditor.Profiling.RawFrameDataView">
      <summary>
        <para>Предоставляет доступ к данным Profiler для определенного кадра и потока.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.RawFrameDataView.invalidSampleIndex">
      <summary>
        <para>Эта константа определяет образец индекса, который не соответствует ни одному допустимому образцу Profiler.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Profiling.RawFrameDataView.FlowEvent">
      <summary>
        <para>Эта структура описывает поток профилировщика и его связь с конкретным образцом в кадре.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.RawFrameDataView.FlowEvent.FlowEventType">
      <summary>
        <para>Используйте для определения типа события потока.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.RawFrameDataView.FlowEvent.FlowId">
      <summary>
        <para>Идентификатор потока.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.RawFrameDataView.FlowEvent.ParentSampleIndex">
      <summary>
        <para>Используется для определения индекса выборки, которому принадлежит событие потока.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetFlowEvents(System.Collections.Generic.List`1&lt;UnityEditor.Profiling.RawFrameDataView/FlowEvent&gt;)">
      <summary>
        <para>Получает все события потока для текущего кадра и потока.</para>
      </summary>
      <param name="outFlowEvents">Возвращает список всех событий потока профилировщика для текущего кадра и потока.</param>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleCallstack(System.Int32,System.Collections.Generic.List`1&lt;System.UInt64&gt;)">
      <summary>
        <para>Получает стек вызовов, связанный с указанным образцом.</para>
      </summary>
      <param name="sampleIndex">Индекс образца Profiler.</param>
      <param name="outCallstack">Список, заполненный указателями стека вызовов в результате вызова метода.</param>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleCategoryIndex(System.Int32)">
      <summary>
        <para>Получает категорию маркера Profiler для конкретного образца.</para>
      </summary>
      <param name="sampleIndex">Индекс образца Profiler.</param>
      <returns>
        <para>Возвращает индекс категории Profiler.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleChildrenCount(System.Int32)">
      <summary>
        <para>Получает количество дочерних образцов для определенного образца.</para>
      </summary>
      <param name="sampleIndex">Индекс образца Profiler.</param>
      <returns>
        <para>Возвращает количество дочерних образцов.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleChildrenCountRecursive(System.Int32)">
      <summary>
        <para>Получает количество прямых и косвенных дочерних выборок для конкретной выборки.</para>
      </summary>
      <param name="sampleIndex">Индекс образца Profiler.</param>
      <returns>
        <para>Возвращает количество прямых и косвенных дочерних выборок.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleFlags(System.Int32)">
      <summary>
        <para>Получает флаги маркеров Profiler для конкретного образца.</para>
      </summary>
      <param name="sampleIndex">Индекс образца Profiler.</param>
      <returns>
        <para>Возвращает флаги маркеров Profiler.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleFlowEvents(System.Int32,System.Collections.Generic.List`1&lt;UnityEditor.Profiling.RawFrameDataView/FlowEvent&gt;)">
      <summary>
        <para>Получает события потока, происходящие из определенного образца.</para>
      </summary>
      <param name="sampleIndex">Индекс образца Profiler.</param>
      <param name="outFlowEvents">Возвращает список событий потока профилировщика для выборки в текущем кадре и потоке.</param>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleMarkerId(System.Int32)">
      <summary>
        <para>Получает идентификатор маркера Profiler, который однозначно идентифицирует имя образца.</para>
      </summary>
      <param name="sampleIndex">Индекс образца Profiler.</param>
      <returns>
        <para>Возвращает идентификатор маркера Profiler. Возвращает invalidMarkerId для недопустимого индекса.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleMetadataAsDouble(System.Int32,System.Int32)">
      <summary>
        <para>Получает образец значения метаданных как double.</para>
      </summary>
      <param name="sampleIndex">Индекс образца Profiler.</param>
      <param name="metadataIndex">Индекс метаданных.</param>
      <returns>
        <para>Возвращает двойное представление образца значения метаданных.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleMetadataAsFloat(System.Int32,System.Int32)">
      <summary>
        <para>Получает образец значения метаданных в виде числа с плавающей запятой.</para>
      </summary>
      <param name="sampleIndex">Индекс образца Profiler.</param>
      <param name="metadataIndex">Индекс метаданных.</param>
      <returns>
        <para>Возвращает плавающее представление образца значения метаданных.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleMetadataAsInt(System.Int32,System.Int32)">
      <summary>
        <para>Получает образец значения метаданных в виде целого числа.</para>
      </summary>
      <param name="sampleIndex">Индекс образца Profiler.</param>
      <param name="metadataIndex">Индекс метаданных.</param>
      <returns>
        <para>Возвращает целочисленное представление образца значения метаданных.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleMetadataAsLong(System.Int32,System.Int32)">
      <summary>
        <para>Получает образец значения метаданных длиной.</para>
      </summary>
      <param name="sampleIndex">Индекс образца Profiler.</param>
      <param name="metadataIndex">Индекс метаданных.</param>
      <returns>
        <para>Возвращает длинное представление образца значения метаданных.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleMetadataAsString(System.Int32,System.Int32)">
      <summary>
        <para>Получает образец значения метаданных в виде строки.</para>
      </summary>
      <param name="sampleIndex">Индекс образца Profiler.</param>
      <param name="metadataIndex">Индекс метаданных.</param>
      <returns>
        <para>Возвращает строковое представление примера значения метаданных.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleMetadataCount(System.Int32)">
      <summary>
        <para>Получает количество метаданных, связанных с конкретным образцом.</para>
      </summary>
      <param name="sampleIndex">Индекс образца Profiler.</param>
      <returns>
        <para>Количество значений метаданных.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleName(System.Int32)">
      <summary>
        <para>Получает имя конкретного образца.</para>
      </summary>
      <param name="sampleIndex">Индекс образца Profiler.</param>
      <returns>
        <para>Возвращает имя образца. Возвращает значение null, если индекс выборки недействителен.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleStartTimeMs(System.Int32)">
      <summary>
        <para>Получает время начала выборки. Количество времени выражается в миллисекундах.</para>
      </summary>
      <param name="sampleIndex">Индекс образца Profiler.</param>
      <returns>
        <para>Возвращает время начала выборки в миллисекундах.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleStartTimeNs(System.Int32)">
      <summary>
        <para>Получает время начала выборки. Количество времени выражается в наносекундах.</para>
      </summary>
      <param name="sampleIndex">Индекс образца Profiler.</param>
      <returns>
        <para>Возвращает время начала выборки в наносекундах.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleTimeMs(System.Int32)">
      <summary>
        <para>Получает продолжительность выборки. Количество времени выражается в миллисекундах.</para>
      </summary>
      <param name="sampleIndex">Индекс образца Profiler.</param>
      <returns>
        <para>Возвращает продолжительность выборки в миллисекундах.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleTimeNs(System.Int32)">
      <summary>
        <para>Получает продолжительность выборки. Количество времени выражается в наносекундах.</para>
      </summary>
      <param name="sampleIndex">Индекс образца Profiler.</param>
      <returns>
        <para>Возвращает продолжительность выборки в наносекундах.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Progress">
      <summary>
        <para>Служебный класс Progress сообщает Unity о ходе выполнения асинхронных задач.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Progress.added(System.Action`1&lt;UnityEditor.Progress/Item[]&gt;)">
      <summary>
        <para>Событие, возникающее при запуске нового индикатора выполнения.</para>
      </summary>
      <param name="value">Массив новых индикаторов прогресса.</param>
    </member>
    <member name="P:UnityEditor.Progress.globalProgress">
      <summary>
        <para>Возвращает глобальный средний прогресс всех запущенных задач.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.globalRemainingTime">
      <summary>
        <para>Возвращает максимальное оставшееся время для всех запущенных индикаторов выполнения.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Progress.removed(System.Action`1&lt;UnityEditor.Progress/Item[]&gt;)">
      <summary>
        <para>Событие, возникающее при удалении индикатора выполнения.</para>
      </summary>
      <param name="value">Массив удаленных индикаторов прогресса.</param>
    </member>
    <member name="P:UnityEditor.Progress.running">
      <summary>
        <para>Возвращает true, если есть хотя бы один работающий индикатор выполнения, иначе false.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Progress.updated(System.Action`1&lt;UnityEditor.Progress/Item[]&gt;)">
      <summary>
        <para>Событие, возникающее при обновлении состояния индикатора выполнения.</para>
      </summary>
      <param name="value">Массив обновленных индикаторов выполнения.</param>
    </member>
    <member name="M:UnityEditor.Progress.Cancel(System.Int32)">
      <summary>
        <para>Отменяет текущий индикатор выполнения и вызывает обратный вызов отмены для связанной задачи.</para>
      </summary>
      <param name="id">Уникальный идентификатор индикатора выполнения.</param>
      <returns>
        <para>Истина, если связанная задача отменена, и ложь, если ее нельзя отменить.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.ClearRemainingTime(System.Int32)">
      <summary>
        <para>Сбрасывает расчет оставшегося времени индикатора выполнения.</para>
      </summary>
      <param name="id">Уникальный идентификатор индикатора выполнения.</param>
    </member>
    <member name="M:UnityEditor.Progress.EnumerateItems">
      <summary>
        <para>Возвращает перечислитель для перебора всех индикаторов выполнения.</para>
      </summary>
      <returns>
        <para>Перечисляемые индикаторы прогресса.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.Exists(System.Int32)">
      <summary>
        <para>Проверяет, существует ли индикатор выполнения с указанным идентификатором.</para>
      </summary>
      <param name="id">Уникальный идентификатор для поиска.</param>
      <returns>
        <para>Истина, если индикатор выполнения существует, и ложь в противном случае.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.Finish(System.Int32,UnityEditor.Progress/Status)">
      <summary>
        <para>Помечает индикатор выполнения как завершенный.</para>
      </summary>
      <param name="id">Уникальный идентификатор индикатора выполнения.</param>
      <param name="status">Статус связанной задачи, когда индикатор хода выполнения заканчивается. Указывает, удалось ли выполнить задачу, не удалось или она была отменена.</param>
    </member>
    <member name="M:UnityEditor.Progress.GetCount">
      <summary>
        <para>Получает количество доступных индикаторов выполнения.</para>
      </summary>
      <returns>
        <para>Количество доступных индикаторов выполнения.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetCountPerStatus">
      <summary>
        <para>Для каждого доступного статуса получает количество индикаторов выполнения с этим статусом.</para>
      </summary>
      <returns>
        <para>Массив, содержащий количество индикаторов выполнения для каждого состояния. Каждый индекс отображает один статус из перечисления Progress.Status.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetCurrentStep(System.Int32)">
      <summary>
        <para>Получает текущий шаг индикатора выполнения.</para>
      </summary>
      <param name="id">Уникальный идентификатор индикатора выполнения.</param>
      <returns>
        <para>Текущий шаг.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetDescription(System.Int32)">
      <summary>
        <para>Получает описание индикатора выполнения.</para>
      </summary>
      <param name="id">Уникальный идентификатор индикатора выполнения.</param>
      <returns>
        <para>Описание, если оно существует.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetId(System.Int32)">
      <summary>
        <para>Находит уникальный идентификатор индикатора выполнения, используя его индекс в наборе всех доступных индикаторов выполнения.</para>
      </summary>
      <param name="index">Действительный индекс для индикатора хода выполнения.</param>
      <returns>
        <para>Уникальный идентификатор индикатора выполнения или -1, если уникальный идентификатор недоступен.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetName(System.Int32)">
      <summary>
        <para>Получает имя индикатора выполнения.</para>
      </summary>
      <param name="id">Уникальный идентификатор индикатора выполнения.</param>
      <returns>
        <para>Имя соответствующего индикатора выполнения.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetOptions(System.Int32)">
      <summary>
        <para>Получает параметры, указанные вами при запуске индикатора выполнения.</para>
      </summary>
      <param name="id">Уникальный идентификатор индикатора выполнения.</param>
      <returns>
        <para>Флаги опций индикатора прогресса.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetParentId(System.Int32)">
      <summary>
        <para>Получает уникальный идентификатор родителя индикатора выполнения, если таковой имеется.</para>
      </summary>
      <param name="id">Уникальный идентификатор индикатора выполнения.</param>
      <returns>
        <para>Уникальный идентификатор родителя индикатора выполнения. Если индикатор выполнения не является дочерним элементом каких-либо других индикаторов выполнения, возвращает -1.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetPriority(System.Int32)">
      <summary>
        <para>Получает приоритет индикатора выполнения.</para>
      </summary>
      <param name="id">Уникальный идентификатор индикатора выполнения.</param>
      <returns>
        <para>Приоритет.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetProgress(System.Int32)">
      <summary>
        <para>Получает прогресс индикатора выполнения.</para>
      </summary>
      <param name="id">Уникальный идентификатор индикатора выполнения.</param>
      <returns>
        <para>Текущий прогресс.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetProgressById(System.Int32)">
      <summary>
        <para>Получает информацию об индикаторе выполнения.</para>
      </summary>
      <param name="id">Уникальный идентификатор индикатора выполнения.</param>
      <returns>
        <para>Структура данных индикатора прогресса.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetRemainingTime(System.Int32)">
      <summary>
        <para>Получает оставшееся время индикатора выполнения в секундах.</para>
      </summary>
      <param name="id">Уникальный идентификатор индикатора выполнения.</param>
      <returns>
        <para>Количество оставшихся секунд.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetRunningProgressCount">
      <summary>
        <para>Получает количество активных или запущенных индикаторов выполнения.</para>
      </summary>
      <returns>
        <para>Количество активных и работающих индикаторов выполнения.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetStartDateTime(System.Int32)">
      <summary>
        <para>Получает метку времени запуска индикатора выполнения.</para>
      </summary>
      <param name="id">Уникальный идентификатор индикатора выполнения.</param>
      <returns>
        <para>Отметка времени начала индикатора выполнения.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetStatus(System.Int32)">
      <summary>
        <para>Получает состояние индикатора выполнения.</para>
      </summary>
      <param name="id">Уникальный идентификатор индикатора выполнения.</param>
      <returns>
        <para>Текущее состояние индикатора выполнения.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetStepLabel(System.Int32)">
      <summary>
        <para>Получает метку, отображающую шаги индикатора выполнения.</para>
      </summary>
      <param name="id">Уникальный идентификатор индикатора выполнения.</param>
      <returns>
        <para>Метка шага.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetTimeDisplayMode(System.Int32)">
      <summary>
        <para>Получить режим отображения времени индикатора прогресса.</para>
      </summary>
      <param name="id">Уникальный идентификатор индикатора выполнения.</param>
      <returns>
        <para>Режим отображения времени индикатора прогресса.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetTotalSteps(System.Int32)">
      <summary>
        <para>Получает общее количество шагов от начала до конца для индикатора выполнения.</para>
      </summary>
      <param name="id">Уникальный идентификатор индикатора выполнения.</param>
      <returns>
        <para>Количество шагов.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetUpdateDateTime(System.Int32)">
      <summary>
        <para>Получает время последнего изменения или завершения индикатора выполнения.</para>
      </summary>
      <param name="id">Уникальный идентификатор индикатора выполнения.</param>
      <returns>
        <para>Отметка времени последнего обновления индикатора выполнения.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.IsCancellable(System.Int32)">
      <summary>
        <para>Указывает, можно ли отменить задачу, связанную с индикатором выполнения.</para>
      </summary>
      <param name="id">Уникальный идентификатор индикатора выполнения.</param>
      <returns>
        <para>Истина, если вы можете отменить задачу, и ложь в противном случае.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.IsPausable(System.Int32)">
      <summary>
        <para>Указывает, можно ли приостановить задачу индикатора выполнения.</para>
      </summary>
      <param name="id">Уникальный идентификатор индикатора выполнения.</param>
      <returns>
        <para>True, если вы можете приостановить задачу, иначе false.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Progress.Item">
      <summary>
        <para>Структура данных, предоставляющая информацию об индикаторе выполнения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.cancellable">
      <summary>
        <para>Возвращает true, если событие, связанное с индикатором выполнения, можно отменить.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.currentStep">
      <summary>
        <para>Возвращает текущий шаг для этого индикатора выполнения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.description">
      <summary>
        <para>Возвращает описание индикатора выполнения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.elapsedTime">
      <summary>
        <para>Возвращает количество секунд, в течение которых работал индикатор выполнения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.exists">
      <summary>
        <para>Проверяет, существует ли индикатор выполнения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.finished">
      <summary>
        <para>Возвращает true, если индикатор выполнения завершен, но не удален.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.id">
      <summary>
        <para>Возвращает уникальный идентификатор индикатора выполнения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.indefinite">
      <summary>
        <para>Возвращает true, если индикатор прогресса не определен.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.name">
      <summary>
        <para>Возвращает имя индикатора выполнения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.options">
      <summary>
        <para>Возвращает флаги параметров, используемые для запуска индикатора выполнения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.parentId">
      <summary>
        <para>Возвращает уникальный идентификатор родителя индикатора выполнения или -1, если индикатор выполнения не является дочерним элементом другого индикатора выполнения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.pausable">
      <summary>
        <para>Возвращает true, если задачу индикатора выполнения можно приостановить.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.paused">
      <summary>
        <para>Возвращает true, если индикатор выполнения приостановлен.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.priority">
      <summary>
        <para>Возвращает приоритет индикатора выполнения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.progress">
      <summary>
        <para>Возвращает значение хода выполнения задачи, связанной с индикатором выполнения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.remainingTime">
      <summary>
        <para>Возвращает оставшееся время этого индикатора выполнения до завершения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.responding">
      <summary>
        <para>Возвращает true, если прогресс продолжается, и false, если индикатор прогресса не получал никаких отчетов о ходе выполнения в течение более 5 секунд.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.running">
      <summary>
        <para>Возвращает true, если индикатор выполнения запущен и активен.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.startTime">
      <summary>
        <para>Возвращает время запуска индикатора выполнения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.status">
      <summary>
        <para>Возвращает состояние индикатора выполнения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.stepLabel">
      <summary>
        <para>Возвращает метку, отображающую шаги индикатора выполнения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.timeDisplayMode">
      <summary>
        <para>Возвращает режим отображения времени индикатора прогресса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.totalSteps">
      <summary>
        <para>Возвращает общее количество шагов от начала до конца для этого индикатора выполнения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.updateTime">
      <summary>
        <para>Возвращает время последнего обновления индикатора выполнения.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Progress.Item.Cancel">
      <summary>
        <para>Отменяет работающий индикатор выполнения.</para>
      </summary>
      <returns>
        <para>Истина, если связанная задача отменена, и ложь, если что-то препятствует ее отмене.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.Item.ClearRemainingTime">
      <summary>
        <para>Сбрасывает расчет оставшегося времени индикатора выполнения.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Progress.Item.Finish(UnityEditor.Progress/Status)">
      <summary>
        <para>Помечает индикатор выполнения как завершенный.</para>
      </summary>
      <param name="finishedStatus">Статус связанной задачи, когда индикатор хода выполнения заканчивается. Указывает, удалось ли выполнить задачу, не удалось или она была отменена.</param>
    </member>
    <member name="M:UnityEditor.Progress.Item.Pause">
      <summary>
        <para>Приостанавливает работающий индикатор выполнения.</para>
      </summary>
      <returns>
        <para>Истина, если задача приостановлена, и ложь, если ее нельзя приостановить.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.Item.RegisterCancelCallback(System.Func`1&lt;System.Boolean&gt;)">
      <summary>
        <para>Регистрирует обратный вызов, который вызывается, когда пользователь отменяет задачу, связанную с запущенным индикатором выполнения.</para>
      </summary>
      <param name="callback">Функция, вызываемая при отмене задачи, связанной с индикатором выполнения.</param>
    </member>
    <member name="M:UnityEditor.Progress.Item.RegisterPauseCallback(System.Func`2&lt;System.Boolean,System.Boolean&gt;)">
      <summary>
        <para>Регистрирует обратный вызов, который вызывается, когда пользователь приостанавливает выполнение задачи индикатора выполнения.</para>
      </summary>
      <param name="callback">Эта функция вызывается, когда задача индикатора выполнения приостановлена. Он принимает логический параметр, указывающий, нужно ли приостановить или возобновить выполнение задачи. Когда значение равно true, задача должна быть приостановлена. Когда значение равно false, задачу необходимо возобновить. Функция возвращает значение true, если она действительно выполнила запрошенное действие.</param>
    </member>
    <member name="M:UnityEditor.Progress.Item.Remove">
      <summary>
        <para>Завершает и удаляет активный индикатор выполнения.</para>
      </summary>
      <returns>
        <para>-1, если индикатор выполнения удален, в противном случае возвращает идентификатор индикатора выполнения.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.Item.Report(System.Single)">
      <summary>
        <para>Сообщает о текущем состоянии индикатора выполнения.</para>
      </summary>
      <param name="newProgress">Новое значение прогресса от 0 до 1.</param>
      <param name="newDescription">Обновленное описание индикатора прогресса. Если статус выполнения не изменился или вы не задали описание, это значение равно null. Чтобы очистить текущее описание хода выполнения, передайте пустую строку, например "".</param>
      <param name="newCurrentStep">Обновленный текущий шаг.</param>
      <param name="newTotalSteps">Обновленное общее количество шагов.</param>
    </member>
    <member name="M:UnityEditor.Progress.Item.Report(System.Single,System.String)">
      <summary>
        <para>Сообщает о текущем состоянии индикатора выполнения.</para>
      </summary>
      <param name="newProgress">Новое значение прогресса от 0 до 1.</param>
      <param name="newDescription">Обновленное описание индикатора прогресса. Если статус выполнения не изменился или вы не задали описание, это значение равно null. Чтобы очистить текущее описание хода выполнения, передайте пустую строку, например "".</param>
      <param name="newCurrentStep">Обновленный текущий шаг.</param>
      <param name="newTotalSteps">Обновленное общее количество шагов.</param>
    </member>
    <member name="M:UnityEditor.Progress.Item.Report(System.Int32,System.Int32)">
      <summary>
        <para>Сообщает о текущем состоянии индикатора выполнения.</para>
      </summary>
      <param name="newProgress">Новое значение прогресса от 0 до 1.</param>
      <param name="newDescription">Обновленное описание индикатора прогресса. Если статус выполнения не изменился или вы не задали описание, это значение равно null. Чтобы очистить текущее описание хода выполнения, передайте пустую строку, например "".</param>
      <param name="newCurrentStep">Обновленный текущий шаг.</param>
      <param name="newTotalSteps">Обновленное общее количество шагов.</param>
    </member>
    <member name="M:UnityEditor.Progress.Item.Report(System.Int32,System.Int32,System.String)">
      <summary>
        <para>Сообщает о текущем состоянии индикатора выполнения.</para>
      </summary>
      <param name="newProgress">Новое значение прогресса от 0 до 1.</param>
      <param name="newDescription">Обновленное описание индикатора прогресса. Если статус выполнения не изменился или вы не задали описание, это значение равно null. Чтобы очистить текущее описание хода выполнения, передайте пустую строку, например "".</param>
      <param name="newCurrentStep">Обновленный текущий шаг.</param>
      <param name="newTotalSteps">Обновленное общее количество шагов.</param>
    </member>
    <member name="M:UnityEditor.Progress.Item.Resume">
      <summary>
        <para>Возобновляет приостановленный индикатор выполнения.</para>
      </summary>
      <returns>
        <para>Истина, если задача возобновляется, и ложь, если она не может возобновиться.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.Item.SetDescription(System.String)">
      <summary>
        <para>Устанавливает описание индикатора прогресса. Чтобы очистить описание, передайте null.</para>
      </summary>
      <param name="newDescription">Новое описание индикатора прогресса.</param>
    </member>
    <member name="M:UnityEditor.Progress.Item.SetPriority(System.Int32)">
      <summary>
        <para>Устанавливает приоритет индикатора выполнения.</para>
      </summary>
      <param name="priority">Приоритет.</param>
    </member>
    <member name="M:UnityEditor.Progress.Item.SetPriority(UnityEditor.Progress/Priority)">
      <summary>
        <para>Устанавливает приоритет индикатора выполнения.</para>
      </summary>
      <param name="priority">Приоритет.</param>
    </member>
    <member name="M:UnityEditor.Progress.Item.SetRemainingTime(System.Int64)">
      <summary>
        <para>Устанавливает оставшееся время индикатора выполнения в секундах.</para>
      </summary>
      <param name="seconds">Оставшееся время индикатора выполнения в секундах.</param>
    </member>
    <member name="M:UnityEditor.Progress.Item.SetStepLabel(System.String)">
      <summary>
        <para>Задает метку, отображающую шаги индикатора выполнения.</para>
      </summary>
      <param name="label">Метка шагов.</param>
    </member>
    <member name="M:UnityEditor.Progress.Item.SetTimeDisplayMode(UnityEditor.Progress/TimeDisplayMode)">
      <summary>
        <para>Установите режим отображения времени индикатора прогресса.</para>
      </summary>
      <param name="mode">Режим отображения времени индикатора прогресса.</param>
    </member>
    <member name="M:UnityEditor.Progress.Item.UnregisterCancelCallback">
      <summary>
        <para>Отменяет регистрацию ранее зарегистрированного обратного вызова отмены выполнения.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Progress.Item.UnregisterPauseCallback">
      <summary>
        <para>Отменяет регистрацию ранее зарегистрированного обратного вызова приостановки выполнения.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Progress.Options">
      <summary>
        <para>Параметры, определяющие поведение индикатора выполнения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.Options.Indefinite">
      <summary>
        <para>Неопределенный индикатор выполнения показывает, что связанная задача выполняется, но не показывает, насколько она близка к завершению.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.Options.Managed">
      <summary>
        <para>Unity управляет индикаторами прогресса. Когда происходит перезагрузка домена, система отменяет задачи, поддерживающие отмену, и удаляет их индикаторы выполнения. Это значение по умолчанию для индикаторов выполнения, начиная с C#.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.Options.None">
      <summary>
        <para>Индикатор прогресса, который запускается, когда другие опции не активированы. Это значение по умолчанию.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.Options.Sticky">
      <summary>
        <para>Закрепленный индикатор выполнения отображает информацию о ходе выполнения даже после завершения задачи. Система не удаляет его автоматически. Вы должны удалить его с помощью операции удаления.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.Options.Synchronous">
      <summary>
        <para>Синхронный индикатор выполнения обновляет пользовательский интерфейс редактора, как только сообщает о ходе выполнения. Это противоположно поведению по умолчанию, которое заключается в асинхронном сообщении обо всем прогрессе.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.Options.Unmanaged">
      <summary>
        <para>Неуправляемый индикатор прогресса — это индикатор, которым Unity не управляет. Unity не отменяет неуправляемые индикаторы выполнения, когда происходит перезагрузка домена. Это поведение по умолчанию для индикаторов выполнения для внутреннего использования, запускаемых из кода C++.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Progress.Pause(System.Int32)">
      <summary>
        <para>Приостанавливает работающий индикатор выполнения и вызывает обратный вызов pause для своей задачи.</para>
      </summary>
      <param name="id">Уникальный идентификатор индикатора выполнения.</param>
      <returns>
        <para>Истина, если задача приостановлена, и ложь, если ее нельзя приостановить.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Progress.Priority">
      <summary>
        <para>Перечисление, определяющее приоритеты задач.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.Priority.High">
      <summary>
        <para>Задача с высоким приоритетом может не отвечать на запросы и отображается на общем индикаторе выполнения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.Priority.Idle">
      <summary>
        <para>Бездействующая задача с приоритетом не может оставаться без ответа и не отображается на общем индикаторе выполнения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.Priority.Low">
      <summary>
        <para>Задача с низким приоритетом не может оставаться без ответа, но отображается на глобальной панели выполнения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.Priority.Normal">
      <summary>
        <para>Задача с обычным приоритетом может не отвечать на запросы и отображается на глобальной шкале выполнения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.Priority.Unresponsive">
      <summary>
        <para>Неотвечающая задача всегда отображается как не отвечающая.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Progress.RegisterCancelCallback(System.Int32,System.Func`1&lt;System.Boolean&gt;)">
      <summary>
        <para>Регистрирует обратный вызов, который вызывается, когда пользователь отменяет задачу, связанную с запущенным индикатором выполнения.</para>
      </summary>
      <param name="id">Уникальный идентификатор индикатора выполнения.</param>
      <param name="callback">Функция, вызываемая при отмене задачи, связанной с индикатором выполнения.</param>
    </member>
    <member name="M:UnityEditor.Progress.RegisterPauseCallback(System.Int32,System.Func`2&lt;System.Boolean,System.Boolean&gt;)">
      <summary>
        <para>Регистрирует обратный вызов, который вызывается, когда пользователь приостанавливает выполнение задачи индикатора выполнения.</para>
      </summary>
      <param name="callback">Эта функция вызывается, когда задача индикатора выполнения приостановлена. Он принимает логический параметр, указывающий, нужно ли приостановить или возобновить выполнение задачи. Когда значение равно true, задача должна быть приостановлена. Когда значение равно false, задачу необходимо возобновить. Функция возвращает значение true, если она действительно выполнила запрошенное действие.</param>
      <param name="id">Уникальный идентификатор индикатора выполнения.</param>
    </member>
    <member name="M:UnityEditor.Progress.Remove(System.Int32)">
      <summary>
        <para>Завершает и удаляет активный индикатор выполнения.</para>
      </summary>
      <param name="id">Уникальный идентификатор индикатора выполнения.</param>
      <param name="forceSynchronous">Когда вы устанавливаете для этого параметра значение true, этот метод принудительно удаляет индикатор выполнения синхронно.</param>
      <returns>
        <para>-1, если индикатор прогресса удален. В противном случае возвращает идентификатор индикатора выполнения.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.Remove(System.Int32,System.Boolean)">
      <summary>
        <para>Завершает и удаляет активный индикатор выполнения.</para>
      </summary>
      <param name="id">Уникальный идентификатор индикатора выполнения.</param>
      <param name="forceSynchronous">Когда вы устанавливаете для этого параметра значение true, этот метод принудительно удаляет индикатор выполнения синхронно.</param>
      <returns>
        <para>-1, если индикатор прогресса удален. В противном случае возвращает идентификатор индикатора выполнения.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.Report(System.Int32,System.Single)">
      <summary>
        <para>Сообщает о текущем состоянии текущего индикатора выполнения.</para>
      </summary>
      <param name="id">Уникальный идентификатор индикатора выполнения.</param>
      <param name="progress">Новое значение прогресса от 0 до 1.</param>
      <param name="description">Обновленное описание индикатора прогресса. Если статус выполнения не изменился или вы не задали описание, это значение равно null. Чтобы очистить текущее описание хода выполнения, передайте пустую строку, например "".</param>
      <param name="currentStep">Обновленный текущий шаг.</param>
      <param name="totalSteps">Обновленное общее количество шагов от начала до конца.</param>
    </member>
    <member name="M:UnityEditor.Progress.Report(System.Int32,System.Single,System.String)">
      <summary>
        <para>Сообщает о текущем состоянии текущего индикатора выполнения.</para>
      </summary>
      <param name="id">Уникальный идентификатор индикатора выполнения.</param>
      <param name="progress">Новое значение прогресса от 0 до 1.</param>
      <param name="description">Обновленное описание индикатора прогресса. Если статус выполнения не изменился или вы не задали описание, это значение равно null. Чтобы очистить текущее описание хода выполнения, передайте пустую строку, например "".</param>
      <param name="currentStep">Обновленный текущий шаг.</param>
      <param name="totalSteps">Обновленное общее количество шагов от начала до конца.</param>
    </member>
    <member name="M:UnityEditor.Progress.Report(System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Сообщает о текущем состоянии текущего индикатора выполнения.</para>
      </summary>
      <param name="id">Уникальный идентификатор индикатора выполнения.</param>
      <param name="progress">Новое значение прогресса от 0 до 1.</param>
      <param name="description">Обновленное описание индикатора прогресса. Если статус выполнения не изменился или вы не задали описание, это значение равно null. Чтобы очистить текущее описание хода выполнения, передайте пустую строку, например "".</param>
      <param name="currentStep">Обновленный текущий шаг.</param>
      <param name="totalSteps">Обновленное общее количество шагов от начала до конца.</param>
    </member>
    <member name="M:UnityEditor.Progress.Report(System.Int32,System.Int32,System.Int32,System.String)">
      <summary>
        <para>Сообщает о текущем состоянии текущего индикатора выполнения.</para>
      </summary>
      <param name="id">Уникальный идентификатор индикатора выполнения.</param>
      <param name="progress">Новое значение прогресса от 0 до 1.</param>
      <param name="description">Обновленное описание индикатора прогресса. Если статус выполнения не изменился или вы не задали описание, это значение равно null. Чтобы очистить текущее описание хода выполнения, передайте пустую строку, например "".</param>
      <param name="currentStep">Обновленный текущий шаг.</param>
      <param name="totalSteps">Обновленное общее количество шагов от начала до конца.</param>
    </member>
    <member name="M:UnityEditor.Progress.Resume(System.Int32)">
      <summary>
        <para>Возобновляет приостановленный индикатор выполнения и вызывает обратный вызов приостановки для связанной задачи.</para>
      </summary>
      <param name="id">Уникальный идентификатор индикатора выполнения.</param>
      <returns>
        <para>Истина, если задача возобновляется, и ложь, если она не может возобновиться.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.SetDescription(System.Int32,System.String)">
      <summary>
        <para>Устанавливает описание индикатора прогресса. Чтобы очистить описание, передайте null.</para>
      </summary>
      <param name="id">Уникальный идентификатор индикатора выполнения.</param>
      <param name="description">Новое описание индикатора прогресса.</param>
    </member>
    <member name="M:UnityEditor.Progress.SetPriority(System.Int32,System.Int32)">
      <summary>
        <para>Устанавливает приоритет индикатора выполнения.</para>
      </summary>
      <param name="id">Уникальный идентификатор индикатора выполнения.</param>
      <param name="priority">Приоритет.</param>
    </member>
    <member name="M:UnityEditor.Progress.SetPriority(System.Int32,UnityEditor.Progress/Priority)">
      <summary>
        <para>Устанавливает приоритет индикатора выполнения.</para>
      </summary>
      <param name="id">Уникальный идентификатор индикатора выполнения.</param>
      <param name="priority">Приоритет.</param>
    </member>
    <member name="M:UnityEditor.Progress.SetRemainingTime(System.Int32,System.Int64)">
      <summary>
        <para>Устанавливает оставшееся время индикатора выполнения в секундах.</para>
      </summary>
      <param name="id">Уникальный идентификатор индикатора выполнения.</param>
      <param name="seconds">Оставшееся время индикатора выполнения в секундах.</param>
    </member>
    <member name="M:UnityEditor.Progress.SetStepLabel(System.Int32,System.String)">
      <summary>
        <para>Задает метку, отображающую шаги индикатора выполнения.</para>
      </summary>
      <param name="id">Уникальный идентификатор индикатора выполнения.</param>
      <param name="label">Метка шагов.</param>
    </member>
    <member name="M:UnityEditor.Progress.SetTimeDisplayMode(System.Int32,UnityEditor.Progress/TimeDisplayMode)">
      <summary>
        <para>Установите режим отображения времени индикатора прогресса.</para>
      </summary>
      <param name="id">Уникальный идентификатор индикатора выполнения.</param>
      <param name="displayMode">Режим отображения времени индикатора прогресса.</param>
    </member>
    <member name="M:UnityEditor.Progress.ShowDetails(System.Boolean)">
      <summary>
        <para>Открывает окно хода выполнения фоновых задач.</para>
      </summary>
      <param name="shouldReposition">Чтобы поместить окно в правый нижний угол главного окна редактора, передайте True. Чтобы восстановить последнюю позицию окна, передайте False.</param>
    </member>
    <member name="M:UnityEditor.Progress.Start(System.String,System.String,UnityEditor.Progress/Options,System.Int32)">
      <summary>
        <para>Этот метод запускает новый индикатор выполнения.</para>
      </summary>
      <param name="name">Название индикатора прогресса. Вы можете отобразить имя в качестве заголовка в окне прогресса. Используйте / (косая черта) в качестве разделителя, чтобы сгруппировать дочерние индикаторы прогресса вместе.</param>
      <param name="description">Начальное описание индикатора прогресса. Вы можете изменить его с помощью Report или SetDescription.</param>
      <param name="parentId">Уникальный идентификатор родительского индикатора выполнения, если он есть. Если индикатор прогресса не имеет родителя, передайте -1.</param>
      <param name="options">Начальные параметры индикатора хода выполнения.</param>
      <returns>
        <para>Недавно созданный идентификатор прогресса. Этот идентификатор используется всеми другими API для обновления статуса выполнения.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Progress.Status">
      <summary>
        <para>Указывает состояние задачи, связанной с индикатором выполнения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.Status.Canceled">
      <summary>
        <para>Указывает, что задача была отменена.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.Status.Failed">
      <summary>
        <para>Указывает, что задача не удалась.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.Status.Paused">
      <summary>
        <para>Указывает, что задача приостановлена.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.Status.Running">
      <summary>
        <para>Указывает, что задача все еще выполняется.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.Status.Succeeded">
      <summary>
        <para>Указывает, что задача выполнена успешно.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Progress.TimeDisplayMode">
      <summary>
        <para>Указывает, какую информацию о времени отображает индикатор выполнения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.TimeDisplayMode.NoTimeShown">
      <summary>
        <para>Индикатор выполнения не отображает информацию о времени.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.TimeDisplayMode.ShowRemainingTime">
      <summary>
        <para>Индикатор выполнения показывает оставшееся время.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.TimeDisplayMode.ShowRunningTime">
      <summary>
        <para>Индикатор выполнения отображает время работы.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Progress.UnregisterCancelCallback(System.Int32)">
      <summary>
        <para>Отменяет регистрацию ранее зарегистрированного обратного вызова отмены выполнения.</para>
      </summary>
      <param name="id">Уникальный идентификатор индикатора выполнения.</param>
    </member>
    <member name="M:UnityEditor.Progress.UnregisterPauseCallback(System.Int32)">
      <summary>
        <para>Отменяет регистрацию ранее зарегистрированного обратного вызова приостановки выполнения.</para>
      </summary>
      <param name="id">Уникальный идентификатор индикатора выполнения.</param>
    </member>
    <member name="M:UnityEditor.ProjectWindowCallback.EndNameEditAction.Action(System.Int32,System.String,System.String)">
      <summary>
        <para>Unity вызывает эту функцию, когда пользователь принимает отредактированное имя либо нажатием клавиши Enter, либо потерей фокуса ввода с клавиатуры.</para>
      </summary>
      <param name="instanceId">Идентификатор экземпляра редактируемого объекта.</param>
      <param name="pathName">Путь к ресурсу.</param>
      <param name="resourceFile">Строковый аргумент файла ресурсов, передаваемый в ProjectWindowUtil.StartNameEditingIfProjectWindowExists.</param>
    </member>
    <member name="M:UnityEditor.ProjectWindowCallback.EndNameEditAction.Cancelled(System.Int32,System.String,System.String)">
      <summary>
        <para>Unity вызывает эту функцию, когда пользователь нажимает клавишу Escape, чтобы отменить редактирование имени.</para>
      </summary>
      <param name="instanceId">Идентификатор экземпляра актива, который пользователь пытался изменить.</param>
      <param name="pathName">Путь к ресурсу.</param>
      <param name="resourceFile">Строковый аргумент файла ресурсов, передаваемый в ProjectWindowUtil.StartNameEditingIfProjectWindowExists.</param>
    </member>
    <member name="T:UnityEditor.PropertyDrawer">
      <summary>
        <para>Базовый класс, из которого создаются ящики пользовательских свойств. Используйте это для создания настраиваемых ящиков для ваших собственных классов Serializable или для переменных сценария с пользовательскими атрибутами PropertyAttributes.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PropertyDrawer.attribute">
      <summary>
        <para>PropertyAttribute для свойства. Не применимо для ящиков нестандартного класса. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PropertyDrawer.fieldInfo">
      <summary>
        <para>Отражение FieldInfo для члена, которое представляет это свойство. (Только чтение)</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PropertyDrawer.CanCacheInspectorGUI(UnityEditor.SerializedProperty)">
      <summary>
        <para>Переопределите этот метод, чтобы определить, можно ли кэшировать графический интерфейс инспектора для вашего ресурса.</para>
      </summary>
      <param name="property">SerializedProperty, для которого создается настраиваемый графический интерфейс.</param>
      <returns>
        <para>Можно ли кэшировать пользовательский интерфейс ящика.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PropertyDrawer.CreatePropertyGUI(UnityEditor.SerializedProperty)">
      <summary>
        <para>Переопределите этот метод, чтобы создать собственный графический интерфейс на основе UIElement для свойства.</para>
      </summary>
      <param name="property">SerializedProperty, для которого создается настраиваемый графический интерфейс.</param>
      <returns>
        <para>Элемент, содержащий пользовательский графический интерфейс.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PropertyDrawer.GetPropertyHeight(UnityEditor.SerializedProperty,UnityEngine.GUIContent)">
      <summary>
        <para>Переопределите этот метод, чтобы указать высоту графического интерфейса для этого поля в пикселях.</para>
      </summary>
      <param name="property">SerializedProperty, для которого создается настраиваемый графический интерфейс.</param>
      <param name="label">Метка этого свойства.</param>
      <returns>
        <para>Высота в пикселях.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PropertyDrawer.OnGUI(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent)">
      <summary>
        <para>Переопределите этот метод, чтобы создать собственный графический интерфейс на основе IMGUI для свойства.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в графическом интерфейсе свойства.</param>
      <param name="property">SerializedProperty, для которого создается настраиваемый графический интерфейс.</param>
      <param name="label">Метка этого свойства.</param>
    </member>
    <member name="T:UnityEditor.PropertyModification">
      <summary>
        <para>Определяет одно измененное свойство.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PropertyModification.objectReference">
      <summary>
        <para>Применяемое значение, если оно является ссылкой на объект (которая не может быть представлена ​​в виде строки).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PropertyModification.propertyPath">
      <summary>
        <para>Путь к изменяемому свойству (соответствует SerializedProperty.propertyPath).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PropertyModification.target">
      <summary>
        <para>Объект, который будет изменен.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PropertyModification.value">
      <summary>
        <para>Применяемое значение.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ProvisioningProfileType">
      <summary>
        <para>Тип профиля обеспечения iOS, если используется подписывание вручную.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ProvisioningProfileType.Automatic">
      <summary>
        <para>Тип профиля обеспечения будет определен автоматически при построении проекта Xcode.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ProvisioningProfileType.Development">
      <summary>
        <para>Профили обеспечения разработки используются для установки приложений для разработки на тестовые устройства.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ProvisioningProfileType.Distribution">
      <summary>
        <para>Профили подготовки распространения можно использовать при загрузке приложения в App Store или для разового и внутреннего распространения.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PS4BuildSubtarget">
      <summary>
        <para>Тип создаваемой сборки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PS4BuildSubtarget.Package">
      <summary>
        <para>Сборка пакета для установки на комплект для разработки или тестирования.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PS4BuildSubtarget.PCHosted">
      <summary>
        <para>Сборка, размещенная на ПК, для передачи файлов комплекту для разработки или тестирования.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Purchasing.PurchasingSettings">
      <summary>
        <para>API редактора для функции редактора Unity Services. Обычно покупка включается в окне «Службы», но при написании собственного расширения редактора можно использовать этот API.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Purchasing.PurchasingSettings.enabled">
      <summary>
        <para>Это логическое поле приведет к включению функции «Покупки» в Unity, если оно равно true, или отключению, если оно равно false.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.RemoveAssetOptions">
      <summary>
        <para>Варианты удаления активов</para>
      </summary>
    </member>
    <member name="F:UnityEditor.RemoveAssetOptions.DeleteAssets">
      <summary>
        <para>Удалить ресурс, не перемещая его в корзину.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.RemoveAssetOptions.MoveAssetToTrash">
      <summary>
        <para>Ресурс должен быть перемещен в корзину.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Rendering.AlbedoSwatchInfo">
      <summary>
        <para>Содержит данные пользовательского образца альбедо.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.AlbedoSwatchInfo.color">
      <summary>
        <para>Цвет образца альбедо, который отображается в пользовательском интерфейсе валидатора физического рендеринга.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.AlbedoSwatchInfo.maxLuminance">
      <summary>
        <para>Максимальное значение яркости, используемое для проверки альбедо для средства проверки альбедо на основе физической визуализации.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.AlbedoSwatchInfo.minLuminance">
      <summary>
        <para>Минимальное значение яркости, используемое для проверки альбедо для средства проверки альбедо на основе физической визуализации.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.AlbedoSwatchInfo.name">
      <summary>
        <para>Имя образца альбедо для отображения в пользовательском интерфейсе физически корректного рендерера.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Rendering.EditorCameraUtils">
      <summary>
        <para>Утилиты для рендеринга камеры в редакторе.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Rendering.EditorCameraUtils.RenderToCubemap(UnityEngine.Camera,UnityEngine.Texture,System.Int32,UnityEditor.StaticEditorFlags)">
      <summary>
        <para>Визуализирует эту камеру в статическую кубическую карту.</para>
      </summary>
      <param name="camera">Камера для использования во время рендеринга.</param>
      <param name="target">Кубическая карта для рендеринга.</param>
      <param name="faceMask">Битовая маска, определяющая, на какую из шести граней выполняется рендеринг.</param>
      <param name="culledFlags">Флаги объектов для отбраковки во время рендеринга.</param>
      <returns>
        <para>Если процесс рендеринга завершается успешно, возвращает true. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Rendering.EditorGraphicsSettings">
      <summary>
        <para>Интерфейс сценария для конкретного редактора для.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Rendering.EditorGraphicsSettings.albedoSwatches">
      <summary>
        <para>Возвращает массив Rendering.AlbedoSwatchInfo.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Rendering.EditorGraphicsSettings.GetShaderSettingsForPlatform(UnityEditor.BuildTargetGroup,UnityEngine.Rendering.ShaderHardwareTier)">
      <summary>
        <para>Возвращает PlatformShaderSettings для данной платформы и аппаратного уровня шейдера.</para>
      </summary>
      <param name="target">
      </param>
      <param name="tier">
      </param>
    </member>
    <member name="M:UnityEditor.Rendering.EditorGraphicsSettings.GetTierSettings(UnityEditor.Build.NamedBuildTarget,UnityEngine.Rendering.GraphicsTier)">
      <summary>
        <para>Возвращает TierSettings для заданной цели сборки и.</para>
      </summary>
      <param name="target">
      </param>
      <param name="tier">
      </param>
    </member>
    <member name="M:UnityEditor.Rendering.EditorGraphicsSettings.GetTierSettings(UnityEditor.BuildTargetGroup,UnityEngine.Rendering.GraphicsTier)">
      <summary>
        <para>Возвращает TierSettings для заданной цели сборки и.</para>
      </summary>
      <param name="target">
      </param>
      <param name="tier">
      </param>
    </member>
    <member name="M:UnityEditor.Rendering.EditorGraphicsSettings.GetTierSettings(UnityEditor.BuildTargetGroup,UnityEngine.Rendering.ShaderHardwareTier)">
      <summary>
        <para>ЗАДАЧА.</para>
      </summary>
      <param name="target">
      </param>
      <param name="tier">
      </param>
    </member>
    <member name="M:UnityEditor.Rendering.EditorGraphicsSettings.SetShaderSettingsForPlatform(UnityEditor.BuildTargetGroup,UnityEngine.Rendering.ShaderHardwareTier,UnityEditor.Rendering.PlatformShaderSettings)">
      <summary>
        <para>Позволяет установить PlatformShaderSettings для указанной платформы и аппаратного уровня шейдера.</para>
      </summary>
      <param name="target">
      </param>
      <param name="tier">
      </param>
      <param name="settings">
      </param>
    </member>
    <member name="M:UnityEditor.Rendering.EditorGraphicsSettings.SetTierSettings(UnityEditor.Build.NamedBuildTarget,UnityEngine.Rendering.GraphicsTier,UnityEditor.Rendering.TierSettings)">
      <summary>
        <para>Задайте TierSettings для данной цели сборки и.</para>
      </summary>
      <param name="target">
      </param>
      <param name="tier">
      </param>
      <param name="settings">
      </param>
    </member>
    <member name="M:UnityEditor.Rendering.EditorGraphicsSettings.SetTierSettings(UnityEditor.BuildTargetGroup,UnityEngine.Rendering.GraphicsTier,UnityEditor.Rendering.TierSettings)">
      <summary>
        <para>Задайте TierSettings для данной цели сборки и.</para>
      </summary>
      <param name="target">
      </param>
      <param name="tier">
      </param>
      <param name="settings">
      </param>
    </member>
    <member name="M:UnityEditor.Rendering.EditorGraphicsSettings.SetTierSettings(UnityEditor.BuildTargetGroup,UnityEngine.Rendering.ShaderHardwareTier,UnityEditor.Rendering.TierSettings)">
      <summary>
        <para>ЗАДАЧА.</para>
      </summary>
      <param name="target">
      </param>
      <param name="tier">
      </param>
      <param name="settings">
      </param>
    </member>
    <member name="T:UnityEditor.Rendering.PlatformShaderSettings">
      <summary>
        <para>Используется для настройки параметров шейдеров для каждой платформы и аппаратного уровня шейдера.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.PlatformShaderSettings.cascadedShadowMaps">
      <summary>
        <para>Позволяет указать, следует ли использовать каскадные карты теней.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.PlatformShaderSettings.reflectionProbeBlending">
      <summary>
        <para>Позволяет указать, следует ли включить смешивание зондов отражения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.PlatformShaderSettings.reflectionProbeBoxProjection">
      <summary>
        <para>Позволяет указать, следует ли использовать рамочную проекцию Reflection Probes.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.PlatformShaderSettings.standardShaderQuality">
      <summary>
        <para>Позволяет выбрать стандартное качество шейдера.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Rendering.RenderPipelineEditorUtility">
      <summary>
        <para>Вспомогательный класс, содержащий служебную функцию в ScriptableRenderPipeline for Editor.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Rendering.RenderPipelineEditorUtility.FetchFirstCompatibleTypeUsingScriptableRenderPipelineExtension">
      <summary>
        <para>Возвращает первый тип, который является дочерним по отношению к TBaseClass и имеет фильтр ScriptableRenderPipelineExtensionAttribute, соответствующий используемому ScriptableRenderPipeline.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Rendering.ScriptableRenderPipelineExtensionAttribute">
      <summary>
        <para>Используйте этот атрибут, чтобы применить условие к фильтру, который находит класс на основе того, какой ScriptableRenderPipeline вы используете в данный момент.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Rendering.ScriptableRenderPipelineExtensionAttribute.inUse">
      <summary>
        <para>Определяет, является ли текущий ScriptableRenderPipeline того же типа, что и заданный конструктором. Возвращает значение true, если ScriptableRenderPipeline имеет тип, используемый при создании атрибута. В противном случае возвращает false.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Rendering.ScriptableRenderPipelineExtensionAttribute.#ctor(System.Type)">
      <summary>
        <para>Создайте ScriptableRenderPipelineExtensionAttribute.</para>
      </summary>
      <param name="renderPipelineAsset">Тип, унаследованный от RenderPipelineAsset, используемый для фильтрации.</param>
    </member>
    <member name="T:UnityEditor.Rendering.ShaderCompilerData">
      <summary>
        <para>Сбор данных, используемых для генерации вариантов шейдера, включая данные целевой платформы и набор ключевых слов, представляющий конкретный вариант шейдера.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Rendering.ShaderCompilerData.buildTarget">
      <summary>
        <para>Цель сборки, для которой компилируется вариант шейдера. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Rendering.ShaderCompilerData.graphicsTier">
      <summary>
        <para>GraphicsTier классифицирует оборудование с низкой, средней и высокой производительностью. Вы можете установить уровень графики только во встроенном конвейере рендеринга. </para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderCompilerData.platformKeywordSet">
      <summary>
        <para>Коллекция Rendering.ShaderKeyword, представляющая конкретный вариант шейдера платформы.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Rendering.ShaderCompilerData.shaderCompilerPlatform">
      <summary>
        <para>Компилятор шейдера, используемый для создания вариантов шейдера данных игрока.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderCompilerData.shaderKeywordSet">
      <summary>
        <para>Коллекция Rendering.ShaderKeyword, представляющая конкретный вариант шейдера.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Rendering.ShaderCompilerData.shaderRequirements">
      <summary>
        <para>Функции шейдера, необходимые для конкретного шейдера.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Rendering.ShaderCompilerMessageSeverity">
      <summary>
        <para>Указывает серьезность сообщения, возвращаемого компилятором шейдеров Unity.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderCompilerMessageSeverity.Error">
      <summary>
        <para>Указывает, что сообщение, возвращенное компилятором шейдеров Unity, является ошибкой и компиляция завершилась неудачно.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderCompilerMessageSeverity.Warning">
      <summary>
        <para>Указывает, что сообщение, возвращаемое компилятором шейдеров Unity, является предупреждением.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Rendering.ShaderCompilerPlatform">
      <summary>
        <para>Компилятор шейдера, используемый для создания вариантов шейдера данных игрока.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderCompilerPlatform.D3D">
      <summary>
        <para>Компилятор, используемый с графическим API Direct3D 11 и Direct3D 12 на платформах Windows.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderCompilerPlatform.GameCore">
      <summary>
        <para>Компилятор, используемый с графическим API Direct3D 12 на платформах Game Core.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderCompilerPlatform.GLES20">
      <summary>
        <para>Компилятор, используемый с графическими API OpenGL ES 2.0 и WebGL 1.0 на платформах Android, iOS, Windows и WebGL.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderCompilerPlatform.GLES3x">
      <summary>
        <para>Компилятор, используемый с графическими API OpenGL ES 3.x и WebGL 2.0 на платформах Android, iOS, Windows и WebGL.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderCompilerPlatform.Metal">
      <summary>
        <para>Компилятор, используемый с графическим API Metal на платформах macOS, iOS и tvOS.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderCompilerPlatform.None">
      <summary>
        <para>Укажите разумное значение для неинициализированных переменных.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderCompilerPlatform.OpenGLCore">
      <summary>
        <para>Компилятор, используемый с основным графическим API OpenGL на платформах macOS, Linux и Windows.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderCompilerPlatform.PS4">
      <summary>
        <para>Компилятор, используемый на PlayStation 4.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderCompilerPlatform.Switch">
      <summary>
        <para>Компилятор, используемый на Nintendo Switch.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderCompilerPlatform.Vulkan">
      <summary>
        <para>Компилятор, используемый с графическим API Vulkan на платформах Android, Linux и Windows.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderCompilerPlatform.XboxOneD3D11">
      <summary>
        <para>Компилятор, используемый с графическим API Direct3D 11 на XBox One.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderCompilerPlatform.XboxOneD3D12">
      <summary>
        <para>Компилятор, используемый с графическим API Direct3D 12 на XBox One.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Rendering.ShaderQuality">
      <summary>
        <para>Предустановка качества шейдера.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderQuality.High">
      <summary>
        <para>Предустановка шейдера высокого качества.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderQuality.Low">
      <summary>
        <para>Предустановка шейдера низкого качества.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderQuality.Medium">
      <summary>
        <para>Предустановка шейдера среднего качества.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Rendering.ShaderRequirements">
      <summary>
        <para>Функции шейдера, требуемые конкретным шейдером. Функции — это битовые флаги.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.BaseShaders">
      <summary>
        <para>Указывает, что требуется базовая возможность шейдера, т. е. требуется уровень модели шейдера 2.0.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.Compute">
      <summary>
        <para>
Указывает, что требуется поддержка вычислительных шейдеров.
</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.CubeArray">
      <summary>
        <para>Указывает, что требуется поддержка массива кубических карт (TextureCubeArray).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.Derivatives">
      <summary>
        <para>Указывает, что требуется поддержка производных (ddx/ddy) инструкций на этапе фрагментного шейдера.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.FragClipDepth">
      <summary>
        <para>Указывает, что требуется поддержка ввода глубины пикселя (SV_Position.zw) на этапе фрагментного шейдера.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.FragCoord">
      <summary>
        <para>Указывает, что требуется поддержка ввода положения пикселя (SV_Position) на этапе фрагментного шейдера.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.FramebufferFetch">
      <summary>
        <para>Указывает, что требуется поддержка выборки кадрового буфера. Это возможность иметь аргументы цвета фрагментного шейдера с модификаторами ввода/вывода.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.Geometry">
      <summary>
        <para>Указывает, что требуется поддержка этапа шейдера геометрии.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.Instancing">
      <summary>
        <para>Указывает, что требуется поддержка входной семантики SV_InstanceID.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.Interpolators10">
      <summary>
        <para>Указывает, что требуется поддержка не менее 10 интерполяторов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.Interpolators15Integers">
      <summary>
        <para>Указывает, что требуется поддержка не менее 15 целых чисел и интерполяторов. Unity объединяет их вместе, потому что крайне маловероятно, что когда-либо будет существовать GPU/API, в котором есть только часть этого.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.Interpolators32">
      <summary>
        <para>Указывает, что требуется поддержка не менее 32 интерполяторов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.MRT4">
      <summary>
        <para>Указывает, что требуется поддержка нескольких целей рендеринга (не менее 4), т. е. поддержка фрагментных шейдеров, которые могут выводить не менее 4 значений.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.MRT8">
      <summary>
        <para>Указывает, что требуется поддержка нескольких целей рендеринга (не менее 8), т. е. поддержка фрагментных шейдеров, которые могут выводить не менее 8 значений.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.MSAATextureSamples">
      <summary>
        <para>Указывает, что требуется поддержка текстур MSAA (например, Texture2DMS).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.None">
      <summary>
        <para>Нет требований к шейдеру.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.RandomWrite">
      <summary>
        <para>Указывает, что требуется поддержка текстур с произвольной записью (UAV).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.SampleLOD">
      <summary>
        <para>Указывает, что требуется поддержка выборки текстуры из этапа фрагментного шейдера с явным уровнем MIP-текстуры.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.SetRTArrayIndexFromAnyShader">
      <summary>
        <para>Указывает, что требуется поддержка установки индекса массива цели отрисовки (SV_RenderTargetArrayIndex) на всех этапах шейдера (а не только на этапе шейдера геометрии).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.SparseTexelResident">
      <summary>
        <para>Указывает, что требуется поддержка разреженных текстур с инструкциями выборки, которые возвращают информацию о местонахождении.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.TessellationCompute">
      <summary>
        <para>Указывает, что требуется поддержка тесселяции с использованием вычислительного шейдера для обработки контрольных точек. API Metal Graphics требует эту функцию для тесселяции.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.TessellationShaders">
      <summary>
        <para>Указывает, что требуется поддержка тесселяции с использованием этапов шейдера оболочки и домена.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.Texture2DArray">
      <summary>
        <para>Указывает, что требуется поддержка двухмерных массивов текстур (Texture2DArray).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Rendering.ShaderSnippetData">
      <summary>
        <para>Коллекция свойств о конкретном компилируемом коде шейдера.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Rendering.ShaderSnippetData.pass">
      <summary>
        <para>Непрозрачный идентификатор компилируемого файла.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Rendering.ShaderSnippetData.passName">
      <summary>
        <para>Шейдер.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Rendering.ShaderSnippetData.passType">
      <summary>
        <para>Тип передачи шейдера для конвейера освещения Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Rendering.ShaderSnippetData.shaderType">
      <summary>
        <para>Этап шейдера в конвейере рендеринга.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Rendering.ShaderType">
      <summary>
        <para>Идентифицирует этап в конвейере рендеринга.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderType.Count">
      <summary>
        <para>Количество ShaderTypes, поддерживаемых Unity.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderType.Domain">
      <summary>
        <para>Идентификатор этапа шейдера домена.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderType.Fragment">
      <summary>
        <para>Идентификатор этапа шейдера фрагмента.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderType.Geometry">
      <summary>
        <para>Идентификатор этапа шейдера геометрии.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderType.Hull">
      <summary>
        <para>Идентификатор этапа шейдера корпуса.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderType.RayTracing">
      <summary>
        <para>Идентификатор этапа шейдера трассировки лучей.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderType.Surface">
      <summary>
        <para>Идентификатор этапа поверхностного шейдера.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderType.Vertex">
      <summary>
        <para>Идентификатор этапа вершинного шейдера.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Rendering.TierSettings">
      <summary>
        <para>Структура, представляющая настройки графики для данной цели сборки и.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.TierSettings.cascadedShadowMaps">
      <summary>
        <para>Использовать ли каскадные карты теней.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.TierSettings.detailNormalMap">
      <summary>
        <para>Следует ли сэмплировать детальную карту нормалей, если она назначена.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.TierSettings.enableLPPV">
      <summary>
        <para>Следует ли использовать прокси-том Light Probe.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.TierSettings.hdr">
      <summary>
        <para>Включить ли рендеринг с расширенным динамическим диапазоном (HDR).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.TierSettings.hdrMode">
      <summary>
        <para>Формат для буфера HDR.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.TierSettings.prefer32BitShadowMaps">
      <summary>
        <para>Следует ли Unity пытаться использовать 32-битные карты теней, где это возможно.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.TierSettings.realtimeGICPUUsage">
      <summary>
        <para>Используемый RealtimeGICPUUsage.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.TierSettings.reflectionProbeBlending">
      <summary>
        <para>Включить ли смешивание зондов отражения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.TierSettings.reflectionProbeBoxProjection">
      <summary>
        <para>Использовать ли отражающие зонды Box Projection.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.TierSettings.renderingPath">
      <summary>
        <para>Используемый путь рендеринга.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.TierSettings.semitransparentShadows">
      <summary>
        <para>Включить ли полупрозрачные тени.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.TierSettings.standardShaderQuality">
      <summary>
        <para>Стандартное качество шейдера.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ReplacePrefabOptions">
      <summary>
        <para>Флаги для функции PrefabUtility.ReplacePrefab.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ReplacePrefabOptions.ConnectToPrefab">
      <summary>
        <para>Соединяет переданные объекты с префабом после загрузки префаба.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ReplacePrefabOptions.Default">
      <summary>
        <para>Заменяет префабы, сопоставляя уже существующие соединения с префабом.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ReplacePrefabOptions.ReplaceNameBased">
      <summary>
        <para>Заменяет префаб, используя поиск по имени в иерархии преобразования.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ResolutionDialogSetting">
      <summary>
        <para>Настройка диалога разрешения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ResolutionDialogSetting.Disabled">
      <summary>
        <para>Никогда не показывать диалоговое окно разрешения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ResolutionDialogSetting.Enabled">
      <summary>
        <para>Показать диалоговое окно разрешения при первом запуске.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ResolutionDialogSetting.HiddenByDefault">
      <summary>
        <para>Скрыть диалоговое окно разрешения при первом запуске.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SceneAsset">
      <summary>
        <para>SceneAsset используется для ссылки на объекты сцены в редакторе.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SceneManagement.AddedComponent">
      <summary>
        <para>Класс с информацией о компоненте, добавленном в экземпляр Prefab.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.AddedComponent.instanceComponent">
      <summary>
        <para>Добавленный компонент в экземпляр Prefab.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.AddedComponent.Apply">
      <summary>
        <para>См. PrefabOverride.Apply.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.AddedComponent.GetAssetObject">
      <summary>
        <para>См. PrefabOverride.GetAssetObject.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.AddedComponent.Revert(UnityEditor.InteractionMode)">
      <summary>
        <para>См. PrefabOverride.Revert.</para>
      </summary>
      <param name="mode">
      </param>
    </member>
    <member name="T:UnityEditor.SceneManagement.AddedGameObject">
      <summary>
        <para>Класс с информацией об игровом объекте, который был добавлен в качестве дочернего элемента в экземпляр Prefab.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.AddedGameObject.instanceGameObject">
      <summary>
        <para>Добавленный GameObject в экземпляр Prefab.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.AddedGameObject.siblingIndex">
      <summary>
        <para>Братский индекс добавленного GameObject.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.AddedGameObject.Apply">
      <summary>
        <para>См. PrefabOverride.Apply.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.AddedGameObject.GetAssetObject">
      <summary>
        <para>См. PrefabOverride.GetAssetObject.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.AddedGameObject.Revert(UnityEditor.InteractionMode)">
      <summary>
        <para>См. PrefabOverride.Revert.</para>
      </summary>
      <param name="mode">
      </param>
    </member>
    <member name="T:UnityEditor.SceneManagement.EditorSceneManager">
      <summary>
        <para>Управление сценами в редакторе.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.SceneManagement.EditorSceneManager.activeSceneChangedInEditMode(UnityEngine.Events.UnityAction`2&lt;UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene&gt;)">
      <summary>
        <para>Подпишитесь на это событие, чтобы получать уведомления об изменении активной сцены в режиме редактирования в редакторе.</para>
      </summary>
      <param name="value">Предыдущая активная сцена и новая активная сцена.</param>
    </member>
    <member name="P:UnityEditor.SceneManagement.EditorSceneManager.loadedSceneCount">
      <summary>
        <para>Количество загруженных сцен.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.SceneManagement.EditorSceneManager.newSceneCreated(UnityEditor.SceneManagement.EditorSceneManager/NewSceneCreatedCallback)">
      <summary>
        <para>Это событие вызывается после создания новой сцены.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="P:UnityEditor.SceneManagement.EditorSceneManager.playModeStartScene">
      <summary>
        <para>Загружает этот объект сцены при запуске режима воспроизведения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.EditorSceneManager.preventCrossSceneReferences">
      <summary>
        <para>Определяет, разрешены ли межсценовые ссылки в редакторе.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.EditorSceneManager.previewSceneCount">
      <summary>
        <para>Текущее количество активных сцен предварительного просмотра.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.SceneManagement.EditorSceneManager.sceneClosed(UnityEditor.SceneManagement.EditorSceneManager/SceneClosedCallback)">
      <summary>
        <para>Это событие вызывается после закрытия сцены в редакторе.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="?:UnityEditor.SceneManagement.EditorSceneManager.sceneClosing(UnityEditor.SceneManagement.EditorSceneManager/SceneClosingCallback)">
      <summary>
        <para>Это событие вызывается перед закрытием открытой сцены после того, как вы запросили закрытие сцены.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="?:UnityEditor.SceneManagement.EditorSceneManager.sceneDirtied(UnityEditor.SceneManagement.EditorSceneManager/SceneDirtiedCallback)">
      <summary>
        <para>Это событие вызывается после изменения сцены в редакторе.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="?:UnityEditor.SceneManagement.EditorSceneManager.sceneOpened(UnityEditor.SceneManagement.EditorSceneManager/SceneOpenedCallback)">
      <summary>
        <para>Это событие вызывается после открытия сцены в редакторе.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="?:UnityEditor.SceneManagement.EditorSceneManager.sceneOpening(UnityEditor.SceneManagement.EditorSceneManager/SceneOpeningCallback)">
      <summary>
        <para>Это событие вызывается перед открытием существующей сцены.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="?:UnityEditor.SceneManagement.EditorSceneManager.sceneSaved(UnityEditor.SceneManagement.EditorSceneManager/SceneSavedCallback)">
      <summary>
        <para>Это событие вызывается после сохранения сцены.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="?:UnityEditor.SceneManagement.EditorSceneManager.sceneSaving(UnityEditor.SceneManagement.EditorSceneManager/SceneSavingCallback)">
      <summary>
        <para>Это событие вызывается перед сохранением сцены на диск после того, как вы запросили сохранение сцены.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.CalculateAvailableSceneCullingMask">
      <summary>
        <para>Просмотрите все сцены и найдите наименьший неиспользуемый бит в объединении всех масок отбраковки сцен.</para>
      </summary>
      <returns>
        <para>Младший неиспользуемый бит объединения всех масок отбраковки.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.ClosePreviewScene(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Закрывает сцену предварительного просмотра, созданную NewPreviewScene.</para>
      </summary>
      <param name="scene">Сцена предварительного просмотра, которую нужно закрыть.</param>
      <returns>
        <para>Истинно, если сцена была успешно закрыта.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.CloseScene(UnityEngine.SceneManagement.Scene,System.Boolean)">
      <summary>
        <para>Закройте сцену. Если флаг removeScene установлен, закрытая сцена также будет удалена из EditorSceneManager.</para>
      </summary>
      <param name="scene">Сцена, которую нужно закрыть/удалить.</param>
      <param name="removeScene">Логический флаг, указывающий, следует ли удалить сцену после закрытия.</param>
      <returns>
        <para>Возвращает true, если сцена закрыта/удалена.</para>
      </returns>
    </member>
    <member name="F:UnityEditor.SceneManagement.EditorSceneManager.DefaultSceneCullingMask">
      <summary>
        <para>Вместо этого используйте SceneCullingMasks.DefaultSceneCullingMask.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.DetectCrossSceneReferences(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Обнаруживает ссылки между сценами в сцене.</para>
      </summary>
      <param name="scene">Сцена для проверки ссылок между сценами.</param>
      <returns>
        <para>Были ли найдены ссылки между сценами.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.EnsureUntitledSceneHasBeenSaved(System.String)">
      <summary>
        <para>Отображает диалоговое окно сохранения, если сцена без названия существует в текущей настройке диспетчера сцен.</para>
      </summary>
      <param name="dialogContent">Текст, отображаемый в диалоговом окне сохранения.</param>
      <returns>
        <para>Истинно, если сцена сохранена или сцена без названия отсутствует.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.GetSceneCullingMask(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Возвратите маску отбраковки, установленную для данной сцены.</para>
      </summary>
      <param name="scene">Сцена, из которой нужно получить маску отбраковки.</param>
      <returns>
        <para>Текущая маска отбраковки сцены в виде битового поля.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.GetSceneManagerSetup">
      <summary>
        <para>Возвращает текущую настройку SceneManager.</para>
      </summary>
      <returns>
        <para>Массив классов SceneSetup — по одному элементу для каждой сцены.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.IsPreviewScene(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Является ли сцена сценой предварительного просмотра?</para>
      </summary>
      <param name="scene">Сцена для проверки.</param>
      <returns>
        <para>Истинно, если сцена является сценой предварительного просмотра.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.IsPreviewSceneObject(UnityEngine.Object)">
      <summary>
        <para>Является ли этот объект частью сцены предварительного просмотра?</para>
      </summary>
      <param name="obj">Объект для проверки.</param>
      <returns>
        <para>Истинно, если этот объект является частью сцены предварительного просмотра.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.LoadSceneAsyncInPlayMode(System.String,UnityEngine.SceneManagement.LoadSceneParameters)">
      <summary>
        <para>Этот метод позволяет загружать сцену во время воспроизведения в редакторе, не требуя, чтобы сцена была включена в список сцен.</para>
      </summary>
      <param name="path">Путь к сцене для загрузки.</param>
      <param name="parameters">Параметры, применяемые к загрузке. См. раздел SceneManagement.LoadSceneParameters.</param>
      <returns>
        <para>Используйте AsyncOperation, чтобы определить, завершена ли операция.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.LoadSceneInPlayMode(System.String,UnityEngine.SceneManagement.LoadSceneParameters)">
      <summary>
        <para>Этот метод позволяет загружать сцену во время воспроизведения в редакторе, не требуя, чтобы сцена была включена в список сцен.</para>
      </summary>
      <param name="path">Путь к сцене для загрузки.</param>
      <param name="parameters">Параметры, используемые для загрузки сцены SceneManagement.LoadSceneParameters.</param>
      <returns>
        <para>Загружаемая сцена.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.MarkAllScenesDirty">
      <summary>
        <para>Пометить все загруженные сцены как измененные.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.MarkSceneDirty(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Пометить указанную сцену как измененную.</para>
      </summary>
      <param name="scene">Сцена, которую нужно пометить как измененную.</param>
      <returns>
        <para>Была ли сцена успешно помечена как грязная.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.MoveSceneAfter(UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Позволяет изменить порядок сцен, открытых в данный момент в окне иерархии. Перемещает исходную сцену так, чтобы она располагалась после сцены назначения.</para>
      </summary>
      <param name="src">Сцена для перемещения.</param>
      <param name="dst">Сцена, которая должна располагаться непосредственно перед исходной сценой в иерархии.</param>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.MoveSceneBefore(UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Позволяет изменить порядок сцен, открытых в данный момент в окне иерархии. Перемещает исходную Сцену так, чтобы она располагалась перед Сценой назначения.</para>
      </summary>
      <param name="src">Сцена для перемещения.</param>
      <param name="dst">Сцена, которая должна идти сразу после исходной сцены в иерархии.</param>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.NewPreviewScene">
      <summary>
        <para>Создает новую сцену предварительного просмотра. Любой объект, добавленный в сцену предварительного просмотра, будет отображаться только в этой сцене.</para>
      </summary>
      <returns>
        <para>Новая сцена предварительного просмотра.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.NewScene(UnityEditor.SceneManagement.NewSceneSetup,UnityEditor.SceneManagement.NewSceneMode)">
      <summary>
        <para>Создайте новую сцену.</para>
      </summary>
      <param name="setup">Должна ли новая сцена использовать набор игровых объектов по умолчанию.</param>
      <param name="mode">Оставлять ли существующие сцены открытыми.</param>
      <returns>
        <para>Ссылка на новую сцену.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.SceneManagement.EditorSceneManager.NewSceneCreatedCallback">
      <summary>
        <para>Обратные вызовы этого типа, добавленные к событию newSceneCreated, вызываются после создания новой сцены.</para>
      </summary>
      <param name="scene">Сцена, которая была создана.</param>
      <param name="setup">Режим установки, используемый при создании сцены.</param>
      <param name="mode">Режим, используемый для создания сцены.</param>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.OpenScene(System.String,UnityEditor.SceneManagement.OpenSceneMode)">
      <summary>
        <para>Откройте сцену в редакторе.</para>
      </summary>
      <param name="scenePath">Путь Сцены. Это должно относиться к папке проекта; например, "AssetsMyScenesMyScene.unity".</param>
      <param name="mode">Позволяет вам выбрать, как открывать указанную сцену и сохранять ли существующие сцены в иерархии. Дополнительную информацию об этих параметрах см. в разделе SceneManagement.OpenSceneMode.</param>
      <returns>
        <para>Ссылка на открытую сцену.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.RestoreSceneManagerSetup(UnityEditor.SceneManagement.SceneSetup[])">
      <summary>
        <para>Восстановите настройку SceneManager.</para>
      </summary>
      <param name="value">В этом массиве должна быть загружена хотя бы одна Сцена и должна быть одна активная Сцена.</param>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.SaveCurrentModifiedScenesIfUserWantsTo">
      <summary>
        <para>Спрашивает пользователя, хотят ли они сохранить текущую открытую измененную сцену или сцены в иерархии.</para>
      </summary>
      <returns>
        <para>Возвращает true, если пользователь нажал «Сохранить» или «Не сохранять», чтобы указать, что можно закрыть открытые сцены после закрытия диалогового окна. Возвращает false, если пользователь нажал кнопку «Отмена» для отмены.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.SaveModifiedScenesIfUserWantsTo(UnityEngine.SceneManagement.Scene[])">
      <summary>
        <para>Спрашивает, следует ли сохранять измененные входные сцены.</para>
      </summary>
      <param name="scenes">Сцены, которые следует сохранить в случае их изменения.</param>
      <returns>
        <para>Возвращает true, если пользователь нажал «Сохранить» или «Не сохранять», чтобы указать, что можно закрыть входные сцены после закрытия диалогового окна. Возвращает false, если пользователь нажал кнопку «Отмена» для отмены.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.SaveOpenScenes">
      <summary>
        <para>Сохраните все открытые сцены.</para>
      </summary>
      <returns>
        <para>Возвращает true, если все открытые сцены успешно сохранены.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.SaveScene(UnityEngine.SceneManagement.Scene,System.String,System.Boolean)">
      <summary>
        <para>Сохранить сцену.</para>
      </summary>
      <param name="scene">Сцена для сохранения.</param>
      <param name="dstScenePath">Путь к файлу для сохранения сцены. Если путь пуст, текущая открытая сцена перезаписывается. Если он еще не был сохранен, отображается диалоговое окно сохранения.</param>
      <param name="saveAsCopy">Если установлено значение true, сцена сохраняется без изменения текущей сцены и без очистки маркера несохраненных изменений.</param>
      <returns>
        <para>Истина, если сохранение прошло успешно, в противном случае — ложь.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.SaveScenes(UnityEngine.SceneManagement.Scene[])">
      <summary>
        <para>Сохраните список сцен.</para>
      </summary>
      <param name="scenes">Список сцен, которые следует сохранить.</param>
      <returns>
        <para>Истинно, если сохранение прошло успешно. В противном случае ложь.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.SceneManagement.EditorSceneManager.SceneClosedCallback">
      <summary>
        <para>Обратные вызовы этого типа, добавленные в событие sceneClosed, вызываются сразу после закрытия сцены.</para>
      </summary>
      <param name="scene">Сцена, которая была закрыта.</param>
    </member>
    <member name="T:UnityEditor.SceneManagement.EditorSceneManager.SceneClosingCallback">
      <summary>
        <para>Обратные вызовы этого типа, добавленные в событие sceneClosing, вызываются непосредственно перед закрытием сцены.</para>
      </summary>
      <param name="scene">Сцена, которая будет закрыта.</param>
      <param name="removingScene">Будет ли сцена также удалена из диспетчера сцен после закрытия. Если true, сцена удаляется после закрытия.</param>
    </member>
    <member name="T:UnityEditor.SceneManagement.EditorSceneManager.SceneDirtiedCallback">
      <summary>
        <para>Обратные вызовы этого типа, которые были добавлены к событию sceneDirtied, вызываются после того, как сцена изменится с немодифицированной на модифицированную.</para>
      </summary>
      <param name="scene">
      </param>
    </member>
    <member name="T:UnityEditor.SceneManagement.EditorSceneManager.SceneOpenedCallback">
      <summary>
        <para>Обратные вызовы этого типа, которые были добавлены в событие sceneOpened, вызываются после того, как сцена была открыта.</para>
      </summary>
      <param name="scene">Сцена, которая была открыта.</param>
      <param name="mode">Режим, используемый для открытия сцены.</param>
    </member>
    <member name="T:UnityEditor.SceneManagement.EditorSceneManager.SceneOpeningCallback">
      <summary>
        <para>Обратные вызовы этого типа, добавленные в событие sceneOpening, вызываются непосредственно перед открытием сцены.</para>
      </summary>
      <param name="path">Путь сцены, которую нужно открыть. Это относительно пути к проекту.</param>
      <param name="mode">Режим, который используется при открытии сцены.</param>
    </member>
    <member name="T:UnityEditor.SceneManagement.EditorSceneManager.SceneSavedCallback">
      <summary>
        <para>Обратные вызовы этого типа, добавленные в событие sceneSaved, вызываются после сохранения сцены.</para>
      </summary>
      <param name="scene">Сцена, которая была сохранена.</param>
    </member>
    <member name="T:UnityEditor.SceneManagement.EditorSceneManager.SceneSavingCallback">
      <summary>
        <para>Обратные вызовы этого типа, добавленные в событие sceneSaving, вызываются непосредственно перед сохранением сцены.</para>
      </summary>
      <param name="scene">Сцена для сохранения.</param>
      <param name="path">Путь, по которому сохраняется сцена.</param>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.SetSceneCullingMask(UnityEngine.SceneManagement.Scene,System.UInt64)">
      <summary>
        <para>Установите маску выбраковки на этой сцене на это значение.
Камеры будут отображать только те объекты в сценах, для которых установлены одинаковые биты в их маске отбраковки.</para>
      </summary>
      <param name="scene">Сцена для установки маски отсечения.</param>
      <param name="sceneCullingMask">Значение маски отбраковки, сохраненное в виде битового поля.</param>
    </member>
    <member name="T:UnityEditor.SceneManagement.MainStage">
      <summary>
        <para>Основная сцена содержит все открытые на данный момент обычные сцены и всегда доступна.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SceneManagement.NewSceneMode">
      <summary>
        <para>Используется при создании новой сцены в редакторе.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneManagement.NewSceneMode.Additive">
      <summary>
        <para>Вновь созданная сцена добавляется к текущим открытым сценам.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneManagement.NewSceneMode.Single">
      <summary>
        <para>Все текущие открытые сцены закрываются, а вновь созданная сцена открывается.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SceneManagement.NewSceneSetup">
      <summary>
        <para>Используется при создании новой сцены в редакторе.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneManagement.NewSceneSetup.DefaultGameObjects">
      <summary>
        <para>Добавляет в новую сцену игровые объекты по умолчанию (свет и камеру).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneManagement.NewSceneSetup.EmptyScene">
      <summary>
        <para>В новую сцену не добавляются игровые объекты.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SceneManagement.ObjectOverride">
      <summary>
        <para>Класс с информацией об объекте в экземпляре Prefab с переопределенными свойствами.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.ObjectOverride.coupledOverride">
      <summary>
        <para>Доступ к связанным модификациям компонентов переопределенного объекта, если он присутствует.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.ObjectOverride.instanceObject">
      <summary>
        <para>Объект в экземпляре Prefab.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.ObjectOverride.Apply">
      <summary>
        <para>См. PrefabOverride.Apply.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.ObjectOverride.GetAssetObject">
      <summary>
        <para>См. PrefabOverride.GetAssetObject.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.ObjectOverride.Revert">
      <summary>
        <para>См. PrefabOverride.Revert.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SceneManagement.OpenSceneMode">
      <summary>
        <para>Используется при открытии сцены в редакторе, чтобы указать, как следует открывать сцену.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneManagement.OpenSceneMode.Additive">
      <summary>
        <para>Добавляет сцену к текущим открытым сценам и загружает ее.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneManagement.OpenSceneMode.AdditiveWithoutLoading">
      <summary>
        <para>Добавляет сцену к текущим открытым сценам без ее загрузки. Он будет отображаться как «незагруженный» в окне иерархии.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneManagement.OpenSceneMode.Single">
      <summary>
        <para>Закрывает все текущие открытые сцены и загружает сцену.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SceneManagement.PrefabOverride">
      <summary>
        <para>Класс с информацией о заданном переопределении экземпляра Prefab.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.PrefabOverride.Apply(System.String)">
      <summary>
        <para>Применяет переопределение к Prefab Asset по указанному пути.</para>
      </summary>
      <param name="prefabAssetPath">Путь Prefab Asset, к которому нужно применить.</param>
    </member>
    <member name="M:UnityEditor.SceneManagement.PrefabOverride.Apply">
      <summary>
        <para>Применяет переопределение к Prefab Asset по указанному пути.</para>
      </summary>
      <param name="prefabAssetPath">Путь Prefab Asset, к которому нужно применить.</param>
    </member>
    <member name="M:UnityEditor.SceneManagement.PrefabOverride.FindApplyTargetAssetObject(System.String)">
      <summary>
        <para>Находит объект в Prefab Asset по заданному пути, к которому будет применяться.</para>
      </summary>
      <param name="prefabAssetPath">Путь к сборному активу, к которому нужно применить.</param>
      <returns>
        <para>Объект внутри Prefab Asset, затронутый переопределением.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.PrefabOverride.GetAssetObject">
      <summary>
        <para>Возвращает объект актива переопределения в самом внешнем префабе, из которого исходит экземпляр префаба.</para>
      </summary>
      <returns>
        <para>Объект внутри Prefab Asset, затронутый переопределением.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.PrefabOverride.Revert">
      <summary>
        <para>Отменяет переопределение экземпляра Prefab.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SceneManagement.PrefabStage">
      <summary>
        <para>Класс PrefabStage представляет контекст редактирования ресурсов Prefab.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.PrefabStage.assetPath">
      <summary>
        <para>Путь ресурса, в котором хранится файл Prefab Asset, относительно корня проекта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.PrefabStage.mode">
      <summary>
        <para>Prefab Stage можно открыть отдельно или в контексте.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.PrefabStage.openedFromInstanceObject">
      <summary>
        <para>GameObject внутри экземпляра Prefab, через который вы открыли Prefab Mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.PrefabStage.openedFromInstanceRoot">
      <summary>
        <para>Корень экземпляра Prefab, через который вы открыли Prefab Mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.PrefabStage.prefabAssetPath">
      <summary>
        <para>Путь Prefab Asset, который открыт на этом этапе Prefab.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.PrefabStage.prefabContentsRoot">
      <summary>
        <para>Корневой GameObject загруженного содержимого Prefab Asset.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.SceneManagement.PrefabStage.prefabSaved(System.Action`1&lt;UnityEngine.GameObject&gt;)">
      <summary>
        <para>Обратный вызов, который вызывается всякий раз, когда сохраняется содержимое этапа Prefab.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="?:UnityEditor.SceneManagement.PrefabStage.prefabSaving(System.Action`1&lt;UnityEngine.GameObject&gt;)">
      <summary>
        <para>Обратный вызов, который вызывается всякий раз, когда содержимое этапа Prefab собирается быть сохраненным.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="?:UnityEditor.SceneManagement.PrefabStage.prefabStageClosing(System.Action`1&lt;UnityEditor.SceneManagement.PrefabStage&gt;)">
      <summary>
        <para>Обратный вызов, который вызывается всякий раз, когда собирается открыть этап Prefab.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="?:UnityEditor.SceneManagement.PrefabStage.prefabStageDirtied(System.Action`1&lt;UnityEditor.SceneManagement.PrefabStage&gt;)">
      <summary>
        <para>Обратный вызов, который вызывается всякий раз, когда этап Prefab изменяется с немодифицированного на модифицированный.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="?:UnityEditor.SceneManagement.PrefabStage.prefabStageOpened(System.Action`1&lt;UnityEditor.SceneManagement.PrefabStage&gt;)">
      <summary>
        <para>Обратный вызов, который вызывается всякий раз, когда открывается этап Prefab.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="M:UnityEditor.SceneManagement.PrefabStage.ClearDirtiness">
      <summary>
        <para>Снимите флаг загрязнения для этапа Prefab.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.PrefabStage.IsPartOfPrefabContents(UnityEngine.GameObject)">
      <summary>
        <para>Является ли этот GameObject частью загруженного содержимого Prefab Asset на стадии Prefab?</para>
      </summary>
      <param name="gameObject">GameObject для проверки.</param>
      <returns>
        <para>Истинно, если GameObject является частью содержимого Prefab.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.SceneManagement.PrefabStage.Mode">
      <summary>
        <para>Определяет режим, который Unity использует для открытия этапа Prefab. Вы можете открыть сцену либо изолированно, либо в контексте.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneManagement.PrefabStage.Mode.InContext">
      <summary>
        <para>Редактирование в контексте означает, что вы можете редактировать Prefab Asset в Prefab Mode и по-прежнему сохранять контекст экземпляра Prefab, через который вы открыли.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneManagement.PrefabStage.Mode.InIsolation">
      <summary>
        <para>Изолированное редактирование означает, что вы можете редактировать префаб-ресурс отдельно в режиме префаба.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SceneManagement.PrefabStageUtility">
      <summary>
        <para>Вспомогательные методы, относящиеся к этапам сборки.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.PrefabStageUtility.GetCurrentPrefabStage">
      <summary>
        <para>Получить текущую стадию Prefab или null, если ее нет.</para>
      </summary>
      <returns>
        <para>Текущий этап Prefab или null.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.PrefabStageUtility.GetPrefabStage(UnityEngine.GameObject)">
      <summary>
        <para>Получить этап Prefab, который содержит заданный GameObject.</para>
      </summary>
      <param name="gameObject">GameObject для проверки.</param>
      <returns>
        <para>Содержащий Prefab этап.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.PrefabStageUtility.OpenPrefab(System.String)">
      <summary>
        <para>Открывает Prefab Asset в Prefab Mode.</para>
      </summary>
      <param name="prefabAssetPath">Путь к файлу Prefab Asset для открытия в Prefab Mode.</param>
      <param name="openedFromInstance">Открывает Prefab Mode в контексте этого экземпляра Prefab GameObject.</param>
      <param name="prefabStageMode">Режим, определяющий, следует ли открывать изолированно или в контексте.</param>
      <returns>
        <para>Открытый PrefabStage.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.PrefabStageUtility.OpenPrefab(System.String,UnityEngine.GameObject)">
      <summary>
        <para>Открывает Prefab Asset в Prefab Mode.</para>
      </summary>
      <param name="prefabAssetPath">Путь к файлу Prefab Asset для открытия в Prefab Mode.</param>
      <param name="openedFromInstance">Открывает Prefab Mode в контексте этого экземпляра Prefab GameObject.</param>
      <param name="prefabStageMode">Режим, определяющий, следует ли открывать изолированно или в контексте.</param>
      <returns>
        <para>Открытый PrefabStage.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.PrefabStageUtility.OpenPrefab(System.String,UnityEngine.GameObject,UnityEditor.SceneManagement.PrefabStage/Mode)">
      <summary>
        <para>Открывает Prefab Asset в Prefab Mode.</para>
      </summary>
      <param name="prefabAssetPath">Путь к файлу Prefab Asset для открытия в Prefab Mode.</param>
      <param name="openedFromInstance">Открывает Prefab Mode в контексте этого экземпляра Prefab GameObject.</param>
      <param name="prefabStageMode">Режим, определяющий, следует ли открывать изолированно или в контексте.</param>
      <returns>
        <para>Открытый PrefabStage.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.SceneManagement.PreviewSceneStage">
      <summary>
        <para>Класс PreviewSceneStage представляет контекст редактирования на основе одной сцены предварительного просмотра.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.PreviewSceneStage.scene">
      <summary>
        <para>Сцена предварительного просмотра, которой управляет этот этап. Содержимое сцены должно быть перемещено в эту сцену.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.PreviewSceneStage.stageHandle">
      <summary>
        <para>См. Stage.stageHandle.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.PreviewSceneStage.OnCloseStage">
      <summary>
        <para>Unity вызывает этот метод, когда рабочая область закрыта. Классы, наследуемые от PreviewSceneStage, должны реализовать логику очистки в этом методе.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.PreviewSceneStage.OnOpenStage">
      <summary>
        <para>Unity вызывает этот метод при открытии рабочей области. Классы, наследуемые от PreviewSceneStage, должны реализовать логику инициализации в этом методе.</para>
      </summary>
      <returns>
        <para>Если ваша сцена успешно открыта, верните true, в противном случае верните false.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.SceneManagement.RemovedComponent">
      <summary>
        <para>Класс с информацией о компоненте, который был удален из экземпляра Prefab.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.RemovedComponent.assetComponent">
      <summary>
        <para>Компоненты Prefab Asset, которые были удалены из Prefab экземпляра.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.RemovedComponent.containingInstanceGameObject">
      <summary>
        <para>GameObject в экземпляре Prefab, из которого был удален компонент.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.RemovedComponent.Apply">
      <summary>
        <para>См. PrefabOverride.Apply.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.RemovedComponent.GetAssetObject">
      <summary>
        <para>См. PrefabOverride.GetAssetObject.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.RemovedComponent.Revert(UnityEditor.InteractionMode)">
      <summary>
        <para>См. PrefabOverride.Revert.</para>
      </summary>
      <param name="mode">
      </param>
    </member>
    <member name="T:UnityEditor.SceneManagement.SceneCullingMasks">
      <summary>
        <para>Маски, определяющие, в каких видах сцены и игр Unity должен отображать GameObject.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneManagement.SceneCullingMasks.DefaultSceneCullingMask">
      <summary>
        <para>Задает маску отсечения по умолчанию для сцены. Используйте биты из этой маски выбора сцены для объектов, которые вы хотите визуализировать как в представлении «Игра», так и в представлении «Сцена».</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneManagement.SceneCullingMasks.GameViewObjects">
      <summary>
        <para>Биты этой маски определяют GameObjects, которые Unity должна отображать в представлении Game.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneManagement.SceneCullingMasks.MainStageSceneViewObjects">
      <summary>
        <para>Биты этой маски определяют GameObjects, которые Unity должна отображать в представлениях Scene, показывающих основную сцену.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SceneManagement.SceneSetup">
      <summary>
        <para>Информация о настройке сцены в SceneManager. Его нельзя использовать в режиме воспроизведения. </para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.SceneSetup.isActive">
      <summary>
        <para>Если сцена активна.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.SceneSetup.isLoaded">
      <summary>
        <para>Если сцена загружена.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.SceneSetup.path">
      <summary>
        <para>Путь сцены. Должен быть относительно папки проекта. Например: «АктивыMyScenesMyScene.unity».</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SceneManagement.Stage">
      <summary>
        <para>Класс Stage представляет контекст редактирования, который включает набор сцен.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.Stage.assetPath">
      <summary>
        <para>Путь к файлу ресурсов, связанному со сценой, относительно корневой папки проекта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.Stage.stageHandle">
      <summary>
        <para>Структура StageHandle для этого этапа.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.Stage.CreateHeaderContent">
      <summary>
        <para>Создает содержимое заголовка для этой стадии. Это содержимое используется как в заголовке окна «Иерархия», так и в панели навигации представления «Сцена».</para>
      </summary>
      <returns>
        <para>Содержимое заголовка для этой стадии.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.Stage.FindComponentOfType">
      <summary>
        <para>Возвращает первый активный загруженный объект данного типа.</para>
      </summary>
      <returns>
        <para>Это возвращает объект, соответствующий указанному типу. Он возвращает null, если ни один объект не соответствует типу.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.Stage.FindComponentsOfType">
      <summary>
        <para>Возвращает список всех активных загруженных объектов данного типа.</para>
      </summary>
      <returns>
        <para>Массив найденных объектов, соответствующих указанному типу.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.Stage.GetCombinedSceneCullingMaskForCamera">
      <summary>
        <para>Получает маску выделения сцены из этой сцены.</para>
      </summary>
      <returns>
        <para>Комбинированная маска отбраковки сцены для этой сцены. Unity использует эту маску в представлении «Камера сцены» для фильтрации средства визуализации.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.Stage.GetHashForStateStorage">
      <summary>
        <para>Unity вызывает этот метод для получения хэш-кода, используемого для сохранения состояния рабочей области на диск.</para>
      </summary>
      <returns>
        <para>Хэш-код, идентифицирующий этот этап.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.Stage.OnCloseStage">
      <summary>
        <para>Unity вызывает этот метод, когда рабочая область закрыта. Классы, наследующие от Stage, должны реализовать логику очистки в этом методе.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.Stage.OnDisable">
      <summary>
        <para>См. ScriptableObject.OnDisable.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.Stage.OnEnable">
      <summary>
        <para>См. ScriptableObject.OnEnable.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.Stage.OnFirstTimeOpenStageInSceneView(UnityEditor.SceneView)">
      <summary>
        <para>Unity вызывает этот метод при первом открытии рабочей области для определенного объекта, для определенного вида сцены.</para>
      </summary>
      <param name="sceneView">Представление «Сцена», в котором открывается сцена.</param>
    </member>
    <member name="M:UnityEditor.SceneManagement.Stage.OnOpenStage">
      <summary>
        <para>Unity вызывает этот метод при открытии рабочей области. Классы, наследующие от Stage, должны реализовать логику инициализации в этом методе.</para>
      </summary>
      <returns>
        <para>true, если Unity успешно открыла рабочую область, в противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.Stage.OnReturnToStage">
      <summary>
        <para>Unity вызывает этот метод, когда вы возвращаетесь к уже открытой рабочей области.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SceneManagement.StageHandle">
      <summary>
        <para>Структура, представляющая дескриптор этапа.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageHandle.Contains(UnityEngine.GameObject)">
      <summary>
        <para>Содержит ли сцена данный GameObject?</para>
      </summary>
      <param name="gameObject">GameObject для проверки.</param>
      <returns>
        <para>Истинно, если сцена содержит заданный GameObject.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageHandle.FindComponentOfType">
      <summary>
        <para>Возвращает первый активный загруженный объект данного типа.</para>
      </summary>
      <returns>
        <para>Это возвращает объект, соответствующий указанному типу. Он возвращает null, если ни один объект не соответствует типу.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageHandle.FindComponentsOfType">
      <summary>
        <para>Возвращает список всех активных загруженных объектов данного типа.</para>
      </summary>
      <returns>
        <para>Массив найденных объектов, соответствующих указанному типу.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageHandle.IsValid">
      <summary>
        <para>Является ли этот дескриптор стадии действительным?</para>
      </summary>
      <returns>
        <para>Истинно, если дескриптор этапа действителен.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.SceneManagement.StageUtility">
      <summary>
        <para>Служебные методы, связанные с этапами.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageUtility.GetCurrentStage">
      <summary>
        <para>Текущей сценой может быть либо основная сцена, либо любая другая открытая сцена, визуализируемая в представлении «Сцена» как последняя навигационная цепочка на панели навигации.</para>
      </summary>
      <returns>
        <para>Текущая сцена, которая в данный момент визуализируется в представлении «Сцена» и отображается в иерархии.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageUtility.GetCurrentStageHandle">
      <summary>
        <para>Получить текущую редактируемую стадию.</para>
      </summary>
      <returns>
        <para>Текущий этап.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageUtility.GetMainStage">
      <summary>
        <para>Получите объект MainStage. Этот объект всегда доступен.</para>
      </summary>
      <returns>
        <para>Объект Main Stage.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageUtility.GetMainStageHandle">
      <summary>
        <para>Получить основную сцену, содержащую все открытые на данный момент обычные сцены.</para>
      </summary>
      <returns>
        <para>Основная сцена.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageUtility.GetStage(UnityEngine.GameObject)">
      <summary>
        <para>Получите объект Stage, содержащий входной GameObject или Scene.</para>
      </summary>
      <param name="gameObject">
      </param>
      <param name="scene">
      </param>
      <returns>
        <para>Этап, который содержит либо GameObject, либо Scene.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageUtility.GetStage(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Получите объект Stage, содержащий входной GameObject или Scene.</para>
      </summary>
      <param name="gameObject">
      </param>
      <param name="scene">
      </param>
      <returns>
        <para>Этап, который содержит либо GameObject, либо Scene.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageUtility.GetStageHandle(UnityEngine.GameObject)">
      <summary>
        <para>Получить этап, на котором существует данный GameObject.</para>
      </summary>
      <param name="gameObject">GameObject для поиска стадии.</param>
      <returns>
        <para>Стадия GameObject.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageUtility.GetStageHandle(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Получить сцену, на которой существует данная сцена.</para>
      </summary>
      <param name="scene">Сцена, в которой нужно найти сцену.</param>
      <returns>
        <para>Этап Сцены.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageUtility.GoBackToPreviousStage">
      <summary>
        <para>Перейдите в редакторе на предыдущий этап.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageUtility.GoToMainStage">
      <summary>
        <para>Перейдите в редакторе на главную сцену.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageUtility.GoToStage(UnityEditor.SceneManagement.Stage,System.Boolean)">
      <summary>
        <para>Перемещает редактор на указанный этап.</para>
      </summary>
      <param name="stage">Этап для перехода.</param>
      <param name="setAsFirstItemAfterMainStage">Если установлено значение true, новый этап заменяет существующие этапы в панировочных сухарях, кроме основного этапа.</param>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageUtility.IsGameObjectRenderedByCamera(UnityEngine.GameObject,UnityEngine.Camera)">
      <summary>
        <para>Отображается ли данный GameObject данной камерой?</para>
      </summary>
      <param name="gameObject">GameObject для проверки.</param>
      <param name="camera">Камера для проверки.</param>
      <returns>
        <para>Истинно, если GameObject визуализируется камерой.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageUtility.IsGameObjectRenderedByCameraAndPartOfEditableScene(UnityEngine.GameObject,UnityEngine.Camera)">
      <summary>
        <para>Указывает, визуализирует ли данная камера данный GameObject в данный момент, и GameObject также является частью редактируемой сцены.</para>
      </summary>
      <param name="gameObject">GameObject для проверки.</param>
      <param name="camera">Камера для проверки.</param>
      <returns>
        <para>Истинно, если GameObject визуализируется камерой и является частью редактируемой сцены.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageUtility.PlaceGameObjectInCurrentStage(UnityEngine.GameObject)">
      <summary>
        <para>Поместите данный GameObject в текущий редактируемый этап.</para>
      </summary>
      <param name="gameObject">GameObject, который будет помещен в текущую стадию.</param>
    </member>
    <member name="T:UnityEditor.SceneView">
      <summary>
        <para>Используйте этот класс для управления настройками SceneView, изменения свойств камеры SceneView, подписки на события, вызова методов SceneView и рендеринга открытых сцен.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.audioPlay">
      <summary>
        <para>Включает или отключает звуковые эффекты просмотра сцен.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.SceneView.beforeSceneGui(System.Action`1&lt;UnityEditor.SceneView&gt;)">
      <summary>
        <para>Событие, возникающее при вызове метода OnGUI.</para>
      </summary>
      <param name="value">[[SceneView], который вызывает этот обратный вызов.</param>
    </member>
    <member name="P:UnityEditor.SceneView.camera">
      <summary>
        <para>Камера, которая визуализирует этот SceneView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.cameraDistance">
      <summary>
        <para>Расстояние от камеры до точки поворота.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.cameraMode">
      <summary>
        <para>Текущий режим DrawCameraMode для камеры просмотра сцены.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.cameraSettings">
      <summary>
        <para>Используйте CameraSettings, чтобы задать свойства камеры SceneView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.currentDrawingSceneView">
      <summary>
        <para>Отрисовываемый SceneView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.drawGizmos">
      <summary>
        <para>Устанавливает видимость всех гизмо в представлении «Сцена».</para>
      </summary>
    </member>
    <member name="?:UnityEditor.SceneView.duringSceneGui(System.Action`1&lt;UnityEditor.SceneView&gt;)">
      <summary>
        <para>Подпишитесь на это событие, чтобы получать обратный вызов всякий раз, когда представление «Сцена» вызывает метод OnGUI.</para>
      </summary>
      <param name="value">Представление «Сцена», вызывающее этот обратный вызов.</param>
    </member>
    <member name="?:UnityEditor.SceneView.gridVisibilityChanged(System.Action`1&lt;System.Boolean&gt;)">
      <summary>
        <para>Вызывается при изменении видимости сетки.</para>
      </summary>
      <param name="value">Новое состояние видимости сетки.</param>
    </member>
    <member name="P:UnityEditor.SceneView.in2DMode">
      <summary>
        <para>Находится ли SceneView в 2D-режиме.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.isRotationLocked">
      <summary>
        <para>Можно ли поворачивать камеру просмотра сцены.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.isUsingSceneFiltering">
      <summary>
        <para>Использует ли данный SceneView фильтрацию сцен.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.lastActiveSceneView">
      <summary>
        <para>SceneView, который последним был в фокусе.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneView.lastActiveSceneViewChanged">
      <summary>
        <para>Зарегистрируйтесь в этом обратном вызове, чтобы получать уведомления об изменении активного вида сцены.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.lastSceneViewRotation">
      <summary>
        <para>Когда представление «Сцена» находится в 2D-режиме, это свойство содержит последний поворот камеры.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneView.m_AudioPlay">
      <summary>
        <para>M_AudioPlay устарел. Вместо этого используйте audioPlay (UnityUpgradable) -&gt; audioPlay.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneView.m_RenderMode">
      <summary>
        <para>M_RenderMode устарел. Вместо этого используйте cameraMode.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneView.m_ValidateTrueMetals">
      <summary>
        <para>M_ValidateTrueMetals устарел. Вместо этого используйте validateTrueMetals (UnityUpgradable) -&gt; validateTrueMetals.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.SceneView.onCameraModeChanged(System.Action`1&lt;UnityEditor.SceneView/CameraMode&gt;)">
      <summary>
        <para>Событие, которое вызывается при изменении выбранного режима камеры.</para>
      </summary>
      <param name="value">Новый режим камеры.</param>
    </member>
    <member name="P:UnityEditor.SceneView.orthographic">
      <summary>
        <para>Установлена ​​ли камера просмотра сцены в ортогональном режиме.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.pivot">
      <summary>
        <para>Центральная точка, вокруг которой вращается камера в представлении «Сцена».</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.renderMode">
      <summary>
        <para>RenderMode устарел. Вместо этого используйте cameraMode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.rotation">
      <summary>
        <para>Направление камеры к оси SceneView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.sceneLighting">
      <summary>
        <para>Включено или отключено освещение в представлении «Сцена».</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.sceneViews">
      <summary>
        <para>Список всех открытых окон просмотра сцен.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.sceneViewState">
      <summary>
        <para>Используйте SceneViewState, чтобы установить параметры отладки для представления сцены.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.selectedOutlineColor">
      <summary>
        <para>Получает цвет выбранного контура.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.showGrid">
      <summary>
        <para>Получает или задает, следует ли включить сетку для экземпляра SceneView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.size">
      <summary>
        <para>Размер вида сцены, измеренный по диагонали.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.validateTrueMetals">
      <summary>
        <para>Является ли альбедо черным для материалов со средним отражающим цветом выше 0,45.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneView.AddCameraMode(System.String,System.String)">
      <summary>
        <para>Добавьте пользовательский режим камеры в список режимов просмотра сцен.</para>
      </summary>
      <param name="name">Имя нового режима.</param>
      <param name="section">Раздел, в который будет добавлен новый режим. Это может быть существующий или новый раздел.</param>
      <returns>
        <para>CameraMode с указанным именем и разделом.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneView.AlignViewToObject(UnityEngine.Transform)">
      <summary>
        <para>Перемещает представление сцены для кадрирования преобразования.</para>
      </summary>
      <param name="t">Преобразование в кадр в представлении «Сцена».</param>
    </member>
    <member name="M:UnityEditor.SceneView.AlignWithView">
      <summary>
        <para>Выравнивает текущий выбор с положением и поворотом камеры просмотра сцены.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SceneView.CameraMode">
      <summary>
        <para>Описывает встроенный режим просмотра сцены.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneView.CameraMode.drawMode">
      <summary>
        <para>CameraDrawMode, связанный с CameraMode.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneView.CameraMode.name">
      <summary>
        <para>Имя CameraMode.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneView.CameraMode.section">
      <summary>
        <para>Раздел в раскрывающемся списке панели инструментов, к которому относится этот CameraMode.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneView.CameraMode.Equals(System.Object)">
      <summary>
        <para>Сравнивает этот объект CameraMode с указанным объектом CameraMode.</para>
      </summary>
      <param name="otherObject">CameraMode для сравнения.</param>
      <returns>
        <para>Возвращает true, если объекты CameraMode равны. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneView.CameraMode.ToString">
      <summary>
        <para>Получает строковую сводку этого CameraMode.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SceneView.CameraSettings">
      <summary>
        <para>Используйте этот класс для установки свойств камеры SceneView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.CameraSettings.accelerationEnabled">
      <summary>
        <para>Включает ускорение движения камеры в SceneView. Это заставляет камеру ускоряться на время движения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.CameraSettings.dynamicClip">
      <summary>
        <para>Когда этот параметр включен, ближняя и дальняя плоскости отсечения камеры SceneView рассчитываются относительно размера окна просмотра сцены. Если этот параметр отключен, вместо него используются NearClip и farClip.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.CameraSettings.easingDuration">
      <summary>
        <para>Сколько времени требуется, чтобы скорость камеры SceneView увеличилась до начальной полной скорости. Измеряется в секундах. Допустимые значения находятся в диапазоне [0,1, 2].</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.CameraSettings.easingEnabled">
      <summary>
        <para>Включает замедление движения камеры в SceneView. Это позволяет камере плавно двигаться, когда она начинает двигаться, и плавно отходить, когда она останавливается.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.CameraSettings.farClip">
      <summary>
        <para>Самая дальняя точка от камеры SceneView, в которой происходит рисование. Допустимое минимальное значение – 0,02.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.CameraSettings.fieldOfView">
      <summary>
        <para>Высота угла обзора для камеры SceneView. Измеряется в градусах по вертикали или по локальной оси Y.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.CameraSettings.nearClip">
      <summary>
        <para>Ближайшая точка к камере SceneView, где происходит рисование. Допустимое минимальное значение – 0,01.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.CameraSettings.occlusionCulling">
      <summary>
        <para>Включает отсечение окклюзии в SceneView. Это не позволяет Unity отображать игровые объекты, которые камера не видит, поскольку они скрыты другими игровыми объектами.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.CameraSettings.speed">
      <summary>
        <para>Скорость камеры SceneView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.CameraSettings.speedMax">
      <summary>
        <para>Максимальная скорость камеры SceneView. Допустимые значения находятся в диапазоне [0,0002, 10000].</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.CameraSettings.speedMin">
      <summary>
        <para>Минимальная скорость камеры SceneView. Допустимые значения находятся в диапазоне [0,0001, 9999].</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.CameraSettings.speedNormalized">
      <summary>
        <para>Нормализованная скорость камеры SceneView относительно текущего минимального/максимального диапазона. Допустимые значения находятся в диапазоне [0, 1].</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneView.CameraSettings.#ctor">
      <summary>
        <para>Создайте новый объект CameraSettings.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneView.ClearUserDefinedCameraModes">
      <summary>
        <para>Удалите все пользовательские режимы камеры.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneView.Frame(UnityEngine.Bounds)">
      <summary>
        <para>Обрамляет заданные границы в представлении «Сцена».</para>
      </summary>
      <param name="bounds">Границы кадра в представлении «Сцена».</param>
      <param name="instant">Установите значение true, чтобы сразу кадрировать камеру. Установите значение false, чтобы анимировать действие.</param>
      <returns>
        <para>Возвращает true, если заданные границы могут быть включены в представление сцены. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneView.FrameLastActiveSceneView">
      <summary>
        <para>Кадрирует текущий выбранный объект(ы) в последнем активном представлении сцены.</para>
      </summary>
      <returns>
        <para>Возвращает true, если кадр камеры успешно обрамляет текущий выбор.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneView.FrameSelected">
      <summary>
        <para>Рамка выделения объекта в представлении «Сцена».</para>
      </summary>
      <param name="lockView">Должен ли вид быть заблокирован для выбора.</param>
      <returns>
        <para>Возвращает true, если текущий выбор соответствует представлению «Сцена». В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneView.FrameSelected(System.Boolean)">
      <summary>
        <para>Рамка выделения объекта в представлении «Сцена».</para>
      </summary>
      <param name="lockView">Должен ли вид быть заблокирован для выбора.</param>
      <returns>
        <para>Возвращает true, если текущий выбор соответствует представлению «Сцена». В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneView.GetAllSceneCameras">
      <summary>
        <para>Извлекает массив всех компонентов камеры из всех открытых представлений сцены.</para>
      </summary>
      <returns>
        <para>Возвращает массив компонентов камеры.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneView.GetBuiltinCameraMode(UnityEditor.DrawCameraMode)">
      <summary>
        <para>Получает встроенный CameraMode, соответствующий указанному DrawCameraMode.</para>
      </summary>
      <param name="mode">DrawCameraMode для соответствия.</param>
      <returns>
        <para>Возвращает встроенный CameraMode.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneView.IsCameraDrawModeEnabled(UnityEditor.SceneView/CameraMode)">
      <summary>
        <para>Возвращает true, если режим включен в текущей настройке рендеринга, включая пользовательские валидаторы.</para>
      </summary>
      <param name="mode">CameraMode для проверки.</param>
      <returns>
        <para>Возвращает true, если CameraMode доступен в этом SceneView. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneView.IsCameraDrawModeSupported(UnityEditor.SceneView/CameraMode)">
      <summary>
        <para>Проверяет, поддерживает ли текущая конфигурация рендеринга CameraMode. Проверка включает настраиваемые валидаторы. </para>
      </summary>
      <param name="mode">CameraMode для проверки.</param>
      <returns>
        <para>Возвращает true, если текущая конфигурация рендеринга поддерживает CameraMode.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneView.LookAt(UnityEngine.Vector3)">
      <summary>
        <para>Перемещает представление сцены, чтобы сфокусироваться на цели.</para>
      </summary>
      <param name="point">Позиция в мировом пространстве для фрейма.</param>
      <param name="direction">Направление, с которого в представлении «Сцена» следует рассматривать целевую точку.</param>
      <param name="newSize">Величина увеличения камеры. Устанавливает размер.</param>
      <param name="ortho">Находится ли фокус камеры в орфографическом режиме (true) или в режиме перспективы (false).</param>
      <param name="instant">Немедленно применить движение (true) или анимировать переход (false).</param>
    </member>
    <member name="M:UnityEditor.SceneView.LookAt(UnityEngine.Vector3,UnityEngine.Quaternion)">
      <summary>
        <para>Перемещает представление сцены, чтобы сфокусироваться на цели.</para>
      </summary>
      <param name="point">Позиция в мировом пространстве для фрейма.</param>
      <param name="direction">Направление, с которого в представлении «Сцена» следует рассматривать целевую точку.</param>
      <param name="newSize">Величина увеличения камеры. Устанавливает размер.</param>
      <param name="ortho">Находится ли фокус камеры в орфографическом режиме (true) или в режиме перспективы (false).</param>
      <param name="instant">Немедленно применить движение (true) или анимировать переход (false).</param>
    </member>
    <member name="M:UnityEditor.SceneView.LookAt(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single)">
      <summary>
        <para>Перемещает представление сцены, чтобы сфокусироваться на цели.</para>
      </summary>
      <param name="point">Позиция в мировом пространстве для фрейма.</param>
      <param name="direction">Направление, с которого в представлении «Сцена» следует рассматривать целевую точку.</param>
      <param name="newSize">Величина увеличения камеры. Устанавливает размер.</param>
      <param name="ortho">Находится ли фокус камеры в орфографическом режиме (true) или в режиме перспективы (false).</param>
      <param name="instant">Немедленно применить движение (true) или анимировать переход (false).</param>
    </member>
    <member name="M:UnityEditor.SceneView.LookAt(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,System.Boolean)">
      <summary>
        <para>Перемещает представление сцены, чтобы сфокусироваться на цели.</para>
      </summary>
      <param name="point">Позиция в мировом пространстве для фрейма.</param>
      <param name="direction">Направление, с которого в представлении «Сцена» следует рассматривать целевую точку.</param>
      <param name="newSize">Величина увеличения камеры. Устанавливает размер.</param>
      <param name="ortho">Находится ли фокус камеры в орфографическом режиме (true) или в режиме перспективы (false).</param>
      <param name="instant">Немедленно применить движение (true) или анимировать переход (false).</param>
    </member>
    <member name="M:UnityEditor.SceneView.LookAt(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,System.Boolean,System.Boolean)">
      <summary>
        <para>Перемещает представление сцены, чтобы сфокусироваться на цели.</para>
      </summary>
      <param name="point">Позиция в мировом пространстве для фрейма.</param>
      <param name="direction">Направление, с которого в представлении «Сцена» следует рассматривать целевую точку.</param>
      <param name="newSize">Величина увеличения камеры. Устанавливает размер.</param>
      <param name="ortho">Находится ли фокус камеры в орфографическом режиме (true) или в режиме перспективы (false).</param>
      <param name="instant">Немедленно применить движение (true) или анимировать переход (false).</param>
    </member>
    <member name="M:UnityEditor.SceneView.LookAtDirect(UnityEngine.Vector3,UnityEngine.Quaternion)">
      <summary>
        <para>.LookAt без анимации движения сцены.</para>
      </summary>
      <param name="point">Позиция в мировом пространстве для фрейма.</param>
      <param name="direction">Направление, с которого вид сцены должен видеть точку.</param>
      <param name="newSize">Величина увеличения камеры. Устанавливает размер.</param>
    </member>
    <member name="M:UnityEditor.SceneView.LookAtDirect(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single)">
      <summary>
        <para>.LookAt без анимации движения сцены.</para>
      </summary>
      <param name="point">Позиция в мировом пространстве для фрейма.</param>
      <param name="direction">Направление, с которого вид сцены должен видеть точку.</param>
      <param name="newSize">Величина увеличения камеры. Устанавливает размер.</param>
    </member>
    <member name="M:UnityEditor.SceneView.MoveToView">
      <summary>
        <para>Преобразует весь выделенный объект в опорную точку сцены.</para>
      </summary>
      <param name="target">Преобразование для размещения в точке поворота сцены.</param>
    </member>
    <member name="M:UnityEditor.SceneView.MoveToView(UnityEngine.Transform)">
      <summary>
        <para>Преобразует весь выделенный объект в опорную точку сцены.</para>
      </summary>
      <param name="target">Преобразование для размещения в точке поворота сцены.</param>
    </member>
    <member name="M:UnityEditor.SceneView.RepaintAll">
      <summary>
        <para>Перерисовывает каждый открытый SceneView.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneView.ResetCameraSettings">
      <summary>
        <para>Сбрасывает настройки камеры для камеры SceneView по умолчанию.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SceneView.SceneViewState">
      <summary>
        <para>Коллекция графических настроек для этого SceneView. Все графические настройки являются логическими.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.SceneViewState.allEnabled">
      <summary>
        <para>Включены ли все графические настройки для этого SceneViewState.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.SceneViewState.alwaysRefresh">
      <summary>
        <para>Следует ли перерисовывать SceneView с фиксированным интервалом.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.SceneViewState.alwaysRefreshEnabled">
      <summary>
        <para>Следует ли перерисовывать SceneView с фиксированным интервалом.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.SceneViewState.flaresEnabled">
      <summary>
        <para>Визуализируются ли блики линз в этом SceneView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.SceneViewState.fogEnabled">
      <summary>
        <para>Отрисовывается ли туман в этом SceneView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.SceneViewState.fxEnabled">
      <summary>
        <para>Следует ли визуализировать (если включено) эффекты в этом SceneView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.SceneViewState.imageEffectsEnabled">
      <summary>
        <para>Будут ли визуализированы эффекты изображения (постобработка) в этом SceneView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.SceneViewState.materialUpdateEnabled">
      <summary>
        <para>Отрисовываются ли анимированные материалы в этом SceneView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.SceneViewState.particleSystemsEnabled">
      <summary>
        <para>Отрисовываются ли системы частиц в этом SceneView.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneView.SceneViewState.showFlares">
      <summary>
        <para>Включен ли рендеринг бликов в этом SceneView.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneView.SceneViewState.showFog">
      <summary>
        <para>Включен ли рендеринг тумана в этом SceneView.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneView.SceneViewState.showImageEffects">
      <summary>
        <para>Включен ли рендеринг эффектов изображения (постобработка) в этом SceneView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.SceneViewState.showMaterialUpdate">
      <summary>
        <para>Включен ли рендеринг анимированных материалов в этом SceneView.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneView.SceneViewState.showParticleSystems">
      <summary>
        <para>Включен ли рендеринг систем частиц в этом SceneView.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneView.SceneViewState.showSkybox">
      <summary>
        <para>Включен ли рендеринг скайбокса в этом SceneView.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneView.SceneViewState.showVisualEffectGraphs">
      <summary>
        <para>Включен ли рендеринг графиков визуальных эффектов в этом SceneView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.SceneViewState.skyboxEnabled">
      <summary>
        <para>Отображается ли скайбокс в этом SceneView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.SceneViewState.visualEffectGraphsEnabled">
      <summary>
        <para>Отрисовываются ли графы визуальных эффектов в этом SceneView.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneView.SceneViewState.#ctor">
      <summary>
        <para>Создает новый SceneViewState либо со значениями по умолчанию, либо со значениями из другого SceneViewState.</para>
      </summary>
      <param name="other">Укажите SceneViewState для копирования значений при создании нового SceneViewState. Если этот параметр не указан, новый SceneViewState создается со значениями по умолчанию.</param>
    </member>
    <member name="M:UnityEditor.SceneView.SceneViewState.#ctor(UnityEditor.SceneView/SceneViewState)">
      <summary>
        <para>Создает новый SceneViewState либо со значениями по умолчанию, либо со значениями из другого SceneViewState.</para>
      </summary>
      <param name="other">Укажите SceneViewState для копирования значений при создании нового SceneViewState. Если этот параметр не указан, новый SceneViewState создается со значениями по умолчанию.</param>
    </member>
    <member name="M:UnityEditor.SceneView.SceneViewState.SetAllEnabled(System.Boolean)">
      <summary>
        <para>Устанавливает для всех графических настроек для этого SceneViewState значение true или false.</para>
      </summary>
      <param name="value">Новое значение для всех графических настроек в этом SceneViewState. Возможные значения: true или false.</param>
    </member>
    <member name="M:UnityEditor.SceneView.SetSceneViewShaderReplace(UnityEngine.Shader,System.String)">
      <summary>
        <para>Задает замещающий шейдер для рендеринга этого вида сцены.</para>
      </summary>
      <param name="shader">Заменяющий шейдер.</param>
      <param name="replaceString">Замещающий тег шейдера.</param>
    </member>
    <member name="M:UnityEditor.SceneView.SupportsStageHandling">
      <summary>
        <para>Переопределите этот метод, чтобы контролировать, должно ли представление сцены изменяться при переключении с одного этапа на другой.</para>
      </summary>
      <returns>
        <para>Истинно, если представление сцены автоматически реагирует на изменения сцены.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.SceneViewCameraWindow">
      <summary>
        <para>Используйте этот класс для создания экземпляра окна SceneViewCameraWindow.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.SceneViewCameraWindow.additionalSettingsGui(System.Action`1&lt;UnityEditor.SceneView&gt;)">
      <summary>
        <para>Подпишитесь на это событие, чтобы получать обратный вызов при вызове функции SceneViewCameraWindow.OnGUI.</para>
      </summary>
      <param name="value">SceneView, открывающий окно SceneViewCameraWindow.</param>
    </member>
    <member name="M:UnityEditor.SceneViewCameraWindow.#ctor(UnityEditor.SceneView)">
      <summary>
        <para>Создает экземпляр окна SceneViewCameraWindow.</para>
      </summary>
      <param name="sceneView">SceneView, просматриваемый окном SceneViewCameraWindow.</param>
    </member>
    <member name="M:UnityEditor.SceneViewCameraWindow.GetWindowSize">
      <summary>
        <para>Получает размеры окна SceneViewCameraWindow.</para>
      </summary>
      <returns>
        <para>Возвращает ширину и высоту окна SceneViewCameraWindow.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneViewCameraWindow.OnGUI(UnityEngine.Rect)">
      <summary>
        <para>Обратный вызов, используемый для рисования элементов управления GUI окна SceneViewCameraWindow.</para>
      </summary>
      <param name="rect">Прямоугольник, в котором отображаются элементы управления GUI.</param>
    </member>
    <member name="T:UnityEditor.SceneVisibilityManager">
      <summary>
        <para>Управляет видимостью сцены в редакторе.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.SceneVisibilityManager.pickingChanged(System.Action)">
      <summary>
        <para>Событие возникает всякий раз, когда изменяется состояние выбора GameObject.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="?:UnityEditor.SceneVisibilityManager.visibilityChanged(System.Action)">
      <summary>
        <para>Событие возникает всякий раз, когда изменяется видимость GameObject.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.AreAllDescendantsHidden(UnityEngine.GameObject)">
      <summary>
        <para>Проверяет, скрыты ли все потомки GameObject.</para>
      </summary>
      <param name="gameObject">GameObject для проверки.</param>
      <returns>
        <para>Возвращает true, если все потомки скрыты.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.AreAllDescendantsHidden(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Проверяет, скрыты ли корневые игровые объекты и все их потомки в сцене.</para>
      </summary>
      <param name="scene">Сцена для проверки.</param>
      <returns>
        <para>Возвращает true, если все корневые игровые объекты сцены и все их потомки скрыты.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.AreAllDescendantsVisible(UnityEngine.GameObject)">
      <summary>
        <para>Проверяет, видны ли все потомки.</para>
      </summary>
      <param name="gameObject">GameObject для проверки.</param>
      <returns>
        <para>Возвращает true, если видны все потомки GameObject.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.AreAnyDescendantsHidden(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Проверяет, скрыты ли какие-либо потомки.</para>
      </summary>
      <param name="scene">Сцена для проверки.</param>
      <returns>
        <para>Возвращает true, если найден хотя бы один скрытый потомок.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.DisableAllPicking">
      <summary>
        <para>Отключает выбор всех игровых объектов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.DisablePicking(UnityEngine.GameObject,System.Boolean)">
      <summary>
        <para>Отключает выбор игрового объекта или массива игровых объектов и их потомков.</para>
      </summary>
      <param name="gameObject">GameObject, для которого нужно отключить выбор.</param>
      <param name="includeDescendants">Включать ли потомков.</param>
      <param name="gameObjects">Массив GameObjects, для которых нужно отключить выбор.</param>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.DisablePicking(UnityEngine.GameObject[],System.Boolean)">
      <summary>
        <para>Отключает выбор игрового объекта или массива игровых объектов и их потомков.</para>
      </summary>
      <param name="gameObject">GameObject, для которого нужно отключить выбор.</param>
      <param name="includeDescendants">Включать ли потомков.</param>
      <param name="gameObjects">Массив GameObjects, для которых нужно отключить выбор.</param>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.DisablePicking(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Отключает выбор всех игровых объектов в сцене.</para>
      </summary>
      <param name="scene">Сцена, содержащая GameObjects, для которых нужно отключить выбор.</param>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.EnableAllPicking">
      <summary>
        <para>Позволяет выбирать все игровые объекты.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.EnablePicking(UnityEngine.GameObject,System.Boolean)">
      <summary>
        <para>Позволяет выбирать GameObject или массив GameObject и его потомков.</para>
      </summary>
      <param name="includeDescendants">Включать ли потомков.</param>
      <param name="gameObject">GameObject, на котором можно выбрать.</param>
      <param name="gameObjects">Массив игровых объектов, на которых можно выбрать.</param>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.EnablePicking(UnityEngine.GameObject[],System.Boolean)">
      <summary>
        <para>Позволяет выбирать GameObject или массив GameObject и его потомков.</para>
      </summary>
      <param name="includeDescendants">Включать ли потомков.</param>
      <param name="gameObject">GameObject, на котором можно выбрать.</param>
      <param name="gameObjects">Массив игровых объектов, на которых можно выбрать.</param>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.EnablePicking(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Позволяет выбирать все игровые объекты в сцене.</para>
      </summary>
      <param name="scene">Сцена, содержащая GameObjects, на которых можно выбрать.</param>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.ExitIsolation">
      <summary>
        <para>Выход из режима изоляции.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.Hide(UnityEngine.GameObject,System.Boolean)">
      <summary>
        <para>Скрывает GameObject или массив GameObject и их потомков.</para>
      </summary>
      <param name="gameObject">GameObject для скрытия.</param>
      <param name="gameObjects">Массив GameObjects для скрытия.</param>
      <param name="includeDescendants">Следует ли также скрывать потомков.</param>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.Hide(UnityEngine.GameObject[],System.Boolean)">
      <summary>
        <para>Скрывает GameObject или массив GameObject и их потомков.</para>
      </summary>
      <param name="gameObject">GameObject для скрытия.</param>
      <param name="gameObjects">Массив GameObjects для скрытия.</param>
      <param name="includeDescendants">Следует ли также скрывать потомков.</param>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.Hide(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Скрывает все игровые объекты в сцене.</para>
      </summary>
      <param name="scene">Сцена, содержащая игровые объекты, которые нужно скрыть.</param>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.HideAll">
      <summary>
        <para>Скрывает все игровые объекты.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.IsCurrentStageIsolated">
      <summary>
        <para>Проверяет, находится ли текущий этап в режиме изоляции.</para>
      </summary>
      <returns>
        <para>Возвращает true, если текущий этап находится в режиме изоляции. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.IsHidden(UnityEngine.GameObject,System.Boolean)">
      <summary>
        <para>Проверяет скрытое состояние GameObject и, при необходимости, его потомков.</para>
      </summary>
      <param name="gameObject">GameObject для проверки.</param>
      <param name="includeDescendants">Укажите true для проверки GameObject и всех его потомков. Установите значение false, чтобы проверить GameObject.</param>
      <returns>
        <para>Когда includeDescendants имеет значение true, этот метод возвращает значение true, если GameObject и все его потомки скрыты. Если для includeDescendants установлено значение false, этот метод возвращает значение true, если GameObject скрыт.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.Isolate(UnityEngine.GameObject,System.Boolean)">
      <summary>
        <para>Изолирует GameObject и его потомков.</para>
      </summary>
      <param name="gameObject">GameObject для изоляции.</param>
      <param name="includeDescendants">Включать ли потомков.</param>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.Isolate(UnityEngine.GameObject[],System.Boolean)">
      <summary>
        <para>Изолирует массив игровых объектов и их потомков.</para>
      </summary>
      <param name="gameObjects">Массив игровых объектов для изоляции.</param>
      <param name="includeDescendants">Включать ли потомков.</param>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.IsPickingDisabled(UnityEngine.GameObject,System.Boolean)">
      <summary>
        <para>Проверяет состояние выбора GameObject и, при необходимости, его потомков.</para>
      </summary>
      <param name="gameObject">GameObject для проверки.</param>
      <param name="includeDescendants">Укажите true для проверки GameObject и всех его потомков. Установите значение false, чтобы проверить GameObject.</param>
      <returns>
        <para>Если для includeDescendants установлено значение true, этот метод возвращает значение true, если для GameObject и всех его потомков выбор отключен. Если для includeDescendants установлено значение false, этот метод возвращает значение true, если для GameObject отключен выбор.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.IsPickingDisabledOnAllDescendants(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Проверяет, все ли потомки GameObject отключили выбор.</para>
      </summary>
      <param name="scene">Сцена для проверки.</param>
      <returns>
        <para>Возвращает true, если у всех потомков отключен выбор.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.IsPickingDisabledOnAllDescendants(UnityEngine.GameObject)">
      <summary>
        <para>Проверяет, отключен ли выбор корневых игровых объектов и всех их потомков в сцене.</para>
      </summary>
      <param name="gameObject">GameObject для проверки.</param>
      <returns>
        <para>Возвращает true, если для всех корневых игровых объектов сцены и всех их потомков выбор отключен.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.IsPickingDisabledOnAnyDescendant(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Проверяет, отключен ли выбор потомков.</para>
      </summary>
      <param name="scene">Сцена для проверки.</param>
      <returns>
        <para>Возвращает true, если найден хотя бы один потомок с отключенным выбором.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.IsPickingEnabledOnAllDescendants(UnityEngine.GameObject)">
      <summary>
        <para>Проверяет, все ли потомки доступны для выбора.</para>
      </summary>
      <param name="gameObject">GameObject для проверки.</param>
      <returns>
        <para>Возвращает true, если все потомки GameObject доступны для выбора.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.Show(UnityEngine.GameObject,System.Boolean)">
      <summary>
        <para>Показывает GameObject или массив GameObject и его потомков.</para>
      </summary>
      <param name="gameObject">GameObject для отображения.</param>
      <param name="gameObjects">Массив игровых объектов для отображения.</param>
      <param name="includeDescendants">Включать ли потомков.</param>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.Show(UnityEngine.GameObject[],System.Boolean)">
      <summary>
        <para>Показывает GameObject или массив GameObject и его потомков.</para>
      </summary>
      <param name="gameObject">GameObject для отображения.</param>
      <param name="gameObjects">Массив игровых объектов для отображения.</param>
      <param name="includeDescendants">Включать ли потомков.</param>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.Show(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Показывает все игровые объекты в сцене.</para>
      </summary>
      <param name="scene">Сцена, содержащая игровые объекты для показа.</param>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.ShowAll">
      <summary>
        <para>Показывает все игровые объекты.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.TogglePicking(UnityEngine.GameObject,System.Boolean)">
      <summary>
        <para>Переключает возможность выбора GameObject.</para>
      </summary>
      <param name="gameObject">GameObject, на котором можно переключать способность выбора.</param>
      <param name="includeDescendants">Включать ли потомков.</param>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.ToggleVisibility(UnityEngine.GameObject,System.Boolean)">
      <summary>
        <para>Переключает видимое состояние GameObject.</para>
      </summary>
      <param name="gameObject">GameObject, на котором можно переключать видимость.</param>
      <param name="includeDescendants">Включать ли потомков.</param>
    </member>
    <member name="T:UnityEditor.ScriptableSingleton`1">
      <summary>
        <para>Общий класс для хранения состояния редактора.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ScriptableSingleton_1.instance">
      <summary>
        <para>Получает экземпляр Singleton. Unity создает экземпляр Singleton при первом доступе к этому свойству. Если вы используете атрибут FilePathAttribute, Unity также загружает данные при первом доступе.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ScriptableSingleton_1.GetFilePath">
      <summary>
        <para>Получите путь к файлу, в котором сохранен этот ScriptableSingleton.</para>
      </summary>
      <returns>
        <para>Путь к файлу, в котором сохранен этот ScriptableSingleton.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ScriptableSingleton_1.Save(System.Boolean)">
      <summary>
        <para>Сохраняет текущее состояние ScriptableSingleton.</para>
      </summary>
      <param name="saveAsText">Если true, то файл сохраняется как текст, если false — как двоичный.</param>
    </member>
    <member name="T:UnityEditor.ScriptableWizard">
      <summary>
        <para>Наследуйте этот класс, чтобы создать мастер редактирования.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ScriptableWizard.createButtonName">
      <summary>
        <para>Позволяет установить текст, отображаемый на кнопке создания мастера.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ScriptableWizard.errorString">
      <summary>
        <para>Позволяет задать текст ошибки мастера.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ScriptableWizard.helpString">
      <summary>
        <para>Позволяет установить текст справки мастера.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ScriptableWizard.isValid">
      <summary>
        <para>Позволяет включать и отключать кнопку создания мастера, чтобы пользователь не мог ее нажать.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ScriptableWizard.otherButtonName">
      <summary>
        <para>Позволяет вам установить текст, отображаемый на необязательной другой кнопке мастера. Не указывайте этот параметр, чтобы не было кнопки.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ScriptableWizard.DisplayWizard(System.String)">
      <summary>
        <para>Создает мастер.</para>
      </summary>
      <param name="title">Заголовок, отображаемый в верхней части окна мастера.</param>
      <returns>
        <para>Мастер.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ScriptableWizard.DisplayWizard(System.String,System.String)">
      <summary>
        <para>Создает мастер.</para>
      </summary>
      <param name="title">Заголовок, отображаемый в верхней части окна мастера.</param>
      <param name="createButtonName">Текст, отображаемый на кнопке создания.</param>
      <param name="otherButtonName">Текст, отображаемый на необязательной другой кнопке. Не указывайте этот параметр, чтобы не было кнопки.</param>
      <returns>
        <para>Мастер.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ScriptableWizard.DisplayWizard(System.String,System.String,System.String)">
      <summary>
        <para>Создает мастер.</para>
      </summary>
      <param name="title">Заголовок, отображаемый в верхней части окна мастера.</param>
      <param name="createButtonName">Текст, отображаемый на кнопке создания.</param>
      <param name="otherButtonName">Текст, отображаемый на необязательной другой кнопке. Не указывайте этот параметр, чтобы не было кнопки.</param>
      <returns>
        <para>Мастер.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ScriptableWizard.DisplayWizard(System.String,System.Type,System.String,System.String)">
      <summary>
        <para>Создает мастер.</para>
      </summary>
      <param name="title">Заголовок, отображаемый в верхней части окна мастера.</param>
      <param name="klass">Класс, реализующий мастер. Он должен быть производным от ScriptableWizard.</param>
      <param name="createButtonName">Текст, отображаемый на кнопке создания.</param>
      <param name="otherButtonName">Текст, отображаемый на необязательной другой кнопке. Не указывайте этот параметр, чтобы не было кнопки.</param>
      <returns>
        <para>Мастер.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ScriptableWizard.DrawWizardGUI">
      <summary>
        <para>Будет вызываться для содержимого чертежа, когда ScriptableWizard потребуется обновить свой графический интерфейс.</para>
      </summary>
      <returns>
        <para>Возвращает true, если какое-либо свойство было изменено.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.ScriptCallOptimizationLevel">
      <summary>
        <para>Уровень оптимизации вызова скрипта.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ScriptCallOptimizationLevel.FastButNoExceptions">
      <summary>
        <para>Накладные расходы на вызов метода скрипта уменьшились за счет ограниченной совместимости.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ScriptCallOptimizationLevel.SlowAndSafe">
      <summary>
        <para>Настройка по умолчанию.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ScriptCompiler">
      <summary>
        <para>Представляет различные компиляторы C#, которые можно использовать для компиляции сценариев C#.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ScriptCompiler.Mono">
      <summary>
        <para>Компилятор Mono C#.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ScriptCompiler.Roslyn">
      <summary>
        <para>Компилятор Roslyn C#.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Scripting.ManagedDebugger">
      <summary>
        <para>Представление управляемого отладчика в UnityEditor.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Scripting.ManagedDebugger.debuggerAttached(System.Action`1&lt;System.Boolean&gt;)">
      <summary>
        <para>Это событие запускается всякий раз, когда управляемый отладчик подключается или отключается.</para>
      </summary>
      <param name="value">если отладчик подключен или нет.</param>
    </member>
    <member name="P:UnityEditor.Scripting.ManagedDebugger.isAttached">
      <summary>
        <para>Возвращает true, если к редактору UnityEditor подключен управляемый отладчик, или false, если нет.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Scripting.ManagedDebugger.isEnabled">
      <summary>
        <para>Возвращает true, если управляемый отладчик включен, или false, если нет.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Scripting.ManagedDebugger.Disconnect">
      <summary>
        <para>Отключает управляемый отладчик, подключенный к редактору UnityEditor.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ScriptingImplementation">
      <summary>
        <para>Реализация скриптов (бэкэнд).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ScriptingImplementation.IL2CPP">
      <summary>
        <para>Среда выполнения Unity .NET.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ScriptingImplementation.Mono2x">
      <summary>
        <para>Стандартная среда выполнения Mono 2.6.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ScriptingImplementation.WinRTDotNET">
      <summary>
        <para>Среда выполнения Microsoft .NET.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ScriptingRuntimeVersion">
      <summary>
        <para>Доступные среды выполнения сценариев для использования редактором и игроками.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ScriptingRuntimeVersion.Latest">
      <summary>
        <para>Используйте самую последнюю доступную версию среды выполнения сценариев.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ScriptingRuntimeVersion.Legacy">
      <summary>
        <para>Используйте стабильную версию среды выполнения сценариев.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.SearchService.IFilterEngine_1">
      <summary>
        <para>Базовый интерфейс для поисковых систем, реализующих операцию фильтрации.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SearchService.IFilterEngine_1.Filter(UnityEditor.SearchService.ISearchContext,System.String,T)">
      <summary>
        <para>Эта функция проверяет, удовлетворяет ли указанный элемент поисковому запросу.</para>
      </summary>
      <param name="context">Контекст поиска.</param>
      <param name="query">Строка запроса, используемая для поиска.</param>
      <param name="objectToFilter">Элемент для проверки поискового запроса.</param>
      <returns>
        <para>Истина, если элемент удовлетворяет поисковому запросу, в противном случае — ложь.</para>
      </returns>
    </member>
    <member name="?:UnityEditor.SearchService.IObjectSelectorEngine">
      <summary>
        <para>Интерфейс, который реализуют механизмы ObjectSelector. Он наследуется от SearchService.ISelectorEngine.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.SearchService.IProjectSearchEngine">
      <summary>
        <para>Интерфейс для механизмов Project для реализации. Он наследуется от SearchService.ISearchEngine_1.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.SearchService.ISceneSearchEngine">
      <summary>
        <para>Интерфейс для реализации движков сцены. Он наследуется от SearchService.IFilterEngine_1.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.SearchService.ISearchContext">
      <summary>
        <para>Базовый интерфейс для контекстов поиска.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ISearchContext.engineScope">
      <summary>
        <para>Перечисление, определяющее текущую область поиска.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ISearchContext.guid">
      <summary>
        <para>Уникальный идентификатор для этого контекста поиска.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ISearchContext.requiredTypeNames">
      <summary>
        <para>IEnumerable строк, содержащих ограничения имени типа для этого поиска.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ISearchContext.requiredTypes">
      <summary>
        <para>IEnumerable типов, содержащих ограничения типов для этого поиска.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.SearchService.ISearchEngine_1">
      <summary>
        <para>Базовый интерфейс для поисковых систем, реализующих операцию поиска.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SearchService.ISearchEngine_1.Search(UnityEditor.SearchService.ISearchContext,System.String,System.Action`1&lt;System.Collections.Generic.IEnumerable`1&lt;T&gt;&gt;)">
      <summary>
        <para>Эта функция возвращает IEnumerable элементов, удовлетворяющих поисковому запросу.</para>
      </summary>
      <param name="context">Контекст поиска.</param>
      <param name="query">Строка запроса, используемая для поиска.</param>
      <param name="asyncItemsReceived">Обратный вызов используется для асинхронного возврата результатов.</param>
      <returns>
        <para>Исходные результаты поиска, если таковые имеются. Если вы хотите вернуть результаты асинхронно, а результатов пока нет, вместо этого верните пустой список. Если вы возвращаете null, Unity использует реализацию по умолчанию.</para>
      </returns>
    </member>
    <member name="?:UnityEditor.SearchService.ISearchEngineBase">
      <summary>
        <para>Базовый интерфейс для всех поисковых систем.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ISearchEngineBase.name">
      <summary>
        <para>Имя, отображаемое в окне «Настройки» в редакторе Unity. Это имя используется для хранения активного движка в настройках.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SearchService.ISearchEngineBase.BeginSearch(UnityEditor.SearchService.ISearchContext,System.String)">
      <summary>
        <para>Функция, вызываемая в начале каждого поиска.</para>
      </summary>
      <param name="context">Контекст поиска.</param>
      <param name="query">Строка запроса, используемая для поиска.</param>
    </member>
    <member name="M:UnityEditor.SearchService.ISearchEngineBase.BeginSession(UnityEditor.SearchService.ISearchContext)">
      <summary>
        <para>Функция, вызываемая в начале сеанса поиска.</para>
      </summary>
      <param name="context">Контекст поиска.</param>
    </member>
    <member name="M:UnityEditor.SearchService.ISearchEngineBase.EndSearch(UnityEditor.SearchService.ISearchContext)">
      <summary>
        <para>Функция, вызываемая в конце поиска.</para>
      </summary>
      <param name="context">Контекст поиска.</param>
    </member>
    <member name="M:UnityEditor.SearchService.ISearchEngineBase.EndSession(UnityEditor.SearchService.ISearchContext)">
      <summary>
        <para>Функция, вызываемая в конце сеанса поиска.</para>
      </summary>
      <param name="context">Контекст поиска.</param>
    </member>
    <member name="?:UnityEditor.SearchService.ISelectorEngine">
      <summary>
        <para>Базовый интерфейс для поисковых систем, реализующих операцию выбора объекта.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SearchService.ISelectorEngine.SelectObject(UnityEditor.SearchService.ISearchContext,System.Action`2&lt;UnityEngine.Object,System.Boolean&gt;,System.Action`1&lt;UnityEngine.Object&gt;)">
      <summary>
        <para>Эта функция вызывается, когда необходимо открыть окно для выполнения операции поиска и выбора.</para>
      </summary>
      <param name="context">Контекст поиска.</param>
      <param name="onObjectSelectorClosed">Обратный вызов для вызова при закрытии окна селектора. Обратный вызов принимает два аргумента. Первый аргумент — это выбранный объект или нуль, если его нет. Второе — это логическое значение, указывающее, была ли операция отменена или нет.</param>
      <param name="onObjectSelectedUpdated">Обратный вызов для вызова при изменении выделения в окне. Этот обратный вызов принимает один аргумент: выбранный объект или null, если нет.</param>
      <returns>
        <para>Истина, если поисковая система обрабатывает операцию выбора объекта, в противном случае — ложь. Если возвращается false, вместо этого используется селектор объектов по умолчанию.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SearchService.ISelectorEngine.SetSearchFilter(UnityEditor.SearchService.ISearchContext,System.String)">
      <summary>
        <para>Эта функция вызывается, когда задан начальный текст поиска для окна селектора объектов.</para>
      </summary>
      <param name="context">Контекст поиска.</param>
      <param name="searchFilter">Фильтр поиска для установки в окне выбора объектов.</param>
    </member>
    <member name="T:UnityEditor.SearchService.ObjectSelector">
      <summary>
        <para>Используйте этот API для выбора объектов. Механизмы для этого типа поиска реализуют интерфейс SearchService.IObjectSelectorEngine.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SearchService.ObjectSelector.EngineScope">
      <summary>
        <para>Перечисление, указывающее область поиска механизмов ObjectSelector. Используется ObjectSelectorSearchContext.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SearchService.ObjectSelector.RegisterEngine(UnityEditor.SearchService.IObjectSelectorEngine)">
      <summary>
        <para>Динамически регистрирует поисковую систему ObjectSelector.</para>
      </summary>
      <param name="engine">Поисковая система ObjectSelector для регистрации.</param>
    </member>
    <member name="M:UnityEditor.SearchService.ObjectSelector.UnregisterEngine(UnityEditor.SearchService.IObjectSelectorEngine)">
      <summary>
        <para>Отменяет регистрацию динамически зарегистрированного ядра.</para>
      </summary>
      <param name="engine">Поисковая система ObjectSelector для отмены регистрации.</param>
    </member>
    <member name="T:UnityEditor.SearchService.ObjectSelectorEngineAttribute">
      <summary>
        <para>Используйте этот атрибут класса для автоматической регистрации поисковых систем ObjectSelector. Поисковые системы с этим атрибутом должны реализовать интерфейс SearchService.IObjectSelectorEngine.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SearchService.ObjectSelectorHandlerAttribute">
      <summary>
        <para>Атрибут класса, который позволяет определить динамическое ограничение для поля MonoBehavior или ScriptableObject для селектора объектов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ObjectSelectorHandlerAttribute.attributeType">
      <summary>
        <para>Тип атрибута.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SearchService.ObjectSelectorHandlerAttribute.#ctor(System.Type)">
      <summary>
        <para>Конструктор, используемый для объявления SearchService.ObjectSelectorHandlerAttribute в методе.</para>
      </summary>
      <param name="attributeType">Тип атрибута.</param>
    </member>
    <member name="T:UnityEditor.SearchService.ObjectSelectorSearch">
      <summary>
        <para>Используйте этот API для выбора объектов. Механизмы для этого типа поиска реализуют интерфейс SearchService.IObjectSelectorEngine.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SearchService.ObjectSelectorSearch.EngineScope">
      <summary>
        <para>Перечисление, указывающее область поиска механизмов ObjectSelectorSearch. Используется ObjectSelectorSearchContext.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SearchService.ObjectSelectorSearch.RegisterEngine(UnityEditor.SearchService.IObjectSelectorEngine)">
      <summary>
        <para>Динамически регистрирует поисковую систему ObjectSelector.</para>
      </summary>
      <param name="engine">Поисковая система ObjectSelector для регистрации.</param>
    </member>
    <member name="M:UnityEditor.SearchService.ObjectSelectorSearch.UnregisterEngine(UnityEditor.SearchService.IObjectSelectorEngine)">
      <summary>
        <para>Отменяет регистрацию динамически зарегистрированного ядра.</para>
      </summary>
      <param name="engine">Поисковая система ObjectSelector для отмены регистрации.</param>
    </member>
    <member name="T:UnityEditor.SearchService.ObjectSelectorSearchContext">
      <summary>
        <para>Реализация контекста поиска для поисковых систем ObjectSelector. Все методы, вызываемые в поисковой системе ObjectSelector и ожидающие SearchService.ISearchContext, получают объект этого типа.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ObjectSelectorSearchContext.allowedInstanceIds">
      <summary>
        <para>IEnumerable целых чисел, который содержит instanceId объектов, которые поиск может включать в свои результаты.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ObjectSelectorSearchContext.currentObject">
      <summary>
        <para>Идентифицирует текущий выбранный объект.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ObjectSelectorSearchContext.editedObjects">
      <summary>
        <para>Когда селектор объектов открывается из Инспектора, это свойство указывает, какие объекты редактируются в данный момент.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ObjectSelectorSearchContext.engineScope">
      <summary>
        <para>Перечисление, определяющее область текущего поиска. Этому свойству автоматически присваивается значение SearchService.ObjectSelector.EngineScope.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ObjectSelectorSearchContext.guid">
      <summary>
        <para>Уникальный идентификатор для этого контекста поиска.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ObjectSelectorSearchContext.requiredTypeNames">
      <summary>
        <para>IEnumerable строк, содержащих ограничения имени типа для этого поиска.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ObjectSelectorSearchContext.requiredTypes">
      <summary>
        <para>IEnumerable типов, который содержит ограничения типа для этого поиска.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ObjectSelectorSearchContext.selectorConstraint">
      <summary>
        <para>Функция, которая при вызове указывает, должен ли селектор объектов отображать элемент.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ObjectSelectorSearchContext.visibleObjects">
      <summary>
        <para>Указывает, какие категории объектов видны в окне. Например, GameObjects, Assets или и то, и другое.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SearchService.ObjectSelectorTargetInfo">
      <summary>
        <para>Структура, содержащая информацию об элементе, который должен быть показан.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ObjectSelectorTargetInfo.globalObjectId">
      <summary>
        <para>Глобальный идентификатор объекта. Он всегда действителен.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ObjectSelectorTargetInfo.targetObject">
      <summary>
        <para>Если объект уже загружен в Unity, это его экземпляр. Экземпляр может быть нулевым.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ObjectSelectorTargetInfo.type">
      <summary>
        <para>Если объект в данный момент загружен в Unity, это его базовый тип. Тип может быть нулевым.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SearchService.ObjectSelectorTargetInfo.#ctor(UnityEditor.GlobalObjectId,UnityEngine.Object,System.Type)">
      <summary>
        <para>Создает ObjectSelectorTargetInfo.</para>
      </summary>
      <param name="globalObjectId">Глобальный идентификатор объекта.</param>
      <param name="targetObject">Экземпляр объекта. Может быть нулевым, если объект не загружен.</param>
      <param name="type">Базовый тип объекта. Может быть нулевым, если объект не загружен.</param>
    </member>
    <member name="M:UnityEditor.SearchService.ObjectSelectorTargetInfo.LoadObject">
      <summary>
        <para>Загружает экземпляр объекта, если он еще не загружен в Unity. Это может вернуть значение null, если объект является частью незагруженной сцены или префаба.</para>
      </summary>
      <returns>
        <para>Экземпляр объекта.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.SearchService.Project">
      <summary>
        <para>Используйте этот API для выполнения поиска в проекте. Механизмы для этого типа поиска реализуют интерфейс SearchService.IProjectSearchEngine.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SearchService.Project.EngineScope">
      <summary>
        <para>Перечисление, указывающее область поиска для механизмов Project. Он используется ProjectSearchContext.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SearchService.Project.RegisterEngine(UnityEditor.SearchService.IProjectSearchEngine)">
      <summary>
        <para>Динамически регистрирует поисковую систему Project.</para>
      </summary>
      <param name="engine">Поисковая система проекта для регистрации.</param>
    </member>
    <member name="M:UnityEditor.SearchService.Project.UnregisterEngine(UnityEditor.SearchService.IProjectSearchEngine)">
      <summary>
        <para>Отменяет регистрацию динамически зарегистрированного ядра.</para>
      </summary>
      <param name="engine">Поисковая система Project, регистрацию которой необходимо отменить.</param>
    </member>
    <member name="T:UnityEditor.SearchService.ProjectSearch">
      <summary>
        <para>Используйте этот API для выполнения поиска в проекте. Механизмы для этого типа поиска реализуют интерфейс SearchService.IProjectSearchEngine.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SearchService.ProjectSearch.EngineScope">
      <summary>
        <para>Перечисление, указывающее область поиска для систем ProjectSearch. Он используется ProjectSearchContext.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SearchService.ProjectSearch.RegisterEngine(UnityEditor.SearchService.IProjectSearchEngine)">
      <summary>
        <para>Динамически регистрирует поисковую систему Project.</para>
      </summary>
      <param name="engine">Поисковая система проекта для регистрации.</param>
    </member>
    <member name="M:UnityEditor.SearchService.ProjectSearch.UnregisterEngine(UnityEditor.SearchService.IProjectSearchEngine)">
      <summary>
        <para>Отменяет регистрацию динамически зарегистрированного ядра.</para>
      </summary>
      <param name="engine">Поисковая система Project, регистрацию которой необходимо отменить.</param>
    </member>
    <member name="T:UnityEditor.SearchService.ProjectSearchContext">
      <summary>
        <para>Реализация контекста поиска для поисковых систем Project. Все методы, вызываемые в поисковой системе Project и ожидающие SearchService.ISearchContext, получают объект этого типа.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ProjectSearchContext.engineScope">
      <summary>
        <para>Перечисление, определяющее область текущего поиска. Этому свойству автоматически присваивается значение SearchService.Project.EngineScope.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ProjectSearchContext.guid">
      <summary>
        <para>Уникальный идентификатор для этого контекста поиска.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ProjectSearchContext.requiredTypeNames">
      <summary>
        <para>IEnumerable строк, содержащих ограничения имени типа для этого поиска.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ProjectSearchContext.requiredTypes">
      <summary>
        <para>IEnumerable типов, который содержит ограничения типа для этого поиска.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SearchService.ProjectSearchEngineAttribute">
      <summary>
        <para>Атрибут класса, который автоматически регистрирует поисковые системы Project. Поисковые системы с этим атрибутом должны реализовать интерфейс SearchService.IProjectSearchEngine.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SearchService.Scene">
      <summary>
        <para>Используйте этот API для выполнения поиска в сцене. Механизмы для этого типа поиска реализуют интерфейс SearchService.ISceneSearchEngine.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SearchService.Scene.EngineScope">
      <summary>
        <para>Перечисление, указывающее область поиска для механизмов сцены. Он используется SceneSearchContext.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SearchService.Scene.RegisterEngine(UnityEditor.SearchService.ISceneSearchEngine)">
      <summary>
        <para>Динамически регистрирует поисковую систему сцены.</para>
      </summary>
      <param name="engine">Система поиска сцен для регистрации.</param>
    </member>
    <member name="M:UnityEditor.SearchService.Scene.UnregisterEngine(UnityEditor.SearchService.ISceneSearchEngine)">
      <summary>
        <para>Отменяет регистрацию динамически зарегистрированного ядра.</para>
      </summary>
      <param name="engine">Система поиска сцены для отмены регистрации.</param>
    </member>
    <member name="T:UnityEditor.SearchService.SceneSearch">
      <summary>
        <para>Используйте этот API для выполнения поиска в сцене. Механизмы для этого типа поиска реализуют интерфейс SearchService.ISceneSearchEngine.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SearchService.SceneSearch.EngineScope">
      <summary>
        <para>Перечисление, указывающее область поиска для механизмов SceneSearch. Он используется SceneSearchContext.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SearchService.SceneSearch.RegisterEngine(UnityEditor.SearchService.ISceneSearchEngine)">
      <summary>
        <para>Динамически регистрирует поисковую систему сцены.</para>
      </summary>
      <param name="engine">Система поиска сцен для регистрации.</param>
    </member>
    <member name="M:UnityEditor.SearchService.SceneSearch.UnregisterEngine(UnityEditor.SearchService.ISceneSearchEngine)">
      <summary>
        <para>Отменяет регистрацию динамически зарегистрированного ядра.</para>
      </summary>
      <param name="engine">Система поиска сцены для отмены регистрации.</param>
    </member>
    <member name="T:UnityEditor.SearchService.SceneSearchContext">
      <summary>
        <para>Реализация контекста поиска для поисковых систем сцены. Все методы, вызываемые в поисковой системе Scene и ожидающие SearchService.ISearchContext, получают объект этого типа.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.SceneSearchContext.engineScope">
      <summary>
        <para>Перечисление, определяющее область текущего поиска. Этому свойству автоматически присваивается значение SearchService.Scene.EngineScope.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.SceneSearchContext.guid">
      <summary>
        <para>Уникальный идентификатор для этого контекста поиска.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.SceneSearchContext.requiredTypeNames">
      <summary>
        <para>IEnumerable строк, содержащих ограничения имени типа для этого поиска.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.SceneSearchContext.requiredTypes">
      <summary>
        <para>IEnumerable типов, который содержит ограничения типа для этого поиска.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.SceneSearchContext.rootProperty">
      <summary>
        <para>Корневое свойство HierarchyProperty, для которого запускается поиск.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SearchService.SceneSearchEngineAttribute">
      <summary>
        <para>Атрибут класса, который автоматически регистрирует поисковые системы сцены. Поисковые системы с этим атрибутом должны реализовать интерфейс SearchService.ISceneSearchEngine.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SearchService.SearchEngineScope">
      <summary>
        <para>Перечисление, содержащее доступные области действия поисковой системы.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SearchService.SearchEngineScope.ObjectSelector">
      <summary>
        <para>Идентифицирует механизм поиска ObjectSelector.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SearchService.SearchEngineScope.Project">
      <summary>
        <para>Идентифицирует поиск для механизмов Project.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SearchService.SearchEngineScope.Scene">
      <summary>
        <para>Идентифицирует поиск движков сцен.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SearchService.VisibleObjects">
      <summary>
        <para>Битовое поле, содержащее различные категории объектов, которые могут отображаться в окне выбора объектов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SearchService.VisibleObjects.All">
      <summary>
        <para>Окно выбора объектов может отображать все категории.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SearchService.VisibleObjects.Assets">
      <summary>
        <para>Окно выбора объектов может отображать только активы.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SearchService.VisibleObjects.None">
      <summary>
        <para>Окно выбора объектов не может отображать какие-либо объекты.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SearchService.VisibleObjects.Scene">
      <summary>
        <para>Окно выбора объектов может отображать только игровые объекты.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Selection">
      <summary>
        <para>Доступ к выделению в редакторе.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Selection.activeContext">
      <summary>
        <para>Возвращает текущий объект контекста, заданный через SetActiveObjectWithContext.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Selection.activeGameObject">
      <summary>
        <para>Возвращает активный игровой объект. (Тот, что показан в инспекторе).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Selection.activeInstanceID">
      <summary>
        <para>Возвращает instanceID фактического выбора объекта. Включает префабы, неизменяемые объекты.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Selection.activeObject">
      <summary>
        <para>Возвращает фактический выбор объекта. Включает префабы, неизменяемые объекты.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Selection.activeTransform">
      <summary>
        <para>Возвращает активное преобразование. (Тот, что показан в инспекторе).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Selection.assetGUIDs">
      <summary>
        <para>Возвращает идентификаторы выбранных ресурсов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Selection.count">
      <summary>
        <para>Возвращает количество объектов в Selection.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Selection.gameObjects">
      <summary>
        <para>Возвращает фактический выбор игрового объекта. Включает префабы, неизменяемые объекты.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Selection.instanceIDs">
      <summary>
        <para>Фактическое нефильтрованное выделение из сцены возвращается в виде идентификаторов экземпляров, а не объектов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Selection.objects">
      <summary>
        <para>Фактическое нефильтрованное выделение из сцены.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Selection.selectionChanged">
      <summary>
        <para>Обратный вызов делегата срабатывает при изменении текущего активного/выбранного элемента.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Selection.transforms">
      <summary>
        <para>Возвращает выбор верхнего уровня, за исключением сборных элементов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Selection.Contains(System.Int32)">
      <summary>
        <para>Возвращает, содержится ли объект в текущем выборе.</para>
      </summary>
      <param name="instanceID">
      </param>
      <param name="obj">
      </param>
    </member>
    <member name="M:UnityEditor.Selection.Contains(UnityEngine.Object)">
      <summary>
        <para>Возвращает, содержится ли объект в текущем выборе.</para>
      </summary>
      <param name="instanceID">
      </param>
      <param name="obj">
      </param>
    </member>
    <member name="M:UnityEditor.Selection.GetFiltered(System.Type,UnityEditor.SelectionMode)">
      <summary>
        <para>Возвращает текущий выбор, отфильтрованный по типу и режиму.</para>
      </summary>
      <param name="type">Будут извлечены только объекты этого типа.</param>
      <param name="mode">Дополнительные параметры для уточнения выбора.</param>
    </member>
    <member name="M:UnityEditor.Selection.GetTransforms(UnityEditor.SelectionMode)">
      <summary>
        <para>Позволяет детально управлять типом выделения с помощью битовой маски SelectionMode.</para>
      </summary>
      <param name="mode">Опции для уточнения выбора.</param>
    </member>
    <member name="M:UnityEditor.Selection.SetActiveObjectWithContext(UnityEngine.Object,UnityEngine.Object)">
      <summary>
        <para>Выбирает объект с контекстом.</para>
      </summary>
      <param name="obj">Выбранный объект (будет равен activeObject).</param>
      <param name="context">Объект контекста.</param>
    </member>
    <member name="T:UnityEditor.SelectionMode">
      <summary>
        <para>SelectionMode можно использовать для настройки выбора, возвращаемого Selection.GetTransforms.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SelectionMode.Assets">
      <summary>
        <para>Возвращайте только те объекты, которые являются активами в каталоге активов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SelectionMode.Deep">
      <summary>
        <para>Возвращает выделение и все дочерние преобразования выделения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SelectionMode.DeepAssets">
      <summary>
        <para>Если выбор содержит папки, также включите все активы и подпапки в этой папке в файловой иерархии.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SelectionMode.Editable">
      <summary>
        <para>Исключает любые объекты, которые не должны изменяться.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SelectionMode.ExcludePrefab">
      <summary>
        <para>Исключает все префабы из выбора.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SelectionMode.TopLevel">
      <summary>
        <para>Возвращает только самое верхнее выбранное преобразование. Выбранный дочерний элемент другого выбранного преобразования будет отфильтрован.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SelectionMode.Unfiltered">
      <summary>
        <para>Вернуть весь выбор.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SemanticMergeMode">
      <summary>
        <para>Поведение семантического слияния.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SemanticMergeMode.Off">
      <summary>
        <para>Отключить использование семантического слияния.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SerializationUtility">
      <summary>
        <para>Вспомогательные функции, связанные с сериализацией.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SerializationUtility.ClearAllManagedReferencesWithMissingTypes(UnityEngine.Object)">
      <summary>
        <para>Удаляет все управляемые ссылки, у которых отсутствует тип.</para>
      </summary>
      <param name="obj">
      </param>
    </member>
    <member name="M:UnityEditor.SerializationUtility.ClearManagedReferenceWithMissingType(UnityEngine.Object,System.Int64)">
      <summary>
        <para>Отбросьте сериализованные данные, связанные с определенным объектом управляемой ссылки, у которого отсутствует тип.</para>
      </summary>
      <param name="obj">
      </param>
      <param name="id">
      </param>
    </member>
    <member name="M:UnityEditor.SerializationUtility.GetManagedReference(UnityEngine.Object,System.Int64)">
      <summary>
        <para>Извлекает объект на основе его идентификатора управляемой ссылки.</para>
      </summary>
      <param name="obj">
      </param>
      <param name="id">
      </param>
    </member>
    <member name="M:UnityEditor.SerializationUtility.GetManagedReferenceIdForObject(UnityEngine.Object,System.Object)">
      <summary>
        <para>Извлекает идентификатор управляемой ссылки для объекта, на который ссылается с помощью SerializeReference.</para>
      </summary>
      <param name="obj">
      </param>
      <param name="scriptObj">
      </param>
    </member>
    <member name="M:UnityEditor.SerializationUtility.GetManagedReferenceIds(UnityEngine.Object)">
      <summary>
        <para>Извлекает список идентификаторов управляемых ссылок, назначенных объектам, на которые ссылаются с помощью SerializeReference.</para>
      </summary>
      <param name="obj">
      </param>
    </member>
    <member name="M:UnityEditor.SerializationUtility.GetManagedReferencesWithMissingTypes(UnityEngine.Object)">
      <summary>
        <para>Возвращает список управляемых ссылок, которые не удалось десериализовать из-за отсутствующего типа.</para>
      </summary>
      <param name="obj">
      </param>
    </member>
    <member name="M:UnityEditor.SerializationUtility.HasManagedReferencesWithMissingTypes(UnityEngine.Object)">
      <summary>
        <para>Этот API возвращает значение true, если одна или несколько управляемых ссылок не имеют своего типа.</para>
      </summary>
      <param name="obj">
      </param>
    </member>
    <member name="F:UnityEditor.SerializationUtility.RefIdNull">
      <summary>
        <para>Специальное значение -2, используемое в качестве идентификатора управляемой ссылки любого поля, украшенного SerializeReference, которому не назначен объект.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializationUtility.RefIdUnknown">
      <summary>
        <para>Специальное значение, -1, используется, когда идентификатор управляемой ссылки для объекта неизвестен, например, если GetManagedReferenceIdForObject вызывается с недопустимыми аргументами.
</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SerializationUtility.SetManagedReferenceIdForObject(UnityEngine.Object,System.Object,System.Int64)">
      <summary>
        <para>Назначает идентификатор управляемой ссылки объекту, на который ссылается с помощью SerializeReference.</para>
      </summary>
      <param name="obj">
      </param>
      <param name="scriptObj">
      </param>
      <param name="refId">
      </param>
    </member>
    <member name="T:UnityEditor.SerializedObject">
      <summary>
        <para>SerializedObject и SerializedProperty — это классы для редактирования сериализованных полей в объектах Object|Unity совершенно общим способом. Эти классы автоматически обрабатывают загрязнение отдельных сериализованных полей, поэтому они будут обработаны системой отмены и правильно оформлены для переопределений префабов при рисовании в Инспекторе.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedObject.context">
      <summary>
        <para>Контекст, используемый для хранения и разрешения типов ExposedReference. Это задается конструктором SerializedObject.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedObject.forceChildVisibility">
      <summary>
        <para>Управляет видимостью дочерних скрытых полей.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedObject.hasModifiedProperties">
      <summary>
        <para>Имеет значение true, если у SerializedObject есть измененное свойство, которое не было применено.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedObject.isEditingMultipleObjects">
      <summary>
        <para>Представляет ли сериализованный объект несколько объектов из-за редактирования нескольких объектов? (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedObject.maxArraySizeForMultiEditing">
      <summary>
        <para>Определяет максимальный размер, после которого нельзя редактировать массивы при выборе нескольких объектов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedObject.targetObject">
      <summary>
        <para>Проверяемый объект (только для чтения).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedObject.targetObjects">
      <summary>
        <para>Проверяемые объекты (только для чтения).</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SerializedObject.ApplyModifiedProperties">
      <summary>
        <para>Применить изменения свойства.</para>
      </summary>
      <returns>
        <para>Возвращает значение true, если какие-либо ожидающие изменения свойства были применены к SerializedObject.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SerializedObject.ApplyModifiedPropertiesWithoutUndo">
      <summary>
        <para>Применяет изменения свойств без регистрации операции отмены.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SerializedObject.CopyFromSerializedProperty(UnityEditor.SerializedProperty)">
      <summary>
        <para>Копирует значение из SerializedProperty в соответствующее сериализованное свойство сериализованного объекта.</para>
      </summary>
      <param name="prop">
      </param>
    </member>
    <member name="M:UnityEditor.SerializedObject.CopyFromSerializedPropertyIfDifferent(UnityEditor.SerializedProperty)">
      <summary>
        <para>Копирует измененное значение из SerializedProperty в соответствующее сериализованное свойство сериализованного объекта.</para>
      </summary>
      <param name="prop">
      </param>
    </member>
    <member name="M:UnityEditor.SerializedObject.#ctor(UnityEngine.Object)">
      <summary>
        <para>Создать SerializedObject для проверяемого объекта.</para>
      </summary>
      <param name="obj">
      </param>
    </member>
    <member name="M:UnityEditor.SerializedObject.#ctor(UnityEngine.Object[])">
      <summary>
        <para>Создать SerializedObject для проверяемого объекта.</para>
      </summary>
      <param name="objs">
      </param>
    </member>
    <member name="M:UnityEditor.SerializedObject.#ctor(UnityEngine.Object,UnityEngine.Object)">
      <summary>
        <para>Создайте SerializedObject для проверяемого объекта, указав контекст, который будет использоваться для хранения и разрешения типов ExposedReference.</para>
      </summary>
      <param name="obj">
      </param>
      <param name="context">
      </param>
    </member>
    <member name="M:UnityEditor.SerializedObject.#ctor(UnityEngine.Object[],UnityEngine.Object)">
      <summary>
        <para>Создайте SerializedObject для проверяемого объекта, указав контекст, который будет использоваться для хранения и разрешения типов ExposedReference.</para>
      </summary>
      <param name="objs">
      </param>
      <param name="context">
      </param>
    </member>
    <member name="M:UnityEditor.SerializedObject.FindProperty(System.String)">
      <summary>
        <para>Найти сериализованное свойство по имени.</para>
      </summary>
      <param name="propertyPath">
      </param>
    </member>
    <member name="M:UnityEditor.SerializedObject.GetIterator">
      <summary>
        <para>Получите первое сериализованное свойство.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SerializedObject.SetIsDifferentCacheDirty">
      <summary>
        <para>Обновить кэш hasMultipleDifferentValues ​​при следующем вызове Update().</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SerializedObject.Update">
      <summary>
        <para>Обновить представление сериализованного объекта.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SerializedObject.UpdateIfDirtyOrScript">
      <summary>
        <para>Это устарело. Вместо этого см. SerializedObject.UpdateIfRequiredOrScript.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SerializedObject.UpdateIfRequiredOrScript">
      <summary>
        <para>Обновлять представление сериализованного объекта, только если объект был изменен с момента последнего вызова Update или если это скрипт.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SerializedProperty">
      <summary>
        <para>SerializedProperty и SerializedObject — это классы для редактирования свойств объектов полностью универсальным способом, который автоматически обрабатывает отмену, редактирование нескольких объектов и переопределение Prefab.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.animationCurveValue">
      <summary>
        <para>Значение свойства кривой анимации.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.arrayElementType">
      <summary>
        <para>Введите имя элемента в свойстве массива. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.arraySize">
      <summary>
        <para>Количество элементов в массиве.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.boolValue">
      <summary>
        <para>Значение логического свойства.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.boundsIntValue">
      <summary>
        <para>Значение границ со свойством целочисленных значений.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.boundsValue">
      <summary>
        <para>Значение свойства границ.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.colorValue">
      <summary>
        <para>Значение свойства цвета.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.depth">
      <summary>
        <para>Глубина вложенности свойства. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.displayName">
      <summary>
        <para>Красивое отображаемое имя объекта. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.doubleValue">
      <summary>
        <para>Значение свойства float как двойное.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.editable">
      <summary>
        <para>Можно ли изменить это свойство? (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.enumDisplayNames">
      <summary>
        <para>Отображение понятных имен перечисления свойства перечисления.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.enumNames">
      <summary>
        <para>Имена перечисления перечислимого свойства.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.enumValueFlag">
      <summary>
        <para>Представление Int32 свойства enum со смешанными значениями.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.enumValueIndex">
      <summary>
        <para>Индекс перечисления свойства перечисления.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.exposedReferenceValue">
      <summary>
        <para>Ссылка на другой объект в сцене. Эта ссылка разрешается в контексте SerializedObject, содержащего SerializedProperty.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.fixedBufferSize">
      <summary>
        <para>Количество элементов в фиксированном буфере. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.floatValue">
      <summary>
        <para>Значение свойства float.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.hasChildren">
      <summary>
        <para>Есть ли у него дочерние свойства? (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.hash128Value">
      <summary>
        <para>Значение свойства Hash128.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.hasMultipleDifferentValues">
      <summary>
        <para>Представляет ли это свойство несколько разных значений из-за редактирования нескольких объектов? (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.hasVisibleChildren">
      <summary>
        <para>Есть ли у него видимые дочерние свойства? (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.intValue">
      <summary>
        <para>Значение целочисленного свойства.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.isArray">
      <summary>
        <para>Является ли это свойство массивом? (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.isDefaultOverride">
      <summary>
        <para>Позволяет проверить, является ли его свойство переопределением PrefabUtility.IsDefaultOverride|по умолчанию.

Некоторые свойства экземпляров Prefab являются переопределениями по умолчанию.

Дополнительные сведения см. в разделе PrefabUtility.IsDefaultOverride.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.isExpanded">
      <summary>
        <para>Расширено ли это свойство в инспекторе?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.isFixedBuffer">
      <summary>
        <para>Является ли это свойство фиксированным буфером? (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.isInstantiatedPrefab">
      <summary>
        <para>Является ли свойство частью экземпляра Prefab? (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.longValue">
      <summary>
        <para>Значение целочисленного свойства как long.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.managedReferenceFieldTypename">
      <summary>
        <para>Строка, соответствующая значению поля управляемой ссылки полного типа string.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.managedReferenceFullTypename">
      <summary>
        <para>Строка, соответствующая значению объекта управляемой ссылки (динамического) полного типа.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.managedReferenceId">
      <summary>
        <para>Идентификатор, связанный с управляемой ссылкой.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.managedReferenceValue">
      <summary>
        <para>Объект, назначенный полю с атрибутом SerializeReference.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.minArraySize">
      <summary>
        <para>Наименьшее количество элементов в массиве среди всех целевых объектов. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.name">
      <summary>
        <para>Название свойства. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.objectReferenceValue">
      <summary>
        <para>Значение свойства ссылки на объект.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.prefabOverride">
      <summary>
        <para>Позволяет проверить, не переопределено ли значение свойства (т. е. отличается ли значение префаба, которому он принадлежит).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.propertyPath">
      <summary>
        <para>Полный путь к свойству. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.propertyType">
      <summary>
        <para>Тип этого свойства (только для чтения).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.quaternionValue">
      <summary>
        <para>Значение свойства кватерниона.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.rectIntValue">
      <summary>
        <para>Значение прямоугольника со свойством целочисленных значений.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.rectValue">
      <summary>
        <para>Значение свойства прямоугольника.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.serializedObject">
      <summary>
        <para>SerializedObject, которому принадлежит это свойство (только для чтения).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.stringValue">
      <summary>
        <para>Значение строкового свойства.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.tooltip">
      <summary>
        <para>Подсказка свойства. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.type">
      <summary>
        <para>Введите имя свойства. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.vector2IntValue">
      <summary>
        <para>Значение свойства двумерного целочисленного вектора.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.vector2Value">
      <summary>
        <para>Значение свойства 2D-вектора.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.vector3IntValue">
      <summary>
        <para>Значение свойства трехмерного целочисленного вектора.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.vector3Value">
      <summary>
        <para>Значение свойства 3D-вектора.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.vector4Value">
      <summary>
        <para>Значение свойства 4D-вектора.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SerializedProperty.ClearArray">
      <summary>
        <para>Удалить все элементы из массива.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SerializedProperty.Copy">
      <summary>
        <para>Возвращает копию итератора SerializedProperty в его текущем состоянии. Это полезно, если вы хотите сохранить ссылку на текущее свойство, но продолжить итерацию.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SerializedProperty.CountInProperty">
      <summary>
        <para>Подсчет видимых дочерних элементов этого свойства, включая само это свойство.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SerializedProperty.CountRemaining">
      <summary>
        <para>Подсчитайте оставшиеся видимые свойства.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SerializedProperty.DataEquals(UnityEditor.SerializedProperty,UnityEditor.SerializedProperty)">
      <summary>
        <para>Сравнивает данные для двух SerializedProperties. Этот метод игнорирует пути и SerializedObjects.</para>
      </summary>
      <param name="x">
      </param>
      <param name="y">
      </param>
    </member>
    <member name="M:UnityEditor.SerializedProperty.DeleteArrayElementAtIndex(System.Int32)">
      <summary>
        <para>Удалить элемент по указанному индексу в массиве.</para>
      </summary>
      <param name="index">
      </param>
    </member>
    <member name="M:UnityEditor.SerializedProperty.DeleteCommand">
      <summary>
        <para>Удаляет сериализованное свойство.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SerializedProperty.DuplicateCommand">
      <summary>
        <para>Дублирует сериализованное свойство.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SerializedProperty.EqualContents(UnityEditor.SerializedProperty,UnityEditor.SerializedProperty)">
      <summary>
        <para>Проверьте, равны ли содержащиеся сериализованные свойства.</para>
      </summary>
      <param name="x">
      </param>
      <param name="y">
      </param>
    </member>
    <member name="M:UnityEditor.SerializedProperty.FindPropertyRelative(System.String)">
      <summary>
        <para>Извлекает SerializedProperty по относительному пути к текущему свойству.</para>
      </summary>
      <param name="relativePropertyPath">
      </param>
    </member>
    <member name="M:UnityEditor.SerializedProperty.GetArrayElementAtIndex(System.Int32)">
      <summary>
        <para>Возвращает элемент по указанному индексу в массиве.</para>
      </summary>
      <param name="index">
      </param>
    </member>
    <member name="M:UnityEditor.SerializedProperty.GetEndProperty">
      <summary>
        <para>Извлекает SerializedProperty, определяющий конечный диапазон этого свойства.</para>
      </summary>
      <param name="includeInvisible">
      </param>
    </member>
    <member name="M:UnityEditor.SerializedProperty.GetEndProperty(System.Boolean)">
      <summary>
        <para>Извлекает SerializedProperty, определяющий конечный диапазон этого свойства.</para>
      </summary>
      <param name="includeInvisible">
      </param>
    </member>
    <member name="M:UnityEditor.SerializedProperty.GetEnumerator">
      <summary>
        <para>Извлекает итератор для перечисления видимых дочерних свойств текущего свойства. Если свойство является массивом, оно будет перечислять элементы массива.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SerializedProperty.GetFixedBufferElementAtIndex(System.Int32)">
      <summary>
        <para>Возвращает элемент по указанному индексу в фиксированном буфере.</para>
      </summary>
      <param name="index">
      </param>
    </member>
    <member name="M:UnityEditor.SerializedProperty.InsertArrayElementAtIndex(System.Int32)">
      <summary>
        <para>Вставить пустой элемент по указанному индексу в массив.</para>
      </summary>
      <param name="index">
      </param>
    </member>
    <member name="M:UnityEditor.SerializedProperty.MoveArrayElement(System.Int32,System.Int32)">
      <summary>
        <para>Переместите элемент массива из srcIndex в dstIndex.</para>
      </summary>
      <param name="srcIndex">
      </param>
      <param name="dstIndex">
      </param>
    </member>
    <member name="M:UnityEditor.SerializedProperty.Next(System.Boolean)">
      <summary>
        <para>Перейти к следующему свойству.</para>
      </summary>
      <param name="enterChildren">
      </param>
    </member>
    <member name="M:UnityEditor.SerializedProperty.NextVisible(System.Boolean)">
      <summary>
        <para>Перейти к следующему видимому свойству.</para>
      </summary>
      <param name="enterChildren">
      </param>
    </member>
    <member name="M:UnityEditor.SerializedProperty.Reset">
      <summary>
        <para>Перейти к первому свойству объекта.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SerializedPropertyType">
      <summary>
        <para>Тип SerializedProperty.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.AnimationCurve">
      <summary>
        <para>Свойство AnimationCurve.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.ArraySize">
      <summary>
        <para>Свойство размера массива.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.Boolean">
      <summary>
        <para>Логическое свойство.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.Bounds">
      <summary>
        <para>Границы свойства.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.BoundsInt">
      <summary>
        <para>Границы со свойством целочисленных значений.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.Character">
      <summary>
        <para>Свойство символа.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.Color">
      <summary>
        <para>Свойство цвета.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.Enum">
      <summary>
        <para>Свойство перечисления.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.ExposedReference">
      <summary>
        <para>Ссылка на другой объект в сцене.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.FixedBufferSize">
      <summary>
        <para>Свойство фиксированного размера буфера.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.Float">
      <summary>
        <para>Свойство с плавающей запятой или Double.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.Gradient">
      <summary>
        <para>Свойство градиента.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.Hash128">
      <summary>
        <para>Свойство Hash128.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.Integer">
      <summary>
        <para>Целочисленное свойство, например int, byte, short, uint и long. </para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.LayerMask">
      <summary>
        <para>Свойство LayerMask.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.ManagedReference">
      <summary>
        <para>Свойство, которое ссылается на объект, не производный от UnityEngine.Object.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.ObjectReference">
      <summary>
        <para>Ссылка на объект, производный от UnityEngine.Object.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.Quaternion">
      <summary>
        <para>Свойство кватерниона.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.Rect">
      <summary>
        <para>Свойство прямоугольника.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.RectInt">
      <summary>
        <para>Прямоугольник со свойством целочисленных значений.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.String">
      <summary>
        <para>Строковое свойство.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.Vector2">
      <summary>
        <para>Свойство 2D-вектора.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.Vector2Int">
      <summary>
        <para>Свойство двумерного целочисленного вектора.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.Vector3">
      <summary>
        <para>Свойство трехмерного вектора.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.Vector3Int">
      <summary>
        <para>Свойство трехмерного целочисленного вектора.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.Vector4">
      <summary>
        <para>Свойство 4D-вектора.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SessionState">
      <summary>
        <para>SessionState — это хранилище ключей и значений, предназначенное для хранения и извлечения состояния сеанса редактора, которое должно выдержать перезагрузку сборки.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SessionState.EraseBool(System.String)">
      <summary>
        <para>Удалить логическую запись в хранилище ключей и значений.</para>
      </summary>
      <param name="key">
      </param>
    </member>
    <member name="M:UnityEditor.SessionState.EraseFloat(System.String)">
      <summary>
        <para>Удалить запись с плавающей запятой в хранилище ключей и значений.</para>
      </summary>
      <param name="key">
      </param>
    </member>
    <member name="M:UnityEditor.SessionState.EraseInt(System.String)">
      <summary>
        <para>Удалить целочисленную запись в хранилище пар "ключ-значение".</para>
      </summary>
      <param name="key">
      </param>
    </member>
    <member name="M:UnityEditor.SessionState.EraseIntArray(System.String)">
      <summary>
        <para>Удалить запись массива Integer в хранилище ключей и значений.</para>
      </summary>
      <param name="key">
      </param>
    </member>
    <member name="M:UnityEditor.SessionState.EraseString(System.String)">
      <summary>
        <para>Удалить запись String в хранилище ключей и значений.</para>
      </summary>
      <param name="key">
      </param>
    </member>
    <member name="M:UnityEditor.SessionState.EraseVector3(System.String)">
      <summary>
        <para>Удалить запись Vector3 в хранилище ключей и значений.</para>
      </summary>
      <param name="key">
      </param>
    </member>
    <member name="M:UnityEditor.SessionState.GetBool(System.String,System.Boolean)">
      <summary>
        <para>Получить логическое значение.</para>
      </summary>
      <param name="key">
      </param>
      <param name="defaultValue">
      </param>
    </member>
    <member name="M:UnityEditor.SessionState.GetFloat(System.String,System.Single)">
      <summary>
        <para>Получить значение с плавающей запятой.</para>
      </summary>
      <param name="key">
      </param>
      <param name="defaultValue">
      </param>
    </member>
    <member name="M:UnityEditor.SessionState.GetInt(System.String,System.Int32)">
      <summary>
        <para>Получить целочисленное значение.</para>
      </summary>
      <param name="key">
      </param>
      <param name="defaultValue">
      </param>
    </member>
    <member name="M:UnityEditor.SessionState.GetIntArray(System.String,System.Int32[])">
      <summary>
        <para>Получить массив целых чисел.</para>
      </summary>
      <param name="key">
      </param>
      <param name="defaultValue">
      </param>
    </member>
    <member name="M:UnityEditor.SessionState.GetString(System.String,System.String)">
      <summary>
        <para>Получить строковое значение.</para>
      </summary>
      <param name="key">
      </param>
      <param name="defaultValue">
      </param>
    </member>
    <member name="M:UnityEditor.SessionState.GetVector3(System.String,UnityEngine.Vector3)">
      <summary>
        <para>Получить Vector3.</para>
      </summary>
      <param name="key">
      </param>
      <param name="defaultValue">
      </param>
    </member>
    <member name="M:UnityEditor.SessionState.SetBool(System.String,System.Boolean)">
      <summary>
        <para>Сохраните логическое значение.</para>
      </summary>
      <param name="key">
      </param>
      <param name="value">
      </param>
    </member>
    <member name="M:UnityEditor.SessionState.SetFloat(System.String,System.Single)">
      <summary>
        <para>Сохраните значение с плавающей запятой.</para>
      </summary>
      <param name="key">
      </param>
      <param name="value">
      </param>
    </member>
    <member name="M:UnityEditor.SessionState.SetInt(System.String,System.Int32)">
      <summary>
        <para>Сохранить целочисленное значение.</para>
      </summary>
      <param name="key">
      </param>
      <param name="value">
      </param>
    </member>
    <member name="M:UnityEditor.SessionState.SetIntArray(System.String,System.Int32[])">
      <summary>
        <para>Сохраните массив целых чисел.</para>
      </summary>
      <param name="key">
      </param>
      <param name="value">
      </param>
    </member>
    <member name="M:UnityEditor.SessionState.SetString(System.String,System.String)">
      <summary>
        <para>Сохраните строковое значение.</para>
      </summary>
      <param name="key">
      </param>
      <param name="value">
      </param>
    </member>
    <member name="M:UnityEditor.SessionState.SetVector3(System.String,UnityEngine.Vector3)">
      <summary>
        <para>Сохраните Vector3.</para>
      </summary>
      <param name="key">
      </param>
      <param name="value">
      </param>
    </member>
    <member name="T:UnityEditor.SettingsProvider">
      <summary>
        <para>SettingsProvider — это класс конфигурации, который указывает, как параметр Project или предпочтение должны отображаться в окне «Параметры» или «Предпочтения».</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SettingsProvider.activateHandler">
      <summary>
        <para>Переопределяет SettingsProvider.OnActivate.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SettingsProvider.deactivateHandler">
      <summary>
        <para>Переопределяет SettingsProvider.OnDeactivate.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SettingsProvider.footerBarGuiHandler">
      <summary>
        <para>Переопределяет SettingsProvider.OnFooterBarGUI.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SettingsProvider.guiHandler">
      <summary>
        <para>Переопределяет SettingsProvider.OnGUI.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SettingsProvider.hasSearchInterestHandler">
      <summary>
        <para>Переопределяет SettingsProvider.HasSearchInterest.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SettingsProvider.inspectorUpdateHandler">
      <summary>
        <para>Переопределяет SettingsProvider.OnInspectorUpdate.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SettingsProvider.keywords">
      <summary>
        <para>Получает или задает список ключевых слов для сравнения с тем, что ищет пользователь. Когда пользователь вводит значения в поле поиска в окне настроек, SettingsProvider.HasSearchInterest пытается сопоставить эти ключевые слова с этим списком.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SettingsProvider.label">
      <summary>
        <para>Получает или задает отображаемое имя SettingsProvider, как оно отображается в окне настроек. Если не задано, в окне настроек вместо этого используется последний токен SettingsProvider.settingsPath.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SettingsProvider.scope">
      <summary>
        <para>Получает область действия SettingsProvider. Scope определяет, отображается ли SettingsProvider в окне Preferences (SettingsScope.User) или в окне Settings (SettingsScope.Project).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SettingsProvider.settingsPath">
      <summary>
        <para>Получает путь, используемый для размещения SettingsProvider в древовидном представлении окна настроек. Путь должен быть уникальным среди всех других путей к настройкам и должен использовать «/» в качестве разделителя.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SettingsProvider.titleBarGuiHandler">
      <summary>
        <para>Переопределяет SettingsProvider.OnTitleBarGUI.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SettingsProvider.#ctor(System.String,UnityEditor.SettingsScope,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)">
      <summary>
        <para>Создает новый SettingsProvider.</para>
      </summary>
      <param name="path">Путь к настройкам в окне настроек. В качестве разделителя используется «/». Последний токен становится меткой настроек, если он не указан.</param>
      <param name="scope">Объем настроек. Область действия определяет, где отображается параметр: в окнах «Настройки» или «Настройки».</param>
      <param name="keywords">Список ключевых слов для сравнения с тем, что ищет пользователь. Когда пользователь вводит значения в поле поиска в окне настроек, SettingsProvider.HasSearchInterest пытается сопоставить эти ключевые слова с этим списком.</param>
      <param name="scopes">
      </param>
    </member>
    <member name="M:UnityEditor.SettingsProvider.GetSearchKeywordsFromGUIContentProperties">
      <summary>
        <para>Извлечение ключевых слов для поиска из всех общедоступных статических элементов определенного типа.</para>
      </summary>
      <returns>
        <para>Возвращает список ключевых слов, извлеченных из статического GUIContent.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SettingsProvider.GetSearchKeywordsFromPath(System.String)">
      <summary>
        <para>Извлеките ключевые слова для поиска из сериализованных свойств актива по определенному пути.</para>
      </summary>
      <param name="path">Путь к ресурсу на диске.</param>
      <returns>
        <para>Возвращает список ключевых слов.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SettingsProvider.GetSearchKeywordsFromSerializedObject(UnityEditor.SerializedObject)">
      <summary>
        <para>Извлеките ключевые слова для поиска из сериализованных свойств SerializedObject.</para>
      </summary>
      <param name="serializedObject">Объект для извлечения свойств.</param>
      <returns>
        <para>Возвращает список ключевых слов.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SettingsProvider.HasSearchInterest(System.String)">
      <summary>
        <para>Проверяет, должен ли появляться SettingsProvider, когда пользователь вводит что-то в поле поиска окна настроек. SettingsProvider пытается сопоставить условия поиска (даже частично) с любым из SettingsProvider.keywords. Поиск нечувствителен к регистру.</para>
      </summary>
      <param name="searchContext">Условия поиска, введенные пользователем в поле поиска в окне настроек.</param>
      <returns>
        <para>Истинно, если SettingsProvider соответствует поисковому запросу и должен ли он отображаться.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SettingsProvider.OnActivate(System.String,UnityEngine.UIElements.VisualElement)">
      <summary>
        <para>Используйте эту функцию для реализации обработчика, когда пользователь нажимает кнопку «Настройки» в окне «Настройки». Вы можете получить актив настроек или настроить пользовательский интерфейс UIElements из этой функции.</para>
      </summary>
      <param name="searchContext">Контекст поиска в поле поиска в окне настроек.</param>
      <param name="rootElement">Корень дерева UIElements. Если вы добавите к этому корню, SettingsProvider использует UIElements вместо вызова SettingsProvider.OnGUI для создания пользовательского интерфейса. Если вы не добавляете к этому элементу VisualElement, для создания пользовательского интерфейса необходимо использовать IMGUI.</param>
    </member>
    <member name="M:UnityEditor.SettingsProvider.OnDeactivate">
      <summary>
        <para>Используйте эту функцию для реализации обработчика, когда пользователь щелкает другой параметр или когда окно настроек закрывается.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SettingsProvider.OnFooterBarGUI">
      <summary>
        <para>Используйте эту функцию, чтобы переопределить отрисовку нижнего колонтитула для SettingsProvider с помощью IMGUI.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SettingsProvider.OnGUI(System.String)">
      <summary>
        <para>Используйте эту функцию для рисования пользовательского интерфейса на основе IMGUI. Это предполагает, что вы не добавили никаких дочерних элементов в rootElement, переданный в функцию OnActivate.</para>
      </summary>
      <param name="searchContext">Контекст поиска для окна настроек. Используется для отображения или скрытия соответствующих свойств.</param>
    </member>
    <member name="M:UnityEditor.SettingsProvider.OnInspectorUpdate">
      <summary>
        <para>OnInspectorUpdate вызывается со скоростью 10 кадров в секунду, чтобы дать инспектору возможность обновиться. Дополнительные сведения см. в разделе EditorWindow.OnInspectorUpdate.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SettingsProvider.OnTitleBarGUI">
      <summary>
        <para>Используйте эту функцию, чтобы переопределить отрисовку заголовка для SettingsProvider с помощью IMGUI. Это позволяет добавить пользовательский интерфейс (например, кнопку на панели инструментов) рядом с заголовком. AssetSettingsProvider использует этот механизм для отображения кнопок «добавить в пресет» и «помощь».</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SettingsProvider.Repaint">
      <summary>
        <para>Запросите SettingsWindow для перерисовки.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SettingsProviderAttribute">
      <summary>
        <para>Атрибут, используемый для регистрации нового SettingsProvider. Используйте этот атрибут для украшения функции, которая возвращает экземпляр SettingsProvider. Если функция возвращает значение null, в окне настроек не отображается ни один SettingsProvider.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SettingsProviderAttribute.#ctor">
      <summary>
        <para>Создает новый атрибут SettingsProviderAttribute, используемый для регистрации нового SettingsProvider. </para>
      </summary>
    </member>
    <member name="T:UnityEditor.SettingsProviderGroupAttribute">
      <summary>
        <para>Атрибут, используемый для регистрации нескольких элементов SettingsProvider. Используйте этот атрибут для украшения функции, которая возвращает массив экземпляров SettingsProvider. Если функция возвращает значение null, в окне настроек не отображается ни один SettingsProvider.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SettingsProviderGroupAttribute.#ctor">
      <summary>
        <para>Создает SettingsProviderGroupAttribute, используемый для регистрации нескольких SettingsProviders. </para>
      </summary>
    </member>
    <member name="T:UnityEditor.SettingsScope">
      <summary>
        <para>Устанавливает область SettingsProvider. Scope определяет, где он появляется в пользовательском интерфейсе. Например, отображается ли он с настройками проекта в окне «Настройки», в окне «Настройки» или в обоих окнах.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SettingsScope.Project">
      <summary>
        <para>SettingsProvider отображается только в окне настроек проекта.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SettingsScope.User">
      <summary>
        <para>SettingsProvider отображается только в окне настроек.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SettingsService">
      <summary>
        <para>Этот класс предоставляет глобальные API для взаимодействия с окном настроек.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SettingsService.NotifySettingsProviderChanged">
      <summary>
        <para>Используйте эту функцию, чтобы уведомить SettingsService об изменении SettingsProvider.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SettingsService.OpenProjectSettings(System.String)">
      <summary>
        <para>Откройте окно «Настройки проекта» с уже выбранным указанным элементом настроек.</para>
      </summary>
      <param name="settingsPath">Пути настроек элемента для выбора (например, «ProjectPlayer» или «ProjectQuality»).</param>
      <returns>
        <para>Возвращает экземпляр в окно настроек.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SettingsService.OpenUserPreferences(System.String)">
      <summary>
        <para>Откройте окно настроек с уже выбранным указанным элементом настроек.</para>
      </summary>
      <param name="settingsPath">Путь настроек элемента для выбора (например, «PreferencesKeys» или «Preferences2D»).</param>
      <returns>
        <para>Возвращает экземпляр в окно настроек.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SettingsService.RepaintAllSettingsWindow">
      <summary>
        <para>Уведомляет службу настроек о том, что все открытые окна настроек должны быть перекрашены.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ShaderData">
      <summary>
        <para>Этот класс описывает шейдер.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.ActiveSubshader">
      <summary>
        <para>Возвращает активный подшейдер или null, если ни один из них в данный момент не активен.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.ActiveSubshaderIndex">
      <summary>
        <para>Возвращает индекс активного подшейдера или -1, если в настоящий момент ни один из них не активен.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ShaderData.ConstantBufferInfo">
      <summary>
        <para>Предоставляет информацию о макете ресурсов для буфера констант шейдера.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.ConstantBufferInfo.Fields">
      <summary>
        <para>Поля в этом буфере констант (только для чтения).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.ConstantBufferInfo.Name">
      <summary>
        <para>Имя этого буфера констант (только для чтения).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.ConstantBufferInfo.Size">
      <summary>
        <para>Размер (в байтах) этого буфера констант (только для чтения).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ShaderData.ConstantInfo">
      <summary>
        <para>Предоставляет информацию о значении константы (uniform) шейдера.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.ConstantInfo.ArraySize">
      <summary>
        <para>Количество элементов в этой константе (только для чтения). Если это значение больше 1, константа является массивом.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.ConstantInfo.Columns">
      <summary>
        <para>Если константа имеет матричный или векторный тип, здесь хранится количество столбцов. В противном случае значение равно 0. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.ConstantInfo.ConstantType">
      <summary>
        <para>Тип этой константы (только для чтения).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.ConstantInfo.DataType">
      <summary>
        <para>Тип данных элемента этой константы (только для чтения).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.ConstantInfo.Index">
      <summary>
        <para>Индекс этой константы в ее буфере (только для чтения). Обычно это смещение в байтах от начала cbuffer, но в зависимости от платформы может указывать другой тип индекса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.ConstantInfo.Name">
      <summary>
        <para>Имя этой константы (только для чтения).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.ConstantInfo.Rows">
      <summary>
        <para>Если константа является матричным типом, здесь хранится количество строк. Если константа является векторным типом, это значение будет равно 1. В противном случае значение равно 0. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.ConstantInfo.StructFields">
      <summary>
        <para>Если константа является структурой, здесь хранятся поля этой структуры. В противном случае значение равно null. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.ConstantInfo.StructSize">
      <summary>
        <para>Если константа является структурой, здесь хранится размер (в байтах) структуры. В противном случае значение равно 0. (Только чтение)</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ShaderData.GetSubshader(System.Int32)">
      <summary>
        <para>Получить подшейдер.</para>
      </summary>
      <param name="index">Индекс подшейдера.</param>
      <returns>
        <para>Связанный подшейдер или значение null, если его не существует.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.ShaderData.Pass">
      <summary>
        <para>Этот класс описывает проход подшейдера.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ShaderData.Pass.CompileVariant(UnityEditor.Rendering.ShaderType,System.String[],UnityEditor.Rendering.ShaderCompilerPlatform,UnityEditor.BuildTarget)">
      <summary>
        <para>Компилирует вариант шейдера для этого прохода шейдера и возвращает его байт-код и структуру ресурсов.</para>
      </summary>
      <param name="shaderType">Тип шейдера в этом проходе для компиляции. (например, Vertex, Fragment и т. д.) Некоторые платформы (OpenGLCore, GLES20, GLES3x, Switch и Vulkan) включают все этапы в типе шейдера Vertex.</param>
      <param name="keywords">Ключевые слова для использования во время компиляции.</param>
      <param name="shaderCompilerPlatform">Платформа компилятора шейдеров для компиляции.</param>
      <param name="buildTarget">Цель сборки для компиляции.</param>
      <param name="forExternalTool">Указывает, следует ли подготовить байт-код для Unity или использовать с внешними инструментами.</param>
      <param name="tier">Дополнительный уровень графики.</param>
      <param name="platformKeywords">Необязательный набор ключевых слов платформы. Если вы их не укажете, Unity использует ключевые слова по умолчанию для данной платформы, цели и уровня.</param>
      <returns>
        <para>Скомпилированный результат варианта, включая информацию о макете ресурса и байт-код. Если передача не включает запрошенную программу или если передача имеет неправильный тип, эта функция все равно завершается успешно, но возвращает пустой байт-код.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderData.Pass.CompileVariant(UnityEditor.Rendering.ShaderType,System.String[],UnityEditor.Rendering.ShaderCompilerPlatform,UnityEditor.BuildTarget,System.Boolean)">
      <summary>
        <para>Компилирует вариант шейдера для этого прохода шейдера и возвращает его байт-код и структуру ресурсов.</para>
      </summary>
      <param name="shaderType">Тип шейдера в этом проходе для компиляции. (например, Vertex, Fragment и т. д.) Некоторые платформы (OpenGLCore, GLES20, GLES3x, Switch и Vulkan) включают все этапы в типе шейдера Vertex.</param>
      <param name="keywords">Ключевые слова для использования во время компиляции.</param>
      <param name="shaderCompilerPlatform">Платформа компилятора шейдеров для компиляции.</param>
      <param name="buildTarget">Цель сборки для компиляции.</param>
      <param name="forExternalTool">Указывает, следует ли подготовить байт-код для Unity или использовать с внешними инструментами.</param>
      <param name="tier">Дополнительный уровень графики.</param>
      <param name="platformKeywords">Необязательный набор ключевых слов платформы. Если вы их не укажете, Unity использует ключевые слова по умолчанию для данной платформы, цели и уровня.</param>
      <returns>
        <para>Скомпилированный результат варианта, включая информацию о макете ресурса и байт-код. Если передача не включает запрошенную программу или если передача имеет неправильный тип, эта функция все равно завершается успешно, но возвращает пустой байт-код.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderData.Pass.CompileVariant(UnityEditor.Rendering.ShaderType,System.String[],UnityEditor.Rendering.ShaderCompilerPlatform,UnityEditor.BuildTarget,UnityEngine.Rendering.GraphicsTier)">
      <summary>
        <para>Компилирует вариант шейдера для этого прохода шейдера и возвращает его байт-код и структуру ресурсов.</para>
      </summary>
      <param name="shaderType">Тип шейдера в этом проходе для компиляции. (например, Vertex, Fragment и т. д.) Некоторые платформы (OpenGLCore, GLES20, GLES3x, Switch и Vulkan) включают все этапы в типе шейдера Vertex.</param>
      <param name="keywords">Ключевые слова для использования во время компиляции.</param>
      <param name="shaderCompilerPlatform">Платформа компилятора шейдеров для компиляции.</param>
      <param name="buildTarget">Цель сборки для компиляции.</param>
      <param name="forExternalTool">Указывает, следует ли подготовить байт-код для Unity или использовать с внешними инструментами.</param>
      <param name="tier">Дополнительный уровень графики.</param>
      <param name="platformKeywords">Необязательный набор ключевых слов платформы. Если вы их не укажете, Unity использует ключевые слова по умолчанию для данной платформы, цели и уровня.</param>
      <returns>
        <para>Скомпилированный результат варианта, включая информацию о макете ресурса и байт-код. Если передача не включает запрошенную программу или если передача имеет неправильный тип, эта функция все равно завершается успешно, но возвращает пустой байт-код.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderData.Pass.CompileVariant(UnityEditor.Rendering.ShaderType,System.String[],UnityEditor.Rendering.ShaderCompilerPlatform,UnityEditor.BuildTarget,UnityEngine.Rendering.GraphicsTier,System.Boolean)">
      <summary>
        <para>Компилирует вариант шейдера для этого прохода шейдера и возвращает его байт-код и структуру ресурсов.</para>
      </summary>
      <param name="shaderType">Тип шейдера в этом проходе для компиляции. (например, Vertex, Fragment и т. д.) Некоторые платформы (OpenGLCore, GLES20, GLES3x, Switch и Vulkan) включают все этапы в типе шейдера Vertex.</param>
      <param name="keywords">Ключевые слова для использования во время компиляции.</param>
      <param name="shaderCompilerPlatform">Платформа компилятора шейдеров для компиляции.</param>
      <param name="buildTarget">Цель сборки для компиляции.</param>
      <param name="forExternalTool">Указывает, следует ли подготовить байт-код для Unity или использовать с внешними инструментами.</param>
      <param name="tier">Дополнительный уровень графики.</param>
      <param name="platformKeywords">Необязательный набор ключевых слов платформы. Если вы их не укажете, Unity использует ключевые слова по умолчанию для данной платформы, цели и уровня.</param>
      <returns>
        <para>Скомпилированный результат варианта, включая информацию о макете ресурса и байт-код. Если передача не включает запрошенную программу или если передача имеет неправильный тип, эта функция все равно завершается успешно, но возвращает пустой байт-код.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderData.Pass.CompileVariant(UnityEditor.Rendering.ShaderType,System.String[],UnityEditor.Rendering.ShaderCompilerPlatform,UnityEditor.BuildTarget,UnityEngine.Rendering.BuiltinShaderDefine[])">
      <summary>
        <para>Компилирует вариант шейдера для этого прохода шейдера и возвращает его байт-код и структуру ресурсов.</para>
      </summary>
      <param name="shaderType">Тип шейдера в этом проходе для компиляции. (например, Vertex, Fragment и т. д.) Некоторые платформы (OpenGLCore, GLES20, GLES3x, Switch и Vulkan) включают все этапы в типе шейдера Vertex.</param>
      <param name="keywords">Ключевые слова для использования во время компиляции.</param>
      <param name="shaderCompilerPlatform">Платформа компилятора шейдеров для компиляции.</param>
      <param name="buildTarget">Цель сборки для компиляции.</param>
      <param name="forExternalTool">Указывает, следует ли подготовить байт-код для Unity или использовать с внешними инструментами.</param>
      <param name="tier">Дополнительный уровень графики.</param>
      <param name="platformKeywords">Необязательный набор ключевых слов платформы. Если вы их не укажете, Unity использует ключевые слова по умолчанию для данной платформы, цели и уровня.</param>
      <returns>
        <para>Скомпилированный результат варианта, включая информацию о макете ресурса и байт-код. Если передача не включает запрошенную программу или если передача имеет неправильный тип, эта функция все равно завершается успешно, но возвращает пустой байт-код.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderData.Pass.CompileVariant(UnityEditor.Rendering.ShaderType,System.String[],UnityEditor.Rendering.ShaderCompilerPlatform,UnityEditor.BuildTarget,UnityEngine.Rendering.BuiltinShaderDefine[],System.Boolean)">
      <summary>
        <para>Компилирует вариант шейдера для этого прохода шейдера и возвращает его байт-код и структуру ресурсов.</para>
      </summary>
      <param name="shaderType">Тип шейдера в этом проходе для компиляции. (например, Vertex, Fragment и т. д.) Некоторые платформы (OpenGLCore, GLES20, GLES3x, Switch и Vulkan) включают все этапы в типе шейдера Vertex.</param>
      <param name="keywords">Ключевые слова для использования во время компиляции.</param>
      <param name="shaderCompilerPlatform">Платформа компилятора шейдеров для компиляции.</param>
      <param name="buildTarget">Цель сборки для компиляции.</param>
      <param name="forExternalTool">Указывает, следует ли подготовить байт-код для Unity или использовать с внешними инструментами.</param>
      <param name="tier">Дополнительный уровень графики.</param>
      <param name="platformKeywords">Необязательный набор ключевых слов платформы. Если вы их не укажете, Unity использует ключевые слова по умолчанию для данной платформы, цели и уровня.</param>
      <returns>
        <para>Скомпилированный результат варианта, включая информацию о макете ресурса и байт-код. Если передача не включает запрошенную программу или если передача имеет неправильный тип, эта функция все равно завершается успешно, но возвращает пустой байт-код.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderData.Pass.CompileVariant(UnityEditor.Rendering.ShaderType,System.String[],UnityEditor.Rendering.ShaderCompilerPlatform,UnityEditor.BuildTarget,UnityEngine.Rendering.BuiltinShaderDefine[],UnityEngine.Rendering.GraphicsTier)">
      <summary>
        <para>Компилирует вариант шейдера для этого прохода шейдера и возвращает его байт-код и структуру ресурсов.</para>
      </summary>
      <param name="shaderType">Тип шейдера в этом проходе для компиляции. (например, Vertex, Fragment и т. д.) Некоторые платформы (OpenGLCore, GLES20, GLES3x, Switch и Vulkan) включают все этапы в типе шейдера Vertex.</param>
      <param name="keywords">Ключевые слова для использования во время компиляции.</param>
      <param name="shaderCompilerPlatform">Платформа компилятора шейдеров для компиляции.</param>
      <param name="buildTarget">Цель сборки для компиляции.</param>
      <param name="forExternalTool">Указывает, следует ли подготовить байт-код для Unity или использовать с внешними инструментами.</param>
      <param name="tier">Дополнительный уровень графики.</param>
      <param name="platformKeywords">Необязательный набор ключевых слов платформы. Если вы их не укажете, Unity использует ключевые слова по умолчанию для данной платформы, цели и уровня.</param>
      <returns>
        <para>Скомпилированный результат варианта, включая информацию о макете ресурса и байт-код. Если передача не включает запрошенную программу или если передача имеет неправильный тип, эта функция все равно завершается успешно, но возвращает пустой байт-код.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderData.Pass.CompileVariant(UnityEditor.Rendering.ShaderType,System.String[],UnityEditor.Rendering.ShaderCompilerPlatform,UnityEditor.BuildTarget,UnityEngine.Rendering.BuiltinShaderDefine[],UnityEngine.Rendering.GraphicsTier,System.Boolean)">
      <summary>
        <para>Компилирует вариант шейдера для этого прохода шейдера и возвращает его байт-код и структуру ресурсов.</para>
      </summary>
      <param name="shaderType">Тип шейдера в этом проходе для компиляции. (например, Vertex, Fragment и т. д.) Некоторые платформы (OpenGLCore, GLES20, GLES3x, Switch и Vulkan) включают все этапы в типе шейдера Vertex.</param>
      <param name="keywords">Ключевые слова для использования во время компиляции.</param>
      <param name="shaderCompilerPlatform">Платформа компилятора шейдеров для компиляции.</param>
      <param name="buildTarget">Цель сборки для компиляции.</param>
      <param name="forExternalTool">Указывает, следует ли подготовить байт-код для Unity или использовать с внешними инструментами.</param>
      <param name="tier">Дополнительный уровень графики.</param>
      <param name="platformKeywords">Необязательный набор ключевых слов платформы. Если вы их не укажете, Unity использует ключевые слова по умолчанию для данной платформы, цели и уровня.</param>
      <returns>
        <para>Скомпилированный результат варианта, включая информацию о макете ресурса и байт-код. Если передача не включает запрошенную программу или если передача имеет неправильный тип, эта функция все равно завершается успешно, но возвращает пустой байт-код.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderData.Pass.FindTagValue(UnityEngine.Rendering.ShaderTagId)">
      <summary>
        <para>Ищет тег, указанный tagName в этом SubShader, и возвращает значение тега.</para>
      </summary>
      <param name="tagName">Имя тега.</param>
    </member>
    <member name="M:UnityEditor.ShaderData.Pass.HasShaderStage(UnityEditor.Rendering.ShaderType)">
      <summary>
        <para>Проверяет, включает ли этот проход этап шейдера.</para>
      </summary>
      <param name="shaderType">Этап шейдера для проверки.</param>
      <returns>
        <para>Возвращает true, если этап шейдера присутствует в проходе. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="P:UnityEditor.ShaderData.Pass.Name">
      <summary>
        <para>Имя этого прохода (может быть пустым).</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ShaderData.Pass.PreprocessVariant(UnityEditor.Rendering.ShaderType,System.String[],UnityEditor.Rendering.ShaderCompilerPlatform,UnityEditor.BuildTarget,System.Boolean)">
      <summary>
        <para>Предварительно обрабатывает вариант шейдера для этого прохода шейдера и возвращает предварительно обработанный код.</para>
      </summary>
      <param name="shaderType">Тип шейдера в этом проходе для предварительной обработки. (например, Vertex, Fragment и т. д.) Некоторые платформы (OpenGLCore, GLES20, GLES3x, Switch и Vulkan) включают все этапы в типе шейдера Vertex.</param>
      <param name="keywords">Ключевые слова для использования во время предварительной обработки.</param>
      <param name="shaderCompilerPlatform">Платформа компилятора шейдера для предварительной обработки.</param>
      <param name="buildTarget">Цель сборки для предварительной обработки.</param>
      <param name="tier">Дополнительный уровень графики.</param>
      <param name="platformKeywords">Необязательный набор ключевых слов платформы. Если вы их не укажете, Unity использует ключевые слова по умолчанию для данной платформы, цели и уровня.</param>
      <param name="stripLineDirectives">Следует ли пропускать директивы номеров строк в предварительно обработанном выводе. Если этот параметр включен, Unity создает более удобочитаемый предварительно обработанный исходный код и пропускает директивы строки, если имя файла не меняется. В противном случае этот метод создает точный предварительно обработанный исходный код, который Unity передает компилятору.</param>
      <returns>
        <para>Предварительно обработанный вариант результата. Если передача не включает запрошенную программу или если передача имеет неправильный тип, эта функция все равно завершается успешно, но возвращает пустой предварительно обработанный код.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderData.Pass.PreprocessVariant(UnityEditor.Rendering.ShaderType,System.String[],UnityEditor.Rendering.ShaderCompilerPlatform,UnityEditor.BuildTarget,UnityEngine.Rendering.GraphicsTier,System.Boolean)">
      <summary>
        <para>Предварительно обрабатывает вариант шейдера для этого прохода шейдера и возвращает предварительно обработанный код.</para>
      </summary>
      <param name="shaderType">Тип шейдера в этом проходе для предварительной обработки. (например, Vertex, Fragment и т. д.) Некоторые платформы (OpenGLCore, GLES20, GLES3x, Switch и Vulkan) включают все этапы в типе шейдера Vertex.</param>
      <param name="keywords">Ключевые слова для использования во время предварительной обработки.</param>
      <param name="shaderCompilerPlatform">Платформа компилятора шейдера для предварительной обработки.</param>
      <param name="buildTarget">Цель сборки для предварительной обработки.</param>
      <param name="tier">Дополнительный уровень графики.</param>
      <param name="platformKeywords">Необязательный набор ключевых слов платформы. Если вы их не укажете, Unity использует ключевые слова по умолчанию для данной платформы, цели и уровня.</param>
      <param name="stripLineDirectives">Следует ли пропускать директивы номеров строк в предварительно обработанном выводе. Если этот параметр включен, Unity создает более удобочитаемый предварительно обработанный исходный код и пропускает директивы строки, если имя файла не меняется. В противном случае этот метод создает точный предварительно обработанный исходный код, который Unity передает компилятору.</param>
      <returns>
        <para>Предварительно обработанный вариант результата. Если передача не включает запрошенную программу или если передача имеет неправильный тип, эта функция все равно завершается успешно, но возвращает пустой предварительно обработанный код.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderData.Pass.PreprocessVariant(UnityEditor.Rendering.ShaderType,System.String[],UnityEditor.Rendering.ShaderCompilerPlatform,UnityEditor.BuildTarget,UnityEngine.Rendering.BuiltinShaderDefine[],System.Boolean)">
      <summary>
        <para>Предварительно обрабатывает вариант шейдера для этого прохода шейдера и возвращает предварительно обработанный код.</para>
      </summary>
      <param name="shaderType">Тип шейдера в этом проходе для предварительной обработки. (например, Vertex, Fragment и т. д.) Некоторые платформы (OpenGLCore, GLES20, GLES3x, Switch и Vulkan) включают все этапы в типе шейдера Vertex.</param>
      <param name="keywords">Ключевые слова для использования во время предварительной обработки.</param>
      <param name="shaderCompilerPlatform">Платформа компилятора шейдера для предварительной обработки.</param>
      <param name="buildTarget">Цель сборки для предварительной обработки.</param>
      <param name="tier">Дополнительный уровень графики.</param>
      <param name="platformKeywords">Необязательный набор ключевых слов платформы. Если вы их не укажете, Unity использует ключевые слова по умолчанию для данной платформы, цели и уровня.</param>
      <param name="stripLineDirectives">Следует ли пропускать директивы номеров строк в предварительно обработанном выводе. Если этот параметр включен, Unity создает более удобочитаемый предварительно обработанный исходный код и пропускает директивы строки, если имя файла не меняется. В противном случае этот метод создает точный предварительно обработанный исходный код, который Unity передает компилятору.</param>
      <returns>
        <para>Предварительно обработанный вариант результата. Если передача не включает запрошенную программу или если передача имеет неправильный тип, эта функция все равно завершается успешно, но возвращает пустой предварительно обработанный код.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderData.Pass.PreprocessVariant(UnityEditor.Rendering.ShaderType,System.String[],UnityEditor.Rendering.ShaderCompilerPlatform,UnityEditor.BuildTarget,UnityEngine.Rendering.BuiltinShaderDefine[],UnityEngine.Rendering.GraphicsTier,System.Boolean)">
      <summary>
        <para>Предварительно обрабатывает вариант шейдера для этого прохода шейдера и возвращает предварительно обработанный код.</para>
      </summary>
      <param name="shaderType">Тип шейдера в этом проходе для предварительной обработки. (например, Vertex, Fragment и т. д.) Некоторые платформы (OpenGLCore, GLES20, GLES3x, Switch и Vulkan) включают все этапы в типе шейдера Vertex.</param>
      <param name="keywords">Ключевые слова для использования во время предварительной обработки.</param>
      <param name="shaderCompilerPlatform">Платформа компилятора шейдера для предварительной обработки.</param>
      <param name="buildTarget">Цель сборки для предварительной обработки.</param>
      <param name="tier">Дополнительный уровень графики.</param>
      <param name="platformKeywords">Необязательный набор ключевых слов платформы. Если вы их не укажете, Unity использует ключевые слова по умолчанию для данной платформы, цели и уровня.</param>
      <param name="stripLineDirectives">Следует ли пропускать директивы номеров строк в предварительно обработанном выводе. Если этот параметр включен, Unity создает более удобочитаемый предварительно обработанный исходный код и пропускает директивы строки, если имя файла не меняется. В противном случае этот метод создает точный предварительно обработанный исходный код, который Unity передает компилятору.</param>
      <returns>
        <para>Предварительно обработанный вариант результата. Если передача не включает запрошенную программу или если передача имеет неправильный тип, эта функция все равно завершается успешно, но возвращает пустой предварительно обработанный код.</para>
      </returns>
    </member>
    <member name="P:UnityEditor.ShaderData.Pass.SourceCode">
      <summary>
        <para>Исходный код для этого прохода.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ShaderData.PreprocessedVariant">
      <summary>
        <para>Представляет результаты предварительной обработки варианта с помощью ShaderData.Pass.PreprocessVariant.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.PreprocessedVariant.Messages">
      <summary>
        <para>Сохраняет ошибки и предупреждения, полученные во время предварительной обработки (только для чтения).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.PreprocessedVariant.PreprocessedCode">
      <summary>
        <para>Сохраняет предварительно обработанный код для варианта шейдера (только для чтения).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.PreprocessedVariant.Success">
      <summary>
        <para>Указывает, прошла ли предварительная обработка варианта успешно (только для чтения). Если это так, то это правда. В противном случае это ложь, и ShaderData.PreprocessedVariant.Messages содержит ошибки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.SourceShader">
      <summary>
        <para>Шейдер, прикрепленный к этому набору данных.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ShaderData.Subshader">
      <summary>
        <para>Этот класс описывает подшейдер.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ShaderData.Subshader.FindTagValue(UnityEngine.Rendering.ShaderTagId)">
      <summary>
        <para>Ищет тег, указанный tagName в этом SubShader, и возвращает значение тега.</para>
      </summary>
      <param name="tagName">Имя тега.</param>
    </member>
    <member name="M:UnityEditor.ShaderData.Subshader.GetPass(System.Int32)">
      <summary>
        <para>Получить проход подшейдера.</para>
      </summary>
      <param name="passIndex">Индекс прохода.</param>
      <returns>
        <para>Указанный проход или ноль, если таковой не существует.</para>
      </returns>
    </member>
    <member name="P:UnityEditor.ShaderData.Subshader.LevelOfDetail">
      <summary>
        <para>Уровень детализации (LOD), указанный в этом субшейдере (только для чтения).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.Subshader.PassCount">
      <summary>
        <para>Количество проходов для этого подшейдера.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.SubshaderCount">
      <summary>
        <para>Количество подшейдеров, используемых этим шейдером.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ShaderData.TextureBindingInfo">
      <summary>
        <para>Предоставляет информацию о макете ресурса о привязке текстуры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.TextureBindingInfo.ArraySize">
      <summary>
        <para>Количество элементов в этой привязке текстуры. Если значение больше 1, привязка текстуры представляет собой массив. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.TextureBindingInfo.Dim">
      <summary>
        <para>Тип привязки текстуры (только для чтения).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.TextureBindingInfo.Index">
      <summary>
        <para>Индекс привязки текстуры (только для чтения). В зависимости от платформы это значение представляет разные вещи.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.TextureBindingInfo.Multisampled">
      <summary>
        <para>Указывает, является ли текстура мультисэмплированной (только для чтения).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.TextureBindingInfo.Name">
      <summary>
        <para>Имя привязки текстуры (только для чтения).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.TextureBindingInfo.SamplerIndex">
      <summary>
        <para>Индекс сэмплера для этой привязки текстуры (только для чтения). В зависимости от платформы это значение представляет разные вещи.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ShaderData.VariantCompileInfo">
      <summary>
        <para>Представляет результаты компиляции варианта с использованием ShaderData.Pass.CompileVariant.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.VariantCompileInfo.Attributes">
      <summary>
        <para>Атрибуты вершины, которые использует скомпилированный вариант (только для чтения).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.VariantCompileInfo.ConstantBuffers">
      <summary>
        <para>Постоянные буферы, которые использует скомпилированный вариант (только для чтения). Некоторые платформы не имеют постоянных буферов; однако Unity сообщает обо всех глобальных константах/униформах в одном буфере констант.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.VariantCompileInfo.Messages">
      <summary>
        <para>Сохраняет ошибки и предупреждения, полученные во время компиляции (только для чтения).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.VariantCompileInfo.ShaderData">
      <summary>
        <para>Сохраняет необработанный байт-код для конкретной платформы для скомпилированного шейдера (только для чтения).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.VariantCompileInfo.Success">
      <summary>
        <para>Указывает, успешно ли выполнена компиляция варианта (только для чтения). Если это так, то это правда. В противном случае это ложь, и ShaderData.VariantCompileInfo.Messages содержит ошибки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.VariantCompileInfo.TextureBindings">
      <summary>
        <para>Привязки текстур, которые использует скомпилированный вариант (только для чтения).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ShaderGUI">
      <summary>
        <para>Абстрактный класс для определения пользовательского графического интерфейса для свойств шейдера и для расширения предварительного просмотра материала.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ShaderGUI.AssignNewShaderToMaterial(UnityEngine.Material,UnityEngine.Shader,UnityEngine.Shader)">
      <summary>
        <para>Этот метод вызывается, когда для Материала выбран новый шейдер.</para>
      </summary>
      <param name="material">Материал, которому должен быть назначен новый шейдер.</param>
      <param name="oldShader">Предыдущий шейдер.</param>
      <param name="newShader">Новый шейдер для назначения материалу.</param>
    </member>
    <member name="M:UnityEditor.ShaderGUI.FindProperty(System.String,UnityEditor.MaterialProperty[])">
      <summary>
        <para>Найдите свойства шейдера.</para>
      </summary>
      <param name="propertyName">Имя свойства материала.</param>
      <param name="properties">Массив доступных свойств материала.</param>
      <param name="propertyIsMandatory">Если true, то этот метод вызовет исключение, если свойство с propertyName не найдено.</param>
      <returns>
        <para>Свойство материала найдено, иначе null.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderGUI.FindProperty(System.String,UnityEditor.MaterialProperty[],System.Boolean)">
      <summary>
        <para>Найдите свойства шейдера.</para>
      </summary>
      <param name="propertyName">Имя свойства материала.</param>
      <param name="properties">Массив доступных свойств материала.</param>
      <param name="propertyIsMandatory">Если true, то этот метод вызовет исключение, если свойство с propertyName не найдено.</param>
      <returns>
        <para>Свойство материала найдено, иначе null.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderGUI.OnClosed(UnityEngine.Material)">
      <summary>
        <para>Этот метод вызывается при закрытии ShaderGUI.</para>
      </summary>
      <param name="material">
      </param>
    </member>
    <member name="M:UnityEditor.ShaderGUI.OnGUI(UnityEditor.MaterialEditor,UnityEditor.MaterialProperty[])">
      <summary>
        <para>Чтобы определить собственный графический интерфейс шейдера, используйте методы materialEditor для визуализации элементов управления для массива свойств.</para>
      </summary>
      <param name="materialEditor">Редактор материалов, который вызывает этот OnGUI («владелец»).</param>
      <param name="properties">Свойства материала текущего выбранного шейдера.</param>
    </member>
    <member name="M:UnityEditor.ShaderGUI.OnMaterialPreviewGUI(UnityEditor.MaterialEditor,UnityEngine.Rect,UnityEngine.GUIStyle)">
      <summary>
        <para>Переопределить расширение визуализации области предварительного просмотра или полностью заменить предварительный просмотр (без вызова base.OnMaterialPreviewGUI).</para>
      </summary>
      <param name="materialEditor">Редактор материалов, вызывающий этот метод ("владелец").</param>
      <param name="r">Предварительный просмотр прямоугольника</param>
      <param name="background">Стиль фона.</param>
    </member>
    <member name="M:UnityEditor.ShaderGUI.OnMaterialPreviewSettingsGUI(UnityEditor.MaterialEditor)">
      <summary>
        <para>Переопределить для расширения функциональности панели инструментов области предварительного просмотра или полностью заменить панель инструментов, не вызывая base.OnMaterialPreviewSettingsGUI.</para>
      </summary>
      <param name="materialEditor">Редактор материалов, вызывающий этот метод ("владелец").</param>
    </member>
    <member name="M:UnityEditor.ShaderGUI.ValidateMaterial(UnityEngine.Material)">
      <summary>
        <para>Когда пользователь загружает Материал с помощью этого ShaderGUI в память или изменяет значение в Инспекторе, Редактор вызывает этот метод.</para>
      </summary>
      <param name="material">Материал для проверки.</param>
    </member>
    <member name="T:UnityEditor.ShaderImporter">
      <summary>
        <para>Средство импорта шейдеров позволяет изменять настройки импорта шейдеров из сценариев редактора.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderImporter.preprocessorOverride">
      <summary>
        <para>Препроцессор, который Unity использует для компиляции этого шейдера.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ShaderImporter.GetDefaultTexture(System.String)">
      <summary>
        <para>Получает текстуру по умолчанию, назначенную средству импорта шейдера для свойства шейдера с заданным именем.</para>
      </summary>
      <param name="name">
      </param>
    </member>
    <member name="M:UnityEditor.ShaderImporter.GetNonModifiableTexture(System.String)">
      <summary>
        <para>Получает немодифицируемую текстуру, назначенную средству импорта шейдера для свойства шейдера с заданным именем.</para>
      </summary>
      <param name="name">
      </param>
    </member>
    <member name="M:UnityEditor.ShaderImporter.GetShader">
      <summary>
        <para>Получает ссылку на шейдер, импортированный этим средством импорта.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ShaderImporter.SetDefaultTextures(System.String[],UnityEngine.Texture[])">
      <summary>
        <para>Задает текстуры по умолчанию для каждого свойства материала текстуры.</para>
      </summary>
      <param name="name">
      </param>
      <param name="textures">
      </param>
    </member>
    <member name="M:UnityEditor.ShaderImporter.SetNonModifiableTextures(System.String[],UnityEngine.Texture[])">
      <summary>
        <para>Задает неизменяемые текстуры для каждого свойства материала текстуры.</para>
      </summary>
      <param name="name">
      </param>
      <param name="textures">
      </param>
    </member>
    <member name="T:UnityEditor.ShaderInclude">
      <summary>
        <para>Шейдер включает файловый ресурс.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ShaderIncludePathAttribute">
      <summary>
        <para>Этот атрибут больше не поддерживается.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ShaderInfo">
      <summary>
        <para>Содержит следующую информацию о шейдере:
-Если шейдер имеет ошибки компиляции или предупреждения.
-Если шейдер поддерживается на текущей выбранной платформе.
-Имя шейдера.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderInfo.hasErrors">
      <summary>
        <para>Указывает, есть ли у шейдера ошибки компиляции (только для чтения).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderInfo.hasWarnings">
      <summary>
        <para>Указывает, есть ли у шейдера предупреждения компиляции (только для чтения).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderInfo.name">
      <summary>
        <para>Имя шейдера (только для чтения).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderInfo.supported">
      <summary>
        <para>Указывает, поддерживает ли текущая платформа шейдер (только для чтения).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ShaderMessage">
      <summary>
        <para>Содержит информацию о сообщениях, созданных компилятором шейдеров Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderMessage.file">
      <summary>
        <para>Исходный файл, в котором было найдено сообщение шейдера.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderMessage.line">
      <summary>
        <para>Строка кода, в которой было найдено сообщение шейдера.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderMessage.message">
      <summary>
        <para>Сообщение, возвращаемое компилятором шейдеров Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderMessage.messageDetails">
      <summary>
        <para>Подробное (необязательное) сообщение, возвращаемое компилятором шейдеров Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderMessage.platform">
      <summary>
        <para>Конкретная платформа, на которой компилятор шейдеров Unity обнаружил сообщение.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderMessage.severity">
      <summary>
        <para>Указывает серьезность сообщения, возвращаемого компилятором шейдеров Unity.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ShaderMessage.#ctor(System.String,UnityEditor.Rendering.ShaderCompilerMessageSeverity)">
      <summary>
        <para>Создает новое сообщение ShaderMessage с заданным сообщением и серьезностью.</para>
      </summary>
      <param name="msg">Сообщение для отчета.</param>
      <param name="sev">Указывает серьезность сообщения.</param>
    </member>
    <member name="M:UnityEditor.ShaderMessage.Equals(UnityEditor.ShaderMessage)">
      <summary>
        <para>Сравнивает два сообщения ShaderMessage поэлементно.</para>
      </summary>
      <param name="other">
      </param>
      <param name="obj">
      </param>
      <returns>
        <para>Истина, если все поля сообщения равны, иначе ложь.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderMessage.Equals(System.Object)">
      <summary>
        <para>Сравнивает два сообщения ShaderMessage поэлементно.</para>
      </summary>
      <param name="other">
      </param>
      <param name="obj">
      </param>
      <returns>
        <para>Истина, если все поля сообщения равны, иначе ложь.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderMessage.GetHashCode">
      <summary>
        <para>Генерирует хеш-значение на основе содержимого сообщения.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.ShaderMessage.op_Equal(UnityEditor.ShaderMessage,UnityEditor.ShaderMessage)">
      <summary>
        <para>Возвращает true, если все члены двух аргументов равны.</para>
      </summary>
      <param name="left">
      </param>
      <param name="right">
      </param>
    </member>
    <member name="?:UnityEditor.ShaderMessage.op_NotEqual(UnityEditor.ShaderMessage,UnityEditor.ShaderMessage)">
      <summary>
        <para>Возвращает true, если какой-либо из элементов двух аргументов не равен.</para>
      </summary>
      <param name="left">
      </param>
      <param name="right">
      </param>
    </member>
    <member name="T:UnityEditor.ShaderPrecisionModel">
      <summary>
        <para>Параметры модели точности шейдера.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShaderPrecisionModel.PlatformDefault">
      <summary>
        <para>Используйте значения по умолчанию целевой платформы для точности пробоотборника. Это приводит к снижению точности по подвижным целям и полной точности в других местах.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShaderPrecisionModel.Unified">
      <summary>
        <para>Используйте полную точность семплера по умолчанию и сделайте так, чтобы вам приходилось явно объявлять, когда вы хотите использовать более низкую точность. Это устанавливает Rendering.BuiltinShaderDefine.UNITY_UNIFIED_SHADER_PRECISION_MODEL, когда Unity компилирует шейдеры.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ShaderUtil">
      <summary>
        <para>Вспомогательные функции для помощи в работе с шейдерами из редактора.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderUtil.allowAsyncCompilation">
      <summary>
        <para>При значении true разрешается асинхронная компиляция шейдера на текущем сайте вызова.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderUtil.anythingCompiling">
      <summary>
        <para>Если установлено значение true, редактор асинхронно компилирует некоторые шейдеры в момент запроса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderUtil.hardwareSupportsRectRenderTexture">
      <summary>
        <para>Поддерживает ли текущее оборудование визуализацию текстов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ShaderUtil.ClearCachedData(UnityEngine.Shader)">
      <summary>
        <para>Удаляет все данные из внутреннего кэша, созданные для данного шейдера, такие как ошибки и информация о компиляции.</para>
      </summary>
      <param name="s">
      </param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.ClearShaderErrors(UnityEngine.Shader)">
      <summary>
        <para>Очищает сообщения времени компиляции для данного шейдера.</para>
      </summary>
      <param name="s">
      </param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.ClearShaderMessages(UnityEngine.Shader)">
      <summary>
        <para>Очистить сообщения времени компиляции для данного шейдера.</para>
      </summary>
      <param name="s">
      </param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.CompilePass(UnityEngine.Material,System.Int32,System.Boolean)">
      <summary>
        <para>Попросите редактора скомпилировать вариант шейдера, необходимый для конкретного прохода данного материала.</para>
      </summary>
      <param name="material">Целевой материал.</param>
      <param name="pass">Индекс целевого прохода шейдера.</param>
      <param name="forceSync">Принуждает выполнение скрипта ждать завершения компиляции. Необязательно.</param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.CreateShaderAsset(UnityEditor.AssetImporters.AssetImportContext,System.String,System.Boolean)">
      <summary>
        <para>Создает новый объект Shader из предоставленной строки исходного кода. Вы можете использовать этот метод вместе с ScriptedImporter для создания пользовательских инструментов генерации шейдеров в редакторе.</para>
      </summary>
      <param name="context">Объект контекста, который необходим системе активов для правильной регистрации зависимостей шейдера.</param>
      <param name="source">Строка, содержащая шейдер, написанный в коде.</param>
      <param name="compileInitialShaderVariants">Установите значение true, чтобы скомпилировать код, содержащийся в исходной строке; в противном случае ложь.</param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.CreateShaderAsset(System.String,System.Boolean)">
      <summary>
        <para>Создает новый объект Shader из предоставленной строки исходного кода. Вы можете использовать этот метод вместе с ScriptedImporter для создания пользовательских инструментов генерации шейдеров в редакторе.</para>
      </summary>
      <param name="context">Объект контекста, который необходим системе активов для правильной регистрации зависимостей шейдера.</param>
      <param name="source">Строка, содержащая шейдер, написанный в коде.</param>
      <param name="compileInitialShaderVariants">Установите значение true, чтобы скомпилировать код, содержащийся в исходной строке; в противном случае ложь.</param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.CreateShaderAsset(System.String)">
      <summary>
        <para>Создает новый объект Shader из предоставленной строки исходного кода. Вы можете использовать этот метод вместе с ScriptedImporter для создания пользовательских инструментов генерации шейдеров в редакторе.</para>
      </summary>
      <param name="context">Объект контекста, который необходим системе активов для правильной регистрации зависимостей шейдера.</param>
      <param name="source">Строка, содержащая шейдер, написанный в коде.</param>
      <param name="compileInitialShaderVariants">Установите значение true, чтобы скомпилировать код, содержащийся в исходной строке; в противном случае ложь.</param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetAllShaderInfo">
      <summary>
        <para>Возвращает массив ShaderInfo всех доступных шейдеров. Сюда входят встроенные шейдеры.</para>
      </summary>
      <returns>
        <para>Массив ShaderInfo всех доступных шейдеров.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetCallableShaderCount(UnityEngine.Experimental.Rendering.RayTracingShader)">
      <summary>
        <para>Возвращает количество вызываемых шейдеров, определенных в данном RayTracingShader.</para>
      </summary>
      <param name="s">Экземпляр RayTracingShader.</param>
      <returns>
        <para>Количество вызываемых шейдеров, определенных в экземпляре RayTracingShader, переданном в качестве аргумента.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetCallableShaderName(UnityEngine.Experimental.Rendering.RayTracingShader,System.Int32)">
      <summary>
        <para>Возвращает имя определяемого пользователем вызываемого шейдера из RayTracingShader.</para>
      </summary>
      <param name="s">Экземпляр RayTracingShader.</param>
      <param name="shaderIndex">Вызываемый индекс шейдера, для которого нужно получить имя. Вызываемые шейдеры, определенные в RayTracingShader, сортируются компилятором шейдеров в алфавитном порядке.</param>
      <returns>
        <para>Имя вызываемого шейдера по индексу, переданному с использованием аргумента «shaderIndex».</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetCallableShaderParamSize(UnityEngine.Experimental.Rendering.RayTracingShader,System.Int32)">
      <summary>
        <para>Возвращает размер параметра определяемого пользователем вызываемого шейдера из RayTracingShader.</para>
      </summary>
      <param name="s">Экземпляр RayTracingShader.</param>
      <param name="shaderIndex">Вызываемый индекс шейдера, для которого требуется получить размер параметра.</param>
      <returns>
        <para>Размер параметра в байтах.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetComputeShaderMessageCount(UnityEngine.ComputeShader)">
      <summary>
        <para>Возвращает количество ошибок и предупреждений, сгенерированных компилятором шейдеров Unity для данного шейдера ComputeShader.</para>
      </summary>
      <param name="s">Экземпляр ComputeShader для проверки сообщений.</param>
      <returns>
        <para>Количество ошибок и предупреждений, сгенерированных компилятором шейдеров Unity.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetComputeShaderMessages(UnityEngine.ComputeShader)">
      <summary>
        <para>Возвращает каждую ошибку и предупреждение, созданные компилятором шейдеров Unity для заданного шейдера ComputeShader.</para>
      </summary>
      <param name="s">Экземпляр ComputeShader для проверки сообщений.</param>
      <returns>
        <para>Массив структур ShaderMessage, содержащих сгенерированные сообщения.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetCurrentCustomEditor(UnityEngine.Shader)">
      <summary>
        <para>Получает текущий пользовательский редактор для передаваемого шейдера.

В зависимости от ресурса конвейера рендеринга, назначенного в настройках графики, пользовательский редактор может измениться, если у шейдера есть другой пользовательский редактор для одного или нескольких ресурсов конвейера рендеринга.</para>
      </summary>
      <param name="shader">Шейдер для проверки.</param>
      <returns>
        <para>Полное имя класса текущего пользовательского редактора.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetCustomEditorForRenderPipeline(UnityEngine.Shader,System.Type)">
      <summary>
        <para>Получает имя пользовательского класса редактора шейдера для определенного типа ресурса конвейера рендеринга.</para>
      </summary>
      <param name="renderPipelineType">Тип ресурса конвейера рендеринга.</param>
      <param name="shader">Шейдер для проверки.</param>
      <returns>
        <para>Возвращает полное имя класса пользовательского редактора.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetCustomEditorForRenderPipeline(UnityEngine.Shader,System.String)">
      <summary>
        <para>Получает имя пользовательского класса редактора шейдера для определенного типа ресурса конвейера рендеринга.</para>
      </summary>
      <param name="renderPipelineType">Тип ресурса конвейера рендеринга.</param>
      <param name="shader">Шейдер для проверки.</param>
      <returns>
        <para>Возвращает полное имя класса пользовательского редактора.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetMissShaderCount(UnityEngine.Experimental.Rendering.RayTracingShader)">
      <summary>
        <para>Возвращает количество пропущенных шейдеров, определенных в данном RayTracingShader.</para>
      </summary>
      <param name="s">Экземпляр RayTracingShader.</param>
      <returns>
        <para>Количество пропущенных шейдеров, определенное в экземпляре RayTracingShader, переданном в качестве аргумента.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetMissShaderName(UnityEngine.Experimental.Rendering.RayTracingShader,System.Int32)">
      <summary>
        <para>Возвращает имя определяемого пользователем шейдера промаха из RayTracingShader.</para>
      </summary>
      <param name="s">Экземпляр RayTracingShader.</param>
      <param name="shaderIndex">Индекс Miss Shader, для которого необходимо получить имя. Пропущенные шейдеры, определенные в RayTracingShader, сортируются компилятором шейдеров в алфавитном порядке.</param>
      <returns>
        <para>Имя пропущенного шейдера по индексу, переданному с помощью аргумента «shaderIndex».</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetMissShaderRayPayloadSize(UnityEngine.Experimental.Rendering.RayTracingShader,System.Int32)">
      <summary>
        <para>Возвращает размер полезной нагрузки луча определенного пользователем шейдера промаха из RayTracingShader.</para>
      </summary>
      <param name="s">Экземпляр RayTracingShader.</param>
      <param name="shaderIndex">Индекс пропущенного шейдера, для которого требуется получить размер полезной нагрузки луча.</param>
      <returns>
        <para>Размер полезной нагрузки луча в байтах.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetPassKeywords">
      <summary>
        <para>Получает ключевые слова локального шейдера, допустимые для передачи в определенном шейдере.</para>
      </summary>
      <param name="s">Шейдер, которому принадлежит Pass.</param>
      <param name="passIdentifier">Идентификатор прохода в данном шейдере.</param>
      <returns>
        <para>Возвращает массив LocalKeywords, допустимых для указанного вами прохода. Если используемый вами Rendering.PassIdentifier недействителен, эта функция возвращает пустой массив, а Unity отображает ошибку в окне консоли.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetPassKeywords">
      <summary>
        <para>Получает ключевые слова локального шейдера, допустимые для указанного этапа шейдера Pass в конкретном шейдере.</para>
      </summary>
      <param name="s">Шейдер, которому принадлежит Pass.</param>
      <param name="passIdentifier">Идентификатор прохода в данном шейдере.</param>
      <param name="shaderType">Этап шейдера данного прохода.</param>
      <returns>
        <para>Возвращает массив LocalKeywords, допустимых для заданного этапа шейдера Rendering.ShaderType|идентифицированного вами прохода. Если используемый вами Rendering.PassIdentifier недействителен, эта функция возвращает пустой массив, а Unity отображает ошибку в окне консоли. Если этап шейдера не существует в проходе, эта функция возвращает пустой массив.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetPropertyCount(UnityEngine.Shader)">
      <summary>
        <para>Получить количество свойств в Shader s.</para>
      </summary>
      <param name="s">Шейдер для проверки.</param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetPropertyDescription(UnityEngine.Shader,System.Int32)">
      <summary>
        <para>Получите описание свойства шейдера по индексу propertyIdx Shader s.</para>
      </summary>
      <param name="s">Шейдер для проверки.</param>
      <param name="propertyIdx">Используемый индекс свойства.</param>
      <returns>
        <para>Возвращает описание данного свойства шейдера.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetPropertyName(UnityEngine.Shader,System.Int32)">
      <summary>
        <para>Получите имя свойства шейдера по индексу propertyIdx Shader s.</para>
      </summary>
      <param name="s">Шейдер для проверки.</param>
      <param name="propertyIdx">Используемый индекс свойства.</param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetPropertyType(UnityEngine.Shader,System.Int32)">
      <summary>
        <para>Получите ShaderProperyType свойства шейдера по index propertyIdx Shader s.</para>
      </summary>
      <param name="s">Шейдер для проверки.</param>
      <param name="propertyIdx">Используемый индекс свойства.</param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetRangeLimits(UnityEngine.Shader,System.Int32,System.Int32)">
      <summary>
        <para>Получить ограничения для свойства диапазона по индексу propertyIdx Shader s.</para>
      </summary>
      <param name="defminmax">Какое значение получить: 0 = по умолчанию, 1 = мин., 2 = макс.</param>
      <param name="s">Шейдер для проверки.</param>
      <param name="propertyIdx">Используемый индекс свойства.</param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetRayGenerationShaderCount(UnityEngine.Experimental.Rendering.RayTracingShader)">
      <summary>
        <para>Возвращает количество шейдеров генерации лучей, определенных в данном RayTracingShader.</para>
      </summary>
      <param name="s">Экземпляр RayTracingShader.</param>
      <returns>
        <para>Количество шейдеров генерации лучей, определенных в экземпляре RayTracingShader, переданном в качестве аргумента.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetRayGenerationShaderName(UnityEngine.Experimental.Rendering.RayTracingShader,System.Int32)">
      <summary>
        <para>Возвращает имя определяемого пользователем шейдера генерации лучей из RayTracingShader.</para>
      </summary>
      <param name="s">Экземпляр RayTracingShader.</param>
      <param name="shaderIndex">Индекс шейдера генерации лучей, для которого требуется получить имя. Шейдеры генерации лучей, определенные в RayTracingShader, сортируются компилятором шейдеров в алфавитном порядке.</param>
      <returns>
        <para>Имя шейдера генерации лучей по индексу, переданному с использованием аргумента «shaderIndex».</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetRayTracingShaderMessageCount(UnityEngine.Experimental.Rendering.RayTracingShader)">
      <summary>
        <para>Возвращает количество ошибок и предупреждений, сгенерированных компилятором шейдеров для данного RayTracingShader.</para>
      </summary>
      <param name="s">Экземпляр RayTracingShader для проверки сообщений.</param>
      <returns>
        <para>Количество ошибок и предупреждений, сгенерированных компилятором шейдеров.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetRayTracingShaderMessages(UnityEngine.Experimental.Rendering.RayTracingShader)">
      <summary>
        <para>Возвращает каждую ошибку и предупреждение, созданные компилятором шейдеров для данного RayTracingShader.</para>
      </summary>
      <param name="s">Экземпляр RayTracingShader для проверки сообщений.</param>
      <returns>
        <para>Массив структур ShaderMessage, содержащих сгенерированные сообщения.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetShaderData(UnityEngine.Shader)">
      <summary>
        <para>Получить данные шейдера для определенного шейдера.</para>
      </summary>
      <param name="shader">Шейдер, из которого нужно получить данные.</param>
      <returns>
        <para>Данные шейдера для предоставленного шейдера.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetShaderInfo(UnityEngine.Shader)">
      <summary>
        <para>Получает ShaderInfo для данного шейдера.</para>
      </summary>
      <param name="shader">Шейдер, о котором нужно получить информацию.</param>
      <returns>
        <para>Возвращает экземпляр ShaderInfo для данного шейдера.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetShaderMessageCount(UnityEngine.Shader)">
      <summary>
        <para>Возвращает количество ошибок и предупреждений, сгенерированных компилятором шейдеров Unity для данного шейдера.</para>
      </summary>
      <param name="s">Экземпляр Shader для проверки сообщений.</param>
      <returns>
        <para>Количество ошибок и предупреждений, сгенерированных компилятором шейдеров Unity.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetShaderMessages(UnityEngine.Shader,UnityEditor.Rendering.ShaderCompilerPlatform)">
      <summary>
        <para>Возвращает каждую ошибку и предупреждение, сгенерированные компилятором шейдеров Unity для данного шейдера.</para>
      </summary>
      <param name="s">Экземпляр Shader для проверки сообщений.</param>
      <param name="platform">Платформа ShaderCompilerPlatform для проверки сообщений.</param>
      <returns>
        <para>Массив структур ShaderMessage, содержащих сгенерированные сообщения.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetShaderMessages(UnityEngine.Shader)">
      <summary>
        <para>Возвращает каждую ошибку и предупреждение, сгенерированные компилятором шейдеров Unity для данного шейдера.</para>
      </summary>
      <param name="s">Экземпляр Shader для проверки сообщений.</param>
      <param name="platform">Платформа ShaderCompilerPlatform для проверки сообщений.</param>
      <returns>
        <para>Массив структур ShaderMessage, содержащих сгенерированные сообщения.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetShaderPlatformKeywordsForBuildTarget(UnityEditor.Rendering.ShaderCompilerPlatform,UnityEditor.BuildTarget,UnityEngine.Rendering.GraphicsTier)">
      <summary>
        <para>Получает ключевые слова платформы для шейдера, учитывая платформу компилятора шейдера, цель сборки и дополнительный уровень графики. Эти ключевые слова платформы необходимы для правильной компиляции шейдера для заданной цели.</para>
      </summary>
      <param name="shaderCompilerPlatform">Платформа компилятора шейдеров.</param>
      <param name="buildTarget">Цель сборки.</param>
      <param name="tier">Дополнительный уровень графики.</param>
      <returns>
        <para>Возвращает массив определений встроенных шейдеров, необходимых для компиляции шейдера для заданной цели.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetShaderPlatformKeywordsForBuildTarget(UnityEditor.Rendering.ShaderCompilerPlatform,UnityEditor.BuildTarget)">
      <summary>
        <para>Получает ключевые слова платформы для шейдера, учитывая платформу компилятора шейдера, цель сборки и дополнительный уровень графики. Эти ключевые слова платформы необходимы для правильной компиляции шейдера для заданной цели.</para>
      </summary>
      <param name="shaderCompilerPlatform">Платформа компилятора шейдеров.</param>
      <param name="buildTarget">Цель сборки.</param>
      <param name="tier">Дополнительный уровень графики.</param>
      <returns>
        <para>Возвращает массив определений встроенных шейдеров, необходимых для компиляции шейдера для заданной цели.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetTexDim(UnityEngine.Shader,System.Int32)">
      <summary>
        <para>Получает размерность текстуры свойства шейдера.</para>
      </summary>
      <param name="s">Шейдер, из которого нужно получить свойство.</param>
      <param name="propertyIdx">Используемый индекс свойства.</param>
      <returns>
        <para>Размер текстуры.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.HasProceduralInstancing(UnityEngine.Shader)">
      <summary>
        <para>Определяет, содержит ли указанный шейдер допустимый вариант процедурного создания экземпляров.</para>
      </summary>
      <param name="s">Шейдер для проверки.</param>
      <returns>
        <para>Возвращает true, если у шейдера есть допустимый вариант процедурного создания экземпляров. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.IsPassCompiled(UnityEngine.Material,System.Int32)">
      <summary>
        <para>Проверяет, был ли уже скомпилирован вариант Шейдера для данного прохода в Материале.</para>
      </summary>
      <param name="material">Материал для проверки.</param>
      <param name="pass">Индекс прохода шейдера для проверки.</param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.IsShaderPropertyHidden(UnityEngine.Shader,System.Int32)">
      <summary>
        <para>Скрыто ли свойство шейдера в index propertyIdx Shader s?</para>
      </summary>
      <param name="s">Шейдер для проверки.</param>
      <param name="propertyIdx">Используемый индекс свойства.</param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.IsShaderPropertyNonModifiableTexureProperty(UnityEngine.Shader,System.Int32)">
      <summary>
        <para>Является ли свойство шейдера по индексу propertyIdx шейдера немодифицируемым свойством текстуры?</para>
      </summary>
      <param name="s">Шейдер для проверки.</param>
      <param name="propertyIdx">Используемый индекс свойства.</param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.PassHasKeyword">
      <summary>
        <para>Проверяет, допустимо ли ключевое слово локального шейдера для прохода в конкретном шейдере.</para>
      </summary>
      <param name="s">Шейдер, которому принадлежит Pass.</param>
      <param name="passIdentifier">Идентификатор прохода в данном шейдере.</param>
      <param name="keyword">Ключевое слово локального шейдера для проверки.</param>
      <returns>
        <para>Возвращает true, если ключевое слово допустимо для данного прохода. В противном случае возвращает ложь. Если используемый вами Rendering.PassIdentifier недействителен, эта функция возвращает false, и Unity отображает ошибку в окне консоли.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.PassHasKeyword">
      <summary>
        <para>Проверяет, допустимо ли ключевое слово локального шейдера для определенного этапа шейдера Pass в конкретном шейдере.</para>
      </summary>
      <param name="s">Шейдер, которому принадлежит Pass.</param>
      <param name="passIdentifier">Идентификатор прохода в данном шейдере.</param>
      <param name="keyword">Ключевое слово локального шейдера для проверки.</param>
      <param name="shaderType">Этап шейдера данного прохода.</param>
      <returns>
        <para>Возвращает true, если ключевое слово допустимо для данного этапа шейдера Pass. В противном случае возвращает ложь. Если используемый вами Rendering.PassIdentifier недействителен, эта функция возвращает false, и Unity отображает ошибку в окне консоли.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.PassHasKeyword">
      <summary>
        <para>Проверяет, допустимо ли ключевое слово локального шейдера для определенного этапа шейдера Pass в конкретном шейдере для данной платформы компилятора шейдера.</para>
      </summary>
      <param name="s">Шейдер, которому принадлежит Pass.</param>
      <param name="passIdentifier">Идентификатор прохода в данном шейдере.</param>
      <param name="keyword">Ключевое слово локального шейдера для проверки.</param>
      <param name="shaderType">Этап шейдера данного прохода.</param>
      <param name="shaderCompilerPlatform">Платформа компилятора шейдеров для проверки.</param>
      <returns>
        <para>Возвращает true, если ключевое слово допустимо для данного этапа шейдера Pass для данной ShaderCompilerPlatform. В противном случае возвращает ложь. Если используемый вами Rendering.PassIdentifier недействителен, эта функция возвращает false, и Unity отображает ошибку в окне консоли.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.RegisterShader(UnityEngine.Shader)">
      <summary>
        <para>Зарегистрируйте созданный пользователем шейдер.</para>
      </summary>
      <param name="shader">
      </param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.RestoreAsyncCompilation(UnityEngine.Rendering.CommandBuffer)">
      <summary>
        <para>Восстанавливает предыдущий режим компиляции шейдера в этой области CommandBuffer.</para>
      </summary>
      <param name="cmd">Целевой буфер команд.</param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.SetAsyncCompilation(UnityEngine.Rendering.CommandBuffer,System.Boolean)">
      <summary>
        <para>Добавляет команду режима компиляции шейдера в CommandBuffer.</para>
      </summary>
      <param name="cmd">Целевой буфер команд.</param>
      <param name="allow">Разрешена ли компиляция асинхронного шейдера.</param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.ShaderHasError(UnityEngine.Shader)">
      <summary>
        <para>Проверяет, есть ли у шейдера ошибки компиляции. Игнорирует предупреждения.</para>
      </summary>
      <param name="shader">Шейдер для проверки ошибок компиляции.</param>
      <returns>
        <para>Возвращает true, если шейдер имеет какие-либо ошибки компиляции. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.ShaderHasWarnings(UnityEngine.Shader)">
      <summary>
        <para>Проверяет, есть ли у шейдера какие-либо предупреждения компиляции. Игнорирует ошибки.</para>
      </summary>
      <param name="shader">Шейдер для проверки предупреждений компиляции.</param>
      <returns>
        <para>Возвращает true, если шейдер имеет какие-либо предупреждения компиляции. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.ShaderUtil.ShaderPropertyType">
      <summary>
        <para>Тип данного свойства текстуры.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShaderUtil.ShaderPropertyType.Color">
      <summary>
        <para>Свойство цвета.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShaderUtil.ShaderPropertyType.Float">
      <summary>
        <para>Плавающее свойство.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShaderUtil.ShaderPropertyType.Int">
      <summary>
        <para>Целое свойство.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShaderUtil.ShaderPropertyType.Range">
      <summary>
        <para>Свойство диапазона.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShaderUtil.ShaderPropertyType.TexEnv">
      <summary>
        <para>Свойство текстуры.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShaderUtil.ShaderPropertyType.Vector">
      <summary>
        <para>Свойство вектора.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ShaderUtil.UpdateShaderAsset(UnityEditor.AssetImporters.AssetImportContext,UnityEngine.Shader,System.String,System.Boolean)">
      <summary>
        <para>Заменяет существующий исходный код в указанном шейдере исходным кодом в предоставленной строке.</para>
      </summary>
      <param name="context">Объект контекста, который необходим системе активов для правильной регистрации зависимостей шейдера.</param>
      <param name="source">Строка, содержащая шейдер, написанный в коде.</param>
      <param name="compileInitialShaderVariants">Установите значение true, чтобы скомпилировать код, содержащийся в исходной строке; в противном случае ложь.</param>
      <param name="shader">Шейдер для обновления.</param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.UpdateShaderAsset(UnityEngine.Shader,System.String,System.Boolean)">
      <summary>
        <para>Заменяет существующий исходный код в указанном шейдере исходным кодом в предоставленной строке.</para>
      </summary>
      <param name="context">Объект контекста, который необходим системе активов для правильной регистрации зависимостей шейдера.</param>
      <param name="source">Строка, содержащая шейдер, написанный в коде.</param>
      <param name="compileInitialShaderVariants">Установите значение true, чтобы скомпилировать код, содержащийся в исходной строке; в противном случае ложь.</param>
      <param name="shader">Шейдер для обновления.</param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.UpdateShaderAsset(UnityEngine.Shader,System.String)">
      <summary>
        <para>Заменяет существующий исходный код в указанном шейдере исходным кодом в предоставленной строке.</para>
      </summary>
      <param name="context">Объект контекста, который необходим системе активов для правильной регистрации зависимостей шейдера.</param>
      <param name="source">Строка, содержащая шейдер, написанный в коде.</param>
      <param name="compileInitialShaderVariants">Установите значение true, чтобы скомпилировать код, содержащийся в исходной строке; в противном случае ложь.</param>
      <param name="shader">Шейдер для обновления.</param>
    </member>
    <member name="T:UnityEditor.ShortcutManagement.ActiveProfileChangedEventArgs">
      <summary>
        <para>Предоставляет данные для события ShortcutManagement.IShortcutManager.activeProfileChanged.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShortcutManagement.ActiveProfileChangedEventArgs.currentActiveProfileId">
      <summary>
        <para>Идентификатор текущего активного профиля.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShortcutManagement.ActiveProfileChangedEventArgs.previousActiveProfileId">
      <summary>
        <para>Идентификатор предыдущего активного профиля.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.ActiveProfileChangedEventArgs.#ctor(System.String,System.String)">
      <summary>
        <para>Инициализирует новый экземпляр структуры ShortcutManagement.ActiveProfileChangedEventArgs, используя указанный идентификатор предыдущего активного профиля и идентификатор текущего активного профиля.</para>
      </summary>
      <param name="previousActiveProfileId">Идентификатор предыдущего активного профиля.</param>
      <param name="currentActiveProfileId">Идентификатор текущего активного профиля.</param>
    </member>
    <member name="T:UnityEditor.ShortcutManagement.ClutchShortcutAttribute">
      <summary>
        <para>Атрибут, используемый для регистрации статического метода в качестве действия для сочетания клавиш.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.ClutchShortcutAttribute.#ctor(System.String,System.Type)">
      <summary>
        <para>Создает атрибут для сочетания клавиш с идентификатором, необязательным контекстом и необязательным привязкой по умолчанию.</para>
      </summary>
      <param name="id">Идентификатор ярлыка.</param>
      <param name="context">Необязательный тип контекста ярлыка.</param>
      <param name="defaultKeyCode">Дополнительный код ключа для привязки по умолчанию.</param>
      <param name="defaultShortcutModifiers">Необязательные модификаторы быстрого доступа для привязки по умолчанию.</param>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.ClutchShortcutAttribute.#ctor(System.String,System.Type,UnityEngine.KeyCode,UnityEditor.ShortcutManagement.ShortcutModifiers)">
      <summary>
        <para>Создает атрибут для сочетания клавиш с идентификатором, необязательным контекстом и необязательным привязкой по умолчанию.</para>
      </summary>
      <param name="id">Идентификатор ярлыка.</param>
      <param name="context">Необязательный тип контекста ярлыка.</param>
      <param name="defaultKeyCode">Дополнительный код ключа для привязки по умолчанию.</param>
      <param name="defaultShortcutModifiers">Необязательные модификаторы быстрого доступа для привязки по умолчанию.</param>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.ClutchShortcutAttribute.#ctor(System.String,UnityEngine.KeyCode,UnityEditor.ShortcutManagement.ShortcutModifiers)">
      <summary>
        <para>Создает атрибут для сочетания клавиш с идентификатором, необязательным контекстом и необязательным привязкой по умолчанию.</para>
      </summary>
      <param name="id">Идентификатор ярлыка.</param>
      <param name="context">Необязательный тип контекста ярлыка.</param>
      <param name="defaultKeyCode">Дополнительный код ключа для привязки по умолчанию.</param>
      <param name="defaultShortcutModifiers">Необязательные модификаторы быстрого доступа для привязки по умолчанию.</param>
    </member>
    <member name="?:UnityEditor.ShortcutManagement.IShortcutManager">
      <summary>
        <para>Представляет менеджер, который настраивает конкретный экземпляр системы ярлыков.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.ShortcutManagement.IShortcutManager.activeProfileChanged(System.Action`1&lt;UnityEditor.ShortcutManagement.ActiveProfileChangedEventArgs&gt;)">
      <summary>
        <para>Возникает при изменении идентификатора активного профиля.</para>
      </summary>
      <param name="value">Обработчик событий изменения активного профиля.</param>
    </member>
    <member name="P:UnityEditor.ShortcutManagement.IShortcutManager.activeProfileId">
      <summary>
        <para>Получает или задает идентификатор текущего активного профиля.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.ShortcutManagement.IShortcutManager.shortcutBindingChanged(System.Action`1&lt;UnityEditor.ShortcutManagement.ShortcutBindingChangedEventArgs&gt;)">
      <summary>
        <para>Возникает при изменении переопределения ярлыков в активном профиле.</para>
      </summary>
      <param name="value">Привязка ярлыка изменила обработчик событий.</param>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.IShortcutManager.ClearShortcutOverride(System.String)">
      <summary>
        <para>Удаляет привязку ярлыка с заданным идентификатором ярлыка из активного профиля.</para>
      </summary>
      <param name="shortcutId">Идентификатор ярлыка, для которого необходимо отменить переопределение.</param>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.IShortcutManager.CreateProfile(System.String)">
      <summary>
        <para>Создает новый профиль с заданным идентификатором профиля.</para>
      </summary>
      <param name="profileId">ID созданного профиля.</param>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.IShortcutManager.DeleteProfile(System.String)">
      <summary>
        <para>Удаляет профиль с заданным идентификатором профиля.</para>
      </summary>
      <param name="profileId">ID удаляемого профиля.</param>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.IShortcutManager.GetAvailableProfileIds">
      <summary>
        <para>Возвращает перечисление всех доступных идентификаторов профилей.</para>
      </summary>
      <returns>
        <para>Перечисление доступных идентификаторов профилей.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.IShortcutManager.GetAvailableShortcutIds">
      <summary>
        <para>Возвращает перечисление всех доступных идентификаторов ярлыков.</para>
      </summary>
      <returns>
        <para>Перечисление доступных идентификаторов ярлыков.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.IShortcutManager.GetShortcutBinding(System.String)">
      <summary>
        <para>Возвращает активную привязку для данного идентификатора ярлыка.</para>
      </summary>
      <param name="shortcutId">Идентификатор ярлыка, для которого необходимо получить привязку.</param>
      <returns>
        <para>Активная привязка для ярлыка.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.IShortcutManager.IsProfileIdValid(System.String)">
      <summary>
        <para>Проверяет правильность идентификатора профиля.</para>
      </summary>
      <param name="profileId">Идентификатор профиля, который необходимо проверить. Если указана пустая строка, метод выдает ошибку ArgumentNullException.</param>
      <returns>
        <para>Возвращает true, если идентификатор профиля действителен. Возвращает false, если идентификатор профиля пуст или равен ShortcutManager.defaultProfileId.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.IShortcutManager.IsProfileReadOnly(System.String)">
      <summary>
        <para>Является ли профиль для данного идентификатора профиля доступным только для чтения?</para>
      </summary>
      <param name="profileId">Идентификатор профиля, для которого определяется статус только для чтения.</param>
      <returns>
        <para>Значение true, если профиль с идентификатором profileId доступен только для чтения: в противном случае — значение false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.IShortcutManager.IsShortcutOverridden(System.String)">
      <summary>
        <para>Активный профиль переопределяет привязку для данного идентификатора ярлыка?</para>
      </summary>
      <param name="shortcutId">Идентификатор ярлыка, для которого определяется статус переопределения.</param>
      <returns>
        <para>true, если в активном профиле переопределяется ярлык с идентификатором ShortId; в противном случае — ложь.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.IShortcutManager.RebindShortcut(System.String,UnityEditor.ShortcutManagement.ShortcutBinding)">
      <summary>
        <para>Повторно привязывает ярлык для данного идентификатора ярлыка к заданной привязке в активном профиле.</para>
      </summary>
      <param name="shortcutId">ID ярлыка для повторной привязки.</param>
      <param name="binding">Новая привязка ярлыка.</param>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.IShortcutManager.RenameProfile(System.String,System.String)">
      <summary>
        <para>Переименовывает идентификатор профиля.</para>
      </summary>
      <param name="profileId">ID существующего профиля.</param>
      <param name="newProfileId">Новый идентификатор для профиля.</param>
    </member>
    <member name="T:UnityEditor.ShortcutManagement.KeyCombination">
      <summary>
        <para>Представляет комбинацию клавиши без модификатора и нуля или более клавиш-модификаторов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShortcutManagement.KeyCombination.action">
      <summary>
        <para>Является ли модификатор клавиши действия частью комбинации клавиш? Клавиша действия представляет собой клавишу Control в Windows и Linux и клавишу Command в macOS.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShortcutManagement.KeyCombination.alt">
      <summary>
        <para>Является ли клавиша-модификатор Alt (или Option в macOS) частью комбинации клавиш?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShortcutManagement.KeyCombination.control">
      <summary>
        <para>Определяет, является ли модификатор клавиши Control частью комбинации клавиш. Представляет клавишу Control в Windows, macOS и Linux.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShortcutManagement.KeyCombination.keyCode">
      <summary>
        <para>Код клавиши, представляющий немодифицирующую клавишу комбинации клавиш.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShortcutManagement.KeyCombination.modifiers">
      <summary>
        <para>Клавиши-модификаторы комбинации клавиш.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShortcutManagement.KeyCombination.shift">
      <summary>
        <para>Является ли модификатор клавиши Shift частью комбинации клавиш?</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.KeyCombination.#ctor(UnityEngine.KeyCode,UnityEditor.ShortcutManagement.ShortcutModifiers)">
      <summary>
        <para>Создает новую комбинацию клавиш с заданным кодом клавиши и модификаторами быстрого доступа.</para>
      </summary>
      <param name="keyCode">Код клавиши без модификатора комбинации клавиш.</param>
      <param name="shortcutModifiers">Сочетания клавиш-модификаторов комбинации клавиш.</param>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.KeyCombination.ToString">
      <summary>
        <para>Возвращает строковое представление комбинации клавиш.</para>
      </summary>
      <returns>
        <para>Строковое представление комбинации клавиш.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.ShortcutManagement.ShortcutArguments">
      <summary>
        <para>Предоставляет данные для методов действия быстрого доступа, вызываемых системой быстрого доступа.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShortcutManagement.ShortcutArguments.context">
      <summary>
        <para>Экземпляр контекста, в котором сработал ярлык.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShortcutManagement.ShortcutArguments.stage">
      <summary>
        <para>Этап, на котором было вызвано действие быстрого доступа.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ShortcutManagement.ShortcutAttribute">
      <summary>
        <para>Атрибут, используемый для регистрации статического метода в качестве действия для ярлыка действия.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShortcutManagement.ShortcutAttribute.displayName">
      <summary>
        <para>Необязательное переопределение идентификатора ярлыка при указании ярлыка в интерфейсе конфигурации.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.ShortcutAttribute.#ctor(System.String,System.Type)">
      <summary>
        <para>Создает атрибут для ярлыка действия с идентификатором, необязательным контекстом и необязательным привязкой по умолчанию.</para>
      </summary>
      <param name="id">Идентификатор ярлыка.</param>
      <param name="context">Необязательный тип контекста ярлыка.</param>
      <param name="defaultKeyCode">Дополнительный код ключа для привязки по умолчанию.</param>
      <param name="defaultShortcutModifiers">Необязательные модификаторы быстрого доступа для привязки по умолчанию.</param>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.ShortcutAttribute.#ctor(System.String,System.Type,UnityEngine.KeyCode,UnityEditor.ShortcutManagement.ShortcutModifiers)">
      <summary>
        <para>Создает атрибут для ярлыка действия с идентификатором, необязательным контекстом и необязательным привязкой по умолчанию.</para>
      </summary>
      <param name="id">Идентификатор ярлыка.</param>
      <param name="context">Необязательный тип контекста ярлыка.</param>
      <param name="defaultKeyCode">Дополнительный код ключа для привязки по умолчанию.</param>
      <param name="defaultShortcutModifiers">Необязательные модификаторы быстрого доступа для привязки по умолчанию.</param>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.ShortcutAttribute.#ctor(System.String,UnityEngine.KeyCode,UnityEditor.ShortcutManagement.ShortcutModifiers)">
      <summary>
        <para>Создает атрибут для ярлыка действия с идентификатором, необязательным контекстом и необязательным привязкой по умолчанию.</para>
      </summary>
      <param name="id">Идентификатор ярлыка.</param>
      <param name="context">Необязательный тип контекста ярлыка.</param>
      <param name="defaultKeyCode">Дополнительный код ключа для привязки по умолчанию.</param>
      <param name="defaultShortcutModifiers">Необязательные модификаторы быстрого доступа для привязки по умолчанию.</param>
    </member>
    <member name="T:UnityEditor.ShortcutManagement.ShortcutBaseAttribute">
      <summary>
        <para>Абстрактный базовый класс для ShortcutManagement.ShortcutAttribute и ShortcutManagement.ClutchShortcutAttribute.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ShortcutManagement.ShortcutBinding">
      <summary>
        <para>Представляет привязку клавиш, используемую для запуска сочетания клавиш.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShortcutManagement.ShortcutBinding.empty">
      <summary>
        <para>Комбинация клавиш, представляющая пустую привязку.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShortcutManagement.ShortcutBinding.keyCombinationSequence">
      <summary>
        <para>Последовательность комбинаций клавиш, необходимая для запуска сочетания клавиш с этой привязкой.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.ShortcutBinding.#ctor(UnityEditor.ShortcutManagement.KeyCombination)">
      <summary>
        <para>Создает привязку быстрого доступа из одной комбинации клавиш.</para>
      </summary>
      <param name="keyCombination">Комбинация клавиш, используемая для запуска ярлыка с этой привязкой.</param>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.ShortcutBinding.Equals(UnityEditor.ShortcutManagement.ShortcutBinding)">
      <summary>
        <para>Определяет, имеют ли этот экземпляр и другой указанный экземпляр ShortcutBinding одно и то же значение.</para>
      </summary>
      <param name="other">ShortcutBinding для сравнения с этим экземпляром.</param>
      <returns>
        <para>true, если значение другого параметра совпадает со значением этого экземпляра; в противном случае — ложь.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.ShortcutBinding.Equals(System.Object)">
      <summary>
        <para>Определяет, имеют ли этот экземпляр и указанный объект, который также должен быть объектом [[ShortcutBinding}}, одно и то же значение.</para>
      </summary>
      <param name="obj">ShortcutBinding для сравнения с этим экземпляром.</param>
      <returns>
        <para>Значение true, если obj является ShortcutBinding и его значение такое же, как у этого экземпляра; в противном случае ложно. Если obj имеет значение null, метод возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.ShortcutBinding.GetHashCode">
      <summary>
        <para>Возвращает хэш-код для значения этого экземпляра.</para>
      </summary>
      <returns>
        <para>32-битный целочисленный хэш-код со знаком.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.ShortcutBinding.ToString">
      <summary>
        <para>Преобразует значение текущего объекта ShortcutManagement.ShortcutBinding в его эквивалентное строковое представление.</para>
      </summary>
      <returns>
        <para>Строковое представление текущего значения ShortcutManagement.ShortcutBinding.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.ShortcutManagement.ShortcutBindingChangedEventArgs">
      <summary>
        <para>Предоставляет данные для события ShortcutManagement.IShortcutManager.shortcutBindingChanged.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShortcutManagement.ShortcutBindingChangedEventArgs.newBinding">
      <summary>
        <para>Новая привязка для ярлыка, привязка которого была изменена.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShortcutManagement.ShortcutBindingChangedEventArgs.oldBinding">
      <summary>
        <para>Старая привязка для ярлыка, привязка которого была изменена.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShortcutManagement.ShortcutBindingChangedEventArgs.shortcutId">
      <summary>
        <para>Идентификатор ярлыка, для которого была изменена привязка.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.ShortcutBindingChangedEventArgs.#ctor(System.String,UnityEditor.ShortcutManagement.ShortcutBinding,UnityEditor.ShortcutManagement.ShortcutBinding)">
      <summary>
        <para>Инициализирует новый экземпляр структуры ShortcutManagement.ShortcutBindingChangedEventArgs, используя указанный идентификатор ярлыка, старую и новую привязку.</para>
      </summary>
      <param name="shortcutId">Идентификатор ярлыка, для которого была изменена привязка.</param>
      <param name="oldBinding">Старая привязка ярлыка, привязка которого была изменена.</param>
      <param name="newBinding">Новая привязка ярлыка, привязка которого была изменена.</param>
    </member>
    <member name="T:UnityEditor.ShortcutManagement.ShortcutManager">
      <summary>
        <para>Предоставляет доступ к экземпляру ShortcutManagement.IShortcutManager для управления ярлыками.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShortcutManagement.ShortcutManager.defaultProfileId">
      <summary>
        <para>Константа, определяющая идентификатор профиля ярлыка по умолчанию. См. документацию по свойству ShortcutManagement.IShortcutManager.activeProfileId.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShortcutManagement.ShortcutManager.instance">
      <summary>
        <para>Экземпляр интерфейса ShortcutManagement.IShortcutManager, используемый для управления ярлыками в редакторе.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ShortcutManagement.ShortcutModifiers">
      <summary>
        <para>Представляет клавиши-модификаторы для использования в привязке быстрого доступа.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShortcutManagement.ShortcutModifiers.Action">
      <summary>
        <para>Клавиша управления в Windows и Linux. Командная клавиша в macOS.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShortcutManagement.ShortcutModifiers.Alt">
      <summary>
        <para>Клавиша Alt (или клавиша Option в macOS).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShortcutManagement.ShortcutModifiers.Control">
      <summary>
        <para>Отмечает, что модификатор клавиши Control является частью комбинации клавиш. Позволяет управлять ключом в Windows, macOS и Linux.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShortcutManagement.ShortcutModifiers.None">
      <summary>
        <para>Нет клавиш-модификаторов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShortcutManagement.ShortcutModifiers.Shift">
      <summary>
        <para>Клавиша Shift.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ShortcutManagement.ShortcutStage">
      <summary>
        <para>Представляет этап, на котором было вызвано действие быстрого доступа.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShortcutManagement.ShortcutStage.Begin">
      <summary>
        <para>Указывает, что действие быстрого доступа началось.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShortcutManagement.ShortcutStage.End">
      <summary>
        <para>Указывает, что действие быстрого доступа завершено.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SketchUpImportCamera">
      <summary>
        <para>Структура для хранения данных камеры, извлеченных из файла SketchUp.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SketchUpImportCamera.aspectRatio">
      <summary>
        <para>Соотношение сторон камеры.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SketchUpImportCamera.farPlane">
      <summary>
        <para>Расстояние ближней плоскости отсечения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SketchUpImportCamera.fieldOfView">
      <summary>
        <para>Поле зрения камеры.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SketchUpImportCamera.isPerspective">
      <summary>
        <para>Укажите, использует ли камера перспективную или ортогональную проекцию.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SketchUpImportCamera.lookAt">
      <summary>
        <para>Позиция, на которую смотрит камера.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SketchUpImportCamera.nearPlane">
      <summary>
        <para>Расстояние до дальней плоскости отсечения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SketchUpImportCamera.orthoSize">
      <summary>
        <para>Размер ортогональной проекции камеры. Это значение имеет смысл, только если SketchUpImportCamera.isPerspective имеет значение false.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SketchUpImportCamera.position">
      <summary>
        <para>Положение камеры.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SketchUpImportCamera.up">
      <summary>
        <para>Верхний вектор камеры.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SketchUpImporter">
      <summary>
        <para>Унаследован от AssetImporter для обработки импорта файлов SketchUp.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SketchUpImporter.latitude">
      <summary>
        <para>Извлекает геокоординату широты, импортированную из файла SketchUp.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SketchUpImporter.longitude">
      <summary>
        <para>Извлекает географическую координату долготы, импортированную из файла SketchUp.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SketchUpImporter.northCorrection">
      <summary>
        <para>Извлекает значение поправки на север, импортированное из файла SketchUp.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SketchUpImporter.GetDefaultCamera">
      <summary>
        <para>Камера по умолчанию или камера активной сцены, с которой был сохранен файл SketchUp.</para>
      </summary>
      <returns>
        <para>Камера по умолчанию.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SketchUpImporter.GetScenes">
      <summary>
        <para>Метод возвращает массив SketchUpImportScene, который представляет сцены SketchUp.</para>
      </summary>
      <returns>
        <para>Массив сцен, извлеченных из файла SketchUp.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.SketchUpImportScene">
      <summary>
        <para>Структура для хранения данных сцены, извлеченных из файла SketchUp.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SketchUpImportScene.camera">
      <summary>
        <para>Данные камеры сцены SketchUp.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SketchUpImportScene.name">
      <summary>
        <para>Имя сцены SketchUp.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SpeedTreeImporter">
      <summary>
        <para>AssetImportor для импорта ресурсов модели SpeedTree.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.alphaTestRef">
      <summary>
        <para>Получает и задает эталонные значения альфа-теста по умолчанию.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.animateCrossFading">
      <summary>
        <para>Указывает, следует ли анимировать переход LOD кроссфейда, примененный к последнему LOD сетки и рекламному щиту.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.bestWindQuality">
      <summary>
        <para>Возвращает максимально возможное качество ветра для этого актива (настроено в моделирующем устройстве SpeedTree).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.billboardTransitionCrossFadeWidth">
      <summary>
        <para>Доля ширины последней области LOD 3D-сетки, которая используется для плавного перехода к дереву рекламных щитов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.castShadows">
      <summary>
        <para>Получает и задает массив логических значений для включения отбрасывания теней для каждого уровня детализации.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.defaultBillboardShader">
      <summary>
        <para>Возвращает шейдер рекламного щита SpeedTree по умолчанию для активного конвейера рендеринга или значение null, если ресурс является ресурсом SpeedTree v8.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.defaultShader">
      <summary>
        <para>Возвращает шейдер SpeedTree по умолчанию для активного конвейера рендеринга (v7 или v8 в зависимости от версии актива).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.enableBump">
      <summary>
        <para>Получает и задает массив логических значений для включения сопоставления нормалей для каждого уровня детализации.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.enableHue">
      <summary>
        <para>Получает и задает массив логических значений, чтобы включить эффект изменения оттенка для каждого уровня детализации.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.enableSmoothLODTransition">
      <summary>
        <para>Включает плавные переходы уровня детализации.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.enableSubsurface">
      <summary>
        <para>Получает и задает массив логических значений для включения эффекта Subsurface для каждого уровня детализации (влияет только на ресурсы SpeedTree v8).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.fadeOutWidth">
      <summary>
        <para>Доля ширины области детализации рекламного щита, которая используется для затухания рекламного щита.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.hasBillboard">
      <summary>
        <para>Сообщает, есть ли рекламный щит LOD.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.hasImported">
      <summary>
        <para>Сообщает, был ли ранее импортирован файл SPM.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.hueVariation">
      <summary>
        <para>Получает и задает цвет и количество вариации оттенка по умолчанию (в альфа-канале).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.isV8">
      <summary>
        <para>Возвращает true, если ресурс является ресурсом SpeedTree v8.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.mainColor">
      <summary>
        <para>Получает и задает основной цвет по умолчанию.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.materialFolderPath">
      <summary>
        <para>Возвращает путь к папке, в которую будут помещены сгенерированные материалы.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.materialLocation">
      <summary>
        <para>Параметры места импорта материалов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.receiveShadows">
      <summary>
        <para>Получает и задает массив логических значений, чтобы разрешить прием теней для каждого уровня детализации.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.scaleFactor">
      <summary>
        <para>Насколько масштабировать модель дерева по сравнению с тем, что находится в файле .spm.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.shininess">
      <summary>
        <para>Получает и задает значение блеска по умолчанию.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.specColor">
      <summary>
        <para>Получает и задает цвет отражения по умолчанию.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.useLightProbes">
      <summary>
        <para>Получает и задает массив логических значений для включения освещения Light Probe для каждого уровня детализации.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.windQualities">
      <summary>
        <para>Получает и задает массив целых чисел качества ветра для каждого уровня детализации. Значения будут внутренне ограничены bestWindQuality.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpeedTreeImporter.windQualityNames">
      <summary>
        <para>Получает массив строк имен для значения качества ветра.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SpeedTreeImporter.#ctor">
      <summary>
        <para>Создайте новый объект SpeedTreeImporter.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SpeedTreeImporter.GenerateMaterials">
      <summary>
        <para>Генерирует все необходимые материалы в materialFolderPath. Если контроль версий включен, сначала проверьте папку.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.LODHeights">
      <summary>
        <para>Получает и задает массив чисел с плавающей запятой для каждого значения высоты экрана LOD.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SpeedTreeImporter.MaterialLocation">
      <summary>
        <para>Параметры места импорта материалов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpeedTreeImporter.MaterialLocation.External">
      <summary>
        <para>Извлеките материалы и текстуры из модели.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpeedTreeImporter.MaterialLocation.InPrefab">
      <summary>
        <para>Unity импортирует материалы как вспомогательные активы.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SpeedTreeImporter.SearchAndRemapMaterials(System.String)">
      <summary>
        <para>Найдите в проекте подходящие материалы и используйте их вместо внутренних материалов.</para>
      </summary>
      <param name="materialFolderPath">Путь для поиска подходящих материалов.</param>
      <returns>
        <para>Возвращает true, если какие-либо материалы были переназначены, иначе false.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.SplashScreenStyle">
      <summary>
        <para>Используемый стиль встроенной заставки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SplashScreenStyle.Dark">
      <summary>
        <para>Темный фон со светлым логотипом и текстом.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SplashScreenStyle.Light">
      <summary>
        <para>Белый фон с темным логотипом и текстом.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SpriteImportMode">
      <summary>
        <para>Режимы импорта текстур для импорта Sprite.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpriteImportMode.Multiple">
      <summary>
        <para>Спрайты представляют собой несколько фрагментов изображения, извлеченных из текстуры.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpriteImportMode.None">
      <summary>
        <para>Графика — это не спрайт.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpriteImportMode.Polygon">
      <summary>
        <para>Спрайт имеет собственный контур сетки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpriteImportMode.Single">
      <summary>
        <para>Спрайт — это отдельная часть изображения, автоматически извлекаемая из текстуры.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SpriteMetaData">
      <summary>
        <para>Данные редактора, используемые при создании Sprite.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpriteMetaData.alignment">
      <summary>
        <para>Выравнивание спрайта относительно краев.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpriteMetaData.border">
      <summary>
        <para>Размер границы края спрайта (в пикселях).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpriteMetaData.name">
      <summary>
        <para>Имя спрайта.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpriteMetaData.pivot">
      <summary>
        <para>Точка вращения спрайта относительно его ограничивающего прямоугольника.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpriteMetaData.rect">
      <summary>
        <para>Ограничивающий прямоугольник изображения спрайта в изображении атласа.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SpritePackerMode">
      <summary>
        <para>Режим Sprite Packer для текущего проекта.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpritePackerMode.AlwaysOn">
      <summary>
        <para>Всегда поддерживайте актуальный кэш атласа спрайтов для Sprite с тегом упаковки (устаревший).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpritePackerMode.AlwaysOnAtlas">
      <summary>
        <para>Всегда упаковывайте все SpriteAtlas.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpritePackerMode.BuildTimeOnly">
      <summary>
        <para>Обновляет кэш атласа спрайтов, когда проигрыватель или пакеты содержат Sprite с устаревшим тегом упаковки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpritePackerMode.BuildTimeOnlyAtlas">
      <summary>
        <para>Упакуйте все SpriteAtlas при сборке плеера/наборов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpritePackerMode.Disabled">
      <summary>
        <para>Не упаковывает спрайты.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpritePackerMode.SpriteAtlasV2">
      <summary>
        <para>Если включено, все ресурсы *.spriteatlas будут автоматически перенесены в ресурсы *.spriteatlasv2. Старые ресурсы *.spriteatlas будут удалены.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Sprites.AtlasSettings">
      <summary>
        <para>Описывает окончательную текстуру атласа.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Sprites.AtlasSettings.allowsAlphaSplitting">
      <summary>
        <para>Помечает этот атлас так, чтобы он содержал текстуры, которые при необходимости были помечены для альфа-разбиения (например, сжатие ETC1 для текстур с прозрачностью).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Sprites.AtlasSettings.anisoLevel">
      <summary>
        <para>Уровень анизотропной фильтрации текстуры атласа.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Sprites.AtlasSettings.colorSpace">
      <summary>
        <para>Желаемое цветовое пространство атласа.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Sprites.AtlasSettings.compressionQuality">
      <summary>
        <para>Качество сжатия текстуры атласа в диапазоне [0..100].</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Sprites.AtlasSettings.enableRotation">
      <summary>
        <para>Позволяет Sprite Packer вращать/переворачивать Sprite для обеспечения оптимальной упаковки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Sprites.AtlasSettings.filterMode">
      <summary>
        <para>Режим фильтрации текстуры атласа.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Sprites.AtlasSettings.format">
      <summary>
        <para>Формат текстуры атласа.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Sprites.AtlasSettings.generateMipMaps">
      <summary>
        <para>Определяет, генерируют ли текстуры атласа спрайтов MIP-карты.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Sprites.AtlasSettings.maxHeight">
      <summary>
        <para>Максимальная высота текстуры атласа.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Sprites.AtlasSettings.maxWidth">
      <summary>
        <para>Максимальная ширина текстуры атласа.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Sprites.AtlasSettings.paddingPower">
      <summary>
        <para>Количество дополнительных отступов между упакованными спрайтами.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Sprites.IPackerPolicy">
      <summary>
        <para>Интерфейс политики упаковки спрайтов. Обеспечьте пользовательскую реализацию для управления тем, какие спрайты входят в какие атласы.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Sprites.IPackerPolicy.AllowSequentialPacking">
      <summary>
        <para>Указывает, включена ли последовательная обработка тегов атласа. Если этот параметр включен, теги упаковки спрайтов обрабатываются один за другим, чтобы уменьшить использование памяти.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Sprites.IPackerPolicy.GetVersion">
      <summary>
        <para>Верните версию вашей политики. Sprite Packer должен знать, изменилась ли логика группировки атласа.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Sprites.IPackerPolicy.OnGroupAtlases(UnityEditor.BuildTarget,UnityEditor.Sprites.PackerJob,System.Int32[])">
      <summary>
        <para>Реализуйте пользовательскую группировку атласа здесь.</para>
      </summary>
      <param name="target">
      </param>
      <param name="job">
      </param>
      <param name="textureImporterInstanceIDs">
      </param>
    </member>
    <member name="T:UnityEditor.Sprites.Packer">
      <summary>
        <para>Помощники Sprite Packer.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Sprites.Packer.atlasNames">
      <summary>
        <para>Массив имен атласов спрайтов, найденных в текущем кэше атласов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Sprites.Packer.kDefaultPolicy">
      <summary>
        <para>Имя политики Sprite Packer по умолчанию.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Sprites.Packer.Execution">
      <summary>
        <para>Режим выполнения Sprite Packer.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Sprites.Packer.Execution.ForceRegroup">
      <summary>
        <para>Всегда будет запускать IPackerPolicy.OnGroupAtlases.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Sprites.Packer.Execution.Normal">
      <summary>
        <para>Нормальное исполнение. Не будет запускать IPackerPolicy.OnGroupAtlases, если параметры IPackerPolicy, версии IPackerPolicy или TextureImporter не изменились.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Sprites.Packer.GetAlphaTexturesForAtlas(System.String)">
      <summary>
        <para>Возвращает все текстуры альфа-атласа, сгенерированные для указанного атласа.</para>
      </summary>
      <param name="atlasName">Название атласа.</param>
    </member>
    <member name="M:UnityEditor.Sprites.Packer.GetAtlasDataForSprite(UnityEngine.Sprite,System.String&amp;,UnityEngine.Texture2D&amp;)">
      <summary>
        <para>Возвращает данные атласизации для указанного спрайта.</para>
      </summary>
      <param name="sprite">Спрайт для запроса.</param>
      <param name="atlasName">Получает имя атласа, содержащего указанный спрайт.</param>
      <param name="atlasTexture">Получает текстуру, содержащую указанный спрайт.</param>
    </member>
    <member name="M:UnityEditor.Sprites.Packer.GetTexturesForAtlas(System.String)">
      <summary>
        <para>Возвращает все текстуры атласа, сгенерированные для указанного атласа.</para>
      </summary>
      <param name="atlasName">Имя Атласа.</param>
    </member>
    <member name="P:UnityEditor.Sprites.Packer.Policies">
      <summary>
        <para>Доступные политики Sprite Packer для этого проекта.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Sprites.Packer.RebuildAtlasCacheIfNeeded(UnityEditor.BuildTarget,System.Boolean,UnityEditor.Sprites.Packer/Execution)">
      <summary>
        <para>Перестраивает кэш атласа Sprite.</para>
      </summary>
      <param name="target">
      </param>
      <param name="displayProgressBar">
      </param>
      <param name="execution">
      </param>
    </member>
    <member name="P:UnityEditor.Sprites.Packer.SelectedPolicy">
      <summary>
        <para>Активная политика Sprite Packer для этого проекта.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Sprites.PackerJob">
      <summary>
        <para>Текущее определение задания Sprite Packer.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Sprites.PackerJob.AddAtlas(System.String,UnityEditor.Sprites.AtlasSettings)">
      <summary>
        <para>Регистрирует новый атлас.</para>
      </summary>
      <param name="atlasName">
      </param>
      <param name="settings">
      </param>
    </member>
    <member name="M:UnityEditor.Sprites.PackerJob.AssignToAtlas(System.String,UnityEngine.Sprite,UnityEngine.SpritePackingMode,UnityEngine.SpritePackingRotation)">
      <summary>
        <para>Назначает спрайт уже зарегистрированному атласу.</para>
      </summary>
      <param name="atlasName">
      </param>
      <param name="sprite">
      </param>
      <param name="packingMode">
      </param>
      <param name="packingRotation">
      </param>
    </member>
    <member name="T:UnityEditor.Sprites.SpriteUtility">
      <summary>
        <para>Вспомогательные утилиты для доступа к данным Sprite.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Sprites.SpriteUtility.GetSpriteIndices(UnityEngine.Sprite,System.Boolean)">
      <summary>
        <para>Возвращает сгенерированные индексы сетки Sprite.</para>
      </summary>
      <param name="sprite">Если спрайт упакован, можно получить доступ к данным, как если бы они были на текстуре атласа.</param>
      <param name="getAtlasData">
      </param>
    </member>
    <member name="M:UnityEditor.Sprites.SpriteUtility.GetSpriteMesh(UnityEngine.Sprite,System.Boolean)">
      <summary>
        <para>Возвращает сгенерированные позиции сетки Sprite.</para>
      </summary>
      <param name="getAtlasData">Если спрайт упакован, можно получить доступ к данным, как если бы они были на текстуре атласа.</param>
      <param name="sprite">
      </param>
    </member>
    <member name="M:UnityEditor.Sprites.SpriteUtility.GetSpriteTexture(UnityEngine.Sprite,System.Boolean)">
      <summary>
        <para>Возвращает сгенерированную текстуру Sprite. Если Sprite упакован, можно запросить как исходные текстуры, так и текстуры атласа.</para>
      </summary>
      <param name="getAtlasData">Если спрайт упакован, можно получить доступ к данным, как если бы они были на текстуре атласа.</param>
      <param name="sprite">
      </param>
    </member>
    <member name="M:UnityEditor.Sprites.SpriteUtility.GetSpriteUVs(UnityEngine.Sprite,System.Boolean)">
      <summary>
        <para>Возвращает UV-развертку сгенерированной сетки Sprite.</para>
      </summary>
      <param name="sprite">Если спрайт упакован, можно получить доступ к данным, как если бы они были на текстуре атласа.</param>
      <param name="getAtlasData">
      </param>
    </member>
    <member name="T:UnityEditor.StandaloneBuildSubtarget">
      <summary>
        <para>Тип подцели платформы для настольных ПК.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StandaloneBuildSubtarget.Player">
      <summary>
        <para>Создайте настольный проигрыватель по умолчанию.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StandaloneBuildSubtarget.Server">
      <summary>
        <para>Создайте проигрыватель, оптимизированный для работы в качестве безголового сервера.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.StaticEditorFlags">
      <summary>
        <para>Описывает, какие системы Unity считают GameObject статическим и включают GameObject в свои предварительные вычисления в редакторе Unity.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StaticEditorFlags.BatchingStatic">
      <summary>
        <para>Объедините сетку GameObject с другими подходящими сетками, чтобы потенциально снизить затраты на рендеринг во время выполнения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StaticEditorFlags.ContributeGI">
      <summary>
        <para>Включить цель в расчеты глобального освещения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StaticEditorFlags.LightmapStatic">
      <summary>
        <para>Включите GameObject при предварительном вычислении данных освещения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StaticEditorFlags.NavigationStatic">
      <summary>
        <para>Включить GameObject при предварительном вычислении навигационных данных.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StaticEditorFlags.OccludeeStatic">
      <summary>
        <para>Отметьте GameObject как Static Occludee в системе отбраковки окклюзии.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StaticEditorFlags.OccluderStatic">
      <summary>
        <para>Отметьте GameObject как статический окклюдер в системе отбраковки окклюзии.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StaticEditorFlags.OffMeshLinkGeneration">
      <summary>
        <para>Попытаться сгенерировать Off-Mesh Link, который начинается с этого GameObject при предварительном вычислении навигационных данных.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StaticEditorFlags.ReflectionProbeStatic">
      <summary>
        <para>Включайте этот GameObject при предварительном вычислении данных для Reflection Probes, свойство Type которых имеет значение Baked.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.StaticOcclusionCulling">
      <summary>
        <para>StaticOcclusionCulling позволяет выполнять операции статического отсечения окклюзии.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.StaticOcclusionCulling.doesSceneHaveManualPortals">
      <summary>
        <para>Содержит ли сцена какие-либо порталы окклюзии, которые были добавлены вручную, а не автоматически?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.StaticOcclusionCulling.isRunning">
      <summary>
        <para>Используется для проверки того, выполняется ли асинхронная генерация данных статического отсева окклюзии.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.StaticOcclusionCulling.umbraDataSize">
      <summary>
        <para>Возвращает размер в байтах, который в настоящее время занимают данные PVS в этой сцене на диске.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.StaticOcclusionCulling.Cancel">
      <summary>
        <para>Используется для отмены асинхронной генерации статических данных отбраковки окклюзии.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.StaticOcclusionCulling.Clear">
      <summary>
        <para>Очищает PVS открытой сцены.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.StaticOcclusionCulling.Compute">
      <summary>
        <para>Используется для создания статических данных отбраковки окклюзии.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.StaticOcclusionCulling.GenerateInBackground">
      <summary>
        <para>Используется для асинхронного вычисления данных статического отсева окклюзии.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.StaticOcclusionCulling.RemoveCacheFolder">
      <summary>
        <para>Удаляет временную папку, используемую при запекании окклюзии.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.StaticOcclusionCullingVisualization">
      <summary>
        <para>Используется для визуализации статического отбраковывания окклюзии во время разработки в представлении «Сцена».</para>
      </summary>
    </member>
    <member name="P:UnityEditor.StaticOcclusionCullingVisualization.showGeometryCulling">
      <summary>
        <para>Если установлено значение true, включается отбраковка геометрии.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.StaticOcclusionCullingVisualization.showOcclusionCulling">
      <summary>
        <para>Если установлено значение true, визуализация целевых томов включена.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.StaticOcclusionCullingVisualization.showPortals">
      <summary>
        <para>Если установлено значение true, визуализация порталов включена.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.StaticOcclusionCullingVisualization.showPreVisualization">
      <summary>
        <para>Если установлено значение true, в строках визуализации томов PVS будут отображаться все ячейки, а не ячейки после отбраковки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.StaticOcclusionCullingVisualization.showViewVolumes">
      <summary>
        <para>Если установлено значение true, визуализация объемов представлений включена.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.StaticOcclusionCullingVisualization.showVisibilityLines">
      <summary>
        <para>Если установлено значение true, визуализация порталов включена.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.StatusQueryOptions">
      <summary>
        <para>Параметры для запроса состояния системы контроля версий файла.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StatusQueryOptions.ForceUpdate">
      <summary>
        <para>Принудительно обновить статус файла в системе контроля версий. Это медленно, но точно.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StatusQueryOptions.UseCachedAsync">
      <summary>
        <para>Этот параметр задает запрос состояния, чтобы сначала использовать последнее допустимое состояние системы управления версиями файла, а в противном случае запрашивать действительное состояние асинхронно.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StatusQueryOptions.UseCachedIfPossible">
      <summary>
        <para>Этот параметр задает запрос состояния, чтобы сначала использовать последнее допустимое состояние системы управления версиями файла, а в противном случае запрашивать действительное состояние синхронно.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.StereoRenderingPath">
      <summary>
        <para>Перечисление, используемое для указания используемого пути стереорендеринга.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StereoRenderingPath.Instancing">
      <summary>
        <para>Однопроходный рендеринг виртуальной реальности (посредством инстансного рендеринга).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StereoRenderingPath.MultiPass">
      <summary>
        <para>Многопроходный рендеринг VR.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StereoRenderingPath.SinglePass">
      <summary>
        <para>Однопроходный рендеринг VR (через текстуру рендеринга двойной ширины).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.StrippingLevel">
      <summary>
        <para>Управляемый уровень разборки кода.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StrippingLevel.Disabled">
      <summary>
        <para>Устарело. См. ManagedStrippingLevel.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StrippingLevel.StripAssemblies">
      <summary>
        <para>Устарело. См. ManagedStrippingLevel.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StrippingLevel.StripByteCode">
      <summary>
        <para>Устарело. См. ManagedStrippingLevel.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StrippingLevel.UseMicroMSCorlib">
      <summary>
        <para>Устарело. См. ManagedStrippingLevel.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Sysroot">
      <summary>
        <para>Базовый класс для реализации sysroots и наборов инструментов для IL2CPP</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Sysroot.GetIl2CppArguments">
      <summary>
        <para>Возвращает следующий аргумент Il2Cpp при каждом вызове</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Sysroot.HostArch">
      <summary>
        <para>Возвращает имя хост-архитектуры</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Sysroot.HostPlatform">
      <summary>
        <para>Возвращает имя хост-платформы</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Sysroot.Initialize">
      <summary>
        <para>Инициализирует sysroot</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Sysroot.Name">
      <summary>
        <para>Возвращает имя sysroot</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Sysroot.TargetArch">
      <summary>
        <para>Возвращает имя целевой архитектуры</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Sysroot.TargetPlatform">
      <summary>
        <para>Возвращает название целевой платформы</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TakeInfo">
      <summary>
        <para>Объект Takeinfo содержит всю информацию, необходимую для описания дубля.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TakeInfo.bakeStartTime">
      <summary>
        <para>Время начала в секундах.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TakeInfo.bakeStopTime">
      <summary>
        <para>Время остановки в секундах.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TakeInfo.defaultClipName">
      <summary>
        <para>Это имя клипа по умолчанию для клипа, созданного для этого дубля.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TakeInfo.name">
      <summary>
        <para>Принять имя, определенное из импортированного файла.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TakeInfo.sampleRate">
      <summary>
        <para>Частота дискретизации дубля.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TakeInfo.startTime">
      <summary>
        <para>Время начала в секундах.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TakeInfo.stopTime">
      <summary>
        <para>Время остановки в секундах.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TerrainLayerInspector">
      <summary>
        <para>Класс инспектора по умолчанию для слоя ландшафта.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TerrainLayerInspector.ApplyCustomUI(UnityEditor.ITerrainLayerCustomUI,UnityEngine.Terrain)">
      <summary>
        <para>Применяет пользовательский интерфейс для объекта Terrain Layer.</para>
      </summary>
      <param name="customUI">Пользовательский объект пользовательского интерфейса.</param>
      <param name="terrain">Объект Terrain.</param>
    </member>
    <member name="M:UnityEditor.TerrainLayerInspector.HasPreviewGUI">
      <summary>
        <para>Возвращает true, если слой Terrain имеет графический интерфейс предварительного просмотра.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TerrainLayerInspector.OnInspectorGUI">
      <summary>
        <para>Отрисовывает графический интерфейс Terrain Layer Inspector по умолчанию.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TerrainLayerInspector.OnPreviewGUI(UnityEngine.Rect,UnityEngine.GUIStyle)">
      <summary>
        <para>Отрисовывает графический интерфейс предварительного просмотра Terrain Layer по умолчанию.</para>
      </summary>
      <param name="r">
      </param>
      <param name="background">
      </param>
    </member>
    <member name="M:UnityEditor.TerrainLayerInspector.RenderStaticPreview(System.String,UnityEngine.Object[],System.Int32,System.Int32)">
      <summary>
        <para>Отрисовывает статический предварительный просмотр слоя Terrain по умолчанию.</para>
      </summary>
      <param name="assetPath">
      </param>
      <param name="subAssets">
      </param>
      <param name="width">
      </param>
      <param name="height">
      </param>
    </member>
    <member name="T:UnityEditor.TerrainLayerUtility">
      <summary>
        <para>Набор вспомогательных функций для использования слоев ландшафта.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TerrainLayerUtility.CheckNormalMapTextureType(UnityEngine.Texture2D)">
      <summary>
        <para>Проверяет, правильно ли текстура импортирована как текстура карты нормалей.</para>
      </summary>
      <param name="texture">Текстура для проверки.</param>
      <returns>
        <para>Истина, если текстура импортирована правильно, в противном случае — ложь.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TerrainLayerUtility.ShowTerrainLayerGUI(UnityEngine.Terrain,UnityEngine.TerrainLayer,UnityEditor.Editor&amp;,UnityEditor.ITerrainLayerCustomUI)">
      <summary>
        <para>Эта вспомогательная функция показывает графический интерфейс Terrain Layer Inspector, вложенный в текущий графический интерфейс Inspector.</para>
      </summary>
      <param name="terrain">Terrain, из которого берет начало слой Terrain.</param>
      <param name="terrainLayer">Объект Terrain Layer, для которого должен отображаться инспектор.</param>
      <param name="terrainLayerEditor">Ссылка на переменную типа Editor, в которой Unity кэширует объект Terrain Layer Inspector.</param>
      <param name="customGUI">Пользовательский объект графического интерфейса Terrain Layer.</param>
    </member>
    <member name="M:UnityEditor.TerrainLayerUtility.ShowTerrainLayersSelectionHelper(UnityEngine.Terrain,System.Int32)">
      <summary>
        <para>Вспомогательная функция для отображения окна выбора слоя для выбора слоев рельефа в инспекторе.</para>
      </summary>
      <param name="terrain">Плитка местности.</param>
      <param name="activeTerrainLayer">Текущий выбранный индекс слоя рельефа.</param>
      <returns>
        <para>Индекс нового выбранного слоя рельефа.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TerrainLayerUtility.TilingSettingsUI(UnityEngine.TerrainLayer)">
      <summary>
        <para>Отображает пользовательский интерфейс настроек мозаики.</para>
      </summary>
      <param name="terrainLayer">Слой ландшафта, содержащий отображаемые параметры мозаики.</param>
      <param name="tileSize">Отображаемое свойство размера плитки.</param>
      <param name="tileOffset">Отображаемое свойство смещения плитки.</param>
    </member>
    <member name="M:UnityEditor.TerrainLayerUtility.TilingSettingsUI(UnityEditor.SerializedProperty,UnityEditor.SerializedProperty)">
      <summary>
        <para>Отображает пользовательский интерфейс настроек мозаики.</para>
      </summary>
      <param name="terrainLayer">Слой ландшафта, содержащий отображаемые параметры мозаики.</param>
      <param name="tileSize">Отображаемое свойство размера плитки.</param>
      <param name="tileOffset">Отображаемое свойство смещения плитки.</param>
    </member>
    <member name="M:UnityEditor.TerrainLayerUtility.ValidateDiffuseTextureUI(UnityEngine.Texture2D)">
      <summary>
        <para>Проверяет, является ли текстура допустимой диффузной текстурой TerrainLayer. Если он обнаруживает, что текстура недействительна, он отображает предупреждающее сообщение, указывающее на проблему.</para>
      </summary>
      <param name="texture">Текстура для проверки.</param>
    </member>
    <member name="M:UnityEditor.TerrainLayerUtility.ValidateMaskMapTextureUI(UnityEngine.Texture2D)">
      <summary>
        <para>Проверяет, является ли текстура допустимой текстурой карты маски TerrainLayer. Если он обнаруживает, что текстура недействительна, он отображает предупреждающее сообщение, указывающее на проблему.</para>
      </summary>
      <param name="texture">Текстура для проверки.</param>
    </member>
    <member name="M:UnityEditor.TerrainLayerUtility.ValidateNormalMapTextureUI(UnityEngine.Texture2D,System.Boolean)">
      <summary>
        <para>Проверяет, является ли текстура допустимой текстурой карты нормалей TerrainLayer. Если он обнаруживает, что текстура недействительна, он отображает предупреждающее сообщение, указывающее на проблему.</para>
      </summary>
      <param name="texture">Текстура для проверки.</param>
      <param name="normalMapTextureType">Возвращаемое из метода CheckNormalMapTextureType значение, указывающее, импортируется ли текстура как карта нормалей.</param>
    </member>
    <member name="T:UnityEditor.TerrainTools.BrushGUIEditFlags">
      <summary>
        <para>Флаги, указывающие, какая кисть управляет отображением метода [IOnInspectorGUI.ShowBrushesGUI].</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TerrainTools.BrushGUIEditFlags.All">
      <summary>
        <para>Показать все элементы управления кистью.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TerrainTools.BrushGUIEditFlags.Inspect">
      <summary>
        <para>Отображение инспектора кистей для текущей выбранной кисти.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TerrainTools.BrushGUIEditFlags.None">
      <summary>
        <para>Не отображать элементы управления кистью.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TerrainTools.BrushGUIEditFlags.Opacity">
      <summary>
        <para>Отображение элемента управления непрозрачностью кисти.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TerrainTools.BrushGUIEditFlags.Select">
      <summary>
        <para>Отображение элемента управления выбором кисти.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TerrainTools.BrushGUIEditFlags.SelectAndInspect">
      <summary>
        <para>Отображение элемента управления выбором кисти и инспектора кистей для текущей выбранной кисти.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TerrainTools.BrushGUIEditFlags.Size">
      <summary>
        <para>Отображение элемента управления размером кисти.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.TerrainTools.IOnInspectorGUI">
      <summary>
        <para>Интерфейс, предоставляющий параметры и служебные функции для события OnInspectorGUI в инструментах рисования ландшафта.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TerrainTools.IOnInspectorGUI.Repaint(UnityEditor.TerrainTools.RepaintFlags)">
      <summary>
        <para>Указывает редактору перерисовать пользовательский интерфейс инструмента и/или представление сцены.</para>
      </summary>
      <param name="flags">Что перекрасить.</param>
    </member>
    <member name="M:UnityEditor.TerrainTools.IOnInspectorGUI.ShowBrushesGUI(System.Int32,UnityEditor.TerrainTools.BrushGUIEditFlags,System.Int32)">
      <summary>
        <para>Отображает элементы управления по умолчанию для кисти в инспекторе инструментов.</para>
      </summary>
      <param name="spacing">Расстояние между пикселями для элементов управления графическим интерфейсом кисти.</param>
      <param name="flags">Указывает, какие элементы управления кистью должны отображаться в пользовательском интерфейсе инструмента «Рельеф».</param>
      <param name="textureResolutionPerTile">Разрешение на плитку Terrain текстуры, которую редактирует инструмент. Unity использует это значение для расчета предельных размеров кисти.</param>
    </member>
    <member name="?:UnityEditor.TerrainTools.IOnPaint">
      <summary>
        <para>Интерфейс, предоставляющий параметры и служебные функции для события OnPaint инструментов рисования ландшафта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TerrainTools.IOnPaint.brushSize">
      <summary>
        <para>Только чтение. Текущий размер кисти в единицах ландшафта (эквивалентный размеру мировых единиц).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TerrainTools.IOnPaint.brushStrength">
      <summary>
        <para>Только чтение. Текущая сила кисти.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TerrainTools.IOnPaint.brushTexture">
      <summary>
        <para>Только чтение. Текущая выбранная текстура кисти.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TerrainTools.IOnPaint.hitValidTerrain">
      <summary>
        <para>Только чтение. Истинно, если мышь находится над допустимым объектом Terrain; в противном случае ложь.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TerrainTools.IOnPaint.raycastHit">
      <summary>
        <para>Только чтение. Результат raycast для текущей позиции мыши. Это допустимо, когда для hitValidTerrain установлено значение true.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TerrainTools.IOnPaint.uv">
      <summary>
        <para>Только чтение. Нормализованное положение (от 0 до 1) на активном ландшафте.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TerrainTools.IOnPaint.Repaint(UnityEditor.TerrainTools.RepaintFlags)">
      <summary>
        <para>Указывает редактору перерисовать пользовательский интерфейс инструмента, вид сцены или и то, и другое.</para>
      </summary>
      <param name="flags">Указывает, что перерисовывать.</param>
    </member>
    <member name="M:UnityEditor.TerrainTools.IOnPaint.RepaintAllInspectors">
      <summary>
        <para>Указывает редактору перерисовать пользовательский интерфейс инспектора.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.TerrainTools.IOnSceneGUI">
      <summary>
        <para>Интерфейс, предоставляющий параметры и служебные функции для события OnSceneGUI инструментов рисования ландшафта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TerrainTools.IOnSceneGUI.brushSize">
      <summary>
        <para>Только чтение. Текущий размер кисти в единицах рельефа (эквивалентный размеру мировых единиц).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TerrainTools.IOnSceneGUI.brushStrength">
      <summary>
        <para>Только чтение. Текущая сила кисти.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TerrainTools.IOnSceneGUI.brushTexture">
      <summary>
        <para>Только чтение. Текущая выбранная текстура кисти.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TerrainTools.IOnSceneGUI.controlId">
      <summary>
        <para>Идентификатор элемента управления для текущего Terrain Inspector. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TerrainTools.IOnSceneGUI.hitValidTerrain">
      <summary>
        <para>Только чтение. Истинно, если мышь находится над допустимым объектом Terrain; в противном случае ложь.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TerrainTools.IOnSceneGUI.raycastHit">
      <summary>
        <para>Только чтение. Результат raycast для текущей позиции мыши. Это допустимо, когда для hitValidTerrain установлено значение true.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TerrainTools.IOnSceneGUI.sceneView">
      <summary>
        <para>Только чтение. Объект SceneView.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TerrainTools.IOnSceneGUI.Repaint(UnityEditor.TerrainTools.RepaintFlags)">
      <summary>
        <para>Указывает редактору перерисовать пользовательский интерфейс инструмента, вид сцены или и то, и другое.</para>
      </summary>
      <param name="flags">Указывает, что перерисовывать.</param>
    </member>
    <member name="T:UnityEditor.TerrainTools.RepaintFlags">
      <summary>
        <para>Флаги, указывающие, что перекрашивать в инструментах Terrain.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TerrainTools.RepaintFlags.Scene">
      <summary>
        <para>Перерисовать вид сцены.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TerrainTools.RepaintFlags.UI">
      <summary>
        <para>Перекрасьте пользовательский интерфейс инструмента.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TerrainTools.TerrainBrushPreviewMode">
      <summary>
        <para>Перечислите, чтобы указать, будет ли DrawBrushPreview предварительно просматривать исходную текстуру рендеринга или конечную текстуру рендеринга PaintContext.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TerrainTools.TerrainBrushPreviewMode.DestinationRenderTexture">
      <summary>
        <para>Указывает, что TerrainTools.TerrainPaintUtilityEditor.DrawBrushPreview использует конечную текстуру рендеринга PaintContext.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TerrainTools.TerrainBrushPreviewMode.SourceRenderTexture">
      <summary>
        <para>Указывает, что TerrainTools.TerrainPaintUtilityEditor.DrawBrushPreview использует исходную текстуру рендеринга PaintContext.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TerrainTools.TerrainInspectorUtility">
      <summary>
        <para>Вспомогательный класс для графического интерфейса Terrain Inspector.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TerrainTools.TerrainInspectorUtility.TerrainShaderValidationGUI(UnityEngine.Material)">
      <summary>
        <para>Проверяет, совместим ли материал с Terrain.</para>
      </summary>
      <param name="material">Материал для проверки.</param>
    </member>
    <member name="T:UnityEditor.TerrainTools.TerrainPaintTool`1">
      <summary>
        <para>Базовый класс для инструментов рисования ландшафта.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TerrainTools.TerrainPaintTool_1.GetDescription">
      <summary>
        <para>Извлекает описание пользовательского инструмента ландшафта.</para>
      </summary>
      <returns>
        <para>Описание инструмента.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TerrainTools.TerrainPaintTool_1.GetName">
      <summary>
        <para>Получает имя пользовательского инструмента ландшафта.</para>
      </summary>
      <returns>
        <para>Имя инструмента.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TerrainTools.TerrainPaintTool_1.OnDisable">
      <summary>
        <para>Вызывается при уничтожении инструмента.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TerrainTools.TerrainPaintTool_1.OnEnable">
      <summary>
        <para>Вызывается при создании инструмента.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TerrainTools.TerrainPaintTool_1.OnEnterToolMode">
      <summary>
        <para>Вызывается при активации инструмента.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TerrainTools.TerrainPaintTool_1.OnExitToolMode">
      <summary>
        <para>Вызывается, когда инструмент становится неактивным.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TerrainTools.TerrainPaintTool_1.OnInspectorGUI(UnityEngine.Terrain,UnityEditor.TerrainTools.IOnInspectorGUI)">
      <summary>
        <para>Обратный вызов OnInspectorGUI пользовательского инструмента ландшафта.</para>
      </summary>
      <param name="terrain">Активный объект Terrain.</param>
      <param name="editContext">Интерфейс, используемый для связи между инструментами Editor и Paint.</param>
    </member>
    <member name="M:UnityEditor.TerrainTools.TerrainPaintTool_1.OnPaint(UnityEngine.Terrain,UnityEditor.TerrainTools.IOnPaint)">
      <summary>
        <para>Пользовательский обратный вызов рисования инструмента ландшафта.</para>
      </summary>
      <param name="terrain">Активный объект Terrain.</param>
      <param name="editContext">Интерфейс, используемый для связи между инструментами Editor и Paint.</param>
      <returns>
        <para>Верните значение true, чтобы временно скрыть слои деревьев, травы и деталей на местности.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TerrainTools.TerrainPaintTool_1.OnRenderBrushPreview(UnityEngine.Terrain,UnityEditor.TerrainTools.IOnSceneGUI)">
      <summary>
        <para>Используйте этот метод для реализации пользовательского предварительного просмотра инструмента и поведения пользовательского интерфейса, которые будут отображаться только тогда, когда мышь находится в пределах границ SceneView или когда вы активно используете этот инструмент.</para>
      </summary>
      <param name="terrain">Активный объект Terrain.</param>
      <param name="editContext">Интерфейс для связи между редактором и инструментами Paint.</param>
    </member>
    <member name="M:UnityEditor.TerrainTools.TerrainPaintTool_1.OnSceneGUI(UnityEngine.Terrain,UnityEditor.TerrainTools.IOnSceneGUI)">
      <summary>
        <para>Обратный вызов OnSceneGUI пользовательского инструмента ландшафта.</para>
      </summary>
      <param name="terrain">Активный объект Terrain.</param>
      <param name="editContext">Интерфейс для связи между редактором и инструментами Paint.</param>
    </member>
    <member name="T:UnityEditor.TerrainTools.TerrainPaintUtilityEditor">
      <summary>
        <para>Вспомогательные функции редактора утилиты рисования ландшафта.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TerrainTools.TerrainPaintUtilityEditor.DrawBrushPreview">
      <summary>
        <para>Рисует сетку предварительного просмотра кисти Terrain из карты высот PaintContext с использованием предоставленного процедурного материала.</para>
      </summary>
      <param name="heightmapPC">PaintContext, описывающий карту высот, из которой строится сетка предварительного просмотра.</param>
      <param name="previewTexture">Указывает, следует ли строить сетку с использованием исходной или целевой текстуры рендеринга в heightmapPC.</param>
      <param name="brushTexture">Текстура кисти для предварительного просмотра.</param>
      <param name="brushXform">Описывает положение и ориентацию кисти.</param>
      <param name="proceduralMaterial">Материал, используемый для предварительного просмотра.</param>
      <param name="materialPassIndex">Материал передается для визуализации.</param>
    </member>
    <member name="M:UnityEditor.TerrainTools.TerrainPaintUtilityEditor.GetDefaultBrushPreviewMaterial">
      <summary>
        <para>Возвращает материал предварительного просмотра кисти по умолчанию. Этот материал поддерживает процедурное создание сетки для использования с DrawBrushPreview.</para>
      </summary>
      <returns>
        <para>Материал предварительного просмотра кисти по умолчанию.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TerrainTools.TerrainPaintUtilityEditor.ShowDefaultPreviewBrush(UnityEngine.Terrain,UnityEngine.Texture,System.Single)">
      <summary>
        <para>Вспомогательная функция для отображения кисти предварительного просмотра по умолчанию без вращения или пользовательских материалов.</para>
      </summary>
      <param name="terrain">Объект местности.</param>
      <param name="brushTexture">Текстура кисти.</param>
      <param name="brushSize">Размер кисти.</param>
    </member>
    <member name="T:UnityEditor.TerrainTools.TerrainToolShortcutContext">
      <summary>
        <para>Контекст ярлыка, активный при редактировании Terrain.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TerrainTools.TerrainToolShortcutContext.SelectPaintTool">
      <summary>
        <para>Изменяет выбранный инструмент рисования Terrain.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TextureCompressionQuality">
      <summary>
        <para>Качество сжатия.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureCompressionQuality.Best">
      <summary>
        <para>Лучшее сжатие.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureCompressionQuality.Fast">
      <summary>
        <para>Быстрое сжатие.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureCompressionQuality.Normal">
      <summary>
        <para>Обычное сжатие (по умолчанию).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TextureImporter">
      <summary>
        <para>Средство импорта текстур позволяет изменять параметры импорта Texture2D из сценариев редактора.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.allowAlphaSplitting">
      <summary>
        <para>Разрешает альфа-разделение на соответствующих платформах для этой текстуры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.alphaIsTransparency">
      <summary>
        <para>Если предоставленный альфа-канал является прозрачным, включите его для предварительной фильтрации цвета, чтобы избежать артефактов фильтрации.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.alphaSource">
      <summary>
        <para>Выберите способ генерации альфа-канала импортированной текстуры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.alphaTestReferenceValue">
      <summary>
        <para>Возвращает или присваивает эталонное значение альфа-теста.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.androidETC2FallbackOverride">
      <summary>
        <para>Переопределение резервного режима распаковки текстур ETC2 на устройствах Android, не поддерживающих ETC2.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.anisoLevel">
      <summary>
        <para>Уровень анизотропной фильтрации текстуры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.borderMipmap">
      <summary>
        <para>Сохраняет границы текстур одинаковыми при создании MIP-карт.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.compressionQuality">
      <summary>
        <para>Качество сжатия текстур в диапазоне [0..100].</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.convertToNormalmap">
      <summary>
        <para>Преобразование карты высот в карту нормалей</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.crunchedCompression">
      <summary>
        <para>Используйте сжатие crunched, если оно доступно.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.fadeout">
      <summary>
        <para>Затемнить уровни MIP до серого цвета.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.filterMode">
      <summary>
        <para>Режим фильтрации текстуры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.generateCubemap">
      <summary>
        <para>Режим генерации кубической карты.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.generateMipsInLinearSpace">
      <summary>
        <para>Генерирует MIP-карты с гамма-коррекцией.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.grayscaleToAlpha">
      <summary>
        <para>Генерировать альфа-канал из интенсивности.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.heightmapScale">
      <summary>
        <para>Количество неровностей на карте высот.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.ignorePngGamma">
      <summary>
        <para>Игнорируйте атрибут Gamma в файлах PNG. Это свойство не влияет на другие форматы файлов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.isReadable">
      <summary>
        <para>Сохраняет ли Unity дополнительную копию пиксельных данных импортированной текстуры в адресуемой ЦП памяти.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.lightmap">
      <summary>
        <para>Определяет, является ли эта текстура картой освещения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.linearTexture">
      <summary>
        <para>Устаревший. Вместо этого используйте TextureImporter.sRGBTexture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.maxTextureSize">
      <summary>
        <para>Максимальный размер текстуры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.mipMapBias">
      <summary>
        <para>Смещение MIP-карты текстуры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.mipmapEnabled">
      <summary>
        <para>Создание MIP-карт.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.mipmapFadeDistanceEnd">
      <summary>
        <para>Mip-уровень, на котором текстура полностью исчезает.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.mipmapFadeDistanceStart">
      <summary>
        <para>Уровень мип, на котором текстура начинает исчезать.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.mipmapFilter">
      <summary>
        <para>Режим фильтрации MIP-карт.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.mipMapsPreserveCoverage">
      <summary>
        <para>Включает или отключает альфа-мипмаппинг с сохранением покрытия.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.normalmap">
      <summary>
        <para>Определяет, является ли эта текстура картой нормалей.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.normalmapFilter">
      <summary>
        <para>Режим фильтрации карты нормалей.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.npotScale">
      <summary>
        <para>Режим масштабирования для нестепеней двух текстур.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.qualifiesForSpritePacking">
      <summary>
        <para>Возвращает true, если этот объект TextureImporter настроен для упаковки спрайтов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.secondarySpriteTextures">
      <summary>
        <para>Дополнительные текстуры для импортированных спрайтов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.spriteBorder">
      <summary>
        <para>Размеры границ сгенерированных спрайтов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.spriteImportMode">
      <summary>
        <para>Выбирает одиночный или ручной режим импорта для текстур спрайтов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.spritePackingTag">
      <summary>
        <para>Выбирает тег упаковки Sprite.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.spritePivot">
      <summary>
        <para>Точка в координатном пространстве объекта Sprite, в которой находится графика.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.spritePixelsPerUnit">
      <summary>
        <para>Количество пикселей в спрайте, соответствующих одной единице в мировом пространстве.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.spritePixelsToUnits">
      <summary>
        <para>Масштабный коэффициент для сопоставления пикселей изображения с единицами измерения в мировом пространстве.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.spritesheet">
      <summary>
        <para>Массив, представляющий разделы атласа, соответствующие отдельным графикам спрайтов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.sRGBTexture">
      <summary>
        <para>Сохраняет ли эта текстура данные в цветовом пространстве sRGB (также называемом гаммой).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.streamingMipmaps">
      <summary>
        <para>Включить потоковую передачу MIP-карт для этой текстуры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.streamingMipmapsPriority">
      <summary>
        <para>Относительный приоритет для этой текстуры при уменьшении размера памяти, чтобы уложиться в бюджет памяти.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.textureCompression">
      <summary>
        <para>Сжатие импортированной текстуры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.textureFormat">
      <summary>
        <para>Формат импортируемой текстуры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.textureShape">
      <summary>
        <para>Форма импортированной текстуры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.textureType">
      <summary>
        <para>С каким типом текстуры мы здесь имеем дело.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.vtOnly">
      <summary>
        <para>При включении эту текстуру можно использовать только в сочетании со стеком текстур для виртуального текстурирования. Когда эта функция включена, не гарантируется, что текстура будет доступна как Texture2D в проигрывателе (например, недоступна из скрипта). Когда этот параметр отключен, проигрыватель включает текстуру и как Texture2D (например, доступную из сценария), и как потоковую текстуру в стеке текстур.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.wrapMode">
      <summary>
        <para>Режим переноса текстурных координат.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.wrapModeU">
      <summary>
        <para>Режим переноса координат текстуры U.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.wrapModeV">
      <summary>
        <para>Режим переноса координат V текстуры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.wrapModeW">
      <summary>
        <para>Режим переноса координат текстуры W для Texture3D.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TextureImporter.ClearPlatformTextureSettings(System.String)">
      <summary>
        <para>Очистить определенные настройки целевой платформы.</para>
      </summary>
      <param name="platform">Платформа, настройки которой необходимо очистить (см. ниже).</param>
    </member>
    <member name="M:UnityEditor.TextureImporter.DoesSourceTextureHaveAlpha">
      <summary>
        <para>Позволяет проверить, имеет ли исходное изображение текстуры альфа-канал.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TextureImporter.DoesSourceTextureHaveColor">
      <summary>
        <para>Имеет ли исходное изображение текстуры каналы RGB.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TextureImporter.GetAllowsAlphaSplitting">
      <summary>
        <para>Getter для флага, который разрешает Альфа-разбиение импортированной текстуры при необходимости (например, сжатие ETC1 для текстур с прозрачностью).</para>
      </summary>
      <returns>
        <para>True, если импортер разрешает альфа-разделение импортированной текстуры, False в противном случае.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TextureImporter.GetAutomaticFormat(System.String)">
      <summary>
        <para>Возвращает TextureImporterFormat, который будет автоматически выбран для этой платформы.</para>
      </summary>
      <param name="platform">
      </param>
      <returns>
        <para>Формат, выбранный системой для предоставленной платформы, TextureImporterFormat.Automatic, если платформа не существует.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TextureImporter.GetDefaultPlatformTextureSettings">
      <summary>
        <para>Получите настройки текстуры по умолчанию для конкретной платформы.</para>
      </summary>
      <returns>
        <para>Структура TextureImporterPlatformSettings, содержащая параметры платформы по умолчанию.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TextureImporter.GetPlatformTextureSettings(System.String,System.Int32&amp;,UnityEditor.TextureImporterFormat&amp;,System.Int32&amp;,System.Boolean&amp;)">
      <summary>
        <para>Получите настройки текстуры для конкретной платформы.</para>
      </summary>
      <param name="platform">Платформа, для которой требуются настройки (см. параметры ниже).</param>
      <param name="maxTextureSize">Максимальная ширина/высота текстуры в пикселях.</param>
      <param name="textureFormat">Формат текстуры для данной платформы.</param>
      <param name="compressionQuality">Значение от 0 до 100, эквивалентное стандартной настройке качества JPEG.</param>
      <param name="etc1AlphaSplitEnabled">Состояние флага ETC1 и альфа-разделения.</param>
      <returns>
        <para>True, если переопределение платформы найдено, false, если переопределение не найдено.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TextureImporter.GetPlatformTextureSettings(System.String,System.Int32&amp;,UnityEditor.TextureImporterFormat&amp;,System.Int32&amp;)">
      <summary>
        <para>Получите настройки текстуры для конкретной платформы.</para>
      </summary>
      <param name="platform">Платформа, настройки которой необходимы (см. ниже).</param>
      <param name="maxTextureSize">Максимальная ширина/высота текстуры в пикселях.</param>
      <param name="textureFormat">Формат текстуры.</param>
      <param name="compressionQuality">Значение от 0 до 100, эквивалентное стандартной настройке качества JPEG.</param>
      <returns>
        <para>True, если переопределение платформы найдено, false, если переопределение не найдено.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TextureImporter.GetPlatformTextureSettings(System.String,System.Int32&amp;,UnityEditor.TextureImporterFormat&amp;)">
      <summary>
        <para>Получите настройки текстуры для конкретной платформы.</para>
      </summary>
      <param name="platform">Платформа, настройки которой необходимы (см. ниже).</param>
      <param name="maxTextureSize">Максимальная ширина/высота текстуры в пикселях.</param>
      <param name="textureFormat">Формат текстуры.</param>
      <returns>
        <para>True, если переопределение платформы найдено, false, если переопределение не найдено.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TextureImporter.GetPlatformTextureSettings(System.String)">
      <summary>
        <para>Получите настройки текстуры для конкретной платформы.</para>
      </summary>
      <param name="platform">Платформа, настройки которой необходимы (см. ниже).</param>
      <returns>
        <para>Структура TextureImporterPlatformSettings, содержащая параметры платформы.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TextureImporter.GetSourceTextureWidthAndHeight(System.Int32&amp;,System.Int32&amp;)">
      <summary>
        <para>Получает ширину и высоту исходной текстуры.</para>
      </summary>
      <param name="width">Ширина исходной текстуры.</param>
      <param name="height">Высота исходной текстуры.</param>
    </member>
    <member name="M:UnityEditor.TextureImporter.IsDefaultPlatformTextureFormatValid(UnityEditor.TextureImporterType,UnityEditor.TextureImporterFormat)">
      <summary>
        <para>Проверяет TextureImporterFormat на основе типа текущего формата (TextureImporterType) и платформы по умолчанию.</para>
      </summary>
      <param name="currentFormat">Тип TextureImporterType, который использует средство импорта.</param>
      <param name="textureType">TextureImporterFormat для проверки.</param>
      <returns>
        <para>Возвращает true, если TextureImporterFormat допустим и может быть установлен. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TextureImporter.IsPlatformTextureFormatValid(UnityEditor.TextureImporterType,UnityEditor.BuildTarget,UnityEditor.TextureImporterFormat)">
      <summary>
        <para>Проверяет TextureImporterFormat на основе указанного типа импорта (TextureImporterType) и указанной цели сборки (BuildTarget.).</para>
      </summary>
      <param name="textureType">Тип TextureImporterType, который использует средство импорта.</param>
      <param name="target">Платформа, на которую нацелен параметр, называется BuilTarget.</param>
      <param name="currentFormat">TextureImporterFormat для проверки.</param>
      <returns>
        <para>Возвращает true, если TextureImporterFormat допустим и может быть установлен. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TextureImporter.ReadTextureImportInstructions">
      <summary>
        <para>Читает инструкции вывода активной текстуры этого объекта TextureImporter.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TextureImporter.ReadTextureSettings(UnityEditor.TextureImporterSettings)">
      <summary>
        <para>Прочитать настройки текстуры в класс TextureImporterSettings.</para>
      </summary>
      <param name="dest">
      </param>
    </member>
    <member name="M:UnityEditor.TextureImporter.SetAllowsAlphaSplitting(System.Boolean)">
      <summary>
        <para>Установщик для флага, который разрешает Альфа-разбиение импортированной текстуры при необходимости (например, сжатие ETC1 для текстур с прозрачностью).</para>
      </summary>
      <param name="flag">
      </param>
    </member>
    <member name="M:UnityEditor.TextureImporter.SetPlatformTextureSettings(System.String,System.Int32,UnityEditor.TextureImporterFormat,System.Boolean)">
      <summary>
        <para>Установите определенные параметры целевой платформы.</para>
      </summary>
      <param name="platform">Платформы, настройки которых необходимо изменить (см. ниже).</param>
      <param name="maxTextureSize">Максимальная ширина/высота текстуры в пикселях.</param>
      <param name="textureFormat">Формат данных для текстуры.</param>
      <param name="compressionQuality">Значение от 0 до 100, где 0, 50 и 100 соответствуют параметрам быстрого, нормального и наилучшего качества в пользовательском интерфейсе импортера текстур. Для форматов текстур Crunch это примерно соответствует уровням качества JPEG.</param>
      <param name="allowsAlphaSplit">Позволяет разделить импортированную текстуру на RGB+A, чтобы можно было применить сжатие ETC1 (только для Android и работает только с текстурами, которые являются частью какого-либо атласа).</param>
    </member>
    <member name="M:UnityEditor.TextureImporter.SetPlatformTextureSettings(System.String,System.Int32,UnityEditor.TextureImporterFormat,System.Int32,System.Boolean)">
      <summary>
        <para>Установите определенные параметры целевой платформы.</para>
      </summary>
      <param name="platform">Платформы, настройки которых необходимо изменить (см. ниже).</param>
      <param name="maxTextureSize">Максимальная ширина/высота текстуры в пикселях.</param>
      <param name="textureFormat">Формат данных для текстуры.</param>
      <param name="compressionQuality">Значение от 0 до 100, где 0, 50 и 100 соответствуют параметрам быстрого, нормального и наилучшего качества в пользовательском интерфейсе импортера текстур. Для форматов текстур Crunch это примерно соответствует уровням качества JPEG.</param>
      <param name="allowsAlphaSplit">Позволяет разделить импортированную текстуру на RGB+A, чтобы можно было применить сжатие ETC1 (только для Android и работает только с текстурами, которые являются частью какого-либо атласа).</param>
    </member>
    <member name="M:UnityEditor.TextureImporter.SetPlatformTextureSettings(UnityEditor.TextureImporterPlatformSettings)">
      <summary>
        <para>Установите определенные параметры целевой платформы.</para>
      </summary>
      <param name="platformSettings">Структура, содержащая настройки платформы.</param>
    </member>
    <member name="M:UnityEditor.TextureImporter.SetTextureSettings(UnityEditor.TextureImporterSettings)">
      <summary>
        <para>Задайте настройки импортеров текстур из класса TextureImporterSettings.</para>
      </summary>
      <param name="src">
      </param>
    </member>
    <member name="T:UnityEditor.TextureImporterAlphaSource">
      <summary>
        <para>Выберите способ генерации альфа-канала импортированной текстуры.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterAlphaSource.FromGrayScale">
      <summary>
        <para>Создать альфа-канал из шкалы серого изображения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterAlphaSource.FromInput">
      <summary>
        <para>Используйте альфа-канал исходной текстуры, если она предоставлена.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterAlphaSource.None">
      <summary>
        <para>Альфа-канал использоваться не будет.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TextureImporterCompression">
      <summary>
        <para>Выберите тип сжатия текстуры.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterCompression.Compressed">
      <summary>
        <para>Текстура будет сжата в стандартном формате в зависимости от платформы (DXT, ASTC, ...).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterCompression.CompressedHQ">
      <summary>
        <para>Текстура будет сжата с использованием формата высокого качества в зависимости от платформы и доступности (BC7, ASTC4x4, ...).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterCompression.CompressedLQ">
      <summary>
        <para>Текстура будет сжата с использованием низкокачественного, но высокопроизводительного формата высокой степени сжатия в зависимости от платформы и доступности (2bpp PVRTC, ASTC8x8, ...).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterCompression.Uncompressed">
      <summary>
        <para>Текстура не будет сжата.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TextureImporterCubemapConvolution">
      <summary>
        <para>Определяет режим свертки Cubemap.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterCubemapConvolution.Diffuse">
      <summary>
        <para>Диффузная свертка (также известная как кубическая карта освещенности).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterCubemapConvolution.None">
      <summary>
        <para>Свертка не нужна. Эта текстура Cubemap представляет собой зеркальное отражение или Skybox.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterCubemapConvolution.Specular">
      <summary>
        <para>Зеркальная свертка (также известная как предварительно отфильтрованная карта среды).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TextureImporterFormat">
      <summary>
        <para>Формат импортированной текстуры для TextureImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.Alpha8">
      <summary>
        <para>Формат текстуры TextureFormat.Alpha8.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ARGB16">
      <summary>
        <para>Формат текстуры TextureFormat.ARGB4444.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ARGB32">
      <summary>
        <para>Формат текстуры TextureFormat.ARGB32.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_10x10">
      <summary>
        <para>Формат текстуры RGB(A), сжатый ASTC, размер блока 10x10.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_12x12">
      <summary>
        <para>Формат текстуры RGB(A), сжатый ASTC, размер блока 12x12.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_4x4">
      <summary>
        <para>Формат текстуры RGB(A), сжатый ASTC, размер блока 4x4.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_5x5">
      <summary>
        <para>Формат текстуры RGB(A), сжатый ASTC, размер блока 5x5.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_6x6">
      <summary>
        <para>Формат текстуры RGB(A), сжатый ASTC, размер блока 6x6.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_8x8">
      <summary>
        <para>Формат текстуры RGB(A), сжатый ASTC, размер блока 8x8.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_HDR_10x10">
      <summary>
        <para>Формат текстуры RGB(A) HDR со сжатием ASTC, размер блока 10x10.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_HDR_12x12">
      <summary>
        <para>Формат текстуры RGB(A) HDR со сжатием ASTC, размер блока 12x12.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_HDR_4x4">
      <summary>
        <para>Формат текстуры RGB(A) HDR со сжатием ASTC, размер блока 4x4.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_HDR_5x5">
      <summary>
        <para>Формат текстуры RGB(A) HDR со сжатием ASTC, размер блока 5x5.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_HDR_6x6">
      <summary>
        <para>Формат текстуры RGB(A) HDR со сжатием ASTC, размер блока 6x6.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_HDR_8x8">
      <summary>
        <para>Формат текстуры RGB(A) HDR со сжатием ASTC, размер блока 8x8.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_RGB_10x10">
      <summary>
        <para>Формат сжатой текстуры RGB ASTC, размер блока 10x10.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_RGB_12x12">
      <summary>
        <para>Формат сжатой текстуры RGB ASTC, размер блока 12x12.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_RGB_4x4">
      <summary>
        <para>Формат сжатой текстуры RGB ASTC, размер блока 4x4.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_RGB_5x5">
      <summary>
        <para>Формат текстуры RGB со сжатием ASTC, размер блока 5x5.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_RGB_6x6">
      <summary>
        <para>Формат сжатой текстуры RGB ASTC, размер блока 6x6.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_RGB_8x8">
      <summary>
        <para>Формат текстуры RGB со сжатием ASTC, размер блока 8x8.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_RGBA_10x10">
      <summary>
        <para>Формат текстуры RGBA со сжатием ASTC, размер блока 10x10.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_RGBA_12x12">
      <summary>
        <para>Формат текстуры RGBA со сжатием ASTC, размер блока 12x12.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_RGBA_4x4">
      <summary>
        <para>Формат текстуры RGBA со сжатием ASTC, размер блока 4x4.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_RGBA_5x5">
      <summary>
        <para>Формат текстуры RGBA со сжатием ASTC, размер блока 5x5.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_RGBA_6x6">
      <summary>
        <para>Формат текстуры RGBA со сжатием ASTC, размер блока 6x6.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_RGBA_8x8">
      <summary>
        <para>Формат текстуры RGBA со сжатием ASTC, размер блока 8x8.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.Automatic">
      <summary>
        <para>Автоматический выбор формата текстуры на основе параметров текстуры.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.Automatic16bit">
      <summary>
        <para>Выберите 16-битный формат автоматически.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.AutomaticCompressed">
      <summary>
        <para>Автоматический выбор сжатого формата.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.AutomaticCompressedHDR">
      <summary>
        <para>Автоматический выбор сжатого формата HDR.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.AutomaticCrunched">
      <summary>
        <para>Автоматический выбор сокращенного формата.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.AutomaticHDR">
      <summary>
        <para>Выберите формат HDR автоматически.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.AutomaticTruecolor">
      <summary>
        <para>Выберите формат Truecolor автоматически.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.BC4">
      <summary>
        <para>Формат сжатой текстуры TextureFormat.BC4.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.BC5">
      <summary>
        <para>Формат сжатой текстуры TextureFormat.BC5.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.BC6H">
      <summary>
        <para>TextureFormat.BC6H Формат сжатой текстуры HDR.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.BC7">
      <summary>
        <para>Формат сжатой текстуры TextureFormat.BC7.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.DXT1">
      <summary>
        <para>Формат сжатой текстуры TextureFormat.DXT1 (BC1).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.DXT1Crunched">
      <summary>
        <para>Формат сжатой текстуры DXT1 (BC1) с использованием сжатия Crunch для хранения небольших размеров.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.DXT5">
      <summary>
        <para>Формат сжатой текстуры TextureFormat.DXT5 (BC3).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.DXT5Crunched">
      <summary>
        <para>Формат сжатой текстуры DXT5 (BC3) с использованием сжатия Crunch для хранения небольших размеров.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.EAC_R">
      <summary>
        <para>ETC2EAC сжимает 4-битный пиксельный формат текстуры R без знака.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.EAC_R_SIGNED">
      <summary>
        <para>ETC2EAC сжимает 4-битную текстуру R со знаком пикселя.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.EAC_RG">
      <summary>
        <para>ETC2EAC сжимает 8-битную пиксельную беззнаковую текстуру RG в формате RG.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.EAC_RG_SIGNED">
      <summary>
        <para>ETC2EAC сжимает 4-битную текстуру RG со знаком пикселя.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ETC_RGB4">
      <summary>
        <para>ETC (GLES2.0) 4-битный/пиксельный сжатый формат текстуры RGB.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ETC_RGB4_3DS">
      <summary>
        <para>ETC (Nintendo 3DS) Формат текстуры RGB со сжатием 4 бита на пиксель.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ETC_RGB4Crunched">
      <summary>
        <para>Формат сжатой текстуры ETC_RGB4 с использованием сжатия Crunch для хранения меньшего размера.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ETC_RGBA8_3DS">
      <summary>
        <para>ETC (Nintendo 3DS) Формат текстуры RGBA со сжатием 8 бит/пиксель.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ETC2_RGB4">
      <summary>
        <para>Формат текстуры RGB со сжатием 4 бита на пиксель ETC2.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ETC2_RGB4_PUNCHTHROUGH_ALPHA">
      <summary>
        <para>ETC2 сжимает 4 бита на пиксель RGB + 1-битный формат альфа-текстуры.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ETC2_RGBA8">
      <summary>
        <para>Формат текстуры RGBA со сжатием 8 бит/пиксель ETC2.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ETC2_RGBA8Crunched">
      <summary>
        <para>Сжатый цвет ETC2_RGBA8 с форматом текстуры альфа-канала с использованием сжатия Crunch для меньших размеров хранилища.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.PVRTC_RGB2">
      <summary>
        <para>PowerVR/iOS TextureFormat.PVRTC_RGB2 формат сжатой текстуры.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.PVRTC_RGB4">
      <summary>
        <para>Формат сжатой текстуры PowerVR/iOS TextureFormat.PVRTC_RGB4.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.PVRTC_RGBA2">
      <summary>
        <para>Формат сжатой текстуры PowerVR/iOS TextureFormat.PVRTC_RGBA2.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.PVRTC_RGBA4">
      <summary>
        <para>Формат сжатой текстуры PowerVR/iOS TextureFormat.PVRTC_RGBA4.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.R16">
      <summary>
        <para>Формат текстуры TextureFormat.R16.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.R8">
      <summary>
        <para>Формат текстуры TextureFormat.R8.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.RFloat">
      <summary>
        <para>TextureFormat.RFloat Формат текстуры с плавающей запятой.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.RG16">
      <summary>
        <para>Формат текстуры TextureFormat.RG16.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.RG32">
      <summary>
        <para>Формат текстуры TextureFormat.RG32.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.RGB16">
      <summary>
        <para>Формат текстуры TextureFormat.RGB565.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.RGB24">
      <summary>
        <para>Формат текстуры TextureFormat.RGB24.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.RGB48">
      <summary>
        <para>Формат текстуры TextureFormat.RGB48.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.RGB9E5">
      <summary>
        <para>TextureFormat.RGB9e5Float упакованный формат текстуры с плавающей запятой без знака с общим показателем степени.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.RGBA16">
      <summary>
        <para>Формат текстуры TextureFormat.RGBA4444.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.RGBA32">
      <summary>
        <para>Формат текстуры TextureFormat.RGBA32.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.RGBA64">
      <summary>
        <para>Формат текстуры TextureFormat.RGBA64.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.RGBAFloat">
      <summary>
        <para>TextureFormat.RGBAFFloat Формат текстуры RGBA с плавающей запятой.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.RGBAHalf">
      <summary>
        <para>TextureFormat.RGBAФормат текстуры половинной точности с плавающей запятой.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.RGFloat">
      <summary>
        <para>TextureFormat.RGFloat Формат текстуры с плавающей запятой.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.RGHalf">
      <summary>
        <para>TextureFormat.RGФормат текстуры половинной точности с плавающей запятой.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.RHalf">
      <summary>
        <para>TextureFormat.RФормат текстуры половинной точности с плавающей запятой.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TextureImporterGenerateCubemap">
      <summary>
        <para>Режим генерации кубической карты для TextureImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterGenerateCubemap.AutoCubemap">
      <summary>
        <para>Автоматически определять тип генерации кубической карты из исходного изображения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterGenerateCubemap.Cylindrical">
      <summary>
        <para>Создать кубическую карту из цилиндрической текстуры.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterGenerateCubemap.FullCubemap">
      <summary>
        <para>Создайте кубическую карту из вертикальной или горизонтальной перекрестной текстуры.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterGenerateCubemap.None">
      <summary>
        <para>Не создавать кубическую карту (по умолчанию).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterGenerateCubemap.Spheremap">
      <summary>
        <para>Создать кубическую карту из текстуры карты сферы.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TextureImporterMipFilter">
      <summary>
        <para>Фильтр мип-карт для TextureImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterMipFilter.BoxFilter">
      <summary>
        <para>MIP-фильтр коробки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterMipFilter.KaiserFilter">
      <summary>
        <para>Фильтр мип-карт Kaiser.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TextureImporterNormalFilter">
      <summary>
        <para>Режим фильтрации карты нормалей для TextureImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterNormalFilter.Sobel">
      <summary>
        <para>Фильтр карт нормалей Собеля.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterNormalFilter.Standard">
      <summary>
        <para>Стандартный фильтр карты нормалей.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TextureImporterNPOTScale">
      <summary>
        <para>Режим масштабирования для нестепени двух текстур в TextureImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterNPOTScale.None">
      <summary>
        <para>Оставить не-степень двух текстур как есть.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterNPOTScale.ToLarger">
      <summary>
        <para>Масштабируйте до большей степени двойки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterNPOTScale.ToNearest">
      <summary>
        <para>Масштабируйте до ближайшей степени двойки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterNPOTScale.ToSmaller">
      <summary>
        <para>Масштабируйте в меньшую степень двойки.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TextureImporterPlatformSettings">
      <summary>
        <para>Сохраняет специфичные для платформы настройки объекта TextureImporter.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterPlatformSettings.allowsAlphaSplitting">
      <summary>
        <para>При необходимости разрешает альфа-разделение импортированной текстуры (например, сжатие ETC1 для текстур с прозрачностью).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterPlatformSettings.androidETC2FallbackOverride">
      <summary>
        <para>Переопределить резервную распаковку ETC2 на устройствах Android, которые не поддерживают ETC2.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterPlatformSettings.compressionQuality">
      <summary>
        <para>Качество сжатия текстуры в диапазоне [0..100].</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterPlatformSettings.crunchedCompression">
      <summary>
        <para>Используйте сжатие crunch, если оно доступно.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterPlatformSettings.format">
      <summary>
        <para>Формат импортируемой текстуры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterPlatformSettings.maxTextureSize">
      <summary>
        <para>Максимальный размер текстуры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterPlatformSettings.name">
      <summary>
        <para>Имя цели сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterPlatformSettings.overridden">
      <summary>
        <para>Установите значение true, чтобы переопределить параметры платформы по умолчанию теми, которые предоставлены в структуре TextureImporterPlatformSettings.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterPlatformSettings.resizeAlgorithm">
      <summary>
        <para>Для уменьшения текстуры выберите алгоритм изменения размера. (Применяется, только если размер текстуры больше максимального размера).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterPlatformSettings.textureCompression">
      <summary>
        <para>Сжатие импортированной текстуры.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TextureImporterPlatformSettings.CopyTo(UnityEditor.TextureImporterPlatformSettings)">
      <summary>
        <para>Скопируйте параметры в другой объект TextureImporterPlatformSettings.</para>
      </summary>
      <param name="target">Объект TextureImporterPlatformSettings, в который нужно скопировать настройки.</param>
    </member>
    <member name="T:UnityEditor.TextureImporterRGBMMode">
      <summary>
        <para>Режим кодирования RGBM для HDR-текстур в TextureImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterRGBMMode.Auto">
      <summary>
        <para>Выполните кодирование RGBM, когда исходные данные являются HDR в TextureImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterRGBMMode.Encoded">
      <summary>
        <para>Исходная текстура уже закодирована в формате RGBM в TextureImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterRGBMMode.Off">
      <summary>
        <para>Не выполняйте кодирование RGBM в TextureImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterRGBMMode.On">
      <summary>
        <para>Выполните кодирование RGBM в TextureImporter.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TextureImporterSettings">
      <summary>
        <para>Сохраняет настройки объекта TextureImporter.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.alphaIsTransparency">
      <summary>
        <para>Если предоставленный альфа-канал является прозрачным, включите его, чтобы расширить цвет, чтобы избежать артефактов фильтрации по краям.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.alphaSource">
      <summary>
        <para>Выберите способ генерации альфа-канала импортированной текстуры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.alphaTestReferenceValue">
      <summary>
        <para>Возвращает или присваивает эталонное значение альфа-теста.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.aniso">
      <summary>
        <para>Уровень анизотропной фильтрации текстуры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.borderMipmap">
      <summary>
        <para>Включите это, чтобы цвета не просачивались к краю нижних уровней Mip. Используется для легких файлов cookie.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.convertToNormalMap">
      <summary>
        <para>Преобразовать карту высот в карту нормалей?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.cubemapConvolution">
      <summary>
        <para>Режим свертки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.cubemapConvolutionExponent">
      <summary>
        <para>Определяет, как быстро стирается экспонента Фонга в MIP-картах. Чем выше значение, тем меньше размытие будет применено к MIP-картам с высоким разрешением.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.cubemapConvolutionSteps">
      <summary>
        <para>Определяет, сколько различных показателей Фонга следует хранить в MIP-картах. Более высокое значение даст лучший переход между глянцевыми и грубыми отражениями, но потребует более высокого разрешения текстуры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.fadeOut">
      <summary>
        <para>Сделать мип-уровни серыми?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.filterMode">
      <summary>
        <para>Режим фильтрации текстуры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.flipbookColumns">
      <summary>
        <para>Количество столбцов в исходном изображении для Texture2DArray или Texture3D.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.flipbookRows">
      <summary>
        <para>Количество строк в исходном изображении для Texture2DArray или Texture3D.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.generateCubemap">
      <summary>
        <para>Режим генерации кубической карты.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.grayscaleToAlpha">
      <summary>
        <para>Генерировать альфа-канал из интенсивности?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.heightmapScale">
      <summary>
        <para>Количество неровностей на карте высот.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.ignorePngGamma">
      <summary>
        <para>Игнорируйте атрибут Gamma в файлах PNG. Это свойство не влияет на другие форматы файлов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.mipmapBias">
      <summary>
        <para>Смещение Mipmap текстуры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.mipmapEnabled">
      <summary>
        <para>Генерировать MIP-карты для текстуры?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.mipmapFadeDistanceEnd">
      <summary>
        <para>Мип-уровень, на котором текстура полностью становится серой.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.mipmapFadeDistanceStart">
      <summary>
        <para>Мип-уровень, на котором текстура начинает переходить в серый цвет.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.mipmapFilter">
      <summary>
        <para>Режим фильтрации MIP-карт.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.mipMapsPreserveCoverage">
      <summary>
        <para>Включает или отключает альфа-мипмаппинг с сохранением покрытия.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.normalMapFilter">
      <summary>
        <para>Режим фильтрации карты нормалей.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.npotScale">
      <summary>
        <para>Режим масштабирования для нестепеней двух текстур.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.readable">
      <summary>
        <para>Доступны ли данные текстуры для чтения из скриптов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.rgbm">
      <summary>
        <para>Режим кодирования RGBM для HDR-текстур в TextureImporter.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.singleChannelComponent">
      <summary>
        <para>Цвет или альфа-компонент TextureImporterType|Single Channel Textures использует.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.spriteAlignment">
      <summary>
        <para>Выравнивание спрайта относительно краев.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.spriteBorder">
      <summary>
        <para>Размеры границ сгенерированных спрайтов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.spriteExtrude">
      <summary>
        <para>Количество пустых пикселей, которые необходимо оставить между краем изображения и сеткой.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.spriteGenerateFallbackPhysicsShape">
      <summary>
        <para>Создает физическую форму по умолчанию для спрайта, если физическая форма не была установлена ​​пользователем.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.spriteMeshType">
      <summary>
        <para>SpriteMeshType определяет тип сетки, которую TextureImporter генерирует для спрайта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.spriteMode">
      <summary>
        <para>Режим импорта текстур спрайтов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.spritePivot">
      <summary>
        <para>Точка вращения спрайта относительно прямоугольника его изображения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.spritePixelsPerUnit">
      <summary>
        <para>Количество пикселей в спрайте, соответствующих одной единице в мировом пространстве.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.spritePixelsToUnits">
      <summary>
        <para>Масштабный коэффициент между пикселями в спрайтовой графике и единицами измерения мирового пространства.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.spriteTessellationDetail">
      <summary>
        <para>Детали тесселяции, которые будут использоваться для создания сетки для связанного спрайта, если для SpriteMode задано значение Single. Для нескольких спрайтов используйте SpriteEditor, чтобы указать значение для каждого спрайта.
Допустимые значения находятся в диапазоне [0–1], при этом более высокие значения создают более плотную сетку. Значение по умолчанию -1 позволит Unity определить значение автоматически.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.sRGBTexture">
      <summary>
        <para>Сохраняет ли эта текстура данные в цветовом пространстве sRGB (также называемом гаммой).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.streamingMipmaps">
      <summary>
        <para>Включить потоковую передачу MIP-карт для этой текстуры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.streamingMipmapsPriority">
      <summary>
        <para>Относительный приоритет для этой текстуры при уменьшении размера памяти, чтобы уложиться в бюджет памяти.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.textureShape">
      <summary>
        <para>Форма импортированной текстуры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.textureType">
      <summary>
        <para>С каким типом текстуры мы здесь имеем дело.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.vtOnly">
      <summary>
        <para>Включите, если текстура предназначена исключительно для использования со стеком текстур для виртуального текстурирования.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.wrapMode">
      <summary>
        <para>Режим переноса текстурных координат.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.wrapModeU">
      <summary>
        <para>Режим переноса координат текстуры U.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.wrapModeV">
      <summary>
        <para>Режим переноса координат V текстуры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.wrapModeW">
      <summary>
        <para>Режим переноса координат текстуры W для Texture3D.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TextureImporterSettings.ApplyTextureType(UnityEditor.TextureImporterType,System.Boolean)">
      <summary>
        <para>Настройте параметры для импорта текстуры с целью ее типа, как описано здесь TextureImporterType|.</para>
      </summary>
      <param name="type">Тип текстуры. См. TextureImporterType.</param>
      <param name="applyAll">Если false, измените только определенные свойства. Какой именно, зависит от типа.</param>
    </member>
    <member name="M:UnityEditor.TextureImporterSettings.CopyTo(UnityEditor.TextureImporterSettings)">
      <summary>
        <para>Скопируйте параметры в другой объект TextureImporterSettings.</para>
      </summary>
      <param name="target">Объект TextureImporterSettings, в который нужно скопировать настройки.</param>
    </member>
    <member name="M:UnityEditor.TextureImporterSettings.Equal(UnityEditor.TextureImporterSettings,UnityEditor.TextureImporterSettings)">
      <summary>
        <para>Проверьте настройки импортера текстур на равенство.</para>
      </summary>
      <param name="a">
      </param>
      <param name="b">
      </param>
    </member>
    <member name="T:UnityEditor.TextureImporterShape">
      <summary>
        <para>Форма импортированной текстуры.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterShape.Texture2D">
      <summary>
        <para>Импортируйте текстуру как 2D-текстуру (по умолчанию).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterShape.Texture2DArray">
      <summary>
        <para>Импортируйте текстуру как текстуру 2D-массива.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterShape.Texture3D">
      <summary>
        <para>Импортируйте текстуру как 3D-текстуру.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterShape.TextureCube">
      <summary>
        <para>Импортируйте текстуру как кубическую карту.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TextureImporterSingleChannelComponent">
      <summary>
        <para>Выбирает, какой канал Color/Alpha использует TextureImporterType|Single Channel Textures.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterSingleChannelComponent.Alpha">
      <summary>
        <para>Используйте альфа-канал.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterSingleChannelComponent.Red">
      <summary>
        <para>Используйте красный цветной канал.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TextureImporterType">
      <summary>
        <para>Выберите это, чтобы установить основные параметры в зависимости от назначения вашей текстуры.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterType.Cookie">
      <summary>
        <para>Это настраивает вашу текстуру с основными параметрами, используемыми для файлов cookie ваших источников света.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterType.Cursor">
      <summary>
        <para>Используйте это, если ваша текстура будет использоваться в качестве курсора.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterType.Default">
      <summary>
        <para>Это наиболее распространенный параметр, используемый для всех текстур в целом.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterType.DirectionalLightmap">
      <summary>
        <para>Используйте это для текстур, содержащих данные направленной карты освещения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterType.GUI">
      <summary>
        <para>Используйте это, если ваша текстура будет использоваться на любых элементах управления HUD/GUI.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterType.Image">
      <summary>
        <para>Это наиболее распространенный параметр, используемый для всех текстур в целом.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterType.Lightmap">
      <summary>
        <para>Это настраивает вашу текстуру с параметрами, используемыми картой освещения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterType.NormalMap">
      <summary>
        <para>Выберите это, чтобы преобразовать цветовые каналы в формат, подходящий для карт нормалей в реальном времени.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterType.Shadowmask">
      <summary>
        <para>Используйте это для текстур, содержащих данные теневой маски.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterType.SingleChannel">
      <summary>
        <para>Используйте это для текстуры, содержащей один канал.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterType.Sprite">
      <summary>
        <para>Выберите этот параметр, если вы будете использовать текстуру для графики Sprite.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TextureResizeAlgorithm">
      <summary>
        <para>Для уменьшения текстуры выберите алгоритм изменения размера. (Применяется, только если размер текстуры больше максимального размера).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureResizeAlgorithm.Bilinear">
      <summary>
        <para>Может дать лучший результат, чем Митчелл, для некоторых текстур шума, сохраняющих более четкие детали.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureResizeAlgorithm.Mitchell">
      <summary>
        <para>Алгоритм изменения размера высокого качества по умолчанию.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Tool">
      <summary>
        <para>Какой инструмент активен в редакторе.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Tool.Custom">
      <summary>
        <para>Любой инструмент, который не является одним из встроенных инструментов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Tool.Move">
      <summary>
        <para>Инструмент перемещения активен.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Tool.None">
      <summary>
        <para>Ни один инструмент не активен. Установите это, чтобы реализовать собственную панель инструментов в инспекторе (как это делает редактор ландшафта).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Tool.Rect">
      <summary>
        <para>Прямоугольный инструмент активен.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Tool.Rotate">
      <summary>
        <para>Инструмент поворота активен.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Tool.Scale">
      <summary>
        <para>Инструмент масштабирования активен.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Tool.Transform">
      <summary>
        <para>Инструмент трансформации активен.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Tool.View">
      <summary>
        <para>Инструмент просмотра активен. Используйте Tools.viewTool, чтобы узнать, о каком инструменте просмотра идет речь.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Toolbars.EditorToolbarElementAttribute">
      <summary>
        <para>Атрибут EditorToolbarElement позволяет сделать доступным конкретный элемент VisualElement для использования на панели инструментов редактора.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Toolbars.EditorToolbarElementAttribute.id">
      <summary>
        <para>Идентификатор элемента.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Toolbars.EditorToolbarElementAttribute.targetWindows">
      <summary>
        <para>Целевые контексты.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Toolbars.EditorToolbarElementAttribute.#ctor(System.String,System.Type[])">
      <summary>
        <para>Атрибут EditorToolbarElement позволяет сделать доступным конкретный элемент VisualElement для использования на панели инструментов редактора.</para>
      </summary>
      <param name="id">Идентификатор элемента.</param>
      <param name="targetWindows">Целевые контексты.</param>
    </member>
    <member name="T:UnityEditor.Toolbars.EditorToolbarUtility">
      <summary>
        <para>Функции утилиты Editor при работе с EditorToolbar.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Toolbars.EditorToolbarUtility.SetupChildrenAsButtonStrip(UnityEngine.UIElements.VisualElement)">
      <summary>
        <para>Назначает необходимые классы USS дочерним элементам, чтобы они отображались в виде одной полосы кнопок.</para>
      </summary>
      <param name="root">Корневой визуальный элемент полосы кнопок.</param>
    </member>
    <member name="?:UnityEditor.Toolbars.IAccessContainerWindow">
      <summary>
        <para>Реализуйте этот интерфейс, чтобы получить доступ к контейнеру панели инструментов EditorWindow.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Toolbars.IAccessContainerWindow.containerWindow">
      <summary>
        <para>Контейнер EditorToolbar EditorWindow.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Tools">
      <summary>
        <para>Класс, используемый для управления инструментами, используемыми в представлении сцены Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Tools.current">
      <summary>
        <para>Инструмент, выбранный в данный момент для просмотра сцены.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Tools.handlePosition">
      <summary>
        <para>Положение ручки инструмента в мировом пространстве.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Tools.handleRect">
      <summary>
        <para>Прямоугольник, используемый для инструмента «Прямоугольник».</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Tools.handleRectRotation">
      <summary>
        <para>Вращение ручки инструмента rect в мировом пространстве.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Tools.handleRotation">
      <summary>
        <para>Вращение ручки инструмента в мировом пространстве.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Tools.hidden">
      <summary>
        <para>Скрывает инструменты (перемещение, поворот, изменение размера) в представлении «Сцена».</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Tools.pivotMode">
      <summary>
        <para>Мы находимся в режиме Center или Pivot?</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Tools.pivotModeChanged(System.Action)">
      <summary>
        <para>Обратный вызов срабатывает при изменении режима поворота.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="P:UnityEditor.Tools.pivotRotation">
      <summary>
        <para>Каково вращение ручки инструмента.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Tools.pivotRotationChanged(System.Action)">
      <summary>
        <para>Обратный вызов срабатывает при изменении поворота опорной точки.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="P:UnityEditor.Tools.rectBlueprintMode">
      <summary>
        <para>Находится ли прямоугольный дескриптор в режиме схемы?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Tools.viewTool">
      <summary>
        <para>Параметр, который в настоящее время активен для инструмента «Просмотр» в представлении «Сцена».</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Tools.viewToolActive">
      <summary>
        <para>Возвращает true, если активный инструмент является инструментом просмотра или навигации.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Tools.viewToolChanged(System.Action)">
      <summary>
        <para>Обратный вызов срабатывает при изменении инструмента представления.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="P:UnityEditor.Tools.visibleLayers">
      <summary>
        <para>Какие слои видны в представлении «Сцена».</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TransformUtils">
      <summary>
        <para>Класс утилиты преобразования редактора.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TransformUtils.GetInspectorRotation(UnityEngine.Transform)">
      <summary>
        <para>Возвращает поворот преобразования, как показано в окне Transform Inspector.</para>
      </summary>
      <param name="t">Преобразуйте, чтобы получить вращение от.</param>
      <returns>
        <para>Вращение, как показано в окне Transform Inspector.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TransformUtils.SetInspectorRotation(UnityEngine.Transform,UnityEngine.Vector3)">
      <summary>
        <para>Устанавливает поворот преобразования так, как это было бы установлено в окне Transform Inspector.</para>
      </summary>
      <param name="t">Преобразуйте, чтобы включить вращение.</param>
      <param name="r">Поворот, как он будет установлен в окне Transform Inspector.</param>
    </member>
    <member name="T:UnityEditor.TrueTypeFontImporter">
      <summary>
        <para>AssetImporter для импорта шрифтов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TrueTypeFontImporter.ascentCalculationMode">
      <summary>
        <para>Режим вычисления для определения подъема шрифта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TrueTypeFontImporter.characterPadding">
      <summary>
        <para>Пиксели границ добавлены к изображениям символов для заполнения. Это полезно, если вы хотите визуализировать текст с помощью шейдера, который должен отображаться за пределами области символов (например, контурный шейдер).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TrueTypeFontImporter.characterSpacing">
      <summary>
        <para>Расстояние между изображениями символов в сгенерированной текстуре в пикселях. Это полезно, если вы хотите визуализировать текст с помощью шейдера, который сэмплирует пиксели за пределами области символов (например, шейдер контура).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TrueTypeFontImporter.customCharacters">
      <summary>
        <para>Пользовательский набор символов для включения в текстуру шрифта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TrueTypeFontImporter.fontNames">
      <summary>
        <para>Массив имен шрифтов, который будет использоваться, если для includeFontData задано значение false.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TrueTypeFontImporter.fontReferences">
      <summary>
        <para>Ссылки на другие шрифты, используемые для поиска запасных вариантов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TrueTypeFontImporter.fontRenderingMode">
      <summary>
        <para>Режим рендеринга шрифта для использования с этим шрифтом.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TrueTypeFontImporter.fontSize">
      <summary>
        <para>Размер шрифта для импорта символов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TrueTypeFontImporter.fontTextureCase">
      <summary>
        <para>Используйте это, чтобы указать, какие символы следует импортировать.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TrueTypeFontImporter.fontTTFName">
      <summary>
        <para>Внутреннее имя шрифта файла TTF.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TrueTypeFontImporter.includeFontData">
      <summary>
        <para>Если этот параметр включен, фактический шрифт будет встроен в ресурс для динамических шрифтов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TrueTypeFontImporter.shouldRoundAdvanceValue">
      <summary>
        <para>Установите для этого свойства значение true, если вы хотите округлить внутреннюю ширину шрифта до ближайшего целого числа.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TrueTypeFontImporter.GenerateEditableFont(System.String)">
      <summary>
        <para>Создайте редактируемую копию ресурса шрифта по пути.</para>
      </summary>
      <param name="path">
      </param>
    </member>
    <member name="T:UnityEditor.tvOSSdkVersion">
      <summary>
        <para>Поддерживаемые версии tvOS SDK.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.tvOSSdkVersion.Device">
      <summary>
        <para>SDK устройства.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.tvOSSdkVersion.Simulator">
      <summary>
        <para>SDK симулятора.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.tvOSTargetOSVersion">
      <summary>
        <para>Поддерживаемые версии развертывания tvOS.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.tvOSTargetOSVersion.tvOS_9_0">
      <summary>
        <para>Таргетинг на tvOS 9.0.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.tvOSTargetOSVersion.tvOS_9_1">
      <summary>
        <para>Таргетинг на tvOS 9.1.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.tvOSTargetOSVersion.Unknown">
      <summary>
        <para>Неизвестная версия tvOS, управляемая пользователем.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TypeCache">
      <summary>
        <para>Предоставляет методы для быстрого извлечения типов из сборок, загруженных в домен Unity.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TypeCache.FieldInfoCollection">
      <summary>
        <para>Представляет доступную только для чтения коллекцию FieldInfo и реализует интерфейс IList.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TypeCache.FieldInfoCollection.Contains(System.Reflection.FieldInfo)">
      <summary>
        <para>Определяет, находится ли элемент в FieldInfoCollection.</para>
      </summary>
      <param name="item">Объект, который нужно найти в коллекции.</param>
      <returns>
        <para>Возвращает true, если элемент найден в коллекции. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.FieldInfoCollection.Contains(System.Object)">
      <summary>
        <para>Определяет, находится ли элемент в FieldInfoCollection.</para>
      </summary>
      <param name="item">Объект, который нужно найти в коллекции.</param>
      <returns>
        <para>Возвращает true, если элемент найден в коллекции. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.FieldInfoCollection.CopyTo(System.Reflection.FieldInfo[],System.Int32)">
      <summary>
        <para>Копирует коллекцию в массив.</para>
      </summary>
      <param name="array">Одномерный целевой массив, в который копируются элементы из FieldInfoCollection.</param>
      <param name="arrayIndex">Отсчитываемый от нуля индекс, в который копируются элементы в целевом массиве.</param>
    </member>
    <member name="M:UnityEditor.TypeCache.FieldInfoCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <para>Копирует коллекцию в массив.</para>
      </summary>
      <param name="array">Одномерный целевой массив, в который копируются элементы из FieldInfoCollection.</param>
      <param name="arrayIndex">Отсчитываемый от нуля индекс, в который копируются элементы в целевом массиве.</param>
    </member>
    <member name="P:UnityEditor.TypeCache.FieldInfoCollection.Count">
      <summary>
        <para>Количество элементов в FieldInfoCollection.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TypeCache.FieldInfoCollection.Enumerator">
      <summary>
        <para>Перечисляет элементы коллекции FieldInfoCollection.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TypeCache.FieldInfoCollection.Enumerator.Current">
      <summary>
        <para>Получает элемент в текущей позиции перечислителя.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TypeCache.FieldInfoCollection.Enumerator.Dispose">
      <summary>
        <para>Освобождает все ресурсы, используемые перечислителем.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TypeCache.FieldInfoCollection.Enumerator.MoveNext">
      <summary>
        <para>Перемещает перечислитель к следующему элементу коллекции.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TypeCache.FieldInfoCollection.GetEnumerator">
      <summary>
        <para>Получает перечислитель, выполняющий итерацию по коллекции FieldInfoCollection.</para>
      </summary>
      <returns>
        <para>Возвращает FieldInfoCollection.Enumerator.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.FieldInfoCollection.IndexOf(System.Reflection.FieldInfo)">
      <summary>
        <para>Получает первое вхождение элемента в FieldInfoCollection.</para>
      </summary>
      <param name="item">Объект, который нужно найти в коллекции.</param>
      <returns>
        <para>Возвращает отсчитываемый от нуля индекс первого вхождения элемента. Возвращает -1, если элемент не найден.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.FieldInfoCollection.IndexOf(System.Object)">
      <summary>
        <para>Получает первое вхождение элемента в FieldInfoCollection.</para>
      </summary>
      <param name="item">Объект, который нужно найти в коллекции.</param>
      <returns>
        <para>Возвращает отсчитываемый от нуля индекс первого вхождения элемента. Возвращает -1, если элемент не найден.</para>
      </returns>
    </member>
    <member name="P:UnityEditor.TypeCache.FieldInfoCollection.IsFixedSize">
      <summary>
        <para>Имеет ли коллекция FieldInfoCollection фиксированный размер. Для этого свойства всегда установлено значение true.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TypeCache.FieldInfoCollection.IsReadOnly">
      <summary>
        <para>Является ли коллекция FieldInfoCollection доступной только для чтения. Для этого свойства всегда установлено значение true.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TypeCache.FieldInfoCollection.IsSynchronized">
      <summary>
        <para>Синхронизируется ли коллекция FieldInfoCollection. Для этого свойства всегда установлено значение true.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TypeCache.FieldInfoCollection.this">
      <summary>
        <para>Получает элемент по указанному индексу.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TypeCache.GetFieldsWithAttribute(System.Type)">
      <summary>
        <para>Извлекает набор полей, отмеченных атрибутом T.</para>
      </summary>
      <param name="attrType">Тип атрибута.</param>
      <returns>
        <para>Возвращает коллекцию полей FieldInfo, отмеченных атрибутом T.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.GetFieldsWithAttribute">
      <summary>
        <para>Извлекает набор полей, отмеченных атрибутом T.</para>
      </summary>
      <param name="attrType">Тип атрибута.</param>
      <returns>
        <para>Возвращает коллекцию полей FieldInfo, отмеченных атрибутом T.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.GetMethodsWithAttribute">
      <summary>
        <para>Извлекает коллекцию методов, отмеченных атрибутом T.</para>
      </summary>
      <param name="attrType">Тип атрибута.</param>
      <returns>
        <para>Возвращает коллекцию методов MethodInfo, отмеченных атрибутом T.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.GetMethodsWithAttribute(System.Type)">
      <summary>
        <para>Извлекает коллекцию методов, отмеченных атрибутом T.</para>
      </summary>
      <param name="attrType">Тип атрибута.</param>
      <returns>
        <para>Возвращает коллекцию методов MethodInfo, отмеченных атрибутом T.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.GetTypesDerivedFrom">
      <summary>
        <para>Извлекает коллекцию типов, производных от типа T.</para>
      </summary>
      <param name="parentType">Тип класса или интерфейса.</param>
      <returns>
        <para>Возвращает коллекцию производных типов.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.GetTypesDerivedFrom(System.Type)">
      <summary>
        <para>Извлекает коллекцию типов, производных от типа T.</para>
      </summary>
      <param name="parentType">Тип класса или интерфейса.</param>
      <returns>
        <para>Возвращает коллекцию производных типов.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.GetTypesWithAttribute">
      <summary>
        <para>Извлекает коллекцию типов, отмеченных атрибутом T.</para>
      </summary>
      <param name="attrType">Тип атрибута.</param>
      <returns>
        <para>Возвращает коллекцию типов.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.GetTypesWithAttribute(System.Type)">
      <summary>
        <para>Извлекает коллекцию типов, отмеченных атрибутом T.</para>
      </summary>
      <param name="attrType">Тип атрибута.</param>
      <returns>
        <para>Возвращает коллекцию типов.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.TypeCache.MethodCollection">
      <summary>
        <para>Представляет доступную только для чтения коллекцию MethodInfo и реализует интерфейс IList.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TypeCache.MethodCollection.Contains(System.Reflection.MethodInfo)">
      <summary>
        <para>Определяет, находится ли элемент в MethodCollection.</para>
      </summary>
      <param name="item">Объект, который нужно найти в коллекции.</param>
      <returns>
        <para>Возвращает true, если элемент найден в коллекции. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.MethodCollection.Contains(System.Object)">
      <summary>
        <para>Определяет, находится ли элемент в MethodCollection.</para>
      </summary>
      <param name="item">Объект, который нужно найти в коллекции.</param>
      <returns>
        <para>Возвращает true, если элемент найден в коллекции. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.MethodCollection.CopyTo(System.Reflection.MethodInfo[],System.Int32)">
      <summary>
        <para>Копирует коллекцию в массив.</para>
      </summary>
      <param name="array">Одномерный целевой массив, в который копируются элементы из MethodCollection.</param>
      <param name="arrayIndex">Отсчитываемый от нуля индекс, в который копируются элементы в целевом массиве.</param>
    </member>
    <member name="M:UnityEditor.TypeCache.MethodCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <para>Копирует коллекцию в массив.</para>
      </summary>
      <param name="array">Одномерный целевой массив, в который копируются элементы из MethodCollection.</param>
      <param name="arrayIndex">Отсчитываемый от нуля индекс, в который копируются элементы в целевом массиве.</param>
    </member>
    <member name="P:UnityEditor.TypeCache.MethodCollection.Count">
      <summary>
        <para>Количество элементов в MethodCollection.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TypeCache.MethodCollection.Enumerator">
      <summary>
        <para>Перечисляет элементы MethodCollection.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TypeCache.MethodCollection.Enumerator.Current">
      <summary>
        <para>Получает элемент в текущей позиции перечислителя.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TypeCache.MethodCollection.Enumerator.Dispose">
      <summary>
        <para>Освобождает все ресурсы, используемые перечислителем.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TypeCache.MethodCollection.Enumerator.MoveNext">
      <summary>
        <para>Перемещает перечислитель к следующему элементу коллекции.</para>
      </summary>
      <returns>
        <para>Возвращает true, если перечислитель успешно перешел к следующему элементу. Возвращает false, если перечислитель достигает конца коллекции.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.MethodCollection.GetEnumerator">
      <summary>
        <para>Получает перечислитель, который перебирает MethodCollection.</para>
      </summary>
      <returns>
        <para>Возвращает MethodCollection.Enumerator.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.MethodCollection.IndexOf(System.Reflection.MethodInfo)">
      <summary>
        <para>Получает первое вхождение элемента в MethodCollection.</para>
      </summary>
      <param name="item">Объект, который нужно найти в коллекции.</param>
      <returns>
        <para>Возвращает отсчитываемый от нуля индекс первого вхождения элемента. Возвращает -1, если элемент не найден.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.MethodCollection.IndexOf(System.Object)">
      <summary>
        <para>Получает первое вхождение элемента в MethodCollection.</para>
      </summary>
      <param name="item">Объект, который нужно найти в коллекции.</param>
      <returns>
        <para>Возвращает отсчитываемый от нуля индекс первого вхождения элемента. Возвращает -1, если элемент не найден.</para>
      </returns>
    </member>
    <member name="P:UnityEditor.TypeCache.MethodCollection.IsFixedSize">
      <summary>
        <para>Имеет ли MethodCollection фиксированный размер. Для этого свойства всегда установлено значение true.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TypeCache.MethodCollection.IsReadOnly">
      <summary>
        <para>Является ли коллекция MethodCollection доступной только для чтения. Для этого свойства всегда установлено значение true.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TypeCache.MethodCollection.IsSynchronized">
      <summary>
        <para>Синхронизируется ли коллекция MethodCollection. Для этого свойства всегда установлено значение true.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TypeCache.MethodCollection.this">
      <summary>
        <para>Получает элемент по указанному индексу.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TypeCache.TypeCollection">
      <summary>
        <para>Представляет доступную только для чтения коллекцию Type и реализует интерфейс IList.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TypeCache.TypeCollection.Contains(System.Type)">
      <summary>
        <para>Определяет, находится ли элемент в TypeCollection.</para>
      </summary>
      <param name="item">Объект, который нужно найти в коллекции.</param>
      <returns>
        <para>Возвращает true, если элемент найден в TypeCollection. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.TypeCollection.Contains(System.Object)">
      <summary>
        <para>Определяет, находится ли элемент в TypeCollection.</para>
      </summary>
      <param name="item">Объект, который нужно найти в коллекции.</param>
      <returns>
        <para>Возвращает true, если элемент найден в TypeCollection. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.TypeCollection.CopyTo(System.Type[],System.Int32)">
      <summary>
        <para>Копирует коллекцию в массив.</para>
      </summary>
      <param name="array">Одномерный целевой массив, в который копируются элементы из TypeCollection.</param>
      <param name="arrayIndex">Отсчитываемый от нуля индекс, в который копируются элементы в целевом массиве.</param>
    </member>
    <member name="M:UnityEditor.TypeCache.TypeCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <para>Копирует коллекцию в массив.</para>
      </summary>
      <param name="array">Одномерный целевой массив, в который копируются элементы из TypeCollection.</param>
      <param name="arrayIndex">Отсчитываемый от нуля индекс, в который копируются элементы в целевом массиве.</param>
    </member>
    <member name="P:UnityEditor.TypeCache.TypeCollection.Count">
      <summary>
        <para>Количество элементов в TypeCollection.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TypeCache.TypeCollection.Enumerator">
      <summary>
        <para>Перечисляет элементы TypeCollection.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TypeCache.TypeCollection.Enumerator.Current">
      <summary>
        <para>Получает элемент в текущей позиции перечислителя.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TypeCache.TypeCollection.Enumerator.Dispose">
      <summary>
        <para>Освобождает все ресурсы, используемые перечислителем.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TypeCache.TypeCollection.Enumerator.MoveNext">
      <summary>
        <para>Перемещает перечислитель к следующему элементу коллекции.</para>
      </summary>
      <returns>
        <para>Возвращает true, если перечислитель успешно перешел к следующему элементу. Возвращает false, если перечислитель достигает конца коллекции.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.TypeCollection.GetEnumerator">
      <summary>
        <para>Получает перечислитель, выполняющий итерацию по TypeCollection.</para>
      </summary>
      <returns>
        <para>Возвращает TypeCollection.Enumerator для коллекции.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.TypeCollection.IndexOf(System.Type)">
      <summary>
        <para>Получает первое вхождение элемента в TypeCollection.</para>
      </summary>
      <param name="item">Объект, который нужно найти в TypeCollection.</param>
      <returns>
        <para>Возвращает отсчитываемый от нуля индекс первого вхождения элемента. Возвращает -1, если элемент не найден.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.TypeCollection.IndexOf(System.Object)">
      <summary>
        <para>Получает первое вхождение элемента в TypeCollection.</para>
      </summary>
      <param name="item">Объект, который нужно найти в TypeCollection.</param>
      <returns>
        <para>Возвращает отсчитываемый от нуля индекс первого вхождения элемента. Возвращает -1, если элемент не найден.</para>
      </returns>
    </member>
    <member name="P:UnityEditor.TypeCache.TypeCollection.IsFixedSize">
      <summary>
        <para>Имеет ли TypeCollection фиксированный размер. Для этого свойства всегда установлено значение true.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TypeCache.TypeCollection.IsReadOnly">
      <summary>
        <para>Является ли коллекция TypeCollection доступной только для чтения. Для этого свойства всегда установлено значение true.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TypeCache.TypeCollection.IsSynchronized">
      <summary>
        <para>Синхронизируется ли TypeCollection. Для этого свойства всегда установлено значение true.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TypeCache.TypeCollection.this">
      <summary>
        <para>Получает элемент по указанному индексу.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.U2D.SpriteAtlasAsset">
      <summary>
        <para>SpriteAtlasAsset хранит входные данные для создания SpriteAtlas и создает текстуры атласа при импорте.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.U2D.SpriteAtlasAsset.isVariant">
      <summary>
        <para>Проверяет, установил ли средство импорта атласа спрайтов атлас спрайтов как вариант.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasAsset.Add(UnityEngine.Object[])">
      <summary>
        <para>Добавьте массив активов в список упаковываемых объектов.</para>
      </summary>
      <param name="objects">
      </param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasAsset.GetMasterAtlas">
      <summary>
        <para>Получает основной атлас спрайтов для данного варианта атласа спрайтов.</para>
      </summary>
      <returns>
        <para>Возвращает атлас главного спрайта, если он установлен. В противном случае возвращает значение null.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasAsset.GetPackingSettings">
      <summary>
        <para>Получает текущие настройки SpriteAtlasPackingSettings для использования при упаковке SpriteAtlas.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasAsset.GetPlatformSettings(System.String)">
      <summary>
        <para>Получает параметры платформы указанной цели сборки.</para>
      </summary>
      <param name="buildTarget">Имя цели сборки.</param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasAsset.GetTextureSettings">
      <summary>
        <para>Получает SpriteAtlasTextureSettings упакованных текстур, созданных этим SpriteAtlasAsset.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasAsset.IsIncludeInBuild">
      <summary>
        <para>Проверяет, помечен ли этот Атлас спрайтов для включения в сборку.</para>
      </summary>
      <returns>
        <para>Возвращает true, если Sprite Atlas включен в сборку.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasAsset.Load(System.String)">
      <summary>
        <para>Загружает SpriteAtlasAsset по заданному пути. Расширение файла SpriteAtlasAsset — *.spriteatlasv2.</para>
      </summary>
      <param name="assetPath">Путь к файлу SpriteAtlasAsset на диске.</param>
      <returns>
        <para>Возвращает загруженный объект SpriteAtlasAsset.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasAsset.Remove(UnityEngine.Object[])">
      <summary>
        <para>Удаляет объекты из списка упаковываемых объектов Atlas.</para>
      </summary>
      <param name="objects">
      </param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasAsset.Save(UnityEditor.U2D.SpriteAtlasAsset,System.String)">
      <summary>
        <para>Сохраняет SpriteAtlasAsset на диск. Расширение файла SpriteAtlasAsset — *.spriteatlasv2.</para>
      </summary>
      <param name="asset">Сохраняемый объект SpriteAtlasAsset.</param>
      <param name="assetPath">Путь к файлу SpriteAtlasAsset на диске.</param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasAsset.SetIncludeInBuild(System.Boolean)">
      <summary>
        <para>Определяет, будут ли упакованные текстуры SpriteAtlas, созданные импортером, включены в сборку со спрайтом после завершения упаковки.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasAsset.SetIsVariant(System.Boolean)">
      <summary>
        <para>Устанавливает, является ли этот Атлас спрайтов вариантом или нет.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasAsset.SetMasterAtlas(UnityEngine.U2D.SpriteAtlas)">
      <summary>
        <para>Устанавливает Атлас в качестве главного Атласа.</para>
      </summary>
      <param name="atlas">
      </param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasAsset.SetPackingSettings(UnityEditor.U2D.SpriteAtlasPackingSettings)">
      <summary>
        <para>Устанавливает SpriteAtlasPackingSettings для использования при упаковке этого SpriteAtlas.</para>
      </summary>
      <param name="src">
      </param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasAsset.SetPlatformSettings(UnityEditor.TextureImporterPlatformSettings)">
      <summary>
        <para>Задайте настройки для конкретной платформы.</para>
      </summary>
      <param name="src">
      </param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasAsset.SetTextureSettings(UnityEditor.U2D.SpriteAtlasTextureSettings)">
      <summary>
        <para>Задает SpriteAtlasTextureSettings для упакованной текстуры, созданной этим SpriteAtlas.</para>
      </summary>
      <param name="src">
      </param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasAsset.SetVariantScale(System.Single)">
      <summary>
        <para>Устанавливает значение, используемое для уменьшения масштаба основной текстуры.</para>
      </summary>
      <param name="value">Множитель для уменьшения текстуры Master Atlas, рекомендуемый диапазон: [0,1 ~ 0,99].</param>
    </member>
    <member name="T:UnityEditor.U2D.SpriteAtlasExtensions">
      <summary>
        <para>Расширения методов для SpriteAtlas в редакторе.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasExtensions.Add(UnityEngine.U2D.SpriteAtlas,UnityEngine.Object[])">
      <summary>
        <para>Добавьте массив активов в список упаковываемых объектов.</para>
      </summary>
      <param name="objects">Массив объектов для упаковки в атлас.</param>
      <param name="spriteAtlas">
      </param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasExtensions.GetMasterAtlas(UnityEngine.U2D.SpriteAtlas)">
      <summary>
        <para>Получает основной атлас спрайтов для данного варианта атласа спрайтов.</para>
      </summary>
      <param name="spriteAtlas">Атлас спрайтов, который необходимо запросить для получения статуса главного атласа спрайтов.</param>
      <returns>
        <para>Возвращает атлас главного спрайта, если он установлен. В противном случае возвращает значение null.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasExtensions.GetPackables(UnityEngine.U2D.SpriteAtlas)">
      <summary>
        <para>Верните все текущие упакованные предметы в атлас.</para>
      </summary>
      <param name="spriteAtlas">
      </param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasExtensions.GetPackingSettings(UnityEngine.U2D.SpriteAtlas)">
      <summary>
        <para>Текущие настройки SpriteAtlasPackingSettings для использования при упаковке этого SpriteAtlas.</para>
      </summary>
      <param name="spriteAtlas">
      </param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasExtensions.GetPlatformSettings(UnityEngine.U2D.SpriteAtlas,System.String)">
      <summary>
        <para>Возвращает параметры платформы указанной вами цели сборки.</para>
      </summary>
      <param name="buildTarget">Имя цели сборки.</param>
      <param name="spriteAtlas">
      </param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasExtensions.GetTextureSettings(UnityEngine.U2D.SpriteAtlas)">
      <summary>
        <para>Текущие параметры SpriteAtlasTextureSettings упакованной текстуры, сгенерированной этим SpriteAtlas.</para>
      </summary>
      <param name="spriteAtlas">
      </param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasExtensions.IsIncludeInBuild(UnityEngine.U2D.SpriteAtlas)">
      <summary>
        <para>Проверяет, помечен ли этот Атлас спрайтов для включения в сборку.</para>
      </summary>
      <param name="spriteAtlas">Включен ли в сборку Sprite Atlas.</param>
      <returns>
        <para>Возвращает true, если Sprite Atlas включен в сборку.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasExtensions.Remove(UnityEngine.U2D.SpriteAtlas,UnityEngine.Object[])">
      <summary>
        <para>Удалить объекты из списка упаковываемых объектов атласа.</para>
      </summary>
      <param name="objects">Объект в массиве, который вы хотите удалить.</param>
      <param name="spriteAtlas">
      </param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasExtensions.SetIncludeInBuild(UnityEngine.U2D.SpriteAtlas,System.Boolean)">
      <summary>
        <para>Определите, будет ли упакованная текстура этого атласа спрайтов включена в сборку со спрайтом после завершения упаковки.</para>
      </summary>
      <param name="spriteAtlas">
      </param>
      <param name="value">
      </param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasExtensions.SetIsVariant(UnityEngine.U2D.SpriteAtlas,System.Boolean)">
      <summary>
        <para>Устанавливает, является ли этот Атлас спрайтов вариантом или нет.</para>
      </summary>
      <param name="spriteAtlas">
      </param>
      <param name="value">
      </param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasExtensions.SetMasterAtlas(UnityEngine.U2D.SpriteAtlas,UnityEngine.U2D.SpriteAtlas)">
      <summary>
        <para>Установите атлас в качестве главного атласа.</para>
      </summary>
      <param name="spriteAtlas">
      </param>
      <param name="value">
      </param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasExtensions.SetPackingSettings(UnityEngine.U2D.SpriteAtlas,UnityEditor.U2D.SpriteAtlasPackingSettings)">
      <summary>
        <para>Установите SpriteAtlasPackingSettings для использования при упаковке этого SpriteAtlas</para>
      </summary>
      <param name="spriteAtlas">
      </param>
      <param name="src">
      </param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasExtensions.SetPlatformSettings(UnityEngine.U2D.SpriteAtlas,UnityEditor.TextureImporterPlatformSettings)">
      <summary>
        <para>Задайте настройки для конкретной платформы.</para>
      </summary>
      <param name="spriteAtlas">
      </param>
      <param name="src">
      </param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasExtensions.SetTextureSettings(UnityEngine.U2D.SpriteAtlas,UnityEditor.U2D.SpriteAtlasTextureSettings)">
      <summary>
        <para>Установите SpriteAtlasTextureSettings для упакованной текстуры, созданной этим SpriteAtlas.</para>
      </summary>
      <param name="spriteAtlas">
      </param>
      <param name="src">
      </param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasExtensions.SetVariantScale(UnityEngine.U2D.SpriteAtlas,System.Single)">
      <summary>
        <para>Установите значение, используемое для уменьшения масштаба основной текстуры.</para>
      </summary>
      <param name="value">Рекомендуемое значение: [0,1 ~ 0,99].</param>
      <param name="spriteAtlas">
      </param>
    </member>
    <member name="T:UnityEditor.U2D.SpriteAtlasImporter">
      <summary>
        <para>SpriteAtlasImporter импортирует SpriteAtlasAsset и создает SpriteAtlas.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.U2D.SpriteAtlasPackingSettings">
      <summary>
        <para>Настройки для использования в процессе упаковки для этого SpriteAtlas.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.U2D.SpriteAtlasPackingSettings.blockOffset">
      <summary>
        <para>Смещение блока для использования при упаковке.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.U2D.SpriteAtlasPackingSettings.enableAlphaDilation">
      <summary>
        <para>Устанавливает альфа-пиксель заполнения границ равным 0 при упаковке в атлас спрайтов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.U2D.SpriteAtlasPackingSettings.enableRotation">
      <summary>
        <para>Определяет, возможно ли вращение спрайта во время упаковки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.U2D.SpriteAtlasPackingSettings.enableTightPacking">
      <summary>
        <para>Определяет, должны ли спрайты быть плотно упакованы во время упаковки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.U2D.SpriteAtlasPackingSettings.padding">
      <summary>
        <para>Значение для добавления границ (отступов) к спрайтам при упаковке в атлас.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.U2D.SpriteAtlasTextureSettings">
      <summary>
        <para>Параметры текстуры для упакованной текстуры, сгенерированной SpriteAtlas.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.U2D.SpriteAtlasTextureSettings.anisoLevel">
      <summary>
        <para>Уровень анизотропной фильтрации упакованной текстуры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.U2D.SpriteAtlasTextureSettings.filterMode">
      <summary>
        <para>Режим фильтра упакованной текстуры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.U2D.SpriteAtlasTextureSettings.generateMipMaps">
      <summary>
        <para>Укажите, следует ли генерировать MIP-карты для упакованной текстуры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.U2D.SpriteAtlasTextureSettings.readable">
      <summary>
        <para>Доступное для чтения состояние упакованной текстуры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.U2D.SpriteAtlasTextureSettings.sRGB">
      <summary>
        <para>Проверяет, использует ли упакованная текстура преобразования чтения/записи sRGB (только чтение).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.U2D.SpriteAtlasUtility">
      <summary>
        <para>Утилиты для упаковки атласов в проекте.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasUtility.PackAllAtlases(UnityEditor.BuildTarget)">
      <summary>
        <para>Упакуйте все ресурсы SpriteAtlas в проект для конкретного BuildTarget.</para>
      </summary>
      <param name="target">
      </param>
      <param name="canCancel">
      </param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasUtility.PackAtlases(UnityEngine.U2D.SpriteAtlas[],UnityEditor.BuildTarget)">
      <summary>
        <para>Упакуйте все предоставленные SpriteAtlas для конкретного BuildTarget.</para>
      </summary>
      <param name="atlases">
      </param>
      <param name="target">
      </param>
      <param name="canCancel">
      </param>
    </member>
    <member name="T:UnityEditor.U2D.SpriteEditorExtension">
      <summary>
        <para>Методы расширения спрайтов, доступные только в редакторе.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.U2D.SpriteEditorExtension.GetSpriteID(UnityEngine.Sprite)">
      <summary>
        <para>Получает GUID спрайта.</para>
      </summary>
      <param name="sprite">Спрайт для запроса.</param>
      <returns>
        <para>GUID хранится в Sprite.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.U2D.SpriteEditorExtension.SetSpriteID(UnityEngine.Sprite,UnityEditor.GUID)">
      <summary>
        <para>Задает глобальный уникальный идентификатор (GUID) спрайта для упрощения идентификации в дальнейшем.</para>
      </summary>
      <param name="sprite">Спрайт для установки.</param>
      <param name="guid">GUID, который необходимо установить для спрайта.</param>
    </member>
    <member name="T:UnityEditor.UIOrientation">
      <summary>
        <para>Ориентация мобильного устройства по умолчанию.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.UIOrientation.AutoRotation">
      <summary>
        <para>Автоповорот включен.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.UIOrientation.LandscapeLeft">
      <summary>
        <para>Пейзаж: против часовой стрелки от портрета.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.UIOrientation.LandscapeRight">
      <summary>
        <para>Пейзаж: по часовой стрелке от портрета.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.UIOrientation.Portrait">
      <summary>
        <para>Портрет.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.UIOrientation.PortraitUpsideDown">
      <summary>
        <para>Портрет вверх ногами.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Undo">
      <summary>
        <para>Позволяет регистрировать операции отмены для определенных объектов, в которых вы собираетесь выполнить изменения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Undo.postprocessModifications">
      <summary>
        <para>Обратный вызов, который запускается всякий раз, когда создается новый набор модификаций свойств.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Undo.undoRedoPerformed">
      <summary>
        <para>Обратный вызов, который запускается после выполнения отмены или повтора.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Undo.willFlushUndoRecord">
      <summary>
        <para>Вызывается до того, как система Undo выполнит сброс.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Undo.AddComponent(UnityEngine.GameObject,System.Type)">
      <summary>
        <para>Добавляет компонент к игровому объекту и регистрирует операцию отмены для этого действия.</para>
      </summary>
      <param name="gameObject">Игровой объект, к которому вы хотите добавить компонент.</param>
      <param name="type">Тип компонента, который вы хотите добавить.</param>
      <returns>
        <para>Недавно добавленный компонент.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Undo.AddComponent(UnityEngine.GameObject)">
      <summary>
        <para>Общая версия.</para>
      </summary>
      <param name="gameObject">Игровой объект, к которому вы хотите добавить компонент.</param>
      <returns>
        <para>Недавно добавленный компонент.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Undo.ClearAll">
      <summary>
        <para>Удаляет все операции отмены и повтора соответственно из стеков отмены и повтора.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Undo.ClearUndo(UnityEngine.Object)">
      <summary>
        <para>Удаляет все операции отмены для объекта идентификатора, зарегистрированного с помощью Undo.RegisterCompleteObjectUndo, из стека отмены.</para>
      </summary>
      <param name="identifier">
      </param>
    </member>
    <member name="M:UnityEditor.Undo.CollapseUndoOperations(System.Int32)">
      <summary>
        <para>Сворачивает все операции отмены до группировки индекса в один шаг.</para>
      </summary>
      <param name="groupIndex">
      </param>
    </member>
    <member name="M:UnityEditor.Undo.DestroyObjectImmediate(UnityEngine.Object)">
      <summary>
        <para>Уничтожает объект и записывает операцию отмены, чтобы его можно было создать заново.</para>
      </summary>
      <param name="objectToUndo">Объект, который будет уничтожен.</param>
    </member>
    <member name="M:UnityEditor.Undo.FlushUndoRecordObjects">
      <summary>
        <para>Убедитесь, что объекты, записанные с помощью RecordObject или RecordObjects, зарегистрированы как действие, которое нельзя отменить. В большинстве случаев нет причин вызывать FlushUndoRecordObjects, так как это автоматически выполняется сразу после нажатия кнопки мыши и некоторых других событий, которые обычно отмечают конец действия.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Undo.GetCurrentGroup">
      <summary>
        <para>Unity автоматически группирует операции отмены по текущему групповому индексу.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Undo.GetCurrentGroupName">
      <summary>
        <para>Получите имя, которое будет отображаться в пользовательском интерфейсе для текущей группы отмены.</para>
      </summary>
      <returns>
        <para>Имя текущей группы или пустая строка, если текущая группа пуста.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Undo.IncrementCurrentGroup">
      <summary>
        <para>Unity автоматически группирует операции отмены по текущему групповому индексу.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Undo.MoveGameObjectToScene(UnityEngine.GameObject,UnityEngine.SceneManagement.Scene,System.String)">
      <summary>
        <para>Переместите GameObject из его текущей сцены в новую сцену.
Требуется, чтобы GameObject находился в корне своей текущей сцены.</para>
      </summary>
      <param name="go">GameObject для перемещения.</param>
      <param name="scene">Сцена для перемещения GameObject.</param>
      <param name="name">Имя действия отмены.</param>
    </member>
    <member name="M:UnityEditor.Undo.PerformRedo">
      <summary>
        <para>Выполните операцию повтора.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Undo.PerformUndo">
      <summary>
        <para>Выполните операцию отмены.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Undo.PostprocessModifications">
      <summary>
        <para>Делегат, используемый для postprocessModifications.</para>
      </summary>
      <param name="modifications">Набор модификаций свойств для обработки.</param>
    </member>
    <member name="M:UnityEditor.Undo.RecordObject(UnityEngine.Object,System.String)">
      <summary>
        <para>Записывает любые изменения, сделанные в объекте после функции RecordObject.</para>
      </summary>
      <param name="objectToUndo">Ссылка на объект, который вы будете изменять.</param>
      <param name="name">Название действия, которое должно отображаться в истории отмен (т. е. отображаться в меню отмены).</param>
    </member>
    <member name="M:UnityEditor.Undo.RecordObjects(UnityEngine.Object[],System.String)">
      <summary>
        <para>Записывает несколько невыполнимых объектов за один вызов. Это то же самое, что многократно вызывать Undo.RecordObject.</para>
      </summary>
      <param name="objectsToUndo">
      </param>
      <param name="name">
      </param>
    </member>
    <member name="M:UnityEditor.Undo.RegisterChildrenOrderUndo(UnityEngine.Object,System.String)">
      <summary>
        <para>Сохраняет копию порядка дочерних элементов объекта в стеке отмены.</para>
      </summary>
      <param name="objectToUndo">Объект, чей дочерний порядок должен быть записан в стек отмены.</param>
      <param name="name">Имя операции отмены.</param>
    </member>
    <member name="M:UnityEditor.Undo.RegisterCompleteObjectUndo(UnityEngine.Object,System.String)">
      <summary>
        <para>Сохраняет копию состояний объекта в стеке отмены.</para>
      </summary>
      <param name="objectToUndo">Объект, изменения состояния которого необходимо отменить.</param>
      <param name="name">Имя операции отмены.</param>
    </member>
    <member name="M:UnityEditor.Undo.RegisterCompleteObjectUndo(UnityEngine.Object[],System.String)">
      <summary>
        <para>Это эквивалентно многократному вызову первой перегрузки, за исключением того факта, что для этой операции будет сгенерирована только одна операция отмены.</para>
      </summary>
      <param name="objectsToUndo">Массив объектов, изменения состояния которых необходимо отменить.</param>
      <param name="name">Имя операции отмены.</param>
    </member>
    <member name="M:UnityEditor.Undo.RegisterCreatedObjectUndo(UnityEngine.Object,System.String)">
      <summary>
        <para>Регистрирует операцию отмены для отмены создания объекта.</para>
      </summary>
      <param name="objectToUndo">Недавно созданный объект. Этот объект уничтожается при выполнении операции отмены. Когда значением является GameObject, Unity регистрирует GameObject и его дочерние GameObjects, но не родственные или родительские GameObjects.</param>
      <param name="name">Имя действия, которое необходимо отменить. Используйте эту строку для предоставления краткого описания действия, которое необходимо отменить. Для элементов «Отменить» или «Повторить» в меню «Правка» Unity добавляет «Отменить» или «Повторить» к предоставленной вами строке. Например, если вы укажете строку «Создать GameObject», редактор Unity отобразит пункт меню «Правка» &gt; «Отменить создание GameObject».</param>
    </member>
    <member name="M:UnityEditor.Undo.RegisterFullObjectHierarchyUndo(UnityEngine.Object,System.String)">
      <summary>
        <para>Скопируйте состояния иерархии объектов в стек отмены.</para>
      </summary>
      <param name="objectToUndo">Объект, используемый для определения иерархии объектов, изменения состояния которых необходимо отменить.</param>
      <param name="name">Имя операции отмены.</param>
    </member>
    <member name="M:UnityEditor.Undo.RegisterFullObjectHierarchyUndo(UnityEngine.Object)">
      <summary>
        <para>Эта перегрузка устарела. Вместо этого используйте Undo.RegisterFullObjectHierarchyUndo(Object, string).</para>
      </summary>
      <param name="objectToUndo">
      </param>
    </member>
    <member name="M:UnityEditor.Undo.RegisterImporterUndo(System.String,System.String)">
      <summary>
        <para>Копирует состояние импортера для заданного пути ресурса.</para>
      </summary>
      <param name="path">Путь импортера активов для регистрации для отмены.</param>
      <param name="name">Имя операции отмены.</param>
    </member>
    <member name="M:UnityEditor.Undo.RevertAllDownToGroup(System.Int32)">
      <summary>
        <para>Выполняет все операции отмены до группового индекса без сохранения операции повтора в процессе.</para>
      </summary>
      <param name="group">
      </param>
    </member>
    <member name="M:UnityEditor.Undo.RevertAllInCurrentGroup">
      <summary>
        <para>Выполняет последнюю операцию отмены, но не записывает операцию повтора.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Undo.SetCurrentGroupName(System.String)">
      <summary>
        <para>Установите имя текущей группы отмены.</para>
      </summary>
      <param name="name">Новое имя текущей группы отмены.</param>
    </member>
    <member name="M:UnityEditor.Undo.SetTransformParent(UnityEngine.Transform,UnityEngine.Transform,System.String)">
      <summary>
        <para>Устанавливает родителя преобразования в новый родитель и записывает операцию отмены.</para>
      </summary>
      <param name="transform">Компонент Transform, родитель которого должен быть изменен.</param>
      <param name="newParent">Назначаемое родительское преобразование.</param>
      <param name="name">Имя этого действия для сохранения в буфере истории отмены.</param>
    </member>
    <member name="T:UnityEditor.Undo.UndoRedoCallback">
      <summary>
        <para>Делегат, используемый для undoRedoPerformed.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Undo.WillFlushUndoRecord">
      <summary>
        <para>Делегат, используемый для willFlushUndoRecord.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.UndoPropertyModification">
      <summary>
        <para>См. также: Undo.postprocessModifications.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.UndoPropertyModification.currentValue">
      <summary>
        <para>
Текущее значение измененного свойства.
См. также: Изменение свойства.
</para>
      </summary>
    </member>
    <member name="P:UnityEditor.UndoPropertyModification.keepPrefabOverride">
      <summary>
        <para>Указывает, следует ли сохранять изменения, когда целевой объект является экземпляром Prefab.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.UndoPropertyModification.previousValue">
      <summary>
        <para>
Предыдущее значение измененного свойства.
См. также: Изменение свойства.
</para>
      </summary>
    </member>
    <member name="T:Unity.CodeEditor.CodeEditor">
      <summary>
        <para>Обрабатывает взаимодействие с редактором кода.</para>
      </summary>
    </member>
    <member name="P:Unity.CodeEditor.CodeEditor.CurrentCodeEditor">
      <summary>
        <para>Возвращает текущий экземпляр IExternalCodeEditor для редактора кода.</para>
      </summary>
    </member>
    <member name="P:Unity.CodeEditor.CodeEditor.CurrentEditorPath">
      <summary>
        <para>Путь к внешнему редактору кода, используемому Unity для открытия ресурсов сценария.</para>
      </summary>
    </member>
    <member name="P:Unity.CodeEditor.CodeEditor.CurrentInstallation">
      <summary>
        <para>Возвращает текущий экземпляр CodeEditor.Installation для редактора кода.</para>
      </summary>
    </member>
    <member name="P:Unity.CodeEditor.CodeEditor.Editor">
      <summary>
        <para>Одноэлементный экземпляр CodeEditor. Редактор Unity ссылается на этот экземпляр для обработки обратных вызовов редактора кода.</para>
      </summary>
    </member>
    <member name="M:Unity.CodeEditor.CodeEditor.GetCodeEditorForPath(System.String)">
      <summary>
        <para>Каждый зарегистрированный пакет редактора кода имеет экземпляр IExternalCodeEditor. Этот метод вызывает IExternalCodeEditor.TryGetInstallationForPath для этого экземпляра. Он возвращает первый экземпляр, возвращающий действительную установку.</para>
      </summary>
      <param name="editorPath">Абсолютный путь к исполняемому файлу.</param>
      <returns>
        <para>Возвращает IExternalCodeEditor, представляющий пакет, отвечающий за путь к редактору.</para>
      </returns>
    </member>
    <member name="M:Unity.CodeEditor.CodeEditor.GetFoundScriptEditorPaths">
      <summary>
        <para>Собирает все установки из зарегистрированных экземпляров IExternalCodeEditor. Это делается с помощью IExternalCodeEditor.Installations.</para>
      </summary>
      <returns>
        <para>Словарь, который сопоставляет имена с путями редактора.</para>
      </returns>
    </member>
    <member name="M:Unity.CodeEditor.CodeEditor.GetInstallationForPath(System.String)">
      <summary>
        <para>Каждый зарегистрированный пакет редактора кода имеет экземпляр IExternalCodeEditor. Этот метод вызывает IExternalCodeEditor.TryGetInstallationForPath для этого экземпляра. Он находит первый экземпляр, возвращающий действительную установку, и возвращает установку.</para>
      </summary>
      <param name="editorPath">Абсолютный путь к исполняемому файлу.</param>
      <returns>
        <para>Представление установки пути.</para>
      </returns>
    </member>
    <member name="T:Unity.CodeEditor.CodeEditor.Installation">
      <summary>
        <para>Класс данных для установки редактора кода.</para>
      </summary>
    </member>
    <member name="F:Unity.CodeEditor.CodeEditor.Installation.Name">
      <summary>
        <para>Имя редактора кода.</para>
      </summary>
    </member>
    <member name="F:Unity.CodeEditor.CodeEditor.Installation.Path">
      <summary>
        <para>Путь к редактору кода.</para>
      </summary>
    </member>
    <member name="M:Unity.CodeEditor.CodeEditor.OSOpenFile(System.String,System.String)">
      <summary>
        <para>Откройте приложение с заключенной в кавычки строкой аргументов.</para>
      </summary>
      <param name="appPath">Абсолютный путь открываемого приложения.</param>
      <param name="arguments">Аргументы, которые необходимо передать приложению. Вы должны убедиться, что все пути указаны правильно для текущей платформы.</param>
    </member>
    <member name="M:Unity.CodeEditor.CodeEditor.ParseArgument(System.String,System.String,System.Int32,System.Int32)">
      <summary>
        <para>Разобрать строку, используя правила, определенные в разделе.</para>
      </summary>
      <param name="arguments">Строка, содержащая аргументы шаблона для анализа.</param>
      <param name="path">Путь к файлу для открытия.</param>
      <param name="line">Номер строки для размещения курсора.</param>
      <param name="column">Номер столбца, представляющий место в строке для размещения курсора.</param>
      <returns>
        <para>Возвращает параметр arguments с заменами на основе значений, переданных методу.</para>
      </returns>
    </member>
    <member name="M:Unity.CodeEditor.CodeEditor.QuoteForProcessStart(System.String)">
      <summary>
        <para>Заключает в кавычки строку для передачи в Process.Start в качестве одного аргумента и добавляет ее в этот построитель строк.</para>
      </summary>
      <param name="argument">
      </param>
    </member>
    <member name="M:Unity.CodeEditor.CodeEditor.Register(Unity.CodeEditor.IExternalCodeEditor)">
      <summary>
        <para>Зарегистрируйте экземпляр IExternalCodeEditor для использования при заполнении меню Preferences/External Tools. Вызывает ref::Initialize, если вы выбираете экземпляр.</para>
      </summary>
      <param name="externalCodeEditor">Экземпляр IExternalCodeEditor для регистрации и использования для связи с активами сценария.</param>
    </member>
    <member name="M:Unity.CodeEditor.CodeEditor.SetCodeEditor(System.String)">
      <summary>
        <para>Задает путь к редактору кода, который Unity использует для открытия ресурсов сценария.</para>
      </summary>
      <param name="path">Абсолютный путь к исполняемому файлу редактора кода. Unity использует это для открытия файлов, которые вы запрашиваете.</param>
      <param name="editorPath">
      </param>
    </member>
    <member name="M:Unity.CodeEditor.CodeEditor.Unregister(Unity.CodeEditor.IExternalCodeEditor)">
      <summary>
        <para>Удалите экземпляр IExternalCodeEditor из списка зарегистрированных редакторов кода. Вызывает ref::Initialize, если вы выбираете экземпляр.</para>
      </summary>
      <param name="externalCodeEditor">Экземпляр IExternalCodeEditor для удаления.</param>
    </member>
    <member name="?:Unity.CodeEditor.IExternalCodeEditor">
      <summary>
        <para>Определяет обязанности по обработке интеграции внешнего редактора сценариев в UnityEditor.</para>
      </summary>
    </member>
    <member name="M:Unity.CodeEditor.IExternalCodeEditor.Initialize(System.String)">
      <summary>
        <para>Обратный вызов IExternalCodeEditor, когда он был выбран в PreferenceWindow.</para>
      </summary>
      <param name="editorInstallationPath">Путь к выбранному редактору кода.</param>
    </member>
    <member name="P:Unity.CodeEditor.IExternalCodeEditor.Installations">
      <summary>
        <para>Предоставьте редактору список известных и поддерживаемых редакторов, поддерживаемых этим экземпляром.</para>
      </summary>
    </member>
    <member name="M:Unity.CodeEditor.IExternalCodeEditor.OnGUI">
      <summary>
        <para>Unity вызывает этот метод, когда заполняет «Настройки/Внешние инструменты», чтобы позволить редактору кода создать необходимый графический интерфейс. Например, при создании поля аргумента для изменения аргументов, отправляемых в редактор кода.</para>
      </summary>
    </member>
    <member name="M:Unity.CodeEditor.IExternalCodeEditor.OpenProject(System.String,System.Int32,System.Int32)">
      <summary>
        <para>Внешний редактор кода должен обработать запрос на открытие файла.</para>
      </summary>
      <param name="line">Номер строки для открытия файла.</param>
      <param name="column">Столбец для перемещения курсора в определенной строке.</param>
      <param name="filePath">
      </param>
      <returns>
        <para>Успешно ли прошел запрос.</para>
      </returns>
    </member>
    <member name="M:Unity.CodeEditor.IExternalCodeEditor.SyncAll">
      <summary>
        <para>Unity вызывает эту функцию во время инициализации для синхронизации проекта. Это отличается от SyncIfNeeded тем, что не получает список изменений.</para>
      </summary>
    </member>
    <member name="M:Unity.CodeEditor.IExternalCodeEditor.SyncIfNeeded(System.String[],System.String[],System.String[],System.String[],System.String[])">
      <summary>
        <para>Когда вы изменяете активы в Unity, этот метод для текущего выбранного экземпляра IExternalCodeEditor анализирует новые и измененные активы.</para>
      </summary>
      <param name="addedFiles">Добавлены файлы через пользовательский интерфейс Unity.</param>
      <param name="movedFiles">Файлы, которые были добавлены, но перемещены.</param>
      <param name="movedFromFiles">Тот же список, что и moveFiles, но содержит расположение, откуда они были перемещены.</param>
      <param name="importedFiles">Импортированные файлы, которые не были добавлены через пользовательский интерфейс Unity.</param>
      <param name="deletedFiles">
      </param>
    </member>
    <member name="M:Unity.CodeEditor.IExternalCodeEditor.TryGetInstallationForPath(System.String,Unity.CodeEditor.CodeEditor/Installation&amp;)">
      <summary>
        <para>Unity сохраняет путь к выбранному редактору. Экземпляр IExternalCodeEditor может взять на себя ответственность за этот путь, возвращая значение true при вызове этого метода. Установка переменной out должна быть построена с указанием пути и имени, которые должны отображаться в списке редактора кода «Внешние инструменты».</para>
      </summary>
      <param name="editorPath">Абсолютный путь к выбранному редактору кода.</param>
      <param name="installation">Сохранить полученный файл Installation. Если возвращаемое значение ложно, этот результат игнорируется.</param>
      <returns>
        <para>Может ли этот IExternalCodeEditor поддерживать реализацию editorPath.</para>
      </returns>
    </member>
    <member name="T:Unity.Profiling.Editor.ProfilerCounterDescriptor">
      <summary>
        <para>Предоставляет дескриптор счетчика Profiler.</para>
      </summary>
    </member>
    <member name="P:Unity.Profiling.Editor.ProfilerCounterDescriptor.CategoryName">
      <summary>
        <para>Имя категории описанного счетчика Profiler.</para>
      </summary>
    </member>
    <member name="M:Unity.Profiling.Editor.ProfilerCounterDescriptor.#ctor(System.String,Unity.Profiling.ProfilerCategory)">
      <summary>
        <para>Инициализирует и возвращает экземпляр ProfilerCounterDescriptor.</para>
      </summary>
      <param name="name">Имя счетчика Profiler для описания. Строка.</param>
      <param name="category">Категория счетчика Profiler для описания. Категория Unity.Profiling.ProfilerCategory.</param>
    </member>
    <member name="M:Unity.Profiling.Editor.ProfilerCounterDescriptor.#ctor(System.String,System.String)">
      <summary>
        <para>Инициализирует и возвращает экземпляр ProfilerCounterDescriptor.</para>
      </summary>
      <param name="name">Имя счетчика Profiler для описания в виде строки.</param>
      <param name="categoryName">Имя категории счетчика Profiler для описания в виде строки.</param>
    </member>
    <member name="P:Unity.Profiling.Editor.ProfilerCounterDescriptor.Name">
      <summary>
        <para>Имя описанного счетчика Profiler.</para>
      </summary>
    </member>
    <member name="T:Unity.Profiling.Editor.ProfilerModule">
      <summary>
        <para>Представляет модуль Profiler в окне Profiler.</para>
      </summary>
    </member>
    <member name="M:Unity.Profiling.Editor.ProfilerModule.CreateDetailsViewController">
      <summary>
        <para>Создает объект View Controller, который рисует представление Details модуля Profiler в окне Profiler. Unity автоматически вызывает этот метод при выборе модуля в окне Profiler.</para>
      </summary>
      <returns>
        <para>Возвращает производный объект ProfilerModuleViewController, который рисует представление сведений о модуле в окне Profiler. Значением по умолчанию является контроллер представления, который отображает список счетчиков диаграммы модуля вместе с их текущими значениями в выбранном фрейме.</para>
      </returns>
    </member>
    <member name="P:Unity.Profiling.Editor.ProfilerModule.DisplayName">
      <summary>
        <para>Отображаемое имя модуля.</para>
      </summary>
    </member>
    <member name="P:Unity.Profiling.Editor.ProfilerModule.ProfilerWindow">
      <summary>
        <para>Окно Profiler, которому принадлежит экземпляр модуля.</para>
      </summary>
    </member>
    <member name="T:Unity.Profiling.Editor.ProfilerModuleChartType">
      <summary>
        <para>Опции для типа диаграммы модуля Profiler.</para>
      </summary>
    </member>
    <member name="F:Unity.Profiling.Editor.ProfilerModuleChartType.Line">
      <summary>
        <para>Показать линейную диаграмму.</para>
      </summary>
    </member>
    <member name="F:Unity.Profiling.Editor.ProfilerModuleChartType.StackedTimeArea">
      <summary>
        <para>Показать диаграмму с областями с накоплением.</para>
      </summary>
    </member>
    <member name="T:Unity.Profiling.Editor.ProfilerModuleMetadataAttribute">
      <summary>
        <para>Предоставляет метаданные, относящиеся к ProfilerModule, такие как его имя и путь к значку.</para>
      </summary>
    </member>
    <member name="M:Unity.Profiling.Editor.ProfilerModuleMetadataAttribute.#ctor(System.String)">
      <summary>
        <para>Инициализирует и возвращает экземпляр ProfilerModuleMetadataAttribute.</para>
      </summary>
      <param name="displayName">Отображаемое имя модуля с атрибутами.</param>
    </member>
    <member name="P:Unity.Profiling.Editor.ProfilerModuleMetadataAttribute.DisplayName">
      <summary>
        <para>Отображаемое имя модуля Profiler с атрибутами.</para>
      </summary>
    </member>
    <member name="P:Unity.Profiling.Editor.ProfilerModuleMetadataAttribute.IconPath">
      <summary>
        <para>Путь к значку модуля Profiler с атрибутами.</para>
      </summary>
    </member>
    <member name="T:Unity.Profiling.Editor.ProfilerModuleViewController">
      <summary>
        <para>Обеспечивает единое представление содержимого для ProfilerModule, отображаемого в окне Profiler.</para>
      </summary>
    </member>
    <member name="M:Unity.Profiling.Editor.ProfilerModuleViewController.CreateView">
      <summary>
        <para>Создает представление контроллера представления. Unity вызывает этот метод автоматически, когда собирается отобразить представление контроллера представления в первый раз.</para>
      </summary>
      <returns>
        <para>Возвращает представление контроллера представления. UIElements.VisualElement.</para>
      </returns>
    </member>
    <member name="M:Unity.Profiling.Editor.ProfilerModuleViewController.Dispose">
      <summary>
        <para>Удаляет контроллер представления. Unity вызывает этот метод автоматически, когда контроллер представления больше не требуется, и его представление будет удалено из иерархии окон.</para>
      </summary>
      <param name="disposing">Флаг, указывающий, исходит ли вызов метода от метода Dispose или от финализатора. Бул. Когда значение равно true, вызов метода исходит из метода Dispose.
В противном случае вызов метода исходит от финализатора.</param>
    </member>
    <member name="M:Unity.Profiling.Editor.ProfilerModuleViewController.Dispose">
      <summary>
        <para>ЗАДАЧА.</para>
      </summary>
    </member>
    <member name="P:Unity.Profiling.Editor.ProfilerModuleViewController.ProfilerWindow">
      <summary>
        <para>Окно Profiler, которому принадлежит контроллер представления.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.UnityLinker.UnityLinkerBuildPipelineData">
      <summary>
        <para>Содержит информацию для различных обратных вызовов IUnityLinkerProcessor.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.UnityLinker.UnityLinkerBuildPipelineData.inputDirectory">
      <summary>
        <para>Каталог, содержащий сборки, которые будет обрабатывать UnityLinker.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.UnityLinker.UnityLinkerBuildPipelineData.target">
      <summary>
        <para>Цель сборки.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.UnityLinker.UnityLinkerBuildPipelineData.#ctor(UnityEditor.BuildTarget,System.String)">
      <summary>
        <para>Создает новый экземпляр UnityLinkerBuildPipelineData.</para>
      </summary>
      <param name="target">
      </param>
      <param name="inputDirectory">
      </param>
    </member>
    <member name="T:UnityEditor.UnwrapParam">
      <summary>
        <para>Распаковка настроек.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.UnwrapParam.angleError">
      <summary>
        <para>Максимально допустимое угловое искажение (0..1).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.UnwrapParam.areaError">
      <summary>
        <para>Максимально допустимая площадь искажения (0..1).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.UnwrapParam.hardAngle">
      <summary>
        <para>Этот угол (в градусах) или больше между треугольниками приведет к созданию шва.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.UnwrapParam.packMargin">
      <summary>
        <para>Сколько uv-островков будет заполнено.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.UnwrapParam.SetDefaults(UnityEditor.UnwrapParam&amp;)">
      <summary>
        <para>Установит значения по умолчанию для параметров.</para>
      </summary>
      <param name="param">
      </param>
    </member>
    <member name="T:UnityEditor.Unwrapping">
      <summary>
        <para>Этот класс содержит все, что вам может понадобиться в отношении uv-развертки.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Unwrapping.GeneratePerTriangleUV(UnityEngine.Mesh)">
      <summary>
        <para>Создает UV для каждого треугольника (3 UV для каждого треугольника) с настройками по умолчанию.</para>
      </summary>
      <param name="src">Исходный меш для генерации UV.</param>
      <returns>
        <para>Список сгенерированных UV.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Unwrapping.GeneratePerTriangleUV(UnityEngine.Mesh,UnityEditor.UnwrapParam)">
      <summary>
        <para>Будет генерировать UV для каждого треугольника (3 UV для каждого треугольника) с заданными настройками.</para>
      </summary>
      <param name="src">Исходный меш для генерации UV.</param>
      <param name="settings">Позволяет указать пользовательские параметры для управления развертыванием.</param>
      <returns>
        <para>Список сгенерированных UV.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Unwrapping.GenerateSecondaryUVSet(UnityEngine.Mesh)">
      <summary>
        <para>Автоматически сгенерирует uv2 с настройками по умолчанию для предоставленной сетки и заполнит их.</para>
      </summary>
      <param name="src">
      </param>
    </member>
    <member name="M:UnityEditor.Unwrapping.GenerateSecondaryUVSet(UnityEngine.Mesh,UnityEditor.UnwrapParam)">
      <summary>
        <para>Автоматически сгенерирует uv2 с предоставленными настройками для предоставленной сетки и заполнит их.</para>
      </summary>
      <param name="src">
      </param>
      <param name="settings">
      </param>
    </member>
    <member name="T:UnityEditor.UpdatePrefabInstancesEventArgs">
      <summary>
        <para>Изменение этого типа указывает на то, что экземпляры префаба в открытой сцене были обновлены из-за изменения исходного префаба.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.UpdatePrefabInstancesEventArgs.instanceIds">
      <summary>
        <para>Идентификатор экземпляра для каждого корневого игрового объекта экземпляров префаба, которые были обновлены.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.UpdatePrefabInstancesEventArgs.scene">
      <summary>
        <para>Сцена, содержащая все экземпляры префаба, которые были обновлены.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.UpdatePrefabInstancesEventArgs.#ctor(UnityEngine.SceneManagement.Scene,Unity.Collections.NativeArray`1/ReadOnly&lt;System.Int32&gt;)">
      <summary>
        <para>Создает новый экземпляр.</para>
      </summary>
      <param name="scene">Сцена, содержащая все экземпляры префаба, которые были обновлены.</param>
      <param name="instanceIds">Идентификатор экземпляра для каждого корневого игрового объекта экземпляров префаба, которые были обновлены.</param>
    </member>
    <member name="T:UnityEditor.VersionControl.Asset">
      <summary>
        <para>Этот класс содержит информацию о состоянии контроля версий актива.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Asset.assetPath">
      <summary>
        <para>Получает путь к активу относительно корня проекта. Если актив является метафайлом, возвращается путь к метафайлу.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Asset.fullName">
      <summary>
        <para>Получает полное имя актива, включая расширение.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Asset.isFolder">
      <summary>
        <para>Возвращает true, если ресурс является папкой.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Asset.isInCurrentProject">
      <summary>
        <para>Возвращает true, если файл актива существует и находится в текущем проекте.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Asset.isMeta">
      <summary>
        <para>Возвращает true, если экземпляр класса Asset действительно ссылается на файл .meta.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Asset.locked">
      <summary>
        <para>Возвращает true, если актив заблокирован системой контроля версий.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Asset.metaPath">
      <summary>
        <para>Получает путь метафайла для этого актива относительно корня проекта. Если актив является метафайлом, возвращается путь к метафайлу.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Asset.name">
      <summary>
        <para>Получите имя актива.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Asset.path">
      <summary>
        <para>Получает путь к ресурсу.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Asset.readOnly">
      <summary>
        <para>Возвращает true, если ресурс доступен только для чтения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Asset.state">
      <summary>
        <para>Получает состояние управления версиями актива.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.Asset.Edit">
      <summary>
        <para>Открывает активы в связанном редакторе.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.Asset.IsOneOfStates(UnityEditor.VersionControl.Asset/States[])">
      <summary>
        <para>Возвращает true, если состояние управления версиями ресурсов является одним из входных состояний.</para>
      </summary>
      <param name="states">Массив состояний для проверки.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Asset.IsState(UnityEditor.VersionControl.Asset/States)">
      <summary>
        <para>Возвращает true, если состояние управления версиями ресурса точно соответствует состоянию ввода.</para>
      </summary>
      <param name="state">Состояние для проверки.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Asset.Load">
      <summary>
        <para>Загружает ресурс в память.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.Asset.States">
      <summary>
        <para>Описывает различные состояния управления версиями, которые может иметь актив.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.AddedLocal">
      <summary>
        <para>Ресурс был локально добавлен в систему управления версиями.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.AddedRemote">
      <summary>
        <para>Удаленно этот актив был добавлен в систему контроля версий.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.CheckedOutLocal">
      <summary>
        <para>Ресурс извлечен на локальном компьютере.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.CheckedOutRemote">
      <summary>
        <para>Ресурс извлечен на удаленном компьютере.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.Conflicted">
      <summary>
        <para>Возник конфликт с активом, который необходимо разрешить.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.DeletedLocal">
      <summary>
        <para>Ресурс удален локально.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.DeletedRemote">
      <summary>
        <para>Ресурс был удален на удаленном компьютере.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.Exclusive">
      <summary>
        <para>Только один пользователь может получить этот актив</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.Local">
      <summary>
        <para>Ресурс не находится под контролем версий.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.LockedLocal">
      <summary>
        <para>Ресурс заблокирован локальным компьютером.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.LockedRemote">
      <summary>
        <para>Ресурс заблокирован удаленным компьютером.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.MetaFile">
      <summary>
        <para>Этот экземпляр класса на самом деле ссылается на файл .meta.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.Missing">
      <summary>
        <para>Ресурс существует в системе управления версиями, но отсутствует на локальном компьютере.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.MovedLocal">
      <summary>
        <para>Ресурс был перемещен локально.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.MovedRemote">
      <summary>
        <para>Ресурс был перемещен на удаленный компьютер.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.None">
      <summary>
        <para>Состояние контроля версий неизвестно.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.OutOfSync">
      <summary>
        <para>Более новая версия актива доступна на сервере управления версиями.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.ReadOnly">
      <summary>
        <para>Ресурс доступен только для чтения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.Synced">
      <summary>
        <para>Ресурс обновлен.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.Unversioned">
      <summary>
        <para>Этот ресурс либо игнорируется, либо не существует в системе управления версиями.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.Updating">
      <summary>
        <para>Состояние актива в настоящее время запрашивается с сервера контроля версий.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.AssetList">
      <summary>
        <para>Список информации об управлении версиями активов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.AssetList.Filter(System.Boolean,UnityEditor.VersionControl.Asset/States[])">
      <summary>
        <para>На основе текущего списка и состояний возвращается новый список, содержащий только активы с запрошенными состояниями.</para>
      </summary>
      <param name="includeFolder">Должны ли быть включены папки.</param>
      <param name="states">По каким состояниям фильтровать.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.AssetList.FilterChildren">
      <summary>
        <para>Создайте оптимизированный список активов, удалив дочерние папки из того же списка.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.AssetList.FilterCount(System.Boolean,UnityEditor.VersionControl.Asset/States[])">
      <summary>
        <para>Подсчитайте список активов по заданному набору состояний.</para>
      </summary>
      <param name="includeFolder">Включать ли папки.</param>
      <param name="states">Какие штаты включить в подсчет.</param>
    </member>
    <member name="T:UnityEditor.VersionControl.ChangeSet">
      <summary>
        <para>Обертка вокруг описания и идентификатора набора изменений.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.ChangeSet.defaultID">
      <summary>
        <para>Идентификатор набора изменений по умолчанию.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.ChangeSet.description">
      <summary>
        <para>Описание набора изменений.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.ChangeSet.id">
      <summary>
        <para>Специфический идентификатор системы контроля версий для набора изменений.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.ChangeSets">
      <summary>
        <para>Список класса ChangeSet.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.CheckoutMode">
      <summary>
        <para>Что проверять при запуске задачи Checkout через Provider контроля версий.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.CheckoutMode.Asset">
      <summary>
        <para>Извлечь только актив.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.CheckoutMode.Both">
      <summary>
        <para>Извлечь как ресурс, так и файл .meta.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.CheckoutMode.Exact">
      <summary>
        <para>Извлекать только те активы, которые указаны в списке активов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.CheckoutMode.Meta">
      <summary>
        <para>Извлечь только файл .meta.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.CompletionAction">
      <summary>
        <para>Различные действия, которые может выполнять задача контроля версий после завершения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.CompletionAction.OnAddedChangeWindow">
      <summary>
        <para>Обновлять окна после завершения задачи.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.CompletionAction.OnChangeContentsPendingWindow">
      <summary>
        <para>Обновите содержимое ожидающего набора изменений, указав результат выполнения задачи.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.CompletionAction.OnChangeSetsPendingWindow">
      <summary>
        <para>Обновите отложенные наборы изменений с результатом задачи после ее завершения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.CompletionAction.OnCheckoutCompleted">
      <summary>
        <para>Показать или обновить окно с ошибкой при оформлении заказа.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.CompletionAction.OnGotLatestPendingWindow">
      <summary>
        <para>Обновляет окно входящих и ожидающих изменений после завершения задачи.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.CompletionAction.OnIncomingPendingWindow">
      <summary>
        <para>Обновить окно входящих изменений с результатом задачи по завершению.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.CompletionAction.OnSubmittedChangeWindow">
      <summary>
        <para>Обновить окно отправки с результатом задачи после ее завершения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.CompletionAction.UpdatePendingWindow">
      <summary>
        <para>Обновите список ожидающих изменений после завершения задачи.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.ConfigField">
      <summary>
        <para>Описывает поля конфигурации контроля версий, которые пользователь выбрал в редакторе Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.ConfigField.description">
      <summary>
        <para>Описание поля конфигурации.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.ConfigField.isPassword">
      <summary>
        <para>Это верно, если поле конфигурации является полем пароля.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.ConfigField.isRequired">
      <summary>
        <para>Это верно, если поле конфигурации требуется для правильной работы подключаемого модуля контроля версий.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.ConfigField.label">
      <summary>
        <para>Метка, отображаемая рядом с полем конфигурации в редакторе.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.ConfigField.name">
      <summary>
        <para>Имя поля конфигурации.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.FileMode">
      <summary>
        <para>Режим файла.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.FileMode.Binary">
      <summary>
        <para>Двоичный файл.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.FileMode.None">
      <summary>
        <para>Режим не установлен.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.FileMode.Text">
      <summary>
        <para>Текстовый файл.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.IconOverlayType">
      <summary>
        <para>Тип наложения значка.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.IconOverlayType.Hierarchy">
      <summary>
        <para>Наложение значка окна иерархии.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.IconOverlayType.Other">
      <summary>
        <para>Другое наложение значков.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.IconOverlayType.Project">
      <summary>
        <para>Наложение значка окна проекта.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.VersionControl.IIconOverlayExtension">
      <summary>
        <para>Расширение системы контроля версий, позволяющее рисовать наложения значков.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.IIconOverlayExtension.DrawOverlay(System.String,UnityEditor.VersionControl.IconOverlayType,UnityEngine.Rect)">
      <summary>
        <para>Рисует наложение значка.</para>
      </summary>
      <param name="assetPath">Путь объекта.</param>
      <param name="type">Тип наложения значка.</param>
      <param name="rect">Граничная рамка значка.</param>
    </member>
    <member name="?:UnityEditor.VersionControl.IInspectorWindowExtension">
      <summary>
        <para>Расширение системы контроля версий, позволяющее расширять инспектор.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.IInspectorWindowExtension.InvalidateVersionControlBarState">
      <summary>
        <para>Сбрасывает любое кешированное состояние для панели управления версиями.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.IInspectorWindowExtension.OnVersionControlBar(UnityEditor.Editor)">
      <summary>
        <para>Позволяет добавлять настраиваемые элементы управления графическим интерфейсом на панель управления версиями в указанном инспекторе.</para>
      </summary>
      <param name="editor">Инспектор, содержащий панель управления версиями.</param>
    </member>
    <member name="?:UnityEditor.VersionControl.IPopupMenuExtension">
      <summary>
        <para>Расширение системы контроля версий, которое позволяет отображать контекстное меню, специфичное для VCS.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.IPopupMenuExtension.DisplayPopupMenu(UnityEngine.Rect)">
      <summary>
        <para>Отображает контекстное меню системы контроля версий.</para>
      </summary>
      <param name="position">Позиция контекстного меню.</param>
    </member>
    <member name="?:UnityEditor.VersionControl.ISettingsInspectorExtension">
      <summary>
        <para>Расширение системы контроля версий, позволяющее расширить инспектор настроек контроля версий.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.ISettingsInspectorExtension.OnInspectorGUI">
      <summary>
        <para>Позволяет добавлять настраиваемые элементы управления графическим интерфейсом в настройки контроля версий в инспекторе.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.MergeMethod">
      <summary>
        <para>Какой метод использовать при слиянии.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.MergeMethod.MergeAll">
      <summary>
        <para>Объединить все изменения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.MergeMethod.MergeNonConflicting">
      <summary>
        <para>Объединить неконфликтующие изменения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.MergeMethod.MergeNone">
      <summary>
        <para>Не объединяйте никакие изменения.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.Message">
      <summary>
        <para>Сообщения от системы контроля версий.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Message.message">
      <summary>
        <para>Текст сообщения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Message.severity">
      <summary>
        <para>Серьезность сообщения.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.Message.Severity">
      <summary>
        <para>Серьезность сообщения контроля версий.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Message.Severity.Error">
      <summary>
        <para>Сообщение об ошибке.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Message.Severity.Info">
      <summary>
        <para>Информационное сообщение.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Message.Severity.Verbose">
      <summary>
        <para>Подробное сообщение.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Message.Severity.Warning">
      <summary>
        <para>Предупреждающее сообщение.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.Message.Show">
      <summary>
        <para>Запишите сообщение в консоль.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.OnlineState">
      <summary>
        <para>Представлять состояние подключения поставщика управления версиями.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.OnlineState.Offline">
      <summary>
        <para>Не удалось установить соединение с сервером контроля версий.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.OnlineState.Online">
      <summary>
        <para>Соединение с сервером контроля версий установлено.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.OnlineState.Updating">
      <summary>
        <para>Поставщик управления версиями в настоящее время пытается подключиться к серверу управления версиями.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.Plugin">
      <summary>
        <para>Класс подключаемого модуля описывает текущий активный подключаемый модуль управления версиями и параметры его конфигурации.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Plugin.configFields">
      <summary>
        <para>Поля конфигурации плагина.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Plugin.name">
      <summary>
        <para>Имя текущего активного контроля версий.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.Provider">
      <summary>
        <para>Этот класс предоставляет доступ к API управления версиями.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Provider.activeTask">
      <summary>
        <para>Получает текущую выполняемую задачу.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Provider.enabled">
      <summary>
        <para>Возвращает true, если включен поставщик управления версиями и найдена действующая лицензия Unity Pro.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Provider.hasCheckoutSupport">
      <summary>
        <para>Это верно, если текущий выбранный подключаемый модуль управления версиями поддерживает метод Checkout.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Provider.hasLockingSupport">
      <summary>
        <para>Это верно, если текущий выбранный подключаемый модуль управления версиями поддерживает методы блокировки и разблокировки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Provider.isActive">
      <summary>
        <para>Возвращает true, если подключаемый модуль управления версиями был выбран и правильно настроен.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Provider.offlineReason">
      <summary>
        <para>Возвращает причину отключения поставщика управления версиями (если он отключен).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Provider.onlineState">
      <summary>
        <para>Возвращает OnlineState поставщика управления версиями.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Provider.preCheckoutCallback">
      <summary>
        <para>Предоставленный пользователем обратный вызов, который должен быть вызван перед операцией проверки контроля версий.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Provider.preSubmitCallback">
      <summary>
        <para>Предоставленный пользователем обратный вызов, который должен быть вызван перед операцией отправки контроля версий.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Provider.requiresNetwork">
      <summary>
        <para>Это верно, если для выполнения каких-либо действий текущему выбранному подключаемому модулю управления версиями требуется сетевое подключение.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Add(UnityEditor.VersionControl.AssetList,System.Boolean)">
      <summary>
        <para>Позволяет добавлять файлы через скрипт.</para>
      </summary>
      <param name="assets">Список ресурсов для добавления в систему контроля версий.</param>
      <param name="asset">Один ресурс для добавления в систему контроля версий.</param>
      <param name="recursive">Установите значение true, если добавление должно выполняться рекурсивно во вложенные папки.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Add(UnityEditor.VersionControl.Asset,System.Boolean)">
      <summary>
        <para>Позволяет добавлять файлы через скрипт.</para>
      </summary>
      <param name="assets">Список ресурсов для добавления в систему контроля версий.</param>
      <param name="asset">Один ресурс для добавления в систему контроля версий.</param>
      <param name="recursive">Установите значение true, если добавление должно выполняться рекурсивно во вложенные папки.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.AddIsValid(UnityEditor.VersionControl.AssetList)">
      <summary>
        <para>При наличии списка ресурсов эта функция возвращает значение true, если Provider.Add является допустимой задачей для выполнения хотя бы одного из ресурсов в списке.</para>
      </summary>
      <param name="assets">Список активов для тестирования.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.ChangeSetDescription(UnityEditor.VersionControl.ChangeSet)">
      <summary>
        <para>Если набор изменений содержит только идентификатор набора изменений, это запустит задачу для запроса описания набора изменений.</para>
      </summary>
      <param name="changeset">Набор изменений для описания запроса.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.ChangeSetMove(UnityEditor.VersionControl.AssetList,UnityEditor.VersionControl.ChangeSet)">
      <summary>
        <para>Переместите ресурс или список ресурсов из их текущего набора изменений в новый набор изменений.</para>
      </summary>
      <param name="assets">Список активов для перемещения в набор изменений.</param>
      <param name="changeset">Набор изменений для перемещения актива.</param>
      <param name="asset">Актив для перемещения в набор изменений.</param>
      <param name="changesetID">ChangesetID для перемещения актива.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.ChangeSetMove(UnityEditor.VersionControl.Asset,UnityEditor.VersionControl.ChangeSet)">
      <summary>
        <para>Переместите ресурс или список ресурсов из их текущего набора изменений в новый набор изменений.</para>
      </summary>
      <param name="assets">Список активов для перемещения в набор изменений.</param>
      <param name="changeset">Набор изменений для перемещения актива.</param>
      <param name="asset">Актив для перемещения в набор изменений.</param>
      <param name="changesetID">ChangesetID для перемещения актива.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.ChangeSetMove(UnityEditor.VersionControl.AssetList,System.String)">
      <summary>
        <para>Переместите ресурс или список ресурсов из их текущего набора изменений в новый набор изменений.</para>
      </summary>
      <param name="assets">Список активов для перемещения в набор изменений.</param>
      <param name="changeset">Набор изменений для перемещения актива.</param>
      <param name="asset">Актив для перемещения в набор изменений.</param>
      <param name="changesetID">ChangesetID для перемещения актива.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.ChangeSetMove(UnityEditor.VersionControl.Asset,System.String)">
      <summary>
        <para>Переместите ресурс или список ресурсов из их текущего набора изменений в новый набор изменений.</para>
      </summary>
      <param name="assets">Список активов для перемещения в набор изменений.</param>
      <param name="changeset">Набор изменений для перемещения актива.</param>
      <param name="asset">Актив для перемещения в набор изменений.</param>
      <param name="changesetID">ChangesetID для перемещения актива.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.ChangeSets">
      <summary>
        <para>Получает список отложенных наборов изменений, принадлежащих текущему пользователю.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.ChangeSetStatus(UnityEditor.VersionControl.ChangeSet)">
      <summary>
        <para>Извлекает список ресурсов, принадлежащих набору изменений.</para>
      </summary>
      <param name="changeset">Набор изменений для запроса ресурсов.</param>
      <param name="changesetID">ChangesetID для запроса ресурсов.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.ChangeSetStatus(System.String)">
      <summary>
        <para>Извлекает список ресурсов, принадлежащих набору изменений.</para>
      </summary>
      <param name="changeset">Набор изменений для запроса ресурсов.</param>
      <param name="changesetID">ChangesetID для запроса ресурсов.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Checkout(UnityEditor.VersionControl.Asset,UnityEditor.VersionControl.CheckoutMode)">
      <summary>
        <para>Извлечь ресурс или список ресурсов из системы контроля версий.</para>
      </summary>
      <param name="assets">Список активов для проверки.</param>
      <param name="asset">Объект для проверки.</param>
      <param name="mode">Скажите поставщику, чтобы он извлек только файл актива, файл .meta или оба.</param>
      <param name="changeset">Сообщите провайдеру, что нужно проверить активы для определенного набора изменений.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Checkout(UnityEditor.VersionControl.Asset,UnityEditor.VersionControl.CheckoutMode,UnityEditor.VersionControl.ChangeSet)">
      <summary>
        <para>Извлечь ресурс или список ресурсов из системы контроля версий.</para>
      </summary>
      <param name="assets">Список активов для проверки.</param>
      <param name="asset">Объект для проверки.</param>
      <param name="mode">Скажите поставщику, чтобы он извлек только файл актива, файл .meta или оба.</param>
      <param name="changeset">Сообщите провайдеру, что нужно проверить активы для определенного набора изменений.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Checkout(UnityEditor.VersionControl.AssetList,UnityEditor.VersionControl.CheckoutMode)">
      <summary>
        <para>Извлечь ресурс или список ресурсов из системы контроля версий.</para>
      </summary>
      <param name="assets">Список активов для проверки.</param>
      <param name="asset">Объект для проверки.</param>
      <param name="mode">Скажите поставщику, чтобы он извлек только файл актива, файл .meta или оба.</param>
      <param name="changeset">Сообщите провайдеру, что нужно проверить активы для определенного набора изменений.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Checkout(UnityEditor.VersionControl.AssetList,UnityEditor.VersionControl.CheckoutMode,UnityEditor.VersionControl.ChangeSet)">
      <summary>
        <para>Извлечь ресурс или список ресурсов из системы контроля версий.</para>
      </summary>
      <param name="assets">Список активов для проверки.</param>
      <param name="asset">Объект для проверки.</param>
      <param name="mode">Скажите поставщику, чтобы он извлек только файл актива, файл .meta или оба.</param>
      <param name="changeset">Сообщите провайдеру, что нужно проверить активы для определенного набора изменений.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Checkout(System.String,UnityEditor.VersionControl.CheckoutMode)">
      <summary>
        <para>Извлечь ресурс или список ресурсов из системы контроля версий.</para>
      </summary>
      <param name="assets">Список активов для проверки.</param>
      <param name="asset">Объект для проверки.</param>
      <param name="mode">Скажите поставщику, чтобы он извлек только файл актива, файл .meta или оба.</param>
      <param name="changeset">Сообщите провайдеру, что нужно проверить активы для определенного набора изменений.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Checkout(System.String,UnityEditor.VersionControl.CheckoutMode,UnityEditor.VersionControl.ChangeSet)">
      <summary>
        <para>Извлечь ресурс или список ресурсов из системы контроля версий.</para>
      </summary>
      <param name="assets">Список активов для проверки.</param>
      <param name="asset">Объект для проверки.</param>
      <param name="mode">Скажите поставщику, чтобы он извлек только файл актива, файл .meta или оба.</param>
      <param name="changeset">Сообщите провайдеру, что нужно проверить активы для определенного набора изменений.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Checkout(System.String[],UnityEditor.VersionControl.CheckoutMode)">
      <summary>
        <para>Извлечь ресурс или список ресурсов из системы контроля версий.</para>
      </summary>
      <param name="assets">Список активов для проверки.</param>
      <param name="asset">Объект для проверки.</param>
      <param name="mode">Скажите поставщику, чтобы он извлек только файл актива, файл .meta или оба.</param>
      <param name="changeset">Сообщите провайдеру, что нужно проверить активы для определенного набора изменений.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Checkout(System.String[],UnityEditor.VersionControl.CheckoutMode,UnityEditor.VersionControl.ChangeSet)">
      <summary>
        <para>Извлечь ресурс или список ресурсов из системы контроля версий.</para>
      </summary>
      <param name="assets">Список активов для проверки.</param>
      <param name="asset">Объект для проверки.</param>
      <param name="mode">Скажите поставщику, чтобы он извлек только файл актива, файл .meta или оба.</param>
      <param name="changeset">Сообщите провайдеру, что нужно проверить активы для определенного набора изменений.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Checkout(UnityEngine.Object,UnityEditor.VersionControl.CheckoutMode,UnityEditor.VersionControl.ChangeSet)">
      <summary>
        <para>Извлечь ресурс или список ресурсов из системы контроля версий.</para>
      </summary>
      <param name="assets">Список активов для проверки.</param>
      <param name="asset">Объект для проверки.</param>
      <param name="mode">Скажите поставщику, чтобы он извлек только файл актива, файл .meta или оба.</param>
      <param name="changeset">Сообщите провайдеру, что нужно проверить активы для определенного набора изменений.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Checkout(UnityEngine.Object,UnityEditor.VersionControl.CheckoutMode)">
      <summary>
        <para>Извлечь ресурс или список ресурсов из системы контроля версий.</para>
      </summary>
      <param name="assets">Список активов для проверки.</param>
      <param name="asset">Объект для проверки.</param>
      <param name="mode">Скажите поставщику, чтобы он извлек только файл актива, файл .meta или оба.</param>
      <param name="changeset">Сообщите провайдеру, что нужно проверить активы для определенного набора изменений.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Checkout(UnityEngine.Object[],UnityEditor.VersionControl.CheckoutMode)">
      <summary>
        <para>Извлечь ресурс или список ресурсов из системы контроля версий.</para>
      </summary>
      <param name="assets">Список активов для проверки.</param>
      <param name="asset">Объект для проверки.</param>
      <param name="mode">Скажите поставщику, чтобы он извлек только файл актива, файл .meta или оба.</param>
      <param name="changeset">Сообщите провайдеру, что нужно проверить активы для определенного набора изменений.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Checkout(UnityEngine.Object[],UnityEditor.VersionControl.CheckoutMode,UnityEditor.VersionControl.ChangeSet)">
      <summary>
        <para>Извлечь ресурс или список ресурсов из системы контроля версий.</para>
      </summary>
      <param name="assets">Список активов для проверки.</param>
      <param name="asset">Объект для проверки.</param>
      <param name="mode">Скажите поставщику, чтобы он извлек только файл актива, файл .meta или оба.</param>
      <param name="changeset">Сообщите провайдеру, что нужно проверить активы для определенного набора изменений.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.CheckoutIsValid(UnityEditor.VersionControl.AssetList)">
      <summary>
        <para>При наличии актива или списка активов эта функция возвращает значение true, если Provider.Checkout является допустимой задачей для выполнения хотя бы одного из заданных активов.</para>
      </summary>
      <param name="assets">Список активов.</param>
      <param name="asset">Один актив.</param>
      <param name="mode">Укажите, чтобы проверять только файлы активов, метафайлы или и то, и другое.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.CheckoutIsValid(UnityEditor.VersionControl.Asset)">
      <summary>
        <para>При наличии актива или списка активов эта функция возвращает значение true, если Provider.Checkout является допустимой задачей для выполнения хотя бы одного из заданных активов.</para>
      </summary>
      <param name="assets">Список активов.</param>
      <param name="asset">Один актив.</param>
      <param name="mode">Укажите, чтобы проверять только файлы активов, метафайлы или и то, и другое.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.CheckoutIsValid(UnityEditor.VersionControl.AssetList,UnityEditor.VersionControl.CheckoutMode)">
      <summary>
        <para>При наличии актива или списка активов эта функция возвращает значение true, если Provider.Checkout является допустимой задачей для выполнения хотя бы одного из заданных активов.</para>
      </summary>
      <param name="assets">Список активов.</param>
      <param name="asset">Один актив.</param>
      <param name="mode">Укажите, чтобы проверять только файлы активов, метафайлы или и то, и другое.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.CheckoutIsValid(UnityEditor.VersionControl.Asset,UnityEditor.VersionControl.CheckoutMode)">
      <summary>
        <para>При наличии актива или списка активов эта функция возвращает значение true, если Provider.Checkout является допустимой задачей для выполнения хотя бы одного из заданных активов.</para>
      </summary>
      <param name="assets">Список активов.</param>
      <param name="asset">Один актив.</param>
      <param name="mode">Укажите, чтобы проверять только файлы активов, метафайлы или и то, и другое.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.ClearCache">
      <summary>
        <para>Это приведет к аннулированию кэшированной информации о состоянии для всех ресурсов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Delete(System.String)">
      <summary>
        <para>Запускает задачу по удалению Актива или списка Активов с диска и из системы контроля версий.</para>
      </summary>
      <param name="assetProjectPath">Путь к ресурсу, который необходимо удалить.</param>
      <param name="assets">Список объектов для удаления.</param>
      <param name="asset">Объект для удаления.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Delete(UnityEditor.VersionControl.AssetList)">
      <summary>
        <para>Запускает задачу по удалению Актива или списка Активов с диска и из системы контроля версий.</para>
      </summary>
      <param name="assetProjectPath">Путь к ресурсу, который необходимо удалить.</param>
      <param name="assets">Список объектов для удаления.</param>
      <param name="asset">Объект для удаления.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Delete(UnityEditor.VersionControl.Asset)">
      <summary>
        <para>Запускает задачу по удалению Актива или списка Активов с диска и из системы контроля версий.</para>
      </summary>
      <param name="assetProjectPath">Путь к ресурсу, который необходимо удалить.</param>
      <param name="assets">Список объектов для удаления.</param>
      <param name="asset">Объект для удаления.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.DeleteChangeSets(UnityEditor.VersionControl.ChangeSets)">
      <summary>
        <para>Запускает задачу, которая попытается удалить указанные наборы изменений.</para>
      </summary>
      <param name="changesets">Список наборов изменений для удаления.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.DeleteChangeSetsIsValid(UnityEditor.VersionControl.ChangeSets)">
      <summary>
        <para>Проверяет, является ли удаление заданных наборов изменений допустимой задачей для выполнения.</para>
      </summary>
      <param name="changesets">Наборы изменений для тестирования.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.DiffHead(UnityEditor.VersionControl.AssetList,System.Boolean)">
      <summary>
        <para>Запускает задачу для отображения разницы между данным ассетом и их головной ревизией.</para>
      </summary>
      <param name="assets">Список объектов для сравнения</param>
      <param name="includingMetaFiles">Следует ли включать файл .meta.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.DiffIsValid(UnityEditor.VersionControl.AssetList)">
      <summary>
        <para>Возвращает true, если запуск задачи Diff является допустимой операцией хотя бы для одного актива в заданном AssetList.</para>
      </summary>
      <param name="assets">Список активов.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.GetActiveConfigFields">
      <summary>
        <para>Возвращает поля конфигурации для текущего активного плагина контроля версий.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.GetActivePlugin">
      <summary>
        <para>Получает текущий выбранный пользователем плагин управления версией.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.GetAssetByGUID(System.String)">
      <summary>
        <para>Возвращает информацию об управлении версиями актива из заданного GUID.</para>
      </summary>
      <param name="guid">GUID актива.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.GetAssetByPath(System.String)">
      <summary>
        <para>Возвращает информацию об управлении версиями актива. Может использоваться с "AssetList.Add" для добавления ресурсов в список для дальнейших действий по управлению версиями.</para>
      </summary>
      <param name="unityPath">Путь к ресурсу.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.GetAssetListFromSelection">
      <summary>
        <para>Возвращает информацию о контроле версий для выбранных в данный момент активов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.GetLatest(UnityEditor.VersionControl.AssetList)">
      <summary>
        <para>Запустите задачу для получения последней версии несинхронизированного актива с сервера контроля версий.</para>
      </summary>
      <param name="assets">Список ресурсов для обновления.</param>
      <param name="asset">Объект для обновления.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.GetLatest(UnityEditor.VersionControl.Asset)">
      <summary>
        <para>Запустите задачу для получения последней версии несинхронизированного актива с сервера контроля версий.</para>
      </summary>
      <param name="assets">Список ресурсов для обновления.</param>
      <param name="asset">Объект для обновления.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.GetLatestIsValid(UnityEditor.VersionControl.AssetList)">
      <summary>
        <para>Задача проверяет заданный список ресурсов и возвращает значение true, если Provider.GetLatest является допустимой операцией для одного или нескольких ресурсов.</para>
      </summary>
      <param name="assets">Список активов для тестирования.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.GetLatestIsValid(UnityEditor.VersionControl.Asset)">
      <summary>
        <para>ЗАДАЧА.</para>
      </summary>
      <param name="asset">
      </param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Incoming">
      <summary>
        <para>Запускает задачу, которая запрашивает сервер контроля версий о входящих изменениях.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.IncomingChangeSetAssets(UnityEditor.VersionControl.ChangeSet)">
      <summary>
        <para>Учитывая входящий набор изменений, это запустит задачу для запроса сервера контроля версий, для которого активы являются частью набора изменений.</para>
      </summary>
      <param name="changeset">Входящий набор изменений.</param>
      <param name="changesetID">Входящий набор изменений.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.IncomingChangeSetAssets(System.String)">
      <summary>
        <para>Учитывая входящий набор изменений, это запустит задачу для запроса сервера контроля версий, для которого активы являются частью набора изменений.</para>
      </summary>
      <param name="changeset">Входящий набор изменений.</param>
      <param name="changesetID">Входящий набор изменений.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.IsOpenForEdit(UnityEditor.VersionControl.Asset)">
      <summary>
        <para>Возвращает true, если ресурс можно редактировать.</para>
      </summary>
      <param name="asset">Актив для тестирования.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Lock(UnityEditor.VersionControl.AssetList,System.Boolean)">
      <summary>
        <para>Попытка заблокировать ресурс для монопольного редактирования.</para>
      </summary>
      <param name="asset">Объект для блокировки/разблокировки.</param>
      <param name="assets">Список активов для блокировки/разблокировки.</param>
      <param name="locked">Значение true, чтобы заблокировать ресурсы, и false, чтобы разблокировать ресурсы.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Lock(UnityEditor.VersionControl.Asset,System.Boolean)">
      <summary>
        <para>Попытка заблокировать ресурс для монопольного редактирования.</para>
      </summary>
      <param name="asset">Объект для блокировки/разблокировки.</param>
      <param name="assets">Список активов для блокировки/разблокировки.</param>
      <param name="locked">Значение true, чтобы заблокировать ресурсы, и false, чтобы разблокировать ресурсы.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.LockIsValid(UnityEditor.VersionControl.AssetList)">
      <summary>
        <para>Возвращает значение true, если задачу Provider.Lock можно выполнить для одного или нескольких ресурсов из заданного списка ресурсов.</para>
      </summary>
      <param name="assets">Список активов для тестирования.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.LockIsValid(UnityEditor.VersionControl.Asset)">
      <summary>
        <para>ЗАДАЧА.</para>
      </summary>
      <param name="asset">
      </param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Merge(UnityEditor.VersionControl.AssetList)">
      <summary>
        <para>Инициирует задачу слияния для обработки слияния конфликтующих активов. Это вызывает инструмент слияния, который вы можете установить в разделе «Внешние инструменты» окна «Настройки» для конфликтующих ресурсов. Когда задача слияния завершается, AssetList содержит только активы, которые инструмент может объединить.</para>
      </summary>
      <param name="assets">Список конфликтующих ресурсов для объединения.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Move(System.String,System.String)">
      <summary>
        <para>Использует подключаемый модуль управления версиями для перемещения ресурса с одного пути на другой.</para>
      </summary>
      <param name="from">Путь к исходному ресурсу.</param>
      <param name="to">Путь к месту назначения.</param>
    </member>
    <member name="T:UnityEditor.VersionControl.Provider.PreCheckoutCallback">
      <summary>
        <para>Делегировать предоставленный пользователем обратный вызов перед проверкой контроля версий.</para>
      </summary>
      <param name="list">Список активов, которые будут переданы команде Checkout. Активы могут быть удалены или добавлены в этот список в обратном вызове.</param>
      <param name="changesetID">Установите это на идентификатор существующего набора изменений, чтобы проверить перечисленные активы в этом наборе изменений. Если набор изменений, соответствующий указанному идентификатору, не будет найден, проверка будет заблокирована и появится сообщение об ошибке. Не устанавливайте одновременно этот параметр и параметр changesetDescription — это не поддерживается и будет вызвана ошибка.</param>
      <param name="changesetDescription">Чтобы проверить активы в новом наборе изменений, установите эту строку описания. Это действие создает новый набор изменений, в котором открываются активы. Не устанавливайте одновременно эту строку описания и параметр changesetID. Установка обоих вызывает ошибку.</param>
    </member>
    <member name="T:UnityEditor.VersionControl.Provider.PreSubmitCallback">
      <summary>
        <para>Делегат для пользовательского обратного вызова, который будет вызываться перед отправкой в ​​систему управления версиями.</para>
      </summary>
      <param name="list">Список активов, которые будут переданы команде Checkout. Активы могут быть удалены или добавлены в этот список в обратном вызове.</param>
      <param name="changesetID">Установите это на идентификатор существующего набора изменений, чтобы отправить перечисленные активы в этом наборе изменений. Если набор изменений, соответствующий указанному идентификатору, не найден, отправка будет заблокирована и появится сообщение об ошибке.</param>
      <param name="changesetDescription">Если вы хотите отправить активы в новый набор изменений, установите эту строку описания, и будет создан новый набор изменений и отправленные туда активы.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Resolve(UnityEditor.VersionControl.AssetList,UnityEditor.VersionControl.ResolveMethod)">
      <summary>
        <para>Запускает задачу, которая разрешит конфликтующие активы в системе управления версиями.</para>
      </summary>
      <param name="assets">Список активов для разрешения.</param>
      <param name="resolveMethod">Как должны быть разрешены активы.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.ResolveIsValid(UnityEditor.VersionControl.AssetList)">
      <summary>
        <para>Проверяет, находится ли какое-либо из активов в списке в состоянии конфликта и может быть разрешено.</para>
      </summary>
      <param name="assets">Список активов, подлежащих разрешению.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Revert(UnityEditor.VersionControl.AssetList,UnityEditor.VersionControl.RevertMode)">
      <summary>
        <para>Восстанавливает указанные ресурсы, отменяя все изменения, внесенные с момента последней синхронизации.</para>
      </summary>
      <param name="assets">Список активов, подлежащих возврату.</param>
      <param name="asset">Актив, подлежащий возврату.</param>
      <param name="mode">Как вернуть активы.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Revert(UnityEditor.VersionControl.Asset,UnityEditor.VersionControl.RevertMode)">
      <summary>
        <para>Восстанавливает указанные ресурсы, отменяя все изменения, внесенные с момента последней синхронизации.</para>
      </summary>
      <param name="assets">Список активов, подлежащих возврату.</param>
      <param name="asset">Актив, подлежащий возврату.</param>
      <param name="mode">Как вернуть активы.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.RevertIsValid(UnityEditor.VersionControl.AssetList,UnityEditor.VersionControl.RevertMode)">
      <summary>
        <para>Возвращает значение true, если Provider.Revert является допустимой задачей для выполнения по крайней мере с одним из указанных ресурсов в списке.</para>
      </summary>
      <param name="assets">Список активов для тестирования.</param>
      <param name="asset">Актив для тестирования.</param>
      <param name="mode">Вернуть режим для проверки.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.RevertIsValid(UnityEditor.VersionControl.Asset,UnityEditor.VersionControl.RevertMode)">
      <summary>
        <para>Возвращает значение true, если Provider.Revert является допустимой задачей для выполнения по крайней мере с одним из указанных ресурсов в списке.</para>
      </summary>
      <param name="assets">Список активов для тестирования.</param>
      <param name="asset">Актив для тестирования.</param>
      <param name="mode">Вернуть режим для проверки.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Status(UnityEditor.VersionControl.AssetList)">
      <summary>
        <para>Запускает задачу, которая будет получать самый последний статус актива или активов из системы контроля версий.</para>
      </summary>
      <param name="assets">Список активов, для которого необходимо получить информацию о состоянии.</param>
      <param name="asset">Актив, для которого требуется получить информацию о состоянии.</param>
      <param name="recursively">Если какие-либо указанные активы являются папками, этот флаг также получит статус для всех потомков папки.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Status(UnityEditor.VersionControl.Asset)">
      <summary>
        <para>Запускает задачу, которая будет получать самый последний статус актива или активов из системы контроля версий.</para>
      </summary>
      <param name="assets">Список активов, для которого необходимо получить информацию о состоянии.</param>
      <param name="asset">Актив, для которого требуется получить информацию о состоянии.</param>
      <param name="recursively">Если какие-либо указанные активы являются папками, этот флаг также получит статус для всех потомков папки.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Status(UnityEditor.VersionControl.AssetList,System.Boolean)">
      <summary>
        <para>Запускает задачу, которая будет получать самый последний статус актива или активов из системы контроля версий.</para>
      </summary>
      <param name="assets">Список активов, для которого необходимо получить информацию о состоянии.</param>
      <param name="asset">Актив, для которого требуется получить информацию о состоянии.</param>
      <param name="recursively">Если какие-либо указанные активы являются папками, этот флаг также получит статус для всех потомков папки.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Status(UnityEditor.VersionControl.Asset,System.Boolean)">
      <summary>
        <para>Запускает задачу, которая будет получать самый последний статус актива или активов из системы контроля версий.</para>
      </summary>
      <param name="assets">Список активов, для которого необходимо получить информацию о состоянии.</param>
      <param name="asset">Актив, для которого требуется получить информацию о состоянии.</param>
      <param name="recursively">Если какие-либо указанные активы являются папками, этот флаг также получит статус для всех потомков папки.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Status(System.String[])">
      <summary>
        <para>Запускает задачу, которая будет получать самый последний статус актива или активов из системы контроля версий.</para>
      </summary>
      <param name="assets">Список активов, для которого необходимо получить информацию о состоянии.</param>
      <param name="asset">Актив, для которого требуется получить информацию о состоянии.</param>
      <param name="recursively">Если какие-либо указанные активы являются папками, этот флаг также получит статус для всех потомков папки.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Status(System.String[],System.Boolean)">
      <summary>
        <para>Запускает задачу, которая будет получать самый последний статус актива или активов из системы контроля версий.</para>
      </summary>
      <param name="assets">Список активов, для которого необходимо получить информацию о состоянии.</param>
      <param name="asset">Актив, для которого требуется получить информацию о состоянии.</param>
      <param name="recursively">Если какие-либо указанные активы являются папками, этот флаг также получит статус для всех потомков папки.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Status(System.String)">
      <summary>
        <para>Запускает задачу, которая будет получать самый последний статус актива или активов из системы контроля версий.</para>
      </summary>
      <param name="assets">Список активов, для которого необходимо получить информацию о состоянии.</param>
      <param name="asset">Актив, для которого требуется получить информацию о состоянии.</param>
      <param name="recursively">Если какие-либо указанные активы являются папками, этот флаг также получит статус для всех потомков папки.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Status(System.String,System.Boolean)">
      <summary>
        <para>Запускает задачу, которая будет получать самый последний статус актива или активов из системы контроля версий.</para>
      </summary>
      <param name="assets">Список активов, для которого необходимо получить информацию о состоянии.</param>
      <param name="asset">Актив, для которого требуется получить информацию о состоянии.</param>
      <param name="recursively">Если какие-либо указанные активы являются папками, этот флаг также получит статус для всех потомков папки.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Submit(UnityEditor.VersionControl.ChangeSet,UnityEditor.VersionControl.AssetList,System.String,System.Boolean)">
      <summary>
        <para>Запускает задачу, которая отправляет активы в систему управления версиями.</para>
      </summary>
      <param name="changeset">Набор изменений для отправки.</param>
      <param name="list">Список ресурсов для отправки.</param>
      <param name="description">Описание набора изменений.</param>
      <param name="saveOnly">Если true, то сохраните только набор изменений, который будет отправлен позже.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.SubmitIsValid(UnityEditor.VersionControl.ChangeSet,UnityEditor.VersionControl.AssetList)">
      <summary>
        <para>Возвращает true, если отправка ресурсов является допустимой операцией.</para>
      </summary>
      <param name="changeset">Набор изменений для отправки.</param>
      <param name="assets">Объект для отправки.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.UnlockIsValid(UnityEditor.VersionControl.AssetList)">
      <summary>
        <para>Возвращает true, если разблокировка ресурсов является допустимой операцией.</para>
      </summary>
      <param name="assets">Список активов для тестирования.</param>
      <param name="asset">Ресурс для тестирования.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.UnlockIsValid(UnityEditor.VersionControl.Asset)">
      <summary>
        <para>Возвращает true, если разблокировка ресурсов является допустимой операцией.</para>
      </summary>
      <param name="assets">Список активов для тестирования.</param>
      <param name="asset">Ресурс для тестирования.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.UpdateSettings">
      <summary>
        <para>Запускает задачу, которая отправляет параметры контроля версий в систему контроля версий.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.ResolveMethod">
      <summary>
        <para>Как должны разрешаться активы.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.ResolveMethod.UseMerged">
      <summary>
        <para>Использовать объединенную версию.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.ResolveMethod.UseMine">
      <summary>
        <para>Используйте "мой" (локальная версия).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.ResolveMethod.UseTheirs">
      <summary>
        <para>Использовать «их» (другая/удаленная версия).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.RevertMode">
      <summary>
        <para>Определяет поведение методов возврата контроля версий.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.RevertMode.KeepModifications">
      <summary>
        <para>Восстановить файлы, но сохранить локально измененные.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.RevertMode.Normal">
      <summary>
        <para>Используйте обычный подход к возврату системы управления версиями.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.RevertMode.Unchanged">
      <summary>
        <para>Восстанавливать только неизмененные файлы.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.SubmitResult">
      <summary>
        <para>Статус операции, возвращаемый системой контроля версий.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.SubmitResult.ConflictingFiles">
      <summary>
        <para>Файлы конфликтуют.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.SubmitResult.Error">
      <summary>
        <para>Возвращена ошибка.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.SubmitResult.OK">
      <summary>
        <para>Отправка сработала.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.SubmitResult.UnaddedFiles">
      <summary>
        <para>Не удалось добавить файлы.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.Task">
      <summary>
        <para>Задача описывает экземпляр операции контроля версий.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Task.assetList">
      <summary>
        <para>Результат некоторых типов задач.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Task.changeSets">
      <summary>
        <para>Список наборов изменений, возвращенных некоторыми задачами.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Task.description">
      <summary>
        <para>Краткое описание текущей задачи.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Task.messages">
      <summary>
        <para>Может содержать сообщения от плагинов контроля версий.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Task.progressPct">
      <summary>
        <para>Процент выполнения текущей задачи.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Task.resultCode">
      <summary>
        <para>Некоторые задачи возвращают коды результатов, они хранятся здесь.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Task.secondsSpent">
      <summary>
        <para>Общее время, проведенное в задаче с момента запуска задачи.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Task.success">
      <summary>
        <para>Получить, было ли задание выполнено успешно.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Task.text">
      <summary>
        <para>Будет содержать результат задачи Provider.ChangeSetDescription.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.Task.SetCompletionAction(UnityEditor.VersionControl.CompletionAction)">
      <summary>
        <para>По завершении задачи будет выполнена задача завершения, если она установлена.</para>
      </summary>
      <param name="action">Какое действие завершения выполнить.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Task.Wait">
      <summary>
        <para>Блокирующее ожидание завершения задачи.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.VersionControlAttribute">
      <summary>
        <para>Позволяет пометить класс как объект системы контроля версий.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.VersionControlAttribute.displayName">
      <summary>
        <para>Отображаемое имя системы контроля версий.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.VersionControlAttribute.name">
      <summary>
        <para>Имя системы контроля версий.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.VersionControlAttribute.#ctor(System.String,System.String)">
      <summary>
        <para>Создает VersionControlAttribute.</para>
      </summary>
      <param name="name">Имя системы контроля версий.</param>
      <param name="displayName">Отображаемое имя системы контроля версий.</param>
    </member>
    <member name="T:UnityEditor.VersionControl.VersionControlDescriptor">
      <summary>
        <para>Содержит уникальное имя системы контроля версий.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.VersionControlDescriptor.displayName">
      <summary>
        <para>Отображаемое имя системы контроля версий.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.VersionControlDescriptor.name">
      <summary>
        <para>Имя системы контроля версий.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.VersionControlManager">
      <summary>
        <para>Управляет системами контроля версий.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.VersionControlManager.activeVersionControlObject">
      <summary>
        <para>Объект VersionControlObject, представляющий активную систему контроля версий.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.VersionControlManager.versionControlDescriptors">
      <summary>
        <para>Массив, содержащий все доступные системы контроля версий.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.VersionControlManager.SetVersionControl(System.String)">
      <summary>
        <para>Устанавливает активную систему контроля версий.</para>
      </summary>
      <param name="name">Уникальное имя системы контроля версий.</param>
      <returns>
        <para>Возвращает true, если VCS активирован. false в противном случае.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.VersionControl.VersionControlObject">
      <summary>
        <para>Абстрактный базовый класс для представления системы контроля версий.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.VersionControlObject.isConnected">
      <summary>
        <para>Проверяет, подключен ли объект VersionControlObject к базовой системе управления версиями.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.VersionControlObject.GetExtension">
      <summary>
        <para>Получает необязательный объект расширения.</para>
      </summary>
      <returns>
        <para>Объект расширения, если он поддерживается VersionControlObject. в противном случае null.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.VersionControl.VersionControlObject.OnActivate">
      <summary>
        <para>Вызывается при активации вашей системы контроля версий.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.VersionControlObject.OnDeactivate">
      <summary>
        <para>Вызывается, когда ваша система контроля версий деактивирована.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.VersionControlObject.Refresh">
      <summary>
        <para>Вызывается, когда нужно удалить кэшированное состояние и получить новое состояние из базовой системы контроля версий.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.VersionControlUtils">
      <summary>
        <para>Содержит специальные служебные методы системы контроля версий.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.VersionControlUtils.IsPathVersioned(System.String)">
      <summary>
        <para>Позволяет проверить, отслеживается ли указанный файл системой контроля версий.</para>
      </summary>
      <param name="path">Путь к файлу.</param>
      <returns>
        <para>true, если файл должен отслеживаться системой контроля версий. false в противном случае.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.VertexChannelCompressionFlags">
      <summary>
        <para>Используйте эти флаги перечисления, чтобы указать, какие элементы вершины сжимать.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VertexChannelCompressionFlags.Color">
      <summary>
        <para>Сжатие цвета включено.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VertexChannelCompressionFlags.None">
      <summary>
        <para>Сжатие вершин отключено.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VertexChannelCompressionFlags.Normal">
      <summary>
        <para>Включено обычное сжатие.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VertexChannelCompressionFlags.Position">
      <summary>
        <para>Сжатие позиций включено.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VertexChannelCompressionFlags.Tangent">
      <summary>
        <para>Включено касательное сжатие.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VertexChannelCompressionFlags.TexCoord0">
      <summary>
        <para>Сжатие текстурной координаты 0 включено.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VertexChannelCompressionFlags.TexCoord1">
      <summary>
        <para>Сжатие текстурной координаты 1 включено.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VertexChannelCompressionFlags.TexCoord2">
      <summary>
        <para>Сжатие текстурной координаты 2 включено.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VertexChannelCompressionFlags.TexCoord3">
      <summary>
        <para>Сжатие текстурной координаты 3 включено.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VideoBitrateMode">
      <summary>
        <para>Битрейт после перекодирования клипа.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoBitrateMode.High">
      <summary>
        <para>Высокое значение, возможно превышающее стандартные возможности подключения к Интернету.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoBitrateMode.Low">
      <summary>
        <para>Низкое значение, безопасное для медленных интернет-соединений или клипов, где качество изображения не критично.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoBitrateMode.Medium">
      <summary>
        <para>Типичная скорость передачи данных, поддерживаемая подключением к Интернету.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VideoClipImporter">
      <summary>
        <para>VideoClipImporter позволяет изменять настройки импорта Video.VideoClip из сценариев Editor.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.defaultTargetSettings">
      <summary>
        <para>Значения по умолчанию для параметров импорта для конкретной платформы.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.deinterlaceMode">
      <summary>
        <para>Изображения деинтерлейсируются во время транскодирования. Это сообщает импортеру, как интерпретировать поля в источнике, если таковые имеются.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.flipHorizontal">
      <summary>
        <para>Примените горизонтальное отражение во время импорта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.flipVertical">
      <summary>
        <para>Примените вертикальное отражение во время импорта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.frameCount">
      <summary>
        <para>Количество кадров в клипе.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.frameRate">
      <summary>
        <para>Частота кадров клипа.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.importAudio">
      <summary>
        <para>Импортировать звуковые дорожки из исходного файла.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.isPlayingPreview">
      <summary>
        <para>Воспроизводится ли предварительный просмотр в данный момент.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.keepAlpha">
      <summary>
        <para>Сохранять ли альфа-канал из источника в перекодированном клипе.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.outputFileSize">
      <summary>
        <para>Размер в байтах файла после импорта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.pixelAspectRatioDenominator">
      <summary>
        <para>Знаменатель соотношения сторон пикселя (число:ден).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.pixelAspectRatioNumerator">
      <summary>
        <para>Числитель соотношения сторон пикселя (число:день).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.sourceAudioTrackCount">
      <summary>
        <para>Количество звуковых дорожек в исходном файле.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.sourceFileSize">
      <summary>
        <para>Размер файла в байтах перед импортом.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.sourceHasAlpha">
      <summary>
        <para>Истинно, если в исходном файле есть канал для попиксельной прозрачности.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.sRGBClip">
      <summary>
        <para>Содержит ли импортированный клип данные о цвете sRGB.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.transcodeSkipped">
      <summary>
        <para>Возвращает true, если транскодирование было пропущено во время импорта, иначе false. (Только чтение)

Если для параметра VideoImporterTargetSettings.enableTranscoding задано значение true, результирующая операция перекодирования, выполняемая во время импорта, может занять довольно много времени, до многих часов в зависимости от исходного разрешения и продолжительности содержимого. На индикаторе выполнения импорта активов предлагается возможность пропустить этот процесс. При пропуске транскодирование вместо этого предоставляет нетранскодированную версию актива. Однако настройки импортера остаются нетронутыми, поэтому это свойство можно проверить на предмет несоответствия сгенерированному артефакту.

Повторный импорт без остановки процесса перекодирования или с выключенным перекодированием приводит к тому, что это свойство становится ложным.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VideoClipImporter.ClearTargetSettings(System.String)">
      <summary>
        <para>Очистите настройки импорта для конкретной платформы для указанной платформы, чтобы вернуться к настройкам по умолчанию.</para>
      </summary>
      <param name="platform">Название платформы.</param>
    </member>
    <member name="M:UnityEditor.VideoClipImporter.Equals(UnityEditor.VideoClipImporter)">
      <summary>
        <para>Выполняет сравнение значений с другим VideoClipImporter.</para>
      </summary>
      <param name="rhs">Импортер для сравнения.</param>
      <returns>
        <para>Возвращает true, если настройки для обоих VideoClipImporters совпадают. В противном случае возвращает false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.VideoClipImporter.GetPreviewTexture">
      <summary>
        <para>Возвращает текстуру с текущим кадром перекодированного клипа.
Возвращает кадр 0, когда не воспроизводится, и кадр в текущее время, когда воспроизводится.</para>
      </summary>
      <returns>
        <para>Текстура, содержащая текущий кадр.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.VideoClipImporter.GetResizeHeight(UnityEditor.VideoResizeMode)">
      <summary>
        <para>Получить результирующую высоту операции изменения размера для указанного режима изменения размера.</para>
      </summary>
      <param name="mode">Режим, для которого запрашивается высота.</param>
      <returns>
        <para>Высота для указанного режима изменения размера.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.VideoClipImporter.GetResizeModeName(UnityEditor.VideoResizeMode)">
      <summary>
        <para>Получить полное имя операции изменения размера для указанного режима изменения размера.</para>
      </summary>
      <param name="mode">Режим, для которого запрашивается ширина.</param>
      <returns>
        <para>Имя указанного режима изменения размера.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.VideoClipImporter.GetResizeWidth(UnityEditor.VideoResizeMode)">
      <summary>
        <para>Получите результирующую ширину операции изменения размера для указанного режима изменения размера.</para>
      </summary>
      <param name="mode">Режим, для которого запрашивается ширина.</param>
      <returns>
        <para>Ширина для указанного режима изменения размера.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.VideoClipImporter.GetSourceAudioChannelCount(System.UInt16)">
      <summary>
        <para>Количество аудиоканалов в указанной исходной дорожке.</para>
      </summary>
      <param name="audioTrackIdx">Индекс звуковой дорожки для запроса.</param>
      <returns>
        <para>Количество каналов.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.VideoClipImporter.GetSourceAudioSampleRate(System.UInt16)">
      <summary>
        <para>Частота дискретизации указанной звуковой дорожки.</para>
      </summary>
      <param name="audioTrackIdx">Индекс звуковой дорожки для запроса.</param>
      <returns>
        <para>Частота дискретизации в герцах.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.VideoClipImporter.GetTargetSettings(System.String)">
      <summary>
        <para>Возвращает специфичные для платформы параметры импорта для указанной платформы.</para>
      </summary>
      <param name="platform">Название платформы.</param>
      <returns>
        <para>Параметры импорта для конкретной платформы. Выдает исключение, если платформа неизвестна.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.VideoClipImporter.PlayPreview">
      <summary>
        <para>Запускает предварительное воспроизведение.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VideoClipImporter.SetTargetSettings(System.String,UnityEditor.VideoImporterTargetSettings)">
      <summary>
        <para>Задает специфичные для платформы параметры импорта для указанной платформы.</para>
      </summary>
      <param name="platform">Название платформы.</param>
      <param name="settings">Новые настройки импорта для конкретной платформы. Выдает исключение, если платформа неизвестна.</param>
    </member>
    <member name="M:UnityEditor.VideoClipImporter.StopPreview">
      <summary>
        <para>Останавливает предварительное воспроизведение.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VideoCodec">
      <summary>
        <para>Видеокодек для использования при импорте видеоклипов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoCodec.Auto">
      <summary>
        <para>Выберите кодек, поддерживающий аппаратное декодирование на целевой платформе.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoCodec.H264">
      <summary>
        <para>Кодируйте видео с помощью кодека H.264.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoCodec.H265">
      <summary>
        <para>Кодируйте видео с помощью кодека H.265.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoCodec.VP8">
      <summary>
        <para>Кодируйте видео с помощью кодека vp8.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VideoDeinterlaceMode">
      <summary>
        <para>Описывает, как следует интерпретировать поля изображения, если таковые имеются.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoDeinterlaceMode.Even">
      <summary>
        <para>Первое поле находится в четных строках.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoDeinterlaceMode.Odd">
      <summary>
        <para>Первое поле находится в нечетных строках.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoDeinterlaceMode.Off">
      <summary>
        <para>Клип не чересстрочный.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VideoEncodeAspectRatio">
      <summary>
        <para>Методы компенсации расхождений соотношения сторон между исходным разрешением и требуемым размером кодирования.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoEncodeAspectRatio.NoScaling">
      <summary>
        <para>Не выполнять никаких действий.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoEncodeAspectRatio.Stretch">
      <summary>
        <para>Растяните исходный код, чтобы заполнить целевое разрешение без сохранения соотношения сторон.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VideoEncodingProfile">
      <summary>
        <para>Параметры профиля кодировщика.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoEncodingProfile.H264Baseline">
      <summary>
        <para>Кодируйте видео с помощью базового профиля.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoEncodingProfile.H264High">
      <summary>
        <para>Кодируйте видео с высоким профилем.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoEncodingProfile.H264Main">
      <summary>
        <para>Кодируйте видео, используя основной профиль.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VideoImporterTargetSettings">
      <summary>
        <para>Параметры импортера, которые могут иметь значения, зависящие от платформы.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoImporterTargetSettings.aspectRatio">
      <summary>
        <para>Как будут обрабатываться несоответствия соотношения сторон, если таковые имеются, если выбранное разрешение импорта имеет другое соотношение, чем исходное.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoImporterTargetSettings.bitrateMode">
      <summary>
        <para>Тип скорости передачи для перекодированного клипа.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoImporterTargetSettings.codec">
      <summary>
        <para>Кодек, который будет использоваться в итоговом видеоклипе.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoImporterTargetSettings.customHeight">
      <summary>
        <para>Высота перекодированного клипа, если для параметра resizeMode задано значение custom.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoImporterTargetSettings.customWidth">
      <summary>
        <para>Ширина перекодированного клипа, когда для параметра resizeMode задано значение custom.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoImporterTargetSettings.enableTranscoding">
      <summary>
        <para>Определяет, будет ли файл фильма перекодирован во время импорта. Если транскодирование не включено, файл будет импортирован в исходном формате.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoImporterTargetSettings.resizeMode">
      <summary>
        <para>Как изменить размер изображений при переходе в импортированный клип.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoImporterTargetSettings.spatialQuality">
      <summary>
        <para>Управляет внутренним изменением размера изображения, что приводит к более размытому изображению, но меньшим размерам изображения и размеру файла.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VideoImporterTargetSettings.#ctor">
      <summary>
        <para>Создает объект, в котором все элементы инициализируются со значением по умолчанию, присущим их типу.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VideoResizeMode">
      <summary>
        <para>Как изображения видеоклипа будут изменяться во время перекодирования.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoResizeMode.CustomSize">
      <summary>
        <para>Результирующий размер будет зависеть от VideoClipImporter.customWidth и VideoClipImporter.customHeight.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoResizeMode.HalfRes">
      <summary>
        <para>Половина ширины и высоты.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoResizeMode.OriginalSize">
      <summary>
        <para>Та же ширина и высота, что и у источника.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoResizeMode.QuarterRes">
      <summary>
        <para>Ширина и высота четверти.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoResizeMode.Square1024">
      <summary>
        <para>Вписать источник в прямоугольник размером 1024 x 1024.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoResizeMode.Square256">
      <summary>
        <para>Вписать источник в прямоугольник размером 256 x 256.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoResizeMode.Square512">
      <summary>
        <para>Вписать источник в прямоугольник размером 512 x 512.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoResizeMode.ThreeQuarterRes">
      <summary>
        <para>3/4 ширины и высоты.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VideoSpatialQuality">
      <summary>
        <para>Управляет внутренним изменением размера импортированного клипа для экономии места за счет более размытых изображений.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoSpatialQuality.HighSpatialQuality">
      <summary>
        <para>Изменение размера не выполняется.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoSpatialQuality.LowSpatialQuality">
      <summary>
        <para>Масштабирует ширину и высоту на 1/2.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoSpatialQuality.MediumSpatialQuality">
      <summary>
        <para>Масштабирует ширину и высоту на 3/4.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ViewTool">
      <summary>
        <para>Перечисление для Tools.viewTool.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ViewTool.FPS">
      <summary>
        <para>Выбран инструмент FPS.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ViewTool.None">
      <summary>
        <para>Инструмент просмотра не выбран.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ViewTool.Orbit">
      <summary>
        <para>Инструмент орбиты выбран.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ViewTool.Pan">
      <summary>
        <para>Инструмент панорамирования выбран.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ViewTool.Zoom">
      <summary>
        <para>Инструмент масштабирования выбран.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.WebGLCompressionFormat">
      <summary>
        <para>Перечисление, содержащее различные типы сжатия.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WebGLCompressionFormat.Brotli">
      <summary>
        <para>Ресурсы WebGL хранятся с использованием сжатия Brotli.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WebGLCompressionFormat.Disabled">
      <summary>
        <para>Ресурсы WebGL не сжаты.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WebGLCompressionFormat.Gzip">
      <summary>
        <para>Ресурсы WebGL хранятся с использованием сжатия Gzip.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.WebGLDebugSymbolMode">
      <summary>
        <para>Перечисление, содержащее различные режимы отладочных символов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WebGLDebugSymbolMode.Embedded">
      <summary>
        <para>Символы отладки встроены в файл wasm.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WebGLDebugSymbolMode.External">
      <summary>
        <para>Символы отладки хранятся во внешнем файле.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WebGLDebugSymbolMode.Off">
      <summary>
        <para>В сборку не добавляются символы отладки.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.WebGLExceptionSupport">
      <summary>
        <para>Варианты поддержки исключений в WebGL.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WebGLExceptionSupport.ExplicitlyThrownExceptionsOnly">
      <summary>
        <para>Включить поддержку броска.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WebGLExceptionSupport.FullWithoutStacktrace">
      <summary>
        <para>Включить поддержку исключений для всех исключений без информации о трассировке стека.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WebGLExceptionSupport.FullWithStacktrace">
      <summary>
        <para>Включить поддержку исключений для всех исключений, включая информацию о трассировке стека.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WebGLExceptionSupport.None">
      <summary>
        <para>Отключить поддержку исключений.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.WebGLLinkerTarget">
      <summary>
        <para>Параметры формата сборки, доступные при сборке в WebGL.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WebGLLinkerTarget.Asm">
      <summary>
        <para>Будет сгенерирован только вывод asm.js. Этот параметр устарел.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WebGLLinkerTarget.Both">
      <summary>
        <para>Будет сгенерирован вывод как asm.js, так и WebAssembly. Будет использоваться версия сгенерированного контента WebAssembly, если она поддерживается браузером, в противном случае будет использоваться версия asm.js. Этот параметр устарел.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WebGLLinkerTarget.Wasm">
      <summary>
        <para>Будет создан только вывод WebAssembly. Для запуска сгенерированного контента потребуется браузер с поддержкой WebAssembly.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.WebGLTextureSubtarget">
      <summary>
        <para>Формат сжатой текстуры для целевой платформы сборки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WebGLTextureSubtarget.ASTC">
      <summary>
        <para>Сжатие текстур ASTC.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WebGLTextureSubtarget.DXT">
      <summary>
        <para>Сжатие текстур S3. Поддерживается на устройствах с графическими процессорами NVidia Tegra, Vivante и Intel.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WebGLTextureSubtarget.ETC2">
      <summary>
        <para>Сжатие текстур ETC2. Доступно на устройствах, поддерживающих OpenGL ES 3.0; на устройствах OpenGL ES 2 текстура распаковывается на CPU.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WebGLTextureSubtarget.Generic">
      <summary>
        <para>Не переопределяйте сжатие текстур.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.WebGLWasmArithmeticExceptions">
      <summary>
        <para>Перечисление, содержащее различные режимы треппинга для кода WebAssembly.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WebGLWasmArithmeticExceptions.Ignore">
      <summary>
        <para>Этот режим позволяет избежать ловушек, ограничивая значение с плавающей запятой в разумном диапазоне при выполнении арифметических операций.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WebGLWasmArithmeticExceptions.Throw">
      <summary>
        <para>Код WebAssembly будет генерировать исключение для таких вещей, как деление на ноль, округление очень большого числа с плавающей запятой до целого числа и т. д.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.WSABuildAndRunDeployTarget">
      <summary>
        <para>Указывает устройство Windows для развертывания и запуска приложения UWP при использовании команды "Сборка и запуск из редактора".</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WSABuildAndRunDeployTarget.DevicePortal">
      <summary>
        <para>Запускает приложение на удаленном устройстве Windows с помощью транспорта Windows DevicePortal (WDP).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WSABuildAndRunDeployTarget.LocalMachine">
      <summary>
        <para>Запускает приложение на локальном ПК с Windows.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.WSABuildType">
      <summary>
        <para>Создание конфигураций для решений Visual Studio Магазина Windows.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WSABuildType.Debug">
      <summary>
        <para>Отладочная конфигурация.
Без оптимизации, включен код профилировщика.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WSABuildType.Master">
      <summary>
        <para>Основная конфигурация.
Оптимизация включена, код профилировщика отключен. Эта конфигурация используется при отправке приложения в Магазин Windows.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WSABuildType.Release">
      <summary>
        <para>Конфигурация выпуска.
Оптимизация включена, код профилировщика включен.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.WSASubtarget">
      <summary>
        <para>Тип целевого устройства для запуска приложения Магазина Windows.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WSASubtarget.AnyDevice">
      <summary>
        <para>Приложение нацелено на все устройства, на которых запущены приложения Магазина Windows.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WSASubtarget.HoloLens">
      <summary>
        <para>Приложение предназначено для HoloLens.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WSASubtarget.Mobile">
      <summary>
        <para>Приложение предназначено для мобильных устройств.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WSASubtarget.PC">
      <summary>
        <para>Приложение нацелено на ПК.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.WSAUWPBuildType">
      <summary>
        <para>Определяет тип выходной сборки при сборке на универсальной платформе Windows.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WSAUWPBuildType.D3D">
      <summary>
        <para>Проект D3D</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WSAUWPBuildType.ExecutableOnly">
      <summary>
        <para>Только исполняемый файл</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WSAUWPBuildType.XAML">
      <summary>
        <para>XAML-проект</para>
      </summary>
    </member>
    <member name="T:UnityEditor.XboxBuildSubtarget">
      <summary>
        <para>Целевой тип сборки Xbox.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.XboxBuildSubtarget.Debug">
      <summary>
        <para>Отладочный проигрыватель (для сборки с исходным кодом).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.XboxBuildSubtarget.Development">
      <summary>
        <para>Игрок развития.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.XboxBuildSubtarget.Master">
      <summary>
        <para>Мастер-игрок (подтверждение отправки).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.XcodeBuildConfig">
      <summary>
        <para>Конфигурации сборки для проекта Xcode, который генерирует Unity.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.XcodeBuildConfig.Debug">
      <summary>
        <para>Устанавливает конфигурацию сборки на отладку для проекта Xcode, который генерирует Unity.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.XcodeBuildConfig.Release">
      <summary>
        <para>Задает конфигурацию сборки Release для проекта Xcode, который генерирует Unity.</para>
      </summary>
    </member>
  </members>
</doc>