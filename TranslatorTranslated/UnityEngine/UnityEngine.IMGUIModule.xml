<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<doc>
  <members>
    <assembly>
      <name>UnityEngine.IMGUIModule</name>
    </assembly>
    <member name="T:UnityEngine.Event">
      <summary>
        <para>Событие UnityGUI.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Event.alt">
      <summary>
        <para>Клавиша Alt/Option нажата? (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Event.button">
      <summary>
        <para>Какая кнопка мыши была нажата.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Event.capsLock">
      <summary>
        <para>Caps Lock включен? (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Event.character">
      <summary>
        <para>Введенный символ.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Event.clickCount">
      <summary>
        <para>Сколько последовательных щелчков мышью мы получили.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Event.command">
      <summary>
        <para>Клавиша Command/Windows нажата? (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Event.commandName">
      <summary>
        <para>Имя события ExecuteCommand или ValidateCommand.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Event.control">
      <summary>
        <para>Клавиша Control нажата? (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Event.current">
      <summary>
        <para>Текущее событие, которое обрабатывается прямо сейчас.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Event.delta">
      <summary>
        <para>Относительное движение мыши по сравнению с последним событием.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Event.displayIndex">
      <summary>
        <para>Индекс отображения, которому принадлежит событие.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Event.functionKey">
      <summary>
        <para>Является ли текущее нажатие функциональной клавишей? (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Event.isKey">
      <summary>
        <para>Является ли это событие событием клавиатуры? (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Event.isMouse">
      <summary>
        <para>Является ли это событие событием мыши? (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Event.keyCode">
      <summary>
        <para>Необработанный код клавиши для событий клавиатуры.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Event.modifiers">
      <summary>
        <para>Какие клавиши-модификаторы удерживаются нажатыми.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Event.mousePosition">
      <summary>
        <para>Положение мыши.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Event.numeric">
      <summary>
        <para>Находится ли текущая клавиша на цифровой клавиатуре? (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Event.pointerType">
      <summary>
        <para>Тип указателя, создавшего это событие (например, мышь, сенсорный экран, перо).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Event.pressure">
      <summary>
        <para>Как сильно нажимается стилус.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Event.shift">
      <summary>
        <para>Шифт зажат? (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Event.type">
      <summary>
        <para>Тип события.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Event.GetEventCount">
      <summary>
        <para>Возвращает текущее количество событий, хранящихся в очереди событий.</para>
      </summary>
      <returns>
        <para>Текущее количество событий, находящихся в настоящее время в очереди событий.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Event.GetTypeForControl(System.Int32)">
      <summary>
        <para>Получить отфильтрованный тип события для заданного идентификатора элемента управления.</para>
      </summary>
      <param name="controlID">Идентификатор элемента управления, из которого вы запрашиваете.</param>
    </member>
    <member name="M:UnityEngine.Event.KeyboardEvent(System.String)">
      <summary>
        <para>Создайте событие клавиатуры.</para>
      </summary>
      <param name="key">
      </param>
    </member>
    <member name="M:UnityEngine.Event.PopEvent(UnityEngine.Event)">
      <summary>
        <para>Получить следующее [событие] в очереди из системы событий.</para>
      </summary>
      <param name="outEvent">Следующее событие.</param>
    </member>
    <member name="M:UnityEngine.Event.Use">
      <summary>
        <para>Используйте это событие.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.EventModifiers">
      <summary>
        <para>Типы клавиш-модификаторов, которые могут быть активны во время нажатия клавиши.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventModifiers.Alt">
      <summary>
        <para>Клавиша Alt.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventModifiers.CapsLock">
      <summary>
        <para>Клавиша Caps Lock.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventModifiers.Command">
      <summary>
        <para>Командная клавиша (Mac).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventModifiers.Control">
      <summary>
        <para>Клавиша управления.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventModifiers.FunctionKey">
      <summary>
        <para>Функциональная клавиша.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventModifiers.None">
      <summary>
        <para>Клавиша-модификатор не нажата во время события нажатия клавиши.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventModifiers.Numeric">
      <summary>
        <para>Клавиша Num Lock.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventModifiers.Shift">
      <summary>
        <para>Клавиша Shift.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.EventType">
      <summary>
        <para>Типы событий ввода и обработки UnityGUI.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventType.mouseDown">
      <summary>
        <para>Событие, вызываемое при щелчке мышью.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventType.mouseDrag">
      <summary>
        <para>Событие, вызываемое при щелчке мышью и перетаскивании.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventType.mouseUp">
      <summary>
        <para>Событие, которое вызывается, когда мышь больше не щелкается.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventType.ContextClick">
      <summary>
        <para>Пользователь щелкнул правой кнопкой мыши (или щелкнул, удерживая клавишу Control на Mac).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventType.DragExited">
      <summary>
        <para>Только редактор: операция перетаскивания завершена.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventType.DragPerform">
      <summary>
        <para>Только редактор: выполнена операция перетаскивания.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventType.DragUpdated">
      <summary>
        <para>Только редактор: операция перетаскивания обновлена.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventType.ExecuteCommand">
      <summary>
        <para>Выполните специальную команду (например, скопируйте и вставьте).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventType.Ignore">
      <summary>
        <para>Событие следует игнорировать.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventType.KeyDown">
      <summary>
        <para>Была нажата клавиша клавиатуры.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventType.KeyUp">
      <summary>
        <para>Клавиша клавиатуры была отпущена.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventType.Layout">
      <summary>
        <para>Событие макета.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventType.MouseDown">
      <summary>
        <para>Была нажата кнопка мыши.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventType.MouseDrag">
      <summary>
        <para>Мышь была перетащена.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventType.MouseEnterWindow">
      <summary>
        <para>Мышь вошла в окно (только для просмотра в редакторе).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventType.MouseLeaveWindow">
      <summary>
        <para>Мышь покинула окно (только для просмотра в редакторе).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventType.MouseMove">
      <summary>
        <para>Мышь перемещена (только для просмотра в редакторе).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventType.MouseUp">
      <summary>
        <para>Кнопка мыши отпущена.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventType.Repaint">
      <summary>
        <para>Событие перекраски. Один отправляется в каждом кадре.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventType.ScrollWheel">
      <summary>
        <para>Колесико прокрутки было перемещено.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventType.TouchDown">
      <summary>
        <para>Устройство прямого манипулирования (палец, ручка) коснулось экрана.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventType.TouchEnter">
      <summary>
        <para>Устройство прямого манипулирования (палец, ручка) перемещается в окно (перетаскивание).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventType.TouchLeave">
      <summary>
        <para>Устройство прямого манипулирования (палец, перо) перемещено за пределы окна (перетаскивание).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventType.TouchMove">
      <summary>
        <para>Устройство прямого манипулирования (палец, перо) перемещается по экрану (перетаскивание).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventType.TouchStationary">
      <summary>
        <para>Стационарное событие устройства прямого манипулирования (палец, ручка) (долгое касание).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventType.TouchUp">
      <summary>
        <para>Устройство прямого манипулирования (палец, ручка) покинуло экран.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventType.Used">
      <summary>
        <para>Уже обработано событие.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.EventType.ValidateCommand">
      <summary>
        <para>Проверяет специальную команду (например, копировать и вставлять).</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ExitGUIException">
      <summary>
        <para>Исключение, которое предотвратит оценку всех последующих функций графического интерфейса непосредственного режима для оставшейся части цикла графического интерфейса.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.FocusType">
      <summary>
        <para>Используется GUIUtility.GetControlID для информирования системы IMGUI о том, может ли данный элемент управления получить фокус клавиатуры. Это позволяет системе IMGUI правильно наводить фокус, когда пользователь нажимает вкладку для переключения между элементами управления.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.FocusType.Keyboard">
      <summary>
        <para>Этот элемент управления может получать фокус клавиатуры.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.FocusType.Passive">
      <summary>
        <para>Этот элемент управления не может получить фокус клавиатуры.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.GUI">
      <summary>
        <para>Класс GUI — это интерфейс для графического интерфейса Unity с ручным позиционированием.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUI.backgroundColor">
      <summary>
        <para>Глобальный цвет оттенка для всех элементов фона, визуализируемых графическим интерфейсом.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUI.changed">
      <summary>
        <para>Возвращает true, если какие-либо элементы управления изменили значение входных данных.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUI.color">
      <summary>
        <para>Применяет глобальный оттенок к графическому интерфейсу. Оттенок влияет на фон и цвета текста.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUI.contentColor">
      <summary>
        <para>Цвет оттенка для всего текста, отображаемого графическим интерфейсом.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUI.depth">
      <summary>
        <para>Глубина сортировки текущего поведения GUI.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUI.enabled">
      <summary>
        <para>Включен ли графический интерфейс?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUI.matrix">
      <summary>
        <para>Матрица преобразования графического интерфейса.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUI.skin">
      <summary>
        <para>Используемый глобальный скин.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUI.tooltip">
      <summary>
        <para>Всплывающая подсказка элемента управления, над которым в данный момент находится мышь или который имеет фокус клавиатуры. (Только чтение).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUI.BeginGroup(UnityEngine.Rect)">
      <summary>
        <para>Начать группу. Должен совпадать с вызовом EndGroup.</para>
      </summary>
      <param name="position">Прямоугольник на экране для группы.</param>
      <param name="text">Текст для отображения в группе.</param>
      <param name="image">Текстура для отображения в группе.</param>
      <param name="content">Текст, изображение и всплывающая подсказка для этой группы. Если указано, любые щелчки мыши "захватываются" группой, а не. Если опущено, фон не отображается, а щелчки мыши передаются.</param>
      <param name="style">Стиль для фона.</param>
    </member>
    <member name="M:UnityEngine.GUI.BeginGroup(UnityEngine.Rect,System.String)">
      <summary>
        <para>Начать группу. Должен совпадать с вызовом EndGroup.</para>
      </summary>
      <param name="position">Прямоугольник на экране для группы.</param>
      <param name="text">Текст для отображения в группе.</param>
      <param name="image">Текстура для отображения в группе.</param>
      <param name="content">Текст, изображение и всплывающая подсказка для этой группы. Если указано, любые щелчки мыши "захватываются" группой, а не. Если опущено, фон не отображается, а щелчки мыши передаются.</param>
      <param name="style">Стиль для фона.</param>
    </member>
    <member name="M:UnityEngine.GUI.BeginGroup(UnityEngine.Rect,UnityEngine.Texture)">
      <summary>
        <para>Начать группу. Должен совпадать с вызовом EndGroup.</para>
      </summary>
      <param name="position">Прямоугольник на экране для группы.</param>
      <param name="text">Текст для отображения в группе.</param>
      <param name="image">Текстура для отображения в группе.</param>
      <param name="content">Текст, изображение и всплывающая подсказка для этой группы. Если указано, любые щелчки мыши "захватываются" группой, а не. Если опущено, фон не отображается, а щелчки мыши передаются.</param>
      <param name="style">Стиль для фона.</param>
    </member>
    <member name="M:UnityEngine.GUI.BeginGroup(UnityEngine.Rect,UnityEngine.GUIContent)">
      <summary>
        <para>Начать группу. Должен совпадать с вызовом EndGroup.</para>
      </summary>
      <param name="position">Прямоугольник на экране для группы.</param>
      <param name="text">Текст для отображения в группе.</param>
      <param name="image">Текстура для отображения в группе.</param>
      <param name="content">Текст, изображение и всплывающая подсказка для этой группы. Если указано, любые щелчки мыши "захватываются" группой, а не. Если опущено, фон не отображается, а щелчки мыши передаются.</param>
      <param name="style">Стиль для фона.</param>
    </member>
    <member name="M:UnityEngine.GUI.BeginGroup(UnityEngine.Rect,UnityEngine.GUIStyle)">
      <summary>
        <para>Начать группу. Должен совпадать с вызовом EndGroup.</para>
      </summary>
      <param name="position">Прямоугольник на экране для группы.</param>
      <param name="text">Текст для отображения в группе.</param>
      <param name="image">Текстура для отображения в группе.</param>
      <param name="content">Текст, изображение и всплывающая подсказка для этой группы. Если указано, любые щелчки мыши "захватываются" группой, а не. Если опущено, фон не отображается, а щелчки мыши передаются.</param>
      <param name="style">Стиль для фона.</param>
    </member>
    <member name="M:UnityEngine.GUI.BeginGroup(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Начать группу. Должен совпадать с вызовом EndGroup.</para>
      </summary>
      <param name="position">Прямоугольник на экране для группы.</param>
      <param name="text">Текст для отображения в группе.</param>
      <param name="image">Текстура для отображения в группе.</param>
      <param name="content">Текст, изображение и всплывающая подсказка для этой группы. Если указано, любые щелчки мыши "захватываются" группой, а не. Если опущено, фон не отображается, а щелчки мыши передаются.</param>
      <param name="style">Стиль для фона.</param>
    </member>
    <member name="M:UnityEngine.GUI.BeginGroup(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.GUIStyle)">
      <summary>
        <para>Начать группу. Должен совпадать с вызовом EndGroup.</para>
      </summary>
      <param name="position">Прямоугольник на экране для группы.</param>
      <param name="text">Текст для отображения в группе.</param>
      <param name="image">Текстура для отображения в группе.</param>
      <param name="content">Текст, изображение и всплывающая подсказка для этой группы. Если указано, любые щелчки мыши "захватываются" группой, а не. Если опущено, фон не отображается, а щелчки мыши передаются.</param>
      <param name="style">Стиль для фона.</param>
    </member>
    <member name="M:UnityEngine.GUI.BeginGroup(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Начать группу. Должен совпадать с вызовом EndGroup.</para>
      </summary>
      <param name="position">Прямоугольник на экране для группы.</param>
      <param name="text">Текст для отображения в группе.</param>
      <param name="image">Текстура для отображения в группе.</param>
      <param name="content">Текст, изображение и всплывающая подсказка для этой группы. Если указано, любые щелчки мыши "захватываются" группой, а не. Если опущено, фон не отображается, а щелчки мыши передаются.</param>
      <param name="style">Стиль для фона.</param>
    </member>
    <member name="M:UnityEngine.GUI.BeginScrollView(UnityEngine.Rect,UnityEngine.Vector2,UnityEngine.Rect)">
      <summary>
        <para>Начните просмотр с прокруткой в ​​графическом интерфейсе.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в ScrollView.</param>
      <param name="scrollPosition">Расстояние в пикселях, на которое представление прокручивается в направлениях X и Y.</param>
      <param name="viewRect">Прямоугольник, используемый внутри прокрутки.</param>
      <param name="horizontalScrollbar">Необязательный GUIStyle для горизонтальной полосы прокрутки. Если его не указать, используется стиль HorizontalScrollbar из текущего GUISkin.</param>
      <param name="verticalScrollbar">Необязательный GUIStyle для вертикальной полосы прокрутки. Если его не указать, используется стиль verticalScrollbar из текущей оболочки GUISkin.</param>
      <param name="alwaysShowHorizontal">Необязательный параметр, чтобы всегда отображать горизонтальную полосу прокрутки. Если значение равно false или не указано, оно отображается только в том случае, если viewRect шире, чем position.</param>
      <param name="alwaysShowVertical">Необязательный параметр, чтобы всегда отображать вертикальную полосу прокрутки. Если значение равно false или не указано, оно отображается только в том случае, если viewRect выше, чем position.</param>
      <returns>
        <para>Модифицированный scrollPosition. Передайте это обратно в переменную, которую вы передаете, как показано в примере.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.BeginScrollView(UnityEngine.Rect,UnityEngine.Vector2,UnityEngine.Rect,System.Boolean,System.Boolean)">
      <summary>
        <para>Начните просмотр с прокруткой в ​​графическом интерфейсе.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в ScrollView.</param>
      <param name="scrollPosition">Расстояние в пикселях, на которое представление прокручивается в направлениях X и Y.</param>
      <param name="viewRect">Прямоугольник, используемый внутри прокрутки.</param>
      <param name="horizontalScrollbar">Необязательный GUIStyle для горизонтальной полосы прокрутки. Если его не указать, используется стиль HorizontalScrollbar из текущего GUISkin.</param>
      <param name="verticalScrollbar">Необязательный GUIStyle для вертикальной полосы прокрутки. Если его не указать, используется стиль verticalScrollbar из текущей оболочки GUISkin.</param>
      <param name="alwaysShowHorizontal">Необязательный параметр, чтобы всегда отображать горизонтальную полосу прокрутки. Если значение равно false или не указано, оно отображается только в том случае, если viewRect шире, чем position.</param>
      <param name="alwaysShowVertical">Необязательный параметр, чтобы всегда отображать вертикальную полосу прокрутки. Если значение равно false или не указано, оно отображается только в том случае, если viewRect выше, чем position.</param>
      <returns>
        <para>Модифицированный scrollPosition. Передайте это обратно в переменную, которую вы передаете, как показано в примере.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.BeginScrollView(UnityEngine.Rect,UnityEngine.Vector2,UnityEngine.Rect,UnityEngine.GUIStyle,UnityEngine.GUIStyle)">
      <summary>
        <para>Начните просмотр с прокруткой в ​​графическом интерфейсе.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в ScrollView.</param>
      <param name="scrollPosition">Расстояние в пикселях, на которое представление прокручивается в направлениях X и Y.</param>
      <param name="viewRect">Прямоугольник, используемый внутри прокрутки.</param>
      <param name="horizontalScrollbar">Необязательный GUIStyle для горизонтальной полосы прокрутки. Если его не указать, используется стиль HorizontalScrollbar из текущего GUISkin.</param>
      <param name="verticalScrollbar">Необязательный GUIStyle для вертикальной полосы прокрутки. Если его не указать, используется стиль verticalScrollbar из текущей оболочки GUISkin.</param>
      <param name="alwaysShowHorizontal">Необязательный параметр, чтобы всегда отображать горизонтальную полосу прокрутки. Если значение равно false или не указано, оно отображается только в том случае, если viewRect шире, чем position.</param>
      <param name="alwaysShowVertical">Необязательный параметр, чтобы всегда отображать вертикальную полосу прокрутки. Если значение равно false или не указано, оно отображается только в том случае, если viewRect выше, чем position.</param>
      <returns>
        <para>Модифицированный scrollPosition. Передайте это обратно в переменную, которую вы передаете, как показано в примере.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.BeginScrollView(UnityEngine.Rect,UnityEngine.Vector2,UnityEngine.Rect,System.Boolean,System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUIStyle)">
      <summary>
        <para>Начните просмотр с прокруткой в ​​графическом интерфейсе.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в ScrollView.</param>
      <param name="scrollPosition">Расстояние в пикселях, на которое представление прокручивается в направлениях X и Y.</param>
      <param name="viewRect">Прямоугольник, используемый внутри прокрутки.</param>
      <param name="horizontalScrollbar">Необязательный GUIStyle для горизонтальной полосы прокрутки. Если его не указать, используется стиль HorizontalScrollbar из текущего GUISkin.</param>
      <param name="verticalScrollbar">Необязательный GUIStyle для вертикальной полосы прокрутки. Если его не указать, используется стиль verticalScrollbar из текущей оболочки GUISkin.</param>
      <param name="alwaysShowHorizontal">Необязательный параметр, чтобы всегда отображать горизонтальную полосу прокрутки. Если значение равно false или не указано, оно отображается только в том случае, если viewRect шире, чем position.</param>
      <param name="alwaysShowVertical">Необязательный параметр, чтобы всегда отображать вертикальную полосу прокрутки. Если значение равно false или не указано, оно отображается только в том случае, если viewRect выше, чем position.</param>
      <returns>
        <para>Модифицированный scrollPosition. Передайте это обратно в переменную, которую вы передаете, как показано в примере.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Box(UnityEngine.Rect,System.String)">
      <summary>
        <para>Создайте поле на слое GUI.</para>
      </summary>
      <param name="position">Прямоугольник на экране для окна.</param>
      <param name="text">Текст для отображения в поле.</param>
      <param name="image">Текстура для отображения на коробке.</param>
      <param name="content">Текст, изображение и всплывающая подсказка для этого поля.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль блока из текущего GUISkin.</param>
    </member>
    <member name="M:UnityEngine.GUI.Box(UnityEngine.Rect,UnityEngine.Texture)">
      <summary>
        <para>Создайте поле на слое GUI.</para>
      </summary>
      <param name="position">Прямоугольник на экране для окна.</param>
      <param name="text">Текст для отображения в поле.</param>
      <param name="image">Текстура для отображения на коробке.</param>
      <param name="content">Текст, изображение и всплывающая подсказка для этого поля.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль блока из текущего GUISkin.</param>
    </member>
    <member name="M:UnityEngine.GUI.Box(UnityEngine.Rect,UnityEngine.GUIContent)">
      <summary>
        <para>Создайте поле на слое GUI.</para>
      </summary>
      <param name="position">Прямоугольник на экране для окна.</param>
      <param name="text">Текст для отображения в поле.</param>
      <param name="image">Текстура для отображения на коробке.</param>
      <param name="content">Текст, изображение и всплывающая подсказка для этого поля.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль блока из текущего GUISkin.</param>
    </member>
    <member name="M:UnityEngine.GUI.Box(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Создайте поле на слое GUI.</para>
      </summary>
      <param name="position">Прямоугольник на экране для окна.</param>
      <param name="text">Текст для отображения в поле.</param>
      <param name="image">Текстура для отображения на коробке.</param>
      <param name="content">Текст, изображение и всплывающая подсказка для этого поля.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль блока из текущего GUISkin.</param>
    </member>
    <member name="M:UnityEngine.GUI.Box(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.GUIStyle)">
      <summary>
        <para>Создайте поле на слое GUI.</para>
      </summary>
      <param name="position">Прямоугольник на экране для окна.</param>
      <param name="text">Текст для отображения в поле.</param>
      <param name="image">Текстура для отображения на коробке.</param>
      <param name="content">Текст, изображение и всплывающая подсказка для этого поля.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль блока из текущего GUISkin.</param>
    </member>
    <member name="M:UnityEngine.GUI.Box(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Создайте поле на слое GUI.</para>
      </summary>
      <param name="position">Прямоугольник на экране для окна.</param>
      <param name="text">Текст для отображения в поле.</param>
      <param name="image">Текстура для отображения на коробке.</param>
      <param name="content">Текст, изображение и всплывающая подсказка для этого поля.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль блока из текущего GUISkin.</param>
    </member>
    <member name="M:UnityEngine.GUI.BringWindowToBack(System.Int32)">
      <summary>
        <para>Поместите определенное окно в конец плавающих окон.</para>
      </summary>
      <param name="windowID">Идентификатор, используемый при создании окна в вызове Window.</param>
    </member>
    <member name="M:UnityEngine.GUI.BringWindowToFront(System.Int32)">
      <summary>
        <para>Поместите определенное окно перед плавающими окнами.</para>
      </summary>
      <param name="windowID">Идентификатор, используемый при создании окна в вызове Window.</param>
    </member>
    <member name="M:UnityEngine.GUI.Button(UnityEngine.Rect,System.String)">
      <summary>
        <para>Сделайте одно нажатие кнопки. Пользователь нажимает на них, и сразу что-то происходит.</para>
      </summary>
      <param name="position">Прямоугольник на экране для кнопки.</param>
      <param name="text">Текст для отображения на кнопке.</param>
      <param name="image">Текстура для отображения на кнопке.</param>
      <param name="content">Текст, изображение и подсказка для этой кнопки.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <returns>
        <para>true, когда пользователи нажимают кнопку.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Button(UnityEngine.Rect,UnityEngine.Texture)">
      <summary>
        <para>Сделайте одно нажатие кнопки. Пользователь нажимает на них, и сразу что-то происходит.</para>
      </summary>
      <param name="position">Прямоугольник на экране для кнопки.</param>
      <param name="text">Текст для отображения на кнопке.</param>
      <param name="image">Текстура для отображения на кнопке.</param>
      <param name="content">Текст, изображение и подсказка для этой кнопки.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <returns>
        <para>true, когда пользователи нажимают кнопку.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Button(UnityEngine.Rect,UnityEngine.GUIContent)">
      <summary>
        <para>Сделайте одно нажатие кнопки. Пользователь нажимает на них, и сразу что-то происходит.</para>
      </summary>
      <param name="position">Прямоугольник на экране для кнопки.</param>
      <param name="text">Текст для отображения на кнопке.</param>
      <param name="image">Текстура для отображения на кнопке.</param>
      <param name="content">Текст, изображение и подсказка для этой кнопки.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <returns>
        <para>true, когда пользователи нажимают кнопку.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Button(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Сделайте одно нажатие кнопки. Пользователь нажимает на них, и сразу что-то происходит.</para>
      </summary>
      <param name="position">Прямоугольник на экране для кнопки.</param>
      <param name="text">Текст для отображения на кнопке.</param>
      <param name="image">Текстура для отображения на кнопке.</param>
      <param name="content">Текст, изображение и подсказка для этой кнопки.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <returns>
        <para>true, когда пользователи нажимают кнопку.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Button(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.GUIStyle)">
      <summary>
        <para>Сделайте одно нажатие кнопки. Пользователь нажимает на них, и сразу что-то происходит.</para>
      </summary>
      <param name="position">Прямоугольник на экране для кнопки.</param>
      <param name="text">Текст для отображения на кнопке.</param>
      <param name="image">Текстура для отображения на кнопке.</param>
      <param name="content">Текст, изображение и подсказка для этой кнопки.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <returns>
        <para>true, когда пользователи нажимают кнопку.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Button(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Сделайте одно нажатие кнопки. Пользователь нажимает на них, и сразу что-то происходит.</para>
      </summary>
      <param name="position">Прямоугольник на экране для кнопки.</param>
      <param name="text">Текст для отображения на кнопке.</param>
      <param name="image">Текстура для отображения на кнопке.</param>
      <param name="content">Текст, изображение и подсказка для этой кнопки.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <returns>
        <para>true, когда пользователи нажимают кнопку.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.DragWindow(UnityEngine.Rect)">
      <summary>
        <para>Сделать окно перетаскиваемым.</para>
      </summary>
      <param name="position">Часть окна, которую можно перетащить. Это обрезается до фактического окна.</param>
    </member>
    <member name="M:UnityEngine.GUI.DragWindow">
      <summary>
        <para>Если вы хотите, чтобы весь фон окна действовал как область перетаскивания, используйте версию DragWindow без параметров и поместите ее в конец оконной функции.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUI.DrawTexture(UnityEngine.Rect,UnityEngine.Texture)">
      <summary>
        <para>Нарисуйте текстуру внутри прямоугольника.</para>
      </summary>
      <param name="position">Прямоугольник на экране для рисования текстуры внутри.</param>
      <param name="image">Текстура для отображения.</param>
      <param name="scaleMode">Как масштабировать изображение, если его соотношение сторон не соответствует соотношению сторон, которое должно быть нарисовано внутри.</param>
      <param name="alphaBlend">Применять ли альфа-смешивание при рисовании изображения (по умолчанию включено).</param>
      <param name="imageAspect">Соотношение сторон, используемое для исходного изображения. Если 0 (по умолчанию), используется соотношение сторон изображения. Передайте w/h для желаемого соотношения сторон. Это позволяет регулировать соотношение сторон исходного изображения без изменения ширины и высоты в пикселях.</param>
    </member>
    <member name="M:UnityEngine.GUI.DrawTexture(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.ScaleMode)">
      <summary>
        <para>Нарисуйте текстуру внутри прямоугольника.</para>
      </summary>
      <param name="position">Прямоугольник на экране для рисования текстуры внутри.</param>
      <param name="image">Текстура для отображения.</param>
      <param name="scaleMode">Как масштабировать изображение, если его соотношение сторон не соответствует соотношению сторон, которое должно быть нарисовано внутри.</param>
      <param name="alphaBlend">Применять ли альфа-смешивание при рисовании изображения (по умолчанию включено).</param>
      <param name="imageAspect">Соотношение сторон, используемое для исходного изображения. Если 0 (по умолчанию), используется соотношение сторон изображения. Передайте w/h для желаемого соотношения сторон. Это позволяет регулировать соотношение сторон исходного изображения без изменения ширины и высоты в пикселях.</param>
    </member>
    <member name="M:UnityEngine.GUI.DrawTexture(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.ScaleMode,System.Boolean)">
      <summary>
        <para>Нарисуйте текстуру внутри прямоугольника.</para>
      </summary>
      <param name="position">Прямоугольник на экране для рисования текстуры внутри.</param>
      <param name="image">Текстура для отображения.</param>
      <param name="scaleMode">Как масштабировать изображение, если его соотношение сторон не соответствует соотношению сторон, которое должно быть нарисовано внутри.</param>
      <param name="alphaBlend">Применять ли альфа-смешивание при рисовании изображения (по умолчанию включено).</param>
      <param name="imageAspect">Соотношение сторон, используемое для исходного изображения. Если 0 (по умолчанию), используется соотношение сторон изображения. Передайте w/h для желаемого соотношения сторон. Это позволяет регулировать соотношение сторон исходного изображения без изменения ширины и высоты в пикселях.</param>
    </member>
    <member name="M:UnityEngine.GUI.DrawTexture(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.ScaleMode,System.Boolean,System.Single)">
      <summary>
        <para>Нарисуйте текстуру внутри прямоугольника.</para>
      </summary>
      <param name="position">Прямоугольник на экране для рисования текстуры внутри.</param>
      <param name="image">Текстура для отображения.</param>
      <param name="scaleMode">Как масштабировать изображение, если его соотношение сторон не соответствует соотношению сторон, которое должно быть нарисовано внутри.</param>
      <param name="alphaBlend">Применять ли альфа-смешивание при рисовании изображения (по умолчанию включено).</param>
      <param name="imageAspect">Соотношение сторон, используемое для исходного изображения. Если 0 (по умолчанию), используется соотношение сторон изображения. Передайте w/h для желаемого соотношения сторон. Это позволяет регулировать соотношение сторон исходного изображения без изменения ширины и высоты в пикселях.</param>
    </member>
    <member name="M:UnityEngine.GUI.DrawTexture(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.ScaleMode,System.Boolean,System.Single,UnityEngine.Color,System.Single,System.Single)">
      <summary>
        <para>Рисует границу с закругленными углами внутри прямоугольника. Текстура используется для создания рисунка границы. Обратите внимание, что этот метод работает только с моделью шейдеров 2.5 и выше.</para>
      </summary>
      <param name="position">Прямоугольник на экране для рисования текстуры внутри.</param>
      <param name="image">Текстура для отображения.</param>
      <param name="scaleMode">Как масштабировать изображение, если его соотношение сторон не соответствует соотношению сторон, которое должно быть нарисовано внутри.</param>
      <param name="alphaBlend">Применять ли альфа-смешивание при рисовании изображения (по умолчанию включено).</param>
      <param name="imageAspect">Соотношение сторон, используемое для исходного изображения. Если 0 (по умолчанию), используется соотношение сторон изображения. Передайте w/h для желаемого соотношения сторон. Это позволяет регулировать соотношение сторон исходного изображения без изменения ширины и высоты в пикселях.</param>
      <param name="color">Цвет оттенка, применяемый к текстуре.</param>
      <param name="borderWidth">Ширина границы. Если 0, то рисуется вся текстура.</param>
      <param name="borderWidths">Ширина границ (слева, сверху, справа и снизу). Если Vector4.zero, будет отрисована полная текстура.</param>
      <param name="borderRadius">Радиус для закругленных углов. Если 0, углы не будут скруглены.</param>
      <param name="borderRadiuses">Радиусы скругления углов (верхний левый, верхний правый, нижний правый и нижний левый). Если Vector4.zero, углы не будут скруглены.</param>
    </member>
    <member name="M:UnityEngine.GUI.DrawTexture(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.ScaleMode,System.Boolean,System.Single,UnityEngine.Color,UnityEngine.Vector4,System.Single)">
      <summary>
        <para>Рисует границу с закругленными углами внутри прямоугольника. Текстура используется для создания рисунка границы. Обратите внимание, что этот метод работает только с моделью шейдеров 2.5 и выше.</para>
      </summary>
      <param name="position">Прямоугольник на экране для рисования текстуры внутри.</param>
      <param name="image">Текстура для отображения.</param>
      <param name="scaleMode">Как масштабировать изображение, если его соотношение сторон не соответствует соотношению сторон, которое должно быть нарисовано внутри.</param>
      <param name="alphaBlend">Применять ли альфа-смешивание при рисовании изображения (по умолчанию включено).</param>
      <param name="imageAspect">Соотношение сторон, используемое для исходного изображения. Если 0 (по умолчанию), используется соотношение сторон изображения. Передайте w/h для желаемого соотношения сторон. Это позволяет регулировать соотношение сторон исходного изображения без изменения ширины и высоты в пикселях.</param>
      <param name="color">Цвет оттенка, применяемый к текстуре.</param>
      <param name="borderWidth">Ширина границы. Если 0, то рисуется вся текстура.</param>
      <param name="borderWidths">Ширина границ (слева, сверху, справа и снизу). Если Vector4.zero, будет отрисована полная текстура.</param>
      <param name="borderRadius">Радиус для закругленных углов. Если 0, углы не будут скруглены.</param>
      <param name="borderRadiuses">Радиусы скругления углов (верхний левый, верхний правый, нижний правый и нижний левый). Если Vector4.zero, углы не будут скруглены.</param>
    </member>
    <member name="M:UnityEngine.GUI.DrawTextureWithTexCoords(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.Rect)">
      <summary>
        <para>Нарисуйте текстуру внутри прямоугольника с заданными координатами текстуры.</para>
      </summary>
      <param name="position">Прямоугольник на экране для рисования текстуры внутри.</param>
      <param name="image">Текстура для отображения.</param>
      <param name="texCoords">Как масштабировать изображение, если его соотношение сторон не соответствует соотношению сторон, которое должно быть нарисовано внутри.</param>
      <param name="alphaBlend">Следует ли альфа-смешивать изображение с дисплеем (по умолчанию). Если false, изображение выводится на дисплей.</param>
    </member>
    <member name="M:UnityEngine.GUI.DrawTextureWithTexCoords(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.Rect,System.Boolean)">
      <summary>
        <para>Нарисуйте текстуру внутри прямоугольника с заданными координатами текстуры.</para>
      </summary>
      <param name="position">Прямоугольник на экране для рисования текстуры внутри.</param>
      <param name="image">Текстура для отображения.</param>
      <param name="texCoords">Как масштабировать изображение, если его соотношение сторон не соответствует соотношению сторон, которое должно быть нарисовано внутри.</param>
      <param name="alphaBlend">Следует ли альфа-смешивать изображение с дисплеем (по умолчанию). Если false, изображение выводится на дисплей.</param>
    </member>
    <member name="M:UnityEngine.GUI.EndGroup">
      <summary>
        <para>Завершить группу.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUI.EndScrollView">
      <summary>
        <para>Завершает прокрутку, начатую вызовом BeginScrollView.</para>
      </summary>
      <param name="handleScrollWheel">
      </param>
    </member>
    <member name="M:UnityEngine.GUI.EndScrollView(System.Boolean)">
      <summary>
        <para>Завершает прокрутку, начатую вызовом BeginScrollView.</para>
      </summary>
      <param name="handleScrollWheel">
      </param>
    </member>
    <member name="M:UnityEngine.GUI.FocusControl(System.String)">
      <summary>
        <para>Переместить фокус клавиатуры на именованный элемент управления.</para>
      </summary>
      <param name="name">Имя задается с помощью SetNextControlName.</param>
    </member>
    <member name="M:UnityEngine.GUI.FocusWindow(System.Int32)">
      <summary>
        <para>Сделать окно активным окном.</para>
      </summary>
      <param name="windowID">Идентификатор, используемый при создании окна в вызове Window.</param>
    </member>
    <member name="M:UnityEngine.GUI.GetNameOfFocusedControl">
      <summary>
        <para>Получите имя именованного элемента управления, имеющего фокус.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.GUI.GroupScope">
      <summary>
        <para>Одноразовый вспомогательный класс для управления BeginGroup/EndGroup.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUI.GroupScope.#ctor(UnityEngine.Rect)">
      <summary>
        <para>Создайте новую GroupScope и начните соответствующую группу.</para>
      </summary>
      <param name="position">Прямоугольник на экране для группы.</param>
      <param name="text">Текст для отображения в группе.</param>
      <param name="image">Текстура для отображения в группе.</param>
      <param name="content">Текст, изображение и всплывающая подсказка для этой группы. Если указано, любые щелчки мыши "захватываются" группой, а не. Если опущено, фон не отображается, а щелчки мыши передаются.</param>
      <param name="style">Стиль для фона.</param>
    </member>
    <member name="M:UnityEngine.GUI.GroupScope.#ctor(UnityEngine.Rect,System.String)">
      <summary>
        <para>Создайте новую GroupScope и начните соответствующую группу.</para>
      </summary>
      <param name="position">Прямоугольник на экране для группы.</param>
      <param name="text">Текст для отображения в группе.</param>
      <param name="image">Текстура для отображения в группе.</param>
      <param name="content">Текст, изображение и всплывающая подсказка для этой группы. Если указано, любые щелчки мыши "захватываются" группой, а не. Если опущено, фон не отображается, а щелчки мыши передаются.</param>
      <param name="style">Стиль для фона.</param>
    </member>
    <member name="M:UnityEngine.GUI.GroupScope.#ctor(UnityEngine.Rect,UnityEngine.Texture)">
      <summary>
        <para>Создайте новую GroupScope и начните соответствующую группу.</para>
      </summary>
      <param name="position">Прямоугольник на экране для группы.</param>
      <param name="text">Текст для отображения в группе.</param>
      <param name="image">Текстура для отображения в группе.</param>
      <param name="content">Текст, изображение и всплывающая подсказка для этой группы. Если указано, любые щелчки мыши "захватываются" группой, а не. Если опущено, фон не отображается, а щелчки мыши передаются.</param>
      <param name="style">Стиль для фона.</param>
    </member>
    <member name="M:UnityEngine.GUI.GroupScope.#ctor(UnityEngine.Rect,UnityEngine.GUIContent)">
      <summary>
        <para>Создайте новую GroupScope и начните соответствующую группу.</para>
      </summary>
      <param name="position">Прямоугольник на экране для группы.</param>
      <param name="text">Текст для отображения в группе.</param>
      <param name="image">Текстура для отображения в группе.</param>
      <param name="content">Текст, изображение и всплывающая подсказка для этой группы. Если указано, любые щелчки мыши "захватываются" группой, а не. Если опущено, фон не отображается, а щелчки мыши передаются.</param>
      <param name="style">Стиль для фона.</param>
    </member>
    <member name="M:UnityEngine.GUI.GroupScope.#ctor(UnityEngine.Rect,UnityEngine.GUIStyle)">
      <summary>
        <para>Создайте новую GroupScope и начните соответствующую группу.</para>
      </summary>
      <param name="position">Прямоугольник на экране для группы.</param>
      <param name="text">Текст для отображения в группе.</param>
      <param name="image">Текстура для отображения в группе.</param>
      <param name="content">Текст, изображение и всплывающая подсказка для этой группы. Если указано, любые щелчки мыши "захватываются" группой, а не. Если опущено, фон не отображается, а щелчки мыши передаются.</param>
      <param name="style">Стиль для фона.</param>
    </member>
    <member name="M:UnityEngine.GUI.GroupScope.#ctor(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Создайте новую GroupScope и начните соответствующую группу.</para>
      </summary>
      <param name="position">Прямоугольник на экране для группы.</param>
      <param name="text">Текст для отображения в группе.</param>
      <param name="image">Текстура для отображения в группе.</param>
      <param name="content">Текст, изображение и всплывающая подсказка для этой группы. Если указано, любые щелчки мыши "захватываются" группой, а не. Если опущено, фон не отображается, а щелчки мыши передаются.</param>
      <param name="style">Стиль для фона.</param>
    </member>
    <member name="M:UnityEngine.GUI.GroupScope.#ctor(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.GUIStyle)">
      <summary>
        <para>Создайте новую GroupScope и начните соответствующую группу.</para>
      </summary>
      <param name="position">Прямоугольник на экране для группы.</param>
      <param name="text">Текст для отображения в группе.</param>
      <param name="image">Текстура для отображения в группе.</param>
      <param name="content">Текст, изображение и всплывающая подсказка для этой группы. Если указано, любые щелчки мыши "захватываются" группой, а не. Если опущено, фон не отображается, а щелчки мыши передаются.</param>
      <param name="style">Стиль для фона.</param>
    </member>
    <member name="M:UnityEngine.GUI.HorizontalScrollbar(UnityEngine.Rect,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Сделать горизонтальную полосу прокрутки. Полосы прокрутки — это то, что вы используете для прокрутки документа. Скорее всего, вместо этого вы захотите использовать scrollViews.</para>
      </summary>
      <param name="position">Прямоугольник на экране для полосы прокрутки.</param>
      <param name="value">Позиция между min и max.</param>
      <param name="size">Сколько мы можем видеть?</param>
      <param name="leftValue">Значение в левом конце полосы прокрутки.</param>
      <param name="rightValue">Значение в правом конце полосы прокрутки.</param>
      <param name="style">Стиль, используемый для фона полосы прокрутки. Если его не указать, используется стиль HorizontalScrollbar из текущего GUISkin.</param>
      <returns>
        <para>Измененное значение. Пользователь может изменить это, перетащив полосу прокрутки или щелкнув стрелки в конце.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.HorizontalScrollbar(UnityEngine.Rect,System.Single,System.Single,System.Single,System.Single,UnityEngine.GUIStyle)">
      <summary>
        <para>Сделать горизонтальную полосу прокрутки. Полосы прокрутки — это то, что вы используете для прокрутки документа. Скорее всего, вместо этого вы захотите использовать scrollViews.</para>
      </summary>
      <param name="position">Прямоугольник на экране для полосы прокрутки.</param>
      <param name="value">Позиция между min и max.</param>
      <param name="size">Сколько мы можем видеть?</param>
      <param name="leftValue">Значение в левом конце полосы прокрутки.</param>
      <param name="rightValue">Значение в правом конце полосы прокрутки.</param>
      <param name="style">Стиль, используемый для фона полосы прокрутки. Если его не указать, используется стиль HorizontalScrollbar из текущего GUISkin.</param>
      <returns>
        <para>Измененное значение. Пользователь может изменить это, перетащив полосу прокрутки или щелкнув стрелки в конце.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.HorizontalSlider(UnityEngine.Rect,System.Single,System.Single,System.Single)">
      <summary>
        <para>Горизонтальный ползунок, который пользователь может перетаскивать, чтобы изменить значение между минимальным и максимальным значением.</para>
      </summary>
      <param name="position">Прямоугольник на экране для ползунка.</param>
      <param name="value">Значение, которое показывает ползунок. Это определяет положение перетаскиваемого бегунка.</param>
      <param name="leftValue">Значение на левом конце ползунка.</param>
      <param name="rightValue">Значение справа от ползунка.</param>
      <param name="slider">Стиль GUIStyle для отображения области перетаскивания. Если его не указать, используется стиль horizontalSlider из текущего GUISkin.</param>
      <param name="thumb">Стиль GUIStyle для отображения перетаскиваемого бегунка. Если его не указать, используется стиль horizontalSliderThumb из текущего GUISkin.</param>
      <returns>
        <para>Значение, установленное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.HorizontalSlider(UnityEngine.Rect,System.Single,System.Single,System.Single,UnityEngine.GUIStyle,UnityEngine.GUIStyle)">
      <summary>
        <para>Горизонтальный ползунок, который пользователь может перетаскивать, чтобы изменить значение между минимальным и максимальным значением.</para>
      </summary>
      <param name="position">Прямоугольник на экране для ползунка.</param>
      <param name="value">Значение, которое показывает ползунок. Это определяет положение перетаскиваемого бегунка.</param>
      <param name="leftValue">Значение на левом конце ползунка.</param>
      <param name="rightValue">Значение справа от ползунка.</param>
      <param name="slider">Стиль GUIStyle для отображения области перетаскивания. Если его не указать, используется стиль horizontalSlider из текущего GUISkin.</param>
      <param name="thumb">Стиль GUIStyle для отображения перетаскиваемого бегунка. Если его не указать, используется стиль horizontalSliderThumb из текущего GUISkin.</param>
      <returns>
        <para>Значение, установленное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Label(UnityEngine.Rect,System.String)">
      <summary>
        <para>Создайте текстовую или текстурную метку на экране.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве метки.</param>
      <param name="text">Текст для отображения на этикетке.</param>
      <param name="image">Текстура для отображения на этикетке.</param>
      <param name="content">Текст, изображение и подсказка для этого ярлыка.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль метки из текущего GUISkin.</param>
    </member>
    <member name="M:UnityEngine.GUI.Label(UnityEngine.Rect,UnityEngine.Texture)">
      <summary>
        <para>Создайте текстовую или текстурную метку на экране.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве метки.</param>
      <param name="text">Текст для отображения на этикетке.</param>
      <param name="image">Текстура для отображения на этикетке.</param>
      <param name="content">Текст, изображение и подсказка для этого ярлыка.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль метки из текущего GUISkin.</param>
    </member>
    <member name="M:UnityEngine.GUI.Label(UnityEngine.Rect,UnityEngine.GUIContent)">
      <summary>
        <para>Создайте текстовую или текстурную метку на экране.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве метки.</param>
      <param name="text">Текст для отображения на этикетке.</param>
      <param name="image">Текстура для отображения на этикетке.</param>
      <param name="content">Текст, изображение и подсказка для этого ярлыка.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль метки из текущего GUISkin.</param>
    </member>
    <member name="M:UnityEngine.GUI.Label(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Создайте текстовую или текстурную метку на экране.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве метки.</param>
      <param name="text">Текст для отображения на этикетке.</param>
      <param name="image">Текстура для отображения на этикетке.</param>
      <param name="content">Текст, изображение и подсказка для этого ярлыка.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль метки из текущего GUISkin.</param>
    </member>
    <member name="M:UnityEngine.GUI.Label(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.GUIStyle)">
      <summary>
        <para>Создайте текстовую или текстурную метку на экране.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве метки.</param>
      <param name="text">Текст для отображения на этикетке.</param>
      <param name="image">Текстура для отображения на этикетке.</param>
      <param name="content">Текст, изображение и подсказка для этого ярлыка.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль метки из текущего GUISkin.</param>
    </member>
    <member name="M:UnityEngine.GUI.Label(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Создайте текстовую или текстурную метку на экране.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве метки.</param>
      <param name="text">Текст для отображения на этикетке.</param>
      <param name="image">Текстура для отображения на этикетке.</param>
      <param name="content">Текст, изображение и подсказка для этого ярлыка.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль метки из текущего GUISkin.</param>
    </member>
    <member name="M:UnityEngine.GUI.ModalWindow">
      <summary>
        <para>Показать модальное окно.</para>
      </summary>
      <param name="id">Уникальный идентификационный номер.</param>
      <param name="clientRect">Положение и размер окна.</param>
      <param name="func">Функция, которая содержит код GUI непосредственного режима для отображения содержимого вашего окна.</param>
      <param name="text">Текст, который будет отображаться в области заголовка окна, если таковой имеется.</param>
      <param name="image">Изображение, которое будет отображаться в строке заголовка окна, если таковое имеется.</param>
      <param name="content">GUIContent для отображения в строке заголовка окна, если таковая имеется.</param>
      <param name="style">Стиль для применения к окну.</param>
    </member>
    <member name="M:UnityEngine.GUI.ModalWindow(System.Int32,UnityEngine.Rect,UnityEngine.GUI/WindowFunction,System.String)">
      <summary>
        <para>Показать модальное окно.</para>
      </summary>
      <param name="id">Уникальный идентификационный номер.</param>
      <param name="clientRect">Положение и размер окна.</param>
      <param name="func">Функция, которая содержит код GUI непосредственного режима для отображения содержимого вашего окна.</param>
      <param name="text">Текст, который будет отображаться в области заголовка окна, если таковой имеется.</param>
      <param name="image">Изображение, которое будет отображаться в строке заголовка окна, если таковое имеется.</param>
      <param name="content">GUIContent для отображения в строке заголовка окна, если таковая имеется.</param>
      <param name="style">Стиль для применения к окну.</param>
    </member>
    <member name="M:UnityEngine.GUI.ModalWindow(System.Int32,UnityEngine.Rect,UnityEngine.GUI/WindowFunction,UnityEngine.Texture)">
      <summary>
        <para>Показать модальное окно.</para>
      </summary>
      <param name="id">Уникальный идентификационный номер.</param>
      <param name="clientRect">Положение и размер окна.</param>
      <param name="func">Функция, которая содержит код GUI непосредственного режима для отображения содержимого вашего окна.</param>
      <param name="text">Текст, который будет отображаться в области заголовка окна, если таковой имеется.</param>
      <param name="image">Изображение, которое будет отображаться в строке заголовка окна, если таковое имеется.</param>
      <param name="content">GUIContent для отображения в строке заголовка окна, если таковая имеется.</param>
      <param name="style">Стиль для применения к окну.</param>
    </member>
    <member name="M:UnityEngine.GUI.ModalWindow(System.Int32,UnityEngine.Rect,UnityEngine.GUI/WindowFunction,UnityEngine.GUIContent)">
      <summary>
        <para>Показать модальное окно.</para>
      </summary>
      <param name="id">Уникальный идентификационный номер.</param>
      <param name="clientRect">Положение и размер окна.</param>
      <param name="func">Функция, которая содержит код GUI непосредственного режима для отображения содержимого вашего окна.</param>
      <param name="text">Текст, который будет отображаться в области заголовка окна, если таковой имеется.</param>
      <param name="image">Изображение, которое будет отображаться в строке заголовка окна, если таковое имеется.</param>
      <param name="content">GUIContent для отображения в строке заголовка окна, если таковая имеется.</param>
      <param name="style">Стиль для применения к окну.</param>
    </member>
    <member name="M:UnityEngine.GUI.ModalWindow(System.Int32,UnityEngine.Rect,UnityEngine.GUI/WindowFunction,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Показать модальное окно.</para>
      </summary>
      <param name="id">Уникальный идентификационный номер.</param>
      <param name="clientRect">Положение и размер окна.</param>
      <param name="func">Функция, которая содержит код GUI непосредственного режима для отображения содержимого вашего окна.</param>
      <param name="text">Текст, который будет отображаться в области заголовка окна, если таковой имеется.</param>
      <param name="image">Изображение, которое будет отображаться в строке заголовка окна, если таковое имеется.</param>
      <param name="content">GUIContent для отображения в строке заголовка окна, если таковая имеется.</param>
      <param name="style">Стиль для применения к окну.</param>
    </member>
    <member name="M:UnityEngine.GUI.ModalWindow(System.Int32,UnityEngine.Rect,UnityEngine.GUI/WindowFunction,UnityEngine.Texture,UnityEngine.GUIStyle)">
      <summary>
        <para>Показать модальное окно.</para>
      </summary>
      <param name="id">Уникальный идентификационный номер.</param>
      <param name="clientRect">Положение и размер окна.</param>
      <param name="func">Функция, которая содержит код GUI непосредственного режима для отображения содержимого вашего окна.</param>
      <param name="text">Текст, который будет отображаться в области заголовка окна, если таковой имеется.</param>
      <param name="image">Изображение, которое будет отображаться в строке заголовка окна, если таковое имеется.</param>
      <param name="content">GUIContent для отображения в строке заголовка окна, если таковая имеется.</param>
      <param name="style">Стиль для применения к окну.</param>
    </member>
    <member name="M:UnityEngine.GUI.ModalWindow(System.Int32,UnityEngine.Rect,UnityEngine.GUI/WindowFunction,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Показать модальное окно.</para>
      </summary>
      <param name="id">Уникальный идентификационный номер.</param>
      <param name="clientRect">Положение и размер окна.</param>
      <param name="func">Функция, которая содержит код GUI непосредственного режима для отображения содержимого вашего окна.</param>
      <param name="text">Текст, который будет отображаться в области заголовка окна, если таковой имеется.</param>
      <param name="image">Изображение, которое будет отображаться в строке заголовка окна, если таковое имеется.</param>
      <param name="content">GUIContent для отображения в строке заголовка окна, если таковая имеется.</param>
      <param name="style">Стиль для применения к окну.</param>
    </member>
    <member name="M:UnityEngine.GUI.ModalWindow">
      <summary>
        <para>Показать модальное окно.</para>
      </summary>
      <param name="id">Уникальный идентификационный номер.</param>
      <param name="clientRect">Положение и размер окна.</param>
      <param name="func">Функция, которая содержит код GUI непосредственного режима для отображения содержимого вашего окна.</param>
      <param name="text">Текст, который будет отображаться в области заголовка окна, если таковой имеется.</param>
      <param name="image">Изображение, которое будет отображаться в строке заголовка окна, если таковое имеется.</param>
      <param name="content">GUIContent для отображения в строке заголовка окна, если таковая имеется.</param>
      <param name="style">Стиль для применения к окну.</param>
    </member>
    <member name="M:UnityEngine.GUI.PasswordField(UnityEngine.Rect,System.String,System.Char)">
      <summary>
        <para>Создайте текстовое поле, в которое пользователь может ввести пароль.</para>
      </summary>
      <param name="position">Прямоугольник на экране для текстового поля.</param>
      <param name="password">Пароль для редактирования. Возвращаемое значение этой функции должно быть возвращено в строку, как показано в примере.</param>
      <param name="maskChar">Символ для маскировки пароля.</param>
      <param name="maxLength">Максимальная длина строки. Если его не указать, пользователь может печатать вечно.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль textField из текущей оболочки GUISkin.</param>
      <returns>
        <para>Отредактированный пароль.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.PasswordField(UnityEngine.Rect,System.String,System.Char,System.Int32)">
      <summary>
        <para>Создайте текстовое поле, в которое пользователь может ввести пароль.</para>
      </summary>
      <param name="position">Прямоугольник на экране для текстового поля.</param>
      <param name="password">Пароль для редактирования. Возвращаемое значение этой функции должно быть возвращено в строку, как показано в примере.</param>
      <param name="maskChar">Символ для маскировки пароля.</param>
      <param name="maxLength">Максимальная длина строки. Если его не указать, пользователь может печатать вечно.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль textField из текущей оболочки GUISkin.</param>
      <returns>
        <para>Отредактированный пароль.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.PasswordField(UnityEngine.Rect,System.String,System.Char,UnityEngine.GUIStyle)">
      <summary>
        <para>Создайте текстовое поле, в которое пользователь может ввести пароль.</para>
      </summary>
      <param name="position">Прямоугольник на экране для текстового поля.</param>
      <param name="password">Пароль для редактирования. Возвращаемое значение этой функции должно быть возвращено в строку, как показано в примере.</param>
      <param name="maskChar">Символ для маскировки пароля.</param>
      <param name="maxLength">Максимальная длина строки. Если его не указать, пользователь может печатать вечно.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль textField из текущей оболочки GUISkin.</param>
      <returns>
        <para>Отредактированный пароль.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.PasswordField(UnityEngine.Rect,System.String,System.Char,System.Int32,UnityEngine.GUIStyle)">
      <summary>
        <para>Создайте текстовое поле, в которое пользователь может ввести пароль.</para>
      </summary>
      <param name="position">Прямоугольник на экране для текстового поля.</param>
      <param name="password">Пароль для редактирования. Возвращаемое значение этой функции должно быть возвращено в строку, как показано в примере.</param>
      <param name="maskChar">Символ для маскировки пароля.</param>
      <param name="maxLength">Максимальная длина строки. Если его не указать, пользователь может печатать вечно.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль textField из текущей оболочки GUISkin.</param>
      <returns>
        <para>Отредактированный пароль.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.RepeatButton(UnityEngine.Rect,System.String)">
      <summary>
        <para>Сделайте кнопку активной, пока пользователь держит ее нажатой.</para>
      </summary>
      <param name="position">Прямоугольник на экране для кнопки.</param>
      <param name="text">Текст для отображения на кнопке.</param>
      <param name="image">Текстура для отображения на кнопке.</param>
      <param name="content">Текст, изображение и подсказка для этой кнопки.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <returns>
        <para>Истинно, когда пользователи нажимают кнопку.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.RepeatButton(UnityEngine.Rect,UnityEngine.Texture)">
      <summary>
        <para>Сделайте кнопку активной, пока пользователь держит ее нажатой.</para>
      </summary>
      <param name="position">Прямоугольник на экране для кнопки.</param>
      <param name="text">Текст для отображения на кнопке.</param>
      <param name="image">Текстура для отображения на кнопке.</param>
      <param name="content">Текст, изображение и подсказка для этой кнопки.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <returns>
        <para>Истинно, когда пользователи нажимают кнопку.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.RepeatButton(UnityEngine.Rect,UnityEngine.GUIContent)">
      <summary>
        <para>Сделайте кнопку активной, пока пользователь держит ее нажатой.</para>
      </summary>
      <param name="position">Прямоугольник на экране для кнопки.</param>
      <param name="text">Текст для отображения на кнопке.</param>
      <param name="image">Текстура для отображения на кнопке.</param>
      <param name="content">Текст, изображение и подсказка для этой кнопки.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <returns>
        <para>Истинно, когда пользователи нажимают кнопку.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.RepeatButton(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Сделайте кнопку активной, пока пользователь держит ее нажатой.</para>
      </summary>
      <param name="position">Прямоугольник на экране для кнопки.</param>
      <param name="text">Текст для отображения на кнопке.</param>
      <param name="image">Текстура для отображения на кнопке.</param>
      <param name="content">Текст, изображение и подсказка для этой кнопки.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <returns>
        <para>Истинно, когда пользователи нажимают кнопку.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.RepeatButton(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.GUIStyle)">
      <summary>
        <para>Сделайте кнопку активной, пока пользователь держит ее нажатой.</para>
      </summary>
      <param name="position">Прямоугольник на экране для кнопки.</param>
      <param name="text">Текст для отображения на кнопке.</param>
      <param name="image">Текстура для отображения на кнопке.</param>
      <param name="content">Текст, изображение и подсказка для этой кнопки.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <returns>
        <para>Истинно, когда пользователи нажимают кнопку.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.RepeatButton(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Сделайте кнопку активной, пока пользователь держит ее нажатой.</para>
      </summary>
      <param name="position">Прямоугольник на экране для кнопки.</param>
      <param name="text">Текст для отображения на кнопке.</param>
      <param name="image">Текстура для отображения на кнопке.</param>
      <param name="content">Текст, изображение и подсказка для этой кнопки.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <returns>
        <para>Истинно, когда пользователи нажимают кнопку.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.ScrollTo(UnityEngine.Rect)">
      <summary>
        <para>Прокручивает все вложенные окна прокрутки, чтобы они пытались сделать позицию видимой.</para>
      </summary>
      <param name="position">
      </param>
    </member>
    <member name="T:UnityEngine.GUI.ScrollViewScope">
      <summary>
        <para>Одноразовый вспомогательный класс для управления BeginScrollView/EndScrollView.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUI.ScrollViewScope.handleScrollWheel">
      <summary>
        <para>Должен ли этот ScrollView обрабатывать события колеса прокрутки. (по умолчанию: правда).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUI.ScrollViewScope.scrollPosition">
      <summary>
        <para>Модифицированный scrollPosition. Передайте это обратно в переменную, которую вы передаете, как показано в примере.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUI.ScrollViewScope.#ctor(UnityEngine.Rect,UnityEngine.Vector2,UnityEngine.Rect)">
      <summary>
        <para>Создайте новый ScrollViewScope и запустите соответствующий ScrollView.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в ScrollView.</param>
      <param name="scrollPosition">Расстояние в пикселях, на которое представление прокручивается в направлениях X и Y.</param>
      <param name="viewRect">Прямоугольник, используемый внутри прокрутки.</param>
      <param name="alwaysShowHorizontal">Необязательный параметр, чтобы всегда отображать горизонтальную полосу прокрутки. Если false или опущено, оно отображается только в том случае, если clientRect шире, чем position.</param>
      <param name="alwaysShowVertical">Необязательный параметр, чтобы всегда отображать вертикальную полосу прокрутки. Если false или опущено, оно отображается только в том случае, если clientRect выше position.</param>
      <param name="horizontalScrollbar">Необязательный GUIStyle для горизонтальной полосы прокрутки. Если его не указать, используется стиль HorizontalScrollbar из текущего GUISkin.</param>
      <param name="verticalScrollbar">Необязательный GUIStyle для вертикальной полосы прокрутки. Если его не указать, используется стиль verticalScrollbar из текущей оболочки GUISkin.</param>
    </member>
    <member name="M:UnityEngine.GUI.ScrollViewScope.#ctor(UnityEngine.Rect,UnityEngine.Vector2,UnityEngine.Rect,System.Boolean,System.Boolean)">
      <summary>
        <para>Создайте новый ScrollViewScope и запустите соответствующий ScrollView.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в ScrollView.</param>
      <param name="scrollPosition">Расстояние в пикселях, на которое представление прокручивается в направлениях X и Y.</param>
      <param name="viewRect">Прямоугольник, используемый внутри прокрутки.</param>
      <param name="alwaysShowHorizontal">Необязательный параметр, чтобы всегда отображать горизонтальную полосу прокрутки. Если false или опущено, оно отображается только в том случае, если clientRect шире, чем position.</param>
      <param name="alwaysShowVertical">Необязательный параметр, чтобы всегда отображать вертикальную полосу прокрутки. Если false или опущено, оно отображается только в том случае, если clientRect выше position.</param>
      <param name="horizontalScrollbar">Необязательный GUIStyle для горизонтальной полосы прокрутки. Если его не указать, используется стиль HorizontalScrollbar из текущего GUISkin.</param>
      <param name="verticalScrollbar">Необязательный GUIStyle для вертикальной полосы прокрутки. Если его не указать, используется стиль verticalScrollbar из текущей оболочки GUISkin.</param>
    </member>
    <member name="M:UnityEngine.GUI.ScrollViewScope.#ctor(UnityEngine.Rect,UnityEngine.Vector2,UnityEngine.Rect,UnityEngine.GUIStyle,UnityEngine.GUIStyle)">
      <summary>
        <para>Создайте новый ScrollViewScope и запустите соответствующий ScrollView.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в ScrollView.</param>
      <param name="scrollPosition">Расстояние в пикселях, на которое представление прокручивается в направлениях X и Y.</param>
      <param name="viewRect">Прямоугольник, используемый внутри прокрутки.</param>
      <param name="alwaysShowHorizontal">Необязательный параметр, чтобы всегда отображать горизонтальную полосу прокрутки. Если false или опущено, оно отображается только в том случае, если clientRect шире, чем position.</param>
      <param name="alwaysShowVertical">Необязательный параметр, чтобы всегда отображать вертикальную полосу прокрутки. Если false или опущено, оно отображается только в том случае, если clientRect выше position.</param>
      <param name="horizontalScrollbar">Необязательный GUIStyle для горизонтальной полосы прокрутки. Если его не указать, используется стиль HorizontalScrollbar из текущего GUISkin.</param>
      <param name="verticalScrollbar">Необязательный GUIStyle для вертикальной полосы прокрутки. Если его не указать, используется стиль verticalScrollbar из текущей оболочки GUISkin.</param>
    </member>
    <member name="M:UnityEngine.GUI.ScrollViewScope.#ctor(UnityEngine.Rect,UnityEngine.Vector2,UnityEngine.Rect,System.Boolean,System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUIStyle)">
      <summary>
        <para>Создайте новый ScrollViewScope и запустите соответствующий ScrollView.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в ScrollView.</param>
      <param name="scrollPosition">Расстояние в пикселях, на которое представление прокручивается в направлениях X и Y.</param>
      <param name="viewRect">Прямоугольник, используемый внутри прокрутки.</param>
      <param name="alwaysShowHorizontal">Необязательный параметр, чтобы всегда отображать горизонтальную полосу прокрутки. Если false или опущено, оно отображается только в том случае, если clientRect шире, чем position.</param>
      <param name="alwaysShowVertical">Необязательный параметр, чтобы всегда отображать вертикальную полосу прокрутки. Если false или опущено, оно отображается только в том случае, если clientRect выше position.</param>
      <param name="horizontalScrollbar">Необязательный GUIStyle для горизонтальной полосы прокрутки. Если его не указать, используется стиль HorizontalScrollbar из текущего GUISkin.</param>
      <param name="verticalScrollbar">Необязательный GUIStyle для вертикальной полосы прокрутки. Если его не указать, используется стиль verticalScrollbar из текущей оболочки GUISkin.</param>
    </member>
    <member name="M:UnityEngine.GUI.SelectionGrid(UnityEngine.Rect,System.Int32,System.String[],System.Int32)">
      <summary>
        <para>Создайте сетку из кнопок.</para>
      </summary>
      <param name="position">Прямоугольник на экране для сетки.</param>
      <param name="selected">Индекс выбранной кнопки сетки.</param>
      <param name="texts">Массив строк для отображения на кнопках сетки.</param>
      <param name="images">Массив текстур на кнопках сетки.</param>
      <param name="contents">Массив текста, изображения и всплывающих подсказок для кнопки сетки.</param>
      <param name="xCount">Сколько элементов уместить в горизонтальном направлении. Элементы управления будут масштабироваться по размеру, если стиль не определяет используемую фиксированную ширину.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <param name="content">
      </param>
      <returns>
        <para>Индекс выбранной кнопки.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.SelectionGrid(UnityEngine.Rect,System.Int32,UnityEngine.Texture[],System.Int32)">
      <summary>
        <para>Создайте сетку из кнопок.</para>
      </summary>
      <param name="position">Прямоугольник на экране для сетки.</param>
      <param name="selected">Индекс выбранной кнопки сетки.</param>
      <param name="texts">Массив строк для отображения на кнопках сетки.</param>
      <param name="images">Массив текстур на кнопках сетки.</param>
      <param name="contents">Массив текста, изображения и всплывающих подсказок для кнопки сетки.</param>
      <param name="xCount">Сколько элементов уместить в горизонтальном направлении. Элементы управления будут масштабироваться по размеру, если стиль не определяет используемую фиксированную ширину.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <param name="content">
      </param>
      <returns>
        <para>Индекс выбранной кнопки.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.SelectionGrid(UnityEngine.Rect,System.Int32,UnityEngine.GUIContent[],System.Int32)">
      <summary>
        <para>Создайте сетку из кнопок.</para>
      </summary>
      <param name="position">Прямоугольник на экране для сетки.</param>
      <param name="selected">Индекс выбранной кнопки сетки.</param>
      <param name="texts">Массив строк для отображения на кнопках сетки.</param>
      <param name="images">Массив текстур на кнопках сетки.</param>
      <param name="contents">Массив текста, изображения и всплывающих подсказок для кнопки сетки.</param>
      <param name="xCount">Сколько элементов уместить в горизонтальном направлении. Элементы управления будут масштабироваться по размеру, если стиль не определяет используемую фиксированную ширину.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <param name="content">
      </param>
      <returns>
        <para>Индекс выбранной кнопки.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.SelectionGrid(UnityEngine.Rect,System.Int32,System.String[],System.Int32,UnityEngine.GUIStyle)">
      <summary>
        <para>Создайте сетку из кнопок.</para>
      </summary>
      <param name="position">Прямоугольник на экране для сетки.</param>
      <param name="selected">Индекс выбранной кнопки сетки.</param>
      <param name="texts">Массив строк для отображения на кнопках сетки.</param>
      <param name="images">Массив текстур на кнопках сетки.</param>
      <param name="contents">Массив текста, изображения и всплывающих подсказок для кнопки сетки.</param>
      <param name="xCount">Сколько элементов уместить в горизонтальном направлении. Элементы управления будут масштабироваться по размеру, если стиль не определяет используемую фиксированную ширину.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <param name="content">
      </param>
      <returns>
        <para>Индекс выбранной кнопки.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.SelectionGrid(UnityEngine.Rect,System.Int32,UnityEngine.Texture[],System.Int32,UnityEngine.GUIStyle)">
      <summary>
        <para>Создайте сетку из кнопок.</para>
      </summary>
      <param name="position">Прямоугольник на экране для сетки.</param>
      <param name="selected">Индекс выбранной кнопки сетки.</param>
      <param name="texts">Массив строк для отображения на кнопках сетки.</param>
      <param name="images">Массив текстур на кнопках сетки.</param>
      <param name="contents">Массив текста, изображения и всплывающих подсказок для кнопки сетки.</param>
      <param name="xCount">Сколько элементов уместить в горизонтальном направлении. Элементы управления будут масштабироваться по размеру, если стиль не определяет используемую фиксированную ширину.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <param name="content">
      </param>
      <returns>
        <para>Индекс выбранной кнопки.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.SelectionGrid(UnityEngine.Rect,System.Int32,UnityEngine.GUIContent[],System.Int32,UnityEngine.GUIStyle)">
      <summary>
        <para>Создайте сетку из кнопок.</para>
      </summary>
      <param name="position">Прямоугольник на экране для сетки.</param>
      <param name="selected">Индекс выбранной кнопки сетки.</param>
      <param name="texts">Массив строк для отображения на кнопках сетки.</param>
      <param name="images">Массив текстур на кнопках сетки.</param>
      <param name="contents">Массив текста, изображения и всплывающих подсказок для кнопки сетки.</param>
      <param name="xCount">Сколько элементов уместить в горизонтальном направлении. Элементы управления будут масштабироваться по размеру, если стиль не определяет используемую фиксированную ширину.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <param name="content">
      </param>
      <returns>
        <para>Индекс выбранной кнопки.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.SetNextControlName(System.String)">
      <summary>
        <para>Установите имя следующего элемента управления.</para>
      </summary>
      <param name="name">
      </param>
    </member>
    <member name="M:UnityEngine.GUI.TextArea(UnityEngine.Rect,System.String)">
      <summary>
        <para>Создайте многострочную текстовую область, в которой пользователь может редактировать строку.</para>
      </summary>
      <param name="position">Прямоугольник на экране для текстового поля.</param>
      <param name="text">Текст для редактирования. Возвращаемое значение этой функции должно быть возвращено в строку, как показано в примере.</param>
      <param name="maxLength">Максимальная длина строки. Если его не указать, пользователь может печатать вечно.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль textArea из текущего GUISkin.</param>
      <returns>
        <para>Отредактированная строка.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.TextArea(UnityEngine.Rect,System.String,System.Int32)">
      <summary>
        <para>Создайте многострочную текстовую область, в которой пользователь может редактировать строку.</para>
      </summary>
      <param name="position">Прямоугольник на экране для текстового поля.</param>
      <param name="text">Текст для редактирования. Возвращаемое значение этой функции должно быть возвращено в строку, как показано в примере.</param>
      <param name="maxLength">Максимальная длина строки. Если его не указать, пользователь может печатать вечно.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль textArea из текущего GUISkin.</param>
      <returns>
        <para>Отредактированная строка.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.TextArea(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Создайте многострочную текстовую область, в которой пользователь может редактировать строку.</para>
      </summary>
      <param name="position">Прямоугольник на экране для текстового поля.</param>
      <param name="text">Текст для редактирования. Возвращаемое значение этой функции должно быть возвращено в строку, как показано в примере.</param>
      <param name="maxLength">Максимальная длина строки. Если его не указать, пользователь может печатать вечно.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль textArea из текущего GUISkin.</param>
      <returns>
        <para>Отредактированная строка.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.TextArea(UnityEngine.Rect,System.String,System.Int32,UnityEngine.GUIStyle)">
      <summary>
        <para>Создайте многострочную текстовую область, в которой пользователь может редактировать строку.</para>
      </summary>
      <param name="position">Прямоугольник на экране для текстового поля.</param>
      <param name="text">Текст для редактирования. Возвращаемое значение этой функции должно быть возвращено в строку, как показано в примере.</param>
      <param name="maxLength">Максимальная длина строки. Если его не указать, пользователь может печатать вечно.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль textArea из текущего GUISkin.</param>
      <returns>
        <para>Отредактированная строка.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.TextField(UnityEngine.Rect,System.String)">
      <summary>
        <para>Создайте однострочное текстовое поле, в котором пользователь может редактировать строку.</para>
      </summary>
      <param name="position">Прямоугольник на экране для текстового поля.</param>
      <param name="text">Текст для редактирования. Возвращаемое значение этой функции должно быть возвращено в строку, как показано в примере.</param>
      <param name="maxLength">Максимальная длина строки. Если его не указать, пользователь может печатать вечно.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль textField из текущей оболочки GUISkin.</param>
      <returns>
        <para>Отредактированная строка.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.TextField(UnityEngine.Rect,System.String,System.Int32)">
      <summary>
        <para>Создайте однострочное текстовое поле, в котором пользователь может редактировать строку.</para>
      </summary>
      <param name="position">Прямоугольник на экране для текстового поля.</param>
      <param name="text">Текст для редактирования. Возвращаемое значение этой функции должно быть возвращено в строку, как показано в примере.</param>
      <param name="maxLength">Максимальная длина строки. Если его не указать, пользователь может печатать вечно.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль textField из текущей оболочки GUISkin.</param>
      <returns>
        <para>Отредактированная строка.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.TextField(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Создайте однострочное текстовое поле, в котором пользователь может редактировать строку.</para>
      </summary>
      <param name="position">Прямоугольник на экране для текстового поля.</param>
      <param name="text">Текст для редактирования. Возвращаемое значение этой функции должно быть возвращено в строку, как показано в примере.</param>
      <param name="maxLength">Максимальная длина строки. Если его не указать, пользователь может печатать вечно.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль textField из текущей оболочки GUISkin.</param>
      <returns>
        <para>Отредактированная строка.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.TextField(UnityEngine.Rect,System.String,System.Int32,UnityEngine.GUIStyle)">
      <summary>
        <para>Создайте однострочное текстовое поле, в котором пользователь может редактировать строку.</para>
      </summary>
      <param name="position">Прямоугольник на экране для текстового поля.</param>
      <param name="text">Текст для редактирования. Возвращаемое значение этой функции должно быть возвращено в строку, как показано в примере.</param>
      <param name="maxLength">Максимальная длина строки. Если его не указать, пользователь может печатать вечно.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль textField из текущей оболочки GUISkin.</param>
      <returns>
        <para>Отредактированная строка.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Toggle(UnityEngine.Rect,System.Boolean,System.String)">
      <summary>
        <para>Сделайте кнопку включения/выключения.</para>
      </summary>
      <param name="position">Прямоугольник на экране для кнопки.</param>
      <param name="value">Эта кнопка включена или выключена?</param>
      <param name="text">Текст для отображения на кнопке.</param>
      <param name="image">Текстура для отображения на кнопке.</param>
      <param name="content">Текст, изображение и подсказка для этой кнопки.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль переключения из текущего GUISkin.</param>
      <returns>
        <para>Новое значение кнопки.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Toggle(UnityEngine.Rect,System.Boolean,UnityEngine.Texture)">
      <summary>
        <para>Сделайте кнопку включения/выключения.</para>
      </summary>
      <param name="position">Прямоугольник на экране для кнопки.</param>
      <param name="value">Эта кнопка включена или выключена?</param>
      <param name="text">Текст для отображения на кнопке.</param>
      <param name="image">Текстура для отображения на кнопке.</param>
      <param name="content">Текст, изображение и подсказка для этой кнопки.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль переключения из текущего GUISkin.</param>
      <returns>
        <para>Новое значение кнопки.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Toggle(UnityEngine.Rect,System.Boolean,UnityEngine.GUIContent)">
      <summary>
        <para>Сделайте кнопку включения/выключения.</para>
      </summary>
      <param name="position">Прямоугольник на экране для кнопки.</param>
      <param name="value">Эта кнопка включена или выключена?</param>
      <param name="text">Текст для отображения на кнопке.</param>
      <param name="image">Текстура для отображения на кнопке.</param>
      <param name="content">Текст, изображение и подсказка для этой кнопки.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль переключения из текущего GUISkin.</param>
      <returns>
        <para>Новое значение кнопки.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Toggle(UnityEngine.Rect,System.Boolean,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Сделайте кнопку включения/выключения.</para>
      </summary>
      <param name="position">Прямоугольник на экране для кнопки.</param>
      <param name="value">Эта кнопка включена или выключена?</param>
      <param name="text">Текст для отображения на кнопке.</param>
      <param name="image">Текстура для отображения на кнопке.</param>
      <param name="content">Текст, изображение и подсказка для этой кнопки.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль переключения из текущего GUISkin.</param>
      <returns>
        <para>Новое значение кнопки.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Toggle(UnityEngine.Rect,System.Boolean,UnityEngine.Texture,UnityEngine.GUIStyle)">
      <summary>
        <para>Сделайте кнопку включения/выключения.</para>
      </summary>
      <param name="position">Прямоугольник на экране для кнопки.</param>
      <param name="value">Эта кнопка включена или выключена?</param>
      <param name="text">Текст для отображения на кнопке.</param>
      <param name="image">Текстура для отображения на кнопке.</param>
      <param name="content">Текст, изображение и подсказка для этой кнопки.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль переключения из текущего GUISkin.</param>
      <returns>
        <para>Новое значение кнопки.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Toggle(UnityEngine.Rect,System.Boolean,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Сделайте кнопку включения/выключения.</para>
      </summary>
      <param name="position">Прямоугольник на экране для кнопки.</param>
      <param name="value">Эта кнопка включена или выключена?</param>
      <param name="text">Текст для отображения на кнопке.</param>
      <param name="image">Текстура для отображения на кнопке.</param>
      <param name="content">Текст, изображение и подсказка для этой кнопки.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль переключения из текущего GUISkin.</param>
      <returns>
        <para>Новое значение кнопки.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Toolbar(UnityEngine.Rect,System.Int32,System.String[])">
      <summary>
        <para>Создайте панель инструментов.</para>
      </summary>
      <param name="position">Прямоугольник на экране для панели инструментов.</param>
      <param name="selected">Индекс выбранной кнопки.</param>
      <param name="texts">Массив строк для отображения на кнопках панели инструментов.</param>
      <param name="images">Массив текстур на кнопках панели инструментов.</param>
      <param name="contents">Массив текста, изображения и всплывающих подсказок для кнопок панели инструментов.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <param name="buttonSize">Определяет, как рассчитывается размер кнопки панели инструментов.</param>
      <returns>
        <para>Индекс выбранной кнопки.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Toolbar(UnityEngine.Rect,System.Int32,UnityEngine.Texture[])">
      <summary>
        <para>Создайте панель инструментов.</para>
      </summary>
      <param name="position">Прямоугольник на экране для панели инструментов.</param>
      <param name="selected">Индекс выбранной кнопки.</param>
      <param name="texts">Массив строк для отображения на кнопках панели инструментов.</param>
      <param name="images">Массив текстур на кнопках панели инструментов.</param>
      <param name="contents">Массив текста, изображения и всплывающих подсказок для кнопок панели инструментов.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <param name="buttonSize">Определяет, как рассчитывается размер кнопки панели инструментов.</param>
      <returns>
        <para>Индекс выбранной кнопки.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Toolbar(UnityEngine.Rect,System.Int32,UnityEngine.GUIContent[])">
      <summary>
        <para>Создайте панель инструментов.</para>
      </summary>
      <param name="position">Прямоугольник на экране для панели инструментов.</param>
      <param name="selected">Индекс выбранной кнопки.</param>
      <param name="texts">Массив строк для отображения на кнопках панели инструментов.</param>
      <param name="images">Массив текстур на кнопках панели инструментов.</param>
      <param name="contents">Массив текста, изображения и всплывающих подсказок для кнопок панели инструментов.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <param name="buttonSize">Определяет, как рассчитывается размер кнопки панели инструментов.</param>
      <returns>
        <para>Индекс выбранной кнопки.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Toolbar(UnityEngine.Rect,System.Int32,System.String[],UnityEngine.GUIStyle)">
      <summary>
        <para>Создайте панель инструментов.</para>
      </summary>
      <param name="position">Прямоугольник на экране для панели инструментов.</param>
      <param name="selected">Индекс выбранной кнопки.</param>
      <param name="texts">Массив строк для отображения на кнопках панели инструментов.</param>
      <param name="images">Массив текстур на кнопках панели инструментов.</param>
      <param name="contents">Массив текста, изображения и всплывающих подсказок для кнопок панели инструментов.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <param name="buttonSize">Определяет, как рассчитывается размер кнопки панели инструментов.</param>
      <returns>
        <para>Индекс выбранной кнопки.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Toolbar(UnityEngine.Rect,System.Int32,UnityEngine.Texture[],UnityEngine.GUIStyle)">
      <summary>
        <para>Создайте панель инструментов.</para>
      </summary>
      <param name="position">Прямоугольник на экране для панели инструментов.</param>
      <param name="selected">Индекс выбранной кнопки.</param>
      <param name="texts">Массив строк для отображения на кнопках панели инструментов.</param>
      <param name="images">Массив текстур на кнопках панели инструментов.</param>
      <param name="contents">Массив текста, изображения и всплывающих подсказок для кнопок панели инструментов.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <param name="buttonSize">Определяет, как рассчитывается размер кнопки панели инструментов.</param>
      <returns>
        <para>Индекс выбранной кнопки.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Toolbar(UnityEngine.Rect,System.Int32,UnityEngine.GUIContent[],UnityEngine.GUIStyle)">
      <summary>
        <para>Создайте панель инструментов.</para>
      </summary>
      <param name="position">Прямоугольник на экране для панели инструментов.</param>
      <param name="selected">Индекс выбранной кнопки.</param>
      <param name="texts">Массив строк для отображения на кнопках панели инструментов.</param>
      <param name="images">Массив текстур на кнопках панели инструментов.</param>
      <param name="contents">Массив текста, изображения и всплывающих подсказок для кнопок панели инструментов.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <param name="buttonSize">Определяет, как рассчитывается размер кнопки панели инструментов.</param>
      <returns>
        <para>Индекс выбранной кнопки.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Toolbar(UnityEngine.Rect,System.Int32,UnityEngine.GUIContent[],UnityEngine.GUIStyle,UnityEngine.GUI/ToolbarButtonSize)">
      <summary>
        <para>Создайте панель инструментов.</para>
      </summary>
      <param name="position">Прямоугольник на экране для панели инструментов.</param>
      <param name="selected">Индекс выбранной кнопки.</param>
      <param name="texts">Массив строк для отображения на кнопках панели инструментов.</param>
      <param name="images">Массив текстур на кнопках панели инструментов.</param>
      <param name="contents">Массив текста, изображения и всплывающих подсказок для кнопок панели инструментов.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <param name="buttonSize">Определяет, как рассчитывается размер кнопки панели инструментов.</param>
      <returns>
        <para>Индекс выбранной кнопки.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.GUI.ToolbarButtonSize">
      <summary>
        <para>Определяет, как рассчитывается размер кнопки панели инструментов.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.GUI.ToolbarButtonSize.FitToContents">
      <summary>
        <para>Ширина каждой кнопки панели инструментов рассчитывается на основе ширины ее содержимого.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.GUI.ToolbarButtonSize.Fixed">
      <summary>
        <para>Вычисляет размер кнопки путем деления доступной ширины на количество кнопок. Минимальный размер — это максимальная ширина содержимого.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUI.UnfocusWindow">
      <summary>
        <para>Снять фокус со всех окон.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUI.VerticalScrollbar(UnityEngine.Rect,System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Сделать вертикальную полосу прокрутки. Полосы прокрутки — это то, что вы используете для прокрутки документа. Скорее всего, вместо этого вы захотите использовать scrollViews.</para>
      </summary>
      <param name="position">Прямоугольник на экране для полосы прокрутки.</param>
      <param name="value">Позиция между min и max.</param>
      <param name="size">Сколько мы можем видеть?</param>
      <param name="topValue">Значение в верхней части полосы прокрутки.</param>
      <param name="bottomValue">Значение в нижней части полосы прокрутки.</param>
      <param name="style">Стиль, используемый для фона полосы прокрутки. Если его не указать, используется стиль HorizontalScrollbar из текущего GUISkin.</param>
      <returns>
        <para>Измененное значение. Пользователь может изменить это, перетащив полосу прокрутки или щелкнув стрелки в конце.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.VerticalScrollbar(UnityEngine.Rect,System.Single,System.Single,System.Single,System.Single,UnityEngine.GUIStyle)">
      <summary>
        <para>Сделать вертикальную полосу прокрутки. Полосы прокрутки — это то, что вы используете для прокрутки документа. Скорее всего, вместо этого вы захотите использовать scrollViews.</para>
      </summary>
      <param name="position">Прямоугольник на экране для полосы прокрутки.</param>
      <param name="value">Позиция между min и max.</param>
      <param name="size">Сколько мы можем видеть?</param>
      <param name="topValue">Значение в верхней части полосы прокрутки.</param>
      <param name="bottomValue">Значение в нижней части полосы прокрутки.</param>
      <param name="style">Стиль, используемый для фона полосы прокрутки. Если его не указать, используется стиль HorizontalScrollbar из текущего GUISkin.</param>
      <returns>
        <para>Измененное значение. Пользователь может изменить это, перетащив полосу прокрутки или щелкнув стрелки в конце.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.VerticalSlider(UnityEngine.Rect,System.Single,System.Single,System.Single)">
      <summary>
        <para>Вертикальный ползунок, который пользователь может перетаскивать, чтобы изменить значение между минимальным и максимальным значением.</para>
      </summary>
      <param name="position">Прямоугольник на экране для ползунка.</param>
      <param name="value">Значение, которое показывает ползунок. Это определяет положение перетаскиваемого бегунка.</param>
      <param name="topValue">Значение в верхней части ползунка.</param>
      <param name="bottomValue">Значение в нижней части ползунка.</param>
      <param name="slider">Стиль GUIStyle для отображения области перетаскивания. Если его не указать, используется стиль horizontalSlider из текущего GUISkin.</param>
      <param name="thumb">Стиль GUIStyle для отображения перетаскиваемого бегунка. Если его не указать, используется стиль horizontalSliderThumb из текущего GUISkin.</param>
      <returns>
        <para>Значение, установленное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.VerticalSlider(UnityEngine.Rect,System.Single,System.Single,System.Single,UnityEngine.GUIStyle,UnityEngine.GUIStyle)">
      <summary>
        <para>Вертикальный ползунок, который пользователь может перетаскивать, чтобы изменить значение между минимальным и максимальным значением.</para>
      </summary>
      <param name="position">Прямоугольник на экране для ползунка.</param>
      <param name="value">Значение, которое показывает ползунок. Это определяет положение перетаскиваемого бегунка.</param>
      <param name="topValue">Значение в верхней части ползунка.</param>
      <param name="bottomValue">Значение в нижней части ползунка.</param>
      <param name="slider">Стиль GUIStyle для отображения области перетаскивания. Если его не указать, используется стиль horizontalSlider из текущего GUISkin.</param>
      <param name="thumb">Стиль GUIStyle для отображения перетаскиваемого бегунка. Если его не указать, используется стиль horizontalSliderThumb из текущего GUISkin.</param>
      <returns>
        <para>Значение, установленное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Window(System.Int32,UnityEngine.Rect,UnityEngine.GUI/WindowFunction,System.String)">
      <summary>
        <para>Сделать всплывающее окно.</para>
      </summary>
      <param name="Style">Необязательный стиль для окна. Если его не указать, используется стиль окна из текущего GUISkin.</param>
      <param name="id">Идентификационный номер окна (может быть любым значением, главное, чтобы оно было уникальным).</param>
      <param name="clientRect">Экранный прямоугольник, обозначающий положение и размер окна.</param>
      <param name="func">Функция скрипта для отображения содержимого окна.</param>
      <param name="text">Текст для отображения внутри окна.</param>
      <param name="image">Изображение для отображения внутри окна.</param>
      <param name="content">GUIContent для отображения внутри окна.</param>
      <param name="style">Информация о стиле для окна.</param>
      <param name="title">Текст, отображаемый в строке заголовка окна.</param>
      <returns>
        <para>Экранный прямоугольник, обозначающий положение и размер окна.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Window(System.Int32,UnityEngine.Rect,UnityEngine.GUI/WindowFunction,UnityEngine.Texture)">
      <summary>
        <para>Сделать всплывающее окно.</para>
      </summary>
      <param name="Style">Необязательный стиль для окна. Если его не указать, используется стиль окна из текущего GUISkin.</param>
      <param name="id">Идентификационный номер окна (может быть любым значением, главное, чтобы оно было уникальным).</param>
      <param name="clientRect">Экранный прямоугольник, обозначающий положение и размер окна.</param>
      <param name="func">Функция скрипта для отображения содержимого окна.</param>
      <param name="text">Текст для отображения внутри окна.</param>
      <param name="image">Изображение для отображения внутри окна.</param>
      <param name="content">GUIContent для отображения внутри окна.</param>
      <param name="style">Информация о стиле для окна.</param>
      <param name="title">Текст, отображаемый в строке заголовка окна.</param>
      <returns>
        <para>Экранный прямоугольник, обозначающий положение и размер окна.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Window(System.Int32,UnityEngine.Rect,UnityEngine.GUI/WindowFunction,UnityEngine.GUIContent)">
      <summary>
        <para>Сделать всплывающее окно.</para>
      </summary>
      <param name="Style">Необязательный стиль для окна. Если его не указать, используется стиль окна из текущего GUISkin.</param>
      <param name="id">Идентификационный номер окна (может быть любым значением, главное, чтобы оно было уникальным).</param>
      <param name="clientRect">Экранный прямоугольник, обозначающий положение и размер окна.</param>
      <param name="func">Функция скрипта для отображения содержимого окна.</param>
      <param name="text">Текст для отображения внутри окна.</param>
      <param name="image">Изображение для отображения внутри окна.</param>
      <param name="content">GUIContent для отображения внутри окна.</param>
      <param name="style">Информация о стиле для окна.</param>
      <param name="title">Текст, отображаемый в строке заголовка окна.</param>
      <returns>
        <para>Экранный прямоугольник, обозначающий положение и размер окна.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Window(System.Int32,UnityEngine.Rect,UnityEngine.GUI/WindowFunction,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Сделать всплывающее окно.</para>
      </summary>
      <param name="Style">Необязательный стиль для окна. Если его не указать, используется стиль окна из текущего GUISkin.</param>
      <param name="id">Идентификационный номер окна (может быть любым значением, главное, чтобы оно было уникальным).</param>
      <param name="clientRect">Экранный прямоугольник, обозначающий положение и размер окна.</param>
      <param name="func">Функция скрипта для отображения содержимого окна.</param>
      <param name="text">Текст для отображения внутри окна.</param>
      <param name="image">Изображение для отображения внутри окна.</param>
      <param name="content">GUIContent для отображения внутри окна.</param>
      <param name="style">Информация о стиле для окна.</param>
      <param name="title">Текст, отображаемый в строке заголовка окна.</param>
      <returns>
        <para>Экранный прямоугольник, обозначающий положение и размер окна.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Window(System.Int32,UnityEngine.Rect,UnityEngine.GUI/WindowFunction,UnityEngine.Texture,UnityEngine.GUIStyle)">
      <summary>
        <para>Сделать всплывающее окно.</para>
      </summary>
      <param name="Style">Необязательный стиль для окна. Если его не указать, используется стиль окна из текущего GUISkin.</param>
      <param name="id">Идентификационный номер окна (может быть любым значением, главное, чтобы оно было уникальным).</param>
      <param name="clientRect">Экранный прямоугольник, обозначающий положение и размер окна.</param>
      <param name="func">Функция скрипта для отображения содержимого окна.</param>
      <param name="text">Текст для отображения внутри окна.</param>
      <param name="image">Изображение для отображения внутри окна.</param>
      <param name="content">GUIContent для отображения внутри окна.</param>
      <param name="style">Информация о стиле для окна.</param>
      <param name="title">Текст, отображаемый в строке заголовка окна.</param>
      <returns>
        <para>Экранный прямоугольник, обозначающий положение и размер окна.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUI.Window(System.Int32,UnityEngine.Rect,UnityEngine.GUI/WindowFunction,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Сделать всплывающее окно.</para>
      </summary>
      <param name="Style">Необязательный стиль для окна. Если его не указать, используется стиль окна из текущего GUISkin.</param>
      <param name="id">Идентификационный номер окна (может быть любым значением, главное, чтобы оно было уникальным).</param>
      <param name="clientRect">Экранный прямоугольник, обозначающий положение и размер окна.</param>
      <param name="func">Функция скрипта для отображения содержимого окна.</param>
      <param name="text">Текст для отображения внутри окна.</param>
      <param name="image">Изображение для отображения внутри окна.</param>
      <param name="content">GUIContent для отображения внутри окна.</param>
      <param name="style">Информация о стиле для окна.</param>
      <param name="title">Текст, отображаемый в строке заголовка окна.</param>
      <returns>
        <para>Экранный прямоугольник, обозначающий положение и размер окна.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.GUI.WindowFunction">
      <summary>
        <para>Обратный вызов для рисования GUI в окне (используется с GUI.Window).</para>
      </summary>
      <param name="id">
      </param>
    </member>
    <member name="T:UnityEngine.GUIContent">
      <summary>
        <para>Содержимое элемента GUI.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIContent.image">
      <summary>
        <para>Содержащееся изображение значка.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.GUIContent.none">
      <summary>
        <para>Сокращение для пустого содержимого.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIContent.text">
      <summary>
        <para>Текст содержал.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIContent.tooltip">
      <summary>
        <para>Подсказка этого элемента.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUIContent.#ctor">
      <summary>
        <para>Конструктор для GUIContent всех форм и размеров.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUIContent.#ctor(System.String)">
      <summary>
        <para>Создайте объект GUIContent, содержащий только текст.</para>
      </summary>
      <param name="text">
      </param>
    </member>
    <member name="M:UnityEngine.GUIContent.#ctor(UnityEngine.Texture)">
      <summary>
        <para>Создайте объект GUIContent, содержащий только изображение.</para>
      </summary>
      <param name="image">
      </param>
    </member>
    <member name="M:UnityEngine.GUIContent.#ctor(System.String,UnityEngine.Texture)">
      <summary>
        <para>Создайте объект GUIContent, содержащий как текст, так и изображение.</para>
      </summary>
      <param name="text">
      </param>
      <param name="image">
      </param>
    </member>
    <member name="M:UnityEngine.GUIContent.#ctor(System.String,System.String)">
      <summary>
        <para>Создайте GUIContent, содержащий некоторый текст. Когда пользователь наводит на него указатель мыши, глобальный GUI.tooltip устанавливается на всплывающую подсказку.</para>
      </summary>
      <param name="text">
      </param>
      <param name="tooltip">
      </param>
    </member>
    <member name="M:UnityEngine.GUIContent.#ctor(UnityEngine.Texture,System.String)">
      <summary>
        <para>Создайте GUIContent, содержащий изображение. Когда пользователь наводит на него указатель мыши, глобальный GUI.tooltip устанавливается на всплывающую подсказку.</para>
      </summary>
      <param name="image">
      </param>
      <param name="tooltip">
      </param>
    </member>
    <member name="M:UnityEngine.GUIContent.#ctor(System.String,UnityEngine.Texture,System.String)">
      <summary>
        <para>Создайте GUIContent, содержащий как текст, изображение, так и определенную всплывающую подсказку. Когда пользователь наводит на него указатель мыши, глобальный GUI.tooltip устанавливается на всплывающую подсказку.</para>
      </summary>
      <param name="text">
      </param>
      <param name="image">
      </param>
      <param name="tooltip">
      </param>
    </member>
    <member name="M:UnityEngine.GUIContent.#ctor(UnityEngine.GUIContent)">
      <summary>
        <para>Создайте GUIContent как копию другого GUIContent.</para>
      </summary>
      <param name="src">
      </param>
    </member>
    <member name="T:UnityEngine.GUIElement">
      <summary>
        <para>Базовый класс для изображений и текстовых строк, отображаемых в графическом интерфейсе.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUIElement.GetScreenRect">
      <summary>
        <para>Возвращает ограничивающий прямоугольник GUUIElement в координатах экрана.</para>
      </summary>
      <param name="camera">
      </param>
    </member>
    <member name="M:UnityEngine.GUIElement.GetScreenRect(UnityEngine.Camera)">
      <summary>
        <para>Возвращает ограничивающий прямоугольник GUUIElement в координатах экрана.</para>
      </summary>
      <param name="camera">
      </param>
    </member>
    <member name="M:UnityEngine.GUIElement.HitTest(UnityEngine.Vector3)">
      <summary>
        <para>Находится ли точка на экране внутри элемента?</para>
      </summary>
      <param name="screenPosition">
      </param>
      <param name="camera">
      </param>
    </member>
    <member name="M:UnityEngine.GUIElement.HitTest(UnityEngine.Vector3,UnityEngine.Camera)">
      <summary>
        <para>Находится ли точка на экране внутри элемента?</para>
      </summary>
      <param name="screenPosition">
      </param>
      <param name="camera">
      </param>
    </member>
    <member name="T:UnityEngine.GUILayout">
      <summary>
        <para>Класс GUILayout — это интерфейс графического интерфейса Unity с автоматической компоновкой.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.GUILayout.AreaScope">
      <summary>
        <para>Одноразовый вспомогательный класс для управления BeginArea/EndArea.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUILayout.AreaScope.#ctor(UnityEngine.Rect)">
      <summary>
        <para>Создайте новый AreaScope и начните с соответствующей области.</para>
      </summary>
      <param name="text">Необязательный текст для отображения в области.</param>
      <param name="image">Необязательная текстура для отображения в области.</param>
      <param name="content">Необязательный текст, изображение и всплывающая подсказка для этой области.</param>
      <param name="style">Используемый стиль. Если его не указать, используется пустой стиль GUIStyle (GUIStyle.none), обеспечивающий прозрачный фон.</param>
      <param name="screenRect">
      </param>
    </member>
    <member name="M:UnityEngine.GUILayout.AreaScope.#ctor(UnityEngine.Rect,System.String)">
      <summary>
        <para>Создайте новый AreaScope и начните с соответствующей области.</para>
      </summary>
      <param name="text">Необязательный текст для отображения в области.</param>
      <param name="image">Необязательная текстура для отображения в области.</param>
      <param name="content">Необязательный текст, изображение и всплывающая подсказка для этой области.</param>
      <param name="style">Используемый стиль. Если его не указать, используется пустой стиль GUIStyle (GUIStyle.none), обеспечивающий прозрачный фон.</param>
      <param name="screenRect">
      </param>
    </member>
    <member name="M:UnityEngine.GUILayout.AreaScope.#ctor(UnityEngine.Rect,UnityEngine.Texture)">
      <summary>
        <para>Создайте новый AreaScope и начните с соответствующей области.</para>
      </summary>
      <param name="text">Необязательный текст для отображения в области.</param>
      <param name="image">Необязательная текстура для отображения в области.</param>
      <param name="content">Необязательный текст, изображение и всплывающая подсказка для этой области.</param>
      <param name="style">Используемый стиль. Если его не указать, используется пустой стиль GUIStyle (GUIStyle.none), обеспечивающий прозрачный фон.</param>
      <param name="screenRect">
      </param>
    </member>
    <member name="M:UnityEngine.GUILayout.AreaScope.#ctor(UnityEngine.Rect,UnityEngine.GUIContent)">
      <summary>
        <para>Создайте новый AreaScope и начните с соответствующей области.</para>
      </summary>
      <param name="text">Необязательный текст для отображения в области.</param>
      <param name="image">Необязательная текстура для отображения в области.</param>
      <param name="content">Необязательный текст, изображение и всплывающая подсказка для этой области.</param>
      <param name="style">Используемый стиль. Если его не указать, используется пустой стиль GUIStyle (GUIStyle.none), обеспечивающий прозрачный фон.</param>
      <param name="screenRect">
      </param>
    </member>
    <member name="M:UnityEngine.GUILayout.AreaScope.#ctor(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Создайте новый AreaScope и начните с соответствующей области.</para>
      </summary>
      <param name="text">Необязательный текст для отображения в области.</param>
      <param name="image">Необязательная текстура для отображения в области.</param>
      <param name="content">Необязательный текст, изображение и всплывающая подсказка для этой области.</param>
      <param name="style">Используемый стиль. Если его не указать, используется пустой стиль GUIStyle (GUIStyle.none), обеспечивающий прозрачный фон.</param>
      <param name="screenRect">
      </param>
    </member>
    <member name="M:UnityEngine.GUILayout.AreaScope.#ctor(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.GUIStyle)">
      <summary>
        <para>Создайте новый AreaScope и начните с соответствующей области.</para>
      </summary>
      <param name="text">Необязательный текст для отображения в области.</param>
      <param name="image">Необязательная текстура для отображения в области.</param>
      <param name="content">Необязательный текст, изображение и всплывающая подсказка для этой области.</param>
      <param name="style">Используемый стиль. Если его не указать, используется пустой стиль GUIStyle (GUIStyle.none), обеспечивающий прозрачный фон.</param>
      <param name="screenRect">
      </param>
    </member>
    <member name="M:UnityEngine.GUILayout.AreaScope.#ctor(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Создайте новый AreaScope и начните с соответствующей области.</para>
      </summary>
      <param name="text">Необязательный текст для отображения в области.</param>
      <param name="image">Необязательная текстура для отображения в области.</param>
      <param name="content">Необязательный текст, изображение и всплывающая подсказка для этой области.</param>
      <param name="style">Используемый стиль. Если его не указать, используется пустой стиль GUIStyle (GUIStyle.none), обеспечивающий прозрачный фон.</param>
      <param name="screenRect">
      </param>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginArea(UnityEngine.Rect)">
      <summary>
        <para>Начните блок GUILayout элементов управления GUI в фиксированной области экрана.</para>
      </summary>
      <param name="text">Необязательный текст для отображения в области.</param>
      <param name="image">Необязательная текстура для отображения в области.</param>
      <param name="content">Необязательный текст, изображение и всплывающая подсказка для этой области.</param>
      <param name="style">Используемый стиль. Если его не указать, используется пустой стиль GUIStyle (GUIStyle.none), обеспечивающий прозрачный фон.</param>
      <param name="screenRect">
      </param>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginArea(UnityEngine.Rect,System.String)">
      <summary>
        <para>Начните блок GUILayout элементов управления GUI в фиксированной области экрана.</para>
      </summary>
      <param name="text">Необязательный текст для отображения в области.</param>
      <param name="image">Необязательная текстура для отображения в области.</param>
      <param name="content">Необязательный текст, изображение и всплывающая подсказка для этой области.</param>
      <param name="style">Используемый стиль. Если его не указать, используется пустой стиль GUIStyle (GUIStyle.none), обеспечивающий прозрачный фон.</param>
      <param name="screenRect">
      </param>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginArea(UnityEngine.Rect,UnityEngine.Texture)">
      <summary>
        <para>Начните блок GUILayout элементов управления GUI в фиксированной области экрана.</para>
      </summary>
      <param name="text">Необязательный текст для отображения в области.</param>
      <param name="image">Необязательная текстура для отображения в области.</param>
      <param name="content">Необязательный текст, изображение и всплывающая подсказка для этой области.</param>
      <param name="style">Используемый стиль. Если его не указать, используется пустой стиль GUIStyle (GUIStyle.none), обеспечивающий прозрачный фон.</param>
      <param name="screenRect">
      </param>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginArea(UnityEngine.Rect,UnityEngine.GUIContent)">
      <summary>
        <para>Начните блок GUILayout элементов управления GUI в фиксированной области экрана.</para>
      </summary>
      <param name="text">Необязательный текст для отображения в области.</param>
      <param name="image">Необязательная текстура для отображения в области.</param>
      <param name="content">Необязательный текст, изображение и всплывающая подсказка для этой области.</param>
      <param name="style">Используемый стиль. Если его не указать, используется пустой стиль GUIStyle (GUIStyle.none), обеспечивающий прозрачный фон.</param>
      <param name="screenRect">
      </param>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginArea(UnityEngine.Rect,UnityEngine.GUIStyle)">
      <summary>
        <para>Начните блок GUILayout элементов управления GUI в фиксированной области экрана.</para>
      </summary>
      <param name="text">Необязательный текст для отображения в области.</param>
      <param name="image">Необязательная текстура для отображения в области.</param>
      <param name="content">Необязательный текст, изображение и всплывающая подсказка для этой области.</param>
      <param name="style">Используемый стиль. Если его не указать, используется пустой стиль GUIStyle (GUIStyle.none), обеспечивающий прозрачный фон.</param>
      <param name="screenRect">
      </param>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginArea(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Начните блок GUILayout элементов управления GUI в фиксированной области экрана.</para>
      </summary>
      <param name="text">Необязательный текст для отображения в области.</param>
      <param name="image">Необязательная текстура для отображения в области.</param>
      <param name="content">Необязательный текст, изображение и всплывающая подсказка для этой области.</param>
      <param name="style">Используемый стиль. Если его не указать, используется пустой стиль GUIStyle (GUIStyle.none), обеспечивающий прозрачный фон.</param>
      <param name="screenRect">
      </param>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginArea(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.GUIStyle)">
      <summary>
        <para>Начните блок GUILayout элементов управления GUI в фиксированной области экрана.</para>
      </summary>
      <param name="text">Необязательный текст для отображения в области.</param>
      <param name="image">Необязательная текстура для отображения в области.</param>
      <param name="content">Необязательный текст, изображение и всплывающая подсказка для этой области.</param>
      <param name="style">Используемый стиль. Если его не указать, используется пустой стиль GUIStyle (GUIStyle.none), обеспечивающий прозрачный фон.</param>
      <param name="screenRect">
      </param>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginArea(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Начните блок GUILayout элементов управления GUI в фиксированной области экрана.</para>
      </summary>
      <param name="text">Необязательный текст для отображения в области.</param>
      <param name="image">Необязательная текстура для отображения в области.</param>
      <param name="content">Необязательный текст, изображение и всплывающая подсказка для этой области.</param>
      <param name="style">Используемый стиль. Если его не указать, используется пустой стиль GUIStyle (GUIStyle.none), обеспечивающий прозрачный фон.</param>
      <param name="screenRect">
      </param>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginHorizontal(UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Начать горизонтальную контрольную группу.</para>
      </summary>
      <param name="text">Текст для отображения в группе.</param>
      <param name="image">Текстура для отображения в группе.</param>
      <param name="content">Текст, изображение и подсказка для этой группы.</param>
      <param name="style">Стиль, используемый для фонового изображения и значений заполнения. Если не указывать, фон будет прозрачным.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginHorizontal(UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Начать горизонтальную контрольную группу.</para>
      </summary>
      <param name="text">Текст для отображения в группе.</param>
      <param name="image">Текстура для отображения в группе.</param>
      <param name="content">Текст, изображение и подсказка для этой группы.</param>
      <param name="style">Стиль, используемый для фонового изображения и значений заполнения. Если не указывать, фон будет прозрачным.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginHorizontal(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Начать горизонтальную контрольную группу.</para>
      </summary>
      <param name="text">Текст для отображения в группе.</param>
      <param name="image">Текстура для отображения в группе.</param>
      <param name="content">Текст, изображение и подсказка для этой группы.</param>
      <param name="style">Стиль, используемый для фонового изображения и значений заполнения. Если не указывать, фон будет прозрачным.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginHorizontal(UnityEngine.Texture,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Начать горизонтальную контрольную группу.</para>
      </summary>
      <param name="text">Текст для отображения в группе.</param>
      <param name="image">Текстура для отображения в группе.</param>
      <param name="content">Текст, изображение и подсказка для этой группы.</param>
      <param name="style">Стиль, используемый для фонового изображения и значений заполнения. Если не указывать, фон будет прозрачным.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginHorizontal(UnityEngine.GUIContent,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Начать горизонтальную контрольную группу.</para>
      </summary>
      <param name="text">Текст для отображения в группе.</param>
      <param name="image">Текстура для отображения в группе.</param>
      <param name="content">Текст, изображение и подсказка для этой группы.</param>
      <param name="style">Стиль, используемый для фонового изображения и значений заполнения. Если не указывать, фон будет прозрачным.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginScrollView(UnityEngine.Vector2,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Начните автоматически отображать прокрутку.</para>
      </summary>
      <param name="scrollPosition">Позиция для отображения.</param>
      <param name="alwayShowHorizontal">Необязательный параметр, чтобы всегда отображать горизонтальную полосу прокрутки. Если значение false или опущено, оно отображается только тогда, когда содержимое внутри ScrollView шире, чем сам вид прокрутки.</param>
      <param name="alwayShowVertical">Необязательный параметр, чтобы всегда отображать вертикальную полосу прокрутки. Если значение равно false или опущено, оно отображается только в том случае, если содержимое внутри ScrollView выше, чем сам вид прокрутки.</param>
      <param name="horizontalScrollbar">Необязательный GUIStyle для горизонтальной полосы прокрутки. Если его не указать, используется стиль HorizontalScrollbar из текущего GUISkin.</param>
      <param name="verticalScrollbar">Необязательный GUIStyle для вертикальной полосы прокрутки. Если его не указать, используется стиль verticalScrollbar из текущей оболочки GUISkin.</param>
      <param name="options">
      </param>
      <param name="alwaysShowHorizontal">
      </param>
      <param name="alwaysShowVertical">
      </param>
      <param name="style">
      </param>
      <param name="background">
      </param>
      <returns>
        <para>Модифицированный scrollPosition. Передайте это обратно в переменную, которую вы передаете, как показано в примере.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginScrollView(UnityEngine.Vector2,System.Boolean,System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Начните автоматически отображать прокрутку.</para>
      </summary>
      <param name="scrollPosition">Позиция для отображения.</param>
      <param name="alwayShowHorizontal">Необязательный параметр, чтобы всегда отображать горизонтальную полосу прокрутки. Если значение false или опущено, оно отображается только тогда, когда содержимое внутри ScrollView шире, чем сам вид прокрутки.</param>
      <param name="alwayShowVertical">Необязательный параметр, чтобы всегда отображать вертикальную полосу прокрутки. Если значение равно false или опущено, оно отображается только в том случае, если содержимое внутри ScrollView выше, чем сам вид прокрутки.</param>
      <param name="horizontalScrollbar">Необязательный GUIStyle для горизонтальной полосы прокрутки. Если его не указать, используется стиль HorizontalScrollbar из текущего GUISkin.</param>
      <param name="verticalScrollbar">Необязательный GUIStyle для вертикальной полосы прокрутки. Если его не указать, используется стиль verticalScrollbar из текущей оболочки GUISkin.</param>
      <param name="options">
      </param>
      <param name="alwaysShowHorizontal">
      </param>
      <param name="alwaysShowVertical">
      </param>
      <param name="style">
      </param>
      <param name="background">
      </param>
      <returns>
        <para>Модифицированный scrollPosition. Передайте это обратно в переменную, которую вы передаете, как показано в примере.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginScrollView(UnityEngine.Vector2,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Начните автоматически отображать прокрутку.</para>
      </summary>
      <param name="scrollPosition">Позиция для отображения.</param>
      <param name="alwayShowHorizontal">Необязательный параметр, чтобы всегда отображать горизонтальную полосу прокрутки. Если значение false или опущено, оно отображается только тогда, когда содержимое внутри ScrollView шире, чем сам вид прокрутки.</param>
      <param name="alwayShowVertical">Необязательный параметр, чтобы всегда отображать вертикальную полосу прокрутки. Если значение равно false или опущено, оно отображается только в том случае, если содержимое внутри ScrollView выше, чем сам вид прокрутки.</param>
      <param name="horizontalScrollbar">Необязательный GUIStyle для горизонтальной полосы прокрутки. Если его не указать, используется стиль HorizontalScrollbar из текущего GUISkin.</param>
      <param name="verticalScrollbar">Необязательный GUIStyle для вертикальной полосы прокрутки. Если его не указать, используется стиль verticalScrollbar из текущей оболочки GUISkin.</param>
      <param name="options">
      </param>
      <param name="alwaysShowHorizontal">
      </param>
      <param name="alwaysShowVertical">
      </param>
      <param name="style">
      </param>
      <param name="background">
      </param>
      <returns>
        <para>Модифицированный scrollPosition. Передайте это обратно в переменную, которую вы передаете, как показано в примере.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginScrollView(UnityEngine.Vector2,UnityEngine.GUIStyle)">
      <summary>
        <para>Начните автоматически отображать прокрутку.</para>
      </summary>
      <param name="scrollPosition">Позиция для отображения.</param>
      <param name="alwayShowHorizontal">Необязательный параметр, чтобы всегда отображать горизонтальную полосу прокрутки. Если значение false или опущено, оно отображается только тогда, когда содержимое внутри ScrollView шире, чем сам вид прокрутки.</param>
      <param name="alwayShowVertical">Необязательный параметр, чтобы всегда отображать вертикальную полосу прокрутки. Если значение равно false или опущено, оно отображается только в том случае, если содержимое внутри ScrollView выше, чем сам вид прокрутки.</param>
      <param name="horizontalScrollbar">Необязательный GUIStyle для горизонтальной полосы прокрутки. Если его не указать, используется стиль HorizontalScrollbar из текущего GUISkin.</param>
      <param name="verticalScrollbar">Необязательный GUIStyle для вертикальной полосы прокрутки. Если его не указать, используется стиль verticalScrollbar из текущей оболочки GUISkin.</param>
      <param name="options">
      </param>
      <param name="alwaysShowHorizontal">
      </param>
      <param name="alwaysShowVertical">
      </param>
      <param name="style">
      </param>
      <param name="background">
      </param>
      <returns>
        <para>Модифицированный scrollPosition. Передайте это обратно в переменную, которую вы передаете, как показано в примере.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginScrollView(UnityEngine.Vector2,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Начните автоматически отображать прокрутку.</para>
      </summary>
      <param name="scrollPosition">Позиция для отображения.</param>
      <param name="alwayShowHorizontal">Необязательный параметр, чтобы всегда отображать горизонтальную полосу прокрутки. Если значение false или опущено, оно отображается только тогда, когда содержимое внутри ScrollView шире, чем сам вид прокрутки.</param>
      <param name="alwayShowVertical">Необязательный параметр, чтобы всегда отображать вертикальную полосу прокрутки. Если значение равно false или опущено, оно отображается только в том случае, если содержимое внутри ScrollView выше, чем сам вид прокрутки.</param>
      <param name="horizontalScrollbar">Необязательный GUIStyle для горизонтальной полосы прокрутки. Если его не указать, используется стиль HorizontalScrollbar из текущего GUISkin.</param>
      <param name="verticalScrollbar">Необязательный GUIStyle для вертикальной полосы прокрутки. Если его не указать, используется стиль verticalScrollbar из текущей оболочки GUISkin.</param>
      <param name="options">
      </param>
      <param name="alwaysShowHorizontal">
      </param>
      <param name="alwaysShowVertical">
      </param>
      <param name="style">
      </param>
      <param name="background">
      </param>
      <returns>
        <para>Модифицированный scrollPosition. Передайте это обратно в переменную, которую вы передаете, как показано в примере.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginScrollView(UnityEngine.Vector2,System.Boolean,System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Начните автоматически отображать прокрутку.</para>
      </summary>
      <param name="scrollPosition">Позиция для отображения.</param>
      <param name="alwayShowHorizontal">Необязательный параметр, чтобы всегда отображать горизонтальную полосу прокрутки. Если значение false или опущено, оно отображается только тогда, когда содержимое внутри ScrollView шире, чем сам вид прокрутки.</param>
      <param name="alwayShowVertical">Необязательный параметр, чтобы всегда отображать вертикальную полосу прокрутки. Если значение равно false или опущено, оно отображается только в том случае, если содержимое внутри ScrollView выше, чем сам вид прокрутки.</param>
      <param name="horizontalScrollbar">Необязательный GUIStyle для горизонтальной полосы прокрутки. Если его не указать, используется стиль HorizontalScrollbar из текущего GUISkin.</param>
      <param name="verticalScrollbar">Необязательный GUIStyle для вертикальной полосы прокрутки. Если его не указать, используется стиль verticalScrollbar из текущей оболочки GUISkin.</param>
      <param name="options">
      </param>
      <param name="alwaysShowHorizontal">
      </param>
      <param name="alwaysShowVertical">
      </param>
      <param name="style">
      </param>
      <param name="background">
      </param>
      <returns>
        <para>Модифицированный scrollPosition. Передайте это обратно в переменную, которую вы передаете, как показано в примере.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginScrollView(UnityEngine.Vector2,System.Boolean,System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Начните автоматически отображать прокрутку.</para>
      </summary>
      <param name="scrollPosition">Позиция для отображения.</param>
      <param name="alwayShowHorizontal">Необязательный параметр, чтобы всегда отображать горизонтальную полосу прокрутки. Если значение false или опущено, оно отображается только тогда, когда содержимое внутри ScrollView шире, чем сам вид прокрутки.</param>
      <param name="alwayShowVertical">Необязательный параметр, чтобы всегда отображать вертикальную полосу прокрутки. Если значение равно false или опущено, оно отображается только в том случае, если содержимое внутри ScrollView выше, чем сам вид прокрутки.</param>
      <param name="horizontalScrollbar">Необязательный GUIStyle для горизонтальной полосы прокрутки. Если его не указать, используется стиль HorizontalScrollbar из текущего GUISkin.</param>
      <param name="verticalScrollbar">Необязательный GUIStyle для вертикальной полосы прокрутки. Если его не указать, используется стиль verticalScrollbar из текущей оболочки GUISkin.</param>
      <param name="options">
      </param>
      <param name="alwaysShowHorizontal">
      </param>
      <param name="alwaysShowVertical">
      </param>
      <param name="style">
      </param>
      <param name="background">
      </param>
      <returns>
        <para>Модифицированный scrollPosition. Передайте это обратно в переменную, которую вы передаете, как показано в примере.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginVertical(UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Начните вертикальную контрольную группу.</para>
      </summary>
      <param name="text">Текст для отображения в группе.</param>
      <param name="image">Текстура для отображения в группе.</param>
      <param name="content">Текст, изображение и подсказка для этой группы.</param>
      <param name="style">Стиль, используемый для фонового изображения и значений заполнения. Если не указывать, фон будет прозрачным.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginVertical(UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Начните вертикальную контрольную группу.</para>
      </summary>
      <param name="text">Текст для отображения в группе.</param>
      <param name="image">Текстура для отображения в группе.</param>
      <param name="content">Текст, изображение и подсказка для этой группы.</param>
      <param name="style">Стиль, используемый для фонового изображения и значений заполнения. Если не указывать, фон будет прозрачным.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginVertical(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Начните вертикальную контрольную группу.</para>
      </summary>
      <param name="text">Текст для отображения в группе.</param>
      <param name="image">Текстура для отображения в группе.</param>
      <param name="content">Текст, изображение и подсказка для этой группы.</param>
      <param name="style">Стиль, используемый для фонового изображения и значений заполнения. Если не указывать, фон будет прозрачным.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginVertical(UnityEngine.Texture,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Начните вертикальную контрольную группу.</para>
      </summary>
      <param name="text">Текст для отображения в группе.</param>
      <param name="image">Текстура для отображения в группе.</param>
      <param name="content">Текст, изображение и подсказка для этой группы.</param>
      <param name="style">Стиль, используемый для фонового изображения и значений заполнения. Если не указывать, фон будет прозрачным.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.BeginVertical(UnityEngine.GUIContent,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Начните вертикальную контрольную группу.</para>
      </summary>
      <param name="text">Текст для отображения в группе.</param>
      <param name="image">Текстура для отображения в группе.</param>
      <param name="content">Текст, изображение и подсказка для этой группы.</param>
      <param name="style">Стиль, используемый для фонового изображения и значений заполнения. Если не указывать, фон будет прозрачным.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.Box(UnityEngine.Texture,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле с автоматическим макетом.</para>
      </summary>
      <param name="text">Текст для отображения в поле.</param>
      <param name="image">Текстура для отображения на коробке.</param>
      <param name="content">Текст, изображение и всплывающая подсказка для этого поля.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль блока из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.Box(System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле с автоматическим макетом.</para>
      </summary>
      <param name="text">Текст для отображения в поле.</param>
      <param name="image">Текстура для отображения на коробке.</param>
      <param name="content">Текст, изображение и всплывающая подсказка для этого поля.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль блока из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.Box(UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле с автоматическим макетом.</para>
      </summary>
      <param name="text">Текст для отображения в поле.</param>
      <param name="image">Текстура для отображения на коробке.</param>
      <param name="content">Текст, изображение и всплывающая подсказка для этого поля.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль блока из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.Box(UnityEngine.Texture,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле с автоматическим макетом.</para>
      </summary>
      <param name="text">Текст для отображения в поле.</param>
      <param name="image">Текстура для отображения на коробке.</param>
      <param name="content">Текст, изображение и всплывающая подсказка для этого поля.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль блока из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.Box(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле с автоматическим макетом.</para>
      </summary>
      <param name="text">Текст для отображения в поле.</param>
      <param name="image">Текстура для отображения на коробке.</param>
      <param name="content">Текст, изображение и всплывающая подсказка для этого поля.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль блока из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.Box(UnityEngine.GUIContent,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле с автоматическим макетом.</para>
      </summary>
      <param name="text">Текст для отображения в поле.</param>
      <param name="image">Текстура для отображения на коробке.</param>
      <param name="content">Текст, изображение и всплывающая подсказка для этого поля.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль блока из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.Button(UnityEngine.Texture,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте одно нажатие кнопки.</para>
      </summary>
      <param name="text">Текст для отображения на кнопке.</param>
      <param name="image">Текстура для отображения на кнопке.</param>
      <param name="content">Текст, изображение и подсказка для этой кнопки.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>true, когда пользователи нажимают кнопку.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Button(System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте одно нажатие кнопки.</para>
      </summary>
      <param name="text">Текст для отображения на кнопке.</param>
      <param name="image">Текстура для отображения на кнопке.</param>
      <param name="content">Текст, изображение и подсказка для этой кнопки.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>true, когда пользователи нажимают кнопку.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Button(UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте одно нажатие кнопки.</para>
      </summary>
      <param name="text">Текст для отображения на кнопке.</param>
      <param name="image">Текстура для отображения на кнопке.</param>
      <param name="content">Текст, изображение и подсказка для этой кнопки.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>true, когда пользователи нажимают кнопку.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Button(UnityEngine.Texture,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте одно нажатие кнопки.</para>
      </summary>
      <param name="text">Текст для отображения на кнопке.</param>
      <param name="image">Текстура для отображения на кнопке.</param>
      <param name="content">Текст, изображение и подсказка для этой кнопки.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>true, когда пользователи нажимают кнопку.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Button(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте одно нажатие кнопки.</para>
      </summary>
      <param name="text">Текст для отображения на кнопке.</param>
      <param name="image">Текстура для отображения на кнопке.</param>
      <param name="content">Текст, изображение и подсказка для этой кнопки.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>true, когда пользователи нажимают кнопку.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Button(UnityEngine.GUIContent,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте одно нажатие кнопки.</para>
      </summary>
      <param name="text">Текст для отображения на кнопке.</param>
      <param name="image">Текстура для отображения на кнопке.</param>
      <param name="content">Текст, изображение и подсказка для этой кнопки.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>true, когда пользователи нажимают кнопку.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.EndArea">
      <summary>
        <para>Закройте блок GUILayout, начатый с помощью BeginArea.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUILayout.EndHorizontal">
      <summary>
        <para>Закрыть группу, начатую с помощью BeginHorizontal.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUILayout.EndScrollView">
      <summary>
        <para>Завершить представление прокрутки, начатое вызовом BeginScrollView.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUILayout.EndVertical">
      <summary>
        <para>Закрыть группу, начатую с помощью BeginVertical.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUILayout.ExpandHeight(System.Boolean)">
      <summary>
        <para>Параметр, переданный элементу управления, чтобы разрешить или запретить расширение по вертикали.</para>
      </summary>
      <param name="expand">
      </param>
    </member>
    <member name="M:UnityEngine.GUILayout.ExpandWidth(System.Boolean)">
      <summary>
        <para>Параметр, переданный элементу управления, чтобы разрешить или запретить расширение по горизонтали.</para>
      </summary>
      <param name="expand">
      </param>
    </member>
    <member name="M:UnityEngine.GUILayout.FlexibleSpace">
      <summary>
        <para>Вставьте гибкий элемент пробела.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUILayout.Height(System.Single)">
      <summary>
        <para>Параметр передается элементу управления, чтобы задать ему абсолютную высоту.</para>
      </summary>
      <param name="height">
      </param>
    </member>
    <member name="T:UnityEngine.GUILayout.HorizontalScope">
      <summary>
        <para>Одноразовый вспомогательный класс для управления BeginHorizontal / EndHorizontal.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUILayout.HorizontalScope.#ctor(UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте новую HorizontalScope и начните соответствующую горизонтальную группу.</para>
      </summary>
      <param name="text">Текст для отображения в группе.</param>
      <param name="image">Текстура для отображения в группе.</param>
      <param name="content">Текст, изображение и подсказка для этой группы.</param>
      <param name="style">Стиль, используемый для фонового изображения и значений заполнения. Если не указывать, фон будет прозрачным.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.HorizontalScope.#ctor(UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте новую HorizontalScope и начните соответствующую горизонтальную группу.</para>
      </summary>
      <param name="text">Текст для отображения в группе.</param>
      <param name="image">Текстура для отображения в группе.</param>
      <param name="content">Текст, изображение и подсказка для этой группы.</param>
      <param name="style">Стиль, используемый для фонового изображения и значений заполнения. Если не указывать, фон будет прозрачным.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.HorizontalScope.#ctor(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте новую HorizontalScope и начните соответствующую горизонтальную группу.</para>
      </summary>
      <param name="text">Текст для отображения в группе.</param>
      <param name="image">Текстура для отображения в группе.</param>
      <param name="content">Текст, изображение и подсказка для этой группы.</param>
      <param name="style">Стиль, используемый для фонового изображения и значений заполнения. Если не указывать, фон будет прозрачным.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.HorizontalScope.#ctor(UnityEngine.Texture,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте новую HorizontalScope и начните соответствующую горизонтальную группу.</para>
      </summary>
      <param name="text">Текст для отображения в группе.</param>
      <param name="image">Текстура для отображения в группе.</param>
      <param name="content">Текст, изображение и подсказка для этой группы.</param>
      <param name="style">Стиль, используемый для фонового изображения и значений заполнения. Если не указывать, фон будет прозрачным.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.HorizontalScope.#ctor(UnityEngine.GUIContent,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте новую HorizontalScope и начните соответствующую горизонтальную группу.</para>
      </summary>
      <param name="text">Текст для отображения в группе.</param>
      <param name="image">Текстура для отображения в группе.</param>
      <param name="content">Текст, изображение и подсказка для этой группы.</param>
      <param name="style">Стиль, используемый для фонового изображения и значений заполнения. Если не указывать, фон будет прозрачным.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.HorizontalScrollbar(System.Single,System.Single,System.Single,System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте горизонтальную полосу прокрутки.</para>
      </summary>
      <param name="value">Позиция между min и max.</param>
      <param name="size">Сколько мы можем видеть?</param>
      <param name="leftValue">Значение в левом конце полосы прокрутки.</param>
      <param name="rightValue">Значение в правом конце полосы прокрутки.</param>
      <param name="style">Стиль, используемый для фона полосы прокрутки. Если его не указать, используется стиль HorizontalScrollbar из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, определенные стилем.</param>
      <returns>
        <para>Измененное значение. Пользователь может изменить это, перетащив полосу прокрутки или щелкнув стрелки в конце.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.HorizontalScrollbar(System.Single,System.Single,System.Single,System.Single,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте горизонтальную полосу прокрутки.</para>
      </summary>
      <param name="value">Позиция между min и max.</param>
      <param name="size">Сколько мы можем видеть?</param>
      <param name="leftValue">Значение в левом конце полосы прокрутки.</param>
      <param name="rightValue">Значение в правом конце полосы прокрутки.</param>
      <param name="style">Стиль, используемый для фона полосы прокрутки. Если его не указать, используется стиль HorizontalScrollbar из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, определенные стилем.</param>
      <returns>
        <para>Измененное значение. Пользователь может изменить это, перетащив полосу прокрутки или щелкнув стрелки в конце.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.HorizontalSlider(System.Single,System.Single,System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Горизонтальный ползунок, который пользователь может перетаскивать, чтобы изменить значение между минимальным и максимальным значением.</para>
      </summary>
      <param name="value">Значение, которое показывает ползунок. Это определяет положение перетаскиваемого бегунка.</param>
      <param name="leftValue">Значение на левом конце ползунка.</param>
      <param name="rightValue">Значение справа от ползунка.</param>
      <param name="slider">Стиль GUIStyle для отображения области перетаскивания. Если его не указать, используется стиль horizontalSlider из текущего GUISkin.</param>
      <param name="thumb">Стиль GUIStyle для отображения перетаскиваемого бегунка. Если его не указать, используется стиль horizontalSliderThumb из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, определенные стилем.</param>
      <returns>
        <para>Значение, установленное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.HorizontalSlider(System.Single,System.Single,System.Single,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Горизонтальный ползунок, который пользователь может перетаскивать, чтобы изменить значение между минимальным и максимальным значением.</para>
      </summary>
      <param name="value">Значение, которое показывает ползунок. Это определяет положение перетаскиваемого бегунка.</param>
      <param name="leftValue">Значение на левом конце ползунка.</param>
      <param name="rightValue">Значение справа от ползунка.</param>
      <param name="slider">Стиль GUIStyle для отображения области перетаскивания. Если его не указать, используется стиль horizontalSlider из текущего GUISkin.</param>
      <param name="thumb">Стиль GUIStyle для отображения перетаскиваемого бегунка. Если его не указать, используется стиль horizontalSliderThumb из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, определенные стилем.</param>
      <returns>
        <para>Значение, установленное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Label(UnityEngine.Texture,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте этикетку с автоматическим макетом.</para>
      </summary>
      <param name="text">Текст для отображения на этикетке.</param>
      <param name="image">Текстура для отображения на этикетке.</param>
      <param name="content">Текст, изображение и подсказка для этого ярлыка.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль метки из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.Label(System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте этикетку с автоматическим макетом.</para>
      </summary>
      <param name="text">Текст для отображения на этикетке.</param>
      <param name="image">Текстура для отображения на этикетке.</param>
      <param name="content">Текст, изображение и подсказка для этого ярлыка.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль метки из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.Label(UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте этикетку с автоматическим макетом.</para>
      </summary>
      <param name="text">Текст для отображения на этикетке.</param>
      <param name="image">Текстура для отображения на этикетке.</param>
      <param name="content">Текст, изображение и подсказка для этого ярлыка.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль метки из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.Label(UnityEngine.Texture,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте этикетку с автоматическим макетом.</para>
      </summary>
      <param name="text">Текст для отображения на этикетке.</param>
      <param name="image">Текстура для отображения на этикетке.</param>
      <param name="content">Текст, изображение и подсказка для этого ярлыка.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль метки из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.Label(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте этикетку с автоматическим макетом.</para>
      </summary>
      <param name="text">Текст для отображения на этикетке.</param>
      <param name="image">Текстура для отображения на этикетке.</param>
      <param name="content">Текст, изображение и подсказка для этого ярлыка.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль метки из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.Label(UnityEngine.GUIContent,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте этикетку с автоматическим макетом.</para>
      </summary>
      <param name="text">Текст для отображения на этикетке.</param>
      <param name="image">Текстура для отображения на этикетке.</param>
      <param name="content">Текст, изображение и подсказка для этого ярлыка.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль метки из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.MaxHeight(System.Single)">
      <summary>
        <para>Параметр передается элементу управления для указания максимальной высоты.</para>
      </summary>
      <param name="maxHeight">
      </param>
    </member>
    <member name="M:UnityEngine.GUILayout.MaxWidth(System.Single)">
      <summary>
        <para>Параметр передается элементу управления для указания максимальной ширины.</para>
      </summary>
      <param name="maxWidth">
      </param>
    </member>
    <member name="M:UnityEngine.GUILayout.MinHeight(System.Single)">
      <summary>
        <para>Параметр передается элементу управления для указания минимальной высоты.</para>
      </summary>
      <param name="minHeight">
      </param>
    </member>
    <member name="M:UnityEngine.GUILayout.MinWidth(System.Single)">
      <summary>
        <para>Параметр передается элементу управления, чтобы указать минимальную ширину.
</para>
      </summary>
      <param name="minWidth">
      </param>
    </member>
    <member name="M:UnityEngine.GUILayout.PasswordField(System.String,System.Char,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле, в которое пользователь может ввести пароль.</para>
      </summary>
      <param name="password">Пароль для редактирования. Возвращаемое значение этой функции должно быть возвращено в строку, как показано в примере.</param>
      <param name="maskChar">Символ для маскировки пароля.</param>
      <param name="maxLength">Максимальная длина строки. Если его не указать, пользователь может печатать вечно.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль textField из текущей оболочки GUISkin.</param>
      <param name="options">
      </param>
      <returns>
        <para>Отредактированный пароль.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.PasswordField(System.String,System.Char,System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле, в которое пользователь может ввести пароль.</para>
      </summary>
      <param name="password">Пароль для редактирования. Возвращаемое значение этой функции должно быть возвращено в строку, как показано в примере.</param>
      <param name="maskChar">Символ для маскировки пароля.</param>
      <param name="maxLength">Максимальная длина строки. Если его не указать, пользователь может печатать вечно.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль textField из текущей оболочки GUISkin.</param>
      <param name="options">
      </param>
      <returns>
        <para>Отредактированный пароль.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.PasswordField(System.String,System.Char,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле, в которое пользователь может ввести пароль.</para>
      </summary>
      <param name="password">Пароль для редактирования. Возвращаемое значение этой функции должно быть возвращено в строку, как показано в примере.</param>
      <param name="maskChar">Символ для маскировки пароля.</param>
      <param name="maxLength">Максимальная длина строки. Если его не указать, пользователь может печатать вечно.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль textField из текущей оболочки GUISkin.</param>
      <param name="options">
      </param>
      <returns>
        <para>Отредактированный пароль.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.PasswordField(System.String,System.Char,System.Int32,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле, в которое пользователь может ввести пароль.</para>
      </summary>
      <param name="password">Пароль для редактирования. Возвращаемое значение этой функции должно быть возвращено в строку, как показано в примере.</param>
      <param name="maskChar">Символ для маскировки пароля.</param>
      <param name="maxLength">Максимальная длина строки. Если его не указать, пользователь может печатать вечно.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль textField из текущей оболочки GUISkin.</param>
      <param name="options">
      </param>
      <returns>
        <para>Отредактированный пароль.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.RepeatButton(UnityEngine.Texture,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте повторяющуюся кнопку. Кнопка возвращает значение true, пока пользователь удерживает мышь.</para>
      </summary>
      <param name="text">Текст для отображения на кнопке.</param>
      <param name="image">Текстура для отображения на кнопке.</param>
      <param name="content">Текст, изображение и подсказка для этой кнопки.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>true, когда удерживает мышь.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.RepeatButton(System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте повторяющуюся кнопку. Кнопка возвращает значение true, пока пользователь удерживает мышь.</para>
      </summary>
      <param name="text">Текст для отображения на кнопке.</param>
      <param name="image">Текстура для отображения на кнопке.</param>
      <param name="content">Текст, изображение и подсказка для этой кнопки.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>true, когда удерживает мышь.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.RepeatButton(UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте повторяющуюся кнопку. Кнопка возвращает значение true, пока пользователь удерживает мышь.</para>
      </summary>
      <param name="text">Текст для отображения на кнопке.</param>
      <param name="image">Текстура для отображения на кнопке.</param>
      <param name="content">Текст, изображение и подсказка для этой кнопки.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>true, когда удерживает мышь.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.RepeatButton(UnityEngine.Texture,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте повторяющуюся кнопку. Кнопка возвращает значение true, пока пользователь удерживает мышь.</para>
      </summary>
      <param name="text">Текст для отображения на кнопке.</param>
      <param name="image">Текстура для отображения на кнопке.</param>
      <param name="content">Текст, изображение и подсказка для этой кнопки.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>true, когда удерживает мышь.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.RepeatButton(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте повторяющуюся кнопку. Кнопка возвращает значение true, пока пользователь удерживает мышь.</para>
      </summary>
      <param name="text">Текст для отображения на кнопке.</param>
      <param name="image">Текстура для отображения на кнопке.</param>
      <param name="content">Текст, изображение и подсказка для этой кнопки.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>true, когда удерживает мышь.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.RepeatButton(UnityEngine.GUIContent,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте повторяющуюся кнопку. Кнопка возвращает значение true, пока пользователь удерживает мышь.</para>
      </summary>
      <param name="text">Текст для отображения на кнопке.</param>
      <param name="image">Текстура для отображения на кнопке.</param>
      <param name="content">Текст, изображение и подсказка для этой кнопки.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>true, когда удерживает мышь.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.GUILayout.ScrollViewScope">
      <summary>
        <para>Одноразовый вспомогательный класс для управления BeginScrollView/EndScrollView.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUILayout.ScrollViewScope.handleScrollWheel">
      <summary>
        <para>Должен ли этот ScrollView обрабатывать события колеса прокрутки. (по умолчанию: правда).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUILayout.ScrollViewScope.scrollPosition">
      <summary>
        <para>Модифицированный scrollPosition. Передайте это обратно в переменную, которую вы передаете, как показано в примере.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUILayout.ScrollViewScope.#ctor(UnityEngine.Vector2,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте новый ScrollViewScope и запустите соответствующий ScrollView.</para>
      </summary>
      <param name="scrollPosition">Позиция для отображения.</param>
      <param name="alwaysShowHorizontal">Необязательный параметр, чтобы всегда отображать горизонтальную полосу прокрутки. Если значение false или опущено, оно отображается только тогда, когда содержимое внутри ScrollView шире, чем сам вид прокрутки.</param>
      <param name="alwaysShowVertical">Необязательный параметр, чтобы всегда отображать вертикальную полосу прокрутки. Если значение равно false или опущено, оно отображается только в том случае, если содержимое внутри ScrollView выше, чем сам вид прокрутки.</param>
      <param name="horizontalScrollbar">Необязательный GUIStyle для горизонтальной полосы прокрутки. Если его не указать, используется стиль HorizontalScrollbar из текущего GUISkin.</param>
      <param name="verticalScrollbar">Необязательный GUIStyle для вертикальной полосы прокрутки. Если его не указать, используется стиль verticalScrollbar из текущей оболочки GUISkin.</param>
      <param name="options">
      </param>
      <param name="style">
      </param>
      <param name="background">
      </param>
    </member>
    <member name="M:UnityEngine.GUILayout.ScrollViewScope.#ctor(UnityEngine.Vector2,System.Boolean,System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте новый ScrollViewScope и запустите соответствующий ScrollView.</para>
      </summary>
      <param name="scrollPosition">Позиция для отображения.</param>
      <param name="alwaysShowHorizontal">Необязательный параметр, чтобы всегда отображать горизонтальную полосу прокрутки. Если значение false или опущено, оно отображается только тогда, когда содержимое внутри ScrollView шире, чем сам вид прокрутки.</param>
      <param name="alwaysShowVertical">Необязательный параметр, чтобы всегда отображать вертикальную полосу прокрутки. Если значение равно false или опущено, оно отображается только в том случае, если содержимое внутри ScrollView выше, чем сам вид прокрутки.</param>
      <param name="horizontalScrollbar">Необязательный GUIStyle для горизонтальной полосы прокрутки. Если его не указать, используется стиль HorizontalScrollbar из текущего GUISkin.</param>
      <param name="verticalScrollbar">Необязательный GUIStyle для вертикальной полосы прокрутки. Если его не указать, используется стиль verticalScrollbar из текущей оболочки GUISkin.</param>
      <param name="options">
      </param>
      <param name="style">
      </param>
      <param name="background">
      </param>
    </member>
    <member name="M:UnityEngine.GUILayout.ScrollViewScope.#ctor(UnityEngine.Vector2,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте новый ScrollViewScope и запустите соответствующий ScrollView.</para>
      </summary>
      <param name="scrollPosition">Позиция для отображения.</param>
      <param name="alwaysShowHorizontal">Необязательный параметр, чтобы всегда отображать горизонтальную полосу прокрутки. Если значение false или опущено, оно отображается только тогда, когда содержимое внутри ScrollView шире, чем сам вид прокрутки.</param>
      <param name="alwaysShowVertical">Необязательный параметр, чтобы всегда отображать вертикальную полосу прокрутки. Если значение равно false или опущено, оно отображается только в том случае, если содержимое внутри ScrollView выше, чем сам вид прокрутки.</param>
      <param name="horizontalScrollbar">Необязательный GUIStyle для горизонтальной полосы прокрутки. Если его не указать, используется стиль HorizontalScrollbar из текущего GUISkin.</param>
      <param name="verticalScrollbar">Необязательный GUIStyle для вертикальной полосы прокрутки. Если его не указать, используется стиль verticalScrollbar из текущей оболочки GUISkin.</param>
      <param name="options">
      </param>
      <param name="style">
      </param>
      <param name="background">
      </param>
    </member>
    <member name="M:UnityEngine.GUILayout.ScrollViewScope.#ctor(UnityEngine.Vector2,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте новый ScrollViewScope и запустите соответствующий ScrollView.</para>
      </summary>
      <param name="scrollPosition">Позиция для отображения.</param>
      <param name="alwaysShowHorizontal">Необязательный параметр, чтобы всегда отображать горизонтальную полосу прокрутки. Если значение false или опущено, оно отображается только тогда, когда содержимое внутри ScrollView шире, чем сам вид прокрутки.</param>
      <param name="alwaysShowVertical">Необязательный параметр, чтобы всегда отображать вертикальную полосу прокрутки. Если значение равно false или опущено, оно отображается только в том случае, если содержимое внутри ScrollView выше, чем сам вид прокрутки.</param>
      <param name="horizontalScrollbar">Необязательный GUIStyle для горизонтальной полосы прокрутки. Если его не указать, используется стиль HorizontalScrollbar из текущего GUISkin.</param>
      <param name="verticalScrollbar">Необязательный GUIStyle для вертикальной полосы прокрутки. Если его не указать, используется стиль verticalScrollbar из текущей оболочки GUISkin.</param>
      <param name="options">
      </param>
      <param name="style">
      </param>
      <param name="background">
      </param>
    </member>
    <member name="M:UnityEngine.GUILayout.ScrollViewScope.#ctor(UnityEngine.Vector2,System.Boolean,System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте новый ScrollViewScope и запустите соответствующий ScrollView.</para>
      </summary>
      <param name="scrollPosition">Позиция для отображения.</param>
      <param name="alwaysShowHorizontal">Необязательный параметр, чтобы всегда отображать горизонтальную полосу прокрутки. Если значение false или опущено, оно отображается только тогда, когда содержимое внутри ScrollView шире, чем сам вид прокрутки.</param>
      <param name="alwaysShowVertical">Необязательный параметр, чтобы всегда отображать вертикальную полосу прокрутки. Если значение равно false или опущено, оно отображается только в том случае, если содержимое внутри ScrollView выше, чем сам вид прокрутки.</param>
      <param name="horizontalScrollbar">Необязательный GUIStyle для горизонтальной полосы прокрутки. Если его не указать, используется стиль HorizontalScrollbar из текущего GUISkin.</param>
      <param name="verticalScrollbar">Необязательный GUIStyle для вертикальной полосы прокрутки. Если его не указать, используется стиль verticalScrollbar из текущей оболочки GUISkin.</param>
      <param name="options">
      </param>
      <param name="style">
      </param>
      <param name="background">
      </param>
    </member>
    <member name="M:UnityEngine.GUILayout.ScrollViewScope.#ctor(UnityEngine.Vector2,System.Boolean,System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте новый ScrollViewScope и запустите соответствующий ScrollView.</para>
      </summary>
      <param name="scrollPosition">Позиция для отображения.</param>
      <param name="alwaysShowHorizontal">Необязательный параметр, чтобы всегда отображать горизонтальную полосу прокрутки. Если значение false или опущено, оно отображается только тогда, когда содержимое внутри ScrollView шире, чем сам вид прокрутки.</param>
      <param name="alwaysShowVertical">Необязательный параметр, чтобы всегда отображать вертикальную полосу прокрутки. Если значение равно false или опущено, оно отображается только в том случае, если содержимое внутри ScrollView выше, чем сам вид прокрутки.</param>
      <param name="horizontalScrollbar">Необязательный GUIStyle для горизонтальной полосы прокрутки. Если его не указать, используется стиль HorizontalScrollbar из текущего GUISkin.</param>
      <param name="verticalScrollbar">Необязательный GUIStyle для вертикальной полосы прокрутки. Если его не указать, используется стиль verticalScrollbar из текущей оболочки GUISkin.</param>
      <param name="options">
      </param>
      <param name="style">
      </param>
      <param name="background">
      </param>
    </member>
    <member name="M:UnityEngine.GUILayout.SelectionGrid(System.Int32,System.String[],System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте сетку выделения.</para>
      </summary>
      <param name="selected">Индекс выбранной кнопки.</param>
      <param name="texts">Массив строк для отображения на кнопках.</param>
      <param name="images">Массив текстур на кнопках.</param>
      <param name="contents">Массив текста, изображения и всплывающих подсказок для кнопки.</param>
      <param name="xCount">Сколько элементов уместить в горизонтальном направлении. Элементы будут масштабироваться по размеру, если только стиль не определяет фиксированную ширину для использования. Высота элемента управления будет определяться количеством элементов.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="content">
      </param>
      <returns>
        <para>Индекс выбранной кнопки.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.SelectionGrid(System.Int32,UnityEngine.Texture[],System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте сетку выделения.</para>
      </summary>
      <param name="selected">Индекс выбранной кнопки.</param>
      <param name="texts">Массив строк для отображения на кнопках.</param>
      <param name="images">Массив текстур на кнопках.</param>
      <param name="contents">Массив текста, изображения и всплывающих подсказок для кнопки.</param>
      <param name="xCount">Сколько элементов уместить в горизонтальном направлении. Элементы будут масштабироваться по размеру, если только стиль не определяет фиксированную ширину для использования. Высота элемента управления будет определяться количеством элементов.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="content">
      </param>
      <returns>
        <para>Индекс выбранной кнопки.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.SelectionGrid(System.Int32,UnityEngine.GUIContent[],System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте сетку выделения.</para>
      </summary>
      <param name="selected">Индекс выбранной кнопки.</param>
      <param name="texts">Массив строк для отображения на кнопках.</param>
      <param name="images">Массив текстур на кнопках.</param>
      <param name="contents">Массив текста, изображения и всплывающих подсказок для кнопки.</param>
      <param name="xCount">Сколько элементов уместить в горизонтальном направлении. Элементы будут масштабироваться по размеру, если только стиль не определяет фиксированную ширину для использования. Высота элемента управления будет определяться количеством элементов.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="content">
      </param>
      <returns>
        <para>Индекс выбранной кнопки.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.SelectionGrid(System.Int32,System.String[],System.Int32,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте сетку выделения.</para>
      </summary>
      <param name="selected">Индекс выбранной кнопки.</param>
      <param name="texts">Массив строк для отображения на кнопках.</param>
      <param name="images">Массив текстур на кнопках.</param>
      <param name="contents">Массив текста, изображения и всплывающих подсказок для кнопки.</param>
      <param name="xCount">Сколько элементов уместить в горизонтальном направлении. Элементы будут масштабироваться по размеру, если только стиль не определяет фиксированную ширину для использования. Высота элемента управления будет определяться количеством элементов.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="content">
      </param>
      <returns>
        <para>Индекс выбранной кнопки.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.SelectionGrid(System.Int32,UnityEngine.Texture[],System.Int32,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте сетку выделения.</para>
      </summary>
      <param name="selected">Индекс выбранной кнопки.</param>
      <param name="texts">Массив строк для отображения на кнопках.</param>
      <param name="images">Массив текстур на кнопках.</param>
      <param name="contents">Массив текста, изображения и всплывающих подсказок для кнопки.</param>
      <param name="xCount">Сколько элементов уместить в горизонтальном направлении. Элементы будут масштабироваться по размеру, если только стиль не определяет фиксированную ширину для использования. Высота элемента управления будет определяться количеством элементов.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="content">
      </param>
      <returns>
        <para>Индекс выбранной кнопки.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.SelectionGrid(System.Int32,UnityEngine.GUIContent[],System.Int32,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте сетку выделения.</para>
      </summary>
      <param name="selected">Индекс выбранной кнопки.</param>
      <param name="texts">Массив строк для отображения на кнопках.</param>
      <param name="images">Массив текстур на кнопках.</param>
      <param name="contents">Массив текста, изображения и всплывающих подсказок для кнопки.</param>
      <param name="xCount">Сколько элементов уместить в горизонтальном направлении. Элементы будут масштабироваться по размеру, если только стиль не определяет фиксированную ширину для использования. Высота элемента управления будет определяться количеством элементов.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="content">
      </param>
      <returns>
        <para>Индекс выбранной кнопки.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Space(System.Single)">
      <summary>
        <para>Вставьте пробел в текущую группу макета.</para>
      </summary>
      <param name="pixels">
      </param>
    </member>
    <member name="M:UnityEngine.GUILayout.TextArea(System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте многострочное текстовое поле, в котором пользователь может редактировать строку.</para>
      </summary>
      <param name="text">Текст для редактирования. Возвращаемое значение этой функции должно быть возвращено в строку, как показано в примере.</param>
      <param name="maxLength">Максимальная длина строки. Если его не указать, пользователь может печатать вечно.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль textField из текущей оболочки GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&amp;lt;br&amp;gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Отредактированная строка.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.TextArea(System.String,System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте многострочное текстовое поле, в котором пользователь может редактировать строку.</para>
      </summary>
      <param name="text">Текст для редактирования. Возвращаемое значение этой функции должно быть возвращено в строку, как показано в примере.</param>
      <param name="maxLength">Максимальная длина строки. Если его не указать, пользователь может печатать вечно.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль textField из текущей оболочки GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&amp;lt;br&amp;gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Отредактированная строка.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.TextArea(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте многострочное текстовое поле, в котором пользователь может редактировать строку.</para>
      </summary>
      <param name="text">Текст для редактирования. Возвращаемое значение этой функции должно быть возвращено в строку, как показано в примере.</param>
      <param name="maxLength">Максимальная длина строки. Если его не указать, пользователь может печатать вечно.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль textField из текущей оболочки GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&amp;lt;br&amp;gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Отредактированная строка.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.TextArea(System.String,System.Int32,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте многострочное текстовое поле, в котором пользователь может редактировать строку.</para>
      </summary>
      <param name="text">Текст для редактирования. Возвращаемое значение этой функции должно быть возвращено в строку, как показано в примере.</param>
      <param name="maxLength">Максимальная длина строки. Если его не указать, пользователь может печатать вечно.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль textField из текущей оболочки GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&amp;lt;br&amp;gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Отредактированная строка.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.TextField(System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте однострочное текстовое поле, в котором пользователь может редактировать строку.</para>
      </summary>
      <param name="text">Текст для редактирования. Возвращаемое значение этой функции должно быть возвращено в строку, как показано в примере.</param>
      <param name="maxLength">Максимальная длина строки. Если его не указать, пользователь может печатать вечно.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль textArea из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Отредактированная строка.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.TextField(System.String,System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте однострочное текстовое поле, в котором пользователь может редактировать строку.</para>
      </summary>
      <param name="text">Текст для редактирования. Возвращаемое значение этой функции должно быть возвращено в строку, как показано в примере.</param>
      <param name="maxLength">Максимальная длина строки. Если его не указать, пользователь может печатать вечно.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль textArea из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Отредактированная строка.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.TextField(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте однострочное текстовое поле, в котором пользователь может редактировать строку.</para>
      </summary>
      <param name="text">Текст для редактирования. Возвращаемое значение этой функции должно быть возвращено в строку, как показано в примере.</param>
      <param name="maxLength">Максимальная длина строки. Если его не указать, пользователь может печатать вечно.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль textArea из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Отредактированная строка.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.TextField(System.String,System.Int32,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте однострочное текстовое поле, в котором пользователь может редактировать строку.</para>
      </summary>
      <param name="text">Текст для редактирования. Возвращаемое значение этой функции должно быть возвращено в строку, как показано в примере.</param>
      <param name="maxLength">Максимальная длина строки. Если его не указать, пользователь может печатать вечно.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль textArea из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Отредактированная строка.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Toggle(System.Boolean,UnityEngine.Texture,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте кнопку включения/выключения.</para>
      </summary>
      <param name="value">Кнопка включена или выключена?</param>
      <param name="text">Текст для отображения на кнопке.</param>
      <param name="image">Текстура для отображения на кнопке.</param>
      <param name="content">Текст, изображение и подсказка для этой кнопки.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Новое значение кнопки.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Toggle(System.Boolean,System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте кнопку включения/выключения.</para>
      </summary>
      <param name="value">Кнопка включена или выключена?</param>
      <param name="text">Текст для отображения на кнопке.</param>
      <param name="image">Текстура для отображения на кнопке.</param>
      <param name="content">Текст, изображение и подсказка для этой кнопки.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Новое значение кнопки.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Toggle(System.Boolean,UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте кнопку включения/выключения.</para>
      </summary>
      <param name="value">Кнопка включена или выключена?</param>
      <param name="text">Текст для отображения на кнопке.</param>
      <param name="image">Текстура для отображения на кнопке.</param>
      <param name="content">Текст, изображение и подсказка для этой кнопки.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Новое значение кнопки.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Toggle(System.Boolean,UnityEngine.Texture,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте кнопку включения/выключения.</para>
      </summary>
      <param name="value">Кнопка включена или выключена?</param>
      <param name="text">Текст для отображения на кнопке.</param>
      <param name="image">Текстура для отображения на кнопке.</param>
      <param name="content">Текст, изображение и подсказка для этой кнопки.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Новое значение кнопки.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Toggle(System.Boolean,System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте кнопку включения/выключения.</para>
      </summary>
      <param name="value">Кнопка включена или выключена?</param>
      <param name="text">Текст для отображения на кнопке.</param>
      <param name="image">Текстура для отображения на кнопке.</param>
      <param name="content">Текст, изображение и подсказка для этой кнопки.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Новое значение кнопки.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Toggle(System.Boolean,UnityEngine.GUIContent,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте кнопку включения/выключения.</para>
      </summary>
      <param name="value">Кнопка включена или выключена?</param>
      <param name="text">Текст для отображения на кнопке.</param>
      <param name="image">Текстура для отображения на кнопке.</param>
      <param name="content">Текст, изображение и подсказка для этой кнопки.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Новое значение кнопки.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Toolbar(System.Int32,System.String[],UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте панель инструментов.</para>
      </summary>
      <param name="selected">Индекс выбранной кнопки.</param>
      <param name="texts">Массив строк для отображения на кнопках.</param>
      <param name="images">Массив текстур на кнопках.</param>
      <param name="contents">Массив текста, изображения и всплывающих подсказок для кнопки.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="buttonSize">Определяет, как рассчитывается размер кнопки панели инструментов.</param>
      <returns>
        <para>Индекс выбранной кнопки.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Toolbar(System.Int32,UnityEngine.Texture[],UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте панель инструментов.</para>
      </summary>
      <param name="selected">Индекс выбранной кнопки.</param>
      <param name="texts">Массив строк для отображения на кнопках.</param>
      <param name="images">Массив текстур на кнопках.</param>
      <param name="contents">Массив текста, изображения и всплывающих подсказок для кнопки.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="buttonSize">Определяет, как рассчитывается размер кнопки панели инструментов.</param>
      <returns>
        <para>Индекс выбранной кнопки.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Toolbar(System.Int32,UnityEngine.GUIContent[],UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте панель инструментов.</para>
      </summary>
      <param name="selected">Индекс выбранной кнопки.</param>
      <param name="texts">Массив строк для отображения на кнопках.</param>
      <param name="images">Массив текстур на кнопках.</param>
      <param name="contents">Массив текста, изображения и всплывающих подсказок для кнопки.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="buttonSize">Определяет, как рассчитывается размер кнопки панели инструментов.</param>
      <returns>
        <para>Индекс выбранной кнопки.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Toolbar(System.Int32,System.String[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте панель инструментов.</para>
      </summary>
      <param name="selected">Индекс выбранной кнопки.</param>
      <param name="texts">Массив строк для отображения на кнопках.</param>
      <param name="images">Массив текстур на кнопках.</param>
      <param name="contents">Массив текста, изображения и всплывающих подсказок для кнопки.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="buttonSize">Определяет, как рассчитывается размер кнопки панели инструментов.</param>
      <returns>
        <para>Индекс выбранной кнопки.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Toolbar(System.Int32,UnityEngine.Texture[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте панель инструментов.</para>
      </summary>
      <param name="selected">Индекс выбранной кнопки.</param>
      <param name="texts">Массив строк для отображения на кнопках.</param>
      <param name="images">Массив текстур на кнопках.</param>
      <param name="contents">Массив текста, изображения и всплывающих подсказок для кнопки.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="buttonSize">Определяет, как рассчитывается размер кнопки панели инструментов.</param>
      <returns>
        <para>Индекс выбранной кнопки.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Toolbar(System.Int32,UnityEngine.GUIContent[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте панель инструментов.</para>
      </summary>
      <param name="selected">Индекс выбранной кнопки.</param>
      <param name="texts">Массив строк для отображения на кнопках.</param>
      <param name="images">Массив текстур на кнопках.</param>
      <param name="contents">Массив текста, изображения и всплывающих подсказок для кнопки.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="buttonSize">Определяет, как рассчитывается размер кнопки панели инструментов.</param>
      <returns>
        <para>Индекс выбранной кнопки.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Toolbar(System.Int32,System.String[],UnityEngine.GUIStyle,UnityEngine.GUI/ToolbarButtonSize,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте панель инструментов.</para>
      </summary>
      <param name="selected">Индекс выбранной кнопки.</param>
      <param name="texts">Массив строк для отображения на кнопках.</param>
      <param name="images">Массив текстур на кнопках.</param>
      <param name="contents">Массив текста, изображения и всплывающих подсказок для кнопки.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="buttonSize">Определяет, как рассчитывается размер кнопки панели инструментов.</param>
      <returns>
        <para>Индекс выбранной кнопки.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Toolbar(System.Int32,UnityEngine.Texture[],UnityEngine.GUIStyle,UnityEngine.GUI/ToolbarButtonSize,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте панель инструментов.</para>
      </summary>
      <param name="selected">Индекс выбранной кнопки.</param>
      <param name="texts">Массив строк для отображения на кнопках.</param>
      <param name="images">Массив текстур на кнопках.</param>
      <param name="contents">Массив текста, изображения и всплывающих подсказок для кнопки.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="buttonSize">Определяет, как рассчитывается размер кнопки панели инструментов.</param>
      <returns>
        <para>Индекс выбранной кнопки.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Toolbar(System.Int32,UnityEngine.GUIContent[],UnityEngine.GUIStyle,UnityEngine.GUI/ToolbarButtonSize,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте панель инструментов.</para>
      </summary>
      <param name="selected">Индекс выбранной кнопки.</param>
      <param name="texts">Массив строк для отображения на кнопках.</param>
      <param name="images">Массив текстур на кнопках.</param>
      <param name="contents">Массив текста, изображения и всплывающих подсказок для кнопки.</param>
      <param name="style">Используемый стиль. Если его не указать, используется стиль кнопки из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="buttonSize">Определяет, как рассчитывается размер кнопки панели инструментов.</param>
      <returns>
        <para>Индекс выбранной кнопки.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.GUILayout.VerticalScope">
      <summary>
        <para>Одноразовый вспомогательный класс для управления BeginVertical/EndVertical.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUILayout.VerticalScope.#ctor(UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте новую вертикальную область и начните соответствующую вертикальную группу.</para>
      </summary>
      <param name="text">Текст для отображения в группе.</param>
      <param name="image">Текстура для отображения в группе.</param>
      <param name="content">Текст, изображение и подсказка для этой группы.</param>
      <param name="style">Стиль, используемый для фонового изображения и значений заполнения. Если не указывать, фон будет прозрачным.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.VerticalScope.#ctor(UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте новую вертикальную область и начните соответствующую вертикальную группу.</para>
      </summary>
      <param name="text">Текст для отображения в группе.</param>
      <param name="image">Текстура для отображения в группе.</param>
      <param name="content">Текст, изображение и подсказка для этой группы.</param>
      <param name="style">Стиль, используемый для фонового изображения и значений заполнения. Если не указывать, фон будет прозрачным.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.VerticalScope.#ctor(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте новую вертикальную область и начните соответствующую вертикальную группу.</para>
      </summary>
      <param name="text">Текст для отображения в группе.</param>
      <param name="image">Текстура для отображения в группе.</param>
      <param name="content">Текст, изображение и подсказка для этой группы.</param>
      <param name="style">Стиль, используемый для фонового изображения и значений заполнения. Если не указывать, фон будет прозрачным.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.VerticalScope.#ctor(UnityEngine.Texture,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте новую вертикальную область и начните соответствующую вертикальную группу.</para>
      </summary>
      <param name="text">Текст для отображения в группе.</param>
      <param name="image">Текстура для отображения в группе.</param>
      <param name="content">Текст, изображение и подсказка для этой группы.</param>
      <param name="style">Стиль, используемый для фонового изображения и значений заполнения. Если не указывать, фон будет прозрачным.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.VerticalScope.#ctor(UnityEngine.GUIContent,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте новую вертикальную область и начните соответствующую вертикальную группу.</para>
      </summary>
      <param name="text">Текст для отображения в группе.</param>
      <param name="image">Текстура для отображения в группе.</param>
      <param name="content">Текст, изображение и подсказка для этой группы.</param>
      <param name="style">Стиль, используемый для фонового изображения и значений заполнения. Если не указывать, фон будет прозрачным.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEngine.GUILayout.VerticalScrollbar(System.Single,System.Single,System.Single,System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте вертикальную полосу прокрутки.</para>
      </summary>
      <param name="value">Позиция между min и max.</param>
      <param name="size">Сколько мы можем видеть?</param>
      <param name="topValue">Значение в верхней части полосы прокрутки.</param>
      <param name="bottomValue">Значение в нижней части полосы прокрутки.</param>
      <param name="style">Стиль, используемый для фона полосы прокрутки. Если его не указать, используется стиль HorizontalScrollbar из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, определенные стилем.</param>
      <returns>
        <para>Измененное значение. Пользователь может изменить это, перетащив полосу прокрутки или щелкнув стрелки в конце.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.VerticalScrollbar(System.Single,System.Single,System.Single,System.Single,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте вертикальную полосу прокрутки.</para>
      </summary>
      <param name="value">Позиция между min и max.</param>
      <param name="size">Сколько мы можем видеть?</param>
      <param name="topValue">Значение в верхней части полосы прокрутки.</param>
      <param name="bottomValue">Значение в нижней части полосы прокрутки.</param>
      <param name="style">Стиль, используемый для фона полосы прокрутки. Если его не указать, используется стиль HorizontalScrollbar из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, определенные стилем.</param>
      <returns>
        <para>Измененное значение. Пользователь может изменить это, перетащив полосу прокрутки или щелкнув стрелки в конце.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.VerticalSlider(System.Single,System.Single,System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Вертикальный ползунок, который пользователь может перетаскивать, чтобы изменить значение между минимальным и максимальным значением.</para>
      </summary>
      <param name="value">Значение, которое показывает ползунок. Это определяет положение перетаскиваемого бегунка.</param>
      <param name="topValue">Значение в верхней части ползунка.</param>
      <param name="bottomValue">Значение в нижней части ползунка.</param>
      <param name="slider">Стиль GUIStyle для отображения области перетаскивания. Если его не указать, используется стиль horizontalSlider из текущего GUISkin.</param>
      <param name="thumb">Стиль GUIStyle для отображения перетаскиваемого бегунка. Если его не указать, используется стиль horizontalSliderThumb из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, определенные стилем.</param>
      <param name="leftValue">
      </param>
      <param name="rightValue">
      </param>
      <returns>
        <para>Значение, установленное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.VerticalSlider(System.Single,System.Single,System.Single,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Вертикальный ползунок, который пользователь может перетаскивать, чтобы изменить значение между минимальным и максимальным значением.</para>
      </summary>
      <param name="value">Значение, которое показывает ползунок. Это определяет положение перетаскиваемого бегунка.</param>
      <param name="topValue">Значение в верхней части ползунка.</param>
      <param name="bottomValue">Значение в нижней части ползунка.</param>
      <param name="slider">Стиль GUIStyle для отображения области перетаскивания. Если его не указать, используется стиль horizontalSlider из текущего GUISkin.</param>
      <param name="thumb">Стиль GUIStyle для отображения перетаскиваемого бегунка. Если его не указать, используется стиль horizontalSliderThumb из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, определенные стилем.</param>
      <param name="leftValue">
      </param>
      <param name="rightValue">
      </param>
      <returns>
        <para>Значение, установленное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Width(System.Single)">
      <summary>
        <para>Параметр передается элементу управления, чтобы задать ему абсолютную ширину.</para>
      </summary>
      <param name="width">
      </param>
    </member>
    <member name="M:UnityEngine.GUILayout.Window(System.Int32,UnityEngine.Rect,UnityEngine.GUI/WindowFunction,System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте всплывающее окно, которое автоматически размещает свое содержимое.</para>
      </summary>
      <param name="id">Уникальный идентификатор для использования для каждого окна. Это идентификатор, который вы будете использовать для взаимодействия с ним.</param>
      <param name="screenRect">Прямоугольник на экране для окна. Система компоновки попытается разместить окно внутри него, а если это невозможно, она подгонит прямоугольник под размер окна.</param>
      <param name="func">Функция, создающая графический интерфейс внутри окна. Эта функция должна принимать один параметр — идентификатор окна, для которого в данный момент создается графический интерфейс.</param>
      <param name="text">Текст для отображения в качестве заголовка окна.</param>
      <param name="image">Текстура для отображения изображения в заголовке.</param>
      <param name="content">Текст, изображение и всплывающая подсказка для этого окна.</param>
      <param name="style">Необязательный стиль для окна. Если его не указать, используется стиль окна из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем или переданным вами screenRect.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Прямоугольник, в котором находится окно. Это может быть в другой позиции и иметь другой размер, чем тот, который вы передали.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Window(System.Int32,UnityEngine.Rect,UnityEngine.GUI/WindowFunction,UnityEngine.Texture,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте всплывающее окно, которое автоматически размещает свое содержимое.</para>
      </summary>
      <param name="id">Уникальный идентификатор для использования для каждого окна. Это идентификатор, который вы будете использовать для взаимодействия с ним.</param>
      <param name="screenRect">Прямоугольник на экране для окна. Система компоновки попытается разместить окно внутри него, а если это невозможно, она подгонит прямоугольник под размер окна.</param>
      <param name="func">Функция, создающая графический интерфейс внутри окна. Эта функция должна принимать один параметр — идентификатор окна, для которого в данный момент создается графический интерфейс.</param>
      <param name="text">Текст для отображения в качестве заголовка окна.</param>
      <param name="image">Текстура для отображения изображения в заголовке.</param>
      <param name="content">Текст, изображение и всплывающая подсказка для этого окна.</param>
      <param name="style">Необязательный стиль для окна. Если его не указать, используется стиль окна из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем или переданным вами screenRect.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Прямоугольник, в котором находится окно. Это может быть в другой позиции и иметь другой размер, чем тот, который вы передали.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Window(System.Int32,UnityEngine.Rect,UnityEngine.GUI/WindowFunction,UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте всплывающее окно, которое автоматически размещает свое содержимое.</para>
      </summary>
      <param name="id">Уникальный идентификатор для использования для каждого окна. Это идентификатор, который вы будете использовать для взаимодействия с ним.</param>
      <param name="screenRect">Прямоугольник на экране для окна. Система компоновки попытается разместить окно внутри него, а если это невозможно, она подгонит прямоугольник под размер окна.</param>
      <param name="func">Функция, создающая графический интерфейс внутри окна. Эта функция должна принимать один параметр — идентификатор окна, для которого в данный момент создается графический интерфейс.</param>
      <param name="text">Текст для отображения в качестве заголовка окна.</param>
      <param name="image">Текстура для отображения изображения в заголовке.</param>
      <param name="content">Текст, изображение и всплывающая подсказка для этого окна.</param>
      <param name="style">Необязательный стиль для окна. Если его не указать, используется стиль окна из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем или переданным вами screenRect.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Прямоугольник, в котором находится окно. Это может быть в другой позиции и иметь другой размер, чем тот, который вы передали.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Window(System.Int32,UnityEngine.Rect,UnityEngine.GUI/WindowFunction,System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте всплывающее окно, которое автоматически размещает свое содержимое.</para>
      </summary>
      <param name="id">Уникальный идентификатор для использования для каждого окна. Это идентификатор, который вы будете использовать для взаимодействия с ним.</param>
      <param name="screenRect">Прямоугольник на экране для окна. Система компоновки попытается разместить окно внутри него, а если это невозможно, она подгонит прямоугольник под размер окна.</param>
      <param name="func">Функция, создающая графический интерфейс внутри окна. Эта функция должна принимать один параметр — идентификатор окна, для которого в данный момент создается графический интерфейс.</param>
      <param name="text">Текст для отображения в качестве заголовка окна.</param>
      <param name="image">Текстура для отображения изображения в заголовке.</param>
      <param name="content">Текст, изображение и всплывающая подсказка для этого окна.</param>
      <param name="style">Необязательный стиль для окна. Если его не указать, используется стиль окна из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем или переданным вами screenRect.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Прямоугольник, в котором находится окно. Это может быть в другой позиции и иметь другой размер, чем тот, который вы передали.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Window(System.Int32,UnityEngine.Rect,UnityEngine.GUI/WindowFunction,UnityEngine.Texture,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте всплывающее окно, которое автоматически размещает свое содержимое.</para>
      </summary>
      <param name="id">Уникальный идентификатор для использования для каждого окна. Это идентификатор, который вы будете использовать для взаимодействия с ним.</param>
      <param name="screenRect">Прямоугольник на экране для окна. Система компоновки попытается разместить окно внутри него, а если это невозможно, она подгонит прямоугольник под размер окна.</param>
      <param name="func">Функция, создающая графический интерфейс внутри окна. Эта функция должна принимать один параметр — идентификатор окна, для которого в данный момент создается графический интерфейс.</param>
      <param name="text">Текст для отображения в качестве заголовка окна.</param>
      <param name="image">Текстура для отображения изображения в заголовке.</param>
      <param name="content">Текст, изображение и всплывающая подсказка для этого окна.</param>
      <param name="style">Необязательный стиль для окна. Если его не указать, используется стиль окна из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем или переданным вами screenRect.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Прямоугольник, в котором находится окно. Это может быть в другой позиции и иметь другой размер, чем тот, который вы передали.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayout.Window(System.Int32,UnityEngine.Rect,UnityEngine.GUI/WindowFunction,UnityEngine.GUIContent,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте всплывающее окно, которое автоматически размещает свое содержимое.</para>
      </summary>
      <param name="id">Уникальный идентификатор для использования для каждого окна. Это идентификатор, который вы будете использовать для взаимодействия с ним.</param>
      <param name="screenRect">Прямоугольник на экране для окна. Система компоновки попытается разместить окно внутри него, а если это невозможно, она подгонит прямоугольник под размер окна.</param>
      <param name="func">Функция, создающая графический интерфейс внутри окна. Эта функция должна принимать один параметр — идентификатор окна, для которого в данный момент создается графический интерфейс.</param>
      <param name="text">Текст для отображения в качестве заголовка окна.</param>
      <param name="image">Текстура для отображения изображения в заголовке.</param>
      <param name="content">Текст, изображение и всплывающая подсказка для этого окна.</param>
      <param name="style">Необязательный стиль для окна. Если его не указать, используется стиль окна из текущего GUISkin.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем или переданным вами screenRect.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Прямоугольник, в котором находится окно. Это может быть в другой позиции и иметь другой размер, чем тот, который вы передали.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.GUILayoutOption">
      <summary>
        <para>Класс, используемый внутри для передачи параметров макета в функции GUILayout. Вы не используете их напрямую, а создаете их с помощью функций компоновки в классе GUILayout.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.GUILayoutUtility">
      <summary>
        <para>Вспомогательные функции для реализации и расширения класса GUILayout.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUILayoutUtility.GetAspectRect(System.Single)">
      <summary>
        <para>Зарезервируйте пространство макета для прямоугольника с определенным соотношением сторон.</para>
      </summary>
      <param name="aspect">Соотношение сторон элемента (ширина/высота).</param>
      <param name="style">Необязательный стиль. Если указано, значение заполнения стиля будет добавлено к размерам возвращаемого прямоугольника, а значения поля стиля будут использоваться для интервала.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Прямоугольник для элемента управления.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayoutUtility.GetAspectRect(System.Single,UnityEngine.GUIStyle)">
      <summary>
        <para>Зарезервируйте пространство макета для прямоугольника с определенным соотношением сторон.</para>
      </summary>
      <param name="aspect">Соотношение сторон элемента (ширина/высота).</param>
      <param name="style">Необязательный стиль. Если указано, значение заполнения стиля будет добавлено к размерам возвращаемого прямоугольника, а значения поля стиля будут использоваться для интервала.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Прямоугольник для элемента управления.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayoutUtility.GetAspectRect(System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Зарезервируйте пространство макета для прямоугольника с определенным соотношением сторон.</para>
      </summary>
      <param name="aspect">Соотношение сторон элемента (ширина/высота).</param>
      <param name="style">Необязательный стиль. Если указано, значение заполнения стиля будет добавлено к размерам возвращаемого прямоугольника, а значения поля стиля будут использоваться для интервала.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Прямоугольник для элемента управления.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayoutUtility.GetAspectRect(System.Single,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Зарезервируйте пространство макета для прямоугольника с определенным соотношением сторон.</para>
      </summary>
      <param name="aspect">Соотношение сторон элемента (ширина/высота).</param>
      <param name="style">Необязательный стиль. Если указано, значение заполнения стиля будет добавлено к размерам возвращаемого прямоугольника, а значения поля стиля будут использоваться для интервала.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Прямоугольник для элемента управления.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayoutUtility.GetLastRect">
      <summary>
        <para>Получить прямоугольник, который последний раз использовался GUILayout для элемента управления.</para>
      </summary>
      <returns>
        <para>Последний использованный прямоугольник.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayoutUtility.GetRect(UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Зарезервируйте пространство макета для прямоугольника для отображения некоторого содержимого в определенном стиле.</para>
      </summary>
      <param name="content">Содержимое, чтобы освободить место для отображения.</param>
      <param name="style">Стиль GUIStyle для макета.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Прямоугольник, достаточно большой для размещения содержимого при отображении в стиле.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayoutUtility.GetRect(UnityEngine.GUIContent,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Зарезервируйте пространство макета для прямоугольника для отображения некоторого содержимого в определенном стиле.</para>
      </summary>
      <param name="content">Содержимое, чтобы освободить место для отображения.</param>
      <param name="style">Стиль GUIStyle для макета.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Прямоугольник, достаточно большой для размещения содержимого при отображении в стиле.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayoutUtility.GetRect(System.Single,System.Single)">
      <summary>
        <para>Зарезервируйте пространство макета для прямоугольника с фиксированной областью содержимого.</para>
      </summary>
      <param name="width">Ширина области, которую вы хотите.</param>
      <param name="height">Высота нужной области.</param>
      <param name="style">Необязательный GUIStyle для макета. Если указано, значение отступа стиля будет добавлено к вашим размерам, а его значение поля будет использоваться для интервала.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Прямоугольник для управления.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayoutUtility.GetRect(System.Single,System.Single,UnityEngine.GUIStyle)">
      <summary>
        <para>Зарезервируйте пространство макета для прямоугольника с фиксированной областью содержимого.</para>
      </summary>
      <param name="width">Ширина области, которую вы хотите.</param>
      <param name="height">Высота нужной области.</param>
      <param name="style">Необязательный GUIStyle для макета. Если указано, значение отступа стиля будет добавлено к вашим размерам, а его значение поля будет использоваться для интервала.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Прямоугольник для управления.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayoutUtility.GetRect(System.Single,System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Зарезервируйте пространство макета для прямоугольника с фиксированной областью содержимого.</para>
      </summary>
      <param name="width">Ширина области, которую вы хотите.</param>
      <param name="height">Высота нужной области.</param>
      <param name="style">Необязательный GUIStyle для макета. Если указано, значение отступа стиля будет добавлено к вашим размерам, а его значение поля будет использоваться для интервала.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Прямоугольник для управления.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayoutUtility.GetRect(System.Single,System.Single,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Зарезервируйте пространство макета для прямоугольника с фиксированной областью содержимого.</para>
      </summary>
      <param name="width">Ширина области, которую вы хотите.</param>
      <param name="height">Высота нужной области.</param>
      <param name="style">Необязательный GUIStyle для макета. Если указано, значение отступа стиля будет добавлено к вашим размерам, а его значение поля будет использоваться для интервала.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Прямоугольник для управления.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayoutUtility.GetRect(System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>Зарезервируйте пространство макета для гибкого прямоугольника.</para>
      </summary>
      <param name="minWidth">Минимальная ширина возвращаемой области.</param>
      <param name="maxWidth">Максимальная ширина возвращаемой области.</param>
      <param name="minHeight">Минимальная ширина возвращаемой области.</param>
      <param name="maxHeight">Максимальная ширина возвращаемой области.</param>
      <param name="style">Необязательный стиль. Если указано, значение отступа стиля будет добавлено к запрошенным размерам, а значения поля стиля будут использоваться для интервала.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Прямоугольник размером между minWidth и maxWidth по обеим осям.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayoutUtility.GetRect(System.Single,System.Single,System.Single,System.Single,UnityEngine.GUIStyle)">
      <summary>
        <para>Зарезервируйте пространство макета для гибкого прямоугольника.</para>
      </summary>
      <param name="minWidth">Минимальная ширина возвращаемой области.</param>
      <param name="maxWidth">Максимальная ширина возвращаемой области.</param>
      <param name="minHeight">Минимальная ширина возвращаемой области.</param>
      <param name="maxHeight">Максимальная ширина возвращаемой области.</param>
      <param name="style">Необязательный стиль. Если указано, значение отступа стиля будет добавлено к запрошенным размерам, а значения поля стиля будут использоваться для интервала.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Прямоугольник размером между minWidth и maxWidth по обеим осям.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayoutUtility.GetRect(System.Single,System.Single,System.Single,System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Зарезервируйте пространство макета для гибкого прямоугольника.</para>
      </summary>
      <param name="minWidth">Минимальная ширина возвращаемой области.</param>
      <param name="maxWidth">Максимальная ширина возвращаемой области.</param>
      <param name="minHeight">Минимальная ширина возвращаемой области.</param>
      <param name="maxHeight">Максимальная ширина возвращаемой области.</param>
      <param name="style">Необязательный стиль. Если указано, значение отступа стиля будет добавлено к запрошенным размерам, а значения поля стиля будут использоваться для интервала.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Прямоугольник размером между minWidth и maxWidth по обеим осям.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUILayoutUtility.GetRect(System.Single,System.Single,System.Single,System.Single,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Зарезервируйте пространство макета для гибкого прямоугольника.</para>
      </summary>
      <param name="minWidth">Минимальная ширина возвращаемой области.</param>
      <param name="maxWidth">Максимальная ширина возвращаемой области.</param>
      <param name="minHeight">Минимальная ширина возвращаемой области.</param>
      <param name="maxHeight">Максимальная ширина возвращаемой области.</param>
      <param name="style">Необязательный стиль. Если указано, значение отступа стиля будет добавлено к запрошенным размерам, а значения поля стиля будут использоваться для интервала.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые переданные здесь значения переопределяют настройки, заданные стилем.&lt;br&gt;
См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Прямоугольник размером между minWidth и maxWidth по обеим осям.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.GUISettings">
      <summary>
        <para>Общие настройки поведения графического интерфейса.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISettings.cursorColor">
      <summary>
        <para>Цвет курсора в текстовых полях.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISettings.cursorFlashSpeed">
      <summary>
        <para>Скорость курсора текстового поля мигает.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISettings.doubleClickSelectsWord">
      <summary>
        <para>Следует двойным щелчком выделять слова в текстовых полях.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISettings.selectionColor">
      <summary>
        <para>Цвет прямоугольника выделения в текстовых полях.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISettings.tripleClickSelectsLine">
      <summary>
        <para>Должен ли тройной щелчок выделять весь текст в текстовых полях.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.GUISkin">
      <summary>
        <para>Определяет внешний вид и поведение GUI.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISkin.box">
      <summary>
        <para>Стиль, используемый по умолчанию для элементов управления GUI.Box.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISkin.button">
      <summary>
        <para>Стиль, используемый по умолчанию для элементов управления GUI.Button.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISkin.customStyles">
      <summary>
        <para>Массив стилей графического интерфейса для конкретных нужд.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISkin.font">
      <summary>
        <para>Шрифт по умолчанию для всех стилей.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISkin.horizontalScrollbar">
      <summary>
        <para>Стиль, используемый по умолчанию для фоновой части элементов управления GUI.HorizontalScrollbar.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISkin.horizontalScrollbarLeftButton">
      <summary>
        <para>Стиль, используемый по умолчанию для левой кнопки в элементах управления GUI.HorizontalScrollbar.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISkin.horizontalScrollbarRightButton">
      <summary>
        <para>Стиль, используемый по умолчанию для правой кнопки в элементах управления GUI.HorizontalScrollbar.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISkin.horizontalScrollbarThumb">
      <summary>
        <para>Стиль, используемый по умолчанию для бегунка, перетаскиваемого в элементах управления GUI.HorizontalScrollbar.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISkin.horizontalSlider">
      <summary>
        <para>Стиль, используемый по умолчанию для фоновой части элементов управления GUI.HorizontalSlider.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISkin.horizontalSliderThumb">
      <summary>
        <para>Стиль, используемый по умолчанию для бегунка, перетаскиваемого в элементах управления GUI.HorizontalSlider.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISkin.label">
      <summary>
        <para>Стиль, используемый по умолчанию для элементов управления GUI.Label.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISkin.scrollView">
      <summary>
        <para>Стиль, используемый по умолчанию для фона элементов управления ScrollView (см. GUI.BeginScrollView).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISkin.settings">
      <summary>
        <para>Общие настройки того, как элементы управления должны вести себя с этой оболочкой.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISkin.textArea">
      <summary>
        <para>Стиль, используемый по умолчанию для элементов управления GUI.TextArea.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISkin.textField">
      <summary>
        <para>Стиль, используемый по умолчанию для элементов управления GUI.TextField.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISkin.toggle">
      <summary>
        <para>Стиль, используемый по умолчанию для элементов управления GUI.Toggle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISkin.verticalScrollbar">
      <summary>
        <para>Стиль, используемый по умолчанию для фоновой части элементов управления GUI.VerticalScrollbar.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISkin.verticalScrollbarDownButton">
      <summary>
        <para>Стиль, используемый по умолчанию для кнопки вниз в элементах управления GUI.VerticalScrollbar.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISkin.verticalScrollbarThumb">
      <summary>
        <para>Стиль, используемый по умолчанию для бегунка, перетаскиваемого в элементах управления GUI.VerticalScrollbar.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISkin.verticalScrollbarUpButton">
      <summary>
        <para>Стиль, используемый по умолчанию для кнопки вверх в элементах управления GUI.VerticalScrollbar.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISkin.verticalSlider">
      <summary>
        <para>Стиль, используемый по умолчанию для фоновой части элементов управления GUI.VerticalSlider.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISkin.verticalSliderThumb">
      <summary>
        <para>Стиль, используемый по умолчанию для бегунка, перетаскиваемого в элементах управления GUI.VerticalSlider.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUISkin.window">
      <summary>
        <para>Стиль, используемый по умолчанию для оконных элементов управления (см. также: GUI.Window).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUISkin.FindStyle(System.String)">
      <summary>
        <para>Попробуйте найти GUIStyle. Эта функция возвращает NULL и не выдает ошибку.</para>
      </summary>
      <param name="styleName">
      </param>
    </member>
    <member name="M:UnityEngine.GUISkin.GetStyle(System.String)">
      <summary>
        <para>Получите именованный GUIStyle.</para>
      </summary>
      <param name="styleName">
      </param>
    </member>
    <member name="T:UnityEngine.GUIStyle">
      <summary>
        <para>Информация о стиле для элементов GUI.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.active">
      <summary>
        <para>Параметры рендеринга при нажатии элемента управления.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.alignment">
      <summary>
        <para>Выравнивание текста.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.border">
      <summary>
        <para>Границы всех фоновых изображений.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.clipping">
      <summary>
        <para>Что делать, если отображаемое содержимое слишком велико и не помещается в заданную область.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.contentOffset">
      <summary>
        <para>Смещение в пикселях для применения к содержимому этого стиля GUI.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.fixedHeight">
      <summary>
        <para>Если не равно 0, любые элементы графического интерфейса пользователя, визуализированные с помощью этого стиля, будут иметь указанную здесь высоту.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.fixedWidth">
      <summary>
        <para>Если не равно 0, любые элементы графического интерфейса пользователя, визуализированные с использованием этого стиля, будут иметь указанную здесь ширину.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.focused">
      <summary>
        <para>Параметры рендеринга, когда элемент находится в фокусе клавиатуры.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.font">
      <summary>
        <para>Шрифт, используемый для рендеринга. Если значение null, вместо него используется шрифт по умолчанию для текущего GUISkin.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.fontSize">
      <summary>
        <para>Используемый размер шрифта (для динамических шрифтов).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.fontStyle">
      <summary>
        <para>Используемый стиль шрифта (для динамических шрифтов).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.hover">
      <summary>
        <para>Параметры рендеринга при наведении указателя мыши на элемент управления.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.imagePosition">
      <summary>
        <para>Как сочетаются изображение и текст GUIContent.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.lineHeight">
      <summary>
        <para>Высота одной строки текста с этим стилем, измеренная в пикселях. (Только чтение)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.margin">
      <summary>
        <para>Поля между элементами, отображаемыми в этом стиле, и любыми другими элементами графического интерфейса.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.name">
      <summary>
        <para>Имя этого GUIStyle. Используется для получения их на основе имени.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.none">
      <summary>
        <para>Ярлык для пустого GUIStyle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.normal">
      <summary>
        <para>Параметры рендеринга, когда компонент отображается нормально.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.onActive">
      <summary>
        <para>Параметры рендеринга, когда элемент включен и нажат.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.onFocused">
      <summary>
        <para>Параметры рендеринга, когда элемент имеет клавиатуру и включен.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.onHover">
      <summary>
        <para>Параметры рендеринга, когда элемент управления включен и на него наведена мышь.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.onNormal">
      <summary>
        <para>Параметры рендеринга при включении элемента управления.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.overflow">
      <summary>
        <para>Дополнительное пространство для добавления к фоновому изображению.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.padding">
      <summary>
        <para>Пробел от края GUIStyle до начала содержимого.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.richText">
      <summary>
        <para>Включить теги в стиле HTML для разметки форматирования текста.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.stretchHeight">
      <summary>
        <para>Можно ли растянуть элементы графического интерфейса этого стиля по вертикали для лучшей компоновки?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.stretchWidth">
      <summary>
        <para>Можно ли растянуть элементы графического интерфейса этого стиля по горизонтали для лучшей компоновки?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyle.wordWrap">
      <summary>
        <para>Должен ли текст быть переносом слов?</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUIStyle.CalcHeight(UnityEngine.GUIContent,System.Single)">
      <summary>
        <para>Какой высоты будет этот элемент при отображении с содержимым и определенной шириной.</para>
      </summary>
      <param name="content">
      </param>
      <param name="width">
      </param>
    </member>
    <member name="M:UnityEngine.GUIStyle.CalcMinMaxWidth(UnityEngine.GUIContent,System.Single&amp;,System.Single&amp;)">
      <summary>
        <para>Рассчитайте минимальную и максимальную ширину для этого стиля, визуализируемого с содержимым.</para>
      </summary>
      <param name="content">
      </param>
      <param name="minWidth">
      </param>
      <param name="maxWidth">
      </param>
    </member>
    <member name="M:UnityEngine.GUIStyle.CalcScreenSize(UnityEngine.Vector2)">
      <summary>
        <para>Вычислить размер элемента, отформатированного с использованием этого стиля, и заданное пространство для содержимого.</para>
      </summary>
      <param name="contentSize">
      </param>
    </member>
    <member name="M:UnityEngine.GUIStyle.CalcSize(UnityEngine.GUIContent)">
      <summary>
        <para>Вычислить размер некоторого содержимого, если оно отображается с использованием этого стиля.</para>
      </summary>
      <param name="content">
      </param>
    </member>
    <member name="M:UnityEngine.GUIStyle.#ctor">
      <summary>
        <para>Конструктор для пустого GUIStyle.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUIStyle.#ctor(UnityEngine.GUIStyle)">
      <summary>
        <para>Создает GUIStyle, идентичный заданному другому GUIStyle.</para>
      </summary>
      <param name="other">
      </param>
    </member>
    <member name="M:UnityEngine.GUIStyle.Draw(UnityEngine.Rect,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
        <para>Нарисуйте этот GUIStyle на экране, внутренняя версия.</para>
      </summary>
      <param name="position">
      </param>
      <param name="isHover">
      </param>
      <param name="isActive">
      </param>
      <param name="on">
      </param>
      <param name="hasKeyboardFocus">
      </param>
    </member>
    <member name="M:UnityEngine.GUIStyle.Draw(UnityEngine.Rect,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
        <para>Нарисуйте GUIStyle с текстовой строкой внутри.</para>
      </summary>
      <param name="position">
      </param>
      <param name="text">
      </param>
      <param name="isHover">
      </param>
      <param name="isActive">
      </param>
      <param name="on">
      </param>
      <param name="hasKeyboardFocus">
      </param>
    </member>
    <member name="M:UnityEngine.GUIStyle.Draw(UnityEngine.Rect,UnityEngine.Texture,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
        <para>Нарисуйте GUIStyle с изображением внутри. Если изображение слишком велико и не помещается в область содержимого стиля, оно уменьшается.</para>
      </summary>
      <param name="position">
      </param>
      <param name="image">
      </param>
      <param name="isHover">
      </param>
      <param name="isActive">
      </param>
      <param name="on">
      </param>
      <param name="hasKeyboardFocus">
      </param>
    </member>
    <member name="M:UnityEngine.GUIStyle.Draw(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32)">
      <summary>
        <para>Нарисуйте GUIStyle с текстом и изображением внутри. Если изображение слишком велико и не помещается в область содержимого стиля, оно уменьшается.</para>
      </summary>
      <param name="position">
      </param>
      <param name="content">
      </param>
      <param name="controlID">
      </param>
      <param name="on">
      </param>
      <param name="isHover">
      </param>
      <param name="isActive">
      </param>
      <param name="hasKeyboardFocus">
      </param>
    </member>
    <member name="M:UnityEngine.GUIStyle.Draw(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,System.Boolean)">
      <summary>
        <para>Нарисуйте GUIStyle с текстом и изображением внутри. Если изображение слишком велико и не помещается в область содержимого стиля, оно уменьшается.</para>
      </summary>
      <param name="position">
      </param>
      <param name="content">
      </param>
      <param name="controlID">
      </param>
      <param name="on">
      </param>
      <param name="isHover">
      </param>
      <param name="isActive">
      </param>
      <param name="hasKeyboardFocus">
      </param>
    </member>
    <member name="M:UnityEngine.GUIStyle.Draw(UnityEngine.Rect,UnityEngine.GUIContent,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
        <para>Нарисуйте GUIStyle с текстом и изображением внутри. Если изображение слишком велико и не помещается в область содержимого стиля, оно уменьшается.</para>
      </summary>
      <param name="position">
      </param>
      <param name="content">
      </param>
      <param name="controlID">
      </param>
      <param name="on">
      </param>
      <param name="isHover">
      </param>
      <param name="isActive">
      </param>
      <param name="hasKeyboardFocus">
      </param>
    </member>
    <member name="M:UnityEngine.GUIStyle.DrawCursor(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,System.Int32)">
      <summary>
        <para>Нарисуйте этот GUIStyle с выбранным содержимым.</para>
      </summary>
      <param name="position">
      </param>
      <param name="content">
      </param>
      <param name="controlID">
      </param>
      <param name="character">
      </param>
    </member>
    <member name="M:UnityEngine.GUIStyle.DrawWithTextSelection(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Нарисуйте этот GUIStyle с выбранным содержимым.</para>
      </summary>
      <param name="position">
      </param>
      <param name="content">
      </param>
      <param name="controlID">
      </param>
      <param name="firstSelectedCharacter">
      </param>
      <param name="lastSelectedCharacter">
      </param>
    </member>
    <member name="M:UnityEngine.GUIStyle.GetCursorPixelPosition(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32)">
      <summary>
        <para>Получить позицию в пикселях заданного строкового индекса.</para>
      </summary>
      <param name="position">
      </param>
      <param name="content">
      </param>
      <param name="cursorStringIndex">
      </param>
    </member>
    <member name="M:UnityEngine.GUIStyle.GetCursorStringIndex(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Vector2)">
      <summary>
        <para>Получить позицию курсора (индексируя содержимое.текст), когда пользователь щелкнул курсорPixelPosition.</para>
      </summary>
      <param name="position">
      </param>
      <param name="content">
      </param>
      <param name="cursorPixelPosition">
      </param>
    </member>
    <member name="?:UnityEngine.GUIStyle.implop_GUIStyle(string)(System.String)">
      <summary>
        <para>Получить именованный стиль GUI из текущего скина.</para>
      </summary>
      <param name="str">
      </param>
    </member>
    <member name="T:UnityEngine.GUIStyleState">
      <summary>
        <para>Специализированные значения для заданных состояний, используемых объектами GUIStyle.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyleState.background">
      <summary>
        <para>Фоновое изображение, используемое элементами GUI в данном состоянии.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyleState.scaledBackgrounds">
      <summary>
        <para>Фоновые изображения, используемые этим состоянием на экране с высоким разрешением. Он должен быть либо оставлен пустым, либо содержать одно изображение, разрешение которого ровно в два раза превышает разрешение фона. Используется только редактором. Поле не копируется в данные проигрывателя и недоступно из кода проигрывателя.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIStyleState.textColor">
      <summary>
        <para>Цвет текста, используемый элементами GUI в этом состоянии.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.GUITargetAttribute">
      <summary>
        <para>Позволяет контролировать, для какого дисплея вызывается OnGUI.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUITargetAttribute.#ctor">
      <summary>
        <para>Конструктор по умолчанию инициализирует атрибут для вызова OnGUI для всех доступных дисплеев.</para>
      </summary>
      <param name="displayIndex">Показать индекс.</param>
      <param name="displayIndex1">Показать индекс.</param>
      <param name="displayIndexList">Показать индексный список.</param>
    </member>
    <member name="M:UnityEngine.GUITargetAttribute.#ctor(System.Int32)">
      <summary>
        <para>Конструктор по умолчанию инициализирует атрибут для вызова OnGUI для всех доступных дисплеев.</para>
      </summary>
      <param name="displayIndex">Показать индекс.</param>
      <param name="displayIndex1">Показать индекс.</param>
      <param name="displayIndexList">Показать индексный список.</param>
    </member>
    <member name="M:UnityEngine.GUITargetAttribute.#ctor(System.Int32,System.Int32)">
      <summary>
        <para>Конструктор по умолчанию инициализирует атрибут для вызова OnGUI для всех доступных дисплеев.</para>
      </summary>
      <param name="displayIndex">Показать индекс.</param>
      <param name="displayIndex1">Показать индекс.</param>
      <param name="displayIndexList">Показать индексный список.</param>
    </member>
    <member name="M:UnityEngine.GUITargetAttribute.#ctor(System.Int32,System.Int32,System.Int32[])">
      <summary>
        <para>Конструктор по умолчанию инициализирует атрибут для вызова OnGUI для всех доступных дисплеев.</para>
      </summary>
      <param name="displayIndex">Показать индекс.</param>
      <param name="displayIndex1">Показать индекс.</param>
      <param name="displayIndexList">Показать индексный список.</param>
    </member>
    <member name="T:UnityEngine.GUIUtility">
      <summary>
        <para>Вспомогательный класс для создания новых элементов управления графическим интерфейсом.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIUtility.hasModalWindow">
      <summary>
        <para>Глобальное свойство, которое имеет значение true, если отображается ModalWindow, и значение false в противном случае.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIUtility.hotControl">
      <summary>
        <para>ControlID текущего активного элемента управления.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIUtility.keyboardControl">
      <summary>
        <para>ControlID элемента управления, который имеет фокус клавиатуры.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.GUIUtility.systemCopyBuffer">
      <summary>
        <para>Получите доступ к общесистемному буферу обмена.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUIUtility.AlignRectToDevice(UnityEngine.Rect)">
      <summary>
        <para>Выровняйте прямоугольник локального пространства по пиксельной сетке.</para>
      </summary>
      <param name="local">Прямоугольник локального пространства, который необходимо обработать.</param>
      <param name="widthInPixels">Ширина (в пикселях) выровненной по оси ограничивающей рамки, которая охватывает выровненные точки.</param>
      <param name="heightInPixels">Высота в пикселях выровненной по оси ограничительной рамки, которая охватывает выровненные точки.</param>
      <param name="rect">
      </param>
      <returns>
        <para>Выровненный прямоугольник в локальном пространстве.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUIUtility.AlignRectToDevice(UnityEngine.Rect,System.Int32&amp;,System.Int32&amp;)">
      <summary>
        <para>Выровняйте прямоугольник локального пространства по пиксельной сетке.</para>
      </summary>
      <param name="local">Прямоугольник локального пространства, который необходимо обработать.</param>
      <param name="widthInPixels">Ширина (в пикселях) выровненной по оси ограничивающей рамки, которая охватывает выровненные точки.</param>
      <param name="heightInPixels">Высота в пикселях выровненной по оси ограничительной рамки, которая охватывает выровненные точки.</param>
      <param name="rect">
      </param>
      <returns>
        <para>Выровненный прямоугольник в локальном пространстве.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.GUIUtility.ExitGUI">
      <summary>
        <para>Переводит графический интерфейс в состояние, при котором все последующие функции графического интерфейса непосредственного режима не будут выполнять оценку оставшейся части цикла графического интерфейса, вызывая исключение ExitGUIException.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.GUIUtility.GetControlID(UnityEngine.FocusType)">
      <summary>
        <para>Получите уникальный идентификатор элемента управления.</para>
      </summary>
      <param name="focus">
      </param>
      <param name="position">
      </param>
    </member>
    <member name="M:UnityEngine.GUIUtility.GetControlID(UnityEngine.FocusType,UnityEngine.Rect)">
      <summary>
        <para>Получите уникальный идентификатор элемента управления.</para>
      </summary>
      <param name="focus">
      </param>
      <param name="position">
      </param>
    </member>
    <member name="M:UnityEngine.GUIUtility.GetControlID(System.Int32,UnityEngine.FocusType)">
      <summary>
        <para>Получите уникальный идентификатор для элемента управления, используя целое число в качестве подсказки, чтобы обеспечить правильное сопоставление идентификаторов с элементами управления.</para>
      </summary>
      <param name="hint">
      </param>
      <param name="focus">
      </param>
      <param name="focusType">
      </param>
      <param name="rect">
      </param>
    </member>
    <member name="M:UnityEngine.GUIUtility.GetControlID(System.Int32,UnityEngine.FocusType,UnityEngine.Rect)">
      <summary>
        <para>Получите уникальный идентификатор для элемента управления, используя целое число в качестве подсказки, чтобы обеспечить правильное сопоставление идентификаторов с элементами управления.</para>
      </summary>
      <param name="hint">
      </param>
      <param name="focus">
      </param>
      <param name="focusType">
      </param>
      <param name="rect">
      </param>
    </member>
    <member name="M:UnityEngine.GUIUtility.GetControlID(UnityEngine.GUIContent,UnityEngine.FocusType)">
      <summary>
        <para>Получите уникальный идентификатор для элемента управления, используя содержимое метки в качестве подсказки, чтобы обеспечить правильное сопоставление идентификаторов с элементами управления.</para>
      </summary>
      <param name="contents">
      </param>
      <param name="focus">
      </param>
      <param name="position">
      </param>
    </member>
    <member name="M:UnityEngine.GUIUtility.GetControlID(UnityEngine.GUIContent,UnityEngine.FocusType,UnityEngine.Rect)">
      <summary>
        <para>Получите уникальный идентификатор для элемента управления, используя содержимое метки в качестве подсказки, чтобы обеспечить правильное сопоставление идентификаторов с элементами управления.</para>
      </summary>
      <param name="contents">
      </param>
      <param name="focus">
      </param>
      <param name="position">
      </param>
    </member>
    <member name="M:UnityEngine.GUIUtility.GetStateObject(System.Type,System.Int32)">
      <summary>
        <para>Получить объект состояния из controlID.</para>
      </summary>
      <param name="t">
      </param>
      <param name="controlID">
      </param>
    </member>
    <member name="M:UnityEngine.GUIUtility.GUIToScreenPoint(UnityEngine.Vector2)">
      <summary>
        <para>Преобразование точки из положения графического интерфейса в пространство экрана.</para>
      </summary>
      <param name="guiPoint">
      </param>
    </member>
    <member name="M:UnityEngine.GUIUtility.GUIToScreenRect(UnityEngine.Rect)">
      <summary>
        <para>Преобразование прямоугольника из позиции GUI в пространство экрана.</para>
      </summary>
      <param name="guiRect">
      </param>
    </member>
    <member name="M:UnityEngine.GUIUtility.QueryStateObject(System.Type,System.Int32)">
      <summary>
        <para>Получить существующий объект состояния из controlID.</para>
      </summary>
      <param name="t">
      </param>
      <param name="controlID">
      </param>
    </member>
    <member name="M:UnityEngine.GUIUtility.RotateAroundPivot(System.Single,UnityEngine.Vector2)">
      <summary>
        <para>Вспомогательная функция для поворота графического интерфейса вокруг точки.</para>
      </summary>
      <param name="angle">
      </param>
      <param name="pivotPoint">
      </param>
    </member>
    <member name="M:UnityEngine.GUIUtility.ScaleAroundPivot(UnityEngine.Vector2,UnityEngine.Vector2)">
      <summary>
        <para>Вспомогательная функция для масштабирования графического интерфейса вокруг точки.</para>
      </summary>
      <param name="scale">
      </param>
      <param name="pivotPoint">
      </param>
    </member>
    <member name="M:UnityEngine.GUIUtility.ScreenToGUIPoint(UnityEngine.Vector2)">
      <summary>
        <para>Преобразование точки из экранного пространства в позицию GUI.</para>
      </summary>
      <param name="screenPoint">
      </param>
    </member>
    <member name="M:UnityEngine.GUIUtility.ScreenToGUIRect(UnityEngine.Rect)">
      <summary>
        <para>Преобразование прямоугольника из экранного пространства в позицию GUI.</para>
      </summary>
      <param name="screenRect">
      </param>
    </member>
    <member name="T:UnityEngine.ImagePosition">
      <summary>
        <para>Как изображение и текст размещаются внутри GUIStyle.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ImagePosition.ImageAbove">
      <summary>
        <para>Изображение находится над текстом.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ImagePosition.ImageLeft">
      <summary>
        <para>Изображение находится слева от текста.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ImagePosition.ImageOnly">
      <summary>
        <para>Отображается только изображение.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ImagePosition.TextOnly">
      <summary>
        <para>Отображается только текст.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.PointerType">
      <summary>
        <para>Типы указателей.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.PointerType.Mouse">
      <summary>
        <para>Тип указателя для событий мыши.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.PointerType.Pen">
      <summary>
        <para>Тип указателя для событий пера.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.PointerType.Touch">
      <summary>
        <para>Тип указателя для сенсорных событий.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.ScaleMode">
      <summary>
        <para>Режим масштабирования для рисования текстур.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ScaleMode.ScaleAndCrop">
      <summary>
        <para>Масштабирует текстуру, сохраняя соотношение сторон, чтобы она полностью покрывала прямоугольник положения, переданный в GUI.DrawTexture. Если текстура рисуется в виде прямоугольника с соотношением сторон, отличным от исходного, изображение обрезается.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ScaleMode.ScaleToFit">
      <summary>
        <para>Масштабирует текстуру, сохраняя соотношение сторон, чтобы она полностью соответствовала прямоугольнику положения, переданному в GUI.DrawTexture.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.ScaleMode.StretchToFill">
      <summary>
        <para>Растягивает текстуру, чтобы заполнить весь прямоугольник, переданный в GUI.DrawTexture.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.TextClipping">
      <summary>
        <para>Различные методы обработки системой графического интерфейса текста, если он слишком велик для размещения в выделенном прямоугольнике.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextClipping.Clip">
      <summary>
        <para>Текст обрезается внутри элемента.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.TextClipping.Overflow">
      <summary>
        <para>Текст свободно выходит за пределы элемента.</para>
      </summary>
    </member>
    <member name="A:UnityEngine.IMGUIModule">
      <summary>
        <para>Модуль IMGUI предоставляет решение Unity с графическим интерфейсом непосредственного режима для создания внутриигровых и редакторских пользовательских интерфейсов.</para>
      </summary>
    </member>
  </members>
</doc>