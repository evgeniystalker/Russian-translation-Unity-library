<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<doc>
  <members>
    <assembly>
      <name>UnityEditor.QuickSearchModule</name>
    </assembly>
    <member name="T:UnityEditor.Search.CustomObjectIndexerAttribute">
      <summary>
        <para>Позволяет пользователю зарегистрировать пользовательскую функцию индексирования для определенного типа.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.CustomObjectIndexerAttribute.type">
      <summary>
        <para>Каждый раз, когда индексируется объект определенного типа, вызывается зарегистрированная функция.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.CustomObjectIndexerAttribute.version">
      <summary>
        <para>Версия пользовательского индексатора. Увеличьте это число, чтобы индексатор переиндексировал индексы.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Search.CustomObjectIndexerAttribute.#ctor(System.Type)">
      <summary>
        <para>Зарегистрируйте новую функцию индексирования, привязанную к определенному типу.</para>
      </summary>
      <param name="type">Тип индексируемого объекта.</param>
    </member>
    <member name="T:UnityEditor.Search.CustomObjectIndexerTarget">
      <summary>
        <para>Представляет дескриптор объекта, который будет проиндексирован. Он хранит ссылку на сам объект, а также на уже настроенный SerializedObject.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.CustomObjectIndexerTarget.documentIndex">
      <summary>
        <para>Индекс документа, которому принадлежит индексируемый объект.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.CustomObjectIndexerTarget.id">
      <summary>
        <para>Идентификатор объекта. Путь к объекту для актива или GlobalObjectId для объекта сцены.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.CustomObjectIndexerTarget.serializedObject">
      <summary>
        <para>Серийное представление индексируемого объекта.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.CustomObjectIndexerTarget.target">
      <summary>
        <para>Объект для индексации.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.CustomObjectIndexerTarget.targetType">
      <summary>
        <para>Тип объекта для индексации.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Search.DisplayMode">
      <summary>
        <para>Параметры для настройки режима отображения, используемого для представления поиска.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.DisplayMode.Grid">
      <summary>
        <para>Отображать в виде сетки значков разного размера.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.DisplayMode.List">
      <summary>
        <para>Отображать в виде списка.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.DisplayMode.None">
      <summary>
        <para>Не указан режим отображения ISearchView.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.DisplayMode.Table">
      <summary>
        <para>Отображать результаты поиска в виде таблицы.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Search.FetchPreviewOptions">
      <summary>
        <para>Варианты для поставщика поиска о том, как должен быть получен предварительный просмотр.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.FetchPreviewOptions.Large">
      <summary>
        <para>Указывает, что разрешение предварительного просмотра должно быть выше 256x256.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.FetchPreviewOptions.None">
      <summary>
        <para>Опции не определены.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.FetchPreviewOptions.Normal">
      <summary>
        <para>Указывает, что размер предварительного просмотра должен быть около 128 x 128.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.FetchPreviewOptions.Preview2D">
      <summary>
        <para>Указывает, что служба поиска должна создать предварительный просмотр в 2D.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.FetchPreviewOptions.Preview3D">
      <summary>
        <para>Указывает, что служба поиска должна создать предварительный просмотр в 3D.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Search.FuzzySearch">
      <summary>
        <para>Предоставляет метод сопоставления текста запроса с использованием алгоритма нечеткого поиска.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Search.FuzzySearch.FuzzyMatch(System.String,System.String,System.Int64&amp;,System.Collections.Generic.List`1&lt;System.Int32&gt;)">
      <summary>
        <para>Выполняет нечеткий поиск шаблона в строке.</para>
      </summary>
      <param name="pattern">Шаблон, который метод ищет в строке.</param>
      <param name="origin">Строка, которую ищет метод.</param>
      <param name="outScore">Если есть совпадение, этот параметр содержит счет совпадения. Чем выше показатель совпадения, тем ближе шаблон соответствует части заданной строки.</param>
      <param name="matches">Список индексов в строке, где был найден шаблон.</param>
      <returns>
        <para>Возвращает true, если совпадение было найдено.</para>
      </returns>
    </member>
    <member name="?:UnityEditor.Search.IFilterNode">
      <summary>
        <para>Интерфейс, представляющий узел фильтра.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.IFilterNode.filterId">
      <summary>
        <para>Идентификатор фильтра.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.IFilterNode.filterValue">
      <summary>
        <para>Значение фильтра. Это значение может быть нулевым или пустым, если значение еще не было записано.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.IFilterNode.operatorId">
      <summary>
        <para>Идентификатор оператора. Это значение может быть нулевым или пустым, если оператор еще не был написан.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.IFilterNode.paramValue">
      <summary>
        <para>Значение параметра. Это значение может быть нулевым или пустым, если фильтр не является функцией фильтра или параметр еще не записан.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Search.IndexingOptions">
      <summary>
        <para>Используйте параметры индексирования, чтобы указать содержимое вашего поискового индекса.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.IndexingOptions.All">
      <summary>
        <para>Применить все параметры индексации.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.IndexingOptions.Dependencies">
      <summary>
        <para>Включите зависимости активов в свой индекс.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.IndexingOptions.Extended">
      <summary>
        <para>Включите в индекс расширенную информацию, такую ​​как подобъекты в объектах сцены и префаб.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.IndexingOptions.Keep">
      <summary>
        <para>Используйте этот параметр, чтобы сохранить созданный индекс как файл ресурсов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.IndexingOptions.None">
      <summary>
        <para>Не включайте дополнительные параметры индексации.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.IndexingOptions.Properties">
      <summary>
        <para>Включите сериализованные свойства активов в свой индекс.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.IndexingOptions.Temporary">
      <summary>
        <para>Сохраните поисковый индекс во временной папке, которой Unity не управляет.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.IndexingOptions.Types">
      <summary>
        <para>Включите дополнительные типы информации в свой индекс объектов.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Search.INestedQueryNode">
      <summary>
        <para>Интерфейс, представляющий вложенный узел запроса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.INestedQueryNode.associatedFilter">
      <summary>
        <para>Если вложенный запрос является частью операции фильтра, он представляет собой идентификатор фильтра. В противном случае это значение null или пусто.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Search.IQueryEngineFilter">
      <summary>
        <para>Интерфейс для фильтров Search.QueryEngine_1|QueryEngine.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.IQueryEngineFilter.metaInfo">
      <summary>
        <para>Дополнительная информация, относящаяся к фильтру.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.IQueryEngineFilter.operators">
      <summary>
        <para>Коллекция Search.QueryFilterOperator|QueryFilterOperators, специфичных для фильтра.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.IQueryEngineFilter.overridesStringComparison">
      <summary>
        <para>Указывает, переопределяет ли фильтр глобальные параметры сравнения строк.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.IQueryEngineFilter.parameterType">
      <summary>
        <para>Тип постоянного параметра, передаваемого фильтру, если он используется.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.IQueryEngineFilter.regexToken">
      <summary>
        <para>Регулярное выражение, соответствующее фильтру. Соответствует тому, что предшествует оператору в фильтре (например, "id" в "id&gt;=2").</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.IQueryEngineFilter.stringComparison">
      <summary>
        <para>Опции сравнения строк фильтра.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.IQueryEngineFilter.supportedOperators">
      <summary>
        <para>Список поддерживаемых операторов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.IQueryEngineFilter.token">
      <summary>
        <para>Идентификатор фильтра. Обычно то, что предшествует оператору в фильтре (например, "id" в "id&gt;=2").</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.IQueryEngineFilter.type">
      <summary>
        <para>Тип данных, сравниваемых фильтром.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.IQueryEngineFilter.usesParameter">
      <summary>
        <para>Указывает, использует ли фильтр параметр.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.IQueryEngineFilter.usesRegularExpressionToken">
      <summary>
        <para>Указывает, использует ли фильтр токен регулярного выражения или нет.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.IQueryEngineFilter.usesResolver">
      <summary>
        <para>Указывает, использует ли фильтр функцию преобразователя.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Search.IQueryEngineFilter.AddOperator(System.String)">
      <summary>
        <para>Добавьте настраиваемый оператор фильтра, относящийся к фильтру.</para>
      </summary>
      <param name="op">Идентификатор оператора.</param>
      <returns>
        <para>Добавленный или существующий Search.QueryFilterOperator|QueryFilterOperator.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.IQueryEngineFilter.AddOrUpdateMetaInfo(System.String,System.String)">
      <summary>
        <para>Добавьте или обновите дополнительную информацию, относящуюся к фильтру.</para>
      </summary>
      <param name="key">Ключ информации.</param>
      <param name="value">Значение информации.</param>
      <returns>
        <para>Текущий фильтр.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.IQueryEngineFilter.AddTypeParser(System.Func`2&lt;System.String,UnityEditor.Search.ParseResult`1&lt;TFilterConstant&gt;&gt;)">
      <summary>
        <para>Добавьте синтаксический анализатор типов, относящийся к фильтру.</para>
      </summary>
      <param name="parser">Обратный вызов, используемый для определения возможности преобразования строки в «TFilterConstant». Принимает строку и возвращает объект Search.ParseResult_1|ParseResult. Он содержит флаг успеха и фактическое преобразованное значение в случае успеха.</param>
      <returns>
        <para>Текущий фильтр.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.IQueryEngineFilter.ClearMetaInfo">
      <summary>
        <para>Удаляет всю дополнительную информацию, относящуюся к фильтру.</para>
      </summary>
      <returns>
        <para>Текущий фильтр.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.IQueryEngineFilter.RemoveMetaInfo(System.String)">
      <summary>
        <para>Удалить информацию о фильтре.</para>
      </summary>
      <param name="key">Ключ информации.</param>
      <returns>
        <para>Текущий фильтр.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.IQueryEngineFilter.RemoveOperator(System.String)">
      <summary>
        <para>Удалите пользовательский оператор, относящийся к фильтру.</para>
      </summary>
      <param name="op">Идентификатор оператора.</param>
      <returns>
        <para>Текущий фильтр.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.IQueryEngineFilter.SetNestedQueryTransformer(System.Func`2&lt;TNestedQueryData,TRhs&gt;)">
      <summary>
        <para>Задает вложенную функцию преобразования запроса фильтра. Эта функция принимает результат вложенного запроса и извлекает необходимые данные для сравнения с фильтром.</para>
      </summary>
      <param name="transformer">Функция преобразователя.</param>
    </member>
    <member name="?:UnityEditor.Search.IQueryHandler_2">
      <summary>
        <para>Интерфейс для обработчиков запросов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Search.IQueryHandler_2.Eval(TData)">
      <summary>
        <para>Реализуйте эту функцию, чтобы выполнить запрос для одного элемента.</para>
      </summary>
      <param name="element">Один объект для тестирования.</param>
      <returns>
        <para>Истина, если объект проходит запрос, и ложь в противном случае.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.IQueryHandler_2.Eval(TPayload)">
      <summary>
        <para>Реализуйте эту функцию для оценки запроса полезной нагрузки.</para>
      </summary>
      <param name="payload">Входные данные запроса.</param>
      <returns>
        <para>Перечислимый тип TData.</para>
      </returns>
    </member>
    <member name="?:UnityEditor.Search.IQueryHandlerFactory_3">
      <summary>
        <para>Интерфейс для фабрик обработчиков запросов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Search.IQueryHandlerFactory_3.Create(UnityEditor.Search.QueryGraph,System.Collections.Generic.ICollection`1&lt;UnityEditor.Search.QueryError&gt;)">
      <summary>
        <para>Реализуйте эту функцию, чтобы создать новый обработчик запросов для определенного графа запросов.</para>
      </summary>
      <param name="graph">График, представляющий запрос.</param>
      <param name="errors">Сборник ошибок. Используйте это, чтобы сообщать об ошибках, когда это необходимо.</param>
      <returns>
        <para>Обработчик IQueryHandler.</para>
      </returns>
    </member>
    <member name="?:UnityEditor.Search.IQueryNode">
      <summary>
        <para>Интерфейс, представляющий узел запроса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.IQueryNode.children">
      <summary>
        <para>Дети узла. Может быть нулевым.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.IQueryNode.identifier">
      <summary>
        <para>Строка, представляющая этот узел и его дочерние элементы.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.IQueryNode.leaf">
      <summary>
        <para>Истинно, если этот узел является листом. Лист не имеет дочерних элементов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.IQueryNode.parent">
      <summary>
        <para>Родитель этого узла. Null, если этот узел является корневым.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.IQueryNode.skipped">
      <summary>
        <para>Истинно, если этот узел пропускается во время оценки. Узел можно пропустить, если QueryEngine настроен на пропуск неподдерживаемых узлов вместо генерации ошибок.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.IQueryNode.token">
      <summary>
        <para>Токен, используемый для создания этого узла.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.IQueryNode.type">
      <summary>
        <para>Тип узла.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Search.IQueryNode.QueryHashCode">
      <summary>
        <para>Возвращает хэш-код для этого узла. Несколько узлов могут иметь один и тот же хэш-код, если они имеют одинаковый идентификатор.</para>
      </summary>
      <returns>
        <para>Целое число, представляющее хэш-код.</para>
      </returns>
    </member>
    <member name="?:UnityEditor.Search.ISearchList">
      <summary>
        <para>Список поиска представляет собой заполненную коллекцию результатов поиска.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.ISearchList.context">
      <summary>
        <para>Любой допустимый контекст поиска, используемый для отслеживания асинхронных поисковых запросов. Может быть нулевым.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.ISearchList.pending">
      <summary>
        <para>Указывает, выполняется ли поисковый запрос и может ли он возвращать дополнительные результаты асинхронно.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Search.ISearchList.AddItems(System.Collections.Generic.IEnumerable`1&lt;UnityEditor.Search.SearchItem&gt;)">
      <summary>
        <para>Добавить новые элементы в список поиска.</para>
      </summary>
      <param name="items">Список элементов, которые необходимо добавить.</param>
    </member>
    <member name="M:UnityEditor.Search.ISearchList.Fetch">
      <summary>
        <para>Выдает элементы поиска до тех пор, пока поисковый запрос не будет завершен.</para>
      </summary>
      <returns>
        <para>Список элементов поиска. Элементы могут быть нулевыми и должны быть отброшены.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.ISearchList.GetRange(System.Int32,System.Int32)">
      <summary>
        <para>Возвращает подмножество элементов.</para>
      </summary>
      <param name="skipCount">Количество строк, которые необходимо пропустить в начале запроса.</param>
      <param name="count">Количество элементов, которые необходимо получить с начала диапазона.</param>
      <returns>
        <para>Поиск элементов в указанном диапазоне.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.ISearchList.InsertRange(System.Int32,System.Collections.Generic.IEnumerable`1&lt;UnityEditor.Search.SearchItem&gt;)">
      <summary>
        <para>Вставить новые элементы поиска в текущий список.</para>
      </summary>
      <param name="index">Указатель, куда должны быть вставлены элементы.</param>
      <param name="items">Элементы для вставки.</param>
    </member>
    <member name="M:UnityEditor.Search.ISearchList.Select(System.Func`2&lt;UnityEditor.Search.SearchItem,TResult&gt;)">
      <summary>
        <para>Перечислять элементы поиска и преобразовывать их во время выборки.</para>
      </summary>
      <param name="selector">Функция, используемая для выбора того, что возвращается в новом перечисляемом списке.</param>
      <returns>
        <para>Новый перечислимый список.</para>
      </returns>
    </member>
    <member name="?:UnityEditor.Search.ISearchNode">
      <summary>
        <para>Интерфейс, представляющий узел запроса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.ISearchNode.exact">
      <summary>
        <para>Истина, если слово или текст должны совпадать точно, и ложь, если это операция "содержит".</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.ISearchNode.searchValue">
      <summary>
        <para>Слово или текст, используемый для поиска.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Search.ISearchView">
      <summary>
        <para>Интерфейс представления поиска, используемый контекстом поиска для выполнения операций пользовательского интерфейса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.ISearchView.context">
      <summary>
        <para>Возвращает текущий контекст поиска представления.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.ISearchView.displayMode">
      <summary>
        <para>Указывает, как данные отображаются в пользовательском интерфейсе.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.ISearchView.filterCallback">
      <summary>
        <para>Обратный вызов, используемый для фильтрации элементов, отображаемых в списке.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.ISearchView.itemIconSize">
      <summary>
        <para>Определяет размер элементов в представлении поиска.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.ISearchView.multiselect">
      <summary>
        <para>Позволяет множественный выбор элементов в списке/сетке элементов. Если false, пользователь может выбрать только один элемент.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.ISearchView.position">
      <summary>
        <para>Возвращает абсолютную позицию окна поиска.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.ISearchView.results">
      <summary>
        <para>Возвращает список всех результатов поиска.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.ISearchView.selectCallback">
      <summary>
        <para>Обратный вызов, используемый для переопределения поведения поиска по умолчанию.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.ISearchView.selection">
      <summary>
        <para>Возвращает выбранные элементы в представлении.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.ISearchView.trackingCallback">
      <summary>
        <para>Обратный вызов, используемый для переопределения поведения отслеживания.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Search.ISearchView.AddSelection(System.Int32[])">
      <summary>
        <para>Добавляет новые элементы к текущему выбору.</para>
      </summary>
      <param name="selection">Массив индексов элементов для добавления к выборке.</param>
    </member>
    <member name="M:UnityEditor.Search.ISearchView.Close">
      <summary>
        <para>Закрывает окно поиска.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Search.ISearchView.ExecuteAction(UnityEditor.Search.SearchAction,UnityEditor.Search.SearchItem[],System.Boolean)">
      <summary>
        <para>Выполняет действие поиска в заданном списке элементов.</para>
      </summary>
      <param name="action">Действие поиска для выполнения.</param>
      <param name="items">Элементы для поиска.</param>
      <param name="endSearch">Если true, выполнение этого действия закрывает окно поиска.</param>
    </member>
    <member name="M:UnityEditor.Search.ISearchView.ExecuteSelection">
      <summary>
        <para>Выполнить действие по умолчанию для активного выбора.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Search.ISearchView.Focus">
      <summary>
        <para>Убедитесь, что окно поиска теперь выбрано для получения ввода от пользователя.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Search.ISearchView.FocusSearch">
      <summary>
        <para>Сфокусируйте элемент управления текстовым полем поиска.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Search.ISearchView.Refresh(UnityEditor.Search.RefreshFlags)">
      <summary>
        <para>Запускает обновление представления поиска и заново извлекает все элементы поиска из включенных поставщиков поиска.</para>
      </summary>
      <param name="reason">Флаги обновления дают некоторый дополнительный контекст и причины, по которым представление необходимо обновить.</param>
    </member>
    <member name="M:UnityEditor.Search.ISearchView.Repaint">
      <summary>
        <para>Запрашивает перерисовку представления поиска.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Search.ISearchView.SelectSearch">
      <summary>
        <para>Помещает фокус в текстовое поле SearchView И выделяет весь текст внутри текстового поля (если есть).</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Search.ISearchView.SetSearchText(System.String,UnityEditor.Search.TextCursorPlacement)">
      <summary>
        <para>Задает текст поискового запроса.</para>
      </summary>
      <param name="searchText">Текст, отображаемый в окне поиска.</param>
      <param name="moveCursor">Позиция курсора после установки искомого текста.</param>
      <param name="cursorInsertPosition">
      </param>
    </member>
    <member name="M:UnityEditor.Search.ISearchView.SetSearchText(System.String,UnityEditor.Search.TextCursorPlacement,System.Int32)">
      <summary>
        <para>Задает текст поискового запроса.</para>
      </summary>
      <param name="searchText">Текст, отображаемый в окне поиска.</param>
      <param name="moveCursor">Позиция курсора после установки искомого текста.</param>
      <param name="cursorInsertPosition">
      </param>
    </member>
    <member name="M:UnityEditor.Search.ISearchView.SetSelection(System.Int32[])">
      <summary>
        <para>Обновляет представление поиска новым выбором.</para>
      </summary>
      <param name="selection">Массив индексов элементов для выбора.</param>
    </member>
    <member name="M:UnityEditor.Search.ISearchView.ShowItemContextualMenu(UnityEditor.Search.SearchItem,UnityEngine.Rect)">
      <summary>
        <para>Показывает контекстное меню для указанного элемента.</para>
      </summary>
      <param name="item">Элемент, на который влияет контекстное меню.</param>
      <param name="contextualActionPosition">Позиция, в которой меню должно отображаться на экране (обычно позиция элемента).</param>
    </member>
    <member name="T:UnityEditor.Search.ObjectIndexer">
      <summary>
        <para>Специализированный Search.SearchIndexer, предоставляющий методы для индексации объекта UnityEngine.Object|Unity из пользовательских индексаторов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Search.ObjectIndexer.IndexNumber(System.Int32,System.String,System.Double)">
      <summary>
        <para>Добавляет в индекс пару "ключ-число-значение". Ключ не будет добавлен с вариантами.</para>
      </summary>
      <param name="documentIndex">Документ, в котором было найдено проиндексированное значение.</param>
      <param name="name">Ключ, используемый для получения значения.</param>
      <param name="number">Числовое значение для сохранения в индексе.</param>
    </member>
    <member name="M:UnityEditor.Search.ObjectIndexer.IndexProperty(System.Int32,System.String,System.String,System.Boolean,System.Boolean)">
      <summary>
        <para>Добавляет значение свойства в индекс. Свойство указывается с ключом и строковым значением. Значение будет сохранено с несколькими вариантами.</para>
      </summary>
      <param name="documentIndex">Документ, в котором было найдено проиндексированное слово.</param>
      <param name="name">Ключ, используемый для получения значения.</param>
      <param name="value">Значение для добавления к индексу.</param>
      <param name="saveKeyword">Определяем, будем ли мы хранить этот ключ в реестре ключевых слов индекса.</param>
      <param name="exact">Если для точного задано значение true, в индексе будет храниться только точное совпадение значения (а не варианты).</param>
    </member>
    <member name="M:UnityEditor.Search.ObjectIndexer.IndexPropertyComponents(System.Int32,System.String,System.String)">
      <summary>
        <para>Индексирует несколько вариантов значения свойства.</para>
      </summary>
      <param name="documentIndex">Дескриптор документа для индексированного свойства.</param>
      <param name="name">Ключ, используемый для получения значения.</param>
      <param name="value">Значение для добавления к индексу.</param>
    </member>
    <member name="M:UnityEditor.Search.ObjectIndexer.IndexWord(System.Int32,System.String&amp;,System.Boolean,System.Int32)">
      <summary>
        <para>Добавляет в указатель новое слово из определенного документа. Слово будет добавлено с несколькими вариантами, позволяющими выполнять частичный поиск.</para>
      </summary>
      <param name="documentIndex">Документ, в котором было найдено проиндексированное слово.</param>
      <param name="word">Слово для добавления в указатель.</param>
      <param name="exact">Если true, мы также сохраним запись с точным соответствием для этого слова.</param>
      <param name="scoreModifier">Изменено для применения к базовой оценке совпадения для определенного слова.</param>
    </member>
    <member name="M:UnityEditor.Search.ObjectIndexer.IndexWord(System.Int32,System.String&amp;,System.Int32,System.Boolean,System.Int32)">
      <summary>
        <para>Слово будет добавлено с максимальной вариацией. Это можно использовать для экономии места для очень больших слов.</para>
      </summary>
      <param name="documentIndex">Документ, в котором было найдено проиндексированное слово.</param>
      <param name="word">Слово для добавления в указатель.</param>
      <param name="maxVariations">Максимальное количество вариантов для вычисления. Не может быть больше длины слова.</param>
      <param name="exact">Если значение равно true, индексатор также сохранит запись с точным соответствием для этого слова.</param>
      <param name="scoreModifier">Изменено для применения к базовой оценке совпадения для определенного слова.</param>
    </member>
    <member name="M:UnityEditor.Search.ObjectIndexer.IndexWordComponents(System.Int32,System.String&amp;)">
      <summary>
        <para>Разбивает слово на несколько вариантов.</para>
      </summary>
      <param name="documentIndex">Документ, в котором было найдено проиндексированное слово.</param>
      <param name="word">Слово для добавления в указатель.</param>
    </member>
    <member name="T:UnityEditor.Search.ParseResult`1">
      <summary>
        <para>ParseResult представляет результат операции синтаксического анализа.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.ParseResult_1.none">
      <summary>
        <para>Значение по умолчанию, если ParsetResult недоступен.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.ParseResult_1.parsedValue">
      <summary>
        <para>Результат синтаксического анализа.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.ParseResult_1.success">
      <summary>
        <para>Флаг, указывающий на успешность синтаксического анализа.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Search.ParseResult_1.#ctor(System.Boolean,T)">
      <summary>
        <para>Создайте ParseResult.</para>
      </summary>
      <param name="success">Флаг, указывающий на успешность синтаксического анализа.</param>
      <param name="value">Результат синтаксического анализа.</param>
    </member>
    <member name="T:UnityEditor.Search.Providers.SceneQueryEngineFilterAttribute">
      <summary>
        <para>Пользовательский атрибут используется для настройки поисковой системы, используемой поставщиком поиска сцен.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Search.Providers.SceneQueryEngineFilterAttribute.#ctor(System.String,System.String[])">
      <summary>
        <para>Создайте фильтр с соответствующим токеном и поддерживаемыми операторами.</para>
      </summary>
      <param name="token">Идентификатор фильтра. Обычно то, что предшествует оператору в фильтре (например, "id" в "id&gt;=2").</param>
      <param name="supportedOperators">Список поддерживаемых токенов оператора. Нуль для всех операторов.</param>
      <param name="options">Параметры сравнения строк.</param>
      <param name="paramTransformerFunction">Имя функции преобразования параметров для использования с этим фильтром. Пометьте функцию преобразования параметров соответствующим атрибутом ParameterTransformer. Дополнительные сведения см. в разделе Search.Providers.SceneQueryEngineParameterTransformerAttribute|SceneQueryEngineParameterTransformer.</param>
    </member>
    <member name="M:UnityEditor.Search.Providers.SceneQueryEngineFilterAttribute.#ctor(System.String,System.StringComparison,System.String[])">
      <summary>
        <para>Создайте фильтр с соответствующим токеном и поддерживаемыми операторами.</para>
      </summary>
      <param name="token">Идентификатор фильтра. Обычно то, что предшествует оператору в фильтре (например, "id" в "id&gt;=2").</param>
      <param name="supportedOperators">Список поддерживаемых токенов оператора. Нуль для всех операторов.</param>
      <param name="options">Параметры сравнения строк.</param>
      <param name="paramTransformerFunction">Имя функции преобразования параметров для использования с этим фильтром. Пометьте функцию преобразования параметров соответствующим атрибутом ParameterTransformer. Дополнительные сведения см. в разделе Search.Providers.SceneQueryEngineParameterTransformerAttribute|SceneQueryEngineParameterTransformer.</param>
    </member>
    <member name="M:UnityEditor.Search.Providers.SceneQueryEngineFilterAttribute.#ctor(System.String,System.String,System.String[])">
      <summary>
        <para>Создайте фильтр с соответствующим токеном и поддерживаемыми операторами.</para>
      </summary>
      <param name="token">Идентификатор фильтра. Обычно то, что предшествует оператору в фильтре (например, "id" в "id&gt;=2").</param>
      <param name="supportedOperators">Список поддерживаемых токенов оператора. Нуль для всех операторов.</param>
      <param name="options">Параметры сравнения строк.</param>
      <param name="paramTransformerFunction">Имя функции преобразования параметров для использования с этим фильтром. Пометьте функцию преобразования параметров соответствующим атрибутом ParameterTransformer. Дополнительные сведения см. в разделе Search.Providers.SceneQueryEngineParameterTransformerAttribute|SceneQueryEngineParameterTransformer.</param>
    </member>
    <member name="M:UnityEditor.Search.Providers.SceneQueryEngineFilterAttribute.#ctor(System.String,System.String,System.StringComparison,System.String[])">
      <summary>
        <para>Создайте фильтр с соответствующим токеном и поддерживаемыми операторами.</para>
      </summary>
      <param name="token">Идентификатор фильтра. Обычно то, что предшествует оператору в фильтре (например, "id" в "id&gt;=2").</param>
      <param name="supportedOperators">Список поддерживаемых токенов оператора. Нуль для всех операторов.</param>
      <param name="options">Параметры сравнения строк.</param>
      <param name="paramTransformerFunction">Имя функции преобразования параметров для использования с этим фильтром. Пометьте функцию преобразования параметров соответствующим атрибутом ParameterTransformer. Дополнительные сведения см. в разделе Search.Providers.SceneQueryEngineParameterTransformerAttribute|SceneQueryEngineParameterTransformer.</param>
    </member>
    <member name="T:UnityEditor.Search.Providers.SceneQueryEngineParameterTransformerAttribute">
      <summary>
        <para>Класс атрибутов, определяющий функцию преобразования настраиваемых параметров, применяемую к запросу, выполняемому в поставщике сцен, определяемом настраиваемым фильтром сцены с использованием атрибута Search.Providers.SceneQueryEngineFilterAttribute.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Search.Query`1">
      <summary>
        <para>Предоставляет методы для определения операции, которую можно использовать для фильтрации набора данных.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.Query_1.returnPayloadIfEmpty">
      <summary>
        <para>логический. Указывает, следует ли возвращать исходную полезную нагрузку, если запрос пуст.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Search.Query_1.Apply(System.Collections.Generic.IEnumerable`1&lt;T&gt;)">
      <summary>
        <para>Применяет фильтрацию к набору данных IEnumerable.</para>
      </summary>
      <param name="data">Данные для фильтрации.</param>
      <returns>
        <para>Отфильтрованный IEnumerable.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.Query_1.Test(T)">
      <summary>
        <para>Проверяет запрос на одном объекте. Возвращает true, если тест пройден.</para>
      </summary>
      <param name="element">Один тестовый объект.</param>
      <returns>
        <para>Истина, если объект проходит запрос, в противном случае возвращает ложь.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Search.Query`2">
      <summary>
        <para>Предоставляет методы для определения операции, которую можно использовать для фильтрации набора данных.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.Query_2.errors">
      <summary>
        <para>Список QueryErrors.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.Query_2.text">
      <summary>
        <para>Текст, сгенерировавший запрос.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.Query_2.tokens">
      <summary>
        <para>Список токенов, найденных в запросе.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.Query_2.valid">
      <summary>
        <para>Указывает, является ли запрос действительным или нет.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Search.Query_2.Apply(TPayload)">
      <summary>
        <para>Применяет фильтрацию к полезной нагрузке.</para>
      </summary>
      <param name="payload">Данные для фильтрации.</param>
      <returns>
        <para>Отфильтрованный IEnumerable.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.Query_2.GetNodeAtPosition(System.Int32)">
      <summary>
        <para>Получить узел запроса, расположенный в указанной позиции индекса в запросе.</para>
      </summary>
      <param name="position">Позиция узла запроса в тексте.</param>
      <returns>
        <para>IQueryNode.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.Query_2.Optimize(System.Boolean,System.Boolean)">
      <summary>
        <para>Оптимизирует запрос, оптимизируя базовый граф фильтрации.</para>
      </summary>
      <param name="propagateNotToLeaves">Распространите операции «Не» на листья, чтобы только листья могли иметь операции «Не» в качестве родителей.</param>
      <param name="swapNotToRightHandSide">Заменяет операции «Не» на правую часть комбинированных операций (т. е. «И», «Или»). Полезно, если операция «Не» выполняется медленно.</param>
      <param name="options">Параметры оптимизации.</param>
    </member>
    <member name="M:UnityEditor.Search.Query_2.Optimize(UnityEditor.Search.QueryGraphOptimizationOptions)">
      <summary>
        <para>Оптимизирует запрос, оптимизируя базовый граф фильтрации.</para>
      </summary>
      <param name="propagateNotToLeaves">Распространите операции «Не» на листья, чтобы только листья могли иметь операции «Не» в качестве родителей.</param>
      <param name="swapNotToRightHandSide">Заменяет операции «Не» на правую часть комбинированных операций (т. е. «И», «Или»). Полезно, если операция «Не» выполняется медленно.</param>
      <param name="options">Параметры оптимизации.</param>
    </member>
    <member name="T:UnityEditor.Search.QueryEngine">
      <summary>
        <para>QueryEngine определяет, как построить запрос из входной строки.
Его можно настроить для поддержки пользовательских фильтров и операторов.
Механизм запросов по умолчанию типа object.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine.#ctor">
      <summary>
        <para>Создайте новый QueryEngine.</para>
      </summary>
      <param name="validateFilters">Указывает, должен ли модуль проверять фильтры при разборе запроса.</param>
      <param name="validationOptions">Параметры проверки для использования в этом движке.</param>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine.#ctor(System.Boolean)">
      <summary>
        <para>Создайте новый QueryEngine.</para>
      </summary>
      <param name="validateFilters">Указывает, должен ли модуль проверять фильтры при разборе запроса.</param>
      <param name="validationOptions">Параметры проверки для использования в этом движке.</param>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine.#ctor(UnityEditor.Search.QueryValidationOptions)">
      <summary>
        <para>Создайте новый QueryEngine.</para>
      </summary>
      <param name="validateFilters">Указывает, должен ли модуль проверять фильтры при разборе запроса.</param>
      <param name="validationOptions">Параметры проверки для использования в этом движке.</param>
    </member>
    <member name="T:UnityEditor.Search.QueryEngine`1">
      <summary>
        <para>QueryEngine определяет, как построить запрос из входной строки.
Его можно настроить для поддержки пользовательских фильтров и операторов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.QueryEngine_1.globalStringComparison">
      <summary>
        <para>Глобальные параметры сравнения строк для сопоставления слов и обработки фильтров (если они не переопределены).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.QueryEngine_1.searchDataCallback">
      <summary>
        <para>Обратный вызов, используемый для получения данных, соответствующих поисковым словам.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.QueryEngine_1.searchDataOverridesStringComparison">
      <summary>
        <para>Указывает, используется ли сопоставление слов/фраз searchDataStringComparison или нет.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.QueryEngine_1.searchDataStringComparison">
      <summary>
        <para>Параметры сравнения строк для соответствия слова/фразы.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.QueryEngine_1.searchWordMatcher">
      <summary>
        <para>Функция, используемая для сопоставления данных поиска с искомыми словами.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.QueryEngine_1.skipIncompleteFilters">
      <summary>
        <para>логический. Указывает, следует ли пропускать неполные фильтры.
Если true, фильтры пропускаются. Если false и Search.QueryEngine_1.validateFilters|validateFilters равно true, неполные фильтры будут генерировать ошибки при анализе.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.QueryEngine_1.skipUnknownFilters">
      <summary>
        <para>логический. Указывает, следует ли пропускать неизвестные фильтры.
Если true, неизвестные фильтры пропускаются. Если значение false и Search.QueryEngine_1.validateFilters|validateFilters равно true, неизвестные фильтры будут генерировать ошибки, если не указан обработчик фильтров по умолчанию.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.QueryEngine_1.validateFilters">
      <summary>
        <para>Получите или задайте, должен ли механизм проверять фильтры при разборе запроса. По умолчанию true.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine_1.AddFilter(System.String,System.Func`2&lt;TData,TFilter&gt;,System.String[])">
      <summary>
        <para>Добавляет новый настраиваемый фильтр.</para>
      </summary>
      <param name="token">Идентификатор фильтра. Обычно то, что предшествует оператору в фильтре (например, "id" в "id&gt;=2").</param>
      <param name="getDataFunc">Обратный вызов используется для получения объекта, который используется в фильтре. Принимает объект типа TData и возвращает объект типа TFilter.</param>
      <param name="stringComparison">Опция сравнения строк.</param>
      <param name="supportedOperatorType">Список поддерживаемых токенов оператора. Этот список содержит токены поддерживаемых операторов. Используйте null или пустой список, чтобы указать, что все операторы поддерживаются.</param>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine_1.AddFilter(System.String,System.Func`2&lt;TData,TFilter&gt;,System.StringComparison,System.String[])">
      <summary>
        <para>Добавляет новый настраиваемый фильтр.</para>
      </summary>
      <param name="token">Идентификатор фильтра. Обычно то, что предшествует оператору в фильтре (например, "id" в "id&gt;=2").</param>
      <param name="getDataFunc">Обратный вызов используется для получения объекта, который используется в фильтре. Принимает объект типа TData и возвращает объект типа TFilter.</param>
      <param name="stringComparison">Опция сравнения строк.</param>
      <param name="supportedOperatorType">Список поддерживаемых токенов оператора. Этот список содержит токены поддерживаемых операторов. Используйте null или пустой список, чтобы указать, что все операторы поддерживаются.</param>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine_1.AddFilter(System.String,System.Func`3&lt;TData,TParam,TFilter&gt;,System.String[])">
      <summary>
        <para>Добавляет новый настраиваемый фильтр с параметрами.</para>
      </summary>
      <param name="token">Идентификатор фильтра. Обычно то, что предшествует оператору в фильтре (например, "id" в "id&gt;=2").</param>
      <param name="getDataFunc">Обратный вызов используется для получения объекта, который используется в фильтре. Принимает объект типа TData и TParam и возвращает объект типа TFilter.</param>
      <param name="parameterTransformer">Обратный вызов, используемый для преобразования строки в тип TParam. Используется при анализе запроса для преобразования того, что передается в функцию, в правильный формат.</param>
      <param name="stringComparison">Опция сравнения строк.</param>
      <param name="supportedOperatorType">Список поддерживаемых токенов оператора. Этот список содержит токены поддерживаемых операторов. Используйте null или пустой список, чтобы указать, что все операторы поддерживаются.</param>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine_1.AddFilter(System.String,System.Func`3&lt;TData,TParam,TFilter&gt;,System.StringComparison,System.String[])">
      <summary>
        <para>Добавляет новый настраиваемый фильтр с параметрами.</para>
      </summary>
      <param name="token">Идентификатор фильтра. Обычно то, что предшествует оператору в фильтре (например, "id" в "id&gt;=2").</param>
      <param name="getDataFunc">Обратный вызов используется для получения объекта, который используется в фильтре. Принимает объект типа TData и TParam и возвращает объект типа TFilter.</param>
      <param name="parameterTransformer">Обратный вызов, используемый для преобразования строки в тип TParam. Используется при анализе запроса для преобразования того, что передается в функцию, в правильный формат.</param>
      <param name="stringComparison">Опция сравнения строк.</param>
      <param name="supportedOperatorType">Список поддерживаемых токенов оператора. Этот список содержит токены поддерживаемых операторов. Используйте null или пустой список, чтобы указать, что все операторы поддерживаются.</param>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine_1.AddFilter(System.String,System.Func`3&lt;TData,TParam,TFilter&gt;,System.Func`2&lt;System.String,TParam&gt;,System.String[])">
      <summary>
        <para>Добавляет новый настраиваемый фильтр с параметрами.</para>
      </summary>
      <param name="token">Идентификатор фильтра. Обычно то, что предшествует оператору в фильтре (например, "id" в "id&gt;=2").</param>
      <param name="getDataFunc">Обратный вызов используется для получения объекта, который используется в фильтре. Принимает объект типа TData и TParam и возвращает объект типа TFilter.</param>
      <param name="parameterTransformer">Обратный вызов, используемый для преобразования строки в тип TParam. Используется при анализе запроса для преобразования того, что передается в функцию, в правильный формат.</param>
      <param name="stringComparison">Опция сравнения строк.</param>
      <param name="supportedOperatorType">Список поддерживаемых токенов оператора. Этот список содержит токены поддерживаемых операторов. Используйте null или пустой список, чтобы указать, что все операторы поддерживаются.</param>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine_1.AddFilter(System.String,System.Func`3&lt;TData,TParam,TFilter&gt;,System.Func`2&lt;System.String,TParam&gt;,System.StringComparison,System.String[])">
      <summary>
        <para>Добавляет новый настраиваемый фильтр с параметрами.</para>
      </summary>
      <param name="token">Идентификатор фильтра. Обычно то, что предшествует оператору в фильтре (например, "id" в "id&gt;=2").</param>
      <param name="getDataFunc">Обратный вызов используется для получения объекта, который используется в фильтре. Принимает объект типа TData и TParam и возвращает объект типа TFilter.</param>
      <param name="parameterTransformer">Обратный вызов, используемый для преобразования строки в тип TParam. Используется при анализе запроса для преобразования того, что передается в функцию, в правильный формат.</param>
      <param name="stringComparison">Опция сравнения строк.</param>
      <param name="supportedOperatorType">Список поддерживаемых токенов оператора. Этот список содержит токены поддерживаемых операторов. Используйте null или пустой список, чтобы указать, что все операторы поддерживаются.</param>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine_1.AddFilter(System.String,System.Func`4&lt;TData,System.String,TFilter,System.Boolean&gt;,System.String[])">
      <summary>
        <para>Добавляет новый настраиваемый фильтр с полным преобразователем.</para>
      </summary>
      <param name="token">Идентификатор фильтра. Обычно то, что предшествует оператору в фильтре (например, "id" в "id&gt;=2").</param>
      <param name="filterResolver">Обратный вызов, используемый для обработки любых операторов для этого фильтра. Принимает объект типа TData, токен оператора и значение фильтра и возвращает логическое значение, указывающее, прошел фильтр или нет.</param>
      <param name="supportedOperatorType">Список поддерживаемых токенов оператора. Этот список содержит токены поддерживаемых операторов. Используйте null или пустой список, чтобы указать, что все операторы поддерживаются.</param>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine_1.AddFilter(System.String,System.Func`5&lt;TData,TParam,System.String,TFilter,System.Boolean&gt;,System.String[])">
      <summary>
        <para>Добавляет новый настраиваемый фильтр с параметрами и полный преобразователь.</para>
      </summary>
      <param name="token">Идентификатор фильтра. Обычно то, что предшествует оператору в фильтре (например, "id" в "id&gt;=2").</param>
      <param name="filterResolver">Обратный вызов, используемый для обработки любых операторов для этого фильтра. Принимает объект типа TData, объект типа TParam, токен оператора и значение фильтра и возвращает логическое значение, указывающее, прошел фильтр или нет.</param>
      <param name="parameterTransformer">Обратный вызов, используемый для преобразования строки в тип TParam. Используется при анализе запроса для преобразования того, что передается в функцию, в правильный формат.</param>
      <param name="supportedOperatorType">Список поддерживаемых токенов оператора. Этот список содержит токены поддерживаемых операторов. Используйте null или пустой список, чтобы указать, что все операторы поддерживаются.</param>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine_1.AddFilter(System.String,System.Func`5&lt;TData,TParam,System.String,TFilter,System.Boolean&gt;,System.Func`2&lt;System.String,TParam&gt;,System.String[])">
      <summary>
        <para>Добавляет новый настраиваемый фильтр с параметрами и полный преобразователь.</para>
      </summary>
      <param name="token">Идентификатор фильтра. Обычно то, что предшествует оператору в фильтре (например, "id" в "id&gt;=2").</param>
      <param name="filterResolver">Обратный вызов, используемый для обработки любых операторов для этого фильтра. Принимает объект типа TData, объект типа TParam, токен оператора и значение фильтра и возвращает логическое значение, указывающее, прошел фильтр или нет.</param>
      <param name="parameterTransformer">Обратный вызов, используемый для преобразования строки в тип TParam. Используется при анализе запроса для преобразования того, что передается в функцию, в правильный формат.</param>
      <param name="supportedOperatorType">Список поддерживаемых токенов оператора. Этот список содержит токены поддерживаемых операторов. Используйте null или пустой список, чтобы указать, что все операторы поддерживаются.</param>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine_1.AddFilter(System.Text.RegularExpressions.Regex,System.Func`3&lt;TData,System.String,TFilter&gt;,System.String[])">
      <summary>
        <para>Добавляет новый настраиваемый фильтр с регулярным выражением.</para>
      </summary>
      <param name="token">Регулярное выражение, соответствующее фильтру. Соответствует тому, что предшествует оператору в фильтре (например, "id" в "id&gt;=2").</param>
      <param name="getDataFunc">Обратный вызов используется для получения объекта, который используется в фильтре. Принимает объект типа TData, строку, представляющую фактическое имя фильтра, которое было сопоставлено, и возвращает объект типа TFilter.</param>
      <param name="supportedOperatorType">Список поддерживаемых токенов оператора. Этот список содержит токены поддерживаемых операторов. Используйте null или пустой список, чтобы указать, что все операторы поддерживаются.</param>
      <param name="stringComparison">Опция сравнения строк.</param>
      <returns>
        <para>Новый фильтр.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine_1.AddFilter(System.Text.RegularExpressions.Regex,System.Func`3&lt;TData,System.String,TFilter&gt;,System.StringComparison,System.String[])">
      <summary>
        <para>Добавляет новый настраиваемый фильтр с регулярным выражением.</para>
      </summary>
      <param name="token">Регулярное выражение, соответствующее фильтру. Соответствует тому, что предшествует оператору в фильтре (например, "id" в "id&gt;=2").</param>
      <param name="getDataFunc">Обратный вызов используется для получения объекта, который используется в фильтре. Принимает объект типа TData, строку, представляющую фактическое имя фильтра, которое было сопоставлено, и возвращает объект типа TFilter.</param>
      <param name="supportedOperatorType">Список поддерживаемых токенов оператора. Этот список содержит токены поддерживаемых операторов. Используйте null или пустой список, чтобы указать, что все операторы поддерживаются.</param>
      <param name="stringComparison">Опция сравнения строк.</param>
      <returns>
        <para>Новый фильтр.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine_1.AddFilter(System.Text.RegularExpressions.Regex,System.Func`4&lt;TData,System.String,TParam,TFilter&gt;,System.String[])">
      <summary>
        <para>Добавляет новый настраиваемый фильтр с регулярным выражением и параметрами.</para>
      </summary>
      <param name="token">Регулярное выражение, соответствующее фильтру. Соответствует тому, что предшествует оператору в фильтре (например, "id" в "id&gt;=2").</param>
      <param name="getDataFunc">Обратный вызов используется для получения объекта, который используется в фильтре. Принимает объект типа TData, строку, представляющую фактическое имя совпавшего фильтра, объект типа TParam и возвращает объект типа TFilter.</param>
      <param name="supportedOperatorType">Список поддерживаемых токенов оператора. Этот список содержит токены поддерживаемых операторов. Используйте null или пустой список, чтобы указать, что все операторы поддерживаются.</param>
      <param name="stringComparison">Опция сравнения строк.</param>
      <param name="parameterTransformer">Обратный вызов, используемый для преобразования строки в тип TParam. Используется при анализе запроса для преобразования того, что передается в функцию, в правильный формат.</param>
      <returns>
        <para>Новый фильтр.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine_1.AddFilter(System.Text.RegularExpressions.Regex,System.Func`4&lt;TData,System.String,TParam,TFilter&gt;,System.StringComparison,System.String[])">
      <summary>
        <para>Добавляет новый настраиваемый фильтр с регулярным выражением и параметрами.</para>
      </summary>
      <param name="token">Регулярное выражение, соответствующее фильтру. Соответствует тому, что предшествует оператору в фильтре (например, "id" в "id&gt;=2").</param>
      <param name="getDataFunc">Обратный вызов используется для получения объекта, который используется в фильтре. Принимает объект типа TData, строку, представляющую фактическое имя совпавшего фильтра, объект типа TParam и возвращает объект типа TFilter.</param>
      <param name="supportedOperatorType">Список поддерживаемых токенов оператора. Этот список содержит токены поддерживаемых операторов. Используйте null или пустой список, чтобы указать, что все операторы поддерживаются.</param>
      <param name="stringComparison">Опция сравнения строк.</param>
      <param name="parameterTransformer">Обратный вызов, используемый для преобразования строки в тип TParam. Используется при анализе запроса для преобразования того, что передается в функцию, в правильный формат.</param>
      <returns>
        <para>Новый фильтр.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine_1.AddFilter(System.Text.RegularExpressions.Regex,System.Func`4&lt;TData,System.String,TParam,TFilter&gt;,System.Func`2&lt;System.String,TParam&gt;,System.String[])">
      <summary>
        <para>Добавляет новый настраиваемый фильтр с регулярным выражением и параметрами.</para>
      </summary>
      <param name="token">Регулярное выражение, соответствующее фильтру. Соответствует тому, что предшествует оператору в фильтре (например, "id" в "id&gt;=2").</param>
      <param name="getDataFunc">Обратный вызов используется для получения объекта, который используется в фильтре. Принимает объект типа TData, строку, представляющую фактическое имя совпавшего фильтра, объект типа TParam и возвращает объект типа TFilter.</param>
      <param name="supportedOperatorType">Список поддерживаемых токенов оператора. Этот список содержит токены поддерживаемых операторов. Используйте null или пустой список, чтобы указать, что все операторы поддерживаются.</param>
      <param name="stringComparison">Опция сравнения строк.</param>
      <param name="parameterTransformer">Обратный вызов, используемый для преобразования строки в тип TParam. Используется при анализе запроса для преобразования того, что передается в функцию, в правильный формат.</param>
      <returns>
        <para>Новый фильтр.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine_1.AddFilter(System.Text.RegularExpressions.Regex,System.Func`4&lt;TData,System.String,TParam,TFilter&gt;,System.Func`2&lt;System.String,TParam&gt;,System.StringComparison,System.String[])">
      <summary>
        <para>Добавляет новый настраиваемый фильтр с регулярным выражением и параметрами.</para>
      </summary>
      <param name="token">Регулярное выражение, соответствующее фильтру. Соответствует тому, что предшествует оператору в фильтре (например, "id" в "id&gt;=2").</param>
      <param name="getDataFunc">Обратный вызов используется для получения объекта, который используется в фильтре. Принимает объект типа TData, строку, представляющую фактическое имя совпавшего фильтра, объект типа TParam и возвращает объект типа TFilter.</param>
      <param name="supportedOperatorType">Список поддерживаемых токенов оператора. Этот список содержит токены поддерживаемых операторов. Используйте null или пустой список, чтобы указать, что все операторы поддерживаются.</param>
      <param name="stringComparison">Опция сравнения строк.</param>
      <param name="parameterTransformer">Обратный вызов, используемый для преобразования строки в тип TParam. Используется при анализе запроса для преобразования того, что передается в функцию, в правильный формат.</param>
      <returns>
        <para>Новый фильтр.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine_1.AddFilter(System.Text.RegularExpressions.Regex,System.Func`5&lt;TData,System.String,System.String,TFilter,System.Boolean&gt;,System.String[])">
      <summary>
        <para>Добавляет новый настраиваемый фильтр с регулярным выражением и полным преобразователем.</para>
      </summary>
      <param name="token">Регулярное выражение, соответствующее фильтру. Соответствует тому, что предшествует оператору в фильтре (например, "id" в "id&gt;=2").</param>
      <param name="filterResolver">Обратный вызов, используемый для обработки любых операторов для этого фильтра. Принимает объект типа TData, строку, представляющую фактическое имя фильтра, который совпал, токен оператора и значение фильтра, и возвращает логическое значение, указывающее, прошел фильтр или нет.</param>
      <param name="supportedOperatorType">Список поддерживаемых токенов оператора. Этот список содержит токены поддерживаемых операторов. Используйте null или пустой список, чтобы указать, что все операторы поддерживаются.</param>
      <returns>
        <para>Новый фильтр.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine_1.AddFilter(System.Text.RegularExpressions.Regex,System.Func`6&lt;TData,System.String,TParam,System.String,TFilter,System.Boolean&gt;,System.String[])">
      <summary>
        <para>Добавляет новый настраиваемый фильтр с регулярным выражением, параметрами и полным преобразователем.</para>
      </summary>
      <param name="token">Регулярное выражение, соответствующее фильтру. Соответствует тому, что предшествует оператору в фильтре (например, "id" в "id&gt;=2").</param>
      <param name="filterResolver">Обратный вызов, используемый для обработки любых операторов для этого фильтра. Принимает объект типа TData, строку, представляющую фактическое имя фильтра, которое было сопоставлено, объект типа TParam, токен оператора и значение фильтра, и возвращает логическое значение, указывающее, прошел фильтр или нет.</param>
      <param name="supportedOperatorType">Список поддерживаемых токенов оператора. Этот список содержит токены поддерживаемых операторов. Используйте null или пустой список, чтобы указать, что все операторы поддерживаются.</param>
      <param name="parameterTransformer">Обратный вызов, используемый для преобразования строки в тип TParam. Используется при анализе запроса для преобразования того, что передается в функцию, в правильный формат.</param>
      <returns>
        <para>Новый фильтр.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine_1.AddFilter(System.Text.RegularExpressions.Regex,System.Func`6&lt;TData,System.String,TParam,System.String,TFilter,System.Boolean&gt;,System.Func`2&lt;System.String,TParam&gt;,System.String[])">
      <summary>
        <para>Добавляет новый настраиваемый фильтр с регулярным выражением, параметрами и полным преобразователем.</para>
      </summary>
      <param name="token">Регулярное выражение, соответствующее фильтру. Соответствует тому, что предшествует оператору в фильтре (например, "id" в "id&gt;=2").</param>
      <param name="filterResolver">Обратный вызов, используемый для обработки любых операторов для этого фильтра. Принимает объект типа TData, строку, представляющую фактическое имя фильтра, которое было сопоставлено, объект типа TParam, токен оператора и значение фильтра, и возвращает логическое значение, указывающее, прошел фильтр или нет.</param>
      <param name="supportedOperatorType">Список поддерживаемых токенов оператора. Этот список содержит токены поддерживаемых операторов. Используйте null или пустой список, чтобы указать, что все операторы поддерживаются.</param>
      <param name="parameterTransformer">Обратный вызов, используемый для преобразования строки в тип TParam. Используется при анализе запроса для преобразования того, что передается в функцию, в правильный формат.</param>
      <returns>
        <para>Новый фильтр.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine_1.AddFiltersFromAttribute">
      <summary>
        <para>Добавляет все пользовательские фильтры, идентифицированные атрибутом метода TFilterAttribute.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine_1.AddNestedQueryAggregator(System.String,System.Func`2&lt;System.Collections.Generic.IEnumerable`1&lt;TNestedQueryData&gt;,System.Collections.Generic.IEnumerable`1&lt;TNestedQueryData&gt;&gt;)">
      <summary>
        <para>Добавляет новый агрегатор вложенных запросов. Агрегатор — это операция, которую можно применить к вложенному запросу для агрегирования результатов вложенного запроса в соответствии с определенными критериями.</para>
      </summary>
      <param name="token">Имя агрегатора, используемого при вводе запроса. Это имя преобразуется в нижний регистр при анализе запроса для ускорения процесса.</param>
      <param name="aggregator">Функция агрегатора. Получает результаты вложенного запроса и возвращает агрегат, содержащий любое количество элементов.</param>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine_1.AddOperator(System.String)">
      <summary>
        <para>Добавляет пользовательский оператор фильтра.</para>
      </summary>
      <param name="op">Идентификатор оператора.</param>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine_1.AddOperatorHandler(System.String,System.Func`3&lt;TFilterVariable,TFilterConstant,System.Boolean&gt;)">
      <summary>
        <para>Добавляет пользовательский обработчик оператора фильтра.</para>
      </summary>
      <param name="op">Оператор фильтра.</param>
      <param name="handler">Обратный вызов для обработки операции. Принимает TFilterVariable (значение, возвращаемое обработчиком фильтра, оно будет различаться для каждого элемента), TFilterConstant (правое значение оператора, которое является константой) и параметр StringComparison и возвращает логическое значение, указывающее, проходит ли фильтр. или нет.</param>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine_1.AddOperatorHandler(System.String,System.Func`4&lt;TFilterVariable,TFilterConstant,System.StringComparison,System.Boolean&gt;)">
      <summary>
        <para>Добавляет пользовательский обработчик оператора фильтра.</para>
      </summary>
      <param name="op">Оператор фильтра.</param>
      <param name="handler">Обратный вызов для обработки операции. Принимает TFilterVariable (значение, возвращаемое обработчиком фильтра, оно будет различаться для каждого элемента), TFilterConstant (правое значение оператора, которое является константой) и параметр StringComparison и возвращает логическое значение, указывающее, проходит ли фильтр. или нет.</param>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine_1.AddTypeParser(System.Func`2&lt;System.String,UnityEditor.Search.ParseResult`1&lt;TFilterConstant&gt;&gt;)">
      <summary>
        <para>Добавляет анализатор типов, который анализирует строку и возвращает пользовательский тип. Используется обработчиками пользовательских операторов (см. Search.QueryEngine_1.AddOperatorHandler|AddOperatorHandler).</para>
      </summary>
      <param name="parser">Обратный вызов, используемый для определения возможности преобразования строки в TFilterConstant. Принимает строку и возвращает объект ParseResult. Он содержит флаг успеха и преобразованное значение в случае успеха.</param>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine_1.ClearFilters">
      <summary>
        <para>Удаляет все фильтры, добавленные в Search.QueryEngine_1|QueryEngine.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine_1.#ctor">
      <summary>
        <para>Создает новый QueryEngine.</para>
      </summary>
      <param name="validateFilters">Указывает, должен ли модуль проверять фильтры при разборе запроса.</param>
      <param name="validationOptions">Параметры проверки для использования в этом движке.</param>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine_1.#ctor(System.Boolean)">
      <summary>
        <para>Создает новый QueryEngine.</para>
      </summary>
      <param name="validateFilters">Указывает, должен ли модуль проверять фильтры при разборе запроса.</param>
      <param name="validationOptions">Параметры проверки для использования в этом движке.</param>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine_1.#ctor(UnityEditor.Search.QueryValidationOptions)">
      <summary>
        <para>Создает новый QueryEngine.</para>
      </summary>
      <param name="validateFilters">Указывает, должен ли модуль проверять фильтры при разборе запроса.</param>
      <param name="validationOptions">Параметры проверки для использования в этом движке.</param>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine_1.GetAllFilters">
      <summary>
        <para>Получите все фильтры, добавленные в этот Search.QueryEngine_1|QueryEngine.</para>
      </summary>
      <returns>
        <para>Перечислимое Search.IQueryEngineFilter|IQueryEngineFilter.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine_1.GetOperator(System.String)">
      <summary>
        <para>Получите пользовательский оператор, добавленный в Search.QueryEngine_1|QueryEngine.</para>
      </summary>
      <param name="op">Идентификатор оператора.</param>
      <returns>
        <para>Глобальный Search.QueryFilterOperator|QueryFilterOperator.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine_1.Parse(System.String,System.Boolean)">
      <summary>
        <para>Преобразует строку запроса в операцию запроса. Затем эту операцию запроса можно использовать для фильтрации любого набора данных типа TData.</para>
      </summary>
      <param name="text">Строка ввода запроса.</param>
      <param name="useFastYieldingQueryHandler">Установите значение true, чтобы получить запрос, который дает нулевые результаты для элементов, которые не проходят запрос, а не только для элементов, которые проходят запрос.</param>
      <returns>
        <para>Операция запроса типа TData.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine_1.Parse(System.String)">
      <summary>
        <para>Преобразует строку запроса в операцию запроса. Затем эту операцию запроса можно использовать для фильтрации любого набора данных типа TData.</para>
      </summary>
      <param name="text">Строка ввода запроса.</param>
      <param name="useFastYieldingQueryHandler">Установите значение true, чтобы получить запрос, который дает нулевые результаты для элементов, которые не проходят запрос, а не только для элементов, которые проходят запрос.</param>
      <returns>
        <para>Операция запроса типа TData.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine_1.Parse(System.String,UnityEditor.Search.IQueryHandlerFactory`3&lt;TData,TQueryHandler,TPayload&gt;)">
      <summary>
        <para>Преобразует строку запроса в операцию запроса. Затем эту операцию запроса можно использовать для фильтрации любого набора данных типа TData.</para>
      </summary>
      <param name="text">Строка ввода запроса.</param>
      <param name="queryHandlerFactory">Фабричный объект, создающий обработчики запросов типа TQueryHandler. См. Search.IQueryHandlerFactory_3|IQueryHandlerFactory.</param>
      <returns>
        <para>Операция запроса типа TData и TPayload.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine_1.RemoveFilter(System.String)">
      <summary>
        <para>Удаляет пользовательский фильтр.</para>
      </summary>
      <param name="token">Идентификатор фильтра. Обычно то, что предшествует оператору в фильтре (например, "id" в "id&gt;=2").</param>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine_1.RemoveFilter(System.Text.RegularExpressions.Regex)">
      <summary>
        <para>Удаляет пользовательский фильтр.</para>
      </summary>
      <param name="token">Идентификатор фильтра. Обычно то, что предшествует оператору в фильтре (например, "id" в "id&gt;=2").</param>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine_1.RemoveFilter(UnityEditor.Search.IQueryEngineFilter)">
      <summary>
        <para>Удаляет пользовательский фильтр.</para>
      </summary>
      <param name="filter">Объект фильтра, возвращаемый Search.QueryEngine_1.AddFilter|AddFilter.</param>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine_1.RemoveOperator(System.String)">
      <summary>
        <para>Удаляет пользовательский оператор, добавленный в Search.QueryEngine_1|QueryEngine.</para>
      </summary>
      <param name="op">Идентификатор оператора.</param>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine_1.SetDefaultFilter(System.Func`5&lt;TData,System.String,System.String,System.String,System.Boolean&gt;)">
      <summary>
        <para>Задает обработчик фильтра по умолчанию для незарегистрированных фильтров.</para>
      </summary>
      <param name="handler">Обратный вызов, используемый для обработки фильтра. Принимает объект типа TData, идентификатор фильтра, оператор и значение фильтра и возвращает логическое значение, указывающее, прошел фильтр или нет.</param>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine_1.SetDefaultParamFilter(System.Func`6&lt;TData,System.String,System.String,System.String,System.String,System.Boolean&gt;)">
      <summary>
        <para>Задает обработчик фильтра по умолчанию для незарегистрированных фильтров функций.</para>
      </summary>
      <param name="handler">Обратный вызов, используемый для обработки фильтра функций. Принимает объект типа TData, идентификатор фильтра, параметр, оператор и значение фильтра и возвращает логическое значение, указывающее, прошел фильтр или нет.</param>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine_1.SetFilterNestedQueryTransformer(System.String,System.Func`2&lt;TNestedQueryData,TRhs&gt;)">
      <summary>
        <para>Задает вложенную функцию преобразования запроса фильтра. Эта функция принимает результат вложенного запроса и извлекает необходимые данные для сравнения с фильтром.</para>
      </summary>
      <param name="filterToken">Идентификатор фильтра. Обычно то, что предшествует оператору в фильтре (например, "id" в "id&gt;=2").</param>
      <param name="transformer">Функция преобразователя.</param>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine_1.SetGlobalStringComparisonOptions(System.StringComparison)">
      <summary>
        <para>Задает глобальные параметры сравнения строк. Используется для сопоставления слов и обработки фильтров (если это не переопределено фильтром).</para>
      </summary>
      <param name="stringComparison">Параметры сравнения строк.</param>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine_1.SetNestedQueryHandler(System.Func`3&lt;System.String,System.String,System.Collections.Generic.IEnumerable`1&lt;TNestedQueryData&gt;&gt;)">
      <summary>
        <para>Устанавливает функцию, которая будет обрабатывать вложенные запросы. Можно установить только один обработчик.</para>
      </summary>
      <param name="handler">Функция, которая обрабатывает вложенные запросы. Он получает вложенный запрос и токен фильтра, к которому применяется запрос, и возвращает IEnumerable.</param>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine_1.SetSearchDataCallback(System.Func`2&lt;TData,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;&gt;)">
      <summary>
        <para>Задает обратный вызов, используемый для извлечения данных, соответствующих словам поиска.</para>
      </summary>
      <param name="getSearchDataCallback">Обратный вызов используется для сопоставления данных с поисковыми словами. Принимает объект типа TData и возвращает IEnumerable строк.</param>
      <param name="stringComparison">Параметры сравнения строк.</param>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine_1.SetSearchDataCallback(System.Func`2&lt;TData,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;&gt;,System.StringComparison)">
      <summary>
        <para>Задает обратный вызов, используемый для извлечения данных, соответствующих словам поиска.</para>
      </summary>
      <param name="getSearchDataCallback">Обратный вызов используется для сопоставления данных с поисковыми словами. Принимает объект типа TData и возвращает IEnumerable строк.</param>
      <param name="stringComparison">Параметры сравнения строк.</param>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine_1.SetSearchDataCallback(System.Func`2&lt;TData,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;&gt;,System.Func`2&lt;System.String,System.String&gt;,System.StringComparison)">
      <summary>
        <para>Задает обратный вызов, используемый для извлечения данных, соответствующих словам поиска.</para>
      </summary>
      <param name="getSearchDataCallback">Обратный вызов используется для сопоставления данных с поисковыми словами. Принимает объект типа TData и возвращает IEnumerable строк.</param>
      <param name="searchWordTransformerCallback">Обратный вызов, используемый для преобразования поискового слова во время разбора запроса. Полезно при сравнении строчных или прописных букв. Может возвращать null или пустую строку, чтобы удалить слово из запроса.</param>
      <param name="stringComparison">Параметры сравнения строк.</param>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine_1.SetSearchWordMatcher(System.Func`5&lt;System.String,System.Boolean,System.StringComparison,System.String,System.Boolean&gt;)">
      <summary>
        <para>Установите функцию сопоставления поисковых слов, которая будет использоваться вместо функции по умолчанию. Установите значение null, чтобы использовать значение по умолчанию.</para>
      </summary>
      <param name="wordMatcher">Функция поиска соответствия слов. Первым параметром является искомое слово. Второй параметр является логическим значением для точного совпадения или нет. Третий параметр — это параметры StringComparison. Четвертый параметр — это элемент массива, возвращаемый обратным вызовом поисковых данных. Функция возвращает true в случае совпадения или false в случае отсутствия соответствия.</param>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine_1.TryGetFilter(System.String,UnityEditor.Search.IQueryEngineFilter&amp;)">
      <summary>
        <para>Получить фильтр по его токену.</para>
      </summary>
      <param name="token">Маркер, используемый для создания фильтра.</param>
      <param name="filter">Существующий Search.IQueryEngineFilter|IQueryEngineFilter или null, если он не существует.</param>
      <returns>
        <para>Возвращает true, если фильтр получен, или false, если фильтр не существует.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.QueryEngine_1.TryGetFilter(System.Text.RegularExpressions.Regex,UnityEditor.Search.IQueryEngineFilter&amp;)">
      <summary>
        <para>Получить фильтр по его токену.</para>
      </summary>
      <param name="token">Маркер, используемый для создания фильтра.</param>
      <param name="filter">Существующий Search.IQueryEngineFilter|IQueryEngineFilter или null, если он не существует.</param>
      <returns>
        <para>Возвращает true, если фильтр получен, или false, если фильтр не существует.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Search.QueryEngineFilterAttribute">
      <summary>
        <para>Базовый класс атрибутов, используемый для определения пользовательского фильтра в QueryEngine.
Этот атрибут поддерживает все типы фильтров, поддерживаемые QueryEngine.AddFilter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.QueryEngineFilterAttribute.comparisonOptions">
      <summary>
        <para>Параметры сравнения строк.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.QueryEngineFilterAttribute.overridesStringComparison">
      <summary>
        <para>Флаг, указывающий, переопределяет ли фильтр глобальные параметры сравнения строк.
Задайте значение true, если используютсяcompareOptions.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.QueryEngineFilterAttribute.paramTransformerFunction">
      <summary>
        <para>Имя функции преобразования параметров для использования с этим фильтром.
Пометьте функцию преобразования параметров соответствующим атрибутом ParameterTransformer.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.QueryEngineFilterAttribute.supportedOperators">
      <summary>
        <para>Список поддерживаемых токенов оператора. Нуль для всех операторов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.QueryEngineFilterAttribute.token">
      <summary>
        <para>Идентификатор фильтра. Обычно то, что предшествует оператору в фильтре (например, "id" в "id&gt;=2").</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.QueryEngineFilterAttribute.useParamTransformer">
      <summary>
        <para>Флаг, указывающий, использует ли этот фильтр функцию преобразования параметров.
Установите значение true, если используется paramTransformerFunction.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.QueryEngineFilterAttribute.useRegularExpressionToken">
      <summary>
        <para>Указывает, использует ли фильтр токен регулярного выражения или нет.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Search.QueryEngineFilterAttribute.#ctor(System.String,System.String[])">
      <summary>
        <para>Создайте фильтр с соответствующим токеном и поддерживаемыми операторами.</para>
      </summary>
      <param name="token">Идентификатор фильтра. Обычно то, что предшествует оператору в фильтре (например, "id" в "id&gt;=2").</param>
      <param name="supportedOperators">Список поддерживаемых токенов оператора. Этот список содержит токены поддерживаемых операторов. Используйте null или пустой список, чтобы указать, что все операторы поддерживаются.</param>
      <param name="options">Параметры сравнения строк.</param>
      <param name="paramTransformerFunction">Имя функции преобразования параметров для использования с этим фильтром. Пометьте функцию преобразования параметров соответствующим атрибутом ParameterTransformer.</param>
    </member>
    <member name="M:UnityEditor.Search.QueryEngineFilterAttribute.#ctor(System.String,System.StringComparison,System.String[])">
      <summary>
        <para>Создайте фильтр с соответствующим токеном и поддерживаемыми операторами.</para>
      </summary>
      <param name="token">Идентификатор фильтра. Обычно то, что предшествует оператору в фильтре (например, "id" в "id&gt;=2").</param>
      <param name="supportedOperators">Список поддерживаемых токенов оператора. Этот список содержит токены поддерживаемых операторов. Используйте null или пустой список, чтобы указать, что все операторы поддерживаются.</param>
      <param name="options">Параметры сравнения строк.</param>
      <param name="paramTransformerFunction">Имя функции преобразования параметров для использования с этим фильтром. Пометьте функцию преобразования параметров соответствующим атрибутом ParameterTransformer.</param>
    </member>
    <member name="M:UnityEditor.Search.QueryEngineFilterAttribute.#ctor(System.String,System.String,System.String[])">
      <summary>
        <para>Создайте фильтр с соответствующим токеном и поддерживаемыми операторами.</para>
      </summary>
      <param name="token">Идентификатор фильтра. Обычно то, что предшествует оператору в фильтре (например, "id" в "id&gt;=2").</param>
      <param name="supportedOperators">Список поддерживаемых токенов оператора. Этот список содержит токены поддерживаемых операторов. Используйте null или пустой список, чтобы указать, что все операторы поддерживаются.</param>
      <param name="options">Параметры сравнения строк.</param>
      <param name="paramTransformerFunction">Имя функции преобразования параметров для использования с этим фильтром. Пометьте функцию преобразования параметров соответствующим атрибутом ParameterTransformer.</param>
    </member>
    <member name="M:UnityEditor.Search.QueryEngineFilterAttribute.#ctor(System.String,System.String,System.StringComparison,System.String[])">
      <summary>
        <para>Создайте фильтр с соответствующим токеном и поддерживаемыми операторами.</para>
      </summary>
      <param name="token">Идентификатор фильтра. Обычно то, что предшествует оператору в фильтре (например, "id" в "id&gt;=2").</param>
      <param name="supportedOperators">Список поддерживаемых токенов оператора. Этот список содержит токены поддерживаемых операторов. Используйте null или пустой список, чтобы указать, что все операторы поддерживаются.</param>
      <param name="options">Параметры сравнения строк.</param>
      <param name="paramTransformerFunction">Имя функции преобразования параметров для использования с этим фильтром. Пометьте функцию преобразования параметров соответствующим атрибутом ParameterTransformer.</param>
    </member>
    <member name="M:UnityEditor.Search.QueryEngineFilterAttribute.#ctor(System.String,System.Boolean,System.String[])">
      <summary>
        <para>Создайте фильтр с соответствующим токеном и поддерживаемыми операторами.</para>
      </summary>
      <param name="token">Идентификатор фильтра или регулярное выражение, соответствующее фильтрам. Обычно то, что предшествует оператору в фильтре (например, "id" в "id&gt;=2").</param>
      <param name="useRegularExpression">Установите для этого флага значение true, если токен является регулярным выражением.</param>
      <param name="supportedOperators">Список поддерживаемых токенов оператора. Этот список содержит токены поддерживаемых операторов. Используйте null или пустой список, чтобы указать, что все операторы поддерживаются.</param>
      <param name="options">Параметры сравнения строк.</param>
      <param name="paramTransformerFunction">Имя функции преобразования параметров для использования с этим фильтром. Пометьте функцию преобразования параметров соответствующим атрибутом ParameterTransformer.</param>
    </member>
    <member name="M:UnityEditor.Search.QueryEngineFilterAttribute.#ctor(System.String,System.Boolean,System.StringComparison,System.String[])">
      <summary>
        <para>Создайте фильтр с соответствующим токеном и поддерживаемыми операторами.</para>
      </summary>
      <param name="token">Идентификатор фильтра или регулярное выражение, соответствующее фильтрам. Обычно то, что предшествует оператору в фильтре (например, "id" в "id&gt;=2").</param>
      <param name="useRegularExpression">Установите для этого флага значение true, если токен является регулярным выражением.</param>
      <param name="supportedOperators">Список поддерживаемых токенов оператора. Этот список содержит токены поддерживаемых операторов. Используйте null или пустой список, чтобы указать, что все операторы поддерживаются.</param>
      <param name="options">Параметры сравнения строк.</param>
      <param name="paramTransformerFunction">Имя функции преобразования параметров для использования с этим фильтром. Пометьте функцию преобразования параметров соответствующим атрибутом ParameterTransformer.</param>
    </member>
    <member name="M:UnityEditor.Search.QueryEngineFilterAttribute.#ctor(System.String,System.Boolean,System.String,System.String[])">
      <summary>
        <para>Создайте фильтр с соответствующим токеном и поддерживаемыми операторами.</para>
      </summary>
      <param name="token">Идентификатор фильтра или регулярное выражение, соответствующее фильтрам. Обычно то, что предшествует оператору в фильтре (например, "id" в "id&gt;=2").</param>
      <param name="useRegularExpression">Установите для этого флага значение true, если токен является регулярным выражением.</param>
      <param name="supportedOperators">Список поддерживаемых токенов оператора. Этот список содержит токены поддерживаемых операторов. Используйте null или пустой список, чтобы указать, что все операторы поддерживаются.</param>
      <param name="options">Параметры сравнения строк.</param>
      <param name="paramTransformerFunction">Имя функции преобразования параметров для использования с этим фильтром. Пометьте функцию преобразования параметров соответствующим атрибутом ParameterTransformer.</param>
    </member>
    <member name="M:UnityEditor.Search.QueryEngineFilterAttribute.#ctor(System.String,System.Boolean,System.String,System.StringComparison,System.String[])">
      <summary>
        <para>Создайте фильтр с соответствующим токеном и поддерживаемыми операторами.</para>
      </summary>
      <param name="token">Идентификатор фильтра или регулярное выражение, соответствующее фильтрам. Обычно то, что предшествует оператору в фильтре (например, "id" в "id&gt;=2").</param>
      <param name="useRegularExpression">Установите для этого флага значение true, если токен является регулярным выражением.</param>
      <param name="supportedOperators">Список поддерживаемых токенов оператора. Этот список содержит токены поддерживаемых операторов. Используйте null или пустой список, чтобы указать, что все операторы поддерживаются.</param>
      <param name="options">Параметры сравнения строк.</param>
      <param name="paramTransformerFunction">Имя функции преобразования параметров для использования с этим фильтром. Пометьте функцию преобразования параметров соответствующим атрибутом ParameterTransformer.</param>
    </member>
    <member name="T:UnityEditor.Search.QueryEngineParameterTransformerAttribute">
      <summary>
        <para>Базовый класс атрибутов, определяющий функцию преобразования пользовательских параметров.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Search.QueryError">
      <summary>
        <para>QueryError содержит определение ошибки синтаксического анализа запроса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.QueryError.index">
      <summary>
        <para>Индекс, где произошла ошибка.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.QueryError.length">
      <summary>
        <para>Длина анализируемого блока.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.QueryError.reason">
      <summary>
        <para>Причина сбоя синтаксического анализа.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Search.QueryError.#ctor">
      <summary>
        <para>Создайте новый QueryError.</para>
      </summary>
      <param name="index">Индекс, где произошла ошибка.</param>
      <param name="reason">Причина сбоя синтаксического анализа.</param>
      <param name="length">Длина анализируемого блока.</param>
    </member>
    <member name="M:UnityEditor.Search.QueryError.#ctor(System.Int32,System.String)">
      <summary>
        <para>Создайте новый QueryError.</para>
      </summary>
      <param name="index">Индекс, где произошла ошибка.</param>
      <param name="reason">Причина сбоя синтаксического анализа.</param>
      <param name="length">Длина анализируемого блока.</param>
    </member>
    <member name="M:UnityEditor.Search.QueryError.#ctor(System.Int32,System.Int32,System.String)">
      <summary>
        <para>Создайте новый QueryError.</para>
      </summary>
      <param name="index">Индекс, где произошла ошибка.</param>
      <param name="reason">Причина сбоя синтаксического анализа.</param>
      <param name="length">Длина анализируемого блока.</param>
    </member>
    <member name="T:UnityEditor.Search.QueryFilterOperator">
      <summary>
        <para>QueryFilterOperator определяет логический оператор между значением, возвращаемым фильтром, и операндом, введенным в поисковый запрос.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.QueryFilterOperator.token">
      <summary>
        <para>Идентификатор оператора.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.QueryFilterOperator.valid">
      <summary>
        <para>Указывает, допустим ли этот оператор фильтра.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Search.QueryFilterOperator.AddHandler(System.Func`3&lt;TFilterVariable,TFilterConstant,System.Boolean&gt;)">
      <summary>
        <para>Добавляет пользовательский обработчик оператора фильтра.</para>
      </summary>
      <param name="handler">Обратный вызов для обработки операции. Принимает TFilterVariable (значение, возвращаемое обработчиком фильтра, оно будет различаться для каждого элемента), TFilterConstant (правое значение оператора, которое является константой) и параметр StringComparison и возвращает логическое значение, указывающее, проходит ли фильтр. или нет.</param>
      <returns>
        <para>Текущий Search.QueryFilterOperator|QueryFilterOperator.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.QueryFilterOperator.AddHandler(System.Func`4&lt;TFilterVariable,TFilterConstant,System.StringComparison,System.Boolean&gt;)">
      <summary>
        <para>Добавляет пользовательский обработчик оператора фильтра.</para>
      </summary>
      <param name="handler">Обратный вызов для обработки операции. Принимает TFilterVariable (значение, возвращаемое обработчиком фильтра, оно будет различаться для каждого элемента), TFilterConstant (правое значение оператора, которое является константой) и параметр StringComparison и возвращает логическое значение, указывающее, проходит ли фильтр. или нет.</param>
      <returns>
        <para>Текущий Search.QueryFilterOperator|QueryFilterOperator.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Search.QueryGraph">
      <summary>
        <para>Класс, представляющий граф запросов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.QueryGraph.empty">
      <summary>
        <para>Возвращает true, если граф пуст.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.QueryGraph.root">
      <summary>
        <para>Корневой узел графа. Может быть нулевым.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Search.QueryGraph.#ctor(UnityEditor.Search.IQueryNode)">
      <summary>
        <para>Конструктор. Создает новый граф запросов.</para>
      </summary>
      <param name="root">Корневой узел графа.</param>
    </member>
    <member name="M:UnityEditor.Search.QueryGraph.Optimize(System.Boolean,System.Boolean)">
      <summary>
        <para>Оптимизируйте график.</para>
      </summary>
      <param name="propagateNotToLeaves">Распространите операции «Не» на листья, чтобы только листья могли иметь операции «Не» в качестве родителей.</param>
      <param name="swapNotToRightHandSide">Заменяет операции «Не» на правую часть комбинированных операций (т. е. «И», «Или»). Полезно, если операция «Не» выполняется медленно.</param>
    </member>
    <member name="M:UnityEditor.Search.QueryGraph.Optimize(UnityEditor.Search.QueryGraphOptimizationOptions)">
      <summary>
        <para>Оптимизируйте график.</para>
      </summary>
      <param name="options">Параметры оптимизации.</param>
    </member>
    <member name="T:UnityEditor.Search.QueryGraphOptimizationOptions">
      <summary>
        <para>Структура, содержащая различные параметры, используемые для оптимизации графа запросов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.QueryGraphOptimizationOptions.propagateNotToLeaves">
      <summary>
        <para>Распространите операции «Не» на листья, чтобы только листья могли иметь операции «Не» в качестве родителей.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.QueryGraphOptimizationOptions.swapFilterFunctionsToRightHandSide">
      <summary>
        <para>Переставляет функции фильтра на правую часть операций объединения (например, «И», «Или»). Полезно, если эти операции фильтрации выполняются медленно.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.QueryGraphOptimizationOptions.swapNotToRightHandSide">
      <summary>
        <para>Заменяет операции «Не» на правую часть комбинированных операций (т. е. «И», «Или»). Полезно, если операция «Не» выполняется медленно.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Search.QueryNodeType">
      <summary>
        <para>Опции для представления типов узлов запросов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.QueryNodeType.Aggregator">
      <summary>
        <para>Узел агрегатора.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.QueryNodeType.And">
      <summary>
        <para>И узел.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.QueryNodeType.Comment">
      <summary>
        <para>Узел комментария.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.QueryNodeType.Filter">
      <summary>
        <para>Узел фильтра.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.QueryNodeType.FilterIn">
      <summary>
        <para>Фильтр с вложенным узлом запроса.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.QueryNodeType.Group">
      <summary>
        <para>Узел группы.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.QueryNodeType.Intersection">
      <summary>
        <para>Узел пересечения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.QueryNodeType.NestedQuery">
      <summary>
        <para>Вложенный узел запроса.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.QueryNodeType.Not">
      <summary>
        <para>Узел отрицания.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.QueryNodeType.Or">
      <summary>
        <para>Или узел.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.QueryNodeType.Search">
      <summary>
        <para>Узел поиска слов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.QueryNodeType.Toggle">
      <summary>
        <para>Переключить узел.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.QueryNodeType.Union">
      <summary>
        <para>Узел объединения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.QueryNodeType.Where">
      <summary>
        <para>Где узел перечислителя.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Search.QueryToken">
      <summary>
        <para>Представляет токен строки запроса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.QueryToken.length">
      <summary>
        <para>Длина токена. Может отличаться от длины текста.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.QueryToken.position">
      <summary>
        <para>Позиция токена в строке запроса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.QueryToken.text">
      <summary>
        <para>Текст, представляющий токен.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Search.QueryToken.#ctor(System.String,System.Int32)">
      <summary>
        <para>Создает токен из строки и позиции.</para>
      </summary>
      <param name="text">Значение токена.</param>
      <param name="position">Позиция токена во всей строке запроса.</param>
      <param name="length">Длина токена.</param>
    </member>
    <member name="M:UnityEditor.Search.QueryToken.#ctor(System.String,System.Int32,System.Int32)">
      <summary>
        <para>Создает токен из строки и позиции.</para>
      </summary>
      <param name="text">Значение токена.</param>
      <param name="position">Позиция токена во всей строке запроса.</param>
      <param name="length">Длина токена.</param>
    </member>
    <member name="T:UnityEditor.Search.QueryValidationOptions">
      <summary>
        <para>Структура, содержащая доступные параметры проверки запроса.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.QueryValidationOptions.skipIncompleteFilters">
      <summary>
        <para>Логическое значение, указывающее, следует ли пропускать неполные фильтры.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.QueryValidationOptions.skipUnknownFilters">
      <summary>
        <para>Логическое значение, указывающее, следует ли пропускать неизвестные фильтры.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.QueryValidationOptions.validateFilters">
      <summary>
        <para>Логическое значение, указывающее, следует ли проверять фильтры. Значение по умолчанию — ложь.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Search.RefreshFlags">
      <summary>
        <para>Флаги обновления используются, чтобы указать, почему представление поиска необходимо обновить или обновить.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.RefreshFlags.Default">
      <summary>
        <para>Обычное обновление.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.RefreshFlags.DisplayModeChanged">
      <summary>
        <para>Изменился режим отображения или размер элемента.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.RefreshFlags.GroupChanged">
      <summary>
        <para>Текущая группа элементов изменилась. Например, пользователь выбрал новую вкладку поиска.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.RefreshFlags.ItemsChanged">
      <summary>
        <para>Список элементов поиска обновлен.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.RefreshFlags.None">
      <summary>
        <para>Конкретная причина обновления не указана.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.RefreshFlags.StructureChanged">
      <summary>
        <para>Изменилась структура данных текущего выбора (т.е. выбранный объект сцены получил новый компонент).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Search.SearchAction">
      <summary>
        <para>Определяет действие, которое можно применить к SearchItem определенного типа поисковой системы.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchAction.closeWindowAfterExecution">
      <summary>
        <para>Указывает, следует ли закрывать представление поиска после выполнения действия.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.SearchAction.displayName">
      <summary>
        <para>Отображаемое имя действия поиска.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchAction.enabled">
      <summary>
        <para>Обратный вызов, используемый для проверки того, разрешено ли действие на основе текущего контекста.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchAction.execute">
      <summary>
        <para>Выполняет действие над набором элементов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchAction.handler">
      <summary>
        <para>Этот обработчик используется для действий, которые не поддерживают множественный выбор.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.SearchAction.id">
      <summary>
        <para>Уникальный идентификатор действия.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Search.SearchAction.#ctor(System.String,System.String,UnityEngine.GUIContent)">
      <summary>
        <para>Конструктор по умолчанию для создания действия поиска.</para>
      </summary>
      <param name="id">Уникальный идентификатор действия, используемый для последующего поиска.</param>
      <param name="providerId">Идентификатор поставщика услуг поиска, который поддерживает это действие.</param>
      <param name="content">Отображает отображаемое имя, значок и всплывающую подсказку при отображении действия в меню действий.</param>
      <param name="handler">Обработчик, выполняющий действие.</param>
      <param name="name">Имя метки при отображении действия в меню действий.</param>
      <param name="icon">Значок действия в меню действий.</param>
      <param name="tooltip">Подсказка, связанная с действием при отображении в меню действий.</param>
    </member>
    <member name="M:UnityEditor.Search.SearchAction.#ctor(System.String,System.String,UnityEngine.GUIContent,System.Action`1&lt;UnityEditor.Search.SearchItem[]&gt;)">
      <summary>
        <para>Конструктор по умолчанию для создания действия поиска.</para>
      </summary>
      <param name="id">Уникальный идентификатор действия, используемый для последующего поиска.</param>
      <param name="providerId">Идентификатор поставщика услуг поиска, который поддерживает это действие.</param>
      <param name="content">Отображает отображаемое имя, значок и всплывающую подсказку при отображении действия в меню действий.</param>
      <param name="handler">Обработчик, выполняющий действие.</param>
      <param name="name">Имя метки при отображении действия в меню действий.</param>
      <param name="icon">Значок действия в меню действий.</param>
      <param name="tooltip">Подсказка, связанная с действием при отображении в меню действий.</param>
    </member>
    <member name="M:UnityEditor.Search.SearchAction.#ctor(System.String,System.String,UnityEngine.GUIContent,System.Action`1&lt;UnityEditor.Search.SearchItem&gt;)">
      <summary>
        <para>Конструктор по умолчанию для создания действия поиска.</para>
      </summary>
      <param name="id">Уникальный идентификатор действия, используемый для последующего поиска.</param>
      <param name="providerId">Идентификатор поставщика услуг поиска, который поддерживает это действие.</param>
      <param name="content">Отображает отображаемое имя, значок и всплывающую подсказку при отображении действия в меню действий.</param>
      <param name="handler">Обработчик, выполняющий действие.</param>
      <param name="name">Имя метки при отображении действия в меню действий.</param>
      <param name="icon">Значок действия в меню действий.</param>
      <param name="tooltip">Подсказка, связанная с действием при отображении в меню действий.</param>
    </member>
    <member name="M:UnityEditor.Search.SearchAction.#ctor(System.String,System.String,UnityEngine.Texture2D,System.String,System.Action`1&lt;UnityEditor.Search.SearchItem[]&gt;)">
      <summary>
        <para>Конструктор по умолчанию для создания действия поиска.</para>
      </summary>
      <param name="id">Уникальный идентификатор действия, используемый для последующего поиска.</param>
      <param name="providerId">Идентификатор поставщика услуг поиска, который поддерживает это действие.</param>
      <param name="content">Отображает отображаемое имя, значок и всплывающую подсказку при отображении действия в меню действий.</param>
      <param name="handler">Обработчик, выполняющий действие.</param>
      <param name="name">Имя метки при отображении действия в меню действий.</param>
      <param name="icon">Значок действия в меню действий.</param>
      <param name="tooltip">Подсказка, связанная с действием при отображении в меню действий.</param>
    </member>
    <member name="M:UnityEditor.Search.SearchAction.#ctor(System.String,System.String,UnityEngine.Texture2D,System.String,System.Action`1&lt;UnityEditor.Search.SearchItem&gt;)">
      <summary>
        <para>Конструктор по умолчанию для создания действия поиска.</para>
      </summary>
      <param name="id">Уникальный идентификатор действия, используемый для последующего поиска.</param>
      <param name="providerId">Идентификатор поставщика услуг поиска, который поддерживает это действие.</param>
      <param name="content">Отображает отображаемое имя, значок и всплывающую подсказку при отображении действия в меню действий.</param>
      <param name="handler">Обработчик, выполняющий действие.</param>
      <param name="name">Имя метки при отображении действия в меню действий.</param>
      <param name="icon">Значок действия в меню действий.</param>
      <param name="tooltip">Подсказка, связанная с действием при отображении в меню действий.</param>
    </member>
    <member name="M:UnityEditor.Search.SearchAction.#ctor(System.String,System.String,UnityEngine.Texture2D,System.String)">
      <summary>
        <para>Конструктор по умолчанию для создания действия поиска.</para>
      </summary>
      <param name="id">Уникальный идентификатор действия, используемый для последующего поиска.</param>
      <param name="providerId">Идентификатор поставщика услуг поиска, который поддерживает это действие.</param>
      <param name="content">Отображает отображаемое имя, значок и всплывающую подсказку при отображении действия в меню действий.</param>
      <param name="handler">Обработчик, выполняющий действие.</param>
      <param name="name">Имя метки при отображении действия в меню действий.</param>
      <param name="icon">Значок действия в меню действий.</param>
      <param name="tooltip">Подсказка, связанная с действием при отображении в меню действий.</param>
    </member>
    <member name="T:UnityEditor.Search.SearchActionsProviderAttribute">
      <summary>
        <para>Атрибут, используемый для объявления статического метода, определяющего новые действия для определенных поисковых систем.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Search.SearchColumn">
      <summary>
        <para>Столбцы поиска используются для отображения дополнительной информации в представлении таблицы поиска.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.SearchColumn.comparer">
      <summary>
        <para>Если он определен, делегат сравнения используется для сортировки результатов поиска на основе значения, отображаемого в этом столбце.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchColumn.content">
      <summary>
        <para>Содержимое используется для отображения метки столбца поиска и изображения в его заголовке.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.SearchColumn.drawer">
      <summary>
        <para>Если он определен, делегат ящика используется для настройки отображения информации в столбце поиска.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.SearchColumn.getter">
      <summary>
        <para>Если он определен, делегат-получатель используется для настройки способа извлечения и преобразования данных поля поиска для отображения (см. SearchColumn.drawer).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.SearchColumn.name">
      <summary>
        <para>Имя столбца поиска.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchColumn.options">
      <summary>
        <para>Различные параметры, используемые для определения представления столбца поиска.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchColumn.path">
      <summary>
        <para>Путь может использоваться делегатами столбца для интерпретации того, как можно манипулировать данными.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchColumn.provider">
      <summary>
        <para>Поставщик используется для указания того, какой поставщик столбца поиска (см. SearchColumn) используется для определения формата столбца поиска.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchColumn.selector">
      <summary>
        <para>Селектор используется делегатами столбца для получения данных поля поиска.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.SearchColumn.setter">
      <summary>
        <para>Если он определен, делегат установщика записывает обратно значение в соответствующее поле результата поиска.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchColumn.width">
      <summary>
        <para>Ширина столбца используется для установки ширины столбца представления таблицы поиска.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Search.SearchColumnCompareArgs">
      <summary>
        <para>Аргументы сравнения столбцов поиска используются SearchColumn.comparer для сортировки результатов поиска.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchColumnCompareArgs.lhs">
      <summary>
        <para>Левая колонка для сравнения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchColumnCompareArgs.rhs">
      <summary>
        <para>Правый столбец для сравнения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchColumnCompareArgs.sortAscending">
      <summary>
        <para>Указывает, следует ли сортировать результаты в порядке возрастания или нет.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Search.SearchColumnEventArgs">
      <summary>
        <para>Аргументы события столбца поиска используются делегатами SearchColumn.getter, SearchColumn.drawer и SearchColumn.setter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchColumnEventArgs.column">
      <summary>
        <para>Столбец поиска обрабатывается текущим событием.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchColumnEventArgs.context">
      <summary>
        <para>Контекст поиска, используемый для текущего события.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchColumnEventArgs.focused">
      <summary>
        <para>Указывает, находится ли ячейка столбца поиска в данный момент в фокусе.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchColumnEventArgs.item">
      <summary>
        <para>Элемент поиска, который в настоящее время используется для события.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchColumnEventArgs.multiple">
      <summary>
        <para>Указывает, выбрано ли в данный момент несколько результатов поиска при обработке текущего события.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchColumnEventArgs.rect">
      <summary>
        <para>UnityEngine.Rect используется для указания границ рисования события SearchColumn.drawer.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchColumnEventArgs.selected">
      <summary>
        <para>Указывает, выбран ли в данный момент результат поиска.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchColumnEventArgs.value">
      <summary>
        <para>Значение, полученное из SearchColumn.getter перед вызовом SearchColumn.drawer.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Search.SearchColumnFlags">
      <summary>
        <para>Флаги столбца поиска используются для установки нескольких состояний.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchColumnFlags.CanHide">
      <summary>
        <para>Указывает, что пользователь может вручную скрыть столбец поиска в представлении таблицы поиска.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchColumnFlags.CanSort">
      <summary>
        <para>Указывает, что пользователь может сортировать столбец поиска в представлении таблицы поиска.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchColumnFlags.Default">
      <summary>
        <para>Определяет набор параметров по умолчанию для общего использования.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchColumnFlags.Hidden">
      <summary>
        <para>Указывает, что столбец поиска в настоящее время скрыт в представлении таблицы поиска.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchColumnFlags.None">
      <summary>
        <para>Указывает, что параметры столбца не используются.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchColumnFlags.Sorted">
      <summary>
        <para>Указывает, что столбец поиска в представлении таблицы поиска в настоящее время отсортирован.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchColumnFlags.SortedDescending">
      <summary>
        <para>Указывает, что столбец поиска в представлении таблицы поиска отсортирован в порядке убывания. Если не определено, это означает, что столбец отсортирован в порядке возрастания.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchColumnFlags.TextAlignmentCenter">
      <summary>
        <para>Указывает, что столбец поиска в представлении таблицы поиска выравнивает текст по середине.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchColumnFlags.TextAlignmentLeft">
      <summary>
        <para>Указывает, что столбец поиска в представлении таблицы поиска выравнивает текст по левому краю.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchColumnFlags.TextAlignmentRight">
      <summary>
        <para>Указывает, что столбец поиска в представлении таблицы поиска выравнивает текст по правому краю.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Search.SearchColumnProviderAttribute">
      <summary>
        <para>Атрибут поставщика столбца поиска используется для определения новых форматов для данного столбца.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.SearchColumnProviderAttribute.provider">
      <summary>
        <para>Уникальное имя поставщика столбца поиска.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Search.SearchContext">
      <summary>
        <para>Контекст поиска включает в себя все данные, необходимые для выполнения запроса. Это позволяет полностью настроить способ выполнения запроса.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Search.SearchContext.asyncItemReceived(System.Action`2&lt;UnityEditor.Search.SearchContext,System.Collections.Generic.IEnumerable`1&lt;UnityEditor.Search.SearchItem&gt;&gt;)">
      <summary>
        <para>Это событие используется для получения любых результатов асинхронного поиска.</para>
      </summary>
      <param name="value">Событие используется для получения любого результата асинхронного поиска.</param>
    </member>
    <member name="P:UnityEditor.Search.SearchContext.filterId">
      <summary>
        <para>Явный идентификатор фильтра. Обычно это первый токен поиска, такой как h:, p: для выполнения явного поиска для данного поискового провайдера. Может быть нулевым.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.SearchContext.focusedWindow">
      <summary>
        <para>Окно редактора, инициировавшее поиск.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.SearchContext.options">
      <summary>
        <para>Параметры контекста поиска.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.SearchContext.progressId">
      <summary>
        <para>Маркер прогресса для отображения индикатора выполнения текущего поиска.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.SearchContext.providers">
      <summary>
        <para>Какие службы поиска активны для данного конкретного контекста.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.SearchContext.searchInProgress">
      <summary>
        <para>Указывает, выполняется ли в данный момент асинхронный поиск для данного контекста.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.SearchContext.searchPhrase">
      <summary>
        <para>Возвращает фразу, содержащую только слова, разделенные пробелами.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.SearchContext.searchQuery">
      <summary>
        <para>Обработанный поисковый запрос (без filterId, без textFilters).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.SearchContext.searchQueryOffset">
      <summary>
        <para>Смещение символов обработанного поискового запроса в необработанном тексте поиска.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.SearchContext.searchText">
      <summary>
        <para>Необработанный текст поиска (то, что находится в текстовом поле поиска).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.SearchContext.searchView">
      <summary>
        <para>Представление поиска, представляющее результаты поиска.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.SearchContext.searchWords">
      <summary>
        <para>Поисковый запрос токенизирован по словам. Все текстовые фильтры отбрасываются, а все слова пишутся строчными буквами.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.SearchContext.selection">
      <summary>
        <para>Возвращает выбор результата поиска, если он есть.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Search.SearchContext.sessionEnded(System.Action`1&lt;UnityEditor.Search.SearchContext&gt;)">
      <summary>
        <para>Вызывается после завершения поиска.</para>
      </summary>
      <param name="value">Обработчик события.</param>
    </member>
    <member name="?:UnityEditor.Search.SearchContext.sessionStarted(System.Action`1&lt;UnityEditor.Search.SearchContext&gt;)">
      <summary>
        <para>Вызывается при запуске поиска.</para>
      </summary>
      <param name="value">Обработчик события.</param>
    </member>
    <member name="P:UnityEditor.Search.SearchContext.textFilters">
      <summary>
        <para>Все токены, содержащие двоеточие (':').</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.SearchContext.wantsMore">
      <summary>
        <para>Указывает, должен ли поиск возвращать все результаты, а не только наиболее релевантные.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Search.SearchContext.AddSearchQueryError(UnityEditor.Search.SearchQueryError)">
      <summary>
        <para>Добавляет новую ошибку запроса в этом контексте.</para>
      </summary>
      <param name="error">Новая ошибка.</param>
    </member>
    <member name="M:UnityEditor.Search.SearchContext.AddSearchQueryErrors(System.Collections.Generic.IEnumerable`1&lt;UnityEditor.Search.SearchQueryError&gt;)">
      <summary>
        <para>Добавляет новые ошибки запроса в этом контексте.</para>
      </summary>
      <param name="errors">Новые ошибки.</param>
    </member>
    <member name="M:UnityEditor.Search.SearchContext.#ctor(System.Collections.Generic.IEnumerable`1&lt;UnityEditor.Search.SearchProvider&gt;,System.String,UnityEditor.Search.SearchFlags)">
      <summary>
        <para>Создает новый контекст поиска.</para>
      </summary>
      <param name="providers">Список поисковых провайдеров, используемых для разрешения указанного запроса.</param>
      <param name="searchText">Поисковый запрос для выполнения.</param>
      <param name="options">Набор параметров, помогающих оценить запрос.</param>
    </member>
    <member name="M:UnityEditor.Search.SearchContext.#ctor(System.Collections.Generic.IEnumerable`1&lt;UnityEditor.Search.SearchProvider&gt;,System.String)">
      <summary>
        <para>Создает новый контекст поиска.</para>
      </summary>
      <param name="providers">Список поисковых провайдеров, используемых для разрешения указанного запроса.</param>
      <param name="searchText">Поисковый запрос для выполнения.</param>
      <param name="options">Набор параметров, помогающих оценить запрос.</param>
    </member>
    <member name="M:UnityEditor.Search.SearchContext.#ctor(System.Collections.Generic.IEnumerable`1&lt;UnityEditor.Search.SearchProvider&gt;)">
      <summary>
        <para>Создает новый контекст поиска.</para>
      </summary>
      <param name="providers">Список поисковых провайдеров, используемых для разрешения указанного запроса.</param>
      <param name="searchText">Поисковый запрос для выполнения.</param>
      <param name="options">Набор параметров, помогающих оценить запрос.</param>
    </member>
    <member name="M:UnityEditor.Search.SearchContext.#ctor(UnityEditor.Search.SearchContext)">
      <summary>
        <para>ЗАДАЧА.</para>
      </summary>
      <param name="context">
      </param>
    </member>
    <member name="M:UnityEditor.Search.SearchContext.Dispose">
      <summary>
        <para>Удалить контекст поиска.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Search.SearchContext.IsEnabled(System.String)">
      <summary>
        <para>Проверяет, доступна ли служба поиска для обработки запроса.</para>
      </summary>
      <param name="providerId">ID поисковой системы. См. SearchProvider.name.id.</param>
      <returns>
        <para>Возвращает true, если служба поиска включена для этого SearchContext.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchContext.ResetFilter(System.Boolean)">
      <summary>
        <para>Сбрасывает все фильтры поставщика поиска до указанного значения. Это позволяет включать или отключать всех поисковых провайдеров одним вызовом. Отключенной поисковой системе не будет предложено предоставить элементы для решения запроса.</para>
      </summary>
      <param name="enableAll">Если true, включаются все службы поиска. Если false, отключает все службы поиска.</param>
    </member>
    <member name="M:UnityEditor.Search.SearchContext.SetFilter(System.String,System.Boolean)">
      <summary>
        <para>Включает или отключает одного поставщика поиска. Отключенной поисковой системе не будет предложено предоставить элементы для решения запроса.</para>
      </summary>
      <param name="providerId">ID поисковой системы. См. SearchProvider.name.id.</param>
      <param name="isEnabled">Если задано значение true, поисковая служба может выполнять запрос.</param>
    </member>
    <member name="T:UnityEditor.Search.SearchDocument">
      <summary>
        <para>Представляет проиндексированный документ с возможностью поиска.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchDocument.id">
      <summary>
        <para>Уникальный идентификатор документа в поисковом индексе.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.SearchDocument.index">
      <summary>
        <para>Индекс этого документа в SearchIndexer.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.SearchDocument.name">
      <summary>
        <para>Читаемое имя документа.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.SearchDocument.path">
      <summary>
        <para>Путь к документу.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchDocument.score">
      <summary>
        <para>Оценка релевантности базы документов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.SearchDocument.source">
      <summary>
        <para>Первоисточник, из которого был проиндексирован документ. Источником обычно является ассет-контейнер, то есть префаб, сцена Unity или сам импортированный ассет.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.SearchDocument.valid">
      <summary>
        <para>Если true, документ считается действительным.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Search.SearchDocument.CompareTo(UnityEditor.Search.SearchDocument)">
      <summary>
        <para>Сравните этот документ с другим документом.</para>
      </summary>
      <param name="other">Другой документ для сравнения.</param>
      <returns>
        <para>Если 0, оба документа равны.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchDocument.#ctor(UnityEditor.Search.SearchDocument,System.Int32)">
      <summary>
        <para>Создайте новый SearchDocument.</para>
      </summary>
      <param name="id">Уникальный идентификатор документа в поисковом индексе.</param>
      <param name="doc">Исходный документ, из которого копируются свойства.</param>
      <param name="score">Оценка документа, используемая для сортировки.</param>
      <param name="index">Позиция документа в поисковом индексе.</param>
      <param name="path">Путь к документу (т. е. путь к активу или путь преобразования), если есть.</param>
      <param name="name">Имя документа (например, путь к активу или путь преобразования), если есть.</param>
      <param name="source">Документ содержит исходный путь или идентификатор. Обычно это определяется для вложенных объектов с префабом или сценой.</param>
    </member>
    <member name="M:UnityEditor.Search.SearchDocument.#ctor(System.Int32,System.String,System.String,System.Int32)">
      <summary>
        <para>Создайте новый SearchDocument.</para>
      </summary>
      <param name="id">Уникальный идентификатор документа в поисковом индексе.</param>
      <param name="doc">Исходный документ, из которого копируются свойства.</param>
      <param name="score">Оценка документа, используемая для сортировки.</param>
      <param name="index">Позиция документа в поисковом индексе.</param>
      <param name="path">Путь к документу (т. е. путь к активу или путь преобразования), если есть.</param>
      <param name="name">Имя документа (например, путь к активу или путь преобразования), если есть.</param>
      <param name="source">Документ содержит исходный путь или идентификатор. Обычно это определяется для вложенных объектов с префабом или сценой.</param>
    </member>
    <member name="M:UnityEditor.Search.SearchDocument.#ctor(System.String,System.String,System.String,System.Int32)">
      <summary>
        <para>Создайте новый SearchDocument.</para>
      </summary>
      <param name="id">Уникальный идентификатор документа в поисковом индексе.</param>
      <param name="doc">Исходный документ, из которого копируются свойства.</param>
      <param name="score">Оценка документа, используемая для сортировки.</param>
      <param name="index">Позиция документа в поисковом индексе.</param>
      <param name="path">Путь к документу (т. е. путь к активу или путь преобразования), если есть.</param>
      <param name="name">Имя документа (например, путь к активу или путь преобразования), если есть.</param>
      <param name="source">Документ содержит исходный путь или идентификатор. Обычно это определяется для вложенных объектов с префабом или сценой.</param>
    </member>
    <member name="M:UnityEditor.Search.SearchDocument.#ctor(UnityEditor.Search.SearchDocument,System.String)">
      <summary>
        <para>Создайте новый SearchDocument.</para>
      </summary>
      <param name="id">Уникальный идентификатор документа в поисковом индексе.</param>
      <param name="doc">Исходный документ, из которого копируются свойства.</param>
      <param name="score">Оценка документа, используемая для сортировки.</param>
      <param name="index">Позиция документа в поисковом индексе.</param>
      <param name="path">Путь к документу (т. е. путь к активу или путь преобразования), если есть.</param>
      <param name="name">Имя документа (например, путь к активу или путь преобразования), если есть.</param>
      <param name="source">Документ содержит исходный путь или идентификатор. Обычно это определяется для вложенных объектов с префабом или сценой.</param>
    </member>
    <member name="M:UnityEditor.Search.SearchDocument.Equals(UnityEditor.Search.SearchDocument)">
      <summary>
        <para>Сравните этот документ с другим документом.</para>
      </summary>
      <param name="other">Другой документ для сравнения.</param>
      <returns>
        <para>Если true, оба документа равны.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchDocument.Equals(System.Object)">
      <summary>
        <para>Сравните этот документ с другим документом.</para>
      </summary>
      <param name="other">Другой документ для сравнения.</param>
      <returns>
        <para>Если true, оба документа равны.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchDocument.ToString">
      <summary>
        <para>Возвращает строку идентификатора документа.</para>
      </summary>
      <returns>
        <para>Возвращает строковое представление документа.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Search.SearchFlags">
      <summary>
        <para>Параметры поиска, используемые для получения элементов. В основном с SearchContext, чтобы указать, как следует обрабатывать поиск.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchFlags.Debug">
      <summary>
        <para>Добавляет отладочную информацию в SearchItem при поиске результатов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchFlags.Default">
      <summary>
        <para>Флаг поиска по умолчанию (SearchFlags.Sorted).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchFlags.Dockable">
      <summary>
        <para>Указывает, что представление поиска можно закреплять. Этот флаг можно использовать только с внутренним API.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchFlags.Expression">
      <summary>
        <para>Указывает, что поисковый запрос будет оцениваться как поисковое выражение.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchFlags.FirstBatchAsync">
      <summary>
        <para>Отправляет первые элементы асинхронно.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchFlags.FocusContext">
      <summary>
        <para>Указывает, что представление поиска будет сосредоточено на первом доступном поставщике контекстного поиска при его открытии. Этот флаг можно использовать только с внутренним API.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchFlags.HidePanels">
      <summary>
        <para>Указывает, что окно поиска будет скрывать свои боковые панели при открытии. Этот флаг можно использовать только с внутренним API.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchFlags.Multiselect">
      <summary>
        <para>Указывает, что представление поиска допускает множественный выбор. Этот флаг можно использовать только с внутренним API.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchFlags.NoIndexing">
      <summary>
        <para>Запрещает поиску использовать индексацию. Поставщик ресурсов будет использовать встроенный поставщик поиска в файлах.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchFlags.None">
      <summary>
        <para>Нет специальных параметров поиска. Результат не будет сортирован.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchFlags.OpenContextual">
      <summary>
        <para>Открывает представление поиска с контекстными параметрами по умолчанию. Этот флаг можно использовать только с внутренним API.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchFlags.OpenDefault">
      <summary>
        <para>Открывает окно поиска с параметрами по умолчанию. Этот флаг можно использовать только с внутренним API.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchFlags.OpenGlobal">
      <summary>
        <para>Открывает представление поиска для глобального поиска. Этот флаг можно использовать только с внутренним API.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchFlags.OpenPicker">
      <summary>
        <para>Открывает представление поиска в качестве средства выбора объектов. Этот флаг можно использовать только с внутренним API.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchFlags.Packages">
      <summary>
        <para>Окно выбора объектов будет включать любые результаты из пакетов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchFlags.QueryString">
      <summary>
        <para>Оценивать текст поиска как чистую строку запроса (не оценивать текст как выражение поиска).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchFlags.ReuseExistingWindow">
      <summary>
        <para>Указывает, что представление поиска найдет все существующие экземпляры окна, которые уже открыты, перед созданием нового. Этот флаг можно использовать только с внутренним API.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchFlags.SaveFilters">
      <summary>
        <para>Указывает, что представление поиска сохранит свои настройки и фильтры поставщика поиска при закрытии. Этот флаг можно использовать только с внутренним API.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchFlags.ShowErrorsWithResults">
      <summary>
        <para>Всегда показывать ошибки запроса, даже если есть доступные результаты. Этот флаг можно использовать только с внутренним API.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchFlags.Sorted">
      <summary>
        <para>Полученные элементы сортируются службой поиска.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchFlags.Synchronous">
      <summary>
        <para>Элементы поиска выбираются синхронно. Для некоторых SearchProvider (например, ресурсов) это может занять много времени. Используйте на свой страх и риск.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchFlags.WantsMore">
      <summary>
        <para>Устанавливает поиск для поиска всех результатов. Это может занять больше времени, чем обычно, если SearchProvider использует несколько источников элементов (файлы на диске, AssetDatabase...)</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Search.SearchIndexer">
      <summary>
        <para>Базовый класс для индексатора документов, который предоставляет методы для извлечения документа по определенному шаблону в грубом log(n). Это позволяет быстрее выполнять поиск в большом индексе.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.SearchIndexer.documentCount">
      <summary>
        <para>Возвращает количество документов в индексе.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.SearchIndexer.keywordCount">
      <summary>
        <para>Возвращает число ключевых слов в индексе.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.SearchIndexer.minWordIndexationLength">
      <summary>
        <para>Минимальный индексируемый размер слова. По умолчанию 2.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.SearchIndexer.name">
      <summary>
        <para>Имя индекса. Обычно это имя задается пользователем из SearchDatabase.Settings.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.SearchIndexer.resolveDocumentHandler">
      <summary>
        <para>Обработчик, используемый для преобразования идентификатора документа в другую строку данных.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.SearchIndexer.skipEntryHandler">
      <summary>
        <para>Обработчик, используемый для пропуска записей.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Search.SearchIndexer.AddDocument(System.String,System.Boolean)">
      <summary>
        <para>Добавляет новый документ для индексации.</para>
      </summary>
      <param name="document">Уникальный идентификатор документа.</param>
      <param name="checkIfExists">Передайте true, если этот документ уже существует.</param>
      <returns>
        <para>Индекс/дескриптор документа, используемый для добавления новых записей индекса.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchIndexer.AddExactWord(System.String,System.Int32,System.Int32)">
      <summary>
        <para>Добавляет в указатель новое слово из документа. Слово добавляется с несколькими вариантами, позволяющими выполнять частичный поиск.</para>
      </summary>
      <param name="word">Слово для добавления в указатель.</param>
      <param name="score">Оценка релевантности слова.</param>
      <param name="documentIndex">Документ, в котором было найдено проиндексированное слово.</param>
    </member>
    <member name="M:UnityEditor.Search.SearchIndexer.AddNumber(System.String,System.Double,System.Int32,System.Int32)">
      <summary>
        <para>Добавляет в индекс пару "ключ-число-значение". Ключ не будет добавлен с вариантами.</para>
      </summary>
      <param name="key">Ключ, используемый для получения значения.</param>
      <param name="value">Числовое значение для сохранения в индексе.</param>
      <param name="score">Оценка релевантности слова.</param>
      <param name="documentIndex">Документ, в котором было найдено проиндексированное значение.</param>
    </member>
    <member name="M:UnityEditor.Search.SearchIndexer.AddProperty(System.String,System.String,System.Int32,System.Boolean,System.Boolean)">
      <summary>
        <para>Добавляет значение свойства в индекс. Свойство указывается с ключом и строковым значением. Значение будет сохранено с несколькими вариантами.</para>
      </summary>
      <param name="key">Ключ, используемый для получения значения.</param>
      <param name="value">Строковое значение для сохранения в индексе.</param>
      <param name="documentIndex">Документ, в котором было найдено проиндексированное значение.</param>
      <param name="saveKeyword">Указывает, храним ли мы этот ключ в реестре ключевых слов индекса. См. SearchIndexer.GetKeywords.</param>
      <param name="exact">Если true, index сохраняет запись с точным соответствием для этого слова.</param>
      <param name="score">Оценка релевантности слова.</param>
      <param name="name">Ключ, используемый для получения значения.</param>
      <param name="minVariations">Минимальное количество вариантов для вычисления значения. Не может быть больше длины слова.</param>
      <param name="maxVariations">Максимальное количество вариантов для вычисления значения. Не может быть больше длины слова.</param>
    </member>
    <member name="M:UnityEditor.Search.SearchIndexer.AddProperty(System.String,System.String,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>
        <para>Добавляет значение свойства в индекс. Свойство указывается с ключом и строковым значением. Значение будет сохранено с несколькими вариантами.</para>
      </summary>
      <param name="key">Ключ, используемый для получения значения.</param>
      <param name="value">Строковое значение для сохранения в индексе.</param>
      <param name="documentIndex">Документ, в котором было найдено проиндексированное значение.</param>
      <param name="saveKeyword">Указывает, храним ли мы этот ключ в реестре ключевых слов индекса. См. SearchIndexer.GetKeywords.</param>
      <param name="exact">Если true, index сохраняет запись с точным соответствием для этого слова.</param>
      <param name="score">Оценка релевантности слова.</param>
      <param name="name">Ключ, используемый для получения значения.</param>
      <param name="minVariations">Минимальное количество вариантов для вычисления значения. Не может быть больше длины слова.</param>
      <param name="maxVariations">Максимальное количество вариантов для вычисления значения. Не может быть больше длины слова.</param>
    </member>
    <member name="M:UnityEditor.Search.SearchIndexer.AddProperty(System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>
        <para>Добавляет значение свойства в индекс. Свойство указывается с ключом и строковым значением. Значение будет сохранено с несколькими вариантами.</para>
      </summary>
      <param name="key">Ключ, используемый для получения значения.</param>
      <param name="value">Строковое значение для сохранения в индексе.</param>
      <param name="documentIndex">Документ, в котором было найдено проиндексированное значение.</param>
      <param name="saveKeyword">Указывает, храним ли мы этот ключ в реестре ключевых слов индекса. См. SearchIndexer.GetKeywords.</param>
      <param name="exact">Если true, index сохраняет запись с точным соответствием для этого слова.</param>
      <param name="score">Оценка релевантности слова.</param>
      <param name="name">Ключ, используемый для получения значения.</param>
      <param name="minVariations">Минимальное количество вариантов для вычисления значения. Не может быть больше длины слова.</param>
      <param name="maxVariations">Максимальное количество вариантов для вычисления значения. Не может быть больше длины слова.</param>
    </member>
    <member name="M:UnityEditor.Search.SearchIndexer.AddWord(System.String,System.Int32,System.Int32)">
      <summary>
        <para>Добавляет в указатель новое слово из документа. Слово добавляется с несколькими вариантами, позволяющими выполнять частичный поиск.</para>
      </summary>
      <param name="word">Слово для добавления в указатель.</param>
      <param name="score">Оценка релевантности слова.</param>
      <param name="documentIndex">Документ, в котором было найдено проиндексированное слово.</param>
      <param name="size">Количество вариантов для вычисления.</param>
      <param name="minVariations">Минимальное количество вариантов для вычисления. Не может быть больше длины слова.</param>
      <param name="maxVariations">Максимальное количество вариантов для вычисления. Не может быть больше длины слова.</param>
    </member>
    <member name="M:UnityEditor.Search.SearchIndexer.AddWord(System.String,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Добавляет в указатель новое слово из документа. Слово добавляется с несколькими вариантами, позволяющими выполнять частичный поиск.</para>
      </summary>
      <param name="word">Слово для добавления в указатель.</param>
      <param name="score">Оценка релевантности слова.</param>
      <param name="documentIndex">Документ, в котором было найдено проиндексированное слово.</param>
      <param name="size">Количество вариантов для вычисления.</param>
      <param name="minVariations">Минимальное количество вариантов для вычисления. Не может быть больше длины слова.</param>
      <param name="maxVariations">Максимальное количество вариантов для вычисления. Не может быть больше длины слова.</param>
    </member>
    <member name="M:UnityEditor.Search.SearchIndexer.AddWord(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Добавляет в указатель новое слово из документа. Слово добавляется с несколькими вариантами, позволяющими выполнять частичный поиск.</para>
      </summary>
      <param name="word">Слово для добавления в указатель.</param>
      <param name="score">Оценка релевантности слова.</param>
      <param name="documentIndex">Документ, в котором было найдено проиндексированное слово.</param>
      <param name="size">Количество вариантов для вычисления.</param>
      <param name="minVariations">Минимальное количество вариантов для вычисления. Не может быть больше длины слова.</param>
      <param name="maxVariations">Максимальное количество вариантов для вычисления. Не может быть больше длины слова.</param>
    </member>
    <member name="M:UnityEditor.Search.SearchIndexer.#ctor">
      <summary>
        <para>Создает новый SearchIndexer по умолчанию.</para>
      </summary>
      <param name="name">Имя индексатора.</param>
    </member>
    <member name="M:UnityEditor.Search.SearchIndexer.#ctor(System.String)">
      <summary>
        <para>Создает новый SearchIndexer по умолчанию.</para>
      </summary>
      <param name="name">Имя индексатора.</param>
    </member>
    <member name="M:UnityEditor.Search.SearchIndexer.Finish">
      <summary>
        <para>Завершает текущий индекс, сортируя и компилируя все индексы.</para>
      </summary>
      <param name="threadCompletedCallback">Обратный вызов вызывается, когда индекс готов к использованию.</param>
      <param name="removedDocuments">Документы, подлежащие удалению из текущего индекса (если есть).</param>
    </member>
    <member name="M:UnityEditor.Search.SearchIndexer.Finish(System.Action)">
      <summary>
        <para>Завершает текущий индекс, сортируя и компилируя все индексы.</para>
      </summary>
      <param name="threadCompletedCallback">Обратный вызов вызывается, когда индекс готов к использованию.</param>
      <param name="removedDocuments">Документы, подлежащие удалению из текущего индекса (если есть).</param>
    </member>
    <member name="M:UnityEditor.Search.SearchIndexer.Finish(System.Action`1&lt;System.Byte[]&gt;,System.String[])">
      <summary>
        <para>Завершает текущий индекс, сортируя и компилируя все индексы.</para>
      </summary>
      <param name="threadCompletedCallback">Обратный вызов вызывается, когда индекс готов к использованию.</param>
      <param name="removedDocuments">Документы, подлежащие удалению из текущего индекса (если есть).</param>
    </member>
    <member name="M:UnityEditor.Search.SearchIndexer.GetDocument(System.Int32)">
      <summary>
        <para>Возвращает поисковый документ по его индексу.</para>
      </summary>
      <param name="index">Действительный индекс документа для доступа.</param>
      <returns>
        <para>Индексированный поисковый документ.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchIndexer.GetMetaInfo(System.String)">
      <summary>
        <para>Получить метаданные определенного документа.</para>
      </summary>
      <param name="documentId">Идентификатор документа.</param>
      <returns>
        <para>Метаданные документа.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchIndexer.IndexDocument(System.String,System.Boolean)">
      <summary>
        <para>Функция для переопределения конкретного SearchIndexer для индексации содержимого документа.</para>
      </summary>
      <param name="document">Путь документа для индексации.</param>
      <param name="checkIfDocumentExists">Проверяет, существует ли документ.</param>
    </member>
    <member name="M:UnityEditor.Search.SearchIndexer.IsReady">
      <summary>
        <para>Указывает, полностью ли построен индекс, обновлен ли он и готов ли он к поиску.</para>
      </summary>
      <returns>
        <para>Возвращает true, если индекс готов к поиску.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchIndexer.LoadBytes(System.Byte[],System.Action`1&lt;System.Boolean&gt;)">
      <summary>
        <para>Загружает индекс асинхронно (в другом потоке) из двоичного буфера.</para>
      </summary>
      <param name="bytes">Двоичный буфер, содержащий представление индекса.</param>
      <param name="finished">Обратный вызов, который срабатывает, когда индекс полностью загружен. Параметры обратного вызова указывают, была ли загрузка успешной.</param>
      <returns>
        <para>Возвращает false, если индекс имеет неподдерживаемую версию или возникла проблема с инициализацией потока чтения.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchIndexer.Read(System.IO.Stream,System.Boolean)">
      <summary>
        <para>Читает поток и заполняет из него индекс.</para>
      </summary>
      <param name="stream">Поток, из которого считывается индекс.</param>
      <param name="checkVersionOnly">Если true, проверяет версию индекса.</param>
      <returns>
        <para>Возвращает false, если версия индекса не поддерживается.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchIndexer.SaveBytes">
      <summary>
        <para>Получите байтовое представление этого индекса. См. SearchIndexer.Write.</para>
      </summary>
      <returns>
        <para>Байтовое представление индекса.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchIndexer.Search(UnityEditor.Search.SearchContext,UnityEditor.Search.SearchProvider,System.Int32,System.Int32)">
      <summary>
        <para>Выполняет поисковый запрос в индексе.</para>
      </summary>
      <param name="query">Поисковый запрос для поиска. Если if соответствует любому из проиндексированных вариантов, возвращается результат.</param>
      <param name="context">Контекст поиска, к которому применяется запрос.</param>
      <param name="provider">Поисковая служба, инициировавшая поиск.</param>
      <param name="maxScore">Максимальная оценка совпадения любого совпадающего результата поиска. См. SearchResult.score.</param>
      <param name="patternMatchLimit">Максимальное количество совпадающих результатов поиска, которые могут быть возвращены. См. Результат поиска.</param>
      <returns>
        <para>Возвращает набор результатов поиска, соответствующих запросу.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchIndexer.Search(System.String,UnityEditor.Search.SearchContext,UnityEditor.Search.SearchProvider,System.Int32,System.Int32)">
      <summary>
        <para>Выполняет поисковый запрос в индексе.</para>
      </summary>
      <param name="query">Поисковый запрос для поиска. Если if соответствует любому из проиндексированных вариантов, возвращается результат.</param>
      <param name="context">Контекст поиска, к которому применяется запрос.</param>
      <param name="provider">Поисковая служба, инициировавшая поиск.</param>
      <param name="maxScore">Максимальная оценка совпадения любого совпадающего результата поиска. См. SearchResult.score.</param>
      <param name="patternMatchLimit">Максимальное количество совпадающих результатов поиска, которые могут быть возвращены. См. Результат поиска.</param>
      <returns>
        <para>Возвращает набор результатов поиска, соответствующих запросу.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchIndexer.Search(System.String,System.Int32,System.Int32)">
      <summary>
        <para>Выполняет поисковый запрос в индексе.</para>
      </summary>
      <param name="query">Поисковый запрос для поиска. Если if соответствует любому из проиндексированных вариантов, возвращается результат.</param>
      <param name="context">Контекст поиска, к которому применяется запрос.</param>
      <param name="provider">Поисковая служба, инициировавшая поиск.</param>
      <param name="maxScore">Максимальная оценка совпадения любого совпадающего результата поиска. См. SearchResult.score.</param>
      <param name="patternMatchLimit">Максимальное количество совпадающих результатов поиска, которые могут быть возвращены. См. Результат поиска.</param>
      <returns>
        <para>Возвращает набор результатов поиска, соответствующих запросу.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchIndexer.SetMetaInfo(System.String,System.String)">
      <summary>
        <para>Установить произвольные метаданные для конкретного документа.</para>
      </summary>
      <param name="documentId">Идентификатор документа.</param>
      <param name="metadata">Метаданные для привязки к этому документу.</param>
    </member>
    <member name="M:UnityEditor.Search.SearchIndexer.SkipEntry(System.String,System.Boolean)">
      <summary>
        <para>Вызывается при построении индекса, чтобы определить, нужно ли индексировать указанный документ. См. SearchIndexer.skipEntryHandler.</para>
      </summary>
      <param name="document">Путь к документу.</param>
      <param name="checkRoots">Проверьте корни.</param>
      <returns>
        <para>Возвращает true, если документ не нужно индексировать.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchIndexer.Start(System.Boolean)">
      <summary>
        <para>Начинает индексацию записей.</para>
      </summary>
      <param name="clear">Истинно, если текущий индекс должен быть очищен.</param>
    </member>
    <member name="M:UnityEditor.Search.SearchIndexer.Write(System.IO.Stream)">
      <summary>
        <para>Записывает двоичное представление индекса в поток.</para>
      </summary>
      <param name="stream">Поток для записи индекса.</param>
    </member>
    <member name="T:UnityEditor.Search.SearchItem">
      <summary>
        <para>Элементы поиска возвращаются поставщиком поиска для отображения пользователю после выполнения поиска. Элемент поиска содержит все данные, используемые для сортировки и представления результатов поиска. Некоторые члены SearchItem могут быть указаны в асинхронном обратном вызове (см. SearchItem.fetchThumbnail, SearchItem.fetchDescription и т. д.).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.SearchItem.clear">
      <summary>
        <para>Элемент поиска, не представляющий ничего, обычно используемый для отмены выбора.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchItem.context">
      <summary>
        <para>Контекст, используемый для создания этого элемента.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchItem.data">
      <summary>
        <para>Контент, определяемый поставщиком поиска. Его можно использовать для передачи любых данных обработчикам пользовательских поисковых систем (например, `fetchDescription`).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchItem.description">
      <summary>
        <para>Если описание не предоставлено, SearchProvider.fetchDescription будет вызываться при первом отображении элемента.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchItem.id">
      <summary>
        <para>Уникальный идентификатор элемента поиска для поисковой системы.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchItem.label">
      <summary>
        <para>Отображаемое имя элемента поиска.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchItem.none">
      <summary>
        <para>Элемент поиска, не представляющий ничего, обычно используемый для отмены выбора.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchItem.options">
      <summary>
        <para>Флаги, определяющие способ отображения и использования элемента поиска.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchItem.preview">
      <summary>
        <para>Большой предварительный просмотр элемента поиска. Обычно кэшируется fetchPreview.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchItem.provider">
      <summary>
        <para>Обратный указатель на поставщика поиска.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchItem.score">
      <summary>
        <para>Оценка релевантности элемента влияет на то, как элемент сортируется поставщиком поиска. Элементы с более низким баллом имеют большую актуальность и имеют приоритет.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchItem.thumbnail">
      <summary>
        <para>Если миниатюра не указана, SearchProvider.fetchThumbnail вызывается при первом отображении элемента.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Search.SearchItem.CompareTo(System.Object)">
      <summary>
        <para>Проверьте, имеют ли два объекта SearchItem одинаковый идентификатор.</para>
      </summary>
      <param name="other">Другой SearchItem для сравнения.</param>
      <returns>
        <para>Возвращает 0, если элементы поиска имеют одинаковый идентификатор.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchItem.CompareTo(UnityEditor.Search.SearchItem)">
      <summary>
        <para>Проверьте, имеют ли два объекта SearchItem одинаковый идентификатор.</para>
      </summary>
      <param name="other">Другой SearchItem для сравнения.</param>
      <returns>
        <para>Возвращает 0, если элементы поиска имеют одинаковый идентификатор.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchItem.#ctor(System.String)">
      <summary>
        <para>Создайте элемент поиска. Элемент поиска должен иметь как минимум уникальный идентификатор для заданного поискового запроса.</para>
      </summary>
      <param name="_id">Уникальный идентификатор SearchItem.</param>
    </member>
    <member name="M:UnityEditor.Search.SearchItem.Equals(System.Object)">
      <summary>
        <para>Проверьте, имеют ли два объекта SearchItem одинаковый идентификатор.</para>
      </summary>
      <param name="other">Другой элемент поиска для сравнения.</param>
      <returns>
        <para>Возвращает true, если SearchItems имеют одинаковый идентификатор.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchItem.Equals(UnityEditor.Search.SearchItem)">
      <summary>
        <para>Проверьте, имеют ли два объекта SearchItem одинаковый идентификатор.</para>
      </summary>
      <param name="other">Другой элемент поиска для сравнения.</param>
      <returns>
        <para>Возвращает true, если SearchItems имеют одинаковый идентификатор.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchItem.GetDescription(UnityEditor.Search.SearchContext,System.Boolean)">
      <summary>
        <para>Получить и отформатировать описание.</para>
      </summary>
      <param name="context">Любой контекст поиска для поставщика поиска элементов.</param>
      <param name="stripHTML">Истинно, если какие-либо теги HTML должны быть удалены (если элемент управления не поддерживает HTML).</param>
      <returns>
        <para>Описание элемента поиска.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchItem.GetHashCode">
      <summary>
        <para>Хэш по умолчанию элемента поиска.</para>
      </summary>
      <returns>
        <para>Хэш-код для текущего SearchItem.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchItem.GetLabel(UnityEditor.Search.SearchContext,System.Boolean)">
      <summary>
        <para>Получить и отформатировать ярлык.</para>
      </summary>
      <param name="context">Любой контекст поиска для поставщика поиска элементов.</param>
      <param name="stripHTML">Истинно, если какие-либо теги HTML должны быть удалены.</param>
      <returns>
        <para>Метка элемента поиска.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchItem.GetPreview(UnityEditor.Search.SearchContext,UnityEngine.Vector2,UnityEditor.Search.FetchPreviewOptions,System.Boolean)">
      <summary>
        <para>Получает предварительный просмотр элемента поиска, если он доступен, в противном случае предварительный просмотр извлекается в это время.</para>
      </summary>
      <param name="context">Контекст поиска, используемый для получения предварительного просмотра.</param>
      <param name="size">Указывает размер желаемого предварительного просмотра.</param>
      <param name="options">Указывает параметры, используемые для получения различных типов предварительного просмотра.</param>
      <param name="cacheThumbnail">Указывает, следует ли кэшировать миниатюру предварительного просмотра для следующего раза.</param>
      <returns>
        <para>Возвращает сгенерированную 2D-текстуру предварительного просмотра.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchItem.GetThumbnail(UnityEditor.Search.SearchContext,System.Boolean)">
      <summary>
        <para>Получает миниатюру элемента поиска, если она доступна, в противном случае миниатюра извлекается в это время. Миниатюра обычно используется в виде списка, а не в виде сетки.</para>
      </summary>
      <param name="context">Контекст поиска, используемый для получения эскиза элемента поиска.</param>
      <param name="cacheThumbnail">Указывает, следует ли кэшировать миниатюру элемента поиска для следующего раза.</param>
      <returns>
        <para>Возвращает 2D-текстуру элемента поиска.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchItem.ToObject">
      <summary>
        <para>Возвращает любой допустимый объект Unity, содержащийся в элементе поиска.</para>
      </summary>
      <param name="type">Используется для проверки того, можно ли присвоить объект типу.</param>
      <returns>
        <para>Возвращает объект Unity или null, если его нет.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchItem.ToObject(System.Type)">
      <summary>
        <para>Возвращает любой допустимый объект Unity, содержащийся в элементе поиска.</para>
      </summary>
      <param name="type">Используется для проверки того, можно ли присвоить объект типу.</param>
      <returns>
        <para>Возвращает объект Unity или null, если его нет.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchItem.ToObject">
      <summary>
        <para>Возвращает любой допустимый объект Unity, содержащийся в элементе поиска.</para>
      </summary>
      <returns>
        <para>Используется для проверки того, можно ли присвоить объект T.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Search.SearchItemOptions">
      <summary>
        <para>Указывает, как должно быть отформатировано описание элемента поиска при представлении пользователю.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchItemOptions.AlwaysRefresh">
      <summary>
        <para>Указывает, что элемент всегда будет обновляться.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchItemOptions.Compacted">
      <summary>
        <para>Использует метку вместо описания для более короткого отображения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchItemOptions.Ellipsis">
      <summary>
        <para>Если описание длиннее, чем ширина окна поиска, описание усекается и добавляется многоточие.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchItemOptions.FullDescription">
      <summary>
        <para>Описание элемента, которое отображается в полном режиме. Обычно это происходит, когда описание отображается в Инспекторе предварительного просмотра, а не в представлении результатов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchItemOptions.FuzzyHighlight">
      <summary>
        <para>Выделяет части описания, соответствующие запросу нечеткого поиска.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchItemOptions.Highlight">
      <summary>
        <para>Выделяет части описания, соответствующие поисковому запросу.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchItemOptions.None">
      <summary>
        <para>Использует описание по умолчанию.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchItemOptions.RightToLeft">
      <summary>
        <para>Если описание длиннее, чем вид поиска, сохраняются последние символы.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Search.SearchItemProviderAttribute">
      <summary>
        <para>Атрибут, используемый для объявления статического метода, который будет создавать новую поисковую систему во время загрузки.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Search.SearchProposition">
      <summary>
        <para>Поисковые предложения используются для отображения пользователю вариантов добавления новых фильтров к поисковому запросу.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Search.SearchProposition.#ctor(System.String,System.String,System.String,System.Int32,UnityEditor.Search.TextCursorPlacement,UnityEngine.Texture2D)">
      <summary>
        <para>Создайте новое поисковое предложение.</para>
      </summary>
      <param name="label">Вывести текст предложения.</param>
      <param name="replacement">Текст, используемый для автоматического завершения запроса при выборе.</param>
      <param name="help">Текст справки, используемый для отображения дополнительной информации о поисковом предложении.</param>
      <param name="priority">Значение, используемое для сортировки предложений среди других предложений поиска при отображении вариантов для пользователя.</param>
      <param name="moveCursor">Указывает, когда следует перемещать текстовый курсор при автозавершении запроса с выбранным предложением.</param>
      <param name="icon">Значок, используемый для отображения предложения.</param>
      <param name="color">
      </param>
    </member>
    <member name="T:UnityEditor.Search.SearchProvider">
      <summary>
        <para>SearchProvider управляет поиском определенных типов элементов и управляет всеми полями SearchItem, такими как эскизы, описания, подфильтры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.SearchProvider.actions">
      <summary>
        <para>Действия службы поиска.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchProvider.active">
      <summary>
        <para>Указывает, активен ли поисковый провайдер. Неактивные поставщики поиска игнорируются службой поиска. Активное состояние можно переключать в настройках поиска.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchProvider.fetchColumns">
      <summary>
        <para>Обработчик, используемый для перечисления столбцов поиска, которые будут использоваться в представлении таблицы поиска.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchProvider.fetchDescription">
      <summary>
        <para>Обработчик для предоставления асинхронного описания элемента. Вызывается, когда элемент должен быть отображен. Позволяет провайдеру подключаемого модуля извлекать длинные описания только тогда, когда они необходимы.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchProvider.fetchItems">
      <summary>
        <para>ОБЯЗАТЕЛЬНО: обработчик для получения элементов для заданного контекста поиска. Возвращаемое значение — это объект, который может иметь тип IEnumerable или IEnumerator. Перечисление этих объектов должно возвращать SearchItems.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchProvider.fetchLabel">
      <summary>
        <para>Обработчик, используемый для извлечения и форматирования метки элемента поиска.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchProvider.fetchPreview">
      <summary>
        <para>Подобно fetchThumbnail, fetchPreview обычно возвращает увеличенный предварительный просмотр. Пользовательский интерфейс поиска будет постепенно отображать один предварительный просмотр в каждом кадре, предотвращая блокировку пользовательского интерфейса, если необходимо создать несколько предварительных просмотров одновременно.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchProvider.fetchPropositions">
      <summary>
        <para>Обработчик, используемый для перечисления вариантов поиска, когда пользователь использует TAB для автозаполнения запроса.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchProvider.fetchThumbnail">
      <summary>
        <para>Обработчик для предоставления асинхронной миниатюры для элемента. Вызывается, когда элемент должен быть отображен. По сравнению с предварительным просмотром миниатюра должна быть меньше и возвращаться как можно быстрее. Используйте fetchPreview, если вы хотите создать предварительный просмотр, который больше и медленнее для возврата. Позволяет поставщику плагинов извлекать/создавать предварительные просмотры только тогда, когда они необходимы.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchProvider.filterId">
      <summary>
        <para>Текстовый токен, используемый для «фильтрации» поисковой системой (например: «me:», «p:», «s:»).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.SearchProvider.id">
      <summary>
        <para>Уникальный идентификатор поисковой системы.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchProvider.isEnabledForContextualSearch">
      <summary>
        <para>Вызывается при вызове поиска в «контекстном режиме». Возвращает true, если служба поиска включена для этого контекста поиска.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchProvider.isExplicitProvider">
      <summary>
        <para>Этот поисковый провайдер активен только в том случае, если указан явно с помощью filterId.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.SearchProvider.name">
      <summary>
        <para>Уникальный идентификатор поисковой системы.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchProvider.onDisable">
      <summary>
        <para>Вызывается при закрытии SearchWindow. Позволяет поставщику поиска освобождать кэшированные ресурсы.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchProvider.onEnable">
      <summary>
        <para>Вызывается при открытии SearchWindow. Позволяет поставщику поиска выполнять некоторое кэширование.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchProvider.priority">
      <summary>
        <para>Подсказка для сортировки поискового провайдера. Влияет на порядок результатов поиска и порядок, в котором службы поиска отображаются в окне FilterWindow.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchProvider.showDetails">
      <summary>
        <para>Указывает, может ли служба поиска отображать дополнительные сведения или нет.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchProvider.showDetailsOptions">
      <summary>
        <para>Определяет отображаемые параметры сведений.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchProvider.startDrag">
      <summary>
        <para>Если реализовано, элемент поддерживает перетаскивание. SearchProvider должен правильно настроить диспетчер DragAndDrop.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchProvider.toObject">
      <summary>
        <para>Возвращает любой действительный объект Unity, содержащийся в элементе поиска.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchProvider.trackSelection">
      <summary>
        <para>Вызывается при изменении выбора и может быть отслежено.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Search.SearchProvider.CreateItem(UnityEditor.Search.SearchContext,System.String,System.Int32,System.String,System.String,UnityEngine.Texture2D,System.Object)">
      <summary>
        <para>Вспомогательная функция для создания нового элемента поиска для текущего поставщика поиска.</para>
      </summary>
      <param name="context">Контекст поиска из запроса, создавшего этот элемент.</param>
      <param name="id">Уникальный идентификатор элемента поиска. Это используется для удаления дубликатов в пользовательском представлении.</param>
      <param name="score">Оценка релевантности элемента поиска. Оценка релевантности используется для сортировки всех результатов для каждого поставщика поиска. Более низкие оценки релевантности указывают на большую релевантность и отображаются первыми.</param>
      <param name="label">Оценка релевантности элемента поиска. Оценка релевантности используется для сортировки всех результатов для каждого поставщика поиска. Более низкие оценки релевантности указывают на большую релевантность и отображаются первыми.</param>
      <param name="description">Описание элемента поиска отображается во второй строке виджета пользовательского интерфейса элемента поиска.</param>
      <param name="thumbnail">Миниатюра элемента поиска отображается слева от метки и описания элемента в качестве предварительного просмотра.</param>
      <param name="data">Миниатюра элемента поиска отображается слева от метки и описания элемента в качестве предварительного просмотра.</param>
      <returns>
        <para>Недавно созданный элемент поиска, прикрепленный к текущему поставщику поиска.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchProvider.CreateItem(System.String,System.Int32,System.String,System.String,UnityEngine.Texture2D,System.Object)">
      <summary>
        <para>Вспомогательная функция для создания нового элемента поиска для текущего поставщика поиска.</para>
      </summary>
      <param name="context">Контекст поиска из запроса, создавшего этот элемент.</param>
      <param name="id">Уникальный идентификатор элемента поиска. Это используется для удаления дубликатов в пользовательском представлении.</param>
      <param name="score">Оценка релевантности элемента поиска. Оценка релевантности используется для сортировки всех результатов для каждого поставщика поиска. Более низкие оценки релевантности указывают на большую релевантность и отображаются первыми.</param>
      <param name="label">Оценка релевантности элемента поиска. Оценка релевантности используется для сортировки всех результатов для каждого поставщика поиска. Более низкие оценки релевантности указывают на большую релевантность и отображаются первыми.</param>
      <param name="description">Описание элемента поиска отображается во второй строке виджета пользовательского интерфейса элемента поиска.</param>
      <param name="thumbnail">Миниатюра элемента поиска отображается слева от метки и описания элемента в качестве предварительного просмотра.</param>
      <param name="data">Миниатюра элемента поиска отображается слева от метки и описания элемента в качестве предварительного просмотра.</param>
      <returns>
        <para>Недавно созданный элемент поиска, прикрепленный к текущему поставщику поиска.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchProvider.CreateItem(UnityEditor.Search.SearchContext,System.String)">
      <summary>
        <para>Вспомогательная функция для создания нового элемента поиска для текущего поставщика поиска.</para>
      </summary>
      <param name="context">Контекст поиска из запроса, создавшего этот элемент.</param>
      <param name="id">Уникальный идентификатор элемента поиска. Это используется для удаления дубликатов в пользовательском представлении.</param>
      <param name="score">Оценка релевантности элемента поиска. Оценка релевантности используется для сортировки всех результатов для каждого поставщика поиска. Более низкие оценки релевантности указывают на большую релевантность и отображаются первыми.</param>
      <param name="label">Оценка релевантности элемента поиска. Оценка релевантности используется для сортировки всех результатов для каждого поставщика поиска. Более низкие оценки релевантности указывают на большую релевантность и отображаются первыми.</param>
      <param name="description">Описание элемента поиска отображается во второй строке виджета пользовательского интерфейса элемента поиска.</param>
      <param name="thumbnail">Миниатюра элемента поиска отображается слева от метки и описания элемента в качестве предварительного просмотра.</param>
      <param name="data">Миниатюра элемента поиска отображается слева от метки и описания элемента в качестве предварительного просмотра.</param>
      <returns>
        <para>Недавно созданный элемент поиска, прикрепленный к текущему поставщику поиска.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchProvider.CreateItem(System.String)">
      <summary>
        <para>Вспомогательная функция для создания нового элемента поиска для текущего поставщика поиска.</para>
      </summary>
      <param name="context">Контекст поиска из запроса, создавшего этот элемент.</param>
      <param name="id">Уникальный идентификатор элемента поиска. Это используется для удаления дубликатов в пользовательском представлении.</param>
      <param name="score">Оценка релевантности элемента поиска. Оценка релевантности используется для сортировки всех результатов для каждого поставщика поиска. Более низкие оценки релевантности указывают на большую релевантность и отображаются первыми.</param>
      <param name="label">Оценка релевантности элемента поиска. Оценка релевантности используется для сортировки всех результатов для каждого поставщика поиска. Более низкие оценки релевантности указывают на большую релевантность и отображаются первыми.</param>
      <param name="description">Описание элемента поиска отображается во второй строке виджета пользовательского интерфейса элемента поиска.</param>
      <param name="thumbnail">Миниатюра элемента поиска отображается слева от метки и описания элемента в качестве предварительного просмотра.</param>
      <param name="data">Миниатюра элемента поиска отображается слева от метки и описания элемента в качестве предварительного просмотра.</param>
      <returns>
        <para>Недавно созданный элемент поиска, прикрепленный к текущему поставщику поиска.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchProvider.CreateItem(System.String,System.String)">
      <summary>
        <para>Вспомогательная функция для создания нового элемента поиска для текущего поставщика поиска.</para>
      </summary>
      <param name="context">Контекст поиска из запроса, создавшего этот элемент.</param>
      <param name="id">Уникальный идентификатор элемента поиска. Это используется для удаления дубликатов в пользовательском представлении.</param>
      <param name="score">Оценка релевантности элемента поиска. Оценка релевантности используется для сортировки всех результатов для каждого поставщика поиска. Более низкие оценки релевантности указывают на большую релевантность и отображаются первыми.</param>
      <param name="label">Оценка релевантности элемента поиска. Оценка релевантности используется для сортировки всех результатов для каждого поставщика поиска. Более низкие оценки релевантности указывают на большую релевантность и отображаются первыми.</param>
      <param name="description">Описание элемента поиска отображается во второй строке виджета пользовательского интерфейса элемента поиска.</param>
      <param name="thumbnail">Миниатюра элемента поиска отображается слева от метки и описания элемента в качестве предварительного просмотра.</param>
      <param name="data">Миниатюра элемента поиска отображается слева от метки и описания элемента в качестве предварительного просмотра.</param>
      <returns>
        <para>Недавно созданный элемент поиска, прикрепленный к текущему поставщику поиска.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchProvider.CreateItem(System.String,System.String,System.String,UnityEngine.Texture2D,System.Object)">
      <summary>
        <para>Вспомогательная функция для создания нового элемента поиска для текущего поставщика поиска.</para>
      </summary>
      <param name="context">Контекст поиска из запроса, создавшего этот элемент.</param>
      <param name="id">Уникальный идентификатор элемента поиска. Это используется для удаления дубликатов в пользовательском представлении.</param>
      <param name="score">Оценка релевантности элемента поиска. Оценка релевантности используется для сортировки всех результатов для каждого поставщика поиска. Более низкие оценки релевантности указывают на большую релевантность и отображаются первыми.</param>
      <param name="label">Оценка релевантности элемента поиска. Оценка релевантности используется для сортировки всех результатов для каждого поставщика поиска. Более низкие оценки релевантности указывают на большую релевантность и отображаются первыми.</param>
      <param name="description">Описание элемента поиска отображается во второй строке виджета пользовательского интерфейса элемента поиска.</param>
      <param name="thumbnail">Миниатюра элемента поиска отображается слева от метки и описания элемента в качестве предварительного просмотра.</param>
      <param name="data">Миниатюра элемента поиска отображается слева от метки и описания элемента в качестве предварительного просмотра.</param>
      <returns>
        <para>Недавно созданный элемент поиска, прикрепленный к текущему поставщику поиска.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchProvider.CreateItem(UnityEditor.Search.SearchContext,System.String,System.String,System.String,UnityEngine.Texture2D,System.Object)">
      <summary>
        <para>Вспомогательная функция для создания нового элемента поиска для текущего поставщика поиска.</para>
      </summary>
      <param name="context">Контекст поиска из запроса, создавшего этот элемент.</param>
      <param name="id">Уникальный идентификатор элемента поиска. Это используется для удаления дубликатов в пользовательском представлении.</param>
      <param name="score">Оценка релевантности элемента поиска. Оценка релевантности используется для сортировки всех результатов для каждого поставщика поиска. Более низкие оценки релевантности указывают на большую релевантность и отображаются первыми.</param>
      <param name="label">Оценка релевантности элемента поиска. Оценка релевантности используется для сортировки всех результатов для каждого поставщика поиска. Более низкие оценки релевантности указывают на большую релевантность и отображаются первыми.</param>
      <param name="description">Описание элемента поиска отображается во второй строке виджета пользовательского интерфейса элемента поиска.</param>
      <param name="thumbnail">Миниатюра элемента поиска отображается слева от метки и описания элемента в качестве предварительного просмотра.</param>
      <param name="data">Миниатюра элемента поиска отображается слева от метки и описания элемента в качестве предварительного просмотра.</param>
      <returns>
        <para>Недавно созданный элемент поиска, прикрепленный к текущему поставщику поиска.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchProvider.#ctor(System.String)">
      <summary>
        <para>Создайте новый SearchProvider.</para>
      </summary>
      <param name="id">Уникальный идентификатор поставщика услуг поиска.</param>
      <param name="displayName">Красивое имя поставщика поиска, используемое для отображения в пользовательском интерфейсе.</param>
      <param name="fetchItemsHandler">Обработчик, отвечающий за заполнение списка элементов поиска в соответствии с запросом.</param>
    </member>
    <member name="M:UnityEditor.Search.SearchProvider.#ctor(System.String,System.String)">
      <summary>
        <para>Создайте новый SearchProvider.</para>
      </summary>
      <param name="id">Уникальный идентификатор поставщика услуг поиска.</param>
      <param name="displayName">Красивое имя поставщика поиска, используемое для отображения в пользовательском интерфейсе.</param>
      <param name="fetchItemsHandler">Обработчик, отвечающий за заполнение списка элементов поиска в соответствии с запросом.</param>
    </member>
    <member name="M:UnityEditor.Search.SearchProvider.#ctor(System.String,System.Func`4&lt;UnityEditor.Search.SearchContext,System.Collections.Generic.List`1&lt;UnityEditor.Search.SearchItem&gt;,UnityEditor.Search.SearchProvider,System.Object&gt;)">
      <summary>
        <para>Создайте новый SearchProvider.</para>
      </summary>
      <param name="id">Уникальный идентификатор поставщика услуг поиска.</param>
      <param name="displayName">Красивое имя поставщика поиска, используемое для отображения в пользовательском интерфейсе.</param>
      <param name="fetchItemsHandler">Обработчик, отвечающий за заполнение списка элементов поиска в соответствии с запросом.</param>
    </member>
    <member name="M:UnityEditor.Search.SearchProvider.#ctor(System.String,System.Func`3&lt;UnityEditor.Search.SearchContext,UnityEditor.Search.SearchProvider,System.Object&gt;)">
      <summary>
        <para>Создайте новый SearchProvider.</para>
      </summary>
      <param name="id">Уникальный идентификатор поставщика услуг поиска.</param>
      <param name="displayName">Красивое имя поставщика поиска, используемое для отображения в пользовательском интерфейсе.</param>
      <param name="fetchItemsHandler">Обработчик, отвечающий за заполнение списка элементов поиска в соответствии с запросом.</param>
    </member>
    <member name="M:UnityEditor.Search.SearchProvider.#ctor(System.String,System.String,System.Func`3&lt;UnityEditor.Search.SearchContext,UnityEditor.Search.SearchProvider,System.Object&gt;)">
      <summary>
        <para>Создайте новый SearchProvider.</para>
      </summary>
      <param name="id">Уникальный идентификатор поставщика услуг поиска.</param>
      <param name="displayName">Красивое имя поставщика поиска, используемое для отображения в пользовательском интерфейсе.</param>
      <param name="fetchItemsHandler">Обработчик, отвечающий за заполнение списка элементов поиска в соответствии с запросом.</param>
    </member>
    <member name="M:UnityEditor.Search.SearchProvider.#ctor(System.String,System.String,System.Func`4&lt;UnityEditor.Search.SearchContext,System.Collections.Generic.List`1&lt;UnityEditor.Search.SearchItem&gt;,UnityEditor.Search.SearchProvider,System.Object&gt;)">
      <summary>
        <para>Создайте новый SearchProvider.</para>
      </summary>
      <param name="id">Уникальный идентификатор поставщика услуг поиска.</param>
      <param name="displayName">Красивое имя поставщика поиска, используемое для отображения в пользовательском интерфейсе.</param>
      <param name="fetchItemsHandler">Обработчик, отвечающий за заполнение списка элементов поиска в соответствии с запросом.</param>
    </member>
    <member name="T:UnityEditor.Search.SearchQueryError">
      <summary>
        <para>Представляет ошибку синтаксического анализа запроса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.SearchQueryError.context">
      <summary>
        <para>Контекст, в котором была зарегистрирована эта ошибка.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.SearchQueryError.index">
      <summary>
        <para>Индекс, где произошла ошибка.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.SearchQueryError.length">
      <summary>
        <para>Длина анализируемого блока.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.SearchQueryError.provider">
      <summary>
        <para>Какая служба поиска зарегистрировала эту ошибку.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.SearchQueryError.reason">
      <summary>
        <para>Причина ошибки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.SearchQueryError.type">
      <summary>
        <para>Тип ошибки запроса.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Search.SearchQueryError.#ctor(System.Int32,System.Int32,System.String,UnityEditor.Search.SearchContext,UnityEditor.Search.SearchProvider,System.Boolean,UnityEditor.Search.SearchQueryErrorType)">
      <summary>
        <para>Создает новую ошибку SearchQueryError.</para>
      </summary>
      <param name="index">Индекс, где произошла ошибка.</param>
      <param name="length">Длина анализируемого блока.</param>
      <param name="reason">Причина ошибки.</param>
      <param name="context">Контекст, в котором была зарегистрирована эта ошибка.</param>
      <param name="provider">Какая служба поиска зарегистрировала эту ошибку.</param>
      <param name="fromSearchQuery">Установите значение true, если эта ошибка возникает при синтаксическом анализе searchQuery. Это правильно сместит индекс относительно необработанного текста.</param>
      <param name="type">Тип ошибки запроса. См. Search.SearchQueryErrorType. По умолчанию Search.SearchQueryErrorType.Error|SearchQueryErrorType.Error.</param>
    </member>
    <member name="M:UnityEditor.Search.SearchQueryError.#ctor(UnityEditor.Search.QueryError,UnityEditor.Search.SearchContext,UnityEditor.Search.SearchProvider,System.Boolean)">
      <summary>
        <para>Создает новый SearchQueryError из существующего Search.QueryError|QueryError.</para>
      </summary>
      <param name="error">Исходный Search.QueryError|QueryError.</param>
      <param name="context">Контекст, в котором была зарегистрирована эта ошибка.</param>
      <param name="provider">Какая служба поиска зарегистрировала эту ошибку.</param>
      <param name="fromSearchQuery">Установите значение true, если эта ошибка возникает при синтаксическом анализе searchQuery. Это правильно сместит индекс относительно необработанного текста.</param>
    </member>
    <member name="T:UnityEditor.Search.SearchQueryErrorType">
      <summary>
        <para>Перечисление, представляющее возможные типы ошибок запросов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchQueryErrorType.Error">
      <summary>
        <para>Представляет ошибку.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchQueryErrorType.Warning">
      <summary>
        <para>Представляет предупреждение.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Search.SearchResult">
      <summary>
        <para>Содержит SearchItem, полученный из запроса.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchResult.id">
      <summary>
        <para>Идентификатор документа, содержащего этот результат.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchResult.index">
      <summary>
        <para>Индекс документа, содержащего этот результат.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchResult.nil">
      <summary>
        <para>Представляет нулевой результат поиска.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchResult.score">
      <summary>
        <para>Оценка релевантности результата. Более низкий балл означает, что это более релевантный результат.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.SearchResult.valid">
      <summary>
        <para>Проверяет, является ли результат поиска действительным.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Search.SearchResult.CompareTo(UnityEditor.Search.SearchResult)">
      <summary>
        <para>Сравнивает результаты поиска, используя значения их индексов.</para>
      </summary>
      <param name="other">Другой SearchResult для сравнения.</param>
      <returns>
        <para>Возвращает true, если оба SearchResults имеют одинаковый индекс.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchResult.#ctor(System.String,System.Int32,System.Int32)">
      <summary>
        <para>Создает новый SearchResult.</para>
      </summary>
      <param name="id">ID документа, содержащего результат.</param>
      <param name="index">Индекс документа, содержащего результат.</param>
      <param name="score">Релевантность ядра результата. Более низкий балл означает, что это более релевантный результат.</param>
    </member>
    <member name="M:UnityEditor.Search.SearchResult.#ctor(System.Int32)">
      <summary>
        <para>Создает новый SearchResult.</para>
      </summary>
      <param name="id">ID документа, содержащего результат.</param>
      <param name="index">Индекс документа, содержащего результат.</param>
      <param name="score">Релевантность ядра результата. Более низкий балл означает, что это более релевантный результат.</param>
    </member>
    <member name="M:UnityEditor.Search.SearchResult.#ctor(System.Int32,System.Int32)">
      <summary>
        <para>Создает новый SearchResult.</para>
      </summary>
      <param name="id">ID документа, содержащего результат.</param>
      <param name="index">Индекс документа, содержащего результат.</param>
      <param name="score">Релевантность ядра результата. Более низкий балл означает, что это более релевантный результат.</param>
    </member>
    <member name="M:UnityEditor.Search.SearchResult.Equals(UnityEditor.Search.SearchResult)">
      <summary>
        <para>Сравните результаты поиска, используя значения их индексов.</para>
      </summary>
      <param name="other">Другой SearchResult для сравнения.</param>
      <returns>
        <para>Возвращает true, если оба SearchResults имеют одинаковый индекс.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchResult.Equals(System.Object)">
      <summary>
        <para>Сравните результаты поиска, используя значения их индексов.</para>
      </summary>
      <param name="other">Другой SearchResult для сравнения.</param>
      <returns>
        <para>Возвращает true, если оба SearchResults имеют одинаковый индекс.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchResult.GetHashCode">
      <summary>
        <para>Вычисляет хэш-код для этого SearchResult из его свойства index.</para>
      </summary>
      <returns>
        <para>Хэш-код результата поиска.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Search.SearchSelection">
      <summary>
        <para>Предоставляет методы для предоставления доступа только для чтения к текущему списку выбранных элементов в поиске.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Search.SearchSelection.Contains(UnityEditor.Search.SearchItem)">
      <summary>
        <para>Проверяет, содержится ли элемент поиска в текущем выборе.</para>
      </summary>
      <param name="item">Поиск элемента для сравнения.</param>
      <returns>
        <para>Истинно, если элемент содержится в выделении.</para>
      </returns>
    </member>
    <member name="P:UnityEditor.Search.SearchSelection.Count">
      <summary>
        <para>Количество выбранных элементов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Search.SearchSelection.#ctor(System.Collections.Generic.IList`1&lt;System.Int32&gt;,UnityEditor.Search.ISearchList)">
      <summary>
        <para>Создает новый SearchSelection.</para>
      </summary>
      <param name="selection">Текущий список выбранных индексов SearchItem.</param>
      <param name="filteredItems">Список элементов поиска, отображаемых в поиске.</param>
      <param name="items">Отфильтрованные элементы.</param>
    </member>
    <member name="M:UnityEditor.Search.SearchSelection.#ctor(System.Collections.Generic.IEnumerable`1&lt;UnityEditor.Search.SearchItem&gt;)">
      <summary>
        <para>Создает новый SearchSelection.</para>
      </summary>
      <param name="selection">Текущий список выбранных индексов SearchItem.</param>
      <param name="filteredItems">Список элементов поиска, отображаемых в поиске.</param>
      <param name="items">Отфильтрованные элементы.</param>
    </member>
    <member name="M:UnityEditor.Search.SearchSelection.First">
      <summary>
        <para>Получает первый выбранный элемент в выборе.</para>
      </summary>
      <returns>
        <para>Первый выбранный элемент в выборе. Возвращает значение null, если элементы не выбраны.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchSelection.GetEnumerator">
      <summary>
        <para>Получает перечислитель для выбранных в данный момент SearchItems.</para>
      </summary>
      <returns>
        <para>Перечислитель для выбранных в данный момент SearchItems.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchSelection.Last">
      <summary>
        <para>Получает последний выбранный элемент в выборе.</para>
      </summary>
      <returns>
        <para>Последний выбранный элемент в выборе. Возвращает значение null, если элементы не выбраны.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchSelection.MaxIndex">
      <summary>
        <para>Самый высокий выбранный индекс любого элемента в выборе.</para>
      </summary>
      <returns>
        <para>Возвращает наивысший выбранный индекс.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchSelection.MinIndex">
      <summary>
        <para>Наименьший выбранный индекс любого элемента в выборе.</para>
      </summary>
      <returns>
        <para>Возвращает самый низкий выбранный индекс.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Search.SearchSelectorArgs">
      <summary>
        <para>Аргументы селектора поиска, используемые при вызове обратного вызова селектора поиска.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchSelectorArgs.current">
      <summary>
        <para>Текущий элемент поиска, для которого необходимо выбрать значение.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Search.SearchSelectorAttribute">
      <summary>
        <para>Атрибут селектора поиска, используемый для определения того, как пользовательское значение может быть выбрано из элемента поиска.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Search.SearchService">
      <summary>
        <para>API основного поиска для запуска поиска и получения результатов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Search.SearchService.CreateContext(System.String)">
      <summary>
        <para>Создает контекст из списка идентификаторов поставщиков услуг поиска.</para>
      </summary>
      <param name="searchText">Поисковый запрос.</param>
      <param name="provider">Поисковый провайдер (данный поисковый провайдер не обязательно должен быть активным или зарегистрированным).</param>
      <param name="providerId">Уникальная строка идентификатора поставщика услуг поиска (т. е. объект, сцена, поиск и т. д.)</param>
      <param name="providerIds">Список идентификаторов поставщиков услуг поиска.</param>
      <param name="providers">Список поисковых провайдеров.</param>
      <param name="flags">Параметры, определяющие, как выполняется запрос.</param>
      <returns>
        <para>Возвращает новый SearchContext.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchService.CreateContext(System.String,UnityEditor.Search.SearchFlags)">
      <summary>
        <para>Создает контекст из списка идентификаторов поставщиков услуг поиска.</para>
      </summary>
      <param name="searchText">Поисковый запрос.</param>
      <param name="provider">Поисковый провайдер (данный поисковый провайдер не обязательно должен быть активным или зарегистрированным).</param>
      <param name="providerId">Уникальная строка идентификатора поставщика услуг поиска (т. е. объект, сцена, поиск и т. д.)</param>
      <param name="providerIds">Список идентификаторов поставщиков услуг поиска.</param>
      <param name="providers">Список поисковых провайдеров.</param>
      <param name="flags">Параметры, определяющие, как выполняется запрос.</param>
      <returns>
        <para>Возвращает новый SearchContext.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchService.CreateContext(UnityEditor.Search.SearchProvider,System.String)">
      <summary>
        <para>Создает контекст из списка идентификаторов поставщиков услуг поиска.</para>
      </summary>
      <param name="searchText">Поисковый запрос.</param>
      <param name="provider">Поисковый провайдер (данный поисковый провайдер не обязательно должен быть активным или зарегистрированным).</param>
      <param name="providerId">Уникальная строка идентификатора поставщика услуг поиска (т. е. объект, сцена, поиск и т. д.)</param>
      <param name="providerIds">Список идентификаторов поставщиков услуг поиска.</param>
      <param name="providers">Список поисковых провайдеров.</param>
      <param name="flags">Параметры, определяющие, как выполняется запрос.</param>
      <returns>
        <para>Возвращает новый SearchContext.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchService.CreateContext(System.String,System.String,UnityEditor.Search.SearchFlags)">
      <summary>
        <para>Создает контекст из списка идентификаторов поставщиков услуг поиска.</para>
      </summary>
      <param name="searchText">Поисковый запрос.</param>
      <param name="provider">Поисковый провайдер (данный поисковый провайдер не обязательно должен быть активным или зарегистрированным).</param>
      <param name="providerId">Уникальная строка идентификатора поставщика услуг поиска (т. е. объект, сцена, поиск и т. д.)</param>
      <param name="providerIds">Список идентификаторов поставщиков услуг поиска.</param>
      <param name="providers">Список поисковых провайдеров.</param>
      <param name="flags">Параметры, определяющие, как выполняется запрос.</param>
      <returns>
        <para>Возвращает новый SearchContext.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchService.CreateContext(System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.String,UnityEditor.Search.SearchFlags)">
      <summary>
        <para>Создает контекст из списка идентификаторов поставщиков услуг поиска.</para>
      </summary>
      <param name="searchText">Поисковый запрос.</param>
      <param name="provider">Поисковый провайдер (данный поисковый провайдер не обязательно должен быть активным или зарегистрированным).</param>
      <param name="providerId">Уникальная строка идентификатора поставщика услуг поиска (т. е. объект, сцена, поиск и т. д.)</param>
      <param name="providerIds">Список идентификаторов поставщиков услуг поиска.</param>
      <param name="providers">Список поисковых провайдеров.</param>
      <param name="flags">Параметры, определяющие, как выполняется запрос.</param>
      <returns>
        <para>Возвращает новый SearchContext.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchService.CreateContext(System.Collections.Generic.IEnumerable`1&lt;UnityEditor.Search.SearchProvider&gt;,System.String,UnityEditor.Search.SearchFlags)">
      <summary>
        <para>Создает контекст из списка идентификаторов поставщиков услуг поиска.</para>
      </summary>
      <param name="searchText">Поисковый запрос.</param>
      <param name="provider">Поисковый провайдер (данный поисковый провайдер не обязательно должен быть активным или зарегистрированным).</param>
      <param name="providerId">Уникальная строка идентификатора поставщика услуг поиска (т. е. объект, сцена, поиск и т. д.)</param>
      <param name="providerIds">Список идентификаторов поставщиков услуг поиска.</param>
      <param name="providers">Список поисковых провайдеров.</param>
      <param name="flags">Параметры, определяющие, как выполняется запрос.</param>
      <returns>
        <para>Возвращает новый SearchContext.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchService.CreateIndex(System.String&amp;,UnityEditor.Search.IndexingOptions&amp;,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;,System.Action`3&lt;System.String,System.String,System.Action&gt;)">
      <summary>
        <para>Создайте новый поисковый индекс.</para>
      </summary>
      <param name="name">Уникальное имя поискового индекса.</param>
      <param name="options">Набор параметров индексирования.</param>
      <param name="roots">Найдите корни индекса, например «Активы», чтобы проиндексировать все активы в разделе «Активы».</param>
      <param name="includes">Эксклюзивный список активов для индексации. Если этот список пуст, все будет проиндексировано.</param>
      <param name="excludes">Шаблоны для исключения активов для индексации в корневом каталоге.</param>
      <param name="onIndexReady">Обратный вызов, который вызывается, когда индекс создан и готов к использованию.</param>
    </member>
    <member name="M:UnityEditor.Search.SearchService.GetAction(UnityEditor.Search.SearchProvider,System.String)">
      <summary>
        <para>Возвращает действие поиска для заданной службы поиска и идентификатор действия поиска.</para>
      </summary>
      <param name="provider">Поставщик поиска для поиска.</param>
      <param name="actionId">Уникальный идентификатор действия в системе поиска.</param>
      <returns>
        <para>Соответствующее действие.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchService.GetItems(UnityEditor.Search.SearchContext,UnityEditor.Search.SearchFlags)">
      <summary>
        <para>Инициирует поиск и возвращает все элементы поиска, соответствующие контексту поиска. Другие элементы можно найти позже с помощью асинхронного поиска.</para>
      </summary>
      <param name="context">Текущий контекст поиска.</param>
      <param name="options">Параметры, определяющие, как выполняется запрос.</param>
      <returns>
        <para>Список элементов поиска, соответствующих поисковому запросу.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchService.GetProvider(System.String)">
      <summary>
        <para>Возвращает данные службы поиска по ее идентификатору.</para>
      </summary>
      <param name="providerId">Уникальный идентификатор поисковой системы.</param>
      <returns>
        <para>Соответствующий поисковый провайдер.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchService.IsIndexReady(System.String)">
      <summary>
        <para>Указывает, готов ли поисковый индекс к использованию.</para>
      </summary>
      <param name="name">Уникальное имя индекса. Это имя обычно совпадает с именем, отображаемым в Диспетчере поисковых индексов, или именем, используемым для вызова SearchService.CreateIndex.</param>
      <returns>
        <para>Возвращает true, если поисковый индекс готов к использованию.</para>
      </returns>
    </member>
    <member name="P:UnityEditor.Search.SearchService.OrderedProviders">
      <summary>
        <para>Возвращает список поставщиков услуг поиска, отсортированных по приоритету.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.SearchService.Providers">
      <summary>
        <para>Возвращает список всех поставщиков услуг поиска (активных или нет).</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Search.SearchService.Refresh">
      <summary>
        <para>Очищает все и перезагружает все поисковые системы. Используйте с осторожностью. Полезно для модульных тестов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Search.SearchService.RefreshWindows">
      <summary>
        <para>Обновить все открытые окна поиска.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Search.SearchService.Request(System.String,UnityEditor.Search.SearchFlags)">
      <summary>
        <para>Выполняет поисковый запрос, который будет получать результаты поиска асинхронно.</para>
      </summary>
      <param name="searchText">Выполняемый поисковый запрос.</param>
      <param name="context">Контекст поиска, используемый для отслеживания асинхронных запросов. Вам нужно избавиться от контекста самостоятельно.</param>
      <param name="options">Параметры, определяющие, как выполняется запрос.</param>
      <returns>
        <para>Асинхронный список элементов поиска.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchService.Request(UnityEditor.Search.SearchContext,UnityEditor.Search.SearchFlags)">
      <summary>
        <para>Выполняет поисковый запрос, который будет получать результаты поиска асинхронно.</para>
      </summary>
      <param name="searchText">Выполняемый поисковый запрос.</param>
      <param name="context">Контекст поиска, используемый для отслеживания асинхронных запросов. Вам нужно избавиться от контекста самостоятельно.</param>
      <param name="options">Параметры, определяющие, как выполняется запрос.</param>
      <returns>
        <para>Асинхронный список элементов поиска.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchService.Request(System.String,System.Action`2&lt;UnityEditor.Search.SearchContext,System.Collections.Generic.IList`1&lt;UnityEditor.Search.SearchItem&gt;&gt;,UnityEditor.Search.SearchFlags)">
      <summary>
        <para>Выполняет поисковый запрос и вызывает указанную функцию, когда доступны все результаты.</para>
      </summary>
      <param name="onSearchCompleted">Обратный вызов вызывается, когда поисковый запрос завершен и доступны все результаты.</param>
      <param name="searchText">
      </param>
      <param name="options">
      </param>
      <param name="context">
      </param>
    </member>
    <member name="M:UnityEditor.Search.SearchService.Request(UnityEditor.Search.SearchContext,System.Action`2&lt;UnityEditor.Search.SearchContext,System.Collections.Generic.IList`1&lt;UnityEditor.Search.SearchItem&gt;&gt;,UnityEditor.Search.SearchFlags)">
      <summary>
        <para>Выполняет поисковый запрос и вызывает указанную функцию, когда доступны все результаты.</para>
      </summary>
      <param name="onSearchCompleted">Обратный вызов вызывается, когда поисковый запрос завершен и доступны все результаты.</param>
      <param name="searchText">
      </param>
      <param name="options">
      </param>
      <param name="context">
      </param>
    </member>
    <member name="M:UnityEditor.Search.SearchService.Request(System.String,System.Action`2&lt;UnityEditor.Search.SearchContext,System.Collections.Generic.IEnumerable`1&lt;UnityEditor.Search.SearchItem&gt;&gt;,System.Action`1&lt;UnityEditor.Search.SearchContext&gt;,UnityEditor.Search.SearchFlags)">
      <summary>
        <para>Выполняет поисковый запрос и обратные вызовы для каждого пакета входящих результатов. Возможно получение повторяющихся элементов, поэтому при необходимости отфильтруйте окончательный список.</para>
      </summary>
      <param name="onIncomingItems">Обратный вызов вызывается каждый раз, когда пакет результатов найден и доступен.</param>
      <param name="onSearchCompleted">Обратный вызов, вызываемый после завершения поискового запроса.</param>
      <param name="searchText">
      </param>
      <param name="options">
      </param>
      <param name="context">
      </param>
    </member>
    <member name="M:UnityEditor.Search.SearchService.Request(UnityEditor.Search.SearchContext,System.Action`2&lt;UnityEditor.Search.SearchContext,System.Collections.Generic.IEnumerable`1&lt;UnityEditor.Search.SearchItem&gt;&gt;,System.Action`1&lt;UnityEditor.Search.SearchContext&gt;,UnityEditor.Search.SearchFlags)">
      <summary>
        <para>Выполняет поисковый запрос и обратные вызовы для каждого пакета входящих результатов. Возможно получение повторяющихся элементов, поэтому при необходимости отфильтруйте окончательный список.</para>
      </summary>
      <param name="onIncomingItems">Обратный вызов вызывается каждый раз, когда пакет результатов найден и доступен.</param>
      <param name="onSearchCompleted">Обратный вызов, вызываемый после завершения поискового запроса.</param>
      <param name="searchText">
      </param>
      <param name="options">
      </param>
      <param name="context">
      </param>
    </member>
    <member name="M:UnityEditor.Search.SearchService.SetActive(System.String,System.Boolean)">
      <summary>
        <para>Активирует или деактивирует поставщика поиска. После этого вызовите Refresh, чтобы применить его к следующему поиску.</para>
      </summary>
      <param name="providerId">Идентификатор поставщика услуг поиска для активации или деактивации.</param>
      <param name="active">Состояние активации.</param>
    </member>
    <member name="M:UnityEditor.Search.SearchService.ShowContextual(System.String[])">
      <summary>
        <para>Открытие окна поиска с использованием определенного контекста (активация определенных фильтров).</para>
      </summary>
      <param name="providerIds">Уникальные идентификаторы поставщиков услуг поиска, которые следует включить при открытии представления поиска.</param>
      <returns>
        <para>Возвращает экземпляр окна представления поиска.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchService.ShowPicker(UnityEditor.Search.SearchContext,System.Action`2&lt;UnityEditor.Search.SearchItem,System.Boolean&gt;,System.Action`1&lt;UnityEditor.Search.SearchItem&gt;,System.Func`2&lt;UnityEditor.Search.SearchItem,System.Boolean&gt;,System.Collections.Generic.IEnumerable`1&lt;UnityEditor.Search.SearchItem&gt;,System.String,System.Single,System.Single,System.Single,UnityEditor.Search.SearchFlags)">
      <summary>
        <para>Откройте окно выбора элементов поиска.</para>
      </summary>
      <param name="context">Контекст поиска для начала.</param>
      <param name="selectHandler">Обратный вызов вызывается при выборе элемента.</param>
      <param name="trackingHandler">Обратный вызов вызывается при щелчке элемента, который не является окончательным выбором.</param>
      <param name="filterHandler">Вызван обратный вызов для фильтрации результатов элемента поиска для отображения.</param>
      <param name="title">Тема для поиска.</param>
      <param name="itemSize">Начальный размер элемента просмотра результатов.</param>
      <param name="defaultWidth">Начальная ширина окна.</param>
      <param name="defaultHeight">Начальная высота окна.</param>
      <param name="subset">Исходный набор элементов для поиска.</param>
      <param name="flags">Параметры, определяющие, как выполняется запрос.</param>
      <returns>
        <para>Создает новое окно поиска.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchService.ShowPicker(UnityEditor.Search.SearchViewState)">
      <summary>
        <para>Откройте окно выбора поиска.</para>
      </summary>
      <param name="viewState">Состояние представления поиска, используемое для открытия окна средства выбора поиска.</param>
      <returns>
        <para>Создает новое окно поиска.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchService.ShowWindow(UnityEditor.Search.SearchContext,System.String,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
        <para>Создает новое окно поиска.</para>
      </summary>
      <param name="context">Контекст поиска для начала.</param>
      <param name="topic">Тема для поиска.</param>
      <param name="saveFilters">Истинно, если фильтры пользовательских поисковых систем должны быть сохранены для следующего сеанса поиска.</param>
      <param name="reuseExisting">Истинно, если активных провайдеров нужно сохранить для следующего сеанса.</param>
      <param name="multiselect">Истинно, если поиск поддерживает множественный выбор.</param>
      <param name="defaultWidth">Начальная ширина окна.</param>
      <param name="defaultHeight">Начальная высота окна.</param>
      <param name="dockable">Если задано значение true, создается закрепляемое окно поиска (которое закрывается при активации элемента). Если установлено значение false, создается раскрывающаяся версия окна поиска (без полей, открепляемая и неподвижная).</param>
      <returns>
        <para>Возвращает экземпляр окна представления поиска.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchService.ShowWindow(UnityEditor.Search.SearchViewState)">
      <summary>
        <para>Создает новое окно поиска.</para>
      </summary>
      <param name="viewState">Состояние представления поиска, используемое для открытия окна поиска.</param>
      <returns>
        <para>Возвращает экземпляр окна представления поиска.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Search.SearchUtils">
      <summary>
        <para>Предоставляет различные служебные функции, используемые SearchProvider.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchUtils.entrySeparators">
      <summary>
        <para>Разделители, используемые для разделения записи на индексируемые токены.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Search.SearchUtils.FetchGameObjects(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Вспомогательная функция для получения всех игровых объектов в определенной сцене.</para>
      </summary>
      <param name="scene">Сцена для получения объектов.</param>
      <returns>
        <para>Массив игровых объектов на сцене.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchUtils.FetchGameObjects">
      <summary>
        <para>Вспомогательная функция для получения всех игровых объектов в определенной сцене.</para>
      </summary>
      <param name="scene">Сцена для получения объектов.</param>
      <returns>
        <para>Массив игровых объектов на сцене.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchUtils.FindShiftLeftVariations(System.String)">
      <summary>
        <para>Извлечение всех вариантов слова. Например: слово hello может иметь следующие варианты: h, he, hel, hell, hello.</para>
      </summary>
      <param name="word">Слово, из которого извлекаются варианты.</param>
      <returns>
        <para>Список вариантов слова.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchUtils.GetAssetPath(UnityEditor.Search.SearchItem&amp;)">
      <summary>
        <para>Возвращает путь ресурса элемента поиска, если он есть.</para>
      </summary>
      <param name="item">Элемент поиска.</param>
      <returns>
        <para>Путь объекта к элементу или null, если ничего не найдено.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchUtils.GetHierarchyAssetPath(UnityEngine.GameObject,System.Boolean)">
      <summary>
        <para>Получить путь к сцене (или префабу), содержащей GameObject.</para>
      </summary>
      <param name="gameObject">GameObject, чтобы найти путь к сцене.</param>
      <param name="prefabOnly">Если true, путь будет возвращен только в том случае, если GameObject является сборным.</param>
      <returns>
        <para>Возвращает путь к сцене или префабу.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchUtils.GetHierarchyPath(UnityEngine.GameObject,System.Boolean)">
      <summary>
        <para>Получить иерархический путь GameObject, включая имя сцены, если для includeScene установлено значение true.</para>
      </summary>
      <param name="gameObject">GameObject, из которого нужно извлечь путь.</param>
      <param name="includeScene">Если true, к пути будет добавлено имя сцены.</param>
      <returns>
        <para>Возвращает путь к GameObject.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchUtils.GetObjectPath(UnityEngine.Object)">
      <summary>
        <para>Получите путь к объекту Unity. Если это GameObject или Component, это &lt;see cref="SearchUtils.GetTransformPath(Transform)"/&gt;. В противном случае это имя актива.</para>
      </summary>
      <param name="obj">Объект, из которого нужно получить путь.</param>
      <returns>
        <para>Возвращает путь объекта.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchUtils.GetTransformPath(UnityEngine.Transform)">
      <summary>
        <para>Отформатируйте красивое имя компонента Transform, добавив все имена родительской иерархии.</para>
      </summary>
      <param name="tform">Преобразование для извлечения имени из.</param>
      <returns>
        <para>Возвращает имя преобразования, используя "/" в качестве разделителя иерархии.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchUtils.MatchSearchGroups(UnityEditor.Search.SearchContext,System.String,System.Boolean)">
      <summary>
        <para>Вспомогательная функция для сопоставления строки с SearchContext. Это попытается сопоставить поисковый запрос с каждым токеном контента (аналогично рабочему процессу меню AddComponent).</para>
      </summary>
      <param name="context">Контекст поиска, содержащий поисковый запрос, которому пытается соответствовать поиск.</param>
      <param name="content">Строковое содержимое, которое токенизировано и используется для соответствия поисковому запросу.</param>
      <param name="ignoreCase">Выполните сопоставление, игнорируя регистр букв.</param>
      <returns>
        <para>Если совпадение произошло.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchUtils.SelectMultipleItems(System.Collections.Generic.IEnumerable`1&lt;UnityEditor.Search.SearchItem&gt;,System.Boolean)">
      <summary>
        <para>Выберите и пропингуйте несколько объектов в Диспетчере проектов.</para>
      </summary>
      <param name="items">Поиск элементов для выбора и проверки связи.</param>
      <param name="focusProjectBrowser">Если задано значение true, браузер проекта будет сфокусирован перед проверкой связи с объектами.</param>
      <param name="pingSelection">Если true, будут пинговаться выбранные объекты.</param>
    </member>
    <member name="M:UnityEditor.Search.SearchUtils.SelectMultipleItems(System.Collections.Generic.IEnumerable`1&lt;UnityEditor.Search.SearchItem&gt;,System.Boolean,System.Boolean)">
      <summary>
        <para>Выберите и пропингуйте несколько объектов в Диспетчере проектов.</para>
      </summary>
      <param name="items">Поиск элементов для выбора и проверки связи.</param>
      <param name="focusProjectBrowser">Если задано значение true, браузер проекта будет сфокусирован перед проверкой связи с объектами.</param>
      <param name="pingSelection">Если true, будут пинговаться выбранные объекты.</param>
    </member>
    <member name="M:UnityEditor.Search.SearchUtils.SplitCamelCase(System.String)">
      <summary>
        <para>Маркировать строку каждой заглавной буквой.</para>
      </summary>
      <param name="source">Слово для разделения в соответствии с camelCase.</param>
      <returns>
        <para>Жетоны верблюжьего ящика.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchUtils.SplitEntryComponents(System.String,System.Char[])">
      <summary>
        <para>Разделить запись в соответствии с указанным списком разделителей.</para>
      </summary>
      <param name="entry">Вход для разделения.</param>
      <param name="entrySeparators">Список разделителей, обозначающих точки разделения.</param>
      <returns>
        <para>Возвращает список токенов в нижнем регистре.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Search.SearchUtils.SplitFileEntryComponents(System.String,System.Char[]&amp;)">
      <summary>
        <para>Разделите запись файла в соответствии со списком разделителей и найдите все варианты имени записи.</para>
      </summary>
      <param name="path">Путь к токенизации.</param>
      <param name="entrySeparators">Разделители записей, используемые для токенизации пути.</param>
      <returns>
        <para>Возвращает список токенов и вариантов в нижнем регистре.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Search.SearchValue">
      <summary>
        <para>Значение поиска используется для расширения механизма запросов с помощью парсеров и фильтров настраиваемых типов для поиска результатов по значению.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.SearchValue.boolean">
      <summary>
        <para>Логическое значение.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchValue.invalid">
      <summary>
        <para>Представляет недопустимое значение поиска.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchValue.number">
      <summary>
        <para>Числовое значение.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchValue.text">
      <summary>
        <para>Текстовое представление значения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchValue.type">
      <summary>
        <para>Указывает конкретный тип искомого значения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Search.SearchValue.valid">
      <summary>
        <para>Указывает, является ли значение поиска допустимым.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Search.SearchValue.SetupEngine(UnityEditor.Search.QueryEngine`1&lt;T&gt;)">
      <summary>
        <para>Расширен механизм запросов для работы со значениями динамического поиска.</para>
      </summary>
      <param name="queryEngine">Механизм запросов для добавления расширенных фильтров значений поиска и синтаксических анализаторов.</param>
    </member>
    <member name="T:UnityEditor.Search.SearchValue.ValueType">
      <summary>
        <para>Поддерживаемые типы значений поиска.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchValue.ValueType.Bool">
      <summary>
        <para>Указывает, что искомое значение является логическим значением.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchValue.ValueType.Color">
      <summary>
        <para>Указывает, что искомое значение является значением UnityEngine.Color.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchValue.ValueType.Enum">
      <summary>
        <para>Указывает, что искомое значение является значением перечисления, содержащим текстовое и целочисленное представление перечисления.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchValue.ValueType.Nil">
      <summary>
        <para>Указывает, что значение поиска равно null.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchValue.ValueType.Number">
      <summary>
        <para>Указывает, что искомое значение является числовым.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchValue.ValueType.Object">
      <summary>
        <para>Указывает, что значением поиска является UnityEngine.Object.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchValue.ValueType.Text">
      <summary>
        <para>Указывает, что искомое значение является текстовым значением.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchValue.ValueType.Vector2">
      <summary>
        <para>Указывает, что значение поиска содержит значение UnityEngine.Vector2.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchValue.ValueType.Vector3">
      <summary>
        <para>Указывает, что значение поиска содержит значение UnityEngine.Vector3.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchValue.ValueType.Vector4">
      <summary>
        <para>Указывает, что значение поиска содержит значение UnityEngine.Vector4.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Search.SearchViewState">
      <summary>
        <para>Состояние представления поиска используется для создания новых окон поиска. См. SearchService.ShowWindow.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchViewState.flags">
      <summary>
        <para>Различные параметры просмотра поиска.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchViewState.group">
      <summary>
        <para>Указывает группу или вкладку, которые будут выбраны при открытии окна поиска.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchViewState.itemSize">
      <summary>
        <para>Указывает размер элемента, который будет использоваться при открытии окна поиска.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchViewState.position">
      <summary>
        <para>Если определено, указывает местоположение нового окна поиска при его открытии.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.SearchViewState.title">
      <summary>
        <para>Указывает название темы поиска.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Search.SearchViewState.#ctor(UnityEditor.Search.SearchContext)">
      <summary>
        <para>Создайте флаги представления поиска, используемые для создания нового окна поиска.</para>
      </summary>
      <param name="context">Исходный контекст поиска.</param>
      <param name="flags">Флаги представления начального поиска.</param>
    </member>
    <member name="M:UnityEditor.Search.SearchViewState.#ctor(UnityEditor.Search.SearchContext,UnityEngine.Search.SearchViewFlags)">
      <summary>
        <para>Создайте флаги представления поиска, используемые для создания нового окна поиска.</para>
      </summary>
      <param name="context">Исходный контекст поиска.</param>
      <param name="flags">Флаги представления начального поиска.</param>
    </member>
    <member name="T:UnityEditor.Search.ShowDetailsOptions">
      <summary>
        <para>Определяет, какие сведения будут отображаться на панели инспектора предварительного просмотра для представления поиска.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.ShowDetailsOptions.Actions">
      <summary>
        <para>Показывает возможные действия с выбранным элементом.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.ShowDetailsOptions.Default">
      <summary>
        <para>Набор параметров по умолчанию, используемый, когда для параметра SearchProvider.showDetails задано значение true.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.ShowDetailsOptions.DefaultGroup">
      <summary>
        <para>Указывает, что поставщик всегда будет отображаться в виде группы (вкладки), даже если набор результатов пуст.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.ShowDetailsOptions.Description">
      <summary>
        <para>Показать расширенное описание элемента.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.ShowDetailsOptions.Inspector">
      <summary>
        <para>Показать встроенный инспектор для выбранного объекта.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.ShowDetailsOptions.ListView">
      <summary>
        <para>Указывает, что эта служба поиска хочет отображать свои элементы в виде списка, если это возможно.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.ShowDetailsOptions.None">
      <summary>
        <para>Опции не определены.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.ShowDetailsOptions.Preview">
      <summary>
        <para>Показать большой предварительный просмотр.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Search.TextCursorPlacement">
      <summary>
        <para>Где поставить курсор в тексте. (см. ISearchView.SetSearchText).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.TextCursorPlacement.Default">
      <summary>
        <para>Не перемещайте курсор.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.TextCursorPlacement.MoveAutoComplete">
      <summary>
        <para>Позиция курсора по умолчанию (конец строки текста).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.TextCursorPlacement.MoveLineEnd">
      <summary>
        <para>Переместите курсор в конец строки текста.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.TextCursorPlacement.MoveLineStart">
      <summary>
        <para>Переместите курсор в начало строки текста.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.TextCursorPlacement.MoveToEndOfPreviousWord">
      <summary>
        <para>Переместите курсор в конец предыдущего слова.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.TextCursorPlacement.MoveToStartOfNextWord">
      <summary>
        <para>Переместите курсор в начало предыдущего слова.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.TextCursorPlacement.MoveWordLeft">
      <summary>
        <para>Переместите курсор на одно слово влево.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.TextCursorPlacement.MoveWordRight">
      <summary>
        <para>Переместите курсор на одно слово вправо.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Search.TextCursorPlacement.None">
      <summary>
        <para>Не перемещайте курсор.</para>
      </summary>
    </member>
  </members>
</doc>