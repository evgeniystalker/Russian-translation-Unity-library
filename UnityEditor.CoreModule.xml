<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<doc>
  <members>
    <assembly>
      <name>UnityEditor.CoreModule</name>
    </assembly>
    <member name="T:UnityEditor.ActionOnDotNetUnhandledException">
      <summary>
        <para>Поведение в случае необработанного исключения .NET.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ActionOnDotNetUnhandledException.Crash">
      <summary>
        <para>Сбой в случае необработанного исключения .NET (будет сгенерирован отчет о сбое).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ActionOnDotNetUnhandledException.SilentExit">
      <summary>
        <para>Автоматический выход в случае необработанного исключения .NET (отчет о сбое не создается).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Advertisements.AdvertisementSettings">
      <summary>
        <para>API редактора для функции редактора служб Unity. Обычно UnityAds включается из окна Службы, но при написании собственного расширения редактора этот API можно использовать.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Advertisements.AdvertisementSettings.enabled">
      <summary>
        <para>Глобальное значение для включения или отключения функции рекламы.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Advertisements.AdvertisementSettings.initializeOnStartup">
      <summary>
        <para>Контролирует, должна ли рекламная система быть инициализирована сразу после запуска.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Advertisements.AdvertisementSettings.testMode">
      <summary>
        <para>Контролирует, используются ли тестовые рекламные объявления вместо рекламных объявлений.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Advertisements.AdvertisementSettings.GetGameId(UnityEngine.RuntimePlatform)">
      <summary>
        <para>Получает идентификатор игры, указанный для платформы среды выполнения.</para>
      </summary>
      <param name="platform">
      </param>
      <returns>
        <para>Идентификатор игры для конкретной платформы.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Advertisements.AdvertisementSettings.GetPlatformGameId(System.String)">
      <summary>
        <para>Получает идентификатор игры, указанный для платформы среды выполнения.</para>
      </summary>
      <param name="platformName">
      </param>
      <returns>
        <para>Идентификатор игры для конкретной платформы.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Advertisements.AdvertisementSettings.IsPlatformEnabled(UnityEngine.RuntimePlatform)">
      <summary>
        <para>Возвращает значение, указывающее, включена ли определенная платформа.</para>
      </summary>
      <param name="platform">Платформа для проверки.</param>
      <returns>
        <para>Boolean для платформы.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Advertisements.AdvertisementSettings.SetGameId(UnityEngine.RuntimePlatform,System.String)">
      <summary>
        <para>Задает идентификатор игры для указанной платформы.</para>
      </summary>
      <param name="platform">
      </param>
      <param name="gameId">
      </param>
    </member>
    <member name="M:UnityEditor.Advertisements.AdvertisementSettings.SetPlatformEnabled(UnityEngine.RuntimePlatform,System.Boolean)">
      <summary>
        <para>Включите конкретную платформу.</para>
      </summary>
      <param name="platform">
      </param>
      <param name="value">
      </param>
    </member>
    <member name="M:UnityEditor.Advertisements.AdvertisementSettings.SetPlatformGameId(System.String,System.String)">
      <summary>
        <para>Задает идентификатор игры для указанной платформы.</para>
      </summary>
      <param name="platformName">
      </param>
      <param name="gameId">
      </param>
    </member>
    <member name="T:UnityEditor.AI.NavMeshBuilder">
      <summary>
        <para>Интерфейс конструктора навигационных ячеек.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AI.NavMeshBuilder.isRunning">
      <summary>
        <para>Возвращает значение true, если асинхронная сборка все еще выполняется. (UnityEditor)</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AI.NavMeshBuilder.BuildNavMesh">
      <summary>
        <para>Постройте Navmesh. (UnityEditor)</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AI.NavMeshBuilder.BuildNavMeshAsync">
      <summary>
        <para>Постройте Navmesh asyncronly. (UnityEditor)</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AI.NavMeshBuilder.BuildNavMeshForMultipleScenes(System.String[])">
      <summary>
        <para>Создает комбинированную сетку навигации для содержимого нескольких сцен. (UnityEditor)</para>
      </summary>
      <param name="paths">Массив путей к сценам, которые используются для построения навигационной сетки.</param>
    </member>
    <member name="M:UnityEditor.AI.NavMeshBuilder.Cancel">
      <summary>
        <para>Отмените строительство Navmesh. (UnityEditor) Смотрите также: NavMeshBuilder.BuildNavMeshAsync</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AI.NavMeshBuilder.Cancel(UnityEngine.AI.NavMeshData)">
      <summary>
        <para>Отменяет асинхронное обновление указанных данных NavMesh. (ЮнитиДжин) См. также: NavMeshBuilder.UpdateNavMeshDataAsync.</para>
      </summary>
      <param name="data">Данные, связанные с асинхронным обновлением.</param>
    </member>
    <member name="M:UnityEditor.AI.NavMeshBuilder.ClearAllNavMeshes">
      <summary>
        <para>Очистите все Navmeshes. (UnityEditor)</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AI.NavMeshBuilder.CollectSourcesInStage(UnityEngine.Bounds,System.Int32,UnityEngine.AI.NavMeshCollectGeometry,System.Int32,System.Collections.Generic.List`1&lt;UnityEngine.AI.NavMeshBuildMarkup&gt;,UnityEngine.SceneManagement.Scene,System.Collections.Generic.List`1&lt;UnityEngine.AI.NavMeshBuildSource&gt;)">
      <summary>
        <para>Собирает рендереры или физические коллайдеры, а также ландшафты в пределах объема. (UnityEditor)</para>
      </summary>
      <param name="includedWorldBounds">Запрашиваемые объекты должны перекрывать эти границы, чтобы быть включенными в результаты.</param>
      <param name="includedLayerMask">Указывает, какие слои включаются в запрос.</param>
      <param name="geometry">Какой тип геометрии собирать - например, физические коллайдеры.</param>
      <param name="defaultArea">Тип области, назначаемый результатам, если он не изменен NavMeshMarkup.</param>
      <param name="markups">Список наценок, который позволяет более точно контролировать способ сбора объектов.</param>
      <param name="stageProxy">Результаты выбираются только со сцены, к которой относится эта сцена.</param>
      <param name="results">Список, где хранятся результаты, список очищается в начале вызова.</param>
    </member>
    <member name="M:UnityEditor.AI.NavMeshBuilder.CollectSourcesInStage(UnityEngine.Transform,System.Int32,UnityEngine.AI.NavMeshCollectGeometry,System.Int32,System.Collections.Generic.List`1&lt;UnityEngine.AI.NavMeshBuildMarkup&gt;,UnityEngine.SceneManagement.Scene,System.Collections.Generic.List`1&lt;UnityEngine.AI.NavMeshBuildSource&gt;)">
      <summary>
        <para>Собирает рендереры или физические коллайдеры, а также ландшафты в иерархии преобразований. (UnityEditor)</para>
      </summary>
      <param name="root">Если значение не равно null, рассмотрите в запросе только root и его дочерние элементы; если значение равно null, включает все загруженные данные.</param>
      <param name="includedLayerMask">Указывает, какие слои включаются в запрос.</param>
      <param name="geometry">Какой тип геометрии собирать - например, физические коллайдеры.</param>
      <param name="defaultArea">Тип области, назначаемый результатам, если он не изменен NavMeshMarkup.</param>
      <param name="markups">Список наценок, который позволяет более точно контролировать способ сбора объектов.</param>
      <param name="stageProxy">Результаты выбираются только со сцены, к которой относится эта сцена.</param>
      <param name="results">Список, где хранятся результаты, список очищается в начале вызова.</param>
    </member>
    <member name="T:UnityEditor.AI.NavMeshEditorHelpers">
      <summary>
        <para>Функциональность утилиты NavMesh действует только в редакторе.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AI.NavMeshEditorHelpers.DrawBuildDebug(UnityEngine.AI.NavMeshData,UnityEngine.AI.NavMeshBuildDebugFlags)">
      <summary>
        <para>Отображает в редакторе точные промежуточные данные, используемые в процессе сборки указанного NavMesh.</para>
      </summary>
      <param name="navMeshData">Объект NavMesh, для которого в процессе сборки были намеренно собраны отладочные данные.</param>
      <param name="flags">Битовая маска, которая определяет типы данных для отображения за один раз.</param>
    </member>
    <member name="T:UnityEditor.AI.NavMeshVisualizationSettings">
      <summary>
        <para>Представляет состояние визуализации отладочной графики навигации.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AI.NavMeshVisualizationSettings.showNavigation">
      <summary>
        <para>Число пользователей, запрашивающих включение отладочной графики навигации.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Analytics.AnalyticsSettings">
      <summary>
        <para>API редактора для функции редактора служб Unity. Обычно Аналитика включается из окна Службы, но при написании собственного расширения редактора этот API можно использовать.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Analytics.AnalyticsSettings.configUrl">
      <summary>
        <para>Задайте конечную точку конфигурации Google Analytics.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Analytics.AnalyticsSettings.dashboardUrl">
      <summary>
        <para>Получите конечную точку панели мониторинга Analytics.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Analytics.AnalyticsSettings.deviceStatsEnabledInBuild">
      <summary>
        <para>Сообщает, включена ли статистика устройства во время выполнения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Analytics.AnalyticsSettings.enabled">
      <summary>
        <para>Если задано значение true, это логическое поле включает функцию аналитики в Unity. Он отключает эту функцию, если для нее установлено значение false.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Analytics.AnalyticsSettings.eventUrl">
      <summary>
        <para>Задайте конечную точку события Аналитика.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Analytics.AnalyticsSettings.initializeOnStartup">
      <summary>
        <para>Определяет, инициализирует ли Unity Аналитику сразу при запуске.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Analytics.AnalyticsSettings.testMode">
      <summary>
        <para>Установите значение true для тестирования интеграции Analytics только в редакторе.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Analytics.AnalyticsSettings.OnRequireInBuildHandler(UnityEditor.Analytics.AnalyticsSettings/RequireInBuildDelegate)">
      <summary>
        <para>Отправляет при каждом запуске сборки платформы. Используйте это событие для включения аналитики в сборке платформы.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="T:UnityEditor.Analytics.AnalyticsSettings.RequireInBuildDelegate">
      <summary>
        <para>Определяет подпись делегата для обработки событий AnalyticsSettings.RequireInBuildDelegate.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Analytics.PerformanceReportingSettings">
      <summary>
        <para>Обычно отчеты о производительности включаются из окна Службы, но при написании собственного расширения редактора этот API можно использовать.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Analytics.PerformanceReportingSettings.enabled">
      <summary>
        <para>Это логическое поле приводит к тому, что функция отчетов о производительности в Unity включается, если значение true, или отключается, если false.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Android.IPostGenerateGradleAndroidProject">
      <summary>
        <para>Реализуйте этот интерфейс для получения обратного вызова после создания проекта Android Gradle. Унаследовано от UnityEditor.Build.IOrderedCallback.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Android.IPostGenerateGradleAndroidProject.OnPostGenerateGradleAndroidProject(System.String)">
      <summary>
        <para>Реализуйте эту функцию для получения обратного вызова после генерации проекта Android Gradle и перед началом сборки. Он не вызывается при выполнении внутренней сборки.</para>
      </summary>
      <param name="path">Путь к корню проекта Gradle библиотеки Unity. Примечание: при экспорте проекта этот параметр удерживает путь к библиотеке Unity в папке, указанной для экспорта.</param>
    </member>
    <member name="T:UnityEditor.AndroidArchitecture">
      <summary>
        <para>Архитектура процессора Android.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidArchitecture.All">
      <summary>
        <para>Все архитектуры.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidArchitecture.ARM64">
      <summary>
        <para>64-разрядная архитектура ARM.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidArchitecture.ARMv7">
      <summary>
        <para>32-разрядная архитектура ARM.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidArchitecture.None">
      <summary>
        <para>Недопустимая архитектура.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidArchitecture.X86">
      <summary>
        <para>32-разрядная архитектура Intel.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidArchitecture.X86_64">
      <summary>
        <para>64-разрядная архитектура Intel.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AndroidAssetPackImporter">
      <summary>
        <para>Представляет каталог пакета активов Android в проекте.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AndroidAssetPackImporter.GetAllImporters">
      <summary>
        <para>Получает все средства импорта пакетов ресурсов Android.</para>
      </summary>
      <returns>
        <para>Возвращает массив со всеми импортерами пакетов ресурсов Android.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.AndroidBlitType">
      <summary>
        <para>Описывает метод отображения содержимого на экране.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidBlitType.Always">
      <summary>
        <para>Всегда рендерите за кадром и блит в задний буфер.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidBlitType.Auto">
      <summary>
        <para>Автоматически определите наиболее подходящий метод для рисования на экране.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidBlitType.Never">
      <summary>
        <para>Никогда не визуализируйте за кадром и не блитируйте на заднем буфере. Всегда выполняйте рендеринг непосредственно в бэкбуфер.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AndroidBuildSystem">
      <summary>
        <para>Тип системы сборки Android.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidBuildSystem.ADT">
      <summary>
        <para>Экспорт проекта ADT (legacy). Эта опция устарела и больше не поддерживается - пожалуйста, используйте androidBuildSystem.Gradle export вместо этого.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidBuildSystem.Gradle">
      <summary>
        <para>Постройте APK с помощью Gradle или экспортируйте проект Gradle.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidBuildSystem.Internal">
      <summary>
        <para>Сборка APK с помощью внутренней системы сборки.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AndroidBuildType">
      <summary>
        <para>Построение конфигураций для созданного проекта.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidBuildType.Debug">
      <summary>
        <para>Для созданного проекта для параметра конфигурации построения задано значение Отладка.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidBuildType.Development">
      <summary>
        <para>Конфигурация построения имеет значение Разработка для созданного проекта.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidBuildType.Release">
      <summary>
        <para>Для созданного проекта конфигурации построения задано значение Выпуск.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AndroidCreateSymbols">
      <summary>
        <para>Определяет параметры, доступные для выбора типа файла символов для создания в сборке Android.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidCreateSymbols.Debugging">
      <summary>
        <para>Создайте ZIP-пакет, содержащий отладочные символы.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidCreateSymbols.Disabled">
      <summary>
        <para>Не создавайте пакет символов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidCreateSymbols.Public">
      <summary>
        <para>Создайте zip-пакет, содержащий общедоступные символы.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AndroidETC2Fallback">
      <summary>
        <para>Это перечисление имеет значения для различных качеств для распаковки текстур ETC2 на устройствах Android, которые не поддерживают формат текстур ETC2.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidETC2Fallback.Quality16Bit">
      <summary>
        <para>Текстуры распаковываются до подходящего 16-битного формата.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidETC2Fallback.Quality32Bit">
      <summary>
        <para>Текстуры распаковываются в формат TextureFormat.RGBA32.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidETC2Fallback.Quality32BitDownscaled">
      <summary>
        <para>Текстуры распаковываются в формат TextureFormat.RGBA32 и уменьшаются до половины исходной ширины и высоты текстуры.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AndroidETC2FallbackOverride">
      <summary>
        <para>Это перечисление имеет значения для различных качеств для распаковки текстуры ETC2 на устройствах Android, которые не поддерживают формат текстур ETC2.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidETC2FallbackOverride.Quality16Bit">
      <summary>
        <para>Текстура распаковывается до подходящего 16-битного формата.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidETC2FallbackOverride.Quality32Bit">
      <summary>
        <para>Текстура распаковывается в формат TextureFormat.RGBA32.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidETC2FallbackOverride.Quality32BitDownscaled">
      <summary>
        <para>Текстура распаковывается в формат TextureFormat.RGBA32 и уменьшается до половины исходной ширины и высоты текстуры.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidETC2FallbackOverride.UseBuildSettings">
      <summary>
        <para>Используйте значение, определенное в параметрах построения проигрывателя.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AndroidGamepadSupportLevel">
      <summary>
        <para>Уровень поддержки геймпада для Android TV.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidGamepadSupportLevel.RequiresGamepad">
      <summary>
        <para>Требуется геймпад для игрового процесса.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidGamepadSupportLevel.SupportsDPad">
      <summary>
        <para>Игра полностью работоспособна с D-pad, геймпад не нужен.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidGamepadSupportLevel.SupportsGamepad">
      <summary>
        <para>Работает с геймпадом, но не требует его.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AndroidMinification">
      <summary>
        <para>Как минимизировать java-код двоичного файла.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidMinification.Gradle">
      <summary>
        <para>Используйте экспериментальную внутреннюю градировку.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidMinification.None">
      <summary>
        <para>Используйте без минификации.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidMinification.Proguard">
      <summary>
        <para>Используйте прогард минификации.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AndroidPreferredInstallLocation">
      <summary>
        <para>Предпочтительное расположение установки приложения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidPreferredInstallLocation.Auto">
      <summary>
        <para>Пусть ОС решает, приложение не имеет никаких настроек.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidPreferredInstallLocation.ForceInternal">
      <summary>
        <para>Принудительная установка во внутреннюю память. Необходим для таких вещей, как живые обои.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidPreferredInstallLocation.PreferExternal">
      <summary>
        <para>Предпочитайте внешние, если это возможно. В противном случае установите на внутренний.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AndroidSdkVersions">
      <summary>
        <para>Уровни API, которые могут быть указаны в скриптах. Обратите внимание, что самый низкий уровень API здесь строго соответствует самому низкому поддерживаемому уровню API, однако эти значения не должны использоваться для определения самого высокого поддерживаемого уровня API.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSdkVersions.AndroidApiLevel16">
      <summary>
        <para>Android 4.1, "Jelly Bean", API level 16.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSdkVersions.AndroidApiLevel17">
      <summary>
        <para>Android 4.2, "Jelly Bean", API level 17.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSdkVersions.AndroidApiLevel18">
      <summary>
        <para>Android 4.3, "Jelly Bean", API level 18.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSdkVersions.AndroidApiLevel19">
      <summary>
        <para>Android 4.4, "KitKat", API level 19.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSdkVersions.AndroidApiLevel21">
      <summary>
        <para>Android 5.0, "Lollipop", API level 21.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSdkVersions.AndroidApiLevel22">
      <summary>
        <para>Android 5.1, "Lollipop", API level 22.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSdkVersions.AndroidApiLevel23">
      <summary>
        <para>Android 6.0, "Marshmallow", API level 23.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSdkVersions.AndroidApiLevel24">
      <summary>
        <para>Android 7.0, "Nougat", API level 24.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSdkVersions.AndroidApiLevel25">
      <summary>
        <para>Android 7.1, "Nougat", API level 25.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSdkVersions.AndroidApiLevel26">
      <summary>
        <para>Android 8.0, "Oreo", API level 26.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSdkVersions.AndroidApiLevel27">
      <summary>
        <para>Android 8.1, "Oreo", API level 27.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSdkVersions.AndroidApiLevel28">
      <summary>
        <para>Android 9.0, "Pie", API level 28.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSdkVersions.AndroidApiLevel29">
      <summary>
        <para>Android 10.0, API level 29.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSdkVersions.AndroidApiLevel30">
      <summary>
        <para>Android 11.0, API level 30.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSdkVersions.AndroidApiLevelAuto">
      <summary>
        <para>Устанавливает целевой уровень API автоматически в соответствии с последним установленным пакетом SDK на компьютере.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AndroidShowActivityIndicatorOnLoading">
      <summary>
        <para>Приложение должно показывать ActivityIndicator при загрузке.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidShowActivityIndicatorOnLoading.DontShow">
      <summary>
        <para>Не показывайте.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidShowActivityIndicatorOnLoading.InversedLarge">
      <summary>
        <para>Обратный Большой.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidShowActivityIndicatorOnLoading.InversedSmall">
      <summary>
        <para>Обратный Малый.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidShowActivityIndicatorOnLoading.Large">
      <summary>
        <para>Большой.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidShowActivityIndicatorOnLoading.Small">
      <summary>
        <para>Маленький.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AndroidSplashScreenScale">
      <summary>
        <para>Режимы масштабирования экрана-заставки Android.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSplashScreenScale.Center">
      <summary>
        <para>Центр.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSplashScreenScale.ScaleToFill">
      <summary>
        <para>Масштабирование для заливки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidSplashScreenScale.ScaleToFit">
      <summary>
        <para>Масштабирование по размеру.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AndroidTargetDevice">
      <summary>
        <para>Архитектура целевого устройства Android.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidTargetDevice.ARMv7">
      <summary>
        <para>Только ARMv7.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidTargetDevice.FAT">
      <summary>
        <para>Все поддерживаемые архитектуры.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AndroidTargetDevices">
      <summary>
        <para>Определяет типы устройств, на которых разрешено запускать приложение Android. Используется для PlayerSettings.Android._androidTargetDevices свойства.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidTargetDevices.AllDevices">
      <summary>
        <para>Сборка Android разрешена для запуска на всех оконечных устройствах.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidTargetDevices.ChromeOSDevicesOnly">
      <summary>
        <para>Сборку Android разрешено запускать только на устройствах Chrome OS.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AndroidTargetDevices.PhonesTabletsAndTVDevicesOnly">
      <summary>
        <para>Сборка Android разрешена только для запуска на телефонах, планшетах и телевизионных устройствах Android, а не на устройствах Chrome OS.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AnimatedValues.AnimBool">
      <summary>
        <para>Лерп от 0 до 1.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AnimatedValues.AnimBool.faded">
      <summary>
        <para>Перенастраивает плавающее значение анимации движения.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AnimatedValues.AnimBool.#ctor">
      <summary>
        <para>Конструктор.</para>
      </summary>
      <param name="value">Начальное значение.</param>
      <param name="callback">
      </param>
    </member>
    <member name="M:UnityEditor.AnimatedValues.AnimBool.#ctor(System.Boolean)">
      <summary>
        <para>Конструктор.</para>
      </summary>
      <param name="value">Начальное значение.</param>
      <param name="callback">
      </param>
    </member>
    <member name="M:UnityEditor.AnimatedValues.AnimBool.#ctor(UnityEngine.Events.UnityAction)">
      <summary>
        <para>Конструктор.</para>
      </summary>
      <param name="value">Начальное значение.</param>
      <param name="callback">
      </param>
    </member>
    <member name="M:UnityEditor.AnimatedValues.AnimBool.#ctor(System.Boolean,UnityEngine.Events.UnityAction)">
      <summary>
        <para>Конструктор.</para>
      </summary>
      <param name="value">Начальное значение.</param>
      <param name="callback">
      </param>
    </member>
    <member name="M:UnityEditor.AnimatedValues.AnimBool.Fade(System.Single,System.Single)">
      <summary>
        <para>Возвращает значение между от и до в зависимости от текущего значения анимации bools.</para>
      </summary>
      <param name="from">Значение для lerp.</param>
      <param name="to">Значение для лервинга.</param>
    </member>
    <member name="M:UnityEditor.AnimatedValues.AnimBool.GetValue">
      <summary>
        <para>Реализация BaseAnimValue_1.GetValue для конкретного типа.</para>
      </summary>
      <returns>
        <para>Текущее значение.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.AnimatedValues.AnimFloat">
      <summary>
        <para>Анимированное плавающее значение.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AnimatedValues.AnimFloat.#ctor(System.Single)">
      <summary>
        <para>Конструктор.</para>
      </summary>
      <param name="value">Начальное значение.</param>
      <param name="callback">
      </param>
    </member>
    <member name="M:UnityEditor.AnimatedValues.AnimFloat.#ctor(System.Single,UnityEngine.Events.UnityAction)">
      <summary>
        <para>Конструктор.</para>
      </summary>
      <param name="value">Начальное значение.</param>
      <param name="callback">
      </param>
    </member>
    <member name="M:UnityEditor.AnimatedValues.AnimFloat.GetValue">
      <summary>
        <para>Реализация BaseAnimValue_1.GetValue для конкретного типа.</para>
      </summary>
      <returns>
        <para>Текущее значение.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.AnimatedValues.AnimQuaternion">
      <summary>
        <para>Анимированное значение кватерниона.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AnimatedValues.AnimQuaternion.#ctor(UnityEngine.Quaternion)">
      <summary>
        <para>Конструктор.</para>
      </summary>
      <param name="value">Начальное значение.</param>
      <param name="callback">
      </param>
    </member>
    <member name="M:UnityEditor.AnimatedValues.AnimQuaternion.#ctor(UnityEngine.Quaternion,UnityEngine.Events.UnityAction)">
      <summary>
        <para>Конструктор.</para>
      </summary>
      <param name="value">Начальное значение.</param>
      <param name="callback">
      </param>
    </member>
    <member name="M:UnityEditor.AnimatedValues.AnimQuaternion.GetValue">
      <summary>
        <para>Реализация BaseAnimValue_1.GetValue для конкретного типа.</para>
      </summary>
      <returns>
        <para>Текущее значение.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.AnimatedValues.AnimVector3">
      <summary>
        <para>Анимированное значение Vector3.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AnimatedValues.AnimVector3.#ctor">
      <summary>
        <para>Конструктор.</para>
      </summary>
      <param name="value">Начальное значение.</param>
      <param name="callback">
      </param>
    </member>
    <member name="M:UnityEditor.AnimatedValues.AnimVector3.#ctor(UnityEngine.Vector3)">
      <summary>
        <para>Конструктор.</para>
      </summary>
      <param name="value">Начальное значение.</param>
      <param name="callback">
      </param>
    </member>
    <member name="M:UnityEditor.AnimatedValues.AnimVector3.#ctor(UnityEngine.Vector3,UnityEngine.Events.UnityAction)">
      <summary>
        <para>Конструктор.</para>
      </summary>
      <param name="value">Начальное значение.</param>
      <param name="callback">
      </param>
    </member>
    <member name="M:UnityEditor.AnimatedValues.AnimVector3.GetValue">
      <summary>
        <para>Реализация BaseAnimValue_1.GetValue для конкретного типа.</para>
      </summary>
      <returns>
        <para>Текущее значение.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.AnimatedValues.BaseAnimValue`1">
      <summary>
        <para>Абстрактный базовый класс для анимированных значений.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AnimatedValues.BaseAnimValue_1.isAnimating">
      <summary>
        <para>Является ли значение, которое в данный момент анимируется.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AnimatedValues.BaseAnimValue_1.speed">
      <summary>
        <para>Скорость анимации движения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AnimatedValues.BaseAnimValue_1.target">
      <summary>
        <para>Цель для анимации движения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AnimatedValues.BaseAnimValue_1.value">
      <summary>
        <para>Текущее значение анимации.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AnimatedValues.BaseAnimValue_1.valueChanged">
      <summary>
        <para>Обратный вызов во время изменения значения.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AnimatedValues.BaseAnimValue_1.BeginAnimating(T,T)">
      <summary>
        <para>Начните анимацию, переходящую от начального значения к целевому значению.</para>
      </summary>
      <param name="newTarget">Целевое значение.</param>
      <param name="newStart">Начальное значение.</param>
    </member>
    <member name="M:UnityEditor.AnimatedValues.BaseAnimValue_1.GetValue">
      <summary>
        <para>Абстрактная функция, переопределяемая в производных типах. Должен возвращать текущее значение анимированного значения.</para>
      </summary>
      <returns>
        <para>Текущее значение.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AnimatedValues.BaseAnimValue_1.StopAnim(T)">
      <summary>
        <para>Остановите анимацию и присвойте заданное значение.</para>
      </summary>
      <param name="newValue">Значение для назначения.</param>
    </member>
    <member name="T:UnityEditor.AnimatedValues.BaseAnimValueNonAlloc`1">
      <summary>
        <para>Абстрактный базовый класс, предоставляющий версию BaseAnimValue без выделения.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AnimationClipCurveData">
      <summary>
        <para>Объект AnimationClipCurveData содержит всю информацию, необходимую для идентификации определенной кривой в AnimationClip. Кривая оживляет определенное свойство компонентного материала, прикрепленного к анимированной кости игрового объекта.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AnimationClipCurveData.curve">
      <summary>
        <para>Фактическая кривая анимации.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AnimationClipCurveData.path">
      <summary>
        <para>Анимируемый путь игрового объекта/кости.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AnimationClipCurveData.propertyName">
      <summary>
        <para>Имя анимируемого свойства.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AnimationClipCurveData.type">
      <summary>
        <para>Тип анимируемого компонента/материала.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AnimationMode">
      <summary>
        <para>AnimationMode используется AnimationWindow для хранения свойств, измененных при воспроизведении AnimationClip.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AnimationMode.animatedPropertyColor">
      <summary>
        <para>Цвет, используемый для отображения того, что свойство в данный момент анимируется.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AnimationMode.candidatePropertyColor">
      <summary>
        <para>Цвет, используемый для отображения изменения анимированного свойства.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AnimationMode.recordedPropertyColor">
      <summary>
        <para>Цвет, используемый для отображения того, что анимированное свойство автоматически записывает изменения в клипе анимации.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AnimationMode.AddEditorCurveBinding(UnityEngine.GameObject,UnityEditor.EditorCurveBinding)">
      <summary>
        <para>Помечает свойство, определенное редактором CurveBinding, как анимированное в данный момент.</para>
      </summary>
      <param name="gameObject">Изменяется объект GameObject.</param>
      <param name="binding">Привязка для изменяемого свойства.</param>
    </member>
    <member name="M:UnityEditor.AnimationMode.AddPropertyModification(UnityEditor.EditorCurveBinding,UnityEditor.PropertyModification,System.Boolean)">
      <summary>
        <para>Помечает свойство как анимированное в данный момент.</para>
      </summary>
      <param name="binding">Описание изменяемой кривой анимационного клипа.</param>
      <param name="modification">Изменяемое свойство объекта.</param>
      <param name="keepPrefabOverride">Указывает, следует ли сохранять изменения, если целевой объект является экземпляром Prefab.</param>
    </member>
    <member name="M:UnityEditor.AnimationMode.BeginSampling">
      <summary>
        <para>Инициализируйте начало выборки анимационного клипа.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AnimationMode.EndSampling">
      <summary>
        <para>Завершите выборку клипа анимации.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AnimationMode.InAnimationMode">
      <summary>
        <para>Проверяет, находится ли редактор в режиме анимации.</para>
      </summary>
      <param name="driver">Объект AnimationModeDriver, который проверяет, заблокирован ли AnimationMode специально для этого драйвера.</param>
    </member>
    <member name="M:UnityEditor.AnimationMode.InAnimationMode(UnityEditor.AnimationModeDriver)">
      <summary>
        <para>Проверяет, находится ли редактор в режиме анимации.</para>
      </summary>
      <param name="driver">Объект AnimationModeDriver, который проверяет, заблокирован ли AnimationMode специально для этого драйвера.</param>
    </member>
    <member name="M:UnityEditor.AnimationMode.IsPropertyAnimated(UnityEngine.Object,System.String)">
      <summary>
        <para>Проверяет, находится ли указанное свойство в режиме анимации и анимируется ли оно.</para>
      </summary>
      <param name="target">Объект, чтобы определить, содержит ли он анимацию.</param>
      <param name="propertyPath">Имя анимации для поиска.</param>
      <returns>
        <para>Найден поиск недвижимости или нет.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AnimationMode.SampleAnimationClip(UnityEngine.GameObject,UnityEngine.AnimationClip,System.Single)">
      <summary>
        <para>Примеры AnimationClip для объекта GameObject, а также запись измененных свойств в режиме анимации.</para>
      </summary>
      <param name="gameObject">Корневой объект GameObject для анимации.</param>
      <param name="clip">Фрагмент анимации для примера.</param>
      <param name="time">Время, в которое выполняется выборка.</param>
      <returns>
        <para>Возвращает значение true, если редактор находится в режиме анимации. В противном случае возвращает значение false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AnimationMode.SamplePlayableGraph">
      <summary>
        <para>Выборка указанного выходного индекса PlayableGraph, а также запись измененных свойств в режиме анимации.</para>
      </summary>
      <param name="graph">Образец PlayableGraph.</param>
      <param name="index">Выходной индекс для выборки в воспроизводимом графике.</param>
      <param name="time">Время, в которое выполняется выборка.</param>
    </member>
    <member name="M:UnityEditor.AnimationMode.StartAnimationMode">
      <summary>
        <para>Запускает режим анимации.</para>
      </summary>
      <param name="driver">Укажите объект AnimationModeDriver, чтобы заблокировать AnimationMode для драйвера.</param>
    </member>
    <member name="M:UnityEditor.AnimationMode.StartAnimationMode(UnityEditor.AnimationModeDriver)">
      <summary>
        <para>Запускает режим анимации.</para>
      </summary>
      <param name="driver">Укажите объект AnimationModeDriver, чтобы заблокировать AnimationMode для драйвера.</param>
    </member>
    <member name="M:UnityEditor.AnimationMode.StopAnimationMode">
      <summary>
        <para>Останавливает режим анимации и возвращает все свойства, которые были анимированы в режиме анимации.</para>
      </summary>
      <param name="driver">Объект AnimationModeDriver должен быть указан, если он был указан при запуске режима анимации (StartAnimationMode).</param>
    </member>
    <member name="M:UnityEditor.AnimationMode.StopAnimationMode(UnityEditor.AnimationModeDriver)">
      <summary>
        <para>Останавливает режим анимации и возвращает все свойства, которые были анимированы в режиме анимации.</para>
      </summary>
      <param name="driver">Объект AnimationModeDriver должен быть указан, если он был указан при запуске режима анимации (StartAnimationMode).</param>
    </member>
    <member name="T:UnityEditor.AnimationModeDriver">
      <summary>
        <para>AnimationMode использует AnimationModeDriver для идентификации драйвера анимации.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Animations.AnimatorCondition">
      <summary>
        <para>Условие, используемое для определения необходимости перехода.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorCondition.mode">
      <summary>
        <para>Режим выполнения условия.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorCondition.parameter">
      <summary>
        <para>Имя параметра, используемого в условии.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorCondition.threshold">
      <summary>
        <para>Пороговое значение параметра AnimatorParameter для выполнения условия.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Animations.AnimatorConditionMode">
      <summary>
        <para>Режим выполнения условия.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.AnimatorConditionMode.Equals">
      <summary>
        <para>Условие выполняется, если значение параметра равно пороговому значению.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.AnimatorConditionMode.Greater">
      <summary>
        <para>Условие выполняется, если значение параметра больше порогового значения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.AnimatorConditionMode.If">
      <summary>
        <para>Условие выполняется, если значение параметра равно true.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.AnimatorConditionMode.IfNot">
      <summary>
        <para>Условие выполняется, если значение параметра равно false.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.AnimatorConditionMode.Less">
      <summary>
        <para>Условие выполняется, если значение параметра меньше порогового значения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.AnimatorConditionMode.NotEqual">
      <summary>
        <para>Условие выполняется, если значение параметра не равно пороговому значению.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Animations.AnimatorController">
      <summary>
        <para>Контроллер аниматора управляет анимацией через слои с конечными автоматами, управляемыми параметрами.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorController.layers">
      <summary>
        <para>Слои в контроллере.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorController.parameters">
      <summary>
        <para>Параметры используются для связи между скриптами и контроллером. Например, они используются для управления переходами и блендерами.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.AddEffectiveStateMachineBehaviour(UnityEditor.Animations.AnimatorState,System.Int32)">
      <summary>
        <para>Добавляет класс поведения конечного автомата определенного типа в AnimatorState для layerIndex. Этот метод следует использовать, когда вы имеете дело с синхронизированным слоем и хотите добавить поведение конечного автомата на синхронизированный слой. Обратите внимание, что соответствующего метода Remove не существует. Чтобы удалить поведение конечного автомата, используйте Object.Destroy.</para>
      </summary>
      <param name="state">Состояние аниматора, к которому добавляется поведение.</param>
      <param name="layerIndex">Индекс слоя.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.AddEffectiveStateMachineBehaviour(System.Type,UnityEditor.Animations.AnimatorState,System.Int32)">
      <summary>
        <para>Неуниверсальная версия этого метода.</para>
      </summary>
      <param name="stateMachineBehaviourType">Тип добавляемого поведения конечного автомата.</param>
      <param name="state">Состояние аниматора, к которому добавляется поведение.</param>
      <param name="layerIndex">Индекс слоя.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.AddLayer(System.String)">
      <summary>
        <para>Служебная функция для добавления слоя к контроллеру.</para>
      </summary>
      <param name="name">Имя слоя.</param>
      <param name="layer">Добавляемый слой.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.AddLayer(UnityEditor.Animations.AnimatorControllerLayer)">
      <summary>
        <para>Служебная функция для добавления слоя к контроллеру.</para>
      </summary>
      <param name="name">Имя слоя.</param>
      <param name="layer">Добавляемый слой.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.AddMotion(UnityEngine.Motion)">
      <summary>
        <para>Функция полезности, создающая новое состояние с движением в нем.</para>
      </summary>
      <param name="motion">Движение, которое будет в Состоянии Аниматора.</param>
      <param name="layerIndex">Слой, в который будет добавлено движение.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.AddMotion(UnityEngine.Motion,System.Int32)">
      <summary>
        <para>Функция полезности, создающая новое состояние с движением в нем.</para>
      </summary>
      <param name="motion">Движение, которое будет в Состоянии Аниматора.</param>
      <param name="layerIndex">Слой, в который будет добавлено движение.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.AddParameter(System.String,UnityEngine.AnimatorControllerParameterType)">
      <summary>
        <para>Служебная функция для добавления параметра в контроллер.</para>
      </summary>
      <param name="name">Имя параметра.</param>
      <param name="type">Тип параметра.</param>
      <param name="parameter">Добавляемый параметр.</param>
      <param name="paramater">
      </param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.AddParameter(UnityEngine.AnimatorControllerParameter)">
      <summary>
        <para>Служебная функция для добавления параметра в контроллер.</para>
      </summary>
      <param name="name">Имя параметра.</param>
      <param name="type">Тип параметра.</param>
      <param name="parameter">Добавляемый параметр.</param>
      <param name="paramater">
      </param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.CreateAnimatorControllerAtPath(System.String)">
      <summary>
        <para>Создает AnimatorController по заданному пути.</para>
      </summary>
      <param name="path">Путь, по которому будет создан ресурс AnimatorController.</param>
      <returns>
        <para>Созданный AnimationController или значение null, если произошла ошибка.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.CreateAnimatorControllerAtPathWithClip(System.String,UnityEngine.AnimationClip)">
      <summary>
        <para>Создает AnimatorController по заданному пути и автоматически создает AnimatorLayer с AnimatorStateMachine, который добавит состояние с AnimationClip в нем.</para>
      </summary>
      <param name="path">Путь, по которому будет создан AnimatorController.</param>
      <param name="clip">Клип по умолчанию, который будет воспроизводиться AnimatorController.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.CreateBlendTreeInController(System.String,UnityEditor.Animations.BlendTree&amp;)">
      <summary>
        <para>Создает BlendTree в новом состоянии Animator.</para>
      </summary>
      <param name="name">Имя BlendTree.</param>
      <param name="tree">Созданный BlendTree.</param>
      <param name="layerIndex">Индекс, в котором будет создано BlendTree.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.CreateBlendTreeInController(System.String,UnityEditor.Animations.BlendTree&amp;,System.Int32)">
      <summary>
        <para>Создает BlendTree в новом состоянии Animator.</para>
      </summary>
      <param name="name">Имя BlendTree.</param>
      <param name="tree">Созданный BlendTree.</param>
      <param name="layerIndex">Индекс, в котором будет создано BlendTree.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.CreateStateMachineBehaviour(UnityEditor.MonoScript)">
      <summary>
        <para>Эта функция создаст экземпляр StateMachineBehaviour на основе класса, определенного в этом скрипте.</para>
      </summary>
      <param name="script">Класс MonoScript для создания экземпляра.</param>
      <returns>
        <para>Возвращает идентификатор экземпляра созданного объекта, возвращает 0, если что-то недопустимо.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.#ctor">
      <summary>
        <para>Конструктор.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.FindStateMachineBehaviourContext(UnityEngine.StateMachineBehaviour)">
      <summary>
        <para>Используйте эту функцию для получения владельца этого поведения.</para>
      </summary>
      <param name="behaviour">Поведение конечного автомата для получения контекста.</param>
      <returns>
        <para>Возвращает контекст версии "Поведение конечного автомата".</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.GetBehaviours">
      <summary>
        <para>Возвращает все функции StateMachineBehaviour, которые соответствуют типу T или являются производными от T.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.GetStateEffectiveBehaviours(UnityEditor.Animations.AnimatorState,System.Int32)">
      <summary>
        <para>Получает эффективный список поведения конечного автомата для AnimatorState. Поведение хранится либо в AnimatorStateMachine, либо в овверридах AnimatorLayer. Используйте эту функцию, чтобы получить эффективно используемый список поведения.</para>
      </summary>
      <param name="state">АниматорСостояние, которое нам нужно в списке Поведение.</param>
      <param name="layerIndex">Запрашиваемый слой.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.GetStateEffectiveMotion(UnityEditor.Animations.AnimatorState)">
      <summary>
        <para>Получает эффективное движение для состояния Animator. Движение хранится либо в AnimatorStateMachine, либо в овверридах AnimatorLayer. Используйте эту функцию, чтобы получить эффективно используемое движение.</para>
      </summary>
      <param name="state">АниматорСостояние, которое мы хотим Движение.</param>
      <param name="layerIndex">Запрашиваемый слой.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.GetStateEffectiveMotion(UnityEditor.Animations.AnimatorState,System.Int32)">
      <summary>
        <para>Получает эффективное движение для состояния Animator. Движение хранится либо в AnimatorStateMachine, либо в овверридах AnimatorLayer. Используйте эту функцию, чтобы получить эффективно используемое движение.</para>
      </summary>
      <param name="state">АниматорСостояние, которое мы хотим Движение.</param>
      <param name="layerIndex">Запрашиваемый слой.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.MakeUniqueLayerName(System.String)">
      <summary>
        <para>Создает уникальное имя для слоев.</para>
      </summary>
      <param name="name">Желаемое имя AnimatorLayer.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.MakeUniqueParameterName(System.String)">
      <summary>
        <para>Создает уникальное имя для параметра.</para>
      </summary>
      <param name="name">Желаемое имя параметра AnimatorParameter.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.RemoveLayer(System.Int32)">
      <summary>
        <para>Служебная функция для удаления слоя из контроллера.</para>
      </summary>
      <param name="index">Индекс AnimatorLayer.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.RemoveParameter(System.Int32)">
      <summary>
        <para>Служебная функция для удаления параметра из контроллера.</para>
      </summary>
      <param name="index">Индекс параметра AnimatorParameter.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.SetStateEffectiveBehaviours">
      <summary>
        <para>Задает действующий список поведение конечного автомата для AnimatorState. Список поведение хранится либо в AnimatorStateMachine, либо в овверридах AnimatorLayer. Используйте эту функцию, чтобы задать эффективно используемый список поведения.</para>
      </summary>
      <param name="state">АниматорСостояние, которое мы хотим установить в списке Поведение.</param>
      <param name="layerIndex">Слой, задающий список поведение.</param>
      <param name="behaviours">Список поведение, который будет установлен.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.SetStateEffectiveMotion(UnityEditor.Animations.AnimatorState,UnityEngine.Motion)">
      <summary>
        <para>Задает эффективное движение для AnimatorState. Движение хранится либо в AnimatorStateMachine, либо в овверридах AnimatorLayer. Используйте эту функцию, чтобы установить эффективно используемое движение.</para>
      </summary>
      <param name="state">АниматорСостояние, которое мы хотим задать.</param>
      <param name="motion">Движение, которое будет задано.</param>
      <param name="layerIndex">Слой, задающий движение.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorController.SetStateEffectiveMotion(UnityEditor.Animations.AnimatorState,UnityEngine.Motion,System.Int32)">
      <summary>
        <para>Задает эффективное движение для AnimatorState. Движение хранится либо в AnimatorStateMachine, либо в овверридах AnimatorLayer. Используйте эту функцию, чтобы установить эффективно используемое движение.</para>
      </summary>
      <param name="state">АниматорСостояние, которое мы хотим задать.</param>
      <param name="motion">Движение, которое будет задано.</param>
      <param name="layerIndex">Слой, задающий движение.</param>
    </member>
    <member name="T:UnityEditor.Animations.AnimatorControllerLayer">
      <summary>
        <para>Слой анимации содержит конечный автомат, который управляет анимацией модели или ее части.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorControllerLayer.avatarMask">
      <summary>
        <para>Маска аватара, используемая для маскировки анимации на данном слое.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorControllerLayer.blendingMode">
      <summary>
        <para>Режим наложения, используемый слоем. Он не учитывается для первого слоя.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorControllerLayer.defaultWeight">
      <summary>
        <para>Вес наложения по умолчанию, который имеют слои. Он не учитывается для первого слоя.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorControllerLayer.iKPass">
      <summary>
        <para>Когда слой активен, при вычислении он будет иметь проход IK. Он вызовет обратный вызов OnAnimatorIK.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorControllerLayer.name">
      <summary>
        <para>Имя слоя.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorControllerLayer.stateMachine">
      <summary>
        <para>Конечный автомат для слоя.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorControllerLayer.syncedLayerAffectsTiming">
      <summary>
        <para>Когда слой активен, он будет контролировать продолжительность синхронизированного слоя.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorControllerLayer.syncedLayerIndex">
      <summary>
        <para>Задает индекс синхронизированного слоя.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorControllerLayer.GetOverrideBehaviours(UnityEditor.Animations.AnimatorState)">
      <summary>
        <para>Получает список поведения переопределения для состояния на данном слое.</para>
      </summary>
      <param name="state">Состояние, в котором мы хотим получить список поведения.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorControllerLayer.GetOverrideMotion(UnityEditor.Animations.AnimatorState)">
      <summary>
        <para>Получает движение переопределения для состояния заданного слоя.</para>
      </summary>
      <param name="state">Состояние, в котором мы хотим получить движение.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorControllerLayer.SetOverrideBehaviours">
      <summary>
        <para>Задает список поведения переопределения для состояния на данном слое.</para>
      </summary>
      <param name="state">Состояние, в котором мы хотим установить список поведения.</param>
      <param name="behaviours">Список поведения, который будет установлен.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorControllerLayer.SetOverrideMotion(UnityEditor.Animations.AnimatorState,UnityEngine.Motion)">
      <summary>
        <para>Задает движение переопределения для состояния заданного слоя.</para>
      </summary>
      <param name="state">Состояние, которое мы хотим задать.</param>
      <param name="motion">Движение, которое будет задано.</param>
    </member>
    <member name="T:UnityEditor.Animations.AnimatorLayerBlendingMode">
      <summary>
        <para>Задает способ смешивания слоя с предыдущими слоями.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.AnimatorLayerBlendingMode.Additive">
      <summary>
        <para>Анимации добавляются к предыдущим слоям.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.AnimatorLayerBlendingMode.Override">
      <summary>
        <para>Анимация переопределяет предыдущие слои.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Animations.AnimatorState">
      <summary>
        <para>Состояния являются основными строительными блоками конечного автомата. Каждое состояние содержит движение (AnimationClip или BlendTree), которое будет воспроизводиться, пока персонаж находится в этом состоянии. Когда событие в игре вызывает переход состояния, персонаж остается в новом состоянии, анимационная последовательность которого затем возьмет верх.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.behaviours">
      <summary>
        <para>Список поведение, назначенный этому состоянию.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.cycleOffset">
      <summary>
        <para>Смещение, при котором начинается цикл анимации. Полезно для синхронизации зацикленных анимаций. Единицами измерения нормируется время.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.cycleOffsetParameter">
      <summary>
        <para>Параметр контроллера аниматора, определяющий значение смещения цикла.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.cycleOffsetParameterActive">
      <summary>
        <para>Определите, управляется ли значение смещения цикла параметром контроллера Animator или значением, заданным в редакторе.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.iKOnFeet">
      <summary>
        <para>Следует ли уважать Foot IK за это состояние.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.mirror">
      <summary>
        <para>Должно ли состояние быть зеркальным.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.mirrorParameter">
      <summary>
        <para>Параметр контроллера аниматора, который управляет значением зеркала.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.mirrorParameterActive">
      <summary>
        <para>Определите, управляется ли значение зеркала параметром контроллера Animator или значением, заданным в редакторе.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.motion">
      <summary>
        <para>Движение, присвоенное этому состоянию.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.nameHash">
      <summary>
        <para>Хэшированное название штата.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.speed">
      <summary>
        <para>Скорость движения по умолчанию.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.speedParameter">
      <summary>
        <para>Параметр контроллера аниматора, определяющий значение скорости.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.speedParameterActive">
      <summary>
        <para>Определите, управляется ли значение скорости параметром контроллера Animator или значением, заданным в редакторе.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.tag">
      <summary>
        <para>Тег можно использовать для идентификации состояния.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.timeParameter">
      <summary>
        <para>Если свойство timeParameterActive имеет значение true, вместо нормализованного времени будет использоваться значение этого параметра.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.timeParameterActive">
      <summary>
        <para>Если значение true, используйте значение заданного параметра в качестве нормализованного времени.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.transitions">
      <summary>
        <para>Переходы, которые выходят из состояния.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorState.writeDefaultValues">
      <summary>
        <para>Записывает ли AnimatorStates обратно значения по умолчанию для свойств, которые не анимируются его движением.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorState.AddExitTransition">
      <summary>
        <para>Служебная функция для добавления исходящего перехода к выходу родительского конечного автомата состояния.</para>
      </summary>
      <param name="defaultExitTime">Если значение равно true, время выхода будет эквивалентно 0,25 секунды.</param>
      <returns>
        <para>Добавленный объект Animations.AnimatorStateTransition.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorState.AddExitTransition(System.Boolean)">
      <summary>
        <para>Служебная функция для добавления исходящего перехода к выходу родительского конечного автомата состояния.</para>
      </summary>
      <param name="defaultExitTime">Если значение равно true, время выхода будет эквивалентно 0,25 секунды.</param>
      <returns>
        <para>Добавленный объект Animations.AnimatorStateTransition.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorState.AddStateMachineBehaviour">
      <summary>
        <para>Добавляет класс поведения конечного автомата типа T в AnimatorState. Обратите внимание, что соответствующего метода Remove не существует. Чтобы удалить поведение конечного автомата, используйте Object.Destroy.</para>
      </summary>
      <returns>
        <para>Тип добавляемого поведения конечного автомата.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorState.AddStateMachineBehaviour(System.Type)">
      <summary>
        <para>Неуниверсальная версия этого метода.</para>
      </summary>
      <param name="stateMachineBehaviourType">
      </param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorState.AddTransition(UnityEditor.Animations.AnimatorState)">
      <summary>
        <para>Служебная функция для добавления исходящего перехода в состояние назначения.</para>
      </summary>
      <param name="defaultExitTime">Если значение равно true, время выхода будет эквивалентно 0,25 секунды.</param>
      <param name="destinationState">Состояние назначения.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorState.AddTransition(UnityEditor.Animations.AnimatorState,System.Boolean)">
      <summary>
        <para>Служебная функция для добавления исходящего перехода в состояние назначения.</para>
      </summary>
      <param name="defaultExitTime">Если значение равно true, время выхода будет эквивалентно 0,25 секунды.</param>
      <param name="destinationState">Состояние назначения.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorState.AddTransition(UnityEditor.Animations.AnimatorStateMachine)">
      <summary>
        <para>Служебная функция для добавления исходящего перехода на конечный автомат назначения.</para>
      </summary>
      <param name="defaultExitTime">Если значение равно true, время выхода будет эквивалентно 0,25 секунды.</param>
      <param name="destinationStateMachine">Конечный автомат назначения.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorState.AddTransition(UnityEditor.Animations.AnimatorStateMachine,System.Boolean)">
      <summary>
        <para>Служебная функция для добавления исходящего перехода на конечный автомат назначения.</para>
      </summary>
      <param name="defaultExitTime">Если значение равно true, время выхода будет эквивалентно 0,25 секунды.</param>
      <param name="destinationStateMachine">Конечный автомат назначения.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorState.AddTransition(UnityEditor.Animations.AnimatorStateTransition)">
      <summary>
        <para>Служебная функция для добавления исходящего перехода.</para>
      </summary>
      <param name="transition">Переход к добавлению.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorState.RemoveTransition(UnityEditor.Animations.AnimatorStateTransition)">
      <summary>
        <para>Служебная функция для удаления перехода из состояния.</para>
      </summary>
      <param name="transition">Переход к удалению.</param>
    </member>
    <member name="T:UnityEditor.Animations.AnimatorStateMachine">
      <summary>
        <para>Граф, контролирующий взаимодействие состояний. Каждое состояние ссылается на движение.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateMachine.anyStatePosition">
      <summary>
        <para>Положение узла AnyState.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateMachine.anyStateTransitions">
      <summary>
        <para>Список переходов AnyState.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateMachine.behaviours">
      <summary>
        <para>Список Поведение, назначенный этому конечному автомату.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateMachine.defaultState">
      <summary>
        <para>Состояние, в котором будет находиться конечный автомат при запуске.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateMachine.entryPosition">
      <summary>
        <para>Положение узла входа.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateMachine.entryTransitions">
      <summary>
        <para>Список переходов записей в конечном автомате.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateMachine.exitPosition">
      <summary>
        <para>Положение выходного узла.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateMachine.parentStateMachinePosition">
      <summary>
        <para>Положение родительского узла конечного автомата. Допустимо только в иераховом конечном автомате.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateMachine.stateMachines">
      <summary>
        <para>Список подчиненных конечных автоматов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateMachine.states">
      <summary>
        <para>Список государств.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.AddAnyStateTransition(UnityEditor.Animations.AnimatorState)">
      <summary>
        <para>Служебная функция для добавления перехода AnyState в указанное состояние или statemachine.</para>
      </summary>
      <param name="destinationState">Состояние назначения.</param>
      <param name="destinationStateMachine">Состояние назначенияmachine.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.AddAnyStateTransition(UnityEditor.Animations.AnimatorStateMachine)">
      <summary>
        <para>Служебная функция для добавления перехода AnyState в указанное состояние или statemachine.</para>
      </summary>
      <param name="destinationState">Состояние назначения.</param>
      <param name="destinationStateMachine">Состояние назначенияmachine.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.AddEntryTransition(UnityEditor.Animations.AnimatorState)">
      <summary>
        <para>Служебная функция для добавления входящего перехода к выходу из родительского конечного автомата.</para>
      </summary>
      <param name="destinationState">Состояние назначения Animations.AnimatorState.</param>
      <param name="destinationStateMachine">Конечный автомат Animations.AnimatorStateMachine.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.AddEntryTransition(UnityEditor.Animations.AnimatorStateMachine)">
      <summary>
        <para>Служебная функция для добавления входящего перехода к выходу из родительского конечного автомата.</para>
      </summary>
      <param name="destinationState">Состояние назначения Animations.AnimatorState.</param>
      <param name="destinationStateMachine">Конечный автомат Animations.AnimatorStateMachine.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.AddState(System.String)">
      <summary>
        <para>Служебная функция для добавления состояния на конечный автомат.</para>
      </summary>
      <param name="name">Название нового штата.</param>
      <param name="position">Положение узла состояния.</param>
      <returns>
        <para>Государство-аниматор, которое было создано для этого состояния.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.AddState(System.String,UnityEngine.Vector3)">
      <summary>
        <para>Служебная функция для добавления состояния на конечный автомат.</para>
      </summary>
      <param name="name">Название нового штата.</param>
      <param name="position">Положение узла состояния.</param>
      <returns>
        <para>Государство-аниматор, которое было создано для этого состояния.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.AddState(UnityEditor.Animations.AnimatorState,UnityEngine.Vector3)">
      <summary>
        <para>Служебная функция для добавления состояния на конечный автомат.</para>
      </summary>
      <param name="state">Добавляемое состояние.</param>
      <param name="position">Положение узла состояния.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.AddStateMachine(System.String)">
      <summary>
        <para>Служебная функция для добавления конечного автомата в конечный автомат.</para>
      </summary>
      <param name="name">Имя нового конечного автомата.</param>
      <param name="position">Положение узла конечного автомата.</param>
      <returns>
        <para>Недавно созданный конечный автомат Animations.AnimatorStateMachine.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.AddStateMachine(System.String,UnityEngine.Vector3)">
      <summary>
        <para>Служебная функция для добавления конечного автомата в конечный автомат.</para>
      </summary>
      <param name="name">Имя нового конечного автомата.</param>
      <param name="position">Положение узла конечного автомата.</param>
      <returns>
        <para>Недавно созданный конечный автомат Animations.AnimatorStateMachine.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.AddStateMachine(UnityEditor.Animations.AnimatorStateMachine,UnityEngine.Vector3)">
      <summary>
        <para>Служебная функция для добавления конечного автомата в конечный автомат.</para>
      </summary>
      <param name="stateMachine">Добавляемый конечный автомат.</param>
      <param name="position">Положение узла конечного автомата.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.AddStateMachineBehaviour">
      <summary>
        <para>Добавляет класс поведения конечного автомата типа T в AnimatorStateMachine. Обратите внимание, что соответствующего метода Remove не существует. Чтобы удалить поведение конечного автомата, используйте Object.Destroy.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.AddStateMachineBehaviour(System.Type)">
      <summary>
        <para>Неуниверсальная версия этого метода.</para>
      </summary>
      <param name="stateMachineBehaviourType">Тип добавляемого класса поведения конечного автомата.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.AddStateMachineExitTransition(UnityEditor.Animations.AnimatorStateMachine)">
      <summary>
        <para>Служебная функция для добавления исходящего перехода с исходного конечного автомата на выход из родительского конечного автомата.</para>
      </summary>
      <param name="sourceStateMachine">Исходный конечный автомат.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.AddStateMachineTransition(UnityEditor.Animations.AnimatorStateMachine)">
      <summary>
        <para>Служебная функция для добавления исходящего перехода от исходного конечного автомата к месту назначения.</para>
      </summary>
      <param name="sourceStateMachine">Исходный конечный автомат.</param>
      <param name="destinationStateMachine">Конечный автомат назначения.</param>
      <param name="destinationState">Состояние назначения.</param>
      <returns>
        <para>Созданный переход Animations.AnimatorTransition.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.AddStateMachineTransition(UnityEditor.Animations.AnimatorStateMachine,UnityEditor.Animations.AnimatorStateMachine)">
      <summary>
        <para>Служебная функция для добавления исходящего перехода от исходного конечного автомата к месту назначения.</para>
      </summary>
      <param name="sourceStateMachine">Исходный конечный автомат.</param>
      <param name="destinationStateMachine">Конечный автомат назначения.</param>
      <param name="destinationState">Состояние назначения.</param>
      <returns>
        <para>Созданный переход Animations.AnimatorTransition.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.AddStateMachineTransition(UnityEditor.Animations.AnimatorStateMachine,UnityEditor.Animations.AnimatorState)">
      <summary>
        <para>Служебная функция для добавления исходящего перехода от исходного конечного автомата к месту назначения.</para>
      </summary>
      <param name="sourceStateMachine">Исходный конечный автомат.</param>
      <param name="destinationStateMachine">Конечный автомат назначения.</param>
      <param name="destinationState">Состояние назначения.</param>
      <returns>
        <para>Созданный переход Animations.AnimatorTransition.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.GetStateMachineTransitions(UnityEditor.Animations.AnimatorStateMachine)">
      <summary>
        <para>Получает список всех исходящих переходов конечного автомата с заданного конечного автомата.</para>
      </summary>
      <param name="sourceStateMachine">Исходный конечный автомат.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.MakeUniqueStateMachineName(System.String)">
      <summary>
        <para>Создает уникальное имя конечного автомата в контексте родительского конечного автомата.</para>
      </summary>
      <param name="name">Требуемое имя для конечного автомата.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.MakeUniqueStateName(System.String)">
      <summary>
        <para>Создает уникальное имя состояния в контексте родительского конечного автомата.</para>
      </summary>
      <param name="name">Желаемое название для государства.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.RemoveAnyStateTransition(UnityEditor.Animations.AnimatorStateTransition)">
      <summary>
        <para>Служебная функция для удаления перехода AnyState с конечного автомата.</para>
      </summary>
      <param name="transition">Переход AnyStat для удаления.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.RemoveEntryTransition(UnityEditor.Animations.AnimatorTransition)">
      <summary>
        <para>Служебная функция для удаления перехода записи с конечного автомата.</para>
      </summary>
      <param name="transition">Переход к удалению.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.RemoveState(UnityEditor.Animations.AnimatorState)">
      <summary>
        <para>Служебная функция для удаления состояния с конечного автомата.</para>
      </summary>
      <param name="state">Состояние, которое нужно удалить.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.RemoveStateMachine(UnityEditor.Animations.AnimatorStateMachine)">
      <summary>
        <para>Служебная функция для удаления конечного автомата из родительского конечного автомата.</para>
      </summary>
      <param name="stateMachine">Конечный автомат, который требуется удалить.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.RemoveStateMachineTransition(UnityEditor.Animations.AnimatorStateMachine,UnityEditor.Animations.AnimatorTransition)">
      <summary>
        <para>Служебная функция для удаления исходящего перехода с исходного конечного автомата.</para>
      </summary>
      <param name="transition">Переход к удалению.</param>
      <param name="sourceStateMachine">Исходный конечный автомат.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateMachine.SetStateMachineTransitions(UnityEditor.Animations.AnimatorStateMachine,UnityEditor.Animations.AnimatorTransition[])">
      <summary>
        <para>Задает список всех исходящих переходов конечного автомата с заданного конечного автомата.</para>
      </summary>
      <param name="stateMachine">Исходный конечный автомат.</param>
      <param name="transitions">Исходящие переходы.</param>
      <param name="sourceStateMachine">
      </param>
    </member>
    <member name="T:UnityEditor.Animations.AnimatorStateTransition">
      <summary>
        <para>Переходы определяют, когда и как конечный автомат переключается из одного состояния в другое. AnimatorStateTransition всегда происходит из состояния аниматора (или AnyState) и имеет временные параметры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateTransition.canTransitionToSelf">
      <summary>
        <para>Установите значение true, чтобы разрешить или запретить переход к себе во время перехода AnyState.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateTransition.duration">
      <summary>
        <para>Продолжительность перехода.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateTransition.exitTime">
      <summary>
        <para>Если значение параметра AnimatorStateTransition.hasExitTime имеет значение true, exitTime представляет точное время, в которое переход может вступить в силу.  Это представлено в нормализованном времени, поэтому, например, время выхода 0,75 означает, что на первом кадре, где воспроизведено 75% анимации, условие Exit Time будет истинным. На следующем кадре условие будет ложным.  Для зацикленных анимаций переходы со временем выхода меньше 1 будут оцениваться в каждом цикле, поэтому вы можете использовать это для синхронизации перехода с правильным временем в анимации, каждый цикл.  Переходы со временем выхода, превышающим единицу, будут оцениваться только один раз, поэтому их можно использовать для выхода в определенное время, после фиксированного количества циклов. Например, переход со временем выхода 3,5 будет оцениваться один раз, после трех с половиной циклов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateTransition.hasExitTime">
      <summary>
        <para>Когда переход активен, он будет иметь условие времени выхода.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateTransition.hasFixedDuration">
      <summary>
        <para>Определяет, сообщается ли продолжительность перехода в фиксированной продолжительности в секундах или в виде нормализованного времени.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateTransition.interruptionSource">
      <summary>
        <para>Какие переходы AnimatorState могут прервать переход.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateTransition.offset">
      <summary>
        <para>Время, в которое начнется состояние назначения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorStateTransition.orderedInterruption">
      <summary>
        <para>Переход может быть прерван переходом, который имеет более высокий приоритет.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorStateTransition.#ctor">
      <summary>
        <para>Создает новый переход состояния аниматора.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Animations.AnimatorTransition">
      <summary>
        <para>Переходы определяют, когда и как конечный автомат переключается из включенного состояния в другое. AnimatorПереходы всегда происходят из записи StateMachine или StateMachine. Они не определяют временные параметры.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorTransition.#ctor">
      <summary>
        <para>Создает новый переход аниматора.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Animations.AnimatorTransitionBase">
      <summary>
        <para>Базовый класс для переходов аниматора. Переходы определяют, когда и как конечный автомат переключается из одного состояния в другое.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorTransitionBase.conditions">
      <summary>
        <para>Анимация.АниматорУсловия условия, которые должны быть выполнены для перехода.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorTransitionBase.destinationState">
      <summary>
        <para>Конечное состояние перехода.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorTransitionBase.destinationStateMachine">
      <summary>
        <para>Конечный автомат перехода.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorTransitionBase.isExit">
      <summary>
        <para>Является ли место назначения перехода выходом текущего конечного автомата.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorTransitionBase.mute">
      <summary>
        <para>Отключает переход. Переход никогда не произойдет.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.AnimatorTransitionBase.solo">
      <summary>
        <para>Отключает все остальные переходы в исходном состоянии.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorTransitionBase.AddCondition(UnityEditor.Animations.AnimatorConditionMode,System.Single,System.String)">
      <summary>
        <para>Служебная функция для добавления условия к переходу.</para>
      </summary>
      <param name="mode">Режим Animations.AnimatorCondition условия.</param>
      <param name="threshold">Пороговое значение условия.</param>
      <param name="parameter">Имя параметра.</param>
    </member>
    <member name="M:UnityEditor.Animations.AnimatorTransitionBase.RemoveCondition(UnityEditor.Animations.AnimatorCondition)">
      <summary>
        <para>Служебная функция для удаления условия из перехода.</para>
      </summary>
      <param name="condition">Условие, которое требуется удалить.</param>
    </member>
    <member name="T:UnityEditor.Animations.BlendTree">
      <summary>
        <para>Blend деревья используются для непрерывного смешивания анимации между их детьми. Они могут быть как 1D, так и 2D.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.BlendTree.blendParameter">
      <summary>
        <para>Параметр, используемый для вычисления веса смешивания дочерних элементов в 1D-деревьях смешивания или на оси X дерева 2D-смешивания.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.BlendTree.blendParameterY">
      <summary>
        <para>Параметр, используемый для вычисления веса смешивания дочерних элементов по оси Y дерева 2D-смешивания.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.BlendTree.blendType">
      <summary>
        <para>Тип смешивания может быть как 1D, так и различными типами 2D.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.BlendTree.children">
      <summary>
        <para>Копия списка дочерних движений дерева смешивания.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.BlendTree.maxThreshold">
      <summary>
        <para>Задает максимальное пороговое значение, которое будет использоваться ChildMotion. Используется только в том случае, если параметр useAutomaticThresholds имеет значение true.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.BlendTree.minThreshold">
      <summary>
        <para>Задает минимальное пороговое значение, которое будет использоваться ChildMotion. Используется только в том случае, если параметр useAutomaticThresholds имеет значение true.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.BlendTree.useAutomaticThresholds">
      <summary>
        <para>Когда они активны, пороговые значения для детей автоматически распределяются между 0 и 1.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Animations.BlendTree.AddChild(UnityEngine.Motion)">
      <summary>
        <para>Служебная функция для добавления дочернего движения в деревья смешивания.</para>
      </summary>
      <param name="motion">Предложение о добавлении в качестве дочернего.</param>
      <param name="position">Положение ребенка. При использовании 2D смешивания деревьев.</param>
      <param name="threshold">Порог ребенка. При использовании 1D смешивания деревьев.</param>
    </member>
    <member name="M:UnityEditor.Animations.BlendTree.AddChild(UnityEngine.Motion,UnityEngine.Vector2)">
      <summary>
        <para>Служебная функция для добавления дочернего движения в деревья смешивания.</para>
      </summary>
      <param name="motion">Предложение о добавлении в качестве дочернего.</param>
      <param name="position">Положение ребенка. При использовании 2D смешивания деревьев.</param>
      <param name="threshold">Порог ребенка. При использовании 1D смешивания деревьев.</param>
    </member>
    <member name="M:UnityEditor.Animations.BlendTree.AddChild(UnityEngine.Motion,System.Single)">
      <summary>
        <para>Служебная функция для добавления дочернего движения в деревья смешивания.</para>
      </summary>
      <param name="motion">Предложение о добавлении в качестве дочернего.</param>
      <param name="position">Положение ребенка. При использовании 2D смешивания деревьев.</param>
      <param name="threshold">Порог ребенка. При использовании 1D смешивания деревьев.</param>
    </member>
    <member name="M:UnityEditor.Animations.BlendTree.CreateBlendTreeChild(System.Single)">
      <summary>
        <para>Служебная функция для добавления дочернего дерева смешивания в дерево смешивания.</para>
      </summary>
      <param name="position">Положение ребенка. При использовании 2D смешивания деревьев.</param>
      <param name="threshold">Порог ребенка. При использовании 1D смешивания деревьев.</param>
    </member>
    <member name="M:UnityEditor.Animations.BlendTree.CreateBlendTreeChild(UnityEngine.Vector2)">
      <summary>
        <para>Служебная функция для добавления дочернего дерева смешивания в дерево смешивания.</para>
      </summary>
      <param name="position">Положение ребенка. При использовании 2D смешивания деревьев.</param>
      <param name="threshold">Порог ребенка. При использовании 1D смешивания деревьев.</param>
    </member>
    <member name="M:UnityEditor.Animations.BlendTree.RemoveChild(System.Int32)">
      <summary>
        <para>Служебная функция для удаления дочернего элемента дерева смешивания.</para>
      </summary>
      <param name="index">Индекс удаляемого дерева смешивания.</param>
    </member>
    <member name="T:UnityEditor.Animations.BlendTreeType">
      <summary>
        <para>Тип алгоритма смешивания, используемого деревом смешивания.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.BlendTreeType.Direct">
      <summary>
        <para>Прямой контроль веса смешивания для каждого узла.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.BlendTreeType.FreeformCartesian2D">
      <summary>
        <para>Лучше всего использовать, когда ваши движения не представляют разные направления.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.BlendTreeType.FreeformDirectional2D">
      <summary>
        <para>Этот тип наложения используется, когда ваши движения представляют разные направления, однако вы можете иметь несколько движений в одном направлении, например, идти вперед и бежать вперед.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.BlendTreeType.Simple1D">
      <summary>
        <para>Базовое смешивание с использованием одного параметра.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.BlendTreeType.SimpleDirectional2D">
      <summary>
        <para>Лучше всего использовать, когда ваши движения представляют различные направления, такие как «идти вперед», «идти назад», «идти влево» и «идти вправо» или «целиться вверх», «целиться вниз», «целиться влево» и «целиться вправо».</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Animations.ChildAnimatorState">
      <summary>
        <para>Структура, представляющая состояние в контексте родительского конечного автомата.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.ChildAnimatorState.position">
      <summary>
        <para>Положение узла состояния в контексте родительского конечного автомата.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.ChildAnimatorState.state">
      <summary>
        <para>Государство.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Animations.ChildAnimatorStateMachine">
      <summary>
        <para>Структура, представляющая конечный автомат в контексте его родительского конечного автомата.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.ChildAnimatorStateMachine.position">
      <summary>
        <para>Положение узла конечного автомата в контексте его родительского конечного автомата.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.ChildAnimatorStateMachine.stateMachine">
      <summary>
        <para>Конечный автомат.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Animations.ChildMotion">
      <summary>
        <para>Структура, представляющая движение в контексте родительского дерева смешивания.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.ChildMotion.cycleOffset">
      <summary>
        <para>Нормализовано смещение времени ребенка.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.ChildMotion.directBlendParameter">
      <summary>
        <para>Параметр, используемый дочерним элементом при использовании в BlendTree типа BlendTreeType.Direct.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.ChildMotion.mirror">
      <summary>
        <para>Зеркало ребенка.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.ChildMotion.motion">
      <summary>
        <para>Само движение.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.ChildMotion.position">
      <summary>
        <para>Положение ребенка. Используется в 2D смешанных деревьях.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.ChildMotion.threshold">
      <summary>
        <para>Порог ребенка. Используется в 1D смешанных деревьях.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.ChildMotion.timeScale">
      <summary>
        <para>Относительная скорость ребенка.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Animations.CurveFilterOptions">
      <summary>
        <para>Параметры уменьшения ключевых кадров для сжатия кривых анимации.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.CurveFilterOptions.floatError">
      <summary>
        <para>Величина, на которую кривая анимации с плавающей точкой может отклоняться от исходной кривой. Эта сумма выражается в процентах: положительное значение от 0 до 100.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.CurveFilterOptions.keyframeReduction">
      <summary>
        <para>Следует ли применять сокращение ключевых кадров.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.CurveFilterOptions.positionError">
      <summary>
        <para>Величина, на которую кривая анимации положения может отклоняться от исходной кривой. Эта сумма выражается в процентах: положительное значение от 0 до 100.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.CurveFilterOptions.rotationError">
      <summary>
        <para>Величина, на которую кривая анимации поворота может отклоняться от исходной кривой. Эта сумма выражается в виде числа степеней. Это должно быть положительное значение от 0 до 180.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.CurveFilterOptions.scaleError">
      <summary>
        <para>Величина, на которую кривая масштабной анимации может отклоняться от исходной кривой. Эта сумма выражается в процентах: положительное значение от 0 до 100.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.CurveFilterOptions.unrollRotation">
      <summary>
        <para>Следует ли применять разворачивание вращения. Этот параметр включен по умолчанию.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Animations.GameObjectRecorder">
      <summary>
        <para>Записывает изменяющиеся свойства объекта GameObject при запуске Scene и сохраняет информацию в AnimationClip.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.GameObjectRecorder.currentTime">
      <summary>
        <para>Возвращает текущее время записи. (Только для чтения)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.GameObjectRecorder.isRecording">
      <summary>
        <para>Возвращает значение true при записи рекордера. (Только для чтения)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Animations.GameObjectRecorder.root">
      <summary>
        <para>Корень GameObject анимированной иерархии. (Только для чтения)</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Animations.GameObjectRecorder.Bind(UnityEditor.EditorCurveBinding)">
      <summary>
        <para>Связывает свойство GameObject, определенное параметром EditorCurveBinding.</para>
      </summary>
      <param name="binding">Обязательное определение.</param>
    </member>
    <member name="M:UnityEditor.Animations.GameObjectRecorder.BindAll(UnityEngine.GameObject,System.Boolean)">
      <summary>
        <para>Добавляет привязки для всех свойств целевого объекта, а также для всех дочерних объектов целевого объекта, если рекурсивный объект равен true.</para>
      </summary>
      <param name="target">.root или любой из его дочерних элементов.</param>
      <param name="recursive">Связывает также все дочерние свойства целевого объекта, если для них задано значение true.</param>
    </member>
    <member name="M:UnityEditor.Animations.GameObjectRecorder.BindComponent(UnityEngine.Component)">
      <summary>
        <para>Добавляет привязки для всех свойств компонента.</para>
      </summary>
      <param name="component">Компонент, который требуется привязать.</param>
    </member>
    <member name="M:UnityEditor.Animations.GameObjectRecorder.BindComponent(UnityEngine.GameObject,System.Type,System.Boolean)">
      <summary>
        <para>ТОДО.</para>
      </summary>
      <param name="target">
      </param>
      <param name="componentType">
      </param>
      <param name="recursive">
      </param>
    </member>
    <member name="M:UnityEditor.Animations.GameObjectRecorder.BindComponent(UnityEngine.GameObject,System.Boolean)">
      <summary>
        <para>ТОДО.</para>
      </summary>
      <param name="target">
      </param>
      <param name="componentType">
      </param>
      <param name="recursive">
      </param>
    </member>
    <member name="M:UnityEditor.Animations.GameObjectRecorder.BindComponentsOfType(UnityEngine.GameObject,System.Boolean)">
      <summary>
        <para>Добавляет привязки для всех свойств первого компонента типа T, найденного в target, а также для всех дочерних объектов целевого объекта, если рекурсивный имеет значение true.</para>
      </summary>
      <param name="target">.root или любой из его дочерних элементов.</param>
      <param name="recursive">Связывает также свойства преобразования дочерних объектов целевого объекта, если для них задано значение true.</param>
      <param name="componentType">Тип компонента.</param>
    </member>
    <member name="M:UnityEditor.Animations.GameObjectRecorder.BindComponentsOfType(UnityEngine.GameObject,System.Type,System.Boolean)">
      <summary>
        <para>Добавляет привязки для всех свойств первого компонента типа T, найденного в target, а также для всех дочерних объектов целевого объекта, если рекурсивный имеет значение true.</para>
      </summary>
      <param name="target">.root или любой из его дочерних элементов.</param>
      <param name="recursive">Связывает также свойства преобразования дочерних объектов целевого объекта, если для них задано значение true.</param>
      <param name="componentType">Тип компонента.</param>
    </member>
    <member name="M:UnityEditor.Animations.GameObjectRecorder.#ctor(UnityEngine.GameObject)">
      <summary>
        <para>Создайте новый GameObjectRecorder.</para>
      </summary>
      <param name="root">Корневой объект GameObject для анимированной иерархии.</param>
    </member>
    <member name="M:UnityEditor.Animations.GameObjectRecorder.#ctor">
      <summary>
        <para>ТОДО.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Animations.GameObjectRecorder.GetBindings">
      <summary>
        <para>Возвращает массив всех привязок, добавленных в средство записи.</para>
      </summary>
      <returns>
        <para>Массив привязок.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Animations.GameObjectRecorder.ResetRecording">
      <summary>
        <para>Сбросьте запись.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Animations.GameObjectRecorder.SaveToClip(UnityEngine.AnimationClip)">
      <summary>
        <para>Сохраняет записанную анимацию в целевой клип.</para>
      </summary>
      <param name="clip">Целевой клип. Если этот клип имеет кривые анимации, они будут удалены.</param>
      <param name="fps">Кадров в секунду (FPS) для клипа. Если значение не указано, по умолчанию этот метод использует 60 кадров в секунду.</param>
      <param name="filterOptions">Параметры фильтрации для обработки кривых анимации при сохранении в целевом клипе. Если параметры не указаны, по умолчанию этот метод отфильтровывает нерелевантные клавиши, применяя легкое сжатие 0,5 для positionError, rotationError, scaleError и floatError.</param>
    </member>
    <member name="M:UnityEditor.Animations.GameObjectRecorder.SaveToClip(UnityEngine.AnimationClip,System.Single)">
      <summary>
        <para>Сохраняет записанную анимацию в целевой клип.</para>
      </summary>
      <param name="clip">Целевой клип. Если этот клип имеет кривые анимации, они будут удалены.</param>
      <param name="fps">Кадров в секунду (FPS) для клипа. Если значение не указано, по умолчанию этот метод использует 60 кадров в секунду.</param>
      <param name="filterOptions">Параметры фильтрации для обработки кривых анимации при сохранении в целевом клипе. Если параметры не указаны, по умолчанию этот метод отфильтровывает нерелевантные клавиши, применяя легкое сжатие 0,5 для positionError, rotationError, scaleError и floatError.</param>
    </member>
    <member name="M:UnityEditor.Animations.GameObjectRecorder.SaveToClip(UnityEngine.AnimationClip,System.Single,UnityEditor.Animations.CurveFilterOptions)">
      <summary>
        <para>Сохраняет записанную анимацию в целевой клип.</para>
      </summary>
      <param name="clip">Целевой клип. Если этот клип имеет кривые анимации, они будут удалены.</param>
      <param name="fps">Кадров в секунду (FPS) для клипа. Если значение не указано, по умолчанию этот метод использует 60 кадров в секунду.</param>
      <param name="filterOptions">Параметры фильтрации для обработки кривых анимации при сохранении в целевом клипе. Если параметры не указаны, по умолчанию этот метод отфильтровывает нерелевантные клавиши, применяя легкое сжатие 0,5 для positionError, rotationError, scaleError и floatError.</param>
    </member>
    <member name="M:UnityEditor.Animations.GameObjectRecorder.TakeSnapshot(System.Single)">
      <summary>
        <para>Пересылает анимацию на dt секунд, затем записывает значения добавленных привязок.</para>
      </summary>
      <param name="dt">Дельта-время.</param>
    </member>
    <member name="T:UnityEditor.Animations.StateMachineBehaviourContext">
      <summary>
        <para>Этот класс содержит все сведения владельца для этого поведения конечного автомата.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.StateMachineBehaviourContext.animatorController">
      <summary>
        <para>Animations.AnimatorController, которому принадлежит это поведение конечного автомата.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.StateMachineBehaviourContext.animatorObject">
      <summary>
        <para>Объект, которому принадлежит это поведение конечного автомата. Может быть Animations.AnimatorState или Animations.AnimatorStateMachine.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.StateMachineBehaviourContext.layerIndex">
      <summary>
        <para>Индекс слоя аниматора, которому принадлежит это поведение конечного автомата.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Animations.TransitionInterruptionSource">
      <summary>
        <para>Какие переходы AnimatorState могут прервать переход.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.TransitionInterruptionSource.Destination">
      <summary>
        <para>Переход может быть прерван переходами в целевом AnimatorState.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.TransitionInterruptionSource.DestinationThenSource">
      <summary>
        <para>Переход может быть прерван переходами в исходном или целевом AnimatorState.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.TransitionInterruptionSource.None">
      <summary>
        <para>Переход не может быть прерван. Известно, что он атомный.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.TransitionInterruptionSource.Source">
      <summary>
        <para>Переход может быть прерван переходами в исходном AnimatorState.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Animations.TransitionInterruptionSource.SourceThenDestination">
      <summary>
        <para>Переход может быть прерван переходами в исходном или целевом AnimatorState.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AnimationUtility">
      <summary>
        <para>Утилита редактора для изменения анимационных клипов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AnimationUtility.onCurveWasModified">
      <summary>
        <para>Вызывается при изменении кривой анимации в клипе анимации.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AnimationUtility.CalculateTransformPath(UnityEngine.Transform,UnityEngine.Transform)">
      <summary>
        <para>Извлекает путь от корневого преобразования к целевому преобразованию.</para>
      </summary>
      <param name="targetTransform">
      </param>
      <param name="root">
      </param>
      <returns>
        <para>Возвращает строку, представляющую путь в иерархии преобразования.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.AnimationUtility.CurveModifiedType">
      <summary>
        <para>Описывает тип модификации, вызвавшей срабатывание метода OnCurveWasModified.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetAllCurves(UnityEngine.AnimationClip)">
      <summary>
        <para>Извлекает все кривые из определенного клипа анимации.</para>
      </summary>
      <param name="clip">
      </param>
      <param name="includeCurveData">
      </param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetAllCurves(UnityEngine.AnimationClip,System.Boolean)">
      <summary>
        <para>Извлекает все кривые из определенного клипа анимации.</para>
      </summary>
      <param name="clip">
      </param>
      <param name="includeCurveData">
      </param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetAnimatableBindings(UnityEngine.GameObject,UnityEngine.GameObject)">
      <summary>
        <para>Извлекает анимируемые привязки для определенного объекта GameObject.</para>
      </summary>
      <param name="targetObject">
      </param>
      <param name="root">
      </param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetAnimatedObject(UnityEngine.GameObject,UnityEditor.EditorCurveBinding)">
      <summary>
        <para>Извлекает анимированный объект, на который указывает привязка.</para>
      </summary>
      <param name="root">
      </param>
      <param name="binding">
      </param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetAnimationClips(UnityEngine.Animation)">
      <summary>
        <para>Извлекает массив клипов анимации, связанных с Объектом или компонентом GameObject.</para>
      </summary>
      <param name="component">
      </param>
      <param name="gameObject">
      </param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetAnimationClips(UnityEngine.GameObject)">
      <summary>
        <para>Извлекает массив клипов анимации, связанных с Объектом или компонентом GameObject.</para>
      </summary>
      <param name="component">
      </param>
      <param name="gameObject">
      </param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetAnimationEvents(UnityEngine.AnimationClip)">
      <summary>
        <para>Извлекает все события анимации, связанные с клипом анимации.</para>
      </summary>
      <param name="clip">
      </param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetCurveBindings(UnityEngine.AnimationClip)">
      <summary>
        <para>Извлекает привязки плавающей кривой в клипе анимации.</para>
      </summary>
      <param name="clip">
      </param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetEditorCurve(UnityEngine.AnimationClip,System.String,System.Type,System.String)">
      <summary>
        <para>Извлекает плавающую кривую, на которую указывает привязка.</para>
      </summary>
      <param name="clip">
      </param>
      <param name="relativePath">
      </param>
      <param name="type">
      </param>
      <param name="propertyName">
      </param>
      <param name="binding">
      </param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetEditorCurve(UnityEngine.AnimationClip,UnityEditor.EditorCurveBinding)">
      <summary>
        <para>Извлекает плавающую кривую, на которую указывает привязка.</para>
      </summary>
      <param name="clip">
      </param>
      <param name="relativePath">
      </param>
      <param name="type">
      </param>
      <param name="propertyName">
      </param>
      <param name="binding">
      </param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetFloatValue(UnityEngine.GameObject,System.String,System.Type,System.String,System.Single&amp;)">
      <summary>
        <para>Извлекает текущее плавающее значение путем выборки значения кривой на определенном объекте GameObject.</para>
      </summary>
      <param name="root">
      </param>
      <param name="relativePath">
      </param>
      <param name="type">
      </param>
      <param name="propertyName">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetGenerateMotionCurves(UnityEngine.AnimationClip)">
      <summary>
        <para>Повторно определяет, настроен ли клип анимации на создание корневых кривых движения.</para>
      </summary>
      <param name="clip">АнимацияСкольжение к запросу.</param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetKeyBroken(UnityEngine.AnimationCurve,System.Int32)">
      <summary>
        <para>Извлекает неработающий флаг касательной для специфичного ключевого кадра.</para>
      </summary>
      <param name="curve">Кривая запроса.</param>
      <param name="index">Индекс ключевых кадров.</param>
      <returns>
        <para>Неработающий флаг по указанному индексу.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetKeyLeftTangentMode(UnityEngine.AnimationCurve,System.Int32)">
      <summary>
        <para>Извлекает левый тангенсный режим ключевого кадра по определенному индексу.</para>
      </summary>
      <param name="curve">Кривая запроса.</param>
      <param name="index">Индекс ключевых кадров.</param>
      <returns>
        <para>Возвращает тангенсный режим.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetKeyRightTangentMode(UnityEngine.AnimationCurve,System.Int32)">
      <summary>
        <para>Извлекает правильный тангенсный режим ключевого кадра по определенному индексу.</para>
      </summary>
      <param name="curve">Кривая запроса.</param>
      <param name="index">Индекс ключевых кадров.</param>
      <returns>
        <para>Возвращает тангенсный режим.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetObjectReferenceCurve(UnityEngine.AnimationClip,UnityEditor.EditorCurveBinding)">
      <summary>
        <para>Извлекает кривую ссылки на объект, на которую указывает привязка.</para>
      </summary>
      <param name="clip">
      </param>
      <param name="binding">
      </param>
      <returns>
        <para>Возвращает массив ключевых кадров.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AnimationUtility.GetObjectReferenceCurveBindings(UnityEngine.AnimationClip)">
      <summary>
        <para>Извлекает привязки эталонной кривой объекта, хранящиеся в клипе анимации.</para>
      </summary>
      <param name="clip">
      </param>
    </member>
    <member name="T:UnityEditor.AnimationUtility.OnCurveWasModified">
      <summary>
        <para>Срабатывает при изменении кривой анимации в клипе анимации.</para>
      </summary>
      <param name="clip">
      </param>
      <param name="binding">
      </param>
      <param name="type">
      </param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.SetAdditiveReferencePose(UnityEngine.AnimationClip,UnityEngine.AnimationClip,System.Single)">
      <summary>
        <para>Задает аддитивную ссылочную позу из referenceClip во время клипа анимации.</para>
      </summary>
      <param name="clip">Используемый клип анимации.</param>
      <param name="referenceClip">Клип анимации, содержащий ссылочную позу.</param>
      <param name="time">Время, когда эталонная поза возникает в referenceClip.</param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.SetAnimationClips(UnityEngine.Animation,UnityEngine.AnimationClip[])">
      <summary>
        <para>Задает массив клипов анимации, на которые необходимо ссылаться в компоненте Анимация.</para>
      </summary>
      <param name="animation">
      </param>
      <param name="clips">
      </param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.SetAnimationEvents(UnityEngine.AnimationClip,UnityEngine.AnimationEvent[])">
      <summary>
        <para>Заменяет все события анимации в клипе анимации.</para>
      </summary>
      <param name="clip">
      </param>
      <param name="events">
      </param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.SetEditorCurve(UnityEngine.AnimationClip,UnityEditor.EditorCurveBinding,UnityEngine.AnimationCurve)">
      <summary>
        <para>Добавляет, изменяет или удаляет плавающую кривую редактора в клипе анимации.</para>
      </summary>
      <param name="clip">Клип анимации, который требуется изменить.</param>
      <param name="binding">Привязка, определяющая путь и свойства кривой.</param>
      <param name="curve">Добавляемая кривая. Установите значение null, чтобы удалить кривую.</param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.SetEditorCurves(UnityEngine.AnimationClip,UnityEditor.EditorCurveBinding[],UnityEngine.AnimationCurve[])">
      <summary>
        <para>Добавляет, изменяет или удаляет несколько плавающих кривых редактора в клипе анимации.</para>
      </summary>
      <param name="clip">Клип анимации, который требуется изменить.</param>
      <param name="binding">Привязка, определяющая путь и свойства каждой кривой.</param>
      <param name="curves">Добавляемые кривые. Установка для кривых в массиве значения null удалит эти кривые из клипа.</param>
      <param name="bindings">
      </param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.SetGenerateMotionCurves(UnityEngine.AnimationClip,System.Boolean)">
      <summary>
        <para>Задает, создает ли клип анимации корневые кривые движения.</para>
      </summary>
      <param name="clip">АнимацияКлип для изменения.</param>
      <param name="value">Задайте значение true, чтобы включить генерацию кривых движения корней.</param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.SetKeyBroken(UnityEngine.AnimationCurve,System.Int32,System.Boolean)">
      <summary>
        <para>Измените указанный флаг разрыва касательной ключевого кадра.</para>
      </summary>
      <param name="curve">Изменяемая кривая.</param>
      <param name="index">Индекс ключевых кадров.</param>
      <param name="broken">Сломан флаг.</param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.SetKeyLeftTangentMode(UnityEngine.AnimationCurve,System.Int32,UnityEditor.AnimationUtility/TangentMode)">
      <summary>
        <para>Изменение заданного режима касательной ключевого кадра.</para>
      </summary>
      <param name="curve">Изменяемая кривая.</param>
      <param name="index">Индекс ключевых кадров.</param>
      <param name="tangentMode">Тангенсный режим.</param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.SetKeyRightTangentMode(UnityEngine.AnimationCurve,System.Int32,UnityEditor.AnimationUtility/TangentMode)">
      <summary>
        <para>Изменение заданного режима касательной ключевого кадра.</para>
      </summary>
      <param name="curve">Изменяемая кривая.</param>
      <param name="index">Индекс ключевых кадров.</param>
      <param name="tangentMode">Тангенсный режим.</param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.SetObjectReferenceCurve(UnityEngine.AnimationClip,UnityEditor.EditorCurveBinding,UnityEditor.ObjectReferenceKeyframe[])">
      <summary>
        <para>Добавляет, изменяет или удаляет кривую ссылки на объект в клипе анимации.</para>
      </summary>
      <param name="clip">Клип анимации, который требуется изменить.</param>
      <param name="binding">Привязки, определяющие контуры и свойства каждой кривой.</param>
      <param name="keyframes">Массив ссылочных значений Object с течением времени. Установив для этого значения значение null, кривая будет удалена.</param>
    </member>
    <member name="M:UnityEditor.AnimationUtility.SetObjectReferenceCurves(UnityEngine.AnimationClip,UnityEditor.EditorCurveBinding[],UnityEditor.ObjectReferenceKeyframe[][])">
      <summary>
        <para>Добавляет, изменяет или удаляет кривую ссылок на объекты в клипе анимации.</para>
      </summary>
      <param name="clip">Клип анимации, который требуется изменить.</param>
      <param name="bindings">Привязки, определяющие контуры и свойства каждой кривой.</param>
      <param name="keyframes">Массив ссылочных массивов Object, по одному на привязку.</param>
    </member>
    <member name="T:UnityEditor.AnimationUtility.TangentMode">
      <summary>
        <para>Касательные ограничения для ключевого кадра.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AnimationUtility.TangentMode.Auto">
      <summary>
        <para>Тангенсы автоматически устанавливаются, чтобы кривая плавно проходила через клавишу.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AnimationUtility.TangentMode.ClampedAuto">
      <summary>
        <para>Тангенсы автоматически устанавливаются, чтобы кривая плавно проходила через клавишу.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AnimationUtility.TangentMode.Constant">
      <summary>
        <para>Кривая сохраняет постоянное значение между двумя ключами.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AnimationUtility.TangentMode.Free">
      <summary>
        <para>Тангенс можно свободно установить, перетащив касательную ручку.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AnimationUtility.TangentMode.Linear">
      <summary>
        <para>Касательная указывает на соседний ключ.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AnimationWindow">
      <summary>
        <para>Используйте класс AnimationWindow для выбора и редактирования клипов анимации.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AnimationWindow.animationClip">
      <summary>
        <para>Клип анимации, выбранный в окне Анимация.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AnimationWindow.canPreview">
      <summary>
        <para>Значение true, если окно анимации может включить режим предварительного просмотра. В противном случае — значение false. (Только для чтения)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AnimationWindow.canRecord">
      <summary>
        <para>Значение true, если окно анимации может включить режим записи. В противном случае — значение false. (Только для чтения)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AnimationWindow.frame">
      <summary>
        <para>Номер кадра, на котором расположена точка воспроизведения окна анимации.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AnimationWindow.playing">
      <summary>
        <para>Это свойство переключает воспроизведение анимации в окне Анимация.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AnimationWindow.previewing">
      <summary>
        <para>Это свойство переключает предварительный просмотр в окне Анимация.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AnimationWindow.recording">
      <summary>
        <para>Это свойство переключает запись в окне Анимация.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AnimationWindow.time">
      <summary>
        <para>Значение времени, в которое находится точка воспроизведения окна анимации.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ApiCompatibilityLevel">
      <summary>
        <para>Уровень совместимости API .NET.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ApiCompatibilityLevel.NET_2_0">
      <summary>
        <para>.NET 2.0.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ApiCompatibilityLevel.NET_2_0_Subset">
      <summary>
        <para>Подмножество .NET 2.0.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ApiCompatibilityLevel.NET_4_6">
      <summary>
        <para>Устарело, используйте вместо этого ApiCompatibilityLevel.NET_Unity_4_8.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ApiCompatibilityLevel.NET_Micro">
      <summary>
        <para>Микропрофиль, используемый серверной частью сценариев Mono на iOS, tvOS и Android, если уровень зачистки установлен в «Использовать micro mscorlib».</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ApiCompatibilityLevel.NET_Standard">
      <summary>
        <para>Профиль, предназначенный для .NET Standard 2.1.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ApiCompatibilityLevel.NET_Standard_2_0">
      <summary>
        <para>Устарело, используйте вместо этого ApiCompatibilityLevel.NET_Standard.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ApiCompatibilityLevel.NET_Unity_4_8">
      <summary>
        <para>Профиль, предназначенный для объединения API .NET Framework 4.8 и .NET Standard 2.1</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ApiCompatibilityLevel.NET_Web">
      <summary>
        <para>Веб-профиль, ранее использовавшийся только Телевизором Samsung.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AppleMobileArchitecture">
      <summary>
        <para>Архитектура процессора Apple Mobile.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AppleMobileArchitecture.ARM64">
      <summary>
        <para>64-разрядная архитектура ARM.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AppleMobileArchitecture.ARMv7">
      <summary>
        <para>32-разрядная архитектура ARM.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AppleMobileArchitecture.Universal">
      <summary>
        <para>Все архитектуры.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ArrayUtility">
      <summary>
        <para>Помощники для встроенных массивов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ArrayUtility.Add(T[]&amp;,T)">
      <summary>
        <para>Добавляет элемент в конец массива.</para>
      </summary>
      <param name="array">
      </param>
      <param name="item">
      </param>
    </member>
    <member name="M:UnityEditor.ArrayUtility.AddRange(T[]&amp;,T[])">
      <summary>
        <para>Добавляет элементы в конец массива.</para>
      </summary>
      <param name="array">
      </param>
      <param name="items">
      </param>
    </member>
    <member name="M:UnityEditor.ArrayUtility.ArrayEquals(T[],T[])">
      <summary>
        <para>Сравнивает два массива.</para>
      </summary>
      <param name="lhs">
      </param>
      <param name="rhs">
      </param>
      <returns>
        <para>Значение true, если оба имеют одинаковое количество элементов и их содержимое равно.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ArrayUtility.ArrayReferenceEquals(T[],T[])">
      <summary>
        <para>Сравнивает две ссылки на массивы.</para>
      </summary>
      <param name="lhs">
      </param>
      <param name="rhs">
      </param>
      <returns>
        <para>Значение true, если оба имеют одинаковое количество элементов и являются одними и теми же экземплярами.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ArrayUtility.Clear(T[]&amp;)">
      <summary>
        <para>Очищает массив.</para>
      </summary>
      <param name="array">
      </param>
    </member>
    <member name="M:UnityEditor.ArrayUtility.Contains(T[],T)">
      <summary>
        <para>Определяет, содержит ли массив элемент.</para>
      </summary>
      <param name="array">
      </param>
      <param name="item">
      </param>
      <returns>
        <para>Значение true, если элемент находится в массиве, в противном случае — значение false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ArrayUtility.FindIndex(T[],System.Predicate`1&lt;T&gt;)">
      <summary>
        <para>Найдите индекс первого элемента, удовлетворяющего предикату.</para>
      </summary>
      <param name="array">
      </param>
      <param name="match">
      </param>
      <returns>
        <para>Отсчитываемый от нуля индекс первого появления элемента, если он найден; в противном случае — 1.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ArrayUtility.IndexOf(T[],T)">
      <summary>
        <para>Индекс первого элемента со значением value.</para>
      </summary>
      <param name="array">
      </param>
      <param name="value">
      </param>
      <returns>
        <para>Отсчитываемый от нуля индекс элемента, если он найден; в противном случае -1.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ArrayUtility.Insert(T[]&amp;,System.Int32,T)">
      <summary>
        <para>Вставляет элемент в индекс позиции.</para>
      </summary>
      <param name="array">
      </param>
      <param name="index">
      </param>
      <param name="item">
      </param>
    </member>
    <member name="M:UnityEditor.ArrayUtility.LastIndexOf(T[],T)">
      <summary>
        <para>Индекс последнего элемента со значением value.</para>
      </summary>
      <param name="array">
      </param>
      <param name="value">
      </param>
      <returns>
        <para>Отсчитываемый от нуля индекс элемента, если он найден; в противном случае -1.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ArrayUtility.Remove(T[]&amp;,T)">
      <summary>
        <para>Удаляет элемент из массива.</para>
      </summary>
      <param name="array">
      </param>
      <param name="item">
      </param>
    </member>
    <member name="M:UnityEditor.ArrayUtility.RemoveAt(T[]&amp;,System.Int32)">
      <summary>
        <para>Удалить элемент в индексе позиции.</para>
      </summary>
      <param name="array">
      </param>
      <param name="index">
      </param>
    </member>
    <member name="T:UnityEditor.AscentCalculationMode">
      <summary>
        <para>Метод, используемый для расчета подъема шрифта.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AscentCalculationMode.FaceAscender">
      <summary>
        <para>Восходящий метод.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AscentCalculationMode.FaceBoundingBox">
      <summary>
        <para>Метод ограничительной рамки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AscentCalculationMode.Legacy2x">
      <summary>
        <para>Устаревший метод ограничительной рамки.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AspectRatio">
      <summary>
        <para>Относительное удлинение.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AspectRatio.Aspect16by10">
      <summary>
        <para>Соотношение сторон 16:10.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AspectRatio.Aspect16by9">
      <summary>
        <para>Соотношение сторон 16:9.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AspectRatio.Aspect4by3">
      <summary>
        <para>Соотношение сторон 4:3.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AspectRatio.Aspect5by4">
      <summary>
        <para>Соотношение сторон 5:4.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AspectRatio.AspectOthers">
      <summary>
        <para>Неопределенные пропорции.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AssemblyReloadEvents">
      <summary>
        <para>Этот класс имеет диспетчеры событий для событий перезагрузки сборки.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.AssemblyReloadEvents.afterAssemblyReload(UnityEditor.AssemblyReloadEvents/AssemblyReloadCallback)">
      <summary>
        <para>Это событие отправляется сразу после того, как Unity перезагрузит все сборки.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="?:UnityEditor.AssemblyReloadEvents.beforeAssemblyReload(UnityEditor.AssemblyReloadEvents/AssemblyReloadCallback)">
      <summary>
        <para>Это событие отправляется непосредственно перед перезагрузкой всех сборок Unity.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="T:UnityEditor.AssemblyReloadEvents.AssemblyReloadCallback">
      <summary>
        <para>Делегат, используемый для событий перезагрузки сборки.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AssetBundleBuild">
      <summary>
        <para>Запись на карте здания AssetBundle.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetBundleBuild.addressableNames">
      <summary>
        <para>Адресное имя, используемое для загрузки ресурса.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetBundleBuild.assetBundleName">
      <summary>
        <para>AssetBundle имя.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetBundleBuild.assetBundleVariant">
      <summary>
        <para>Вариант AssetBundle.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetBundleBuild.assetNames">
      <summary>
        <para>Названия активов, принадлежащие данному объекту AssetBundle.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AssetDatabase">
      <summary>
        <para>Интерфейс для доступа к активам и выполнения операций с активами.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.AssetDatabase.cacheServerConnectionChanged(System.Action`1&lt;UnityEditor.CacheServerConnectionChangedParameters&gt;)">
      <summary>
        <para>Unity вызывает это событие при изменении подключения к серверу кэша.</para>
      </summary>
      <param name="value">Используйте CacheServerConnectionChangedParameters для этого события.</param>
    </member>
    <member name="?:UnityEditor.AssetDatabase.importPackageCancelled(UnityEditor.AssetDatabase/ImportPackageCallback)">
      <summary>
        <para>Обратный вызов возникает всякий раз, когда импорт пакета отменяется пользователем.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="?:UnityEditor.AssetDatabase.importPackageCompleted(UnityEditor.AssetDatabase/ImportPackageCallback)">
      <summary>
        <para>Обратный вызов возникает при успешном завершении импорта пакета.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="?:UnityEditor.AssetDatabase.importPackageFailed(UnityEditor.AssetDatabase/ImportPackageFailedCallback)">
      <summary>
        <para>Обратный вызов возникает при каждом сбое импорта пакета.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="?:UnityEditor.AssetDatabase.importPackageStarted(UnityEditor.AssetDatabase/ImportPackageCallback)">
      <summary>
        <para>Обратный вызов возникает при каждом запуске импорта пакета.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="F:UnityEditor.AssetDatabase.onImportPackageItemsCompleted">
      <summary>
        <para>Обратный вызов вызывается при успешном завершении импорта пакета, в котором перечислены элементы, выбранные для импорта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetDatabase.ActiveRefreshImportMode">
      <summary>
        <para>Получает режим импорта обновлений, используемый в настоящее время базой данных ресурсов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetDatabase.AddObjectToAsset(UnityEngine.Object,System.String)">
      <summary>
        <para>Добавляет objectToAdd к существующему ресурсу по пути.</para>
      </summary>
      <param name="objectToAdd">Объект для добавления в существующий ресурс.</param>
      <param name="path">Путь файловой системы к ресурсу.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.AddObjectToAsset(UnityEngine.Object,UnityEngine.Object)">
      <summary>
        <para>Добавляет objectToAdd к существующему ресурсу, идентифицированному assetObject.</para>
      </summary>
      <param name="objectToAdd">
      </param>
      <param name="assetObject">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.AllowAutoRefresh">
      <summary>
        <para>Уменьшает внутренний счетчик, который Unity использует для определения того, следует ли разрешить автоматическое обновление AssetDatabase.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetDatabase.AssetPathToGUID(System.String)">
      <summary>
        <para>Получите идентификатор GUID для ресурса по пути.</para>
      </summary>
      <param name="path">Путь к ресурсу в файловой системе.</param>
      <param name="options">Указывает, должен ли этот метод возвращать идентификатор GUID для недавно удаленных ресурсов. Значение по умолчанию — AssetPathToGUIDOptions.IncludeRecentlyDeletedAssets.</param>
      <returns>
        <para>ИДЕНТИФИКАТОР GUID.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.AssetPathToGUID(System.String,UnityEditor.AssetPathToGUIDOptions)">
      <summary>
        <para>Получите идентификатор GUID для ресурса по пути.</para>
      </summary>
      <param name="path">Путь к ресурсу в файловой системе.</param>
      <param name="options">Указывает, должен ли этот метод возвращать идентификатор GUID для недавно удаленных ресурсов. Значение по умолчанию — AssetPathToGUIDOptions.IncludeRecentlyDeletedAssets.</param>
      <returns>
        <para>ИДЕНТИФИКАТОР GUID.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.CanConnectToCacheServer(System.String,System.UInt16)">
      <summary>
        <para>Проверяет доступность сервера кэша.</para>
      </summary>
      <param name="ip">IP-адрес сервера кэша.</param>
      <param name="port">Номер порта сервера кэша.</param>
      <returns>
        <para>Возвращает значение true, если редактор может подключиться к серверу кэширования. В противном случае возвращает значение false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.CanOpenAssetInEditor(System.Int32)">
      <summary>
        <para>Проверяет, может ли Unity открыть ресурс в редакторе.</para>
      </summary>
      <param name="instanceID">Идентификатор экземпляра ресурса.</param>
      <returns>
        <para>Возвращает значение true, если Unity может успешно открыть ресурс в редакторе, в противном случае возвращает значение false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.CanOpenForEdit(UnityEngine.Object,UnityEditor.StatusQueryOptions)">
      <summary>
        <para>Запрос на то, может ли файл активов быть открыт для редактирования в системе управления версиями и не заблокирован ли он исключительно другим пользователем или иным образом недоступен.</para>
      </summary>
      <param name="assetObject">Объект, представляющий ресурс, состояние которого требуется запросить.</param>
      <param name="assetOrMetaFilePath">Путь к файлу ресурса или его мета-файлу на диске относительно папки проекта.</param>
      <param name="message">Возвращает причину, по которой ресурс недоступен для редактирования.</param>
      <param name="statusOptions">Параметры запроса системы управления версиями. Эти параметры могут влиять на скорость и точность запроса. Значение по умолчанию — StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>Значение true, если ресурс считается доступным для редактирования выбранной системой управления версиями.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.CanOpenForEdit(System.String,UnityEditor.StatusQueryOptions)">
      <summary>
        <para>Запрос на то, может ли файл активов быть открыт для редактирования в системе управления версиями и не заблокирован ли он исключительно другим пользователем или иным образом недоступен.</para>
      </summary>
      <param name="assetObject">Объект, представляющий ресурс, состояние которого требуется запросить.</param>
      <param name="assetOrMetaFilePath">Путь к файлу ресурса или его мета-файлу на диске относительно папки проекта.</param>
      <param name="message">Возвращает причину, по которой ресурс недоступен для редактирования.</param>
      <param name="statusOptions">Параметры запроса системы управления версиями. Эти параметры могут влиять на скорость и точность запроса. Значение по умолчанию — StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>Значение true, если ресурс считается доступным для редактирования выбранной системой управления версиями.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.CanOpenForEdit(UnityEngine.Object,System.String&amp;,UnityEditor.StatusQueryOptions)">
      <summary>
        <para>Запрос на то, может ли файл активов быть открыт для редактирования в системе управления версиями и не заблокирован ли он исключительно другим пользователем или иным образом недоступен.</para>
      </summary>
      <param name="assetObject">Объект, представляющий ресурс, состояние которого требуется запросить.</param>
      <param name="assetOrMetaFilePath">Путь к файлу ресурса или его мета-файлу на диске относительно папки проекта.</param>
      <param name="message">Возвращает причину, по которой ресурс недоступен для редактирования.</param>
      <param name="statusOptions">Параметры запроса системы управления версиями. Эти параметры могут влиять на скорость и точность запроса. Значение по умолчанию — StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>Значение true, если ресурс считается доступным для редактирования выбранной системой управления версиями.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.CanOpenForEdit(System.String,System.String&amp;,UnityEditor.StatusQueryOptions)">
      <summary>
        <para>Запрос на то, может ли файл активов быть открыт для редактирования в системе управления версиями и не заблокирован ли он исключительно другим пользователем или иным образом недоступен.</para>
      </summary>
      <param name="assetObject">Объект, представляющий ресурс, состояние которого требуется запросить.</param>
      <param name="assetOrMetaFilePath">Путь к файлу ресурса или его мета-файлу на диске относительно папки проекта.</param>
      <param name="message">Возвращает причину, по которой ресурс недоступен для редактирования.</param>
      <param name="statusOptions">Параметры запроса системы управления версиями. Эти параметры могут влиять на скорость и точность запроса. Значение по умолчанию — StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>Значение true, если ресурс считается доступным для редактирования выбранной системой управления версиями.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.CanOpenForEdit(UnityEngine.Object)">
      <summary>
        <para>Запрос на то, может ли файл активов быть открыт для редактирования в системе управления версиями и не заблокирован ли он исключительно другим пользователем или иным образом недоступен.</para>
      </summary>
      <param name="assetObject">Объект, представляющий ресурс, состояние которого требуется запросить.</param>
      <param name="assetOrMetaFilePath">Путь к файлу ресурса или его мета-файлу на диске относительно папки проекта.</param>
      <param name="message">Возвращает причину, по которой ресурс недоступен для редактирования.</param>
      <param name="statusOptions">Параметры запроса системы управления версиями. Эти параметры могут влиять на скорость и точность запроса. Значение по умолчанию — StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>Значение true, если ресурс считается доступным для редактирования выбранной системой управления версиями.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.CanOpenForEdit(System.String)">
      <summary>
        <para>Запрос на то, может ли файл активов быть открыт для редактирования в системе управления версиями и не заблокирован ли он исключительно другим пользователем или иным образом недоступен.</para>
      </summary>
      <param name="assetObject">Объект, представляющий ресурс, состояние которого требуется запросить.</param>
      <param name="assetOrMetaFilePath">Путь к файлу ресурса или его мета-файлу на диске относительно папки проекта.</param>
      <param name="message">Возвращает причину, по которой ресурс недоступен для редактирования.</param>
      <param name="statusOptions">Параметры запроса системы управления версиями. Эти параметры могут влиять на скорость и точность запроса. Значение по умолчанию — StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>Значение true, если ресурс считается доступным для редактирования выбранной системой управления версиями.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.CanOpenForEdit(UnityEngine.Object,System.String&amp;)">
      <summary>
        <para>Запрос на то, может ли файл активов быть открыт для редактирования в системе управления версиями и не заблокирован ли он исключительно другим пользователем или иным образом недоступен.</para>
      </summary>
      <param name="assetObject">Объект, представляющий ресурс, состояние которого требуется запросить.</param>
      <param name="assetOrMetaFilePath">Путь к файлу ресурса или его мета-файлу на диске относительно папки проекта.</param>
      <param name="message">Возвращает причину, по которой ресурс недоступен для редактирования.</param>
      <param name="statusOptions">Параметры запроса системы управления версиями. Эти параметры могут влиять на скорость и точность запроса. Значение по умолчанию — StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>Значение true, если ресурс считается доступным для редактирования выбранной системой управления версиями.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.CanOpenForEdit(System.String,System.String&amp;)">
      <summary>
        <para>Запрос на то, может ли файл активов быть открыт для редактирования в системе управления версиями и не заблокирован ли он исключительно другим пользователем или иным образом недоступен.</para>
      </summary>
      <param name="assetObject">Объект, представляющий ресурс, состояние которого требуется запросить.</param>
      <param name="assetOrMetaFilePath">Путь к файлу ресурса или его мета-файлу на диске относительно папки проекта.</param>
      <param name="message">Возвращает причину, по которой ресурс недоступен для редактирования.</param>
      <param name="statusOptions">Параметры запроса системы управления версиями. Эти параметры могут влиять на скорость и точность запроса. Значение по умолчанию — StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>Значение true, если ресурс считается доступным для редактирования выбранной системой управления версиями.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.CanOpenForEdit(System.String[],System.Collections.Generic.List`1&lt;System.String&gt;,UnityEditor.StatusQueryOptions)">
      <summary>
        <para>Запросите, какие из предоставленных файлов ресурсов могут быть открыты для редактирования в системе управления версиями и не заблокированы удаленно или недоступны по иным причинам.</para>
      </summary>
      <param name="assetOrMetaFilePaths">Пути к ресурсам или их мета-файлам относительно папки проекта.</param>
      <param name="outNotEditablePaths">Список назначения нередактируемых путей к ресурсам.</param>
      <param name="statusQueryOptions">Указывает, как Unity должен запрашивать систему управления версиями. Значение по умолчанию — StatusQueryOptions.UseCachedIfPossible.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.ClearImporterOverride(System.String)">
      <summary>
        <para>Очищает переопределение импортера для ресурса.</para>
      </summary>
      <param name="path">Путь к ресурсу.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.ClearLabels(UnityEngine.Object)">
      <summary>
        <para>Удаляет все метки, прикрепленные к ресурсу.</para>
      </summary>
      <param name="obj">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.CloseCacheServerConnection">
      <summary>
        <para>Закрывает активное подключение к серверу кэша. Если соединение не активно, то оно ничего не делает.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetDatabase.Contains(UnityEngine.Object)">
      <summary>
        <para>Является ли объект активом?</para>
      </summary>
      <param name="obj">
      </param>
      <param name="instanceID">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.Contains(System.Int32)">
      <summary>
        <para>Является ли объект активом?</para>
      </summary>
      <param name="obj">
      </param>
      <param name="instanceID">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.CopyAsset(System.String,System.String)">
      <summary>
        <para>Дублирует ресурс по пути и сохраняет его в newPath.</para>
      </summary>
      <param name="path">Путь к файловой системе исходного ресурса.</param>
      <param name="newPath">Путь к создаваемому ресурсу к файловой системе.</param>
      <returns>
        <para>Возвращает значение true, если операция копирования выполнена успешно, или значение false, если часть процесса завершается сбоем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.CreateAsset(UnityEngine.Object,System.String)">
      <summary>
        <para>Создает новый собственный ресурс Unity.</para>
      </summary>
      <param name="asset">Объект для использования при создании ресурса.</param>
      <param name="path">Путь к файловой системе для нового ресурса.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.CreateFolder(System.String,System.String)">
      <summary>
        <para>Создает новую папку в указанной родительской папке.  Строка родительской папки должна начинаться с папки 'Assets', и все папки в строке родительской папки должны уже существовать. Например, при указании 'AssetsParentFolder1Parentfolder2/', новая папка будет создана в 'ParentFolder2' только в том случае, если ParentFolder1 и ParentFolder2 уже существуют.</para>
      </summary>
      <param name="parentFolder">Путь к родительской папке. Должен начинаться с 'Активы/'.</param>
      <param name="newFolderName">Имя новой папки.</param>
      <returns>
        <para>Идентификатор GUID вновь созданной папки, если папка была успешно создана. В противном случае возвращает пустую строку.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.DeleteAsset(System.String)">
      <summary>
        <para>Удаляет указанный ресурс или папку.</para>
      </summary>
      <param name="path">Относительный путь проекта к удаляемому ресурсу или папке.</param>
      <returns>
        <para>Возвращает значение true, если ресурс был успешно удален, значение false, если он не существует или не может быть удален.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.DeleteAssets(System.String[],System.Collections.Generic.List`1&lt;System.String&gt;)">
      <summary>
        <para>Позволяет удалять сразу несколько ресурсов или папок с преимуществами производительности в системе управления версиями.</para>
      </summary>
      <param name="paths">Относительные пути проекта к удаляемым ресурсам или папкам.</param>
      <param name="outFailedPaths">Относительные пути проекта, которые не удалось удалить.</param>
      <returns>
        <para>Возвращает значение true, если все ресурсы в путях были успешно удалены, значение false, если какой-либо из указанных путей не существует или не может быть удален.</para>
      </returns>
    </member>
    <member name="P:UnityEditor.AssetDatabase.DesiredWorkerCount">
      <summary>
        <para>Требуемое количество процессов, используемых при импорте ресурсов во время обновления базы данных активов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetDatabase.DisallowAutoRefresh">
      <summary>
        <para>Увеличивает внутренний счетчик, который Unity использует, чтобы определить, следует ли разрешить автоматическое обновление AssetDatabase.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetDatabase.ExportPackage(System.String[],System.String)">
      <summary>
        <para>Экспортирует ресурсы, определенные assetPathNames, в файл unitypackage в файле fileName.</para>
      </summary>
      <param name="assetPathNames">
      </param>
      <param name="fileName">
      </param>
      <param name="flags">
      </param>
      <param name="assetPathName">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.ExportPackage(System.String,System.String)">
      <summary>
        <para>Экспортирует ресурсы, определенные assetPathNames, в файл unitypackage в файле fileName.</para>
      </summary>
      <param name="assetPathNames">
      </param>
      <param name="fileName">
      </param>
      <param name="flags">
      </param>
      <param name="assetPathName">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.ExportPackage(System.String,System.String,UnityEditor.ExportPackageOptions)">
      <summary>
        <para>Экспортирует ресурсы, определенные assetPathNames, в файл unitypackage в файле fileName.</para>
      </summary>
      <param name="assetPathNames">
      </param>
      <param name="fileName">
      </param>
      <param name="flags">
      </param>
      <param name="assetPathName">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.ExportPackage(System.String[],System.String,UnityEditor.ExportPackageOptions)">
      <summary>
        <para>Экспортирует ресурсы, определенные assetPathNames, в файл unitypackage в файле fileName.</para>
      </summary>
      <param name="assetPathNames">
      </param>
      <param name="fileName">
      </param>
      <param name="flags">
      </param>
      <param name="assetPathName">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.ExtractAsset(UnityEngine.Object,System.String)">
      <summary>
        <para>Создает внешний ресурс из объекта (например, материала), извлекая его из импортированного ресурса (например, файла FBX).</para>
      </summary>
      <param name="asset">Извлекаемый субауступ.</param>
      <param name="newPath">Путь к файлу нового ресурса.</param>
      <returns>
        <para>Пустая строка, если Unity успешно извлекла ресурс, или сообщение об ошибке, если нет.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.FindAssets(System.String)">
      <summary>
        <para>Выполните поиск в базе данных ресурсов с помощью строки фильтра поиска.</para>
      </summary>
      <param name="filter">Строка фильтра может содержать данные поиска.  Подробности об этой строке см. ниже.</param>
      <param name="searchInFolders">Папки, в которых начнется поиск.</param>
      <returns>
        <para>Массив соответствующих ресурсов. Обратите внимание, что идентификаторы GUID будут возвращены. Если соответствующие ресурсы не найдены, возвращает пустой массив.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.FindAssets(System.String,System.String[])">
      <summary>
        <para>Выполните поиск в базе данных ресурсов с помощью строки фильтра поиска.</para>
      </summary>
      <param name="filter">Строка фильтра может содержать данные поиска.  Подробности об этой строке см. ниже.</param>
      <param name="searchInFolders">Папки, в которых начнется поиск.</param>
      <returns>
        <para>Массив соответствующих ресурсов. Обратите внимание, что идентификаторы GUID будут возвращены. Если соответствующие ресурсы не найдены, возвращает пустой массив.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.ForceReserializeAssets">
      <summary>
        <para>Принудительно загружайте и повторно сериализуйте заданные ресурсы, сбрасывая на диск любые невыполненные изменения данных.</para>
      </summary>
      <param name="assetPaths">Пути к активам, которые должны быть ресерализованы. Если этот параметр опущен, все активы в проекте будут пересиализированы.</param>
      <param name="options">Укажите, требуется ли повторное выделение самих ресурсов, их мета-файлов или и того, и другого. Если этот параметр опущен, по умолчанию используются оба варианта.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.ForceReserializeAssets">
      <summary>
        <para>Принудительно загружайте и повторно сериализуйте заданные ресурсы, сбрасывая на диск любые невыполненные изменения данных.</para>
      </summary>
      <param name="assetPaths">Пути к активам, которые должны быть ресерализованы. Если этот параметр опущен, все активы в проекте будут пересиализированы.</param>
      <param name="options">Укажите, требуется ли повторное выделение самих ресурсов, их мета-файлов или и того, и другого. Если этот параметр опущен, по умолчанию используются оба варианта.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.ForceReserializeAssets">
      <summary>
        <para>Принудительно загружайте и повторно сериализуйте заданные ресурсы, сбрасывая на диск любые невыполненные изменения данных.</para>
      </summary>
      <param name="assetPaths">Пути к активам, которые должны быть ресерализованы. Если этот параметр опущен, все активы в проекте будут пересиализированы.</param>
      <param name="options">Укажите, требуется ли повторное выделение самих ресурсов, их мета-файлов или и того, и другого. Если этот параметр опущен, по умолчанию используются оба варианта.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.ForceToDesiredWorkerCount">
      <summary>
        <para>Заставляет редактор использовать нужное количество рабочих процессов. Unity либо порождает новые рабочие процессы, либо завершает работу простаивающих рабочих процессов, чтобы достичь нужного числа.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GenerateUniqueAssetPath(System.String)">
      <summary>
        <para>Создает новый уникальный путь для ресурса.</para>
      </summary>
      <param name="path">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetAllAssetBundleNames">
      <summary>
        <para>Возвращает все имена AssetBundle в базе данных активов.</para>
      </summary>
      <returns>
        <para>Массив имен пакетов активов.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetAssetBundleDependencies(System.String,System.Boolean)">
      <summary>
        <para>При заданном объекте assetBundleName возвращается список объектов AssetBundles, от которых он зависит.</para>
      </summary>
      <param name="assetBundleName">Имя объекта AssetBundle, для которого требуются зависимости.</param>
      <param name="recursive">Если значение false, возвращает только AssetBundles, которые являются прямыми зависимостями входных данных; если значение равно true, включает все косвенные зависимости входных данных.</param>
      <returns>
        <para>Имена всех объектов AssetBundles, от которых зависят входные данные.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetAssetDependencyHash(System.String)">
      <summary>
        <para>Возвращает хэш всех зависимостей ресурса.</para>
      </summary>
      <param name="path">Путь к ресурсу.</param>
      <param name="guid">Идентификатор GUID ресурса.</param>
      <returns>
        <para>Агрегированный хэш.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetAssetDependencyHash(UnityEditor.GUID)">
      <summary>
        <para>Возвращает хэш всех зависимостей ресурса.</para>
      </summary>
      <param name="path">Путь к ресурсу.</param>
      <param name="guid">Идентификатор GUID ресурса.</param>
      <returns>
        <para>Агрегированный хэш.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetAssetOrScenePath(UnityEngine.Object)">
      <summary>
        <para>Возвращает путь к папке проекта, в которой хранится ресурс.</para>
      </summary>
      <param name="assetObject">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetAssetPath(System.Int32)">
      <summary>
        <para>Возвращает путь к папке проекта, в которой хранится ресурс.</para>
      </summary>
      <param name="instanceID">Идентификатор экземпляра ресурса.</param>
      <param name="assetObject">Ссылка на актив.</param>
      <returns>
        <para>Путь к ресурсу, или значение null, или пустая строка, если ресурс не существует.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetAssetPath(UnityEngine.Object)">
      <summary>
        <para>Возвращает путь к папке проекта, в которой хранится ресурс.</para>
      </summary>
      <param name="instanceID">Идентификатор экземпляра ресурса.</param>
      <param name="assetObject">Ссылка на актив.</param>
      <returns>
        <para>Путь к ресурсу, или значение null, или пустая строка, если ресурс не существует.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetAssetPathFromTextMetaFilePath(System.String)">
      <summary>
        <para>Получает путь к файлу ресурса, связанному с текстовым МЕТА-файлом.</para>
      </summary>
      <param name="path">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetAssetPathsFromAssetBundle(System.String)">
      <summary>
        <para>Возвращает массив, содержащий пути ко всем ресурсам, помеченным указанным именем пакета активов.</para>
      </summary>
      <param name="assetBundleName">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetAssetPathsFromAssetBundleAndAssetName(System.String,System.String)">
      <summary>
        <para>Получите пути к ресурсам для всех ресурсов, помеченных assetBundleName и именованным assetName.</para>
      </summary>
      <param name="assetBundleName">
      </param>
      <param name="assetName">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetAvailableImporterTypes(System.String)">
      <summary>
        <para>Получает типы импортера, связанные с заданным типом актива.</para>
      </summary>
      <param name="path">Путь актива.</param>
      <returns>
        <para>Возвращает массив типов импортера, которые могут обрабатывать указанный ресурс.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetCachedIcon(System.String)">
      <summary>
        <para>Извлекает значок ресурса по заданному пути к ресурсу.</para>
      </summary>
      <param name="path">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetCacheServerAddress">
      <summary>
        <para>Получает IP-адрес сервера кэша в параметрах редактора.</para>
      </summary>
      <returns>
        <para>Возвращает IP-адрес сервера кэша в параметрах редактора. Возвращает пустую строку, если IP-адрес не задан в настройках редактора.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetCacheServerEnableDownload">
      <summary>
        <para>Получает параметр Загрузки сервера кэша из параметров редактора.</para>
      </summary>
      <returns>
        <para>Возвращает значение true, если включена функция Загрузить с сервера кэша. В противном случае возвращает значение false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetCacheServerEnableUpload">
      <summary>
        <para>Получает параметр Отправка сервера кэша из параметров редактора.</para>
      </summary>
      <returns>
        <para>Возвращает значение true, если включена функция Отправка на сервер кэша. В противном случае возвращает значение false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetCacheServerNamespacePrefix">
      <summary>
        <para>Получает префикс пространства имен сервера кэша, заданный в параметрах редактора.</para>
      </summary>
      <returns>
        <para>Возвращает префикс пространства имен для сервера кэширования.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetCacheServerPort">
      <summary>
        <para>Получает номер порта сервера кэша в параметрах редактора.</para>
      </summary>
      <returns>
        <para>Возвращает номер порта сервера кэша в параметрах редактора. Возвращает значение 0, если номер порта не задан в настройках редактора.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetCurrentCacheServerIp">
      <summary>
        <para>Получает IP-адрес сервера кэширования, используемого в настоящее время редактором.</para>
      </summary>
      <returns>
        <para>Возвращает строковое представление текущего IP-адреса сервера кэширования.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetDependencies(System.String)">
      <summary>
        <para>Возвращает массив всех ресурсов, являющихся зависимостями ресурса по указанному адресу pathName.  Примечание: GetDependencies() получает активы, на которые ссылаются другие активы. Например, Сцена может содержать много игровых объектов с прикрепленным к ним Материалом. В этом случае метод GetDependencies() вернет путь к материальным ресурсам, но не к объектам GameObjects, поскольку они не являются ресурсами на диске.</para>
      </summary>
      <param name="pathName">Путь к ресурсу, для которого требуются зависимости.</param>
      <param name="recursive">Определяет, будет ли этот метод рекурсивно проверять и возвращать все зависимости, включая косвенные зависимости (если задано значение true), или он возвращает только прямые зависимости (если задано значение false).</param>
      <returns>
        <para>Пути ко всем ресурсам, от которых зависит ввод.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetDependencies(System.String,System.Boolean)">
      <summary>
        <para>Возвращает массив всех ресурсов, являющихся зависимостями ресурса по указанному адресу pathName.  Примечание: GetDependencies() получает активы, на которые ссылаются другие активы. Например, Сцена может содержать много игровых объектов с прикрепленным к ним Материалом. В этом случае метод GetDependencies() вернет путь к материальным ресурсам, но не к объектам GameObjects, поскольку они не являются ресурсами на диске.</para>
      </summary>
      <param name="pathName">Путь к ресурсу, для которого требуются зависимости.</param>
      <param name="recursive">Определяет, будет ли этот метод рекурсивно проверять и возвращать все зависимости, включая косвенные зависимости (если задано значение true), или он возвращает только прямые зависимости (если задано значение false).</param>
      <returns>
        <para>Пути ко всем ресурсам, от которых зависит ввод.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetDependencies(System.String[])">
      <summary>
        <para>Возвращает массив путей к ресурсам, которые являются зависимостями всех ресурсов в указанном списке pathNames.  Примечание: GetDependencies() получает активы, на которые ссылаются другие активы. Например, Сцена может содержать много игровых объектов с прикрепленным к ним Материалом. В этом случае метод GetDependencies() вернет путь к материальным ресурсам, но не к объектам GameObjects, поскольку они не являются ресурсами на диске.</para>
      </summary>
      <param name="pathNames">Путь к ресурсам, для которых требуются зависимости.</param>
      <param name="recursive">Определяет, будет ли этот метод рекурсивно проверять и возвращать все зависимости, включая косвенные зависимости (если задано значение true), или он возвращает только прямые зависимости (если задано значение false).</param>
      <returns>
        <para>Пути ко всем ресурсам, от которых зависит ввод.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetDependencies(System.String[],System.Boolean)">
      <summary>
        <para>Возвращает массив путей к ресурсам, которые являются зависимостями всех ресурсов в указанном списке pathNames.  Примечание: GetDependencies() получает активы, на которые ссылаются другие активы. Например, Сцена может содержать много игровых объектов с прикрепленным к ним Материалом. В этом случае метод GetDependencies() вернет путь к материальным ресурсам, но не к объектам GameObjects, поскольку они не являются ресурсами на диске.</para>
      </summary>
      <param name="pathNames">Путь к ресурсам, для которых требуются зависимости.</param>
      <param name="recursive">Определяет, будет ли этот метод рекурсивно проверять и возвращать все зависимости, включая косвенные зависимости (если задано значение true), или он возвращает только прямые зависимости (если задано значение false).</param>
      <returns>
        <para>Пути ко всем ресурсам, от которых зависит ввод.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetImplicitAssetBundleName(System.String)">
      <summary>
        <para>Возвращает имя объекта AssetBundle, к которому принадлежит данный актив.</para>
      </summary>
      <param name="assetPath">Путь актива.</param>
      <returns>
        <para>Возвращает имя объекта AssetBundle, к которому принадлежит данный актив. Дополнительные сведения см. в описании метода.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetImplicitAssetBundleVariantName(System.String)">
      <summary>
        <para>Возвращает имя варианта AssetBundle, к которому принадлежит данный актив.</para>
      </summary>
      <param name="assetPath">Путь актива.</param>
      <returns>
        <para>Возвращает имя варианта AssetBundle, к которому принадлежит данный актив. Дополнительные сведения см. в описании метода.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetImporterOverride(System.String)">
      <summary>
        <para>Возвращает тип средства импорта переопределения.</para>
      </summary>
      <param name="path">Путь к ресурсу.</param>
      <returns>
        <para>Тип импортера.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetLabels(UnityEngine.Object)">
      <summary>
        <para>Возвращает все метки, прикрепленные к заданному ресурсу.</para>
      </summary>
      <param name="obj">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetMainAssetTypeAtPath(System.String)">
      <summary>
        <para>Возвращает тип основного объекта ресурса в assetPath.</para>
      </summary>
      <param name="assetPath">Путь к загружаемому ресурсу файловой системы.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetSubFolders(System.String)">
      <summary>
        <para>При наличии пути к каталогу в папке Assets относительно папки проекта этот метод возвращает массив всех его подкаталогов.</para>
      </summary>
      <param name="path">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetTextMetaDataPathFromAssetPath(System.String)">
      <summary>
        <para>Получает путь к текстовому мета-файлу, связанному с ресурсом.</para>
      </summary>
      <param name="path">Путь к ресурсу.</param>
      <returns>
        <para>Путь к мета-текстовому файлу или пустая строка, если файл не существует.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetTextMetaFilePathFromAssetPath(System.String)">
      <summary>
        <para>Получает путь к текстовому мета-файлу, связанному с ресурсом.</para>
      </summary>
      <param name="path">Путь к ресурсу.</param>
      <returns>
        <para>Путь к мета-текстовому файлу или пустая строка, если файл не существует.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetTypeFromPathAndFileID(System.String,System.Int64)">
      <summary>
        <para>Получает тип объекта из пути к ресурсу и идентификатора локального файла.</para>
      </summary>
      <param name="assetPath">Путь Ресурса.</param>
      <param name="localIdentifierInFile">Идентификатор локального файла объекта.</param>
      <returns>
        <para>Тип объекта.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GetUnusedAssetBundleNames">
      <summary>
        <para>Возвращает все неиспользуемые имена assetBundle в базе данных активов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetDatabase.GlobalArtifactDependencyVersion">
      <summary>
        <para>Изменения во время обновления, если что-то изменилось, что может сделать недействительным любой артефакт.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetDatabase.GlobalArtifactProcessedVersion">
      <summary>
        <para>Изменяется при добавлении нового артефакта в базу данных артефактов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GUIDFromAssetPath(System.String)">
      <summary>
        <para>Получите идентификатор GUID для ресурса по пути.</para>
      </summary>
      <param name="path">Путь к ресурсу в файловой системе. Все пути относятся к папке проекта.</param>
      <returns>
        <para>Идентификатор GUID ресурса. Полностью нулевой идентификатор GUID обозначает недопустимый путь к ресурсу.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GUIDToAssetPath(System.String)">
      <summary>
        <para>Получает соответствующий путь к ресурсу для предоставленного идентификатора GUID или пустую строку, если идентификатор GUID не найден.</para>
      </summary>
      <param name="guid">Идентификатор GUID ресурса.</param>
      <returns>
        <para>Путь к ресурсу относительно папки проекта.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.GUIDToAssetPath(UnityEditor.GUID)">
      <summary>
        <para>Получает соответствующий путь к ресурсу для предоставленного идентификатора GUID или пустую строку, если идентификатор GUID не найден.</para>
      </summary>
      <param name="guid">Идентификатор GUID ресурса.</param>
      <returns>
        <para>Путь к ресурсу относительно папки проекта.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.ImportAsset(System.String)">
      <summary>
        <para>Импорт ресурса по пути.</para>
      </summary>
      <param name="path">
      </param>
      <param name="options">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.ImportAsset(System.String,UnityEditor.ImportAssetOptions)">
      <summary>
        <para>Импорт ресурса по пути.</para>
      </summary>
      <param name="path">
      </param>
      <param name="options">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.ImportPackage(System.String,System.Boolean)">
      <summary>
        <para>Импортирует пакет по адресу packagePath в текущий проект.</para>
      </summary>
      <param name="packagePath">
      </param>
      <param name="interactive">
      </param>
    </member>
    <member name="T:UnityEditor.AssetDatabase.ImportPackageCallback">
      <summary>
        <para>Делегирование для вызова из AssetDatabase.ImportPackage обратные вызовы. packageName — это имя пакета, вызвавшего обратный вызов.</para>
      </summary>
      <param name="packageName">
      </param>
    </member>
    <member name="T:UnityEditor.AssetDatabase.ImportPackageFailedCallback">
      <summary>
        <para>Делегирование для вызова из AssetDatabase.ImportPackage обратные вызовы. packageName — это имя пакета, вызвавшего обратный вызов. errorMessage является причиной сбоя.</para>
      </summary>
      <param name="packageName">
      </param>
      <param name="errorMessage">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsCacheServerEnabled">
      <summary>
        <para>Проверяет, включен ли сервер кэша в параметрах проекта.</para>
      </summary>
      <returns>
        <para>Возвращает значение true, если сервер кэша включен. В противном случае возвращает значение false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsConnectedToCacheServer">
      <summary>
        <para>Проверяет состояние подключения сервера кэша.</para>
      </summary>
      <returns>
        <para>Возвращает значение true, если редактор подключен к серверу кэша. В противном случае возвращает значение false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsDirectoryMonitoringEnabled">
      <summary>
        <para>Сообщает, включен ли мониторинг каталогов.</para>
      </summary>
      <returns>
        <para>Возвращает значение true, если включен мониторинг каталогов. В противном случае возвращает значение false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsForeignAsset(UnityEngine.Object)">
      <summary>
        <para>Определяет, является ли Актив иностранным Активом.</para>
      </summary>
      <param name="obj">
      </param>
      <param name="instanceID">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsForeignAsset(System.Int32)">
      <summary>
        <para>Определяет, является ли Актив иностранным Активом.</para>
      </summary>
      <param name="obj">
      </param>
      <param name="instanceID">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsMainAsset(UnityEngine.Object)">
      <summary>
        <para>Является ли актив основным активом в окне проекта?</para>
      </summary>
      <param name="obj">
      </param>
      <param name="instanceID">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsMainAsset(System.Int32)">
      <summary>
        <para>Является ли актив основным активом в окне проекта?</para>
      </summary>
      <param name="obj">
      </param>
      <param name="instanceID">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsMainAssetAtPathLoaded(System.String)">
      <summary>
        <para>Возвращает значение true, если основной объект ресурса в assetPath загружен в память.</para>
      </summary>
      <param name="assetPath">Путь к загружаемому ресурсу файловой системы.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsMetaFileOpenForEdit(UnityEngine.Object,UnityEditor.StatusQueryOptions)">
      <summary>
        <para>Запросите, открыт ли файл метаданных ресурса (МЕТА-файл) для редактирования в системе управления версиями.</para>
      </summary>
      <param name="assetObject">Объект, представляющий ресурс, состояние метаданных которого требуется запросить.</param>
      <param name="message">Возвращает причину, по которой метаданные ресурса не открыты для редактирования.</param>
      <param name="statusOptions">Параметры запроса системы управления версиями. Эти параметры могут влиять на скорость и точность запроса. Значение по умолчанию — StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>Значение true, если метаданные ресурса считаются открытыми для редактирования выбранной системой управления версиями.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsMetaFileOpenForEdit(UnityEngine.Object,System.String&amp;,UnityEditor.StatusQueryOptions)">
      <summary>
        <para>Запросите, открыт ли файл метаданных ресурса (МЕТА-файл) для редактирования в системе управления версиями.</para>
      </summary>
      <param name="assetObject">Объект, представляющий ресурс, состояние метаданных которого требуется запросить.</param>
      <param name="message">Возвращает причину, по которой метаданные ресурса не открыты для редактирования.</param>
      <param name="statusOptions">Параметры запроса системы управления версиями. Эти параметры могут влиять на скорость и точность запроса. Значение по умолчанию — StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>Значение true, если метаданные ресурса считаются открытыми для редактирования выбранной системой управления версиями.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsMetaFileOpenForEdit(UnityEngine.Object)">
      <summary>
        <para>Запросите, открыт ли файл метаданных ресурса (МЕТА-файл) для редактирования в системе управления версиями.</para>
      </summary>
      <param name="assetObject">Объект, представляющий ресурс, состояние метаданных которого требуется запросить.</param>
      <param name="message">Возвращает причину, по которой метаданные ресурса не открыты для редактирования.</param>
      <param name="statusOptions">Параметры запроса системы управления версиями. Эти параметры могут влиять на скорость и точность запроса. Значение по умолчанию — StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>Значение true, если метаданные ресурса считаются открытыми для редактирования выбранной системой управления версиями.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsMetaFileOpenForEdit(UnityEngine.Object,System.String&amp;)">
      <summary>
        <para>Запросите, открыт ли файл метаданных ресурса (МЕТА-файл) для редактирования в системе управления версиями.</para>
      </summary>
      <param name="assetObject">Объект, представляющий ресурс, состояние метаданных которого требуется запросить.</param>
      <param name="message">Возвращает причину, по которой метаданные ресурса не открыты для редактирования.</param>
      <param name="statusOptions">Параметры запроса системы управления версиями. Эти параметры могут влиять на скорость и точность запроса. Значение по умолчанию — StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>Значение true, если метаданные ресурса считаются открытыми для редактирования выбранной системой управления версиями.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsNativeAsset(UnityEngine.Object)">
      <summary>
        <para>Определяет, является ли ресурс собственным ресурсом.</para>
      </summary>
      <param name="obj">
      </param>
      <param name="instanceID">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsNativeAsset(System.Int32)">
      <summary>
        <para>Определяет, является ли ресурс собственным ресурсом.</para>
      </summary>
      <param name="obj">
      </param>
      <param name="instanceID">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsOpenForEdit(UnityEngine.Object,UnityEditor.StatusQueryOptions)">
      <summary>
        <para>Запрос на то, открыт ли файл актива для редактирования в системе управления версиями.</para>
      </summary>
      <param name="assetObject">Объект, представляющий ресурс, состояние которого требуется запросить.</param>
      <param name="assetOrMetaFilePath">Путь к файлу ресурса или его мета-файлу на диске относительно папки проекта.</param>
      <param name="message">Возвращает причину, по которой ресурс не открыт для редактирования.</param>
      <param name="statusOptions">Параметры запроса системы управления версиями. Эти параметры могут влиять на скорость и точность запроса. Значение по умолчанию — StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>Значение true, если ресурс считается открытым для редактирования выбранной системой управления версиями.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsOpenForEdit(System.String,UnityEditor.StatusQueryOptions)">
      <summary>
        <para>Запрос на то, открыт ли файл актива для редактирования в системе управления версиями.</para>
      </summary>
      <param name="assetObject">Объект, представляющий ресурс, состояние которого требуется запросить.</param>
      <param name="assetOrMetaFilePath">Путь к файлу ресурса или его мета-файлу на диске относительно папки проекта.</param>
      <param name="message">Возвращает причину, по которой ресурс не открыт для редактирования.</param>
      <param name="statusOptions">Параметры запроса системы управления версиями. Эти параметры могут влиять на скорость и точность запроса. Значение по умолчанию — StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>Значение true, если ресурс считается открытым для редактирования выбранной системой управления версиями.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsOpenForEdit(UnityEngine.Object,System.String&amp;,UnityEditor.StatusQueryOptions)">
      <summary>
        <para>Запрос на то, открыт ли файл актива для редактирования в системе управления версиями.</para>
      </summary>
      <param name="assetObject">Объект, представляющий ресурс, состояние которого требуется запросить.</param>
      <param name="assetOrMetaFilePath">Путь к файлу ресурса или его мета-файлу на диске относительно папки проекта.</param>
      <param name="message">Возвращает причину, по которой ресурс не открыт для редактирования.</param>
      <param name="statusOptions">Параметры запроса системы управления версиями. Эти параметры могут влиять на скорость и точность запроса. Значение по умолчанию — StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>Значение true, если ресурс считается открытым для редактирования выбранной системой управления версиями.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsOpenForEdit(System.String,System.String&amp;,UnityEditor.StatusQueryOptions)">
      <summary>
        <para>Запрос на то, открыт ли файл актива для редактирования в системе управления версиями.</para>
      </summary>
      <param name="assetObject">Объект, представляющий ресурс, состояние которого требуется запросить.</param>
      <param name="assetOrMetaFilePath">Путь к файлу ресурса или его мета-файлу на диске относительно папки проекта.</param>
      <param name="message">Возвращает причину, по которой ресурс не открыт для редактирования.</param>
      <param name="statusOptions">Параметры запроса системы управления версиями. Эти параметры могут влиять на скорость и точность запроса. Значение по умолчанию — StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>Значение true, если ресурс считается открытым для редактирования выбранной системой управления версиями.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsOpenForEdit(UnityEngine.Object)">
      <summary>
        <para>Запрос на то, открыт ли файл актива для редактирования в системе управления версиями.</para>
      </summary>
      <param name="assetObject">Объект, представляющий ресурс, состояние которого требуется запросить.</param>
      <param name="assetOrMetaFilePath">Путь к файлу ресурса или его мета-файлу на диске относительно папки проекта.</param>
      <param name="message">Возвращает причину, по которой ресурс не открыт для редактирования.</param>
      <param name="statusOptions">Параметры запроса системы управления версиями. Эти параметры могут влиять на скорость и точность запроса. Значение по умолчанию — StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>Значение true, если ресурс считается открытым для редактирования выбранной системой управления версиями.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsOpenForEdit(System.String)">
      <summary>
        <para>Запрос на то, открыт ли файл актива для редактирования в системе управления версиями.</para>
      </summary>
      <param name="assetObject">Объект, представляющий ресурс, состояние которого требуется запросить.</param>
      <param name="assetOrMetaFilePath">Путь к файлу ресурса или его мета-файлу на диске относительно папки проекта.</param>
      <param name="message">Возвращает причину, по которой ресурс не открыт для редактирования.</param>
      <param name="statusOptions">Параметры запроса системы управления версиями. Эти параметры могут влиять на скорость и точность запроса. Значение по умолчанию — StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>Значение true, если ресурс считается открытым для редактирования выбранной системой управления версиями.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsOpenForEdit(UnityEngine.Object,System.String&amp;)">
      <summary>
        <para>Запрос на то, открыт ли файл актива для редактирования в системе управления версиями.</para>
      </summary>
      <param name="assetObject">Объект, представляющий ресурс, состояние которого требуется запросить.</param>
      <param name="assetOrMetaFilePath">Путь к файлу ресурса или его мета-файлу на диске относительно папки проекта.</param>
      <param name="message">Возвращает причину, по которой ресурс не открыт для редактирования.</param>
      <param name="statusOptions">Параметры запроса системы управления версиями. Эти параметры могут влиять на скорость и точность запроса. Значение по умолчанию — StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>Значение true, если ресурс считается открытым для редактирования выбранной системой управления версиями.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsOpenForEdit(System.String,System.String&amp;)">
      <summary>
        <para>Запрос на то, открыт ли файл актива для редактирования в системе управления версиями.</para>
      </summary>
      <param name="assetObject">Объект, представляющий ресурс, состояние которого требуется запросить.</param>
      <param name="assetOrMetaFilePath">Путь к файлу ресурса или его мета-файлу на диске относительно папки проекта.</param>
      <param name="message">Возвращает причину, по которой ресурс не открыт для редактирования.</param>
      <param name="statusOptions">Параметры запроса системы управления версиями. Эти параметры могут влиять на скорость и точность запроса. Значение по умолчанию — StatusQueryOptions.UseCachedIfPossible.</param>
      <returns>
        <para>Значение true, если ресурс считается открытым для редактирования выбранной системой управления версиями.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsOpenForEdit(System.String[],System.Collections.Generic.List`1&lt;System.String&gt;,UnityEditor.StatusQueryOptions)">
      <summary>
        <para>Запросите, какие из предоставленных файлов ресурсов открыты для редактирования в системе управления версиями.</para>
      </summary>
      <param name="assetOrMetaFilePaths">Пути к ресурсам или их мета-файлам относительно папки проекта.</param>
      <param name="outNotEditablePaths">Список назначения нередактируемых путей к ресурсам.</param>
      <param name="statusQueryOptions">Указывает, как Unity должен запрашивать систему управления версиями. Значение по умолчанию — StatusQueryOptions.UseCachedIfPossible.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsSubAsset(UnityEngine.Object)">
      <summary>
        <para>Является ли актив частью другого актива?</para>
      </summary>
      <param name="obj">Объект ресурса Для запроса.</param>
      <param name="instanceID">Идентификатор экземпляра ресурса Объект для запроса.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsSubAsset(System.Int32)">
      <summary>
        <para>Является ли актив частью другого актива?</para>
      </summary>
      <param name="obj">Объект ресурса Для запроса.</param>
      <param name="instanceID">Идентификатор экземпляра ресурса Объект для запроса.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.IsValidFolder(System.String)">
      <summary>
        <para>При указании пути к папке возвращает значение true, если оно существует, и значение false в противном случае.</para>
      </summary>
      <param name="path">Путь к папке.</param>
      <returns>
        <para>Возвращает значение true, если папка существует.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.LoadAllAssetRepresentationsAtPath(System.String)">
      <summary>
        <para>Возвращает все дополнительные ресурсы в assetPath.</para>
      </summary>
      <param name="assetPath">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.LoadAllAssetsAtPath(System.String)">
      <summary>
        <para>Возвращает массив всех объектов Assets по адресу assetPath.</para>
      </summary>
      <param name="assetPath">Путь файловой системы к ресурсу.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.LoadAssetAtPath(System.String,System.Type)">
      <summary>
        <para>Возвращает первый объект ресурса типа по заданному пути assetPath.</para>
      </summary>
      <param name="assetPath">Путь к загружаемому ресурсу.</param>
      <param name="type">Тип данных ресурса.</param>
      <returns>
        <para>Ресурс, соответствующий параметрам.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.LoadMainAssetAtPath(System.String)">
      <summary>
        <para>Возвращает основной объект ресурса в assetPath.  «Основным» ресурсом является актив в корне иерархии (например, файл Maya, который может содержать несколько сеток и GameObjects).</para>
      </summary>
      <param name="assetPath">Путь к загружаемому ресурсу файловой системы.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.MakeEditable(System.String)">
      <summary>
        <para>Открывает файл для редактирования в системе управления версиями.</para>
      </summary>
      <param name="path">Задает путь к файлу относительно корня проекта.</param>
      <returns>
        <para>Значение true, если Unity успешно сделала файл редактируемым в системе управления версиями. В противном случае возвращает значение false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.MakeEditable(System.String[],System.String,System.Collections.Generic.List`1&lt;System.String&gt;)">
      <summary>
        <para>Делает список файлов открытым для редактирования в системе управления версиями.</para>
      </summary>
      <param name="paths">Задает массив путей к файлам относительно корня проекта.</param>
      <param name="prompt">Диалоговое окно с запросом на отображение пользователю, если необходимо выполнить операцию управления версиями. Если значение равно null (по умолчанию), запрос не отображается.</param>
      <param name="outNotEditablePaths">Выходной список путей к файлам, которые нельзя сделать редактируемыми.</param>
      <returns>
        <para>Значение true, если Unity успешно сделал все файлы редактируемыми в системе управления версиями.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.MoveAsset(System.String,System.String)">
      <summary>
        <para>Перемещение файла ресурса (или папки) из одной папки в другую.</para>
      </summary>
      <param name="oldPath">Путь, в котором в данный момент находится ресурс.</param>
      <param name="newPath">Путь, по которому должен быть перемещен ресурс.</param>
      <returns>
        <para>Пустая строка, если ресурс был успешно перемещен, в противном случае появится сообщение об ошибке.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.MoveAssetsToTrash(System.String[],System.Collections.Generic.List`1&lt;System.String&gt;)">
      <summary>
        <para>Позволяет перемещать несколько ресурсов или папок в корзину одновременно с преимуществами производительности в системе управления версиями.</para>
      </summary>
      <param name="paths">Относительные пути проекта к удаляемым ресурсам или папкам.</param>
      <param name="outFailedPaths">Относительные пути проекта, которые не удалось удалить.</param>
      <returns>
        <para>Возвращает значение true, если все ресурсы в путях были успешно удалены, значение false, если какой-либо из указанных путей не существует или не может быть удален.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.MoveAssetToTrash(System.String)">
      <summary>
        <para>Перемещает указанный ресурс или папку в корзину ОС.</para>
      </summary>
      <param name="path">Относительный путь проекта к удаляемому ресурсу или папке.</param>
      <returns>
        <para>Возвращает значение true, если ресурс был успешно удален, значение false, если он не существует или не может быть удален.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.OpenAsset(System.Int32)">
      <summary>
        <para>Открывает ресурс со связанным приложением.</para>
      </summary>
      <param name="instanceID">
      </param>
      <param name="lineNumber">
      </param>
      <param name="columnNumber">
      </param>
      <param name="target">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.OpenAsset(System.Int32,System.Int32)">
      <summary>
        <para>Открывает ресурс со связанным приложением.</para>
      </summary>
      <param name="instanceID">
      </param>
      <param name="lineNumber">
      </param>
      <param name="columnNumber">
      </param>
      <param name="target">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.OpenAsset(System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Открывает ресурс со связанным приложением.</para>
      </summary>
      <param name="instanceID">
      </param>
      <param name="lineNumber">
      </param>
      <param name="columnNumber">
      </param>
      <param name="target">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.OpenAsset(UnityEngine.Object)">
      <summary>
        <para>Открывает ресурс со связанным приложением.</para>
      </summary>
      <param name="instanceID">
      </param>
      <param name="lineNumber">
      </param>
      <param name="columnNumber">
      </param>
      <param name="target">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.OpenAsset(UnityEngine.Object,System.Int32)">
      <summary>
        <para>Открывает ресурс со связанным приложением.</para>
      </summary>
      <param name="instanceID">
      </param>
      <param name="lineNumber">
      </param>
      <param name="columnNumber">
      </param>
      <param name="target">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.OpenAsset(UnityEngine.Object,System.Int32,System.Int32)">
      <summary>
        <para>Открывает ресурс со связанным приложением.</para>
      </summary>
      <param name="instanceID">
      </param>
      <param name="lineNumber">
      </param>
      <param name="columnNumber">
      </param>
      <param name="target">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.OpenAsset(UnityEngine.Object[])">
      <summary>
        <para>Открывает ресурсы со связанными приложениями.</para>
      </summary>
      <param name="objects">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.Refresh()">
      <summary>
        <para>Импортируйте все измененные ресурсы.</para>
      </summary>
      <param name="options">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.Refresh(UnityEditor.ImportAssetOptions)">
      <summary>
        <para>Импортируйте все измененные ресурсы.</para>
      </summary>
      <param name="options">
      </param>
    </member>
    <member name="T:UnityEditor.AssetDatabase.RefreshImportMode">
      <summary>
        <para>Параметры управления использованием редактором параллельных процессов при импорте ресурсов во время обновления базы данных активов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetDatabase.RefreshImportMode.InProcess">
      <summary>
        <para>Все ресурсы импортируются в процессе редактора и последовательно.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetDatabase.RefreshImportMode.OutOfProcessPerQueue">
      <summary>
        <para>Как можно больше активов импортируется параллельно в рабочих процессах импорта. Очереди и зависимости импортера, о которых сообщает импортер, соблюдаются.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetDatabase.RefreshSettings">
      <summary>
        <para>Применение ожидающих изменений параметров редактора к конвейеру активов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetDatabase.RegisterCustomDependency(System.String,UnityEngine.Hash128)">
      <summary>
        <para>Позволяет зарегистрировать пользовательскую зависимость, от которой могут зависеть ресурсы. Если зарегистрировать пользовательскую зависимость и указать, что актив зависит от нее, то ресурс будет повторно импортирован при изменении пользовательской зависимости.</para>
      </summary>
      <param name="dependency">Имя зависимости. Вы можете использовать любое имя, которое вам нравится, но поскольку эти имена являются глобальными для всех ваших активов, может быть полезно использовать соглашение об именовании (например, систему именования на основе пути), чтобы избежать конфликтов с другими пользовательскими именами зависимостей.</param>
      <param name="hashOfValue">Значение зависимости Hash128.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.ReleaseCachedFileHandles">
      <summary>
        <para>Вызов этой функции освободит дескрипторы файлов, кэшированные Unity. Это позволяет безопасно изменять ресурсы или метафайлы, что позволяет избежать потенциальных ошибок ввода-вывода общего доступа к файлам.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetDatabase.RemoveAssetBundleName(System.String,System.Boolean)">
      <summary>
        <para>Удалите имя assetBundle из базы данных активов. Флаг forceRemove используется для указания того, хотите ли вы удалить его, даже если он используется.</para>
      </summary>
      <param name="assetBundleName">Имя объектаBundle, которое требуется удалить.</param>
      <param name="forceRemove">Флаг, чтобы указать, хотите ли вы удалить имя assetBundle, даже если оно используется.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.RemoveObjectFromAsset(UnityEngine.Object)">
      <summary>
        <para>Удаляет объект из своего ресурса (см. также: AssetDatabase.AddObjectToAsset).</para>
      </summary>
      <param name="objectToRemove">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.RemoveUnusedAssetBundleNames">
      <summary>
        <para>Удалите все неиспользуемые имена assetBundle в базе данных активов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetDatabase.RenameAsset(System.String,System.String)">
      <summary>
        <para>Переименуйте файл ресурса.</para>
      </summary>
      <param name="pathName">Путь, в котором в данный момент находится ресурс.</param>
      <param name="newName">Новое название, которое должно быть дано активу.</param>
      <returns>
        <para>Пустая строка, если ресурс был успешно переименован, в противном случае сообщение об ошибке.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.ResetCacheServerReconnectTimer">
      <summary>
        <para>Сбрасывает значения таймера повторного подключения к внутреннему кэш-серверу. Значение таймера задержки по умолчанию равно 1 секунде, а максимальное значение задержки — 5 минут. Каждый раз, когда попытка подключения терпит неудачу, она удваивает значение таймера задержки до максимального значения.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetDatabase.SaveAssetIfDirty(UnityEngine.Object)">
      <summary>
        <para>Записывает все несохраненные изменения в указанный ресурс на диск.</para>
      </summary>
      <param name="obj">Объект актива, который необходимо сохранить, если он загрязнен.</param>
      <param name="guid">Идентификатор актива, который необходимо сохранить, если он грязный.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.SaveAssetIfDirty(UnityEditor.GUID)">
      <summary>
        <para>Записывает все несохраненные изменения в указанный ресурс на диск.</para>
      </summary>
      <param name="obj">Объект актива, который необходимо сохранить, если он загрязнен.</param>
      <param name="guid">Идентификатор актива, который необходимо сохранить, если он грязный.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.SaveAssets">
      <summary>
        <para>Записывает все несохраненные изменения ресурсов на диск.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetDatabase.SetImporterOverride(System.String)">
      <summary>
        <para>Задает определенный модуль импорта для использования в ресурсе.</para>
      </summary>
      <param name="path">Путь к ресурсу.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.SetLabels(UnityEngine.Object,System.String[])">
      <summary>
        <para>Заменяет этот список меток на ресурсе.</para>
      </summary>
      <param name="obj">
      </param>
      <param name="labels">
      </param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.SetMainObject(UnityEngine.Object,System.String)">
      <summary>
        <para>Указывает, какой объект в файле ресурсов должен стать основным объектом после следующего импорта.</para>
      </summary>
      <param name="mainObject">Объект, который должен стать основным объектом.</param>
      <param name="assetPath">Путь к файлу ресурса.</param>
    </member>
    <member name="M:UnityEditor.AssetDatabase.StartAssetEditing">
      <summary>
        <para>Начинает импорт ресурсов в базу данных активов. Это позволяет сгруппировать несколько импортов активов в один более крупный импорт.  Прим.: Вызов метода AssetDatabase.StartAssetEditing() переводит базу данных активов в состояние, которое будет препятствовать импорту до тех пор, пока не будет вызван вызов AssetDatabase.StopAssetEditing(). Это означает, что если между двумя вызовами функций возникает исключение, AssetDatabase не будет отвечать на запросы. Поэтому настоятельно рекомендуется размещать вызовы AssetDatabase.StartAssetEditing() и AssetDatabase.StopAssetEditing() внутри любой попытки.. поймать блок, или попробовать.. наконец, блокируйте по мере необходимости.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetDatabase.StopAssetEditing">
      <summary>
        <para>Останавливает импорт ресурсов в базу данных активов. Это позволяет сгруппировать несколько импортов активов в один более крупный импорт.  Прим.: Вызов метода AssetDatabase.StartAssetEditing() переводит базу данных активов в состояние, которое будет препятствовать импорту до тех пор, пока не будет вызван вызов AssetDatabase.StopAssetEditing(). Это означает, что если между двумя вызовами функций возникает исключение, AssetDatabase не будет отвечать на запросы. Поэтому настоятельно рекомендуется размещать вызовы AssetDatabase.StartAssetEditing() и AssetDatabase.StopAssetEditing() внутри любой попытки.. поймать блок, или попробовать.. наконец, блокируйте по мере необходимости.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetDatabase.TryGetGUIDAndLocalFileIdentifier(UnityEngine.Object,System.String&amp;,System.Int32&amp;)">
      <summary>
        <para>Получите идентификатор GUID и идентификатор локального файла из идентификатора экземпляра объекта.</para>
      </summary>
      <param name="instanceID">Идентификатор экземпляра объекта, для которого требуется получить сведения.</param>
      <param name="obj">Объект, для которого необходимо получить идентификатор GUID и идентификатор файла.</param>
      <param name="assetRef">Ссылка на ресурс, для которого необходимо получить идентификатор GUID и идентификатор файла.</param>
      <param name="guid">Идентификатор GUID ресурса.</param>
      <param name="localId">Идентификатор локального файла этого ресурса.</param>
      <returns>
        <para>Значение true, если идентификатор GUID и идентификатор файла были успешно найдены, значение false, если нет.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.TryGetGUIDAndLocalFileIdentifier(System.Int32,System.String&amp;,System.Int32&amp;)">
      <summary>
        <para>Получите идентификатор GUID и идентификатор локального файла из идентификатора экземпляра объекта.</para>
      </summary>
      <param name="instanceID">Идентификатор экземпляра объекта, для которого требуется получить сведения.</param>
      <param name="obj">Объект, для которого необходимо получить идентификатор GUID и идентификатор файла.</param>
      <param name="assetRef">Ссылка на ресурс, для которого необходимо получить идентификатор GUID и идентификатор файла.</param>
      <param name="guid">Идентификатор GUID ресурса.</param>
      <param name="localId">Идентификатор локального файла этого ресурса.</param>
      <returns>
        <para>Значение true, если идентификатор GUID и идентификатор файла были успешно найдены, значение false, если нет.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.TryGetGUIDAndLocalFileIdentifier(UnityEngine.Object,System.String&amp;,System.Int64&amp;)">
      <summary>
        <para>Получите идентификатор GUID и идентификатор локального файла из идентификатора экземпляра объекта.</para>
      </summary>
      <param name="instanceID">Идентификатор экземпляра объекта, для которого требуется получить сведения.</param>
      <param name="obj">Объект, для которого необходимо получить идентификатор GUID и идентификатор файла.</param>
      <param name="assetRef">Ссылка на ресурс, для которого необходимо получить идентификатор GUID и идентификатор файла.</param>
      <param name="guid">Идентификатор GUID ресурса.</param>
      <param name="localId">Идентификатор локального файла этого ресурса.</param>
      <returns>
        <para>Значение true, если идентификатор GUID и идентификатор файла были успешно найдены, значение false, если нет.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.TryGetGUIDAndLocalFileIdentifier(System.Int32,System.String&amp;,System.Int64&amp;)">
      <summary>
        <para>Получите идентификатор GUID и идентификатор локального файла из идентификатора экземпляра объекта.</para>
      </summary>
      <param name="instanceID">Идентификатор экземпляра объекта, для которого требуется получить сведения.</param>
      <param name="obj">Объект, для которого необходимо получить идентификатор GUID и идентификатор файла.</param>
      <param name="assetRef">Ссылка на ресурс, для которого необходимо получить идентификатор GUID и идентификатор файла.</param>
      <param name="guid">Идентификатор GUID ресурса.</param>
      <param name="localId">Идентификатор локального файла этого ресурса.</param>
      <returns>
        <para>Значение true, если идентификатор GUID и идентификатор файла были успешно найдены, значение false, если нет.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.TryGetGUIDAndLocalFileIdentifier(UnityEngine.LazyLoadReference`1&lt;T&gt;,System.String&amp;,System.Int64&amp;)">
      <summary>
        <para>Получите идентификатор GUID и идентификатор локального файла из идентификатора экземпляра объекта.</para>
      </summary>
      <param name="instanceID">Идентификатор экземпляра объекта, для которого требуется получить сведения.</param>
      <param name="obj">Объект, для которого необходимо получить идентификатор GUID и идентификатор файла.</param>
      <param name="assetRef">Ссылка на ресурс, для которого необходимо получить идентификатор GUID и идентификатор файла.</param>
      <param name="guid">Идентификатор GUID ресурса.</param>
      <param name="localId">Идентификатор локального файла этого ресурса.</param>
      <returns>
        <para>Значение true, если идентификатор GUID и идентификатор файла были успешно найдены, значение false, если нет.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.UnregisterCustomDependencyPrefixFilter(System.String)">
      <summary>
        <para>Удаляет пользовательские зависимости, соответствующие префиксуFilter.</para>
      </summary>
      <param name="prefixFilter">Фильтр префиксов для пользовательских зависимостей, которые необходимо отменить.</param>
      <returns>
        <para>Количество удаленных пользовательских зависимостей.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.ValidateMoveAsset(System.String,System.String)">
      <summary>
        <para>Проверяет, можно ли переместить файл ресурса из одной папки в другую. (Без фактического перемещения файла).</para>
      </summary>
      <param name="oldPath">Путь, в котором в данный момент находится ресурс.</param>
      <param name="newPath">Путь, по которому должен быть перемещен ресурс.</param>
      <returns>
        <para>Пустая строка, если ресурс можно переместить, в противном случае появится сообщение об ошибке.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetDatabase.WriteImportSettingsIfDirty(System.String)">
      <summary>
        <para>Записывает параметры импорта на диск.</para>
      </summary>
      <param name="path">
      </param>
    </member>
    <member name="T:UnityEditor.AssetDeleteResult">
      <summary>
        <para>Результат операции удаления ресурса</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetDeleteResult.DidDelete">
      <summary>
        <para>Сообщает Unity, что ресурс был удален в результате обратного вызова. Unity не будет пытаться удалить ресурс, но удалит кэшированную версию и файл предварительного просмотра.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetDeleteResult.DidNotDelete">
      <summary>
        <para>Сообщает внутренней реализации, что обратный вызов не удалил ресурс. Ресурс будет удален внутренней реализацией.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetDeleteResult.FailedDelete">
      <summary>
        <para>Сообщает Unity, что файл не может быть удален и Unity должен оставить его в покое.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AssetImporter">
      <summary>
        <para>Базовый класс, из которого выходят импортеры активов для определенных типов активов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporter.assetBundleName">
      <summary>
        <para>Получите или задайте имя AssetBundle.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporter.assetBundleVariant">
      <summary>
        <para>Получите или задайте вариант AssetBundle.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporter.assetPath">
      <summary>
        <para>Путь к ресурсу для данного импортера. (Только для чтения)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporter.importSettingsMissing">
      <summary>
        <para>Значение равно true, если с импортированным ресурсом не предоставляется метафайл.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporter.userData">
      <summary>
        <para>Получите или задайте любые пользовательские данные.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporter.AddRemap(UnityEditor.AssetImporter/SourceAssetIdentifier,UnityEngine.Object)">
      <summary>
        <para>Сопоставление субассистента из импортированного ресурса (например, файла FBX) с внешним ресурсом того же типа.</para>
      </summary>
      <param name="identifier">Идентификатор субассистента.</param>
      <param name="externalObject">Объект, который будет сопоставлен с внутренним объектом. Может принадлежать другому Префабу или Ресурсу, но не Изменяемому Ресурсу.</param>
    </member>
    <member name="M:UnityEditor.AssetImporter.GetAtPath(System.String)">
      <summary>
        <para>Извлекает средство импорта ресурса для ресурса по пути.</para>
      </summary>
      <param name="path">
      </param>
    </member>
    <member name="M:UnityEditor.AssetImporter.GetExternalObjectMap">
      <summary>
        <para>Получает копию карты внешних объектов, используемой AssetImporter.</para>
      </summary>
      <returns>
        <para>Сопоставление между субаустом и внешним активом.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporter.RemoveRemap(UnityEditor.AssetImporter/SourceAssetIdentifier)">
      <summary>
        <para>Удаляет элемент с карты внешних объектов.</para>
      </summary>
      <param name="identifier">Идентификатор субассистента.</param>
      <returns>
        <para>Возвращает значение true, если элемент был удален, в противном случае — значение false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporter.SaveAndReimport">
      <summary>
        <para>Сохраните параметры импорта ресурсов, если средство импорта ресурсов загрязнено.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporter.SetAssetBundleNameAndVariant(System.String,System.String)">
      <summary>
        <para>Задайте имя и вариант AssetBundle.</para>
      </summary>
      <param name="assetBundleName">AssetBundle имя.</param>
      <param name="assetBundleVariant">Вариант AssetBundle.</param>
    </member>
    <member name="T:UnityEditor.AssetImporter.SourceAssetIdentifier">
      <summary>
        <para>Представляет уникальный идентификатор субаустуза, внедренного в импортированный ресурс (например, файл FBX).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetImporter.SourceAssetIdentifier.name">
      <summary>
        <para>Имя ресурса.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetImporter.SourceAssetIdentifier.type">
      <summary>
        <para>Тип ресурса.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporter.SourceAssetIdentifier.#ctor(UnityEngine.Object)">
      <summary>
        <para>Создает sourceAssetIdentifier.</para>
      </summary>
      <param name="asset">Субасудар, внедренный в импортированный актив.</param>
      <param name="type">Тип субассистента, встроенного в импортированный актив.</param>
      <param name="name">Имя субассиста, встроенного в импортированный ресурс.</param>
    </member>
    <member name="M:UnityEditor.AssetImporter.SourceAssetIdentifier.#ctor(System.Type,System.String)">
      <summary>
        <para>Создает sourceAssetIdentifier.</para>
      </summary>
      <param name="asset">Субасудар, внедренный в импортированный актив.</param>
      <param name="type">Тип субассистента, встроенного в импортированный актив.</param>
      <param name="name">Имя субассиста, встроенного в импортированный ресурс.</param>
    </member>
    <member name="M:UnityEditor.AssetImporter.SupportsRemappedAssetType(System.Type)">
      <summary>
        <para>Проверяет, поддерживает ли AssetImporter переназначение заданного типа ресурса.</para>
      </summary>
      <param name="type">Тип проверяемого актива.</param>
      <returns>
        <para>Возвращает значение true, если средство импорта поддерживает переназначение заданного типа. В противном случае возвращает значение false.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.AssetImporters.AssetImportContext">
      <summary>
        <para>Определяет контекст импорта для обработчиков сценариев во время события импорта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.AssetImportContext.assetPath">
      <summary>
        <para>Путь к импортируемому исходному файлу ресурса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.AssetImportContext.mainObject">
      <summary>
        <para>Основной объект, заданный в AssetImportContext.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.AssetImportContext.selectedBuildTarget">
      <summary>
        <para>Возвращает текущий целевой объект сборки и создает зависимость от целевой платформы в обработчике сценариев.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImportContext.AddObjectToAsset(System.String,UnityEngine.Object)">
      <summary>
        <para>Добавляет объект в результат операции импорта.</para>
      </summary>
      <param name="identifier">Уникальный идентификатор, связанный с этим объектом.</param>
      <param name="obj">Объект Unity, добавляемый в ресурс.</param>
      <param name="thumbnail">Дополнительная 2D-текстура для использования в качестве эскиза для этого объекта.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImportContext.AddObjectToAsset(System.String,UnityEngine.Object,UnityEngine.Texture2D)">
      <summary>
        <para>Добавляет объект в результат операции импорта.</para>
      </summary>
      <param name="identifier">Уникальный идентификатор, связанный с этим объектом.</param>
      <param name="obj">Объект Unity, добавляемый в ресурс.</param>
      <param name="thumbnail">Дополнительная 2D-текстура для использования в качестве эскиза для этого объекта.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImportContext.DependsOnArtifact(System.String)">
      <summary>
        <para>Настройка зависимости артефакта от ресурса.</para>
      </summary>
      <param name="path">Путь к ресурсу, артефакт которого должен быть зависимостью. Примечание: Хотя зависимостью является артефакт (результат импорта), который хранится в папке библиотеки, этот параметр является путем к ресурсу в папке Assets, а не путем к артефакту в папке Library.</param>
      <param name="guid">Идентификатор guid зависимости артефакта.</param>
      <param name="key">Ключ артефакта зависимости артефакта.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImportContext.DependsOnArtifact(UnityEditor.GUID)">
      <summary>
        <para>Настройка зависимости артефакта от ресурса.</para>
      </summary>
      <param name="path">Путь к ресурсу, артефакт которого должен быть зависимостью. Примечание: Хотя зависимостью является артефакт (результат импорта), который хранится в папке библиотеки, этот параметр является путем к ресурсу в папке Assets, а не путем к артефакту в папке Library.</param>
      <param name="guid">Идентификатор guid зависимости артефакта.</param>
      <param name="key">Ключ артефакта зависимости артефакта.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImportContext.DependsOnArtifact(UnityEditor.Experimental.ArtifactKey)">
      <summary>
        <para>Настройка зависимости артефакта от ресурса.</para>
      </summary>
      <param name="path">Путь к ресурсу, артефакт которого должен быть зависимостью. Примечание: Хотя зависимостью является артефакт (результат импорта), который хранится в папке библиотеки, этот параметр является путем к ресурсу в папке Assets, а не путем к артефакту в папке Library.</param>
      <param name="guid">Идентификатор guid зависимости артефакта.</param>
      <param name="key">Ключ артефакта зависимости артефакта.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImportContext.DependsOnCustomDependency(System.String)">
      <summary>
        <para>Позволяет указать, что ресурс имеет пользовательскую зависимость.</para>
      </summary>
      <param name="dependency">Имя зависимости. Вы можете использовать любое имя, которое вам нравится, но поскольку эти имена являются глобальными для всех ваших активов, может быть полезно использовать соглашение об именовании (например, систему именования на основе пути, как в примере ниже), чтобы избежать столкновений с другими пользовательскими именами зависимостей.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImportContext.DependsOnSourceAsset(System.String)">
      <summary>
        <para>Позволяет указать, что ресурс напрямую зависит от исходного файла другого ресурса (в отличие от результата импорта другого ресурса).</para>
      </summary>
      <param name="path">Путь к зависимости источника.</param>
      <param name="guid">Идентификатор GUID зависимости исходного ресурса.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImportContext.DependsOnSourceAsset(UnityEditor.GUID)">
      <summary>
        <para>Позволяет указать, что ресурс напрямую зависит от исходного файла другого ресурса (в отличие от результата импорта другого ресурса).</para>
      </summary>
      <param name="path">Путь к зависимости источника.</param>
      <param name="guid">Идентификатор GUID зависимости исходного ресурса.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImportContext.GetArtifactFilePath(UnityEditor.GUID,System.String)">
      <summary>
        <para>Возвращает путь к файлу артефакта, созданному другим средством импорта, и добавляет к этому файлу зависимость.</para>
      </summary>
      <param name="guid">Идентификатор GUID зависимости файла артефакта.</param>
      <param name="key">Ключ артефакта зависимости файла артефакта.</param>
      <param name="fileName">Имя файла артефакта, от которого необходимо зависеть. См. [[AssetImportContext.GetOutputArtifactFilePath.</param>
      <returns>
        <para>Путь внутри папки «Библиотека», из которой можно прочитать содержимое запрошенного файла артефакта.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImportContext.GetArtifactFilePath(UnityEditor.Experimental.ArtifactKey,System.String)">
      <summary>
        <para>Возвращает путь к файлу артефакта, созданному другим средством импорта, и добавляет к этому файлу зависимость.</para>
      </summary>
      <param name="guid">Идентификатор GUID зависимости файла артефакта.</param>
      <param name="key">Ключ артефакта зависимости файла артефакта.</param>
      <param name="fileName">Имя файла артефакта, от которого необходимо зависеть. См. [[AssetImportContext.GetOutputArtifactFilePath.</param>
      <returns>
        <para>Путь внутри папки «Библиотека», из которой можно прочитать содержимое запрошенного файла артефакта.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImportContext.GetArtifactFilePath(System.String,System.String)">
      <summary>
        <para>Возвращает путь к файлу артефакта, созданному другим средством импорта, и добавляет зависимость к этому файлу и пути к исходному ресурсу.</para>
      </summary>
      <param name="path">Путь к ресурсу, файл артефакта которого должен быть зависимостью. Примечание: Хотя зависимостью является файл артефакта (результат импорта), который хранится в папке библиотеки, этот параметр является путем к ресурсу в папке Assets, а не путем к файлу артефакта в папке Library.</param>
      <param name="fileName">Имя файла артефакта, от которого необходимо зависеть. См. [[AssetImportContext.GetOutputArtifactFilePath.</param>
      <returns>
        <para>Путь внутри папки «Библиотека», из которой можно прочитать содержимое запрошенного файла артефакта.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImportContext.GetObjects(System.Collections.Generic.List`1&lt;UnityEngine.Object&gt;)">
      <summary>
        <para>Получает список объектов, заданных в AssetImportContext.</para>
      </summary>
      <param name="objects">Список объектов, заполняемых контекстом.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImportContext.GetOutputArtifactFilePath(System.String)">
      <summary>
        <para>Возвращает путь, по которому будет записан новый файл артефакта с заданным именем fileName.</para>
      </summary>
      <param name="fileName">Уникальный идентификатор для ссылки на этот файл артефакта.</param>
      <returns>
        <para>Путь к файлу, который можно использовать для создания нового файла артефакта.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImportContext.GetResultPath(System.String)">
      <summary>
        <para>Возвращает путь, в котором хранится результат импорта для заданного расширения.</para>
      </summary>
      <param name="extension">Строка расширения.</param>
      <returns>
        <para>Путь, по которому должен храниться результат для данного расширения.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImportContext.LogImportError(System.String,UnityEngine.Object)">
      <summary>
        <para>Регистрирует сообщение об ошибке, обнаруженное во время импорта.</para>
      </summary>
      <param name="msg">Сообщение об ошибке.</param>
      <param name="obj">Необязательный объект, на который нацелена ошибка.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImportContext.LogImportWarning(System.String,UnityEngine.Object)">
      <summary>
        <para>Регистрирует предупреждающее сообщение, обнаруженное во время импорта.</para>
      </summary>
      <param name="msg">Предупреждающее сообщение.</param>
      <param name="obj">Необязательный объект, на который нацелено предупреждение.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImportContext.SetMainObject(UnityEngine.Object)">
      <summary>
        <para>Задает основной объект для импорта.</para>
      </summary>
      <param name="obj">Объект, задаваемый в качестве основного объекта. Этот объект уже должен быть добавлен с помощью метода AddObjectToAsset.</param>
    </member>
    <member name="T:UnityEditor.AssetImporters.AssetImporterEditor">
      <summary>
        <para>Редактор по умолчанию для всех параметров импорта ресурсов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.AssetImporterEditor.extraDataSerializedObject">
      <summary>
        <para>Объект SerializedObject, представляющий объект extraDataTarget или extraDataTargets редактора AssetImporterEditor.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.AssetImporterEditor.extraDataTarget">
      <summary>
        <para>Дополнительный объект данных, связанный с объектом Editor.target.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.AssetImporterEditor.extraDataTargets">
      <summary>
        <para>Массив объектов, связанных с каждым объектом Editor.targets.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.AssetImporterEditor.extraDataType">
      <summary>
        <para>Переопределите это свойство, чтобы вернуть тип, наследуемый от ScriptableObject. Это позволяет AssetImporterEditor распознавать сериализованные данные за пределами средства импорта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.AssetImporterEditor.needsApplyRevert">
      <summary>
        <para>Требуется ли метод ApplyRevertGUI для рисования в инспекторе.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.AssetImporterEditor.showImportedObject">
      <summary>
        <para>Должен ли импортированный объект отображаться как отдельный редактор?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.AssetImporterEditor.useAssetDrawPreview">
      <summary>
        <para>Определяет, обрабатывается ли предварительный просмотр ресурса редактором активов или редактором DrawPreview.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImporterEditor.Apply">
      <summary>
        <para>Сохраняет все изменения из элемента управления редактора в объект параметров импорта ресурса.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImporterEditor.ApplyAndImport">
      <summary>
        <para>Сохраняет изменения из пользовательского интерфейса редактора в объект параметров и импортирует ресурс.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImporterEditor.ApplyButton">
      <summary>
        <para>Реализует кнопку "Применить" инспектора.</para>
      </summary>
      <returns>
        <para>Возвращает значение true, если новые параметры были успешно применены.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImporterEditor.ApplyRevertGUI">
      <summary>
        <para>Добавьте в редактор кнопки «Применить» и «Вернуть».</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImporterEditor.Awake">
      <summary>
        <para>Эта функция вызывается при запуске скрипта редактора.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImporterEditor.CanApply">
      <summary>
        <para>Определяет, могут ли быть применены изменения параметров импорта.</para>
      </summary>
      <returns>
        <para>Возвращает значение true, если измененные параметры импорта не содержат ошибок и могут быть применены. В противном случае возвращает значение false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImporterEditor.HasModified">
      <summary>
        <para>Определите, были ли изменены параметры импорта.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImporterEditor.InitializeExtraDataInstance(UnityEngine.Object,System.Int32)">
      <summary>
        <para>Этот метод вызывается в процессе инициализации редактора, после Awake и перед OnEnable.</para>
      </summary>
      <param name="extraData">Экземпляр ScriptableObject типа, предоставляемого AssetImporterEditor.extraDataType.</param>
      <param name="targetIndex">Соответствующий индекс Editor.targets предоставленного объекта extraData.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImporterEditor.OnApplyRevertGUI">
      <summary>
        <para>Обработайте кнопки «Применить» и «Вернуться».</para>
      </summary>
      <returns>
        <para>Возвращает значение true, если новые параметры были успешно применены.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImporterEditor.OnDisable">
      <summary>
        <para>Эта функция вызывается, когда объект редактора выходит за пределы области действия.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImporterEditor.OnEnable">
      <summary>
        <para>Эта функция вызывается при загрузке объекта.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImporterEditor.OnInspectorGUI">
      <summary>
        <para>Переопределите этот метод, чтобы создать собственный графический интерфейс Inpsector для ScriptedImporter.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImporterEditor.ResetValues">
      <summary>
        <para>Сбросьте настройки импорта до последних сохраненных значений.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.AssetImporterEditor.RevertButton">
      <summary>
        <para>Реализует кнопку 'Revert' инспектора.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AssetImporters.CameraDescription">
      <summary>
        <para>Представляет сведения о камере из импортированного файла.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.CameraDescription.#ctor">
      <summary>
        <para>Инициализирует и возвращает экземпляр CameraDescription.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.CameraDescription.Dispose">
      <summary>
        <para>Удаляет экземпляр CameraDescription. Это очищает все ресурсы, которые использовал экземпляр.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.CameraDescription.GetFloatPropertyNames(System.Collections.Generic.List`1&lt;System.String&gt;)">
      <summary>
        <para>Извлекает имена свойств типа float для этой камеры.</para>
      </summary>
      <param name="names">Список полученных имен свойств.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.CameraDescription.GetIntPropertyNames(System.Collections.Generic.List`1&lt;System.String&gt;)">
      <summary>
        <para>Извлекает имена свойств типа int для этой камеры.</para>
      </summary>
      <param name="names">Список полученных имен свойств.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.CameraDescription.GetStringPropertyNames(System.Collections.Generic.List`1&lt;System.String&gt;)">
      <summary>
        <para>Извлекает имена свойств строки типа для этой камеры.</para>
      </summary>
      <param name="names">Список полученных имен свойств.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.CameraDescription.GetVector4PropertyNames(System.Collections.Generic.List`1&lt;System.String&gt;)">
      <summary>
        <para>Извлекает имена свойств типа Vector4 для этой камеры.</para>
      </summary>
      <param name="names">Список полученных имен свойств.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.CameraDescription.HasAnimationCurve(System.String)">
      <summary>
        <para>Проверяет, анимировано ли свойство камеры в любом объекте AnimationClip.</para>
      </summary>
      <param name="propertyName">Имя свойства камеры.</param>
      <returns>
        <para>Возвращает значение true, если свойство camera анимировано. В противном случае возвращает значение false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.CameraDescription.HasAnimationCurveInClip(System.String,System.String)">
      <summary>
        <para>Проверяет, анимировано ли свойство камеры в определенном объекте AnimationClip.</para>
      </summary>
      <param name="propertyName">Имя анимированного свойства камеры.</param>
      <param name="clipName">Имя animationClip.</param>
      <returns>
        <para>Возвращает значение true, если свойство camera анимировано. В противном случае возвращает значение false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.CameraDescription.TryGetAnimationCurve(System.String,System.String,UnityEngine.AnimationCurve&amp;)">
      <summary>
        <para>Извлекает AnimationCurve для свойства анимированной камеры в определенном объекте AnimationClip.</para>
      </summary>
      <param name="clipName">Имя animationClip.</param>
      <param name="propertyName">Имя свойства камеры.</param>
      <param name="value">Полученный AnimationCurve, если он существует для указанного свойства камеры.</param>
      <returns>
        <para>Возвращает значение true, если свойство camera анимировано. В противном случае возвращает значение false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.CameraDescription.TryGetProperty(System.String,System.Single&amp;)">
      <summary>
        <para>Извлекает значение указанного свойства камеры.</para>
      </summary>
      <param name="propertyName">Название свойства.</param>
      <param name="value">Полученное значение.</param>
      <returns>
        <para>Возвращает значение true, если свойство существует на камере. В противном случае возвращает значение false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.CameraDescription.TryGetProperty(System.String,UnityEngine.Vector4&amp;)">
      <summary>
        <para>Извлекает значение указанного свойства камеры.</para>
      </summary>
      <param name="propertyName">Название свойства.</param>
      <param name="value">Полученное значение.</param>
      <returns>
        <para>Возвращает значение true, если свойство существует на камере. В противном случае возвращает значение false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.CameraDescription.TryGetProperty(System.String,System.String&amp;)">
      <summary>
        <para>Извлекает значение указанного свойства камеры.</para>
      </summary>
      <param name="propertyName">Название свойства.</param>
      <param name="value">Полученное значение.</param>
      <returns>
        <para>Возвращает значение true, если свойство существует на камере. В противном случае возвращает значение false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.CameraDescription.TryGetProperty(System.String,System.Int32&amp;)">
      <summary>
        <para>Извлекает значение указанного свойства камеры.</para>
      </summary>
      <param name="propertyName">Название свойства.</param>
      <param name="value">Полученное значение.</param>
      <returns>
        <para>Возвращает значение true, если свойство существует на камере. В противном случае возвращает значение false.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.AssetImporters.CollectImportedDependenciesAttribute">
      <summary>
        <para>Используйте этот атрибут метода, чтобы указать, какие методы объявляют зависимости от импортированных ресурсов. Методы вызываются AssetDatabase во время импорта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.CollectImportedDependenciesAttribute.importerType">
      <summary>
        <para>Тип импортера, для которого объявлен импортированный объект получения зависимостей.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.CollectImportedDependenciesAttribute.version">
      <summary>
        <para>Версия импортированного средства получения зависимостей.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.CollectImportedDependenciesAttribute.#ctor(System.Type,System.UInt32)">
      <summary>
        <para>Используйте атрибут CollectImportedDependencies для объявления getters для импортированных зависимостей.</para>
      </summary>
      <param name="importerType">Тип импортера, для которого getter вызывается AssetDatabase.</param>
      <param name="version">Версия импортированного средства получения зависимостей.</param>
    </member>
    <member name="T:UnityEditor.AssetImporters.FBXMaterialDescriptionPreprocessor">
      <summary>
        <para>Это реализация по умолчанию для AssetPostProcessor.OnPreprocessRialMatescription, эта реализация преобразует описания материалов, импортированные из ресурсов FBX, в материалы для внутреннего конвейера отрисовки.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AssetImporters.LightDescription">
      <summary>
        <para>Представляет легкую информацию из импортированного файла.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.LightDescription.#ctor">
      <summary>
        <para>Инициализирует и возвращает экземпляр объекта LightDescription.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.LightDescription.Dispose">
      <summary>
        <para>Удаляет экземпляр LightDescription. Это очищает все ресурсы, которые использовал экземпляр.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.LightDescription.GetFloatPropertyNames(System.Collections.Generic.List`1&lt;System.String&gt;)">
      <summary>
        <para>Извлекает имена свойств типа float для этого индикатора.</para>
      </summary>
      <param name="names">Список полученных имен свойств.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.LightDescription.GetIntPropertyNames(System.Collections.Generic.List`1&lt;System.String&gt;)">
      <summary>
        <para>Извлекает имена свойств типа int для этого источника света.</para>
      </summary>
      <param name="names">Список полученных имен свойств.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.LightDescription.GetStringPropertyNames(System.Collections.Generic.List`1&lt;System.String&gt;)">
      <summary>
        <para>Извлекает имена свойств типа string для этого индикатора.</para>
      </summary>
      <param name="names">Список полученных имен свойств.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.LightDescription.GetVector4PropertyNames(System.Collections.Generic.List`1&lt;System.String&gt;)">
      <summary>
        <para>Извлекает имена свойств типа Vector4 для этого источника света.</para>
      </summary>
      <param name="names">Список полученных имен свойств.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.LightDescription.HasAnimationCurve(System.String)">
      <summary>
        <para>Проверяет, анимировано ли свойство light в любом объекте AnimationClip.</para>
      </summary>
      <param name="propertyName">Имя свойства light.</param>
      <returns>
        <para>Возвращает значение true, если свойство light анимировано. В противном случае возвращает значение false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.LightDescription.HasAnimationCurveInClip(System.String,System.String)">
      <summary>
        <para>Проверяет, анимировано ли свойство light в определенном Объекте AnimationClip.</para>
      </summary>
      <param name="propertyName">Имя анимированного свойства света.</param>
      <param name="clipName">Имя animationClip.</param>
      <returns>
        <para>Возвращает значение true, если свойство light анимировано. В противном случае возвращает значение false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.LightDescription.TryGetAnimationCurve(System.String,System.String,UnityEngine.AnimationCurve&amp;)">
      <summary>
        <para>Извлекает AnimationCurve для свойства анимированного света в определенном объекте AnimationClip.</para>
      </summary>
      <param name="clipName">Имя animationClip.</param>
      <param name="propertyName">Имя свойства light.</param>
      <param name="value">Полученный объект AnimationCurve, если он существует для указанного свойства light.</param>
      <returns>
        <para>Возвращает значение true, если свойство light анимировано. В противном случае возвращает значение false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.LightDescription.TryGetProperty(System.String,System.Single&amp;)">
      <summary>
        <para>Извлекает значение заданного свойства light.</para>
      </summary>
      <param name="propertyName">Название свойства.</param>
      <param name="value">Полученное значение.</param>
      <returns>
        <para>Возвращает значение true, если свойство существует на индикаторе. В противном случае возвращает значение false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.LightDescription.TryGetProperty(System.String,UnityEngine.Vector4&amp;)">
      <summary>
        <para>Извлекает значение заданного свойства light.</para>
      </summary>
      <param name="propertyName">Название свойства.</param>
      <param name="value">Полученное значение.</param>
      <returns>
        <para>Возвращает значение true, если свойство существует на индикаторе. В противном случае возвращает значение false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.LightDescription.TryGetProperty(System.String,System.String&amp;)">
      <summary>
        <para>Извлекает значение заданного свойства light.</para>
      </summary>
      <param name="propertyName">Название свойства.</param>
      <param name="value">Полученное значение.</param>
      <returns>
        <para>Возвращает значение true, если свойство существует на индикаторе. В противном случае возвращает значение false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.LightDescription.TryGetProperty(System.String,System.Int32&amp;)">
      <summary>
        <para>Извлекает значение заданного свойства light.</para>
      </summary>
      <param name="propertyName">Название свойства.</param>
      <param name="value">Полученное значение.</param>
      <returns>
        <para>Возвращает значение true, если свойство существует на индикаторе. В противном случае возвращает значение false.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.AssetImporters.MaterialDescription">
      <summary>
        <para>Содержит набор типизированных свойств для описания текстурных входных данных объекта MaterialDescription.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.MaterialDescription.materialName">
      <summary>
        <para>Название материала</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.MaterialDescription.GetFloatPropertyNames(System.Collections.Generic.List`1&lt;System.String&gt;)">
      <summary>
        <para>Извлекает имена свойств типа float для этого материала.</para>
      </summary>
      <param name="names">Список полученных имен свойств.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.MaterialDescription.GetStringPropertyNames(System.Collections.Generic.List`1&lt;System.String&gt;)">
      <summary>
        <para>Извлекает имена свойств строки типа для этого материала.</para>
      </summary>
      <param name="names">Список полученных имен свойств.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.MaterialDescription.GetTexturePropertyNames(System.Collections.Generic.List`1&lt;System.String&gt;)">
      <summary>
        <para>Извлекает имена свойств типа TextureDescription для этого материала.</para>
      </summary>
      <param name="names">Список полученных имен свойств.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.MaterialDescription.GetVector4PropertyNames(System.Collections.Generic.List`1&lt;System.String&gt;)">
      <summary>
        <para>Извлекает имена свойств типа Vector4 для этого материала.</para>
      </summary>
      <param name="names">Список полученных имен свойств.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.MaterialDescription.HasAnimationCurve(System.String)">
      <summary>
        <para>Проверяет, анимировано ли свойство материала в любом объекте AnimationClip.</para>
      </summary>
      <param name="propertyName">Имя свойства материала.</param>
      <returns>
        <para>Возвращает значение true, если свойство material анимировано. В противном случае возвращает значение false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.MaterialDescription.HasAnimationCurveInClip(System.String,System.String)">
      <summary>
        <para>Проверяет, анимировано ли свойство материала в определенном объекте AnimationClip.</para>
      </summary>
      <param name="propertyName">Имя анимированного свойства материала.</param>
      <param name="clipName">Имя animationClip.</param>
      <returns>
        <para>Возвращает значение true, если свойство material анимировано. В противном случае возвращает значение false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.MaterialDescription.TryGetAnimationCurve(System.String,System.String,UnityEngine.AnimationCurve&amp;)">
      <summary>
        <para>Извлекает AnimationCurve для свойства анимированного материала в определенном объекте AnimationClip.</para>
      </summary>
      <param name="clipName">Имя animationClip.</param>
      <param name="propertyName">Имя свойства материала.</param>
      <param name="value">Полученная AnimationCurve, если она существует для указанного свойства материала.</param>
      <returns>
        <para>Возвращает значение true, если свойство material анимировано. В противном случае возвращает значение false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.MaterialDescription.TryGetProperty(System.String,System.Single&amp;)">
      <summary>
        <para>Извлекает значение указанного свойства материала.</para>
      </summary>
      <param name="propertyName">Название свойства.</param>
      <param name="value">Полученное значение.</param>
      <returns>
        <para>Возвращает значение true, если свойство существует в материале. В противном случае возвращает значение false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.MaterialDescription.TryGetProperty(System.String,UnityEngine.Vector4&amp;)">
      <summary>
        <para>Извлекает значение указанного свойства материала.</para>
      </summary>
      <param name="propertyName">Название свойства.</param>
      <param name="value">Полученное значение.</param>
      <returns>
        <para>Возвращает значение true, если свойство существует в материале. В противном случае возвращает значение false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.MaterialDescription.TryGetProperty(System.String,System.String&amp;)">
      <summary>
        <para>Извлекает значение указанного свойства материала.</para>
      </summary>
      <param name="propertyName">Название свойства.</param>
      <param name="value">Полученное значение.</param>
      <returns>
        <para>Возвращает значение true, если свойство существует в материале. В противном случае возвращает значение false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetImporters.MaterialDescription.TryGetProperty(System.String,UnityEditor.AssetImporters.TexturePropertyDescription&amp;)">
      <summary>
        <para>Извлекает значение указанного свойства материала.</para>
      </summary>
      <param name="propertyName">Название свойства.</param>
      <param name="value">Полученное значение.</param>
      <returns>
        <para>Возвращает значение true, если свойство существует в материале. В противном случае возвращает значение false.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.AssetImporters.ScriptedImporter">
      <summary>
        <para>Абстрактный базовый класс для пользовательских импортеров активов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.ScriptedImporter.OnImportAsset(UnityEditor.AssetImporters.AssetImportContext)">
      <summary>
        <para>Этот метод должен переопределяться производным классом и вызывается конвейером Asset для импорта файлов.</para>
      </summary>
      <param name="ctx">Этот аргумент содержит всю контекстную информацию, необходимую для обработки события импорта, а также используется пользовательским импортером для хранения результирующего ресурса Unity.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.ScriptedImporter.SupportsRemappedAssetType(System.Type)">
      <summary>
        <para>Переопределите этот метод, если ScriptedImporter поддерживает переназначение определенных типов ресурсов.</para>
      </summary>
      <param name="type">Тип проверяемого актива.</param>
      <returns>
        <para>Возвращает значение true, если средство импорта поддерживает переназначение заданного типа. В противном случае возвращает значение false.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.AssetImporters.ScriptedImporterAttribute">
      <summary>
        <para>Атрибут Class, используемый для регистрации пользовательского средства импорта ресурсов, производного от ScriptedImporter, в конвейере импорта активов Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.ScriptedImporterAttribute.fileExtensions">
      <summary>
        <para>Список расширений имен файлов (не включая начальный символ точки), обрабатываемых обработчиком скриптового импортера.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.ScriptedImporterAttribute.importQueuePriority">
      <summary>
        <para>Позволяет контролировать порядок импорта активов в зависимости от типа. Положительные значения задерживают обработку исходных файлов ресурсов, в то время как отрицательные значения помещают их ранее в процессе импорта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.ScriptedImporterAttribute.overrideFileExtensions">
      <summary>
        <para>Список расширений имен файлов (не включая начальный символ точки), которые может обрабатывать обработчик сценариев в дополнение к расширениям имен файлов по умолчанию.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.ScriptedImporterAttribute.version">
      <summary>
        <para>Номер версии импортера, используемый уровнем импорта для обнаружения новой версии средства импорта и запуска повторного импорта при возникновении таких событий, чтобы применить последние изменения, внесенные в скриптовый imrpoter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetImporters.ScriptedImporterAttribute.AllowCaching">
      <summary>
        <para>Включите загрузку и загрузку с сервера кэша.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetImporters.ScriptedImporterAttribute.AutoSelect">
      <summary>
        <para>Определяет, будет ли импортер автоматически выбран для указанных расширений.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.ScriptedImporterAttribute.#ctor(System.Int32,System.String)">
      <summary>
        <para>Атрибут ScriptedImporter используется для регистрации пользовательского средства импорта, производного от ScriptedImporter, в конвейере импорта активов Unity.</para>
      </summary>
      <param name="version">Число, используемое конвейером импорта для обнаружения новых версий скрипта импортера. Изменение этого номера приведет к повторному импорту всех ресурсов, соответствующих перечисленным расширениям.</param>
      <param name="exts">Список расширений имен файлов (не включая начальный символ точки), обрабатываемых обработчиком скриптового импортера.</param>
      <param name="ext">Одно расширение имени файла (не включая начальный символ точки), которое обрабатывает обработчик сценария импортера.</param>
      <param name="importQueueOffset">Дает контроль над порядком импорта активов на основе типов. Положительные значения задерживают обработку исходных файлов ресурсов, в то время как отрицательные значения помещают их ранее в процессе импорта.</param>
      <param name="overrideExts">Список расширений имен файлов (не включая начальный символ точки), которые может обрабатывать обработчик сценариев в дополнение к расширениям имен файлов по умолчанию.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.ScriptedImporterAttribute.#ctor(System.Int32,System.String,System.Int32)">
      <summary>
        <para>Атрибут ScriptedImporter используется для регистрации пользовательского средства импорта, производного от ScriptedImporter, в конвейере импорта активов Unity.</para>
      </summary>
      <param name="version">Число, используемое конвейером импорта для обнаружения новых версий скрипта импортера. Изменение этого номера приведет к повторному импорту всех ресурсов, соответствующих перечисленным расширениям.</param>
      <param name="exts">Список расширений имен файлов (не включая начальный символ точки), обрабатываемых обработчиком скриптового импортера.</param>
      <param name="ext">Одно расширение имени файла (не включая начальный символ точки), которое обрабатывает обработчик сценария импортера.</param>
      <param name="importQueueOffset">Дает контроль над порядком импорта активов на основе типов. Положительные значения задерживают обработку исходных файлов ресурсов, в то время как отрицательные значения помещают их ранее в процессе импорта.</param>
      <param name="overrideExts">Список расширений имен файлов (не включая начальный символ точки), которые может обрабатывать обработчик сценариев в дополнение к расширениям имен файлов по умолчанию.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.ScriptedImporterAttribute.#ctor(System.Int32,System.String[])">
      <summary>
        <para>Атрибут ScriptedImporter используется для регистрации пользовательского средства импорта, производного от ScriptedImporter, в конвейере импорта активов Unity.</para>
      </summary>
      <param name="version">Число, используемое конвейером импорта для обнаружения новых версий скрипта импортера. Изменение этого номера приведет к повторному импорту всех ресурсов, соответствующих перечисленным расширениям.</param>
      <param name="exts">Список расширений имен файлов (не включая начальный символ точки), обрабатываемых обработчиком скриптового импортера.</param>
      <param name="ext">Одно расширение имени файла (не включая начальный символ точки), которое обрабатывает обработчик сценария импортера.</param>
      <param name="importQueueOffset">Дает контроль над порядком импорта активов на основе типов. Положительные значения задерживают обработку исходных файлов ресурсов, в то время как отрицательные значения помещают их ранее в процессе импорта.</param>
      <param name="overrideExts">Список расширений имен файлов (не включая начальный символ точки), которые может обрабатывать обработчик сценариев в дополнение к расширениям имен файлов по умолчанию.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.ScriptedImporterAttribute.#ctor(System.Int32,System.String[],System.String[])">
      <summary>
        <para>Атрибут ScriptedImporter используется для регистрации пользовательского средства импорта, производного от ScriptedImporter, в конвейере импорта активов Unity.</para>
      </summary>
      <param name="version">Число, используемое конвейером импорта для обнаружения новых версий скрипта импортера. Изменение этого номера приведет к повторному импорту всех ресурсов, соответствующих перечисленным расширениям.</param>
      <param name="exts">Список расширений имен файлов (не включая начальный символ точки), обрабатываемых обработчиком скриптового импортера.</param>
      <param name="ext">Одно расширение имени файла (не включая начальный символ точки), которое обрабатывает обработчик сценария импортера.</param>
      <param name="importQueueOffset">Дает контроль над порядком импорта активов на основе типов. Положительные значения задерживают обработку исходных файлов ресурсов, в то время как отрицательные значения помещают их ранее в процессе импорта.</param>
      <param name="overrideExts">Список расширений имен файлов (не включая начальный символ точки), которые может обрабатывать обработчик сценариев в дополнение к расширениям имен файлов по умолчанию.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.ScriptedImporterAttribute.#ctor(System.Int32,System.String[],System.Int32)">
      <summary>
        <para>Атрибут ScriptedImporter используется для регистрации пользовательского средства импорта, производного от ScriptedImporter, в конвейере импорта активов Unity.</para>
      </summary>
      <param name="version">Число, используемое конвейером импорта для обнаружения новых версий скрипта импортера. Изменение этого номера приведет к повторному импорту всех ресурсов, соответствующих перечисленным расширениям.</param>
      <param name="exts">Список расширений имен файлов (не включая начальный символ точки), обрабатываемых обработчиком скриптового импортера.</param>
      <param name="ext">Одно расширение имени файла (не включая начальный символ точки), которое обрабатывает обработчик сценария импортера.</param>
      <param name="importQueueOffset">Дает контроль над порядком импорта активов на основе типов. Положительные значения задерживают обработку исходных файлов ресурсов, в то время как отрицательные значения помещают их ранее в процессе импорта.</param>
      <param name="overrideExts">Список расширений имен файлов (не включая начальный символ точки), которые может обрабатывать обработчик сценариев в дополнение к расширениям имен файлов по умолчанию.</param>
    </member>
    <member name="M:UnityEditor.AssetImporters.ScriptedImporterAttribute.#ctor(System.Int32,System.String[],System.String[],System.Int32)">
      <summary>
        <para>Атрибут ScriptedImporter используется для регистрации пользовательского средства импорта, производного от ScriptedImporter, в конвейере импорта активов Unity.</para>
      </summary>
      <param name="version">Число, используемое конвейером импорта для обнаружения новых версий скрипта импортера. Изменение этого номера приведет к повторному импорту всех ресурсов, соответствующих перечисленным расширениям.</param>
      <param name="exts">Список расширений имен файлов (не включая начальный символ точки), обрабатываемых обработчиком скриптового импортера.</param>
      <param name="ext">Одно расширение имени файла (не включая начальный символ точки), которое обрабатывает обработчик сценария импортера.</param>
      <param name="importQueueOffset">Дает контроль над порядком импорта активов на основе типов. Положительные значения задерживают обработку исходных файлов ресурсов, в то время как отрицательные значения помещают их ранее в процессе импорта.</param>
      <param name="overrideExts">Список расширений имен файлов (не включая начальный символ точки), которые может обрабатывать обработчик сценариев в дополнение к расширениям имен файлов по умолчанию.</param>
    </member>
    <member name="T:UnityEditor.AssetImporters.ScriptedImporterEditor">
      <summary>
        <para>Редактор по умолчанию для исходных ресурсов, обрабатываемых средствами импорта сценариев.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AssetImporters.SketchupMaterialDescriptionPreprocessor">
      <summary>
        <para>Это реализация по умолчанию для AssetPostProcessor.OnPreprocessMaterialDescription, эта реализация преобразует описания материалов, импортированные из ресурсов Sketchup, в материалы для внутреннего конвейера отрисовки.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AssetImporters.SourceTextureInformation">
      <summary>
        <para>Информация об исходных текстурных данных.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.SourceTextureInformation.containsAlpha">
      <summary>
        <para>Определяет, присутствует ли альфа-канал в данных изображения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.SourceTextureInformation.hdr">
      <summary>
        <para>Определяет, содержит ли изображение данные HDR.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.SourceTextureInformation.height">
      <summary>
        <para>Высота данных изображения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.SourceTextureInformation.width">
      <summary>
        <para>Ширина данных изображения.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AssetImporters.SpriteImportData">
      <summary>
        <para>Структура, представляющая способ создания ресурса Sprite при вызове TextureGenerator.GenerateTexture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.SpriteImportData.alignment">
      <summary>
        <para>Значение сводки, представленное spriteAlignment.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.SpriteImportData.border">
      <summary>
        <para>Значение границы для сгенерированного sprite.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.SpriteImportData.name">
      <summary>
        <para>Имя сгенерированного спрайта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.SpriteImportData.outline">
      <summary>
        <para>Создание sprite Asset использует эту структуру при создании сетки для sprite. Если это не указано, для определения детали сетки будет использоваться SpriteImportData.tesselationDetail.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.SpriteImportData.pivot">
      <summary>
        <para>Сводное значение, представленное в Vector2.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.SpriteImportData.rect">
      <summary>
        <para>Положение и размер спрайта в заданной текстуре.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.SpriteImportData.spriteID">
      <summary>
        <para>Идентификатор, присвоенный спрайту. Используйте это, чтобы определить, какие данные использовались для создания этого sprite.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.SpriteImportData.tessellationDetail">
      <summary>
        <para>Управляет детализацией генерации сетки. Это значение будет проигнорировано, если предоставлен SpriteImportData.ouline.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AssetImporters.TextureGenerationOutput">
      <summary>
        <para>Структура, представляющая результат вызова TextureGenerator.GenerateTexture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.TextureGenerationOutput.importInspectorWarnings">
      <summary>
        <para>Предупреждения, которые должны отображаться в инспекторе после создания текстуры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.TextureGenerationOutput.importWarnings">
      <summary>
        <para>TextureGenerator.GenerateTexture сообщает о предупреждениях при создании texture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.TextureGenerationOutput.output">
      <summary>
        <para>Это текстура, созданная TextureGenerator.GenerateTexture на основе аргумента colorBuffer, переданного этой функции.                 Фактический тип текстуры (2D, 3D, cubemap,..) зависит от настроек TextureImporterSettings.textureShape генератора.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.TextureGenerationOutput.sprites">
      <summary>
        <para>Спрайты, созданные TextureGenerator.GenerateTexture из TextureGenerationSettings.spriteSheetData.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.TextureGenerationOutput.texture">
      <summary>
        <para>Это Texture2D, созданный TextureGenerator.GenerateTexture на основе аргумента colorBuffer, переданного этой функции.                 Если генератор настроен на создание не-2D текстуры (cubemap, 3D, ...), этот элемент всегда будет равен null. Чтобы получить результат для произвольного типа текстуры, используйте свойство TextureGenerationOutput.output.                 Мы рекомендуем всегда использовать TextureGenerationOutput.output, так как свойство texture будет устаревшим/удаленным в будущем.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.TextureGenerationOutput.thumbNail">
      <summary>
        <para>Эскиз версии сгенерированной текстуры. Это может быть значение null в зависимости от настроек импорта. Например, кубемапы не возвращают эскиз.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AssetImporters.TextureGenerationSettings">
      <summary>
        <para>Представляет способ создания текстуры при вызове TextureGenerator.GenerateTexture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.TextureGenerationSettings.assetPath">
      <summary>
        <para>Путь, по которому будет размещен ресурс.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.TextureGenerationSettings.enablePostProcessor">
      <summary>
        <para>Если задано значение true, хуки обработчика AssetPostprocessor будут вызываться во время создания текстур. Следующие параметры будут применяться для всех обработчиков AssetPostprocessors, запущенных через TextureGenerator.GenerateTexture — при вызове постпроцессора AssetPostprocessor.assetPath будет установлено значение assetPath в этой структуре.                 - Значение AssetPostprocessor.context будет равно null.                 - Только OnPostprocessTexture, OnPostprocessCubemap, ... называется. Функции OnPreprocessTexture не вызываются.                 </para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.TextureGenerationSettings.platformSettings">
      <summary>
        <para>Настройки платформы для генерации текстуры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.TextureGenerationSettings.qualifyForSpritePacking">
      <summary>
        <para>Указывает, может ли сгенерированный спрайт использоваться для упаковки атласа.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.TextureGenerationSettings.secondarySpriteTextures">
      <summary>
        <para>Вторичные текстуры для сгенерированных спрайтов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.TextureGenerationSettings.sourceTextureInformation">
      <summary>
        <para>Формат текстуры для данных изображения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.TextureGenerationSettings.spriteImportData">
      <summary>
        <para>Данные создания sprite Asset.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.TextureGenerationSettings.spritePackingTag">
      <summary>
        <para>Тег, используемый для упаковки Sprite.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetImporters.TextureGenerationSettings.textureImporterSettings">
      <summary>
        <para>Настройки для генерации текстур.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.TextureGenerationSettings.#ctor(UnityEditor.TextureImporterType)">
      <summary>
        <para>Конструктор инициализируется до наиболее распространенного значения на основе передаваемого tetureImporterType.</para>
      </summary>
      <param name="type">Тип текстуры.</param>
    </member>
    <member name="T:UnityEditor.AssetImporters.TextureGenerator">
      <summary>
        <para>Экспериментальные утилиты для генерации Texture2D.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetImporters.TextureGenerator.GenerateTexture(UnityEditor.AssetImporters.TextureGenerationSettings,Unity.Collections.NativeArray`1&lt;UnityEngine.Color32&gt;)">
      <summary>
        <para>Создает ресурсы Texture2D и Sprite на основе предоставленных настроек.</para>
      </summary>
      <param name="settings">Настройки используются для генерации Texture2D и Sprite.</param>
      <param name="colorBuffer">Цветовой буфер для генерации Texture2D и Sprite.</param>
      <returns>
        <para>Результат генерации.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.AssetImporters.TexturePropertyDescription">
      <summary>
        <para>Содержит набор типизированных свойств для описания текстурных входных данных объекта MaterialDescription.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetImporters.TexturePropertyDescription.offset">
      <summary>
        <para>Смещение УФ-координат (x,y).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetImporters.TexturePropertyDescription.path">
      <summary>
        <para>Абсолютный путь к ресурсу текстуры.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetImporters.TexturePropertyDescription.relativePath">
      <summary>
        <para>Путь к ресурсу текстуры относительно папки Asset.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetImporters.TexturePropertyDescription.scale">
      <summary>
        <para>Масштабирование УФ-координат (x,y).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetImporters.TexturePropertyDescription.texture">
      <summary>
        <para>Ссылка на ресурс текстуры.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AssetImporters.ThreeDSMaterialDescriptionPreprocessor">
      <summary>
        <para>Это реализация по умолчанию для AssetPostProcessor.OnPreprocessMaterialDescription, эта реализация преобразует описания материалов, импортированные из .3DS ресурсов, в материалы для внутреннего конвейера отрисовки.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AssetModificationProcessor">
      <summary>
        <para>AssetModificationProcessor позволяет подключаться к сохранению сериализованных ресурсов и сцен, которые редактируются внутри Unity.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AssetMoveResult">
      <summary>
        <para>Результат перемещения актива</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetMoveResult.DidMove">
      <summary>
        <para>Сообщает внутренней реализации, что сценарий физически переместил ресурс на диск.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetMoveResult.DidNotMove">
      <summary>
        <para>Сообщает внутренней реализации, что ресурс не был физически перемещен на диск сценарием.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetMoveResult.FailedMove">
      <summary>
        <para>Сообщает внутренней реализации, что сценарию не удалось переместить ресурсы.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AssetPathToGUIDOptions">
      <summary>
        <para>Путь ресурса к параметрам GUID.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetPathToGUIDOptions.IncludeRecentlyDeletedAssets">
      <summary>
        <para>Возвращает идентификатор GUID, если ресурс существует или недавно был удален.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetPathToGUIDOptions.OnlyExistingAssets">
      <summary>
        <para>Возвращает идентификатор GUID только в том случае, если ресурс существует на диске.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AssetPipelineMode">
      <summary>
        <para>Выбирает режим Assetpipeline для использования.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetPipelineMode.Version1">
      <summary>
        <para>Используйте его, если вы хотите использовать assetpipeline версии 1.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AssetPipelineMode.Version2">
      <summary>
        <para>Используйте его, если вы хотите использовать assetpipeline версии 2.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AssetPostprocessor">
      <summary>
        <para>AssetPostprocessor позволяет подключаться к конвейеру импорта и запускать сценарии до или после импорта ресурсов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetPostprocessor.assetImporter">
      <summary>
        <para>Ссылка на импортера активов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetPostprocessor.assetPath">
      <summary>
        <para>Путь к импортируемому ресурсу.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetPostprocessor.context">
      <summary>
        <para>Контекст импорта.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetPostprocessor.GetPostprocessOrder">
      <summary>
        <para>Переопределите порядок обработки средств импорта.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetPostprocessor.GetVersion">
      <summary>
        <para>Возвращает версию постпроцессора ресурса.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetPostprocessor.LogError(System.String)">
      <summary>
        <para>Записывает в консоль сообщение об ошибке импорта.</para>
      </summary>
      <param name="warning">
      </param>
      <param name="context">
      </param>
    </member>
    <member name="M:UnityEditor.AssetPostprocessor.LogError(System.String,UnityEngine.Object)">
      <summary>
        <para>Записывает в консоль сообщение об ошибке импорта.</para>
      </summary>
      <param name="warning">
      </param>
      <param name="context">
      </param>
    </member>
    <member name="M:UnityEditor.AssetPostprocessor.LogWarning(System.String)">
      <summary>
        <para>Регистрирует предупреждение об импорте в консоль.</para>
      </summary>
      <param name="warning">
      </param>
      <param name="context">
      </param>
    </member>
    <member name="M:UnityEditor.AssetPostprocessor.LogWarning(System.String,UnityEngine.Object)">
      <summary>
        <para>Регистрирует предупреждение об импорте в консоль.</para>
      </summary>
      <param name="warning">
      </param>
      <param name="context">
      </param>
    </member>
    <member name="T:UnityEditor.AssetPreview">
      <summary>
        <para>Утилита для получения предварительного просмотра ресурсов по идентификатору экземпляра ресурсов см. раздел AssetPreview.GetAssetPreview. Поскольку предварительные просмотры загружаются асинхронно, предоставляются методы для запроса, если все предварительные просмотры были полностью загружены, см. раздел AssetPreview.IsLoadingAssetPreviews. Загруженные предварительные просмотры хранятся в кэше, размер кэша можно контролировать, вызвав [AssetPreview.SetPreviewTextureCacheSize].</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetPreview.GetAssetPreview(UnityEngine.Object)">
      <summary>
        <para>Возвращает текстуру предварительного просмотра для ресурса.</para>
      </summary>
      <param name="asset">
      </param>
    </member>
    <member name="M:UnityEditor.AssetPreview.GetAssetPreview">
      <summary>
        <para>Возвращает текстуру предварительного просмотра для идентификатора экземпляра ресурса.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetPreview.GetMiniThumbnail(UnityEngine.Object)">
      <summary>
        <para>Возвращает эскиз объекта (например, тот, который отображается в представлении проекта).</para>
      </summary>
      <param name="obj">
      </param>
    </member>
    <member name="M:UnityEditor.AssetPreview.GetMiniTypeThumbnail(System.Type)">
      <summary>
        <para>Возвращает эскиз для типа.</para>
      </summary>
      <param name="type">
      </param>
    </member>
    <member name="M:UnityEditor.AssetPreview.GetMiniTypeThumbnail">
      <summary>
        <para>Возвращает эскиз типа объекта.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetPreview.IsLoadingAssetPreview(System.Int32)">
      <summary>
        <para>Предварительный просмотр загрузки является асинхронным, поэтому полезно знать, находится ли конкретный предварительный просмотр ресурса в процессе загрузки, чтобы клиентский код, например, мог перерисовываться в ожидании завершения загрузки.</para>
      </summary>
      <param name="instanceID">Идентификатор экземпляра набора, для которого была запрошена предварительная версия: AssetPreview.GetAssetPreview().</param>
    </member>
    <member name="M:UnityEditor.AssetPreview.IsLoadingAssetPreviews">
      <summary>
        <para>Загрузка предварительных просмотров является асинхронной, поэтому полезно знать, находятся ли какие-либо запрошенные предварительные просмотры в процессе загрузки, чтобы клиентский код, например, мог перерисовываться во время ожидания.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetPreview.SetPreviewTextureCacheSize(System.Int32)">
      <summary>
        <para>Задайте для кэша предварительного просмотра ресурсов размер, который может одновременно вмещать все видимые предварительные просмотры на экране.</para>
      </summary>
      <param name="size">Количество предварительных просмотров, которые могут быть загружены в кэш перед выгрузкой наименее часто используемых предварительных просмотров.</param>
    </member>
    <member name="T:UnityEditor.AssetSettingsProvider">
      <summary>
        <para>AssetSettingsProvider — это специализация класса SettingsProvider, который преобразует устаревшие параметры в унифицированные параметры. К устаревшим параметрам относятся все параметры, которые использовали инспектор для самостоятельного изменения, например файлы *.asset в папке ProjectSettings. Под капотом AssetSettingsProvider создает редактор для определенных ресурсов и создает пользовательский интерфейс для окна Параметры, обернув функцию Editor.OnInspectorGUI.  Внутренне мы используем этот класс для обертывания существующих настроек.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AssetSettingsProvider.settingsEditor">
      <summary>
        <para>Редактор, предоставляющий пользовательский интерфейс для изменения параметров.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetSettingsProvider.CreateProviderFromAssetPath(System.String,System.String,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)">
      <summary>
        <para>Создайте AssetSettingsProvider из пути к ресурсу.</para>
      </summary>
      <param name="settingsWindowPath">Путь к настройкам в окне Настройка. Использует '/' в качестве разделителя. Последний маркер становится меткой параметров, если она не указана.</param>
      <param name="assetPath">Путь к ресурсу на диске.</param>
      <param name="keywords">Список ключевых слов для сравнения с тем, что ищет пользователь. Когда пользователь вводит значения в поле поиска в окне Параметры, SettingsProvider.HasSearchInterest пытается сопоставить эти ключевые слова с этим списком.</param>
      <returns>
        <para>Возвращает объект AssetSettingsProvider, который создаст редактор для данного конкретного ресурса.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetSettingsProvider.CreateProviderFromObject(System.String,UnityEngine.Object,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)">
      <summary>
        <para>Создайте AssetSettingsProvider из объекта параметров.</para>
      </summary>
      <param name="settingsWindowPath">Путь к настройкам в окне Настройка. Использует '/' в качестве разделителя. Последний маркер становится меткой параметров, если она не указана.</param>
      <param name="settingsObj">Параметры объекта для отображения</param>
      <param name="keywords">Список ключевых слов для сравнения с тем, что ищет пользователь. Когда пользователь вводит значения в поле поиска в окне Параметры, SettingsProvider.HasSearchInterest пытается сопоставить эти ключевые слова с этим списком.</param>
      <returns>
        <para>Возвращает объект AssetSettingsProvider, который создаст редактор для данного конкретного ресурса.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetSettingsProvider.CreateProviderFromResourcePath(System.String,System.String,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)">
      <summary>
        <para>Создайте AssetSettingsProvider из пути к ресурсу ресурса.</para>
      </summary>
      <param name="settingsWindowPath">Путь к настройкам в окне Настройка. Использует '/' в качестве разделителя. Последний маркер становится меткой параметров, если она не указана.</param>
      <param name="resourcePath">Путь к ресурсу на диске.</param>
      <param name="keywords">Список ключевых слов для сравнения с тем, что ищет пользователь. Когда пользователь вводит значения в поле поиска в окне Параметры, SettingsProvider.HasSearchInterest пытается сопоставить эти ключевые слова с этим списком.</param>
      <returns>
        <para>Возвращает объект AssetSettingsProvider, который создаст редактор для данного конкретного ресурса.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AssetSettingsProvider.#ctor(System.String,System.Func`1&lt;UnityEditor.Editor&gt;,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)">
      <summary>
        <para>Создает новый AssetSettingsProvider, чтобы можно было обернуть устаревшие параметры (то есть параметры, которые ранее отображались в инспекторе).</para>
      </summary>
      <param name="settingsWindowPath">Путь к настройкам в окне Настройка. Использует '/' в качестве разделителя. Последний маркер становится меткой параметров, если она не указана.</param>
      <param name="editorCreator">Функтор создает редактор, способный изменять настройки.</param>
      <param name="keywords">Список ключевых слов для сравнения с тем, что ищет пользователь. Когда пользователь вводит значения в поле поиска в окне Параметры, SettingsProvider.HasSearchInterest пытается сопоставить эти ключевые слова с этим списком.</param>
      <param name="settingsGetter">Функтор, создающий или получающий объект настроек.</param>
    </member>
    <member name="M:UnityEditor.AssetSettingsProvider.#ctor(System.String,System.Func`1&lt;UnityEngine.Object&gt;)">
      <summary>
        <para>Создает новый AssetSettingsProvider, чтобы можно было обернуть устаревшие параметры (то есть параметры, которые ранее отображались в инспекторе).</para>
      </summary>
      <param name="settingsWindowPath">Путь к настройкам в окне Настройка. Использует '/' в качестве разделителя. Последний маркер становится меткой параметров, если она не указана.</param>
      <param name="editorCreator">Функтор создает редактор, способный изменять настройки.</param>
      <param name="keywords">Список ключевых слов для сравнения с тем, что ищет пользователь. Когда пользователь вводит значения в поле поиска в окне Параметры, SettingsProvider.HasSearchInterest пытается сопоставить эти ключевые слова с этим списком.</param>
      <param name="settingsGetter">Функтор, создающий или получающий объект настроек.</param>
    </member>
    <member name="M:UnityEditor.AssetSettingsProvider.OnActivate(System.String,UnityEngine.UIElements.VisualElement)">
      <summary>
        <para>Переопределяет параметрыProvider.OnActivate для этого ресурсаSettingsProvider.</para>
      </summary>
      <param name="searchContext">Контекст поиска в поле поиска в окне Параметры.</param>
      <param name="rootElement">Корень дерева UIElements. При добавлении в этот корневой каталог SettingsProvider использует UIElements вместо вызова SettingsProvider.OnGUI для построения пользовательского интерфейса. Если вы не добавляете в этот VisualElement, необходимо использовать IMGUI для создания пользовательского интерфейса.</param>
    </member>
    <member name="M:UnityEditor.AssetSettingsProvider.OnDeactivate">
      <summary>
        <para>Переопределяет параметрыProvider.OnDeactivate для этого ресурсаSettingsProvider.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetSettingsProvider.OnFooterBarGUI">
      <summary>
        <para>Переопределяет SettingsProvider.OnFooterBarGUI для этого AssetSettingsProvider.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AssetSettingsProvider.OnGUI(System.String)">
      <summary>
        <para>Переопределяет SettingsProvider.OnGUI для этого AssetSettingsProvider.</para>
      </summary>
      <param name="searchContext">Поиск контекста для окна Параметры. Используется для отображения или скрытия соответствующих свойств.</param>
    </member>
    <member name="M:UnityEditor.AssetSettingsProvider.OnTitleBarGUI">
      <summary>
        <para>Переопределяет SettingsProvider.OnTitleBarGUI для этого AssetSettingsProvider. Это рисует панель кнопок, которая содержит кнопки «Добавить в пресет» и «Справка».</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AudioCurveRendering">
      <summary>
        <para>Функция рендеринга сглаженных кривых, используемая аудиоинструментами в редакторе.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AudioCurveRendering.AudioCurveAndColorEvaluator">
      <summary>
        <para>Функция оценки кривой, которая позволяет одновременно оценивать значение кривой y и цвет кривой в этой точке.</para>
      </summary>
      <param name="x">Нормализованное x-положение в диапазоне [0; 1], в котором должна быть оценена кривая.</param>
      <param name="col">Цвет кривой в оцениваемой точке.</param>
    </member>
    <member name="T:UnityEditor.AudioCurveRendering.AudioCurveEvaluator">
      <summary>
        <para>Функция вычисления кривой, используемая для вычисления кривой y-значения и в заданной точке.</para>
      </summary>
      <param name="x">Нормализованное x-положение в диапазоне [0; 1], в котором должна быть оценена кривая.</param>
    </member>
    <member name="T:UnityEditor.AudioCurveRendering.AudioMinMaxCurveAndColorEvaluator">
      <summary>
        <para>Функция оценки кривых, позволяющая одновременно оценивать min- и max-кривые. Возвращаемые значения minValue и maxValue должны находиться в диапазоне [-1; 1], а значение 0 соответствует вертикальному центру втягиваемого прямоугольника. Значения за пределами этого диапазона будут зажаты. Дополнительно оценивается цвет кривой в этой точке.</para>
      </summary>
      <param name="x">Нормализованное x-положение в диапазоне [0; 1], при котором должны быть оценены min- и max-кривые.</param>
      <param name="col">Цвет кривой в указанной точке оценки.</param>
      <param name="minValue">Возвращенное значение минимальной кривой. Зажат до [-1; 1].</param>
      <param name="maxValue">Возвращенное значение максимальной кривой. Зажат до [-1; 1].</param>
    </member>
    <member name="M:UnityEditor.AudioCurveRendering.DrawCurve(UnityEngine.Rect,UnityEditor.AudioCurveRendering/AudioCurveEvaluator,UnityEngine.Color)">
      <summary>
        <para>Отображает тонкую кривую, определяемую функцией оценки кривой. Сплошной цвет кривой задается аргументом curveColor.</para>
      </summary>
      <param name="r">Прямоугольник, определяющий размер графа.</param>
      <param name="eval">Функция оценки кривой.</param>
      <param name="curveColor">Сплошной цвет заливки кривой. Альфа-канал определяет величину непрозрачности.</param>
    </member>
    <member name="M:UnityEditor.AudioCurveRendering.DrawFilledCurve(UnityEngine.Rect,UnityEditor.AudioCurveRendering/AudioCurveEvaluator,UnityEngine.Color)">
      <summary>
        <para>Заполняет область между кривой, вычисляемой предоставленным оценщиком AudioCurveAndColorEvaluator, и нижней частью выпрямления плавными градиентами по краям.</para>
      </summary>
      <param name="r">Прямоугольник, определяющий размер графа.</param>
      <param name="eval">Нормализованное x-положение в диапазоне [0; 1], в котором должна быть оценена кривая. Возвращаемое значение должно находиться в диапазоне [-1; 1], а значение 0 соответствует вертикальному центру втягиваемого прямоугольника. Значения за пределами этого диапазона будут зажаты.</param>
      <param name="curveColor">Сплошной цвет заливки кривой. Альфа-канал определяет величину непрозрачности.</param>
    </member>
    <member name="M:UnityEditor.AudioCurveRendering.DrawFilledCurve(UnityEngine.Rect,UnityEditor.AudioCurveRendering/AudioCurveAndColorEvaluator)">
      <summary>
        <para>Заполняет область между кривой, вычисляемой предоставленным оценщиком AudioCurveAndColorEvaluator, и нижней частью выпрямления плавными градиентами по краям.</para>
      </summary>
      <param name="r">Прямоугольник, определяющий размер графа.</param>
      <param name="eval">Нормализованное x-положение в диапазоне [0; 1], в котором должна быть оценена кривая. Возвращаемое значение должно находиться в диапазоне [-1; 1], а значение 0 соответствует вертикальному центру втягиваемого прямоугольника. Значения за пределами этого диапазона будут зажаты.</param>
      <param name="curveColor">Сплошной цвет заливки кривой. Альфа-канал определяет величину непрозрачности.</param>
    </member>
    <member name="M:UnityEditor.AudioCurveRendering.DrawMinMaxFilledCurve(UnityEngine.Rect,UnityEditor.AudioCurveRendering/AudioMinMaxCurveAndColorEvaluator)">
      <summary>
        <para>Заполняет область между двумя кривыми, вычисляемыми оценщиком AudioMinMaxCurveAndColorEvaluator с плавными градиентами по краям.</para>
      </summary>
      <param name="r">Прямоугольник, определяющий размер графа.</param>
      <param name="eval">Нормализованное x-положение в диапазоне [0; 1], при котором должны быть оценены min- и max-кривые. Возвращаемые значения minValue и maxValue должны находиться в диапазоне [-1; 1], а значение 0 соответствует вертикальному центру втягиваемого прямоугольника. Значения за пределами этого диапазона будут зажаты.</param>
    </member>
    <member name="M:UnityEditor.AudioCurveRendering.DrawSymmetricFilledCurve(UnityEngine.Rect,UnityEditor.AudioCurveRendering/AudioCurveAndColorEvaluator)">
      <summary>
        <para>Заполняет область между кривой, вычисляемой предоставленным оценщиком AudioCurveAndColorEvaluator, и ее вертикальным зеркальным отражением плавными градиентами по краям. Полезно для рисования амплитудных графиков аудиосигналов.</para>
      </summary>
      <param name="r">Прямоугольник, определяющий размер графа.</param>
      <param name="eval">Нормализованное x-положение в диапазоне [0; 1], в котором должна быть оценена кривая. Возвращаемое значение должно находиться в диапазоне [0; 1], а значение 0 соответствует вертикальному центру втягиваемого прямоугольника. Значения за пределами этого диапазона будут зажаты.</param>
    </member>
    <member name="T:UnityEditor.AudioImporter">
      <summary>
        <para>Средство импорта аудио позволяет изменять параметры импорта AudioClip из сценариев редактора.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AudioImporter.ambisonic">
      <summary>
        <para>Когда этот флаг установлен, аудиоклип будет рассматриваться как амбозонный.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AudioImporter.compressionBitrate">
      <summary>
        <para>Битрейт сжатия.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AudioImporter.defaultSampleSettings">
      <summary>
        <para>Пример настроек по умолчанию для средства импорта AudioClip.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AudioImporter.forceToMono">
      <summary>
        <para>Заставить аудиоклипы моно?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AudioImporter.loadInBackground">
      <summary>
        <para>В соответствии с флагом 'Load In Background' в инспекторе AudioClip, при установке этого флага загрузка клипа будет происходить с задержкой без блокировки основного потока.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.AudioImporter.preloadAudioData">
      <summary>
        <para>Предварительно загружает аудиоданные клипа при загрузке ресурса клипа. Когда этот флаг выключен, сценарии должны вызывать AudioClip.LoadAudioData() для загрузки данных перед воспроизведением клипа. Такие свойства, как длина, каналы и формат, доступны до загрузки аудиоданных.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.AudioImporter.ClearSampleSettingOverride(System.String)">
      <summary>
        <para>Очищает переопределение параметров примера для данной платформы.</para>
      </summary>
      <param name="platform">Платформа для очистки переопределений.</param>
      <returns>
        <para>Возвращает значение true, если какие-либо переопределения были фактически очищены.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AudioImporter.ContainsSampleSettingsOverride(System.String)">
      <summary>
        <para>Возвращает значение, указывающее, переопределены ли в данный момент параметры примера заданного целевого объекта сборки.</para>
      </summary>
      <param name="platform">Платформа для запроса, имеет ли этот AudioImporter переопределение для.</param>
      <returns>
        <para>Возвращает значение true, если платформа в данный момент переопределена в этом AudioImporter.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AudioImporter.GetOverrideSampleSettings(System.String)">
      <summary>
        <para>Верните текущие параметры переопределения для данной платформы.</para>
      </summary>
      <param name="platform">Платформа, для которой необходимо получить параметры переопределения.</param>
      <returns>
        <para>Переопределение примеров параметров для данной платформы.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.AudioImporter.SetOverrideSampleSettings(System.String,UnityEditor.AudioImporterSampleSettings)">
      <summary>
        <para>Задает параметры примера переопределения для данной платформы.</para>
      </summary>
      <param name="platform">Платформа, на которой будут переопределены параметры примера.</param>
      <param name="settings">Параметры переопределения для данной платформы.</param>
      <returns>
        <para>Возвращает значение true, если параметры были успешно переопределены. Некоторые переопределения настроек невозможны для данной платформы, и в этом случае возвращается false, а настройки не регистрируются.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.AudioImporterSampleSettings">
      <summary>
        <para>Эта структура содержит набор настроек, используемых для определения способа импорта AudioClip.  Эта структура используется с AudioImporter для определения того, как AudioClip должен быть импортирован и обработан во время загрузки в сцене.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AudioImporterSampleSettings.compressionFormat">
      <summary>
        <para>CompressionFormat определяет тип сжатия, в который кодируется аудиофайл. Различные типы сжатия имеют различную производительность и характеристики звуковых артефактов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AudioImporterSampleSettings.loadType">
      <summary>
        <para>LoadType определяет, как должны загружаться импортированные данные AudioClip.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AudioImporterSampleSettings.quality">
      <summary>
        <para>Качество сжатия звука (0-1) Степень сжатия. Значение примерно соответствует соотношению между результирующим и исходным размерами файлов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AudioImporterSampleSettings.sampleRateOverride">
      <summary>
        <para>Целевая частота дискретизации для преобразования, когда параметр sampleSetting имеет значение OverrideSampleRate.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AudioImporterSampleSettings.sampleRateSetting">
      <summary>
        <para>Определяет, как изменяется частота дискретизации (если вообще изменяется) аудиофайла импортера.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.AudioSampleRateSetting">
      <summary>
        <para>Параметр частоты дискретизации, используемый в AudioImporter. Это определяет коэффициент дискретизации преобразования аудио при импорте.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AudioSampleRateSetting.OptimizeSampleRate">
      <summary>
        <para>Пусть Unity определит оптимальную частоту дискретизации для импортируемого AudioClip. Аудиофайл будет проанализирован и выбрана минимальная частота дискретизации при сохранении качества звука.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AudioSampleRateSetting.OverrideSampleRate">
      <summary>
        <para>Переопределите частоту дискретизации импортированного аудиофайла с помощью пользовательского значения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.AudioSampleRateSetting.PreserveSampleRate">
      <summary>
        <para>Не изменяйте частоту дискретизации импортированного аудиофайла. Частота дискретизации будет сохранена для импортированного AudioClip.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.BuildFailedException">
      <summary>
        <para>Класс исключения, представляющий неудачную сборку.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.BuildFailedException.#ctor(System.String)">
      <summary>
        <para>Создает объект BuildFailedException.</para>
      </summary>
      <param name="message">Строка текста, описывающая ошибку, вызвавшую сбой сборки.</param>
      <param name="innerException">Исключение, вызвавшее сбой сборки.</param>
    </member>
    <member name="M:UnityEditor.Build.BuildFailedException.#ctor(System.Exception)">
      <summary>
        <para>Создает объект BuildFailedException.</para>
      </summary>
      <param name="message">Строка текста, описывающая ошибку, вызвавшую сбой сборки.</param>
      <param name="innerException">Исключение, вызвавшее сбой сборки.</param>
    </member>
    <member name="T:UnityEditor.Build.BuildPlayerContext">
      <summary>
        <para>Получение объекта BuildPlayerContext из обратного вызова Build.BuildPlayerProcessor.PrepareForBuild.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.BuildPlayerContext.AddAdditionalPathToStreamingAssets(System.String,System.String)">
      <summary>
        <para>Добавьте дополнительные потоковые ресурсы к встроенным данным проигрывателя. Например, можно включить AssetBundles или другие потоковые ресурсы без предварительного помещения их в папку проекта StreamingAssets.</para>
      </summary>
      <param name="directoryOrFile">Путь, представляющий существующий файл или каталог. Если путь не завершается, эта функция создает исключение FileNotFoundException.</param>
      <param name="pathInStreamingAssets">Путь в папке StreamingAssets, в которую будут помещены дополнительные ресурсы. Если значение равно null, файл или каталог помещается непосредственно в папку StreamingAssets.</param>
    </member>
    <member name="P:UnityEditor.Build.BuildPlayerContext.BuildPlayerOptions">
      <summary>
        <para>Параметры сборки игрока, связанные с этой сборкой.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.BuildPlayerProcessor">
      <summary>
        <para>Расширение BuildPlayerProcessor для получения обратных вызовов во время сборки проигрывателя.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.BuildPlayerProcessor.callbackOrder">
      <summary>
        <para>Возвращает относительный порядок обратного вызова для обратных вызовов.  Обратные вызовы с более низкими значениями вызываются перед вызовами с более высокими значениями.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.BuildPlayerProcessor.PrepareForBuild(UnityEditor.Build.BuildPlayerContext)">
      <summary>
        <para>Реализуйте эту функцию для получения обратного вызова до начала сборки проигрывателя.</para>
      </summary>
      <param name="buildPlayerContext">Контекст, привязанный к запланированной сборке игрока.</param>
    </member>
    <member name="T:UnityEditor.Build.Content.AssetBundleInfo">
      <summary>
        <para>Контейнер для хранения информации о загрузке активов для строящегося объекта AssetBundle.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.AssetBundleInfo.bundleAssets">
      <summary>
        <para>Список сведений о загрузке активов для AssetBundle.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.AssetBundleInfo.bundleName">
      <summary>
        <para>Понятное имя AssetBundle.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.AssetBundleInfo.#ctor">
      <summary>
        <para>Конструктор по умолчанию для пустого объекта AssetBundleInfo.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.AssetLoadInfo">
      <summary>
        <para>Контейнер для хранения информации о предварительной загрузке для данного сериализованного ресурса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.AssetLoadInfo.address">
      <summary>
        <para>Понятное имя, используемое для загрузки построенного ресурса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.AssetLoadInfo.asset">
      <summary>
        <para>Идентификатор GUID для данного ресурса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.AssetLoadInfo.includedObjects">
      <summary>
        <para>Список объектов, содержащихся в исходном файле ресурса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.AssetLoadInfo.referencedObjects">
      <summary>
        <para>Список объектов, на которые ссылается ресурс.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.AssetLoadInfo.#ctor">
      <summary>
        <para>Конструктор по умолчанию для пустого объекта AssetLoadInfo.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.BuildCompression">
      <summary>
        <para>Структура, содержащая параметры, управляющие методом сжатия содержимого.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.BuildCompression.DefaultLZ4">
      <summary>
        <para>Возвращает набор структуры BuildCompression со значениями по умолчанию, используемыми для сжатия Lz4HC.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.BuildCompression.DefaultLZMA">
      <summary>
        <para>Возвращает набор структуры BuildCompression со значениями по умолчанию, используемыми для сжатия LZMA.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.BuildCompression.DefaultUncompressed">
      <summary>
        <para>Возвращает набор структуры BuildCompression со значениями по умолчанию, используемыми для uncompressed.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.BuildReferenceMap">
      <summary>
        <para>Контейнер для хранения информации о том, где объекты будут сериализованы в сборке.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildReferenceMap.AddMapping(System.String,System.Int64,UnityEditor.Build.Content.ObjectIdentifier,System.Boolean)">
      <summary>
        <para>Добавляет сопоставление для одного объекта в место, где он будет сериализован в сборку.</para>
      </summary>
      <param name="internalFileName">
      </param>
      <param name="serializationIndex">
      </param>
      <param name="objectID">
      </param>
      <param name="overwrite">
      </param>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildReferenceMap.AddMappings(System.String,UnityEditor.Build.Content.SerializationInfo[])">
      <summary>
        <para>Добавляет сопоставления для набора объектов, в которые они будут сериализованы в сборку.</para>
      </summary>
      <param name="internalFileName">
      </param>
      <param name="objectIDs">
      </param>
      <param name="overwrite">
      </param>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildReferenceMap.AddMappings(System.String,UnityEditor.Build.Content.SerializationInfo[],System.Boolean)">
      <summary>
        <para>Добавляет сопоставления для набора объектов, в которые они будут сериализованы в сборку.</para>
      </summary>
      <param name="internalFileName">
      </param>
      <param name="objectIDs">
      </param>
      <param name="overwrite">
      </param>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildReferenceMap.#ctor">
      <summary>
        <para>Конструктор по умолчанию для пустого buildReferenceMap.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildReferenceMap.Dispose">
      <summary>
        <para>Утилизируйте BuildReferenceMap, уничтожая все внутренние состояния.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildReferenceMap.Equals(System.Object)">
      <summary>
        <para>Возвращает значение true, если объекты равны.</para>
      </summary>
      <param name="obj">
      </param>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildReferenceMap.FilterToSubset(UnityEditor.Build.Content.ObjectIdentifier[])">
      <summary>
        <para>Фильтрует этот экземпляр BuildReferenceMap для удаления ссылок на все объекты, которые не входят в массив ObjectIdentifiers, заданный objectIds.</para>
      </summary>
      <param name="objectIds">Набор желаемых объектов.</param>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildReferenceMap.GetHash128">
      <summary>
        <para>Получает хэш для buildReferenceMap.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildReferenceMap.GetHashCode">
      <summary>
        <para>Получает хэш-код для buildReferenceMap.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildReferenceMap.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>ISerializable метод поддержки сериализации вне внутренней системы сериализации Unity.</para>
      </summary>
      <param name="info">
      </param>
      <param name="context">
      </param>
    </member>
    <member name="T:UnityEditor.Build.Content.BuildSettings">
      <summary>
        <para>Структура, содержащая информацию о том, как создавать контент.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.BuildSettings.buildFlags">
      <summary>
        <para>Конкретные параметры сборки, используемые при создании контента.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.BuildSettings.group">
      <summary>
        <para>Группа платформ, для которой будет создаваться контент.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.BuildSettings.target">
      <summary>
        <para>Целевая платформа, для которой будет создаваться контент.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.BuildSettings.typeDB">
      <summary>
        <para>Введите сведения, которые будут использоваться для создания контента.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.BuildUsageCache">
      <summary>
        <para>Объект кэширования для конвейера сборки с поддержкой сценариев.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildUsageCache.#ctor">
      <summary>
        <para>Контруктор по умолчанию.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildUsageCache.Dispose">
      <summary>
        <para>Утилизируйте BuildUsageCache, уничтожая все внутренние состояния.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.BuildUsageTagGlobal">
      <summary>
        <para>Контейнер для хранения информации об информации об освещении, используемой в сборке.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Build.Content.BuildUsageTagGlobal.op_BitwiseOr(UnityEditor.Build.Content.BuildUsageTagGlobal,UnityEditor.Build.Content.BuildUsageTagGlobal)">
      <summary>
        <para>Объединяет данные об использовании из другого BuildUsageTagGlobal с этим BuildUsageTagGlobal.</para>
      </summary>
      <param name="x">
      </param>
      <param name="y">
      </param>
    </member>
    <member name="T:UnityEditor.Build.Content.BuildUsageTagSet">
      <summary>
        <para>Контейнер для хранения информации о том, как объекты используются в сборке.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildUsageTagSet.#ctor">
      <summary>
        <para>Конструктор по умолчанию для пустого объекта BuildUsageTagSet.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildUsageTagSet.Dispose">
      <summary>
        <para>Утилизируйте BuildUsageTagSet, уничтожив все внутренние состояния.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildUsageTagSet.Equals(System.Object)">
      <summary>
        <para>Возвращает значение true, если объекты равны.</para>
      </summary>
      <param name="obj">
      </param>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildUsageTagSet.FilterToSubset(UnityEditor.Build.Content.ObjectIdentifier[])">
      <summary>
        <para>Фильтрует этот экземпляр BuildUsageTagSet для удаления ссылок на все объекты, отсутствующие в массиве ObjectIdentifiers, заданном objectIds.</para>
      </summary>
      <param name="objectIds">Набор желаемых объектов.</param>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildUsageTagSet.GetHash128">
      <summary>
        <para>Получает хэш для buildReferenceMap.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildUsageTagSet.GetHashCode">
      <summary>
        <para>Получает хэш-код для buildUsageTagSet.</para>
      </summary>
      <returns>
        <para>Хэш-код buildUsageTagSet.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildUsageTagSet.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>ISerializable метод поддержки сериализации вне внутренней системы сериализации Unity.</para>
      </summary>
      <param name="info">
      </param>
      <param name="context">
      </param>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildUsageTagSet.GetObjectIdentifiers">
      <summary>
        <para>Возвращает массив ObjectIdentifiers, о которых данный объект BuildUsageTagSet содержит сведения об использовании.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.BuildUsageTagSet.UnionWith(UnityEditor.Build.Content.BuildUsageTagSet)">
      <summary>
        <para>Добавляет сведения об использовании объекта из другого объекта BuildUsageTagSet в этот объект BuildUsageTagSet.</para>
      </summary>
      <param name="other">Сведения об использовании объекта, добавляемые в этот объект BuildUsageTagSet.</param>
    </member>
    <member name="T:UnityEditor.Build.Content.CompressionLevel">
      <summary>
        <para>Перечисление, чтобы указать, должно ли сжатие подчеркивать скорость или размер.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.CompressionLevel.Fast">
      <summary>
        <para>Содержимое должно быть сжато так же быстро.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.CompressionLevel.Fastest">
      <summary>
        <para>Содержимое должно быть сжато как можно быстрее.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.CompressionLevel.High">
      <summary>
        <para>Содержимое должно быть сжато небольшим.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.CompressionLevel.Maximum">
      <summary>
        <para>Содержимое должно быть сжато как можно меньше.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.CompressionLevel.None">
      <summary>
        <para>Никакой. По умолчанию используется значение Normal.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.CompressionLevel.Normal">
      <summary>
        <para>Содержание должно быть баллантировано между размером и скоростью.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.CompressionType">
      <summary>
        <para>Перечисление, содержащее типы сжатия, поддерживаемые для построенного контента.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.CompressionType.Lz4">
      <summary>
        <para>Сжатие содержимого на основе блоков.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.CompressionType.Lz4HC">
      <summary>
        <para>Сжатие содержимого на основе блоков с использованием варианта с высоким уровнем сжатия.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.CompressionType.Lzma">
      <summary>
        <para>Сжатие однопоточного контента.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.CompressionType.None">
      <summary>
        <para>Несжатое содержимое.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.ContentBuildFlags">
      <summary>
        <para>Параметры сборки контента.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.ContentBuildFlags.DevelopmentBuild">
      <summary>
        <para>Создайте разрабатываемую версию файлов содержимого.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.ContentBuildFlags.DisableWriteTypeTree">
      <summary>
        <para>Не включайте сведения о типе в создаваемое содержимое.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.ContentBuildFlags.None">
      <summary>
        <para>Создавайте контент без дополнительных опций.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.ContentBuildFlags.StripUnityVersion">
      <summary>
        <para>Флаг сборки, указывающий на то, что версия Unity не должна быть записана в сериализованный файл.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.ContentBuildInterface">
      <summary>
        <para>Низкоуровневый интерфейс для создания контента для Unity.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.ArchiveAndCompress(UnityEditor.Build.Content.ResourceFile[],System.String,UnityEngine.BuildCompression)">
      <summary>
        <para>Объединяет файлы ресурсов в один архив и сжимает их на основе переданных параметров.</para>
      </summary>
      <param name="resourceFiles">
      </param>
      <param name="outputBundlePath">
      </param>
      <param name="compression">
      </param>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.CalculateBuildUsageTags(UnityEditor.Build.Content.ObjectIdentifier[],UnityEditor.Build.Content.ObjectIdentifier[],UnityEditor.Build.Content.BuildUsageTagGlobal,UnityEditor.Build.Content.BuildUsageTagSet)">
      <summary>
        <para>Вычисляет использование сборки набора объектов.</para>
      </summary>
      <param name="objectIDs">Объекты, использование которых будет вычисляться при построении.</param>
      <param name="dependentObjectIDs">Объекты, ссылающиеся на вычисляемые объекты.</param>
      <param name="globalUsage">Информация об освещении, используемая сборкой.</param>
      <param name="usageSet">Объект BuildUsageTagSet, в котором будет храниться вычисляемая информация об использовании.</param>
      <param name="usageCache">Необязательный объект кэша для повышения производительности при множественных вызовах этого API.</param>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.CalculateBuildUsageTags(UnityEditor.Build.Content.ObjectIdentifier[],UnityEditor.Build.Content.ObjectIdentifier[],UnityEditor.Build.Content.BuildUsageTagGlobal,UnityEditor.Build.Content.BuildUsageTagSet,UnityEditor.Build.Content.BuildUsageCache)">
      <summary>
        <para>Вычисляет использование сборки набора объектов.</para>
      </summary>
      <param name="objectIDs">Объекты, использование которых будет вычисляться при построении.</param>
      <param name="dependentObjectIDs">Объекты, ссылающиеся на вычисляемые объекты.</param>
      <param name="globalUsage">Информация об освещении, используемая сборкой.</param>
      <param name="usageSet">Объект BuildUsageTagSet, в котором будет храниться вычисляемая информация об использовании.</param>
      <param name="usageCache">Необязательный объект кэша для повышения производительности при множественных вызовах этого API.</param>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.CalculatePlayerDependenciesForGameManagers(UnityEditor.Build.Content.BuildSettings,UnityEditor.Build.Content.BuildUsageTagGlobal,UnityEditor.Build.Content.BuildUsageTagSet)">
      <summary>
        <para>Вычисляет информацию о зависимостях для различных внутренних классов игрового менеджера Unity.</para>
      </summary>
      <param name="settings">Параметры для расчета зависимостей.</param>
      <param name="globalUsage">Тег глобального использования для режимов освещения и тумана, используемых в проекте.</param>
      <param name="usageSet">Выходные теги использования, созданные в результате вычисления зависимостей.</param>
      <param name="usageCache">Необязательный объект кэша для повышения производительности при множественных вызовах этого API.</param>
      <param name="mode">Указывает, как вычислять зависимости между внутренними игровыми менеджерами Unity и игровыми ресурсами.</param>
      <returns>
        <para>Вычисляемые зависимости для внутренних классов игрового менеджера Unity.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.CalculatePlayerDependenciesForGameManagers(UnityEditor.Build.Content.BuildSettings,UnityEditor.Build.Content.BuildUsageTagGlobal,UnityEditor.Build.Content.BuildUsageTagSet,UnityEditor.Build.Content.BuildUsageCache)">
      <summary>
        <para>Вычисляет информацию о зависимостях для различных внутренних классов игрового менеджера Unity.</para>
      </summary>
      <param name="settings">Параметры для расчета зависимостей.</param>
      <param name="globalUsage">Тег глобального использования для режимов освещения и тумана, используемых в проекте.</param>
      <param name="usageSet">Выходные теги использования, созданные в результате вычисления зависимостей.</param>
      <param name="usageCache">Необязательный объект кэша для повышения производительности при множественных вызовах этого API.</param>
      <param name="mode">Указывает, как вычислять зависимости между внутренними игровыми менеджерами Unity и игровыми ресурсами.</param>
      <returns>
        <para>Вычисляемые зависимости для внутренних классов игрового менеджера Unity.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.CalculatePlayerDependenciesForGameManagers(UnityEditor.Build.Content.BuildSettings,UnityEditor.Build.Content.BuildUsageTagGlobal,UnityEditor.Build.Content.BuildUsageTagSet,UnityEditor.Build.Content.BuildUsageCache,UnityEditor.Build.Content.DependencyType)">
      <summary>
        <para>Вычисляет информацию о зависимостях для различных внутренних классов игрового менеджера Unity.</para>
      </summary>
      <param name="settings">Параметры для расчета зависимостей.</param>
      <param name="globalUsage">Тег глобального использования для режимов освещения и тумана, используемых в проекте.</param>
      <param name="usageSet">Выходные теги использования, созданные в результате вычисления зависимостей.</param>
      <param name="usageCache">Необязательный объект кэша для повышения производительности при множественных вызовах этого API.</param>
      <param name="mode">Указывает, как вычислять зависимости между внутренними игровыми менеджерами Unity и игровыми ресурсами.</param>
      <returns>
        <para>Вычисляемые зависимости для внутренних классов игрового менеджера Unity.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.CalculatePlayerDependenciesForScene(System.String,UnityEditor.Build.Content.BuildSettings,UnityEditor.Build.Content.BuildUsageTagSet)">
      <summary>
        <para>Вычисляет сведения о зависимости сцены.</para>
      </summary>
      <param name="usageCache">Необязательный объект кэша для повышения производительности при множественных вызовах этого API.</param>
      <param name="scenePath">Входной путь Scene для вычисления зависимостей.</param>
      <param name="settings">Параметры для расчета зависимостей.</param>
      <param name="usageSet">Выходные теги использования, созданные в результате вычисления зависимостей.</param>
      <returns>
        <para>Сведения о зависимостях для сцены.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.CalculatePlayerDependenciesForScene(System.String,UnityEditor.Build.Content.BuildSettings,UnityEditor.Build.Content.BuildUsageTagSet,UnityEditor.Build.Content.BuildUsageCache)">
      <summary>
        <para>Вычисляет сведения о зависимости сцены.</para>
      </summary>
      <param name="usageCache">Необязательный объект кэша для повышения производительности при множественных вызовах этого API.</param>
      <param name="scenePath">Входной путь Scene для вычисления зависимостей.</param>
      <param name="settings">Параметры для расчета зависимостей.</param>
      <param name="usageSet">Выходные теги использования, созданные в результате вычисления зависимостей.</param>
      <returns>
        <para>Сведения о зависимостях для сцены.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.CalculatePlayerSerializationHashForType(System.Type,UnityEditor.Build.Player.TypeDB)">
      <summary>
        <para>Возвращает уникальный хэш для сериализованного макета заданного типа.</para>
      </summary>
      <param name="type">Тип объекта.</param>
      <param name="typeDB">Пользовательский скрипт TypeDB для проигрывателя.</param>
      <returns>
        <para>Уникальный хэш для сериализованного макета типа.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.GenerateAssetBundleBuilds">
      <summary>
        <para>Возвращает массив структур AssetBundleBuild, в которых подробно описывается текущий макет пакета активов, заданный в AssetDatabase.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.GetGlobalUsageFromActiveScene(UnityEditor.BuildTarget)">
      <summary>
        <para>Получает сведения о настройках освещения и рендеринга в активной сцене.</para>
      </summary>
      <param name="target">Целевая платформа.</param>
      <returns>
        <para>Объект, содержащий настройки освещения и тумана для активной сцены на указанной платформе.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.GetGlobalUsageFromGraphicsSettings">
      <summary>
        <para>Возвращает сведения о глобальном использовании, вычисляемые разделом «Удаление шейдеров» параметров графики.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.GetPlayerAssetRepresentations(UnityEditor.GUID,UnityEditor.BuildTarget)">
      <summary>
        <para>Возвращает список видимых объектов, непосредственно содержащихся внутри ресурса.</para>
      </summary>
      <param name="asset">
      </param>
      <param name="target">
      </param>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.GetPlayerDependenciesForObject(UnityEditor.Build.Content.ObjectIdentifier,UnityEditor.BuildTarget,UnityEditor.Build.Player.TypeDB)">
      <summary>
        <para>Возвращает список объектов, на которые ссылается объект.</para>
      </summary>
      <param name="objectID">
      </param>
      <param name="target">
      </param>
      <param name="typeDB">
      </param>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.GetPlayerDependenciesForObjects(UnityEditor.Build.Content.ObjectIdentifier[],UnityEditor.BuildTarget,UnityEditor.Build.Player.TypeDB)">
      <summary>
        <para>Возвращает список объектов, на которые ссылается набор объектов.</para>
      </summary>
      <param name="objectIDs">
      </param>
      <param name="target">
      </param>
      <param name="typeDB">
      </param>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.GetPlayerObjectIdentifiersInAsset(UnityEditor.GUID,UnityEditor.BuildTarget)">
      <summary>
        <para>Возвращает список объектов, непосредственно содержащихся внутри ресурса.</para>
      </summary>
      <param name="asset">
      </param>
      <param name="target">
      </param>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.GetPlayerObjectIdentifiersInSerializedFile(System.String,UnityEditor.BuildTarget)">
      <summary>
        <para>Возвращает список объектов, непосредственно содержащихся внутри свободного сериализованного файла.</para>
      </summary>
      <param name="filePath">
      </param>
      <param name="target">
      </param>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.GetTypeForObject(UnityEditor.Build.Content.ObjectIdentifier)">
      <summary>
        <para>Возвращает значение System.Type идентификатора ObjectIdentifier, заданного параметром objectID.</para>
      </summary>
      <param name="objectID">Конкретный объект.</param>
      <returns>
        <para>Тип объекта.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.GetTypeForObjects(UnityEditor.Build.Content.ObjectIdentifier[])">
      <summary>
        <para>Возвращает system.Type идентификаторов ObjectIdentifiers и указанные типы классов SerializeReference, заданные идентификаторами objectID.</para>
      </summary>
      <param name="objectIDs">Конкретные объекты.</param>
      <returns>
        <para>Массив уникальных типов.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.GetTypesForObject(UnityEditor.Build.Content.ObjectIdentifier)">
      <summary>
        <para>Возвращает System.Type идентификатора ObjectIdentifier и указанные типы классов SerializeReference, заданные объектом objectID.</para>
      </summary>
      <param name="objectID">Конкретный объект.</param>
      <returns>
        <para>Массив уникальных типов.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.ObjectIsSupportedInBuild(UnityEngine.Object)">
      <summary>
        <para>Возвращает значение True, если переданный целевой объект является допустимым объектом среды выполнения.</para>
      </summary>
      <param name="targetObject">
      </param>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.StartProfileCapture(UnityEditor.Build.Content.ProfileCaptureOptions)">
      <summary>
        <para>Запускает захват профиля для записи событий профиля сборки содержимого.</para>
      </summary>
      <param name="options">Используется для фильтрации захваченных событий.</param>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.StopProfileCapture">
      <summary>
        <para>Возвращает массив структур ContentBuildProfileEvent, содержащих сведения о каждом происходящем событии. Также останавливается захват профиля.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.WriteGameManagersSerializedFile(System.String,UnityEditor.Build.Content.WriteManagerParameters)">
      <summary>
        <para>Записывает текущие настройки внутренних классов менеджера игр Unity в файл 'globalgamemanagers' на диске.</para>
      </summary>
      <param name="outputFolder">Расположение для записи файла.</param>
      <param name="parameters">Набор параметров, используемых для записи файла.</param>
      <returns>
        <para>Подробные результаты записи файла.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.WriteSceneSerializedFile(System.String,UnityEditor.Build.Content.WriteSceneParameters)">
      <summary>
        <para>Записывает объекты Scene в сериализованный файл на диске.</para>
      </summary>
      <param name="outputFolder">
      </param>
      <param name="parameters">
      </param>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.WriteSceneSerializedFile(System.String,System.String,System.String,UnityEditor.Build.Content.WriteCommand,UnityEditor.Build.Content.BuildSettings,UnityEditor.Build.Content.BuildUsageTagGlobal,UnityEditor.Build.Content.BuildUsageTagSet,UnityEditor.Build.Content.BuildReferenceMap)">
      <summary>
        <para>ТОДО.</para>
      </summary>
      <param name="outputFolder">
      </param>
      <param name="scenePath">
      </param>
      <param name="processedScene">
      </param>
      <param name="writeCommand">
      </param>
      <param name="settings">
      </param>
      <param name="globalUsage">
      </param>
      <param name="usageSet">
      </param>
      <param name="referenceMap">
      </param>
      <param name="preloadInfo">
      </param>
      <param name="sceneBundleInfo">
      </param>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.WriteSceneSerializedFile(System.String,System.String,System.String,UnityEditor.Build.Content.WriteCommand,UnityEditor.Build.Content.BuildSettings,UnityEditor.Build.Content.BuildUsageTagGlobal,UnityEditor.Build.Content.BuildUsageTagSet,UnityEditor.Build.Content.BuildReferenceMap,UnityEditor.Build.Content.PreloadInfo)">
      <summary>
        <para>ТОДО.</para>
      </summary>
      <param name="outputFolder">
      </param>
      <param name="scenePath">
      </param>
      <param name="processedScene">
      </param>
      <param name="writeCommand">
      </param>
      <param name="settings">
      </param>
      <param name="globalUsage">
      </param>
      <param name="usageSet">
      </param>
      <param name="referenceMap">
      </param>
      <param name="preloadInfo">
      </param>
      <param name="sceneBundleInfo">
      </param>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.WriteSceneSerializedFile(System.String,System.String,System.String,UnityEditor.Build.Content.WriteCommand,UnityEditor.Build.Content.BuildSettings,UnityEditor.Build.Content.BuildUsageTagGlobal,UnityEditor.Build.Content.BuildUsageTagSet,UnityEditor.Build.Content.BuildReferenceMap,UnityEditor.Build.Content.PreloadInfo,UnityEditor.Build.Content.SceneBundleInfo)">
      <summary>
        <para>ТОДО.</para>
      </summary>
      <param name="outputFolder">
      </param>
      <param name="scenePath">
      </param>
      <param name="processedScene">
      </param>
      <param name="writeCommand">
      </param>
      <param name="settings">
      </param>
      <param name="globalUsage">
      </param>
      <param name="usageSet">
      </param>
      <param name="referenceMap">
      </param>
      <param name="preloadInfo">
      </param>
      <param name="sceneBundleInfo">
      </param>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.WriteSerializedFile(System.String,UnityEditor.Build.Content.WriteParameters)">
      <summary>
        <para>Записывает объекты в сериализованный файл на диске.</para>
      </summary>
      <param name="outputFolder">
      </param>
      <param name="parameters">
      </param>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.WriteSerializedFile(System.String,UnityEditor.Build.Content.WriteCommand,UnityEditor.Build.Content.BuildSettings,UnityEditor.Build.Content.BuildUsageTagGlobal,UnityEditor.Build.Content.BuildUsageTagSet,UnityEditor.Build.Content.BuildReferenceMap)">
      <summary>
        <para>ТОДО.</para>
      </summary>
      <param name="outputFolder">
      </param>
      <param name="writeCommand">
      </param>
      <param name="settings">
      </param>
      <param name="globalUsage">
      </param>
      <param name="usageSet">
      </param>
      <param name="referenceMap">
      </param>
      <param name="bundleInfo">
      </param>
    </member>
    <member name="M:UnityEditor.Build.Content.ContentBuildInterface.WriteSerializedFile(System.String,UnityEditor.Build.Content.WriteCommand,UnityEditor.Build.Content.BuildSettings,UnityEditor.Build.Content.BuildUsageTagGlobal,UnityEditor.Build.Content.BuildUsageTagSet,UnityEditor.Build.Content.BuildReferenceMap,UnityEditor.Build.Content.AssetBundleInfo)">
      <summary>
        <para>ТОДО.</para>
      </summary>
      <param name="outputFolder">
      </param>
      <param name="writeCommand">
      </param>
      <param name="settings">
      </param>
      <param name="globalUsage">
      </param>
      <param name="usageSet">
      </param>
      <param name="referenceMap">
      </param>
      <param name="bundleInfo">
      </param>
    </member>
    <member name="T:UnityEditor.Build.Content.ContentBuildProfileEvent">
      <summary>
        <para>Сведения о событии профиля, записанном с помощью API ContentBuildInterface.BeginProfileCapture и ContentBuildInterface.EndProfileCapture.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.ContentBuildProfileEvent.Metadata">
      <summary>
        <para>Дополнительные метаданные, связанные с событием.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.ContentBuildProfileEvent.Name">
      <summary>
        <para>Название мероприятия.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.ContentBuildProfileEvent.TimeMicroseconds">
      <summary>
        <para>Время в микросекундах, когда произошло событие относительно начала захвата профиля.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.ContentBuildProfileEvent.Type">
      <summary>
        <para>Enum используется для обозначения типа события.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.DependencyType">
      <summary>
        <para>Флаги вычисления зависимостей для управления возвращаемым и способом его работы.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.DependencyType.DefaultDependencies">
      <summary>
        <para>Режим по умолчанию. Зависимости вычисляются рекурсивно, и возвращаются только допустимые ссылки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.DependencyType.MissingReferences">
      <summary>
        <para>Зависимости объектов, возвращаемые только для отсутствующих ссылок.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.DependencyType.RecursiveOperation">
      <summary>
        <para>Вычисление депенцеции является рекурсивным. Для каждой новой допустимой ссылки, обнаруженной во время вычисления, зависимости этих ссылок также будут включены в возвращаемые результаты.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.DependencyType.ValidReferences">
      <summary>
        <para>Вычисление депенсации не является рекурсивным. Будут возвращены только зависимости начального переданного в наборе.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.FileType">
      <summary>
        <para>Перечисление описания типа файла, из которого исходит объект.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.FileType.DeprecatedCachedAssetType">
      <summary>
        <para>Объект содержится в очень старом формате. В настоящее время не используется.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.FileType.MetaAssetType">
      <summary>
        <para>Объект содержится в импортированных метаданных ресурса, расположенных в папке Library.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.FileType.NonAssetType">
      <summary>
        <para>Объект содержится в файле, который в настоящее время не отслеживается AssetDatabase.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.FileType.SerializedAssetType">
      <summary>
        <para>Объект содержится в стандартном типе файла ресурса, расположенном в папке Assets.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.GameManagerDependencyInfo">
      <summary>
        <para>Содержит сведения о зависимостях для внутренних классов менеджера игр Unity. Вызовите contentBuildInterface.WriteGameManagersSerializedFile или ContentBuildInterface.CalculatePlayerDependenciesForGameManagers, чтобы получить экземпляр этого класса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.GameManagerDependencyInfo.includedTypes">
      <summary>
        <para>Идентификаторы для всего проекта для классов диспетчера игр, на которые ссылается эта коллекция сведений о зависимостях.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.GameManagerDependencyInfo.managerObjects">
      <summary>
        <para>Идентификаторы для всего проекта для классов диспетчера игр, на которые ссылается эта коллекция сведений о зависимостях.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.GameManagerDependencyInfo.referencedObjects">
      <summary>
        <para>Идентификаторы на уровне проекта для любых объектов, на которые ссылаются классы диспетчера в списке managerObjects.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.ObjectIdentifier">
      <summary>
        <para>Структура, определяющая конкретный объектный проект.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.ObjectIdentifier.filePath">
      <summary>
        <para>Путь к файлу на диске, содержащем этот объект. (Используется только для объектов, не известных AssetDatabase).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.ObjectIdentifier.fileType">
      <summary>
        <para>Тип файла, содержащего этот объект.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.ObjectIdentifier.guid">
      <summary>
        <para>Конкретный ресурс, содержащий этот объект.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.ObjectIdentifier.localIdentifierInFile">
      <summary>
        <para>Индекс объекта внутри сериализованного файла.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.ObjectIdentifier.Equals(System.Object)">
      <summary>
        <para>Возвращает значение true, если объекты равны.</para>
      </summary>
      <param name="obj">
      </param>
    </member>
    <member name="M:UnityEditor.Build.Content.ObjectIdentifier.GetHashCode">
      <summary>
        <para>Получает хэш-код для objectIdentifier.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Build.Content.ObjectIdentifier.op_Equal(UnityEditor.Build.Content.ObjectIdentifier,UnityEditor.Build.Content.ObjectIdentifier)">
      <summary>
        <para>Возвращает значение true, если идентификаторы ObjectIdentifiers совпадают.</para>
      </summary>
      <param name="a">
      </param>
      <param name="b">
      </param>
    </member>
    <member name="?:UnityEditor.Build.Content.ObjectIdentifier.op_GreaterThan(UnityEditor.Build.Content.ObjectIdentifier,UnityEditor.Build.Content.ObjectIdentifier)">
      <summary>
        <para>Возвращает значение true, если первый objectIdentifier больше, чем второй ObjectIdentifier.</para>
      </summary>
      <param name="a">
      </param>
      <param name="b">
      </param>
    </member>
    <member name="?:UnityEditor.Build.Content.ObjectIdentifier.op_LessThan(UnityEditor.Build.Content.ObjectIdentifier,UnityEditor.Build.Content.ObjectIdentifier)">
      <summary>
        <para>Возвращает значение true, если первый objectIdentifier меньше второго ObjectIdentifier.</para>
      </summary>
      <param name="a">
      </param>
      <param name="b">
      </param>
    </member>
    <member name="?:UnityEditor.Build.Content.ObjectIdentifier.op_NotEqual(UnityEditor.Build.Content.ObjectIdentifier,UnityEditor.Build.Content.ObjectIdentifier)">
      <summary>
        <para>Возвращает значение true, если идентификаторы ObjectIdentifiers отличаются.</para>
      </summary>
      <param name="a">
      </param>
      <param name="b">
      </param>
    </member>
    <member name="M:UnityEditor.Build.Content.ObjectIdentifier.ToInstanceID(UnityEditor.Build.Content.ObjectIdentifier)">
      <summary>
        <para>Пытается вернуть идентификатор экземпляра, представляющий данный объект ObjectIdentifier.</para>
      </summary>
      <param name="objectId">
      </param>
    </member>
    <member name="M:UnityEditor.Build.Content.ObjectIdentifier.ToObject(UnityEditor.Build.Content.ObjectIdentifier)">
      <summary>
        <para>Пытается найти, загрузить и вернуть объект Object, представляющий этот ObjectIdentifier.</para>
      </summary>
      <param name="objectId">
      </param>
    </member>
    <member name="M:UnityEditor.Build.Content.ObjectIdentifier.ToString">
      <summary>
        <para>Возвращает красиво отформатированную строку для этого objectIdentifier.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.ObjectIdentifier.TryGetObjectIdentifier(UnityEngine.Object,UnityEditor.Build.Content.ObjectIdentifier&amp;)">
      <summary>
        <para>Пытается преобразовать постоянный объект Objectidentifier.</para>
      </summary>
      <param name="targetObject">
      </param>
      <param name="objectId">
      </param>
      <param name="instanceID">
      </param>
    </member>
    <member name="M:UnityEditor.Build.Content.ObjectIdentifier.TryGetObjectIdentifier(System.Int32,UnityEditor.Build.Content.ObjectIdentifier&amp;)">
      <summary>
        <para>Пытается преобразовать постоянный объект Objectidentifier.</para>
      </summary>
      <param name="targetObject">
      </param>
      <param name="objectId">
      </param>
      <param name="instanceID">
      </param>
    </member>
    <member name="T:UnityEditor.Build.Content.ObjectSerializedInfo">
      <summary>
        <para>Структура, содержащая сведения о том, как объект был сериализован.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.ObjectSerializedInfo.header">
      <summary>
        <para>Сведения о сериализованном заголовке объекта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.ObjectSerializedInfo.rawData">
      <summary>
        <para>Необработанные байтовые данные объекта, если он был сериализован отдельно от заголовка.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.ObjectSerializedInfo.serializedObject">
      <summary>
        <para>Объект, который был сериализован.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.PreloadInfo">
      <summary>
        <para>Контейнер для хранения списка объектов предварительной загрузки для создаваемой сцены.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.PreloadInfo.preloadObjects">
      <summary>
        <para>Список объектов для сериализованной сцены, которые необходимо предварительно загрузить.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.PreloadInfo.#ctor">
      <summary>
        <para>Конструктор по умолчанию для пустого объекта PreloadInfo.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.ProfileCaptureOptions">
      <summary>
        <para>Параметры фильтрации захваченных событий профиля с помощью API ContentBuildInterface.BeginProfileCapture и ContentBuildInterface.EndProfileCapture.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.ProfileCaptureOptions.IgnoreShortEvents">
      <summary>
        <para>Используется для исключения всех захваченных событий длительностью менее 10 микросекунд.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.ProfileCaptureOptions.None">
      <summary>
        <para>Используется для исключения ни одного из захваченных событий.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.ProfileEventType">
      <summary>
        <para>Параметры маркировки захваченных событий профиля с помощью API ContentBuildInterface.BeginProfileCapture и ContentBuildInterface.EndProfileCapture.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.ProfileEventType.Begin">
      <summary>
        <para>Используется для указания на то, что задача началась.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.ProfileEventType.End">
      <summary>
        <para>Используется, чтобы указать, что задача завершена.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.ProfileEventType.Info">
      <summary>
        <para>Используется для указания на то, что сообщается общая информация.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.ResourceFile">
      <summary>
        <para>Сведения о конкретном файле, написанном API ContentBuildInterface.WriteSerializedFile или ContentBuildInterface.WriteSceneSerializedFile.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.ResourceFile.fileAlias">
      <summary>
        <para>Внутреннее имя, используемое загружающей системой для файла ресурсов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.ResourceFile.fileName">
      <summary>
        <para>Путь к файлу ресурсов на диске.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.ResourceFile.serializedFile">
      <summary>
        <para>Bool, чтобы определить, представляет ли этот файл ресурсов сериализованные объекты Unity (сериализованный файл) или двоичные данные ресурсов.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.SceneBundleInfo">
      <summary>
        <para>Контейнер для хранения информации о загрузке активов для потокового Scene AssetBundle, который будет построен.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.SceneBundleInfo.bundleName">
      <summary>
        <para>Понятное имя AssetBundle.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.SceneBundleInfo.bundleScenes">
      <summary>
        <para>Список сведений о загрузке сцены для AssetBundle.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.SceneBundleInfo.#ctor">
      <summary>
        <para>Конструктор по умолчанию для пустого объекта SceneBundleInfo.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.SceneDependencyInfo">
      <summary>
        <para>Сведения о зависимостях сцены, созданные из API ContentBuildInterface.PrepareScene.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.SceneDependencyInfo.globalUsage">
      <summary>
        <para>Информация об освещении, используемая Сценой.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.SceneDependencyInfo.includedTypes">
      <summary>
        <para>Типы, используемые объектами сцены.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.SceneDependencyInfo.processedScene">
      <summary>
        <para>Путь к обработанной после записи версии Сцены.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.SceneDependencyInfo.referencedObjects">
      <summary>
        <para>Список объектов, на которые ссылается Scene.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.SceneDependencyInfo.scene">
      <summary>
        <para>Исходный путь к ресурсу сцены.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.SceneLoadInfo">
      <summary>
        <para>Контейнер для хранения информации о предварительной загрузке для заданной сериализованной сцены в объекте AssetBundle.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.SceneLoadInfo.address">
      <summary>
        <para>Понятное имя, используемое для загрузки построенной Scene из пакета ресурсов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.SceneLoadInfo.asset">
      <summary>
        <para>Идентификатор GUID для данной сцены.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.SceneLoadInfo.internalName">
      <summary>
        <para>Внутреннее имя, используемое для загрузки построенной Scene из пакета ресурсов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.SceneLoadInfo.#ctor">
      <summary>
        <para>Конструктор по умолчанию для пустого Объекта SceneLoadInfo.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.SerializationInfo">
      <summary>
        <para>Контейнер для хранения сведений о заказе сериализации объектов для сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.SerializationInfo.serializationIndex">
      <summary>
        <para>Порядок, в котором объект будет сериализован на диск.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.SerializationInfo.serializationObject">
      <summary>
        <para>Исходный объект для сериализации на диск.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.SerializationInfo.#ctor">
      <summary>
        <para>Конструктор по умолчанию для пустого объекта SerializationInfo.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.SerializedLocation">
      <summary>
        <para>Структура, содержащая сведения о том, где был сериализован объект.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.SerializedLocation.fileName">
      <summary>
        <para>Путь к файлу на диске, на котором был сериализован объект.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.SerializedLocation.offset">
      <summary>
        <para>Смещение байта для начала данных объекта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.SerializedLocation.size">
      <summary>
        <para>Размер данных объекта.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.WriteCommand">
      <summary>
        <para>Контейнер для хранения информации о сериализованном файле, подлежащем записи.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.WriteCommand.fileName">
      <summary>
        <para>Окончательное имя файла на диске сериализованного файла.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.WriteCommand.internalName">
      <summary>
        <para>Внутреннее имя, используемое системой загрузки для сериализованного файла.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.WriteCommand.serializeObjects">
      <summary>
        <para>Список объектов и их порядок, содержащийся внутри сериализованного файла.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Content.WriteCommand.#ctor">
      <summary>
        <para>Конструктор по умолчанию для пустой команды WriteCommand.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.WriteManagerParameters">
      <summary>
        <para>Определяет параметры записи для функции ContentBuildInterface.WriteGameManagersSerializedFile.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteManagerParameters.globalUsage">
      <summary>
        <para>Глобальная информация об освещении, используемая при записи сериализованного файла.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteManagerParameters.referenceMap">
      <summary>
        <para>Набор внешних объектов, на которые может ссылаться этот сериализованный файл.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteManagerParameters.settings">
      <summary>
        <para>Параметры, используемые при записи сериализованного файла.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.WriteParameters">
      <summary>
        <para>Эта структура собирает все параметры WriteSerializedFile в одном месте.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteParameters.bundleInfo">
      <summary>
        <para>Необязательный параметр, используемый при написании сериализованного файла для пакета активов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteParameters.globalUsage">
      <summary>
        <para>Глобальная информация об освещении, используемая при записи сериализованного файла.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteParameters.preloadInfo">
      <summary>
        <para>Набор зависимостей внешних объектов, которые необходимо загрузить при загрузке результирующего сериализованного файла.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteParameters.referenceMap">
      <summary>
        <para>Набор внешних объектов, на которые может ссылаться этот сериализованный файл.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteParameters.settings">
      <summary>
        <para>Параметры, используемые при записи сериализованного файла.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteParameters.usageSet">
      <summary>
        <para>Теги использования текстуры, материала, сетки и шейдера, используемые при написании сериализованного файла.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteParameters.writeCommand">
      <summary>
        <para>Структура внутреннего имени файла, список объектов и порядок объектов, используемых при записи сериализованного файла.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.WriteResult">
      <summary>
        <para>Структура, содержащая результаты API ContentBuildPipeline.WriteSerialziedFile и ContentBuildPipeline.WriteSceneSerialziedFile.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.WriteResult.includedSerializeReferenceFQN">
      <summary>
        <para>Экземпляры SerializeReference с полным именем, которые были включены в сериализованный файл.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.WriteResult.includedTypes">
      <summary>
        <para>Типы, включенные в сериализованный файл.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.WriteResult.resourceFiles">
      <summary>
        <para>Коллекция файлов, написанных API ContentBuildInterface.WriteSerializedFile или ContentBuildInterface.WriteSceneSerializedFile.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Content.WriteResult.serializedObjects">
      <summary>
        <para>Коллекция объектов, записанных в сериализованный файл.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Content.WriteSceneParameters">
      <summary>
        <para>Эта структура собирает все параметры WriteSceneSerializedFile в одном месте.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteSceneParameters.globalUsage">
      <summary>
        <para>Глобальная информация об освещении, используемая при записи сериализованного файла.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteSceneParameters.preloadInfo">
      <summary>
        <para>Набор зависимостей внешних объектов, которые необходимо загрузить при загрузке результирующего serialzied файла.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteSceneParameters.referenceMap">
      <summary>
        <para>Набор внешних объектов, на которые может ссылаться этот сериализованный файл.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteSceneParameters.sceneBundleInfo">
      <summary>
        <para>Необязательный параметр, используемый при записи сериализованного файла сцены для пакета активов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteSceneParameters.scenePath">
      <summary>
        <para>Исходный путь ресурса сцены.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteSceneParameters.settings">
      <summary>
        <para>Параметры, используемые при записи сериализованного файла.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteSceneParameters.usageSet">
      <summary>
        <para>Теги использования текстуры, материала, сетки и шейдера, используемые при написании сериализованного файла.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Content.WriteSceneParameters.writeCommand">
      <summary>
        <para>Структура внутреннего имени файла, список объектов и порядок объектов, используемых при записи сериализованного файла.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Build.IActiveBuildTargetChanged">
      <summary>
        <para>Реализуйте этот интерфейс для получения обратного вызова после изменения активной платформы сборки.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.IActiveBuildTargetChanged.OnActiveBuildTargetChanged(UnityEditor.BuildTarget,UnityEditor.BuildTarget)">
      <summary>
        <para>Эта функция вызывается автоматически при изменении активной платформы сборки.</para>
      </summary>
      <param name="previousTarget">Целевой объект сборки до изменения.</param>
      <param name="newTarget">Новый активный целевой объект сборки.</param>
    </member>
    <member name="?:UnityEditor.Build.IFilterBuildAssemblies">
      <summary>
        <para>Реализуйте этот интерфейс для получения обратного вызова для фильтрации сборок от сборки.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.IFilterBuildAssemblies.OnFilterAssemblies(UnityEditor.BuildOptions,System.String[])">
      <summary>
        <para>Будет вызываться после сборки сборок скриптов, но позволяет отфильтровывать нежелательные скрипты для включения.</para>
      </summary>
      <param name="buildOptions">Текущие параметры сборки.</param>
      <param name="assemblies">Список сборок, которые будут включены.</param>
      <returns>
        <para>Возвращает отфильтрованный список сборок, включенных в сборку.</para>
      </returns>
    </member>
    <member name="?:UnityEditor.Build.IIl2CppProcessor">
      <summary>
        <para>Реализуйте этот интерфейс для получения обратных вызовов, связанных с запуском IL2CPP.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Il2CppCodeGeneration">
      <summary>
        <para>Опции управления генерацией кода для компилятора IL2CPP.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Il2CppCodeGeneration.OptimizeSize">
      <summary>
        <para>Компилятор IL2CPP сгенерирует код, оптимизированный для размера сборки и времени сборки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Il2CppCodeGeneration.OptimizeSpeed">
      <summary>
        <para>Компилятор IL2CPP сгенерирует код, оптимизированный для производительности среды выполнения.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Build.IOrderedCallback">
      <summary>
        <para>Интерфейс, обеспечивающий контроль над порядком обратного вызова.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.IOrderedCallback.callbackOrder">
      <summary>
        <para>Возвращает относительный порядок обратного вызова для обратных вызовов.  Обратные вызовы с более низкими значениями вызываются перед вызовами с более высокими значениями.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Build.IPostBuildPlayerScriptDLLs">
      <summary>
        <para>Реализуйте этот интерфейс для получения обратного вызова сразу после компиляции сценариев проигрывателя.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.IPostBuildPlayerScriptDLLs.OnPostBuildPlayerScriptDLLs(UnityEditor.Build.Reporting.BuildReport)">
      <summary>
        <para>Реализуйте этот интерфейс для получения обратного вызова сразу после компиляции сценариев проигрывателя.</para>
      </summary>
      <param name="report">Отчет, содержащий сведения о сборке, такие как целевая платформа и выходной путь.</param>
    </member>
    <member name="?:UnityEditor.Build.IPostprocessBuild">
      <summary>
        <para>Этот интерфейс устарел. Вместо этого используйте Build.IPostprocessBuildWithReport.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.IPostprocessBuild.OnPostprocessBuild(UnityEditor.BuildTarget,System.String)">
      <summary>
        <para>Этот метод устарел. Вместо этого используйте Build.IPostprocessBuildWithReport.OnPostprocessBuild.</para>
      </summary>
      <param name="target">
      </param>
      <param name="path">
      </param>
    </member>
    <member name="?:UnityEditor.Build.IPostprocessBuildWithReport">
      <summary>
        <para>Реализуйте этот интерфейс для получения обратного вызова после завершения сборки.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.IPostprocessBuildWithReport.OnPostprocessBuild(UnityEditor.Build.Reporting.BuildReport)">
      <summary>
        <para>Реализуйте эту функцию для получения обратного вызова после завершения сборки.</para>
      </summary>
      <param name="report">Объект BuildReport, содержащий сведения о сборке, такие как целевая платформа и выходной путь.</param>
    </member>
    <member name="?:UnityEditor.Build.IPreprocessBuild">
      <summary>
        <para>Этот интерфейс устарел. Вместо этого используйте Build.IPreprocessBuildWithReport.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.IPreprocessBuild.OnPreprocessBuild(UnityEditor.BuildTarget,System.String)">
      <summary>
        <para>Этот метод устарел. Вместо этого используйте Build.IPreprocessBuildWithReport.OnPreprocessBuild.</para>
      </summary>
      <param name="target">
      </param>
      <param name="path">
      </param>
    </member>
    <member name="?:UnityEditor.Build.IPreprocessBuildWithReport">
      <summary>
        <para>Реализуйте этот интерфейс для получения обратного вызова перед запуском сборки.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.IPreprocessBuildWithReport.OnPreprocessBuild(UnityEditor.Build.Reporting.BuildReport)">
      <summary>
        <para>Реализуйте эту функцию для получения обратного вызова перед запуском сборки.</para>
      </summary>
      <param name="report">Отчет, содержащий сведения о сборке, такие как целевая платформа и выходной путь.</param>
    </member>
    <member name="?:UnityEditor.Build.IPreprocessComputeShaders">
      <summary>
        <para>Реализуйте этот интерфейс для получения обратного вызова перед компиляцией вычислительного шейдера.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.IPreprocessComputeShaders.OnProcessComputeShader(UnityEngine.ComputeShader,System.String,System.Collections.Generic.IList`1&lt;UnityEditor.Rendering.ShaderCompilerData&gt;)">
      <summary>
        <para>Реализуйте этот интерфейс для получения обратного вызова до того, как Unity скомпилирует ядро вычислительного шейдера в сборку.</para>
      </summary>
      <param name="shader">Вычислительный шейдер, который Собирается скомпилировать Unity.</param>
      <param name="kernelName">Имя ядра, которое Unity собирается скомпилировать.</param>
      <param name="data">Список вариантов шейдеров, которые Unity собирается скомпилировать.</param>
    </member>
    <member name="?:UnityEditor.Build.IPreprocessShaders">
      <summary>
        <para>Реализуйте этот интерфейс для получения обратного вызова перед компиляцией шейдера.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.IPreprocessShaders.OnProcessShader(UnityEngine.Shader,UnityEditor.Rendering.ShaderSnippetData,System.Collections.Generic.IList`1&lt;UnityEditor.Rendering.ShaderCompilerData&gt;)">
      <summary>
        <para>Реализуйте этот интерфейс для получения обратного вызова перед компиляцией фрагмента шейдера.</para>
      </summary>
      <param name="shader">Шейдер, который Unity собирается скомпилировать.</param>
      <param name="snippet">Сведения о конкретном компилируемом коде шейдера.</param>
      <param name="data">Список вариантов, которые Unity собирается скомпилировать для шейдера.</param>
    </member>
    <member name="?:UnityEditor.Build.IProcessScene">
      <summary>
        <para>Реализуйте этот интерфейс для получения обратного вызова для каждой сцены во время сборки.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.IProcessScene.OnProcessScene(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Реализуйте эту функцию для получения обратного вызова для каждой сцены во время сборки.</para>
      </summary>
      <param name="scene">Текущая обрабатываемая сцена.</param>
    </member>
    <member name="?:UnityEditor.Build.IProcessSceneWithReport">
      <summary>
        <para>Реализуйте этот интерфейс для получения обратного вызова для каждой сцены во время сборки.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.IProcessSceneWithReport.OnProcessScene(UnityEngine.SceneManagement.Scene,UnityEditor.Build.Reporting.BuildReport)">
      <summary>
        <para>Реализуйте эту функцию для получения обратного вызова для каждой сцены во время сборки.</para>
      </summary>
      <param name="scene">Текущая обрабатываемая сцена.</param>
      <param name="report">Отчет, содержащий сведения о текущей сборке. Когда этот обратный вызов вызывается для загрузки сцены во время режима воспроизведения редактора, этот параметр будет равен null.</param>
    </member>
    <member name="?:UnityEditor.Build.IUnityLinkerProcessor">
      <summary>
        <para>Реализуйте этот интерфейс для получения обратных вызовов, связанных с запуском UnityLinker.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.IUnityLinkerProcessor.GenerateAdditionalLinkXmlFile(UnityEditor.Build.Reporting.BuildReport,UnityEditor.UnityLinker.UnityLinkerBuildPipelineData)">
      <summary>
        <para>Создает дополнительные файлы ссылок.xml для сохранения дополнительных типов и их членов.</para>
      </summary>
      <param name="report">Текущий построенный отчет.</param>
      <param name="data">Информация о текущем запуске UnityLinker.</param>
      <returns>
        <para>Путь к сгенерированному файлу ссылки.xml. Если путь относительный, GenerateAdditionalLinkXmlFile объединяет его с рабочим каталогом, чтобы создать абсолютный путь.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Build.NamedBuildTarget">
      <summary>
        <para>Постройте целевой объект по имени.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.NamedBuildTarget.iOS">
      <summary>
        <para>Ос iOS.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.NamedBuildTarget.tvOS">
      <summary>
        <para>ТвОС.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.NamedBuildTarget.Android">
      <summary>
        <para>Андроид.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.NamedBuildTarget.CloudRendering">
      <summary>
        <para>CloudRendering.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.NamedBuildTarget.EmbeddedLinux">
      <summary>
        <para>ВстроенныйЛинукс.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.NamedBuildTarget.LinuxHeadlessSimulation">
      <summary>
        <para>Linux БезголоваяСимуляция.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.NamedBuildTarget.NintendoSwitch">
      <summary>
        <para>Nintendo Switch.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.NamedBuildTarget.PS4">
      <summary>
        <para>ПС4.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.NamedBuildTarget.Server">
      <summary>
        <para>Сервер.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.NamedBuildTarget.Stadia">
      <summary>
        <para>Теодолит.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.NamedBuildTarget.Standalone">
      <summary>
        <para>Автономный рабочий стол.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.NamedBuildTarget.TargetName">
      <summary>
        <para>Имя целевого объекта сборки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.NamedBuildTarget.Unknown">
      <summary>
        <para>Неизвестный.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.NamedBuildTarget.WebGL">
      <summary>
        <para>ВебГЛ.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.NamedBuildTarget.WindowsStoreApps">
      <summary>
        <para>Приложения Магазина Windows.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.NamedBuildTarget.XboxOne">
      <summary>
        <para>Xbox One.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.OverrideTextureCompression">
      <summary>
        <para>Задает, какое переопределение сжатия текстур будет использоваться при импорте ресурсов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.OverrideTextureCompression.ForceFastCompressor">
      <summary>
        <para>Импортируйте текстуры с быстрым, но менее качественным сжатием текстур.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.OverrideTextureCompression.ForceUncompressed">
      <summary>
        <para>Импортируйте текстуры с выключенным сжатием текстур.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.OverrideTextureCompression.NoOverride">
      <summary>
        <para>Не переопределяйте параметры сжатия импорта текстур.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Player.PlayerBuildInterface">
      <summary>
        <para>Низкоуровневый интерфейс для построения скриптов для Unity.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Player.PlayerBuildInterface.CompilePlayerScripts(UnityEditor.Build.Player.ScriptCompilationSettings,System.String)">
      <summary>
        <para>Компилирует пользовательские сценарии в одну или несколько сборок.</para>
      </summary>
      <param name="input">
      </param>
      <param name="outputFolder">
      </param>
    </member>
    <member name="T:UnityEditor.Build.Player.ScriptCompilationOptions">
      <summary>
        <para>Параметры компиляции скриптов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Player.ScriptCompilationOptions.Assertions">
      <summary>
        <para>Включите утверждения в скомпилированные скрипты. По умолчанию утверждения включаются только в сборки разработки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Player.ScriptCompilationOptions.DevelopmentBuild">
      <summary>
        <para>Создайте версию сценариев для разработки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Player.ScriptCompilationOptions.None">
      <summary>
        <para>Компилировали скрипты без каких-либо специальных настроек.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Player.ScriptCompilationResult">
      <summary>
        <para>Структура со сведениями о результатах, возвращаемыми из API PlayerBuildInterface.CompilePlayerScripts.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Player.ScriptCompilationResult.assemblies">
      <summary>
        <para>Коллекция скомпилированных сборок.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Player.ScriptCompilationResult.typeDB">
      <summary>
        <para>Введите сведения, генерируемые вызовом компиляции скрипта.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Player.ScriptCompilationSettings">
      <summary>
        <para>Структура, содержащая информацию о том, как строить скрипты.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Player.ScriptCompilationSettings.extraScriptingDefines">
      <summary>
        <para>Заданный пользователем препроцессор определяет используемые при компиляции сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Player.ScriptCompilationSettings.group">
      <summary>
        <para>Группа платформ, для которой будут компилироваться скрипты.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Player.ScriptCompilationSettings.options">
      <summary>
        <para>Конкретные параметры компилятора, используемые при компиляции сценариев.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Player.ScriptCompilationSettings.subtarget">
      <summary>
        <para>Подцель, для которого будут компилироваться скрипты.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Player.ScriptCompilationSettings.target">
      <summary>
        <para>Группа платформ, для которой будут компилироваться скрипты.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Player.TypeDB">
      <summary>
        <para>Контейнер для хранения сведений о типе скрипта и данных свойств.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Player.TypeDB.Dispose">
      <summary>
        <para>Утилизируйте Базу данных TypeDB, уничтожив все внутреннее состояние.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Player.TypeDB.Equals(System.Object)">
      <summary>
        <para>Возвращает значение true, если объекты равны.</para>
      </summary>
      <param name="obj">
      </param>
    </member>
    <member name="M:UnityEditor.Build.Player.TypeDB.GetHash128">
      <summary>
        <para>Получает хэш для buildReferenceMap.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Player.TypeDB.GetHashCode">
      <summary>
        <para>Получает хэш-код для TypeDB.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Player.TypeDB.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <para>ISerializable метод поддержки сериализации вне внутренней системы сериализации Unity.</para>
      </summary>
      <param name="info">
      </param>
      <param name="context">
      </param>
    </member>
    <member name="T:UnityEditor.Build.Reporting.BuildFile">
      <summary>
        <para>Содержит сведения об одном файле, созданном в процессе сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildFile.id">
      <summary>
        <para>Уникальный идентификатор файла сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildFile.path">
      <summary>
        <para>Абсолютный путь к файлу, созданному в процессе сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildFile.role">
      <summary>
        <para>Роль, которую файл играет в выходных данных сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildFile.size">
      <summary>
        <para>Общий размер файла в байтах.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Reporting.BuildReport">
      <summary>
        <para>API BuildReport предоставляет сведения о процессе сборки Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildReport.files">
      <summary>
        <para>Массив всех файлов, выводимых процессом сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildReport.packedAssets">
      <summary>
        <para>Массив всех Упакованных Ассетов, созданных в процессе сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildReport.scenesUsingAssets">
      <summary>
        <para>Необязательный массив ScenesUsingAssets, созданный процессом сборки, если во время сборки использовался BuildOptions.DetailedBuildReport.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildReport.steps">
      <summary>
        <para>Массив всех шагов сборки, выполненных в процессе сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildReport.strippingInfo">
      <summary>
        <para>Объект StrippingInfo для построения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildReport.summary">
      <summary>
        <para>Объект BuildSummary, содержащий общую статистику и данные о процессе сборки.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Reporting.BuildResult">
      <summary>
        <para>Описывает результат процесса сборки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Reporting.BuildResult.Cancelled">
      <summary>
        <para>Указывает, что сборка была отменена пользователем.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Reporting.BuildResult.Failed">
      <summary>
        <para>Указывает, что сборка завершилась ошибкой.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Reporting.BuildResult.Succeeded">
      <summary>
        <para>Указывает, что сборка успешно завершена.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Build.Reporting.BuildResult.Unknown">
      <summary>
        <para>Указывает, что результат сборки находится в неизвестном состоянии.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Reporting.BuildStep">
      <summary>
        <para>Содержит сведения об одном шаге процесса сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildStep.depth">
      <summary>
        <para>Глубина вложенности шага построения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildStep.duration">
      <summary>
        <para>Общая продолжительность этого шага построения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildStep.messages">
      <summary>
        <para>Все сообщения журнала записываются на этом этапе сборки, в том порядке, в котором они произошли.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildStep.name">
      <summary>
        <para>Имя этого шага сборки.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Reporting.BuildStepMessage">
      <summary>
        <para>Содержит сведения об одном сообщении журнала, записанном в процессе построения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildStepMessage.content">
      <summary>
        <para>Текстовое содержимое сообщения журнала.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildStepMessage.type">
      <summary>
        <para>Тип журнала.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Reporting.BuildSummary">
      <summary>
        <para>Содержит общие сводные сведения о сборке.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildSummary.buildEndedAt">
      <summary>
        <para>Время окончания сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildSummary.buildStartedAt">
      <summary>
        <para>Время начала сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildSummary.guid">
      <summary>
        <para>Идентификатор Application.buildGUID сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildSummary.options">
      <summary>
        <para>Объект BuildOptions, используемый для сборки, переданный в BuildPipeline.BuildPlayer.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildSummary.outputPath">
      <summary>
        <para>Выходной путь для сборки, предоставленный BuildPipeline.BuildPlayer.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildSummary.platform">
      <summary>
        <para>Платформа, для которой была создана сборка.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildSummary.platformGroup">
      <summary>
        <para>Группа платформ, для которой была создана сборка.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildSummary.result">
      <summary>
        <para>Результат сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildSummary.totalErrors">
      <summary>
        <para>Общее количество ошибок и исключений, записанных в процессе сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildSummary.totalSize">
      <summary>
        <para>Общий размер выходных данных сборки в байтах.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildSummary.totalTime">
      <summary>
        <para>Общее время, затрачиваемое на процесс сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.BuildSummary.totalWarnings">
      <summary>
        <para>Общее количество предупреждений, записанных в процессе сборки.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Reporting.BuildSummary.GetSubtarget">
      <summary>
        <para>Подцель, для которого была создана сборка.</para>
      </summary>
      <returns>
        <para>Возвращает значение подцели.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Build.Reporting.CommonRoles">
      <summary>
        <para>Этот класс предоставляет постоянные значения для некоторых распространенных ролей, используемых файлами в сборке. Роль каждого файла в сборке доступна в buildFile.role.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.appInfo">
      <summary>
        <para>Значение BuildFile.role файла, содержащего сведения о конфигурации, используемые в режиме низкой целостности в Windows.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.assetBundle">
      <summary>
        <para>Значение BuildFile.role для построенных файлов AssetBundle.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.assetBundleTextManifest">
      <summary>
        <para>Значение BuildFile.role файла манифеста AssetBundle, созданного в процессе построения, содержащего сведения о пакете и его зависимостях.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.bootConfig">
      <summary>
        <para>Значение BuildFile.role файла, содержащего сведения о конфигурации для самых ранних этапов запуска ядра.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.builtInResources">
      <summary>
        <para>Значение BuildFile.role файла, содержащего встроенные ресурсы для ядра.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.builtInShaders">
      <summary>
        <para>Значение BuildFile.role файла, содержащего встроенные шейдеры Unity, такие как стандартный шейдер.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.crashHandler">
      <summary>
        <para>Значение BuildFile.role исполняемого файла, используемого для захвата сбоев проигрывателя.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.debugInfo">
      <summary>
        <para>Значение BuildFile.role файлов, содержащих сведения для отладчиков.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.dependentManagedLibrary">
      <summary>
        <para>Значение BuildFile.role управляемой библиотеки, присутствующей в сборке из-за зависимости от библиотеки CommonRoles.managed.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.engineLibrary">
      <summary>
        <para>Значение BuildFile.role основной среды выполнения Unity при построении в виде отдельной библиотеки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.executable">
      <summary>
        <para>Значение BuildFile.role исполняемого файла — файла, который фактически будет запущен на оконечном устройстве.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.globalGameManagers">
      <summary>
        <para>Значение BuildFile.role файла, содержащего глобальные данные параметров проекта для проигрывателя.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.managedEngineApi">
      <summary>
        <para>Значение BuildFile.role файлов, предоставляющих управляемый API для Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.managedLibrary">
      <summary>
        <para>Значение BuildFile.role управляемой сборки, содержащей скомпилированный код скрипта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.manifestAssetBundle">
      <summary>
        <para>Значение BuildFile.role манифеста AssetBundle, которое является объектом AssetBundle, содержащим сведения о других объектах AssetBundles и их зависимостях.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.monoConfig">
      <summary>
        <para>Значение BuildFile.role файлов, используемых в качестве данных конфигурации средой выполнения Mono.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.monoRuntime">
      <summary>
        <para>Значение BuildFile.role файлов, составляющих саму среду выполнения Mono.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.resourcesFile">
      <summary>
        <para>Значение BuildFile.role файла, содержащего содержимое папки "Resources" проекта, упакованной в один файл.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.scene">
      <summary>
        <para>Значение BuildFile.role файла, содержащего упакованное содержимое scene.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.sharedAssets">
      <summary>
        <para>Значение BuildFile.role файла, содержащего объекты ресурсов, совместно используемые Scenes. Примерами объектов ресурсов являются текстуры, модели и аудио.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.streamingAsset">
      <summary>
        <para>Значение BuildFile.role файлов, скопированных в сборку без изменений из папки StreamingAssets в проекте.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.CommonRoles.streamingResourceFile">
      <summary>
        <para>Значение BuildFile.role файла, содержащего потоковые данные ресурсов.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Reporting.PackedAssetInfo">
      <summary>
        <para>Содержит сведения об одном упакованном ресурсе.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.PackedAssetInfo.id">
      <summary>
        <para>Уникальный идентификатор упакованного ресурса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.PackedAssetInfo.offset">
      <summary>
        <para>Смещение в файле PackedAssets, указывающее начало упакованного ресурса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.PackedAssetInfo.packedSize">
      <summary>
        <para>Размер упакованного ресурса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.PackedAssetInfo.sourceAssetGUID">
      <summary>
        <para>Глобальный уникальный идентификатор (GUID) исходного ресурса, который процесс построения использовал для создания упакованного ресурса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.PackedAssetInfo.sourceAssetPath">
      <summary>
        <para>Путь к исходному ресурсу, который процесс построения использовал для создания пакета Asset, относительно каталога Project.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.PackedAssetInfo.type">
      <summary>
        <para>Тип исходного ресурса, который процесс сборки использовал для создания пакета Asset, например типы изображения, сетки или звука.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Reporting.PackedAssets">
      <summary>
        <para>Расширение класса BuildReport, отслеживающее, как Assets влияет на размер сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.PackedAssets.contents">
      <summary>
        <para>Массив объектов PackedAssetInfo, содержащий сведения об активах, включенных в пакет PackedAssets, например размер и тип упакованного ресурса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.PackedAssets.file">
      <summary>
        <para>Идентификатор buildFile, содержащий содержимое упакованного файла ресурса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.PackedAssets.overhead">
      <summary>
        <para>Размер заголовка упакованного файла ресурса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.PackedAssets.shortPath">
      <summary>
        <para>Путь к файлу пакета Asset относительно папки Data сборки.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Reporting.ScenesUsingAsset">
      <summary>
        <para>Содержит сведения о том, какие сцены в сборке имеют ссылки на ресурс в сборке.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.ScenesUsingAsset.assetPath">
      <summary>
        <para>Путь к ресурсу.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.ScenesUsingAsset.scenePaths">
      <summary>
        <para>Список сцен в сборке, относящийся к ресурсу, идентифицируемый строкой, содержащей индекс сцены в списке BuildPlayerOptions.scenes, а также путь к сцене.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Reporting.ScenesUsingAssets">
      <summary>
        <para>Расширение класса BuildReport, отслеживающее, какие сцены в сборке имеют ссылки на определенный ресурс в сборке.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.ScenesUsingAssets.list">
      <summary>
        <para>Массив ScenesUsingAsset, содержащий сведения об активах, включенных в сборку.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Build.Reporting.StrippingInfo">
      <summary>
        <para>Объект StrippingInfo содержит сведения о том, какие модули машинного кода в ядре все еще присутствуют в сборке, и причины, по которым они все еще присутствуют.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Build.Reporting.StrippingInfo.includedModules">
      <summary>
        <para>Собственные модули движка, которые были включены в сборку.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Build.Reporting.StrippingInfo.GetReasonsForIncluding(System.String)">
      <summary>
        <para>Возвращает список зависимостей или причин, по которым данная сущность была включена в сборку.</para>
      </summary>
      <param name="entityName">Имя модуля, класса или другой сущности ядра, присутствующей в сборке.</param>
      <returns>
        <para>Список модулей, классов или других сущностей, которые привели к включению предоставленной сущности в сборку.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.BuildAssetBundleOptions">
      <summary>
        <para>Варианты построения Asset Bundle.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildAssetBundleOptions.AppendHashToAssetBundleName">
      <summary>
        <para>Добавьте хэш к имени assetBundle.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildAssetBundleOptions.AssetBundleStripUnityVersion">
      <summary>
        <para>Удаляет номер версии Unity в заголовках Archive File &amp; Serialized File во время сборки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildAssetBundleOptions.ChunkBasedCompression">
      <summary>
        <para>Используйте сжатие LZ4 на основе блоков при создании AssetBundle.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildAssetBundleOptions.CollectDependencies">
      <summary>
        <para>Включает все зависимости.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildAssetBundleOptions.CompleteAssets">
      <summary>
        <para>Принудительное включение всего актива.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildAssetBundleOptions.DeterministicAssetBundle">
      <summary>
        <para>Создает пакет ресурсов, используя хэш для идентификатора объекта, хранящегося в пакете ресурсов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildAssetBundleOptions.DisableLoadAssetByFileName">
      <summary>
        <para>Отключает LoadAsset пакета активов по имени файла.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildAssetBundleOptions.DisableLoadAssetByFileNameWithExtension">
      <summary>
        <para>Отключает LoadAsset пакета активов по имени файла с расширением.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildAssetBundleOptions.DisableWriteTypeTree">
      <summary>
        <para>Не включайте сведения о типе в assetBundle.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildAssetBundleOptions.DryRunBuild">
      <summary>
        <para>Сделайте сборку сухим прогоном.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildAssetBundleOptions.ForceRebuildAssetBundle">
      <summary>
        <para>Принудительно перестроить активBundles.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildAssetBundleOptions.IgnoreTypeTreeChanges">
      <summary>
        <para>Игнорируйте изменения дерева типов при выполнении добавочной проверки сборки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildAssetBundleOptions.None">
      <summary>
        <para>Создавайте assetBundle без каких-либо специальных опций.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildAssetBundleOptions.StrictMode">
      <summary>
        <para>Не допускайте успешного выполнения сборки, если во время нее возникают сообщения об ошибках.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildAssetBundleOptions.UncompressedAssetBundle">
      <summary>
        <para>Не сжимайте данные при создании AssetBundle.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.BuildOptions">
      <summary>
        <para>Варианты строительства. Несколько вариантов могут быть объединены вместе.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.AcceptExternalModificationsToPlayer">
      <summary>
        <para>Используется при построении проектов Xcode (iOS) или Eclipse (Android).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.AllowDebugging">
      <summary>
        <para>Разрешить отладчикам сценариев удаленно подключаться к проигрывателю.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.AutoRunPlayer">
      <summary>
        <para>Запустите встроенный плеер.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.BuildAdditionalStreamedScenes">
      <summary>
        <para>Создайте сжатый набор ресурсов, содержащий потоковые сцены, загружаемые с помощью класса UnityWebRequest.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.BuildScriptsOnly">
      <summary>
        <para>Выполняйте сборку сценариев только в проекте.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.CleanBuildCache">
      <summary>
        <para>Очистите все кэшированные результаты сборки, что приведет к полному перестроению всех скриптов и всех данных игрока.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.CompressWithLz4">
      <summary>
        <para>Используйте сжатие LZ4 на основе блоков при сборке проигрывателя.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.CompressWithLz4HC">
      <summary>
        <para>Используйте LZ4 с высокой степенью сжатия на основе блоков при сборке проигрывателя.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.ConnectToHost">
      <summary>
        <para>Настраивает проигрыватель для подключения к редактору.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.ConnectWithProfiler">
      <summary>
        <para>Запустите плеер с подключением к профилировщику в редакторе.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.CustomConnectionID">
      <summary>
        <para>Определяет, должен ли проигрыватель использовать пользовательский идентификатор подключения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.DetailedBuildReport">
      <summary>
        <para>Создает дополнительные сведения в BuildReport.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.Development">
      <summary>
        <para>Создайте разрабатываемую версию плеера.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.EnableCodeCoverage">
      <summary>
        <para>Обеспечивает покрытие кода. Это можно использовать в качестве дополнительного способа включения покрытия кода на платформах, не поддерживающих аргументы командной строки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.EnableDeepProfilingSupport">
      <summary>
        <para>Включает поддержку глубокого профилирования в проигрывателе.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.EnableHeadlessMode">
      <summary>
        <para>Опции построения автономного плеера в безголовом режиме.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.ForceEnableAssertions">
      <summary>
        <para>Включите утверждения в сборку. По умолчанию утверждения включаются только в сборки разработки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.ForceOptimizeScriptCompilation">
      <summary>
        <para>Принудительная полная оптимизация для компиляции скриптов в сборках разработки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.IncludeTestAssemblies">
      <summary>
        <para>Сборка будет включать сборки для тестирования.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.None">
      <summary>
        <para>Выполните указанную сборку без каких-либо специальных настроек или дополнительных задач.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.NoUniqueIdentifier">
      <summary>
        <para>Принудительно придаст buildGUID всем нулям.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.PatchPackage">
      <summary>
        <para>Исправьте пакет приложения для разработки, а не полностью перестройте его.  Поддерживаемые платформы: Android.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.ShaderLivelinkSupport">
      <summary>
        <para>Включите поддержку шейдера Livelink.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.ShowBuiltPlayer">
      <summary>
        <para>Покажите встроенный плеер.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.StrictMode">
      <summary>
        <para>Не допускайте успешного выполнения сборки, если во время нее возникают сообщения об ошибках.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.SymlinkLibraries">
      <summary>
        <para>Символьное связывание библиотек времени выполнения при создании проекта iOS Xcode. (Более быстрое время итерации).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.SymlinkSources">
      <summary>
        <para>Символьные ссылки на источники при создании проекта. Это полезно, если вы изменяете исходные файлы внутри сгенерированного проекта и хотите вернуть изменения в свой проект Unity или пакет.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.UncompressedAssetBundle">
      <summary>
        <para>Не сжимайте данные при создании пакета ресурсов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildOptions.WaitForPlayerConnection">
      <summary>
        <para>Настраивает проигрыватель на ожидание подключения игрока при запуске проигрывателя.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.BuildPipeline">
      <summary>
        <para>Позволяет программно создавать проигрыватели или AssetBundles, которые можно загружать из Интернета.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.BuildPipeline.isBuildingPlayer">
      <summary>
        <para>Создается ли плеер в настоящее время?</para>
      </summary>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildAssetBundle">
      <summary>
        <para>Создает пакет ресурсов.</para>
      </summary>
      <param name="mainAsset">Позволяет указать конкретный объект, который можно удобно извлечь с помощью AssetBundle.mainAsset.</param>
      <param name="assets">Массив ресурсов для записи в пакет.</param>
      <param name="pathName">Имя файла, в который необходимо записать сжатый пакет ресурсов.</param>
      <param name="assetBundleOptions">Автоматически включайте зависимости или всегда включайте полные ресурсы, а не только точные объекты, на которые ссылаются.</param>
      <param name="targetPlatform">Платформа для сборки пакета.</param>
      <param name="crc">Необязательный выходной параметр crc можно использовать для получения контрольной суммы CRC для сгенерированного объекта AssetBundle, который можно использовать для проверки содержимого при загрузке AssetBundles с помощью UnityWebRequestAssetBundle.GetAssetBundle.</param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildAssetBundle">
      <summary>
        <para>Создает пакет ресурсов.</para>
      </summary>
      <param name="mainAsset">Позволяет указать конкретный объект, который можно удобно извлечь с помощью AssetBundle.mainAsset.</param>
      <param name="assets">Массив ресурсов для записи в пакет.</param>
      <param name="pathName">Имя файла, в который необходимо записать сжатый пакет ресурсов.</param>
      <param name="assetBundleOptions">Автоматически включайте зависимости или всегда включайте полные ресурсы, а не только точные объекты, на которые ссылаются.</param>
      <param name="targetPlatform">Платформа для сборки пакета.</param>
      <param name="crc">Необязательный выходной параметр crc можно использовать для получения контрольной суммы CRC для сгенерированного объекта AssetBundle, который можно использовать для проверки содержимого при загрузке AssetBundles с помощью UnityWebRequestAssetBundle.GetAssetBundle.</param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildAssetBundle">
      <summary>
        <para>Создает пакет ресурсов.</para>
      </summary>
      <param name="mainAsset">Позволяет указать конкретный объект, который можно удобно извлечь с помощью AssetBundle.mainAsset.</param>
      <param name="assets">Массив ресурсов для записи в пакет.</param>
      <param name="pathName">Имя файла, в который необходимо записать сжатый пакет ресурсов.</param>
      <param name="assetBundleOptions">Автоматически включайте зависимости или всегда включайте полные ресурсы, а не только точные объекты, на которые ссылаются.</param>
      <param name="targetPlatform">Платформа для сборки пакета.</param>
      <param name="crc">Необязательный выходной параметр crc можно использовать для получения контрольной суммы CRC для сгенерированного объекта AssetBundle, который можно использовать для проверки содержимого при загрузке AssetBundles с помощью UnityWebRequestAssetBundle.GetAssetBundle.</param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildAssetBundle">
      <summary>
        <para>Создает пакет ресурсов.</para>
      </summary>
      <param name="mainAsset">Позволяет указать конкретный объект, который можно удобно извлечь с помощью AssetBundle.mainAsset.</param>
      <param name="assets">Массив ресурсов для записи в пакет.</param>
      <param name="pathName">Имя файла, в который необходимо записать сжатый пакет ресурсов.</param>
      <param name="assetBundleOptions">Автоматически включайте зависимости или всегда включайте полные ресурсы, а не только точные объекты, на которые ссылаются.</param>
      <param name="targetPlatform">Платформа для сборки пакета.</param>
      <param name="crc">Необязательный выходной параметр crc можно использовать для получения контрольной суммы CRC для сгенерированного объекта AssetBundle, который можно использовать для проверки содержимого при загрузке AssetBundles с помощью UnityWebRequestAssetBundle.GetAssetBundle.</param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildAssetBundle(UnityEngine.Object,UnityEngine.Object[],System.String,UnityEditor.BuildAssetBundleOptions,UnityEditor.BuildTarget)">
      <summary>
        <para>Создает пакет ресурсов.</para>
      </summary>
      <param name="mainAsset">Позволяет указать конкретный объект, который можно удобно извлечь с помощью AssetBundle.mainAsset.</param>
      <param name="assets">Массив ресурсов для записи в пакет.</param>
      <param name="pathName">Имя файла, в который необходимо записать сжатый пакет ресурсов.</param>
      <param name="assetBundleOptions">Автоматически включайте зависимости или всегда включайте полные ресурсы, а не только точные объекты, на которые ссылаются.</param>
      <param name="targetPlatform">Платформа для сборки пакета.</param>
      <param name="crc">Необязательный выходной параметр crc можно использовать для получения контрольной суммы CRC для сгенерированного объекта AssetBundle, который можно использовать для проверки содержимого при загрузке AssetBundles с помощью UnityWebRequestAssetBundle.GetAssetBundle.</param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildAssetBundle(UnityEngine.Object,UnityEngine.Object[],System.String,System.UInt32&amp;,UnityEditor.BuildAssetBundleOptions,UnityEditor.BuildTarget)">
      <summary>
        <para>Создает пакет ресурсов.</para>
      </summary>
      <param name="mainAsset">Позволяет указать конкретный объект, который можно удобно извлечь с помощью AssetBundle.mainAsset.</param>
      <param name="assets">Массив ресурсов для записи в пакет.</param>
      <param name="pathName">Имя файла, в который необходимо записать сжатый пакет ресурсов.</param>
      <param name="assetBundleOptions">Автоматически включайте зависимости или всегда включайте полные ресурсы, а не только точные объекты, на которые ссылаются.</param>
      <param name="targetPlatform">Платформа для сборки пакета.</param>
      <param name="crc">Необязательный выходной параметр crc можно использовать для получения контрольной суммы CRC для сгенерированного объекта AssetBundle, который можно использовать для проверки содержимого при загрузке AssetBundles с помощью UnityWebRequestAssetBundle.GetAssetBundle.</param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildAssetBundleExplicitAssetNames">
      <summary>
        <para>Создает пакет ресурсов с пользовательскими именами ресурсов.</para>
      </summary>
      <param name="assets">Коллекция ресурсов, встраиваемых в пакет активов. Пакеты ресурсов могут содержать любой ресурс, найденный в папке проекта.</param>
      <param name="assetNames">Массив строк того же размера, что и количество ресурсов. Они будут использоваться в качестве имен активов, которые затем можно передать в AssetBundle.Load для загрузки определенного ресурса. Используйте BuildAssetBundle, чтобы просто использовать имена путей к ресурсу.</param>
      <param name="pathName">Расположение, в которое будет записан сжатый пакет ресурсов.</param>
      <param name="assetBundleOptions">Автоматически включайте зависимости или всегда включайте полные ресурсы, а не только точные объекты, на которые ссылаются.</param>
      <param name="targetPlatform">Платформа, на которой будет использоваться пакет активов.</param>
      <param name="crc">Необязательный выходной параметр, используемый для получения контрольной суммы CRC для сгенерированного объекта AssetBundle. (Используется для проверки содержимого при загрузке AssetBundles с помощью UnityWebRequestAssetBundle.GetAssetBundle().)</param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildAssetBundleExplicitAssetNames">
      <summary>
        <para>Создает пакет ресурсов с пользовательскими именами ресурсов.</para>
      </summary>
      <param name="assets">Коллекция ресурсов, встраиваемых в пакет активов. Пакеты ресурсов могут содержать любой ресурс, найденный в папке проекта.</param>
      <param name="assetNames">Массив строк того же размера, что и количество ресурсов. Они будут использоваться в качестве имен активов, которые затем можно передать в AssetBundle.Load для загрузки определенного ресурса. Используйте BuildAssetBundle, чтобы просто использовать имена путей к ресурсу.</param>
      <param name="pathName">Расположение, в которое будет записан сжатый пакет ресурсов.</param>
      <param name="assetBundleOptions">Автоматически включайте зависимости или всегда включайте полные ресурсы, а не только точные объекты, на которые ссылаются.</param>
      <param name="targetPlatform">Платформа, на которой будет использоваться пакет активов.</param>
      <param name="crc">Необязательный выходной параметр, используемый для получения контрольной суммы CRC для сгенерированного объекта AssetBundle. (Используется для проверки содержимого при загрузке AssetBundles с помощью UnityWebRequestAssetBundle.GetAssetBundle().)</param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildAssetBundleExplicitAssetNames">
      <summary>
        <para>Создает пакет ресурсов с пользовательскими именами ресурсов.</para>
      </summary>
      <param name="assets">Коллекция ресурсов, встраиваемых в пакет активов. Пакеты ресурсов могут содержать любой ресурс, найденный в папке проекта.</param>
      <param name="assetNames">Массив строк того же размера, что и количество ресурсов. Они будут использоваться в качестве имен активов, которые затем можно передать в AssetBundle.Load для загрузки определенного ресурса. Используйте BuildAssetBundle, чтобы просто использовать имена путей к ресурсу.</param>
      <param name="pathName">Расположение, в которое будет записан сжатый пакет ресурсов.</param>
      <param name="assetBundleOptions">Автоматически включайте зависимости или всегда включайте полные ресурсы, а не только точные объекты, на которые ссылаются.</param>
      <param name="targetPlatform">Платформа, на которой будет использоваться пакет активов.</param>
      <param name="crc">Необязательный выходной параметр, используемый для получения контрольной суммы CRC для сгенерированного объекта AssetBundle. (Используется для проверки содержимого при загрузке AssetBundles с помощью UnityWebRequestAssetBundle.GetAssetBundle().)</param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildAssetBundleExplicitAssetNames">
      <summary>
        <para>Создает пакет ресурсов с пользовательскими именами ресурсов.</para>
      </summary>
      <param name="assets">Коллекция ресурсов, встраиваемых в пакет активов. Пакеты ресурсов могут содержать любой ресурс, найденный в папке проекта.</param>
      <param name="assetNames">Массив строк того же размера, что и количество ресурсов. Они будут использоваться в качестве имен активов, которые затем можно передать в AssetBundle.Load для загрузки определенного ресурса. Используйте BuildAssetBundle, чтобы просто использовать имена путей к ресурсу.</param>
      <param name="pathName">Расположение, в которое будет записан сжатый пакет ресурсов.</param>
      <param name="assetBundleOptions">Автоматически включайте зависимости или всегда включайте полные ресурсы, а не только точные объекты, на которые ссылаются.</param>
      <param name="targetPlatform">Платформа, на которой будет использоваться пакет активов.</param>
      <param name="crc">Необязательный выходной параметр, используемый для получения контрольной суммы CRC для сгенерированного объекта AssetBundle. (Используется для проверки содержимого при загрузке AssetBundles с помощью UnityWebRequestAssetBundle.GetAssetBundle().)</param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildAssetBundleExplicitAssetNames(UnityEngine.Object[],System.String[],System.String,UnityEditor.BuildAssetBundleOptions,UnityEditor.BuildTarget)">
      <summary>
        <para>Создает пакет ресурсов с пользовательскими именами ресурсов.</para>
      </summary>
      <param name="assets">Коллекция ресурсов, встраиваемых в пакет активов. Пакеты ресурсов могут содержать любой ресурс, найденный в папке проекта.</param>
      <param name="assetNames">Массив строк того же размера, что и количество ресурсов. Они будут использоваться в качестве имен активов, которые затем можно передать в AssetBundle.Load для загрузки определенного ресурса. Используйте BuildAssetBundle, чтобы просто использовать имена путей к ресурсу.</param>
      <param name="pathName">Расположение, в которое будет записан сжатый пакет ресурсов.</param>
      <param name="assetBundleOptions">Автоматически включайте зависимости или всегда включайте полные ресурсы, а не только точные объекты, на которые ссылаются.</param>
      <param name="targetPlatform">Платформа, на которой будет использоваться пакет активов.</param>
      <param name="crc">Необязательный выходной параметр, используемый для получения контрольной суммы CRC для сгенерированного объекта AssetBundle. (Используется для проверки содержимого при загрузке AssetBundles с помощью UnityWebRequestAssetBundle.GetAssetBundle().)</param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildAssetBundleExplicitAssetNames(UnityEngine.Object[],System.String[],System.String,System.UInt32&amp;,UnityEditor.BuildAssetBundleOptions,UnityEditor.BuildTarget)">
      <summary>
        <para>Создает пакет ресурсов с пользовательскими именами ресурсов.</para>
      </summary>
      <param name="assets">Коллекция ресурсов, встраиваемых в пакет активов. Пакеты ресурсов могут содержать любой ресурс, найденный в папке проекта.</param>
      <param name="assetNames">Массив строк того же размера, что и количество ресурсов. Они будут использоваться в качестве имен активов, которые затем можно передать в AssetBundle.Load для загрузки определенного ресурса. Используйте BuildAssetBundle, чтобы просто использовать имена путей к ресурсу.</param>
      <param name="pathName">Расположение, в которое будет записан сжатый пакет ресурсов.</param>
      <param name="assetBundleOptions">Автоматически включайте зависимости или всегда включайте полные ресурсы, а не только точные объекты, на которые ссылаются.</param>
      <param name="targetPlatform">Платформа, на которой будет использоваться пакет активов.</param>
      <param name="crc">Необязательный выходной параметр, используемый для получения контрольной суммы CRC для сгенерированного объекта AssetBundle. (Используется для проверки содержимого при загрузке AssetBundles с помощью UnityWebRequestAssetBundle.GetAssetBundle().)</param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildAssetBundles(System.String,UnityEditor.BuildAssetBundleOptions,UnityEditor.BuildTarget)">
      <summary>
        <para>Выполните сборку всех объектов AssetBundles, указанных в редакторе.</para>
      </summary>
      <param name="outputPath">Выходной путь для объектов AssetBundles.</param>
      <param name="assetBundleOptions">Варианты строительства AssetBundle.</param>
      <param name="targetPlatform">Выбрана целевая платформа сборки.</param>
      <returns>
        <para>Манифест со списком всех объектов AssetBundles, включенных в эту сборку.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildAssetBundles(System.String,UnityEditor.AssetBundleBuild[],UnityEditor.BuildAssetBundleOptions,UnityEditor.BuildTarget)">
      <summary>
        <para>Создание AssetBundles из карты зданий.</para>
      </summary>
      <param name="outputPath">Выходной путь для объектов AssetBundles.</param>
      <param name="builds">Карта здания AssetBundle.</param>
      <param name="assetBundleOptions">Варианты строительства AssetBundle.</param>
      <param name="targetPlatform">Целевая платформа сборки.</param>
      <returns>
        <para>Манифест со списком всех объектов AssetBundles, включенных в эту сборку.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildCanBeAppended(UnityEditor.BuildTarget,System.String)">
      <summary>
        <para>Проверяет, может ли Unity добавить сборку.</para>
      </summary>
      <param name="target">Объект buildTarget для сборки.</param>
      <param name="location">Путь, по которому Unity создает приложение.</param>
      <returns>
        <para>Возвращает перечисление UnityEditor.CanAppendBuild, указывающее, может ли Unity добавить сборку.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildPlayer(UnityEditor.BuildPlayerOptions)">
      <summary>
        <para>Строит игрока.</para>
      </summary>
      <param name="buildPlayerOptions">Предоставьте различные параметры для управления поведением BuildPipeline.BuildPlayer.</param>
      <returns>
        <para>Объект BuildReport, предоставляющий сведения о процессе построения.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildPlayer(System.String[],System.String,UnityEditor.BuildTarget,UnityEditor.BuildOptions)">
      <summary>
        <para>Строит игрока. Эти перегрузки по-прежнему поддерживаются, но будут заменены. Вместо этого используйте BuildPlayer (BuildPlayerOptions buildPlayerOptions).</para>
      </summary>
      <param name="scenes">Сцены для включения в сборку. Если сборка пуста, она включает только открытую в данный момент Scene. Пути относятся к папке проекта (AssetsMyLevelsMyScene.unity).</param>
      <param name="locationPathName">Путь, по которому будет построено приложение.</param>
      <param name="target">Объект buildTarget для сборки.</param>
      <param name="options">Дополнительные buildOptions, например, запускать ли встроенный плеер.</param>
      <param name="levels">
      </param>
      <returns>
        <para>Сообщение об ошибке, если произошла ошибка.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildPlayer(UnityEditor.EditorBuildSettingsScene[],System.String,UnityEditor.BuildTarget,UnityEditor.BuildOptions)">
      <summary>
        <para>Строит игрока. Эти перегрузки по-прежнему поддерживаются, но будут заменены. Вместо этого используйте BuildPlayer (BuildPlayerOptions buildPlayerOptions).</para>
      </summary>
      <param name="scenes">Сцены для включения в сборку. Если сборка пуста, она включает только открытую в данный момент Scene. Пути относятся к папке проекта (AssetsMyLevelsMyScene.unity).</param>
      <param name="locationPathName">Путь, по которому будет построено приложение.</param>
      <param name="target">Объект buildTarget для сборки.</param>
      <param name="options">Дополнительные buildOptions, например, запускать ли встроенный плеер.</param>
      <param name="levels">
      </param>
      <returns>
        <para>Сообщение об ошибке, если произошла ошибка.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildStreamedSceneAssetBundle(System.String[],System.String,UnityEditor.BuildTarget)">
      <summary>
        <para>Встраивает одну или несколько сцен и все их зависимости в сжатый пакет ресурсов.</para>
      </summary>
      <param name="levels">Пути уровней, включаемых в пакет ресурсов.</param>
      <param name="locationPath">Путь к пакету выходных ресурсов.</param>
      <param name="target">Платформа среды выполнения, на которой будет использоваться пакет ресурсов.</param>
      <param name="crc">Выходной параметр для получения контрольной суммы CRC сгенерированного пакета активов.</param>
      <param name="options">Параметры сборки. Возможные значения см. в разделе BuildOptions.</param>
      <returns>
        <para>Строка с сообщением об ошибке, пустая при успешном выполнении.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildStreamedSceneAssetBundle(System.String[],System.String,UnityEditor.BuildTarget,System.UInt32&amp;)">
      <summary>
        <para>Встраивает одну или несколько сцен и все их зависимости в сжатый пакет ресурсов.</para>
      </summary>
      <param name="levels">Пути уровней, включаемых в пакет ресурсов.</param>
      <param name="locationPath">Путь к пакету выходных ресурсов.</param>
      <param name="target">Платформа среды выполнения, на которой будет использоваться пакет ресурсов.</param>
      <param name="crc">Выходной параметр для получения контрольной суммы CRC сгенерированного пакета активов.</param>
      <param name="options">Параметры сборки. Возможные значения см. в разделе BuildOptions.</param>
      <returns>
        <para>Строка с сообщением об ошибке, пустая при успешном выполнении.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildStreamedSceneAssetBundle(System.String[],System.String,UnityEditor.BuildTarget,UnityEditor.BuildOptions)">
      <summary>
        <para>Встраивает одну или несколько сцен и все их зависимости в сжатый пакет ресурсов.</para>
      </summary>
      <param name="levels">Пути уровней, включаемых в пакет ресурсов.</param>
      <param name="locationPath">Путь к пакету выходных ресурсов.</param>
      <param name="target">Платформа среды выполнения, на которой будет использоваться пакет ресурсов.</param>
      <param name="crc">Выходной параметр для получения контрольной суммы CRC сгенерированного пакета активов.</param>
      <param name="options">Параметры сборки. Возможные значения см. в разделе BuildOptions.</param>
      <returns>
        <para>Строка с сообщением об ошибке, пустая при успешном выполнении.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.BuildPipeline.BuildStreamedSceneAssetBundle(System.String[],System.String,UnityEditor.BuildTarget,System.UInt32&amp;,UnityEditor.BuildOptions)">
      <summary>
        <para>Встраивает одну или несколько сцен и все их зависимости в сжатый пакет ресурсов.</para>
      </summary>
      <param name="levels">Пути уровней, включаемых в пакет ресурсов.</param>
      <param name="locationPath">Путь к пакету выходных ресурсов.</param>
      <param name="target">Платформа среды выполнения, на которой будет использоваться пакет ресурсов.</param>
      <param name="crc">Выходной параметр для получения контрольной суммы CRC сгенерированного пакета активов.</param>
      <param name="options">Параметры сборки. Возможные значения см. в разделе BuildOptions.</param>
      <returns>
        <para>Строка с сообщением об ошибке, пустая при успешном выполнении.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.BuildPipeline.GetBuildTargetName(UnityEditor.BuildTarget)">
      <summary>
        <para>Заданный объект BuildTarget вернет хорошо известное строковое представление для целевой платформы сборки.</para>
      </summary>
      <param name="targetPlatform">Экземпляр перечисления BuildTarget.</param>
      <returns>
        <para>Имя целевой платформы, представленное переданным в BuildTarget.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.BuildPipeline.GetCRCForAssetBundle(System.String,System.UInt32&amp;)">
      <summary>
        <para>Извлеките контрольную сумму crc для данного пакета AssetBundle.</para>
      </summary>
      <param name="targetPath">
      </param>
      <param name="crc">
      </param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.GetHashForAssetBundle(System.String,UnityEngine.Hash128&amp;)">
      <summary>
        <para>Извлеките хэш для данного пакета AssetBundle.</para>
      </summary>
      <param name="targetPath">
      </param>
      <param name="hash">
      </param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.GetPlaybackEngineDirectory(UnityEditor.BuildTarget,UnityEditor.BuildOptions)">
      <summary>
        <para>Возвращает путь к каталогу игровой директории. Например,. Editor\Data\PlaybackEngines\AndroidPlayer. В некоторых случаях на путь к каталогу игровой директории может влиять на BuildOptions.Development.</para>
      </summary>
      <param name="target">Цель сборки.</param>
      <param name="options">Параметры сборки.</param>
      <param name="buildTargetGroup">Создание целевой группы.</param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.GetPlaybackEngineDirectory(UnityEditor.BuildTargetGroup,UnityEditor.BuildTarget,UnityEditor.BuildOptions)">
      <summary>
        <para>Возвращает путь к каталогу игровой директории. Например,. Editor\Data\PlaybackEngines\AndroidPlayer. В некоторых случаях на путь к каталогу игровой директории может влиять на BuildOptions.Development.</para>
      </summary>
      <param name="target">Цель сборки.</param>
      <param name="options">Параметры сборки.</param>
      <param name="buildTargetGroup">Создание целевой группы.</param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.GetPlayerConnectionInitiateMode(UnityEditor.BuildTarget,UnityEditor.BuildOptions)">
      <summary>
        <para>Возвращает режим, используемый в настоящее время игроками для инициирования подключения к узлу.</para>
      </summary>
      <param name="targetPlatform">
      </param>
      <param name="buildOptions">
      </param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.IsBuildTargetSupported(UnityEditor.BuildTargetGroup,UnityEditor.BuildTarget)">
      <summary>
        <para>Возвращает значение true, если указанный целевой объект сборки в данный момент доступен в редакторе.</para>
      </summary>
      <param name="buildTargetGroup">создать целевую группу</param>
      <param name="target">цель сборки</param>
    </member>
    <member name="M:UnityEditor.BuildPipeline.PopAssetDependencies">
      <summary>
        <para>Позволяет управлять перекрестными ссылками и зависимостями между различными наборами активов и сборками игроков.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.BuildPipeline.PushAssetDependencies">
      <summary>
        <para>Позволяет управлять перекрестными ссылками и зависимостями между различными наборами активов и сборками игроков.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.BuildPipeline.WriteBootConfig(System.String,UnityEditor.BuildTarget,UnityEditor.BuildOptions)">
      <summary>
        <para>Записывает файл boot.config, содержащий сведения о конфигурации для самых ранних этапов запуска ядра.</para>
      </summary>
      <param name="outputFile">Расположение для записи файла.</param>
      <param name="target">Платформа, предназначенная для этой сборки.</param>
      <param name="options">Параметры для этой сборки.</param>
    </member>
    <member name="T:UnityEditor.BuildPlayerOptions">
      <summary>
        <para>Предоставьте различные параметры для управления поведением BuildPipeline.BuildPlayer.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.BuildPlayerOptions.assetBundleManifestPath">
      <summary>
        <para>Путь к файлу манифеста, описывающему все наборы ресурсов, используемые в сборке (необязательно).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.BuildPlayerOptions.extraScriptingDefines">
      <summary>
        <para>Заданный пользователем препроцессор определяет используемые при компиляции сборки для проигрывателя.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.BuildPlayerOptions.locationPathName">
      <summary>
        <para>Путь, по которому будет построено приложение.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.BuildPlayerOptions.options">
      <summary>
        <para>Дополнительные buildOptions, например, запускать ли встроенный плеер.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.BuildPlayerOptions.scenes">
      <summary>
        <para>Сцены, которые будут включены в сборку.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.BuildPlayerOptions.subtarget">
      <summary>
        <para>Субтаргетинг для сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.BuildPlayerOptions.target">
      <summary>
        <para>Объект buildTarget для сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.BuildPlayerOptions.targetGroup">
      <summary>
        <para>Группа BuildTargetGroup для построения.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.BuildPlayerWindow">
      <summary>
        <para>Окно параметров сборки по умолчанию.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.BuildPlayerWindow.BuildMethodException">
      <summary>
        <para>Исключения, используемые для указания на прерывание или сбой в обратных вызовах, зарегистрированных через BuildPlayerWindow.RegisterBuildPlayerHandler и BuildPlayerWindow.RegisterGetBuildPlayerOptionsHandler.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.BuildPlayerWindow.BuildMethodException.#ctor">
      <summary>
        <para>Создайте новое исключение BuildMethodException.</para>
      </summary>
      <param name="message">Отобразите это сообщение как ошибку в журнале редактора.</param>
    </member>
    <member name="M:UnityEditor.BuildPlayerWindow.BuildMethodException.#ctor(System.String)">
      <summary>
        <para>Создайте новое исключение BuildMethodException.</para>
      </summary>
      <param name="message">Отобразите это сообщение как ошибку в журнале редактора.</param>
    </member>
    <member name="T:UnityEditor.BuildPlayerWindow.DefaultBuildMethods">
      <summary>
        <para>Методы сборки по умолчанию для BuildPlayerWindow.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.BuildPlayerWindow.DefaultBuildMethods.BuildPlayer(UnityEditor.BuildPlayerOptions)">
      <summary>
        <para>Встроенный обработчик по умолчанию для выполнения сборки проигрывателя. Может использоваться для предоставления функциональности по умолчанию в пользовательском окне проигрывателя сборки.</para>
      </summary>
      <param name="options">Варианты сборки.</param>
    </member>
    <member name="M:UnityEditor.BuildPlayerWindow.DefaultBuildMethods.GetBuildPlayerOptions(UnityEditor.BuildPlayerOptions)">
      <summary>
        <para>Встроенный обработчик по умолчанию для вычисления параметров проигрывателя сборки. Может использоваться для предоставления функциональности по умолчанию в пользовательском окне проигрывателя сборки.</para>
      </summary>
      <param name="defaultBuildPlayerOptions">Параметры по умолчанию.</param>
      <returns>
        <para>Вычисляемое свойство BuildPlayerOptions.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.BuildPlayerWindow.RegisterBuildPlayerHandler(System.Action`1&lt;UnityEditor.BuildPlayerOptions&gt;)">
      <summary>
        <para>Зарегистрируйте делегата для перехвата или переопределения процесса сборки, выполняемого с помощью кнопок «Сборка» и «Сборка и запуск». Регистрация нулевого значения восстановит поведение по умолчанию, которое эквивалентно вызову BuildPlayerWindow.DefaultBuildMethods.BuildPlayer.</para>
      </summary>
      <param name="func">Делегируйте действие System.Action, принимающее параметр BuildPipeline.BuildPlayerOptions.</param>
    </member>
    <member name="M:UnityEditor.BuildPlayerWindow.RegisterGetBuildPlayerOptionsHandler(System.Func`2&lt;UnityEditor.BuildPlayerOptions,UnityEditor.BuildPlayerOptions&gt;)">
      <summary>
        <para>Зарегистрируйте метод делегата для вычисления объектов BuildPlayerOptions, передаваемых обработчику проигрывателя сборки. Регистрация нулевого значения восстановит поведение по умолчанию, эквивалентное вызову BuildPlayerWindow.DefaultBuildMethods.GetBuildPlayerOptions.</para>
      </summary>
      <param name="func">Делегировать System.Func, принимающий параметр BuildPlayerOptions. Значение, переданное делегату, будет представлять параметры по умолчанию. Возвращаемое значение будет передано обработчику проигрывателя сборки по умолчанию или пользовательскому обработчику с помощью BuildPlayerWindow.RegisterBuildPlayerHandler.</param>
    </member>
    <member name="M:UnityEditor.BuildPlayerWindow.ShowBuildPlayerWindow">
      <summary>
        <para>Откройте окно настроек сборки.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.BuildTarget">
      <summary>
        <para>Целевая платформа сборки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.iOS">
      <summary>
        <para>Создайте проигрыватель iOS.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.iPhone">
      <summary>
        <para>УСТАРЕЛО: Используйте iOS. Создайте проигрыватель iOS.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.tvOS">
      <summary>
        <para>Создайте на платформе Apple tvOS.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.Android">
      <summary>
        <para>Создайте автономное приложение для Android .apk.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.CloudRendering">
      <summary>
        <para>Создайте автономный CloudRendering.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.LinuxHeadlessSimulation">
      <summary>
        <para>Создайте автономный компонент LinuxHeadlessSimulation.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.N3DS">
      <summary>
        <para>Сборка на платформе Nintendo 3DS.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.PS4">
      <summary>
        <para>Создайте автономную систему PS4.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.PS5">
      <summary>
        <para>Сборка на платформе PlayStation 5.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.Stadia">
      <summary>
        <para>Создайте автономную платформу Stadia.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.StandaloneLinux">
      <summary>
        <para>Создайте автономный Linux.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.StandaloneLinux64">
      <summary>
        <para>Создайте 64-разрядную автономную версию Linux.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.StandaloneLinuxUniversal">
      <summary>
        <para>Создайте универсальную автономную систему Linux.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.StandaloneOSX">
      <summary>
        <para>Создайте автономную версию macOS (64-разрядная версия Intel).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.StandaloneOSXIntel">
      <summary>
        <para>Создайте 32-разрядную автономную версию macOS Intel. (Этот целевой объект сборки устарел)</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.StandaloneOSXIntel64">
      <summary>
        <para>Создайте 64-разрядную автономную версию MacOS Intel. (Этот целевой объект сборки устарел)</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.StandaloneWindows">
      <summary>
        <para>Создайте автономную версию Windows.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.StandaloneWindows64">
      <summary>
        <para>Создайте автономную версию Windows 64.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.Switch">
      <summary>
        <para>Создайте проигрыватель Nintendo Switch.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.WebGL">
      <summary>
        <para>ВебГЛ.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.WebPlayer">
      <summary>
        <para>Создайте веб-плеер. (Этот целевой объект сборки устарел. Сборка для веб-плеера больше не будет поддерживаться в будущих версиях Unity.)</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.WebPlayerStreamed">
      <summary>
        <para>Создайте потоковый веб-плеер.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.WSAPlayer">
      <summary>
        <para>Создайте проигрыватель универсальных приложений Windows.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTarget.XboxOne">
      <summary>
        <para>Создайте автономную консоль Xbox One.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.BuildTargetGroup">
      <summary>
        <para>Создание целевой группы.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTargetGroup.iOS">
      <summary>
        <para>Цель Apple iOS.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTargetGroup.iPhone">
      <summary>
        <para>УСТАРЕЛО: Используйте iOS. Цель Apple iOS.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTargetGroup.tvOS">
      <summary>
        <para>Цель Apple tvOS.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTargetGroup.Android">
      <summary>
        <para>Цель Для Android.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTargetGroup.CloudRendering">
      <summary>
        <para>Цель CloudRendering.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTargetGroup.LinuxHeadlessSimulation">
      <summary>
        <para>LinuxHeadlessСимулятор.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTargetGroup.N3DS">
      <summary>
        <para>Цель Nintendo 3DS.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTargetGroup.PS4">
      <summary>
        <para>Sony Playstation 4 цель.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTargetGroup.PS5">
      <summary>
        <para>Sony Playstation 5 цель.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTargetGroup.Stadia">
      <summary>
        <para>Цель Google Stadia.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTargetGroup.Standalone">
      <summary>
        <para>Цель ПК (Windows, Mac, Linux).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTargetGroup.Switch">
      <summary>
        <para>Цель Nintendo Switch.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTargetGroup.Unknown">
      <summary>
        <para>Неизвестная цель.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTargetGroup.WebGL">
      <summary>
        <para>ВебГЛ.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTargetGroup.WebPlayer">
      <summary>
        <para>Цель веб-плеера для Mac/PC.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTargetGroup.WSA">
      <summary>
        <para>Целевой объект универсальных приложений Windows.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.BuildTargetGroup.XboxOne">
      <summary>
        <para>Цель Microsoft Xbox One.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.CacheServerConnectionChangedParameters">
      <summary>
        <para>Структура, используемая для AssetDatabase.cacheServerConnectionChanged.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.CacheServerMode">
      <summary>
        <para>Выбирает режим конфигурации сервера кэша.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.CacheServerMode.AsPreferences">
      <summary>
        <para>Используйте его, если вы хотите использовать параметры глобального сервера кэша.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.CacheServerMode.Disabled">
      <summary>
        <para>Используйте его, если вы хотите отключить использование сервера кэша для проекта.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.CacheServerMode.Enabled">
      <summary>
        <para>Используйте его, если необходимо разрешить использование параметров сервера кэша для конкретного проекта.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.CacheServerValidationMode">
      <summary>
        <para>Параметры режима ускорения проверки сервера.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.CacheServerValidationMode.Disabled">
      <summary>
        <para>Отключите проверку для сервера кэша.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.CacheServerValidationMode.Enabled">
      <summary>
        <para>Вычисляйте и загружайте хэши. Проверяйте хэши, предоставляемые ускорителем, во время загрузки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.CacheServerValidationMode.Required">
      <summary>
        <para>Вычисление и передача хэшей содержимого в ускоритель. Для проверки загрузки требуются хэши, предоставляемые ускорителем.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.CacheServerValidationMode.UploadOnly">
      <summary>
        <para>Рассчитайте хэши содержимого для загруженных артефактов и отправьте их в ускоритель для проверки.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.CallbackOrderAttribute">
      <summary>
        <para>Базовый класс для атрибутов, для которых требуется индекс обратного вызова.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Callbacks.DidReloadScripts">
      <summary>
        <para>Добавьте этот атрибут в метод, чтобы получить уведомление после перезагрузки сценариев.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Callbacks.DidReloadScripts.#ctor">
      <summary>
        <para>Атрибут DidReloadScripts.</para>
      </summary>
      <param name="callbackOrder">Порядок, в котором будут обрабатываться отдельные атрибуты.</param>
    </member>
    <member name="M:UnityEditor.Callbacks.DidReloadScripts.#ctor(System.Int32)">
      <summary>
        <para>Атрибут DidReloadScripts.</para>
      </summary>
      <param name="callbackOrder">Порядок, в котором будут обрабатываться отдельные атрибуты.</param>
    </member>
    <member name="T:UnityEditor.Callbacks.OnOpenAssetAttributeMode">
      <summary>
        <para>Указывает, является ли украшенный метод OnOpenAssetAttribute функцией проверки, которая проверяет, обрабатывается ли открытие ресурса Unity или пользовательским сценарием.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Callbacks.OnOpenAssetAttributeMode.Execute">
      <summary>
        <para>Указывает, что метод OnOpenAssetAttribute является функцией открытия.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Callbacks.OnOpenAssetAttributeMode.Validate">
      <summary>
        <para>Указывает, что украшенный метод OnOpenAssetAttribute является функцией проверки.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Callbacks.PostProcessBuildAttribute">
      <summary>
        <para>Добавьте этот атрибут в метод, чтобы получить уведомление сразу после сборки проигрывателя.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Callbacks.PostProcessSceneAttribute">
      <summary>
        <para>Добавьте этот атрибут в метод, чтобы получить уведомление сразу после построения Scene.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Callbacks.RunAfterAssemblyAttribute">
      <summary>
        <para>Добавьте этот атрибут в метод обратного вызова, чтобы отметить, что этот обратный вызов должен выполняться после всех обратных вызовов, которые являются частью указанной сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Callbacks.RunAfterAssemblyAttribute.assemblyName">
      <summary>
        <para>Имя сборки, которая должна быть запущена перед этим обратным вызовом.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Callbacks.RunAfterAssemblyAttribute.#ctor(System.String)">
      <summary>
        <para>Добавьте этот атрибут в метод обратного вызова, чтобы отметить, что этот обратный вызов должен выполняться после всех обратных вызовов, которые являются частью указанной сборки.</para>
      </summary>
      <param name="assemblyName">Имя сборки, которая должна быть запущена перед этим обратным вызовом.</param>
    </member>
    <member name="T:UnityEditor.Callbacks.RunAfterClassAttribute">
      <summary>
        <para>Добавьте этот атрибут в метод обратного вызова, чтобы отметить, что этот обратный вызов должен выполняться после всех обратных вызовов, которые являются частью указанного класса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Callbacks.RunAfterClassAttribute.classType">
      <summary>
        <para>Тип класса, который должен быть запущен перед этим обратным вызовом.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Callbacks.RunAfterClassAttribute.#ctor(System.Type)">
      <summary>
        <para>Добавьте этот атрибут в метод обратного вызова, чтобы отметить, что этот обратный вызов должен выполняться после всех обратных вызовов, которые являются частью указанного класса.</para>
      </summary>
      <param name="type">Тип класса, который должен быть запущен перед этим обратным вызовом.</param>
      <param name="assemblyQualifiedName">Полное имя типа класса, которое должно быть выполнено перед этим обратным вызовом. Этот атрибут зависимости будет игнорироваться, если имя не может быть разрешено, например, если класс отсутствует в текущем проекте.</param>
    </member>
    <member name="M:UnityEditor.Callbacks.RunAfterClassAttribute.#ctor(System.String)">
      <summary>
        <para>Добавьте этот атрибут в метод обратного вызова, чтобы отметить, что этот обратный вызов должен выполняться после всех обратных вызовов, которые являются частью указанного класса.</para>
      </summary>
      <param name="type">Тип класса, который должен быть запущен перед этим обратным вызовом.</param>
      <param name="assemblyQualifiedName">Полное имя типа класса, которое должно быть выполнено перед этим обратным вызовом. Этот атрибут зависимости будет игнорироваться, если имя не может быть разрешено, например, если класс отсутствует в текущем проекте.</param>
    </member>
    <member name="T:UnityEditor.Callbacks.RunAfterPackageAttribute">
      <summary>
        <para>Добавьте этот атрибут в метод обратного вызова, чтобы отметить, что этот обратный вызов должен выполняться после всех обратных вызовов, которые являются частью указанного пакета.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Callbacks.RunAfterPackageAttribute.packageName">
      <summary>
        <para>Имя пакета, который должен быть запущен перед этим обратным вызовом.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Callbacks.RunAfterPackageAttribute.#ctor(System.String)">
      <summary>
        <para>Добавьте этот атрибут в метод обратного вызова, чтобы отметить, что этот обратный вызов должен выполняться после всех обратных вызовов, которые являются частью указанного пакета.</para>
      </summary>
      <param name="packageName">Имя пакета, который должен быть запущен перед этим обратным вызовом.</param>
    </member>
    <member name="T:UnityEditor.Callbacks.RunBeforeAssemblyAttribute">
      <summary>
        <para>Добавьте этот атрибут в метод обратного вызова, чтобы указать, что этот обратный вызов должен быть запущен перед любыми обратными вызовами, которые являются частью указанной сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Callbacks.RunBeforeAssemblyAttribute.assemblyName">
      <summary>
        <para>Имя сборки, которая должна быть вызвана после этого обратного вызова.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Callbacks.RunBeforeAssemblyAttribute.#ctor(System.String)">
      <summary>
        <para>Добавьте этот атрибут в метод обратного вызова, чтобы указать, что этот обратный вызов должен быть запущен перед любыми обратными вызовами, которые являются частью указанной сборки.</para>
      </summary>
      <param name="assemblyName">Имя сборки, которая должна быть вызвана после этого обратного вызова.</param>
    </member>
    <member name="T:UnityEditor.Callbacks.RunBeforeClassAttribute">
      <summary>
        <para>Добавьте этот атрибут в метод обратного вызова, чтобы отметить, что этот обратный вызов должен быть выполнен перед любыми обратными вызовами, которые являются частью указанного класса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Callbacks.RunBeforeClassAttribute.classType">
      <summary>
        <para>Тип класса, который должен быть запущен перед этим обратным вызовом.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Callbacks.RunBeforeClassAttribute.#ctor(System.Type)">
      <summary>
        <para>Добавьте этот атрибут в метод обратного вызова, чтобы отметить, что этот обратный вызов должен быть выполнен перед любыми обратными вызовами, которые являются частью указанного класса.</para>
      </summary>
      <param name="type">Тип класса, который должен быть запущен после этого обратного вызова.</param>
      <param name="assemblyQualifiedName">Определяемое сборкой имя типа класса, которое должно выполняться после этого обратного вызова. Этот атрибут зависимости будет игнорироваться, если имя не может быть разрешено, например, если класс отсутствует в текущем проекте.</param>
    </member>
    <member name="M:UnityEditor.Callbacks.RunBeforeClassAttribute.#ctor(System.String)">
      <summary>
        <para>Добавьте этот атрибут в метод обратного вызова, чтобы отметить, что этот обратный вызов должен быть выполнен перед любыми обратными вызовами, которые являются частью указанного класса.</para>
      </summary>
      <param name="type">Тип класса, который должен быть запущен после этого обратного вызова.</param>
      <param name="assemblyQualifiedName">Определяемое сборкой имя типа класса, которое должно выполняться после этого обратного вызова. Этот атрибут зависимости будет игнорироваться, если имя не может быть разрешено, например, если класс отсутствует в текущем проекте.</param>
    </member>
    <member name="T:UnityEditor.Callbacks.RunBeforePackageAttribute">
      <summary>
        <para>Добавьте этот атрибут в метод обратного вызова, чтобы отметить, что этот обратный вызов должен быть запущен перед любыми обратными вызовами, которые являются частью указанного пакета.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Callbacks.RunBeforePackageAttribute.packageName">
      <summary>
        <para>Имя пакета, который должен быть запущен после этого обратного вызова.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Callbacks.RunBeforePackageAttribute.#ctor(System.String)">
      <summary>
        <para>Добавьте этот атрибут в метод обратного вызова, чтобы отметить, что этот обратный вызов должен быть запущен перед любыми обратными вызовами, которые являются частью указанного пакета.</para>
      </summary>
      <param name="packageName">Имя пакета, который должен быть запущен после этого обратного вызова.</param>
    </member>
    <member name="T:UnityEditor.CameraEditor">
      <summary>
        <para>Редактор камеры Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.settings">
      <summary>
        <para>Настройки редактора камеры.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.OnDestroy">
      <summary>
        <para>См. ScriptableObject.OnDestroy.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.OnDisable">
      <summary>
        <para>См. раздел ScriptableObject.OnDisable.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.OnEnable">
      <summary>
        <para>См. раздел ScriptableObject.OnEnable.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.OnInspectorGUI">
      <summary>
        <para>См. editor.OnInspectorGUI.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.OnSceneGUI">
      <summary>
        <para>См. Editor.OnSceneGUI.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.CameraEditor.Settings">
      <summary>
        <para>Содержит все вырисовываемые элементы редактора камеры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.allowDynamicResolution">
      <summary>
        <para>Экспонированная сериализованная производительность для проверяемой камеры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.allowMSAA">
      <summary>
        <para>Экспонированная сериализованная производительность для проверяемой камеры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.backgroundColor">
      <summary>
        <para>Экспонированная сериализованная производительность для проверяемой камеры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.clearFlags">
      <summary>
        <para>Экспонированная сериализованная производительность для проверяемой камеры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.cullingMask">
      <summary>
        <para>Экспонированная сериализованная производительность для проверяемой камеры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.depth">
      <summary>
        <para>Экспонированная сериализованная производительность для проверяемой камеры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.farClippingPlane">
      <summary>
        <para>Экспонированная сериализованная производительность для проверяемой камеры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.focalLength">
      <summary>
        <para>Экспонированная сериализованная производительность для проверяемой камеры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.fovAxisMode">
      <summary>
        <para>Экспонированная сериализованная производительность для проверяемой камеры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.gateFit">
      <summary>
        <para>Экспонированная сериализованная производительность для проверяемой камеры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.lensShift">
      <summary>
        <para>Экспонированная сериализованная производительность для проверяемой камеры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.nearClippingPlane">
      <summary>
        <para>Экспонированная сериализованная производительность для проверяемой камеры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.normalizedViewPortRect">
      <summary>
        <para>Экспонированная сериализованная производительность для проверяемой камеры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.occlusionCulling">
      <summary>
        <para>Экспонированная сериализованная производительность для проверяемой камеры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.orthographic">
      <summary>
        <para>Экспонированная сериализованная производительность для проверяемой камеры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.orthographicSize">
      <summary>
        <para>Экспонированная сериализованная производительность для проверяемой камеры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.renderingPath">
      <summary>
        <para>Экспонированная сериализованная производительность для проверяемой камеры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.sensorSize">
      <summary>
        <para>Экспонированная сериализованная производительность для проверяемой камеры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.stereoConvergence">
      <summary>
        <para>Экспонированная сериализованная производительность для проверяемой камеры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.stereoSeparation">
      <summary>
        <para>Экспонированная сериализованная производительность для проверяемой камеры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.targetDisplay">
      <summary>
        <para>Экспонированная сериализованная производительность для проверяемой камеры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.targetEye">
      <summary>
        <para>Экспонированная сериализованная производительность для проверяемой камеры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.targetTexture">
      <summary>
        <para>Экспонированная сериализованная производительность для проверяемой камеры.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.verticalFOV">
      <summary>
        <para>Экспонированная сериализованная производительность для проверяемой камеры.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.ApplyModifiedProperties">
      <summary>
        <para>См. раздел SerializedObject.ApplyModifiedProperties.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawBackgroundColor">
      <summary>
        <para>Рисует виджет цвета фона [[CameraEditor] по умолчанию.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawCameraWarnings(UnityEngine.Camera)">
      <summary>
        <para>Рисует предупреждения по умолчанию [[CameraEditor], выдаваемые камерой.</para>
      </summary>
      <param name="camera">Камера, с которой считываются предупреждения.</param>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawClearFlags">
      <summary>
        <para>Рисует виджет по умолчанию [[CameraEditor] clear flags.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawClippingPlanes">
      <summary>
        <para>Рисует виджет обрезных плоскостей [[CameraEditor] по умолчанию.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawCullingMask">
      <summary>
        <para>Рисует виджет маски отбраковки по умолчанию [[CameraEditor].</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawDepth">
      <summary>
        <para>Рисует виджет глубины по умолчанию [[CameraEditor].</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawDynamicResolution">
      <summary>
        <para>Рисует виджет динамического разрешения [[CameraEditor] по умолчанию.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawHDR">
      <summary>
        <para>Рисует виджет HDR по умолчанию [[CameraEditor].</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawMSAA">
      <summary>
        <para>Рисует виджет MSAA по умолчанию [[CameraEditor].</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawMultiDisplay">
      <summary>
        <para>Рисует виджет по умолчанию [[CameraEditor] многоугольного отображения.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawNormalizedViewPort">
      <summary>
        <para>Рисует виджет окна просмотра [[CameraEditor] по умолчанию.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawOcclusionCulling">
      <summary>
        <para>Рисует виджет по умолчанию [[CameraEditor] для отбраковки окклюзии.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawProjection">
      <summary>
        <para>Рисует виджет проекции [[CameraEditor] по умолчанию.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawRenderingPath">
      <summary>
        <para>Рисует виджет пути отрисовки [[CameraEditor] по умолчанию.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawTargetEye">
      <summary>
        <para>Рисует виджет целевого глаза [[CameraEditor] по умолчанию.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawTargetTexture(System.Boolean)">
      <summary>
        <para>Рисует виджет целевой текстуры [[CameraEditor] по умолчанию.</para>
      </summary>
      <param name="deferred">
      </param>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.DrawVR">
      <summary>
        <para>Рисует виджет по умолчанию [[CameraEditor] VR.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CameraEditor.Settings.HDR">
      <summary>
        <para>Экспонированная сериализованная производительность для проверяемой камеры.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.OnEnable">
      <summary>
        <para>Заполните объект параметров данными, связанными с объектом Camera SerializedObject.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditor.Settings.Update">
      <summary>
        <para>См. раздел SerializedObject.Update.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.CameraEditorUtils">
      <summary>
        <para>Утилиты для фотоаппаратов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditorUtils.DrawFrustumGizmo(UnityEngine.Camera)">
      <summary>
        <para>Нарисуйте фруструм-штуковину фотоаппарата.</para>
      </summary>
      <param name="camera">Используемая камера.</param>
    </member>
    <member name="P:UnityEditor.CameraEditorUtils.GameViewAspectRatio">
      <summary>
        <para>Соотношение сторон игрового вида.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraEditorUtils.GetFrustumAspectRatio(UnityEngine.Camera)">
      <summary>
        <para>Рассчитайте соотношение сторон frustrum камеры.</para>
      </summary>
      <param name="camera">Камера для использования.</param>
      <returns>
        <para>Соотношение сторон frustrum поставляемой камеры.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.CameraEditorUtils.GetFrustumPlaneAt(UnityEngine.Matrix4x4,UnityEngine.Vector3,System.Single,UnityEngine.Vector3[])">
      <summary>
        <para>Рассчитайте точки плоскости фруструма, обращенные к зрителю на определенном расстоянии.  Массив точек будет заполнен вычисленными точками в следующем порядке: левый нижний, левый верхний, правый сверху и правый нижний.</para>
      </summary>
      <param name="clipToWorld">Обрезать пространство в матрицу мирового пространства.</param>
      <param name="viewPosition">Положение в мировом пространстве.</param>
      <param name="distance">Расстояние от положения обзора плоскости.</param>
      <param name="points">Расчетные баллы.  (Требуется минимальный размер 4 элемента).</param>
    </member>
    <member name="M:UnityEditor.CameraEditorUtils.HandleFrustum">
      <summary>
        <para>Нарисуйте ручки frustrum для камеры.</para>
      </summary>
      <param name="c">Используемая камера.</param>
    </member>
    <member name="M:UnityEditor.CameraEditorUtils.IsViewportRectValidToRender(UnityEngine.Rect)">
      <summary>
        <para>Проверьте, является ли окно просмотра допустимым.</para>
      </summary>
      <param name="normalizedViewPortRect">Окно просмотра для проверки.</param>
      <returns>
        <para>Является ли окно просмотра допустимым.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.CameraEditorUtils.PerspectiveClipToWorld(UnityEngine.Matrix4x4,UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Вычисление положения мирового пространства точки в пространстве клипа.  Компонент z будет использоваться для получения точки на расстоянии z от зрителя.</para>
      </summary>
      <param name="clipToWorld">Прикрепите к матрице мира для использования.</param>
      <param name="viewPositionWS">Положение зрителя в мировом пространстве.</param>
      <param name="positionCS">Положение в пространстве клипа.</param>
      <returns>
        <para>Соответствующее положение мирового пространства.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.CameraEditorUtils.TryGetFrustum(UnityEngine.Camera,UnityEngine.Vector3[],UnityEngine.Vector3[],System.Single&amp;)">
      <summary>
        <para>Рассчитайте углы фруструма.  Углы рассчитываются в следующем порядке: левый снизу, левый верхний, правый верхний, правый нижний.</para>
      </summary>
      <param name="camera">Камера для использования.</param>
      <param name="near">Углы ближней плоскости. (Требуется минимальный размер 4 элементов.)</param>
      <param name="far">Углы дальней плоскости. (Требуется минимальный размер 4 элементов.)</param>
      <param name="frustumAspect">Соотношение сторон фруструма.</param>
      <returns>
        <para>Был ли рассчитан фруструм.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.CameraEditorUtils.TryGetSensorGateFrustum(UnityEngine.Camera,UnityEngine.Vector3[],UnityEngine.Vector3[],System.Single&amp;)">
      <summary>
        <para>Рассчитайте углы фруструма по физическим свойствам датчика, не принимая во внимание подгонку ворот. Чтобы получить фактический фрустум с регулировкой посадки затвора, используйте CameraEditorUtils.TryGetFrustum. Этот метод эквивалентен Методу CameraEditorUtils.TryGetFrustum для нефизических камер.  Углы рассчитываются в следующем порядке: левый снизу, левый верхний, правый верхний, правый нижний.</para>
      </summary>
      <param name="camera">Камера для использования.</param>
      <param name="near">Углы ближней плоскости. (Требуется минимальный размер 4 элементов.)</param>
      <param name="far">Углы дальней плоскости. (Требуется минимальный размер 4 элементов.)</param>
      <param name="frustumAspect">Соотношение сторон фруструма.</param>
      <returns>
        <para>Был ли рассчитан фруструм.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.CameraProjectionCache">
      <summary>
        <para>Проецирование точек из мира в пространство экрана.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CameraProjectionCache.#ctor(UnityEngine.Camera)">
      <summary>
        <para>Создает CameraProjectionCache с текущим состоянием камеры.</para>
      </summary>
      <param name="camera">Камера, с которой будут скопированы проекционные матрицы.</param>
    </member>
    <member name="M:UnityEditor.CameraProjectionCache.GUIToScreenPoint(UnityEngine.Vector2)">
      <summary>
        <para>Преобразует точку из положения графического интерфейса пользователя в пространство экрана относительно кэшированного окна просмотра камеры.</para>
      </summary>
      <param name="guiPoint">Точка в пространстве графического интерфейса для преобразования в пространство экрана.</param>
      <returns>
        <para>guiPoint в пространстве экрана относительно кэшированного окна просмотра камеры.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.CameraProjectionCache.ScreenToGUIPoint(UnityEngine.Vector2)">
      <summary>
        <para>Преобразует точку из пространства экрана в положение графического интерфейса пользователя относительно окна просмотра на момент создания CameraProjectionCache.</para>
      </summary>
      <param name="screenPoint">Точка в пространстве экрана.</param>
      <returns>
        <para>screenPoint преобразуется в пространство графического интерфейса относительно кэшированного окна просмотра камеры.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.CameraProjectionCache.WorldToGUIPoint(UnityEngine.Vector3)">
      <summary>
        <para>Преобразует мировую космическую точку в положение 2D-графического интерфейса.</para>
      </summary>
      <param name="worldPoint">Точка в мировом пространстве.</param>
      <returns>
        <para>Точка в пространстве графического интерфейса.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.CameraProjectionCache.WorldToScreenPoint(UnityEngine.Vector3)">
      <summary>
        <para>Преобразует положение из мирового пространства в пространство экрана с помощью кэшированной проекции камеры и окна просмотра.</para>
      </summary>
      <param name="worldPoint">Точка в мировом пространстве.</param>
      <returns>
        <para>Преобразованная точка в пространстве экрана.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.CanAppendBuild">
      <summary>
        <para>Можно ли добавить существующую сборку с помощью BuildOptions.AcceptExternalModificationsToPlayer.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.CanAppendBuild.No">
      <summary>
        <para>Целевая платформа поддерживает добавление сборок, и сборка не находится в допустимом состоянии.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.CanAppendBuild.Unsupported">
      <summary>
        <para>Целевая платформа не поддерживает добавление сборок.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.CanAppendBuild.Yes">
      <summary>
        <para>Целевая платформа поддерживает добавление сборок, и сборка может быть добавлена.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.CanEditMultipleObjects">
      <summary>
        <para>Атрибут, используемый для создания пользовательского редактора с поддержкой многообъектного редактирования.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ChangeAssetObjectPropertiesEventArgs">
      <summary>
        <para>Изменение этого типа указывает на то, что свойство объекта ресурса в памяти изменилось. Это происходит, например, когда Undo.RecordObject используется с экземпляром ресурса (например, Texture).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ChangeAssetObjectPropertiesEventArgs.guid">
      <summary>
        <para>Идентификатор GUID измененного ресурса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ChangeAssetObjectPropertiesEventArgs.instanceId">
      <summary>
        <para>Идентификатор экземпляра измененного ресурса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ChangeAssetObjectPropertiesEventArgs.scene">
      <summary>
        <para>Сцена, содержащая измененный ресурс. Обычно это недопустимая сцена, если ресурс явно не связан в сцене (например, RenderSettings).</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ChangeAssetObjectPropertiesEventArgs.#ctor(UnityEditor.GUID,System.Int32,UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Создает новый экземпляр.</para>
      </summary>
      <param name="guid">Идентификатор GUID измененного ресурса.</param>
      <param name="instanceId">Идентификатор экземпляра измененного ресурса.</param>
      <param name="scene">Сцена, содержащая измененный ресурс.</param>
    </member>
    <member name="T:UnityEditor.ChangeGameObjectOrComponentPropertiesEventArgs">
      <summary>
        <para>Изменение этого типа означает, что свойство Объекта GameObject или Компонента изменилось. Это происходит, например, когда Undo.RecordObject используется с экземпляром компонента.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ChangeGameObjectOrComponentPropertiesEventArgs.instanceId">
      <summary>
        <para>Идентификатор экземпляра измененного объекта GameObject или компонента.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ChangeGameObjectOrComponentPropertiesEventArgs.scene">
      <summary>
        <para>Сцена, содержащая объект GameObject, связанный с изменением. Если компонент изменен, это GameObject, к которому принадлежит компонент.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ChangeGameObjectOrComponentPropertiesEventArgs.#ctor(System.Int32,UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Создает новый экземпляр.</para>
      </summary>
      <param name="instanceId">Идентификатор экземпляра измененного объекта GameObject или компонента.</param>
      <param name="scene">Сцена, содержащая объект GameObject, связанный с изменением. Если компонент изменен, это GameObject, к которому принадлежит компонент.</param>
    </member>
    <member name="T:UnityEditor.ChangeGameObjectParentEventArgs">
      <summary>
        <para>Изменение этого типа означает, что родитель объекта GameObject изменился. Это происходит при использовании Undo.SetTransformParent или SceneManager.MoveGameObjectToScene.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ChangeGameObjectParentEventArgs.instanceId">
      <summary>
        <para>Идентификатор экземпляра объекта GameObject, родитель которого изменился. Обратите внимание, что это не идентификатор экземпляра компонента Transform.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ChangeGameObjectParentEventArgs.newParentInstanceId">
      <summary>
        <para>Идентификатор экземпляра объекта GameObject, который является новым родительским объектом целевого объекта. Обратите внимание, что это не идентификатор экземпляра объекта Transform.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ChangeGameObjectParentEventArgs.newScene">
      <summary>
        <para>Сцена, содержащая нового родителя. Это полезно для определения того, был ли Объект GameObject перемещен в другую сцену или в корень сцены.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ChangeGameObjectParentEventArgs.previousParentInstanceId">
      <summary>
        <para>Идентификатор экземпляра объекта GameObject, который был предыдущим родительским элементом целевого объекта. Обратите внимание, что это не идентификатор экземпляра объекта Transform.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ChangeGameObjectParentEventArgs.previousScene">
      <summary>
        <para>Сцена, содержащая предыдущего родителя. Это полезно для определения того, был ли Объект GameObject перемещен в другую сцену.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ChangeGameObjectParentEventArgs.#ctor(System.Int32,UnityEngine.SceneManagement.Scene,System.Int32,UnityEngine.SceneManagement.Scene,System.Int32)">
      <summary>
        <para>Создает новый экземпляр.</para>
      </summary>
      <param name="instanceId">Идентификатор экземпляра объекта GameObject, родитель которого изменился. Обратите внимание, что это не идентификатор экземпляра компонента Transform.</param>
      <param name="previousScene">Сцена, содержащая предыдущего родителя. Это полезно для определения того, был ли Объект GameObject перемещен в другую сцену.</param>
      <param name="previousParentInstanceId">Идентификатор экземпляра объекта GameObject, который был предыдущим родительским элементом целевого объекта. Обратите внимание, что это не идентификатор экземпляра объекта Transform.</param>
      <param name="newScene">Сцена, содержащая нового родителя. Это полезно для определения того, был ли Объект GameObject перемещен в другую сцену или в корень сцены.</param>
      <param name="newParentInstanceId">Идентификатор экземпляра объекта GameObject, который является новым родительским объектом целевого объекта. Обратите внимание, что это не идентификатор экземпляра объекта Transform.</param>
    </member>
    <member name="T:UnityEditor.ChangeGameObjectStructureEventArgs">
      <summary>
        <para>Изменение этого типа указывает на то, что структура объекта GameObject изменилась. Это происходит, когда компонент добавляется в Объект GameObject или удаляется из него с помощью Undo.AddComponent или Undo.DestroyObjectImmediate.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ChangeGameObjectStructureEventArgs.instanceId">
      <summary>
        <para>Идентификатор экземпляра GameObject, который был изменен.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ChangeGameObjectStructureEventArgs.scene">
      <summary>
        <para>Сцена, содержащая измененный объект GameObject.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ChangeGameObjectStructureEventArgs.#ctor(System.Int32,UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Создает новый экземпляр.</para>
      </summary>
      <param name="instanceId">Идентификатор экземпляра GameObject, который был изменен.</param>
      <param name="scene">Сцена, содержащая измененный объект GameObject.</param>
    </member>
    <member name="T:UnityEditor.ChangeGameObjectStructureHierarchyEventArgs">
      <summary>
        <para>Изменение этого типа указывает на то, что структура Объекта GameObject изменилась, и любой объект GameObject в иерархии под ним мог измениться. Это происходит, например, при использовании Undo.RegisterFullObjectHierarchyUndo.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ChangeGameObjectStructureHierarchyEventArgs.instanceId">
      <summary>
        <para>Идентификатор экземпляра GameObject, который был изменен.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ChangeGameObjectStructureHierarchyEventArgs.scene">
      <summary>
        <para>Сцена, содержащая измененный объект GameObject.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ChangeGameObjectStructureHierarchyEventArgs.#ctor(System.Int32,UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Создает новый экземпляр.</para>
      </summary>
      <param name="instanceId">Идентификатор экземпляра GameObject, который был изменен.</param>
      <param name="scene">Сцена, содержащая измененный объект GameObject.</param>
    </member>
    <member name="T:UnityEditor.ChangeSceneEventArgs">
      <summary>
        <para>Изменение этого типа указывает на то, что открытая сцена была изменена («dirtied») без какой-либо более конкретной информации. Это происходит, например, при использовании EditorSceneManager.MarkSceneDirty.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ChangeSceneEventArgs.scene">
      <summary>
        <para>Сцена, которая была изменена.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ChangeSceneEventArgs.#ctor(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Создает новый экземпляр.</para>
      </summary>
      <param name="scene">Сцена, которая была изменена.</param>
    </member>
    <member name="T:UnityEditor.ClipAnimationInfoCurve">
      <summary>
        <para>Сохраняет кривую и ее имя, которые будут использоваться для создания дополнительных кривых в процессе импорта.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ClipAnimationInfoCurve.curve">
      <summary>
        <para>Кривая анимации.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ClipAnimationInfoCurve.name">
      <summary>
        <para>Имя кривой анимации.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ClipAnimationMaskType">
      <summary>
        <para>АнимацияПарамы маски клипа для ModelImporterClipAnimation.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ClipAnimationMaskType.CopyFromOther">
      <summary>
        <para>Используйте маску из проекта, чтобы указать, какую анимацию преобразований следует импортировать.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ClipAnimationMaskType.CreateFromThisModel">
      <summary>
        <para>Маска, содержащая все преобразования в файле, будет создана внутренне.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ClipAnimationMaskType.None">
      <summary>
        <para>Без маски. Вся анимация будет импортирована.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.CloudProjectSettings">
      <summary>
        <para>Этот класс используется для получения сведений о выбранном в данный момент проекте и текущем идентификаторе Unity ID, который вошел в систему.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CloudProjectSettings.organizationId">
      <summary>
        <para>Идентификатор организации, к которой принадлежит данный проект. (Только для чтения)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CloudProjectSettings.organizationName">
      <summary>
        <para>Название организации, к которой принадлежит данный проект. (Только для чтения)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CloudProjectSettings.projectId">
      <summary>
        <para>Уникальный идентификатор облачного проекта. Он уникален для каждого проекта (только для чтения).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CloudProjectSettings.projectName">
      <summary>
        <para>Имя записи проекта на панели мониторинга, связанной с этим проектом (только для чтения).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CloudProjectSettings.userId">
      <summary>
        <para>Идентификатор пользователя текущей учетной записи Unity ID (только для чтения).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CloudProjectSettings.userName">
      <summary>
        <para>Имя пользователя текущей учетной записи Unity ID (только для чтения).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ColorPickerHDRConfig">
      <summary>
        <para>Используется в качестве входных данных в ColorField для настройки цветовых диапазонов HDR в ColorPicker.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ColorPickerHDRConfig.maxBrightness">
      <summary>
        <para>Максимально допустимое значение компонента цвета при использовании ColorPicker.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ColorPickerHDRConfig.maxExposureValue">
      <summary>
        <para>Максимально допустимое значение экспозиции в палитре цветов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ColorPickerHDRConfig.minBrightness">
      <summary>
        <para>Минимально допустимое значение компонента цвета при использовании ColorPicker.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ColorPickerHDRConfig.minExposureValue">
      <summary>
        <para>Минимальное значение экспозиции, допустимое в палитре цветов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ColorPickerHDRConfig.#ctor(System.Single,System.Single,System.Single,System.Single)">
      <summary>
        <para>
        </para>
      </summary>
      <param name="minBrightness">Минимальное значение яркости, допустимое при использовании палитры цветов.</param>
      <param name="maxBrightness">Максимально допустимое значение яркости при использовании палитры цветов.</param>
      <param name="minExposureValue">Минимальное значение экспозиции, используемое в разделе тонального отображения палитры цветов.</param>
      <param name="maxExposureValue">Максимальное значение экспозиции, используемое в разделе тонального отображения палитры цветов.</param>
    </member>
    <member name="T:UnityEditor.Compilation.AssembliesType">
      <summary>
        <para>Флаги для Сборки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.AssembliesType.Editor">
      <summary>
        <para>Выбирает сборки, скомпилированные для редактора, включая тестовые сборки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.AssembliesType.Player">
      <summary>
        <para>Выбирает сборки, скомпилированные для проигрывателя, включая тестовые сборки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.AssembliesType.PlayerWithoutTestAssemblies">
      <summary>
        <para>Выбирает сборки, скомпилированные для проигрывателя, за исключением тестовых сборок.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Compilation.Assembly">
      <summary>
        <para>Класс, представляющий сборку, скомпилированную Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.Assembly.allReferences">
      <summary>
        <para>Возвращает функции Assembly.assemblyReferences и Assembly.compiledAssemblyReferences вместе взятые.  При этом возвращаются все сборки, передаваемые компилятору при построении этой сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.Assembly.assemblyReferences">
      <summary>
        <para>Ссылки на сборки, используемые для построения этой сборки.  Ссылки также являются сборками, созданными в рамках проекта Unity.  См. также: Assembly.compiledAssemblyReferences и Assembly.allReferences.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.Assembly.compiledAssemblyReferences">
      <summary>
        <para>Ссылки на предварительно скомпилированные сборки, которые использовались для построения этой сборки.  См. также: Assembly.assemblyReferences и Assembly.allReferences.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.Assembly.compilerOptions">
      <summary>
        <para>Параметры компилятора, используемые для компиляции сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.Assembly.defines">
      <summary>
        <para>Определения, используемые для компиляции этой сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.Assembly.flags">
      <summary>
        <para>Флаги для сборки.  См. также: Сборкафлагов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.Assembly.name">
      <summary>
        <para>Имя сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.Assembly.outputPath">
      <summary>
        <para>Полный путь к выходному файлу этой сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.Assembly.rootNamespace">
      <summary>
        <para>Задает корневое пространство имен сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.Assembly.sourceFiles">
      <summary>
        <para>Все файлы souce, используемые для компиляции этой сборки.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Compilation.Assembly.#ctor(System.String,System.String,System.String[],System.String[],UnityEditor.Compilation.Assembly[],System.String[],UnityEditor.Compilation.AssemblyFlags)">
      <summary>
        <para>Конструктор.</para>
      </summary>
      <param name="name">Имя сборки.</param>
      <param name="outputPath">Выход сборки.</param>
      <param name="sourceFiles">Сборка исходных файлов.</param>
      <param name="defines">Сборка определяет.</param>
      <param name="assemblyReferences">Ссылки на сборки.</param>
      <param name="compiledAssemblyReferences">Ссылки на скомпилированные сборки.</param>
      <param name="flags">Флаги сборки.</param>
    </member>
    <member name="T:UnityEditor.Compilation.AssemblyBuilder">
      <summary>
        <para>Компилирует сценарии за пределами папки Assets в управляемую сборку, которую можно использовать внутри папки Assets.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyBuilder.additionalDefines">
      <summary>
        <para>Дополнительные #define директивы, передаваемые для компиляции сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyBuilder.additionalReferences">
      <summary>
        <para>Дополнительные ссылки на сборку, передаваемые для компиляции сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyBuilder.assemblyPath">
      <summary>
        <para>Выходной путь сборки для сборки. (Только для чтения)</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Compilation.AssemblyBuilder.buildFinished(System.Action`2&lt;System.String,UnityEditor.Compilation.CompilerMessage[]&gt;)">
      <summary>
        <para>Событие, которое вызывается в основном потоке после завершения сборки сборки.</para>
      </summary>
      <param name="value">Первым параметром является путь выходной сборки. Вторым параметром являются сообщения компилятора.</param>
    </member>
    <member name="?:UnityEditor.Compilation.AssemblyBuilder.buildStarted(System.Action`1&lt;System.String&gt;)">
      <summary>
        <para>Событие, которое вызывается в основном потоке при запуске сборки сборки.</para>
      </summary>
      <param name="value">Параметр — это путь выходной сборки.</param>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyBuilder.buildTarget">
      <summary>
        <para>BuildTarget для сборки сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyBuilder.buildTargetGroup">
      <summary>
        <para>BuildTargetGroup для сборки сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyBuilder.compilerOptions">
      <summary>
        <para>Параметры компилятора, используемые при построении сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyBuilder.defaultDefines">
      <summary>
        <para>Значение по умолчанию определяется используемым при компиляции сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyBuilder.defaultReferences">
      <summary>
        <para>Ссылки по умолчанию, используемые при компиляции сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyBuilder.excludeReferences">
      <summary>
        <para>Ссылки, которые следует исключить при компиляции сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyBuilder.flags">
      <summary>
        <para>Флаги для управления сборкой сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyBuilder.referencesOptions">
      <summary>
        <para>Параметры управления ссылками, используемыми Unity во время сборки сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyBuilder.scriptPaths">
      <summary>
        <para>Массив путей к скриптам, используемых в качестве входных данных для сборки сборки. (Только для чтения)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyBuilder.status">
      <summary>
        <para>Текущее состояние сборки сборки. (Только для чтения)</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Compilation.AssemblyBuilder.Build">
      <summary>
        <para>Запускает сборку сборки.  Во время сборки небольшой значок хода выполнения в правом нижнем углу главного окна Unity будет вращаться, и EditorApplication.isCompiling вернет значение true.</para>
      </summary>
      <returns>
        <para>Возвращает значение true, если построение было начато. Возвращает значение false, если сборка не была запущена из-за того, что редактор в данный момент компилирует сценарии в папке Assets.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.AssemblyBuilder.#ctor(System.String,System.String[])">
      <summary>
        <para>Конструктор AssemblyBuilder.</para>
      </summary>
      <param name="assemblyPath">Путь к выходной сборке. Относительно корня проекта.</param>
      <param name="scriptPaths">Массив путей к скриптам, скомпилируемых в выходную сборку. Относительно корня проекта.</param>
    </member>
    <member name="T:UnityEditor.Compilation.AssemblyBuilderFlags">
      <summary>
        <para>Флаги, используемые AssemblyBuilder для управления построением сборки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.AssemblyBuilderFlags.DevelopmentBuild">
      <summary>
        <para>Определяет, является ли выходная сборка сборкой разработки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.AssemblyBuilderFlags.EditorAssembly">
      <summary>
        <para>Определяет, является ли выходная сборка сборкой редактора.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.AssemblyBuilderFlags.None">
      <summary>
        <para>Значение отсутствует. По умолчанию.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Compilation.AssemblyBuilderStatus">
      <summary>
        <para>Состояние сборки AssemblyBuilder.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.AssemblyBuilderStatus.Finished">
      <summary>
        <para>Указывает, что сборка AssemblyBuilder завершена.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.AssemblyBuilderStatus.IsCompiling">
      <summary>
        <para>Указывает, что сборка AssemblyBuilder компилируется.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.AssemblyBuilderStatus.NotStarted">
      <summary>
        <para>Указывает, что сборка AssemblyBuilder не запущена.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Compilation.AssemblyDefinitionException">
      <summary>
        <para>Возникает исключение для ошибок файлов определения сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyDefinitionException.filePaths">
      <summary>
        <para>Пути к файлам определения сборки, вызвавшим исключение.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Compilation.AssemblyDefinitionException.#ctor(System.String,System.String[])">
      <summary>
        <para>Конструктор.</para>
      </summary>
      <param name="message">Сообщение об исключении.</param>
      <param name="filePaths">Пути к файлам определений сборок.</param>
    </member>
    <member name="T:UnityEditor.Compilation.AssemblyDefinitionPlatform">
      <summary>
        <para>Содержит сведения о платформе, поддерживаемой файлами определения сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyDefinitionPlatform.BuildTarget">
      <summary>
        <para>BuildTarget для платформы AssemblyDefinitionPlatform.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyDefinitionPlatform.DisplayName">
      <summary>
        <para>Отображаемое имя платформы.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.AssemblyDefinitionPlatform.Name">
      <summary>
        <para>Имя, используемое в файлах определения сборки.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Compilation.AssemblyDefinitionReferenceType">
      <summary>
        <para>Тип ссылки на файл определения сборки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.AssemblyDefinitionReferenceType.Guid">
      <summary>
        <para>Ссылка на GUID файла определения сборки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.AssemblyDefinitionReferenceType.Name">
      <summary>
        <para>Ссылка на имя сборки файла определения сборки.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Compilation.AssemblyFlags">
      <summary>
        <para>Флаги для Сборки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.AssemblyFlags.EditorAssembly">
      <summary>
        <para>Указывает, является ли эта сборка сборкой только редактора.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.AssemblyFlags.None">
      <summary>
        <para>Значение отсутствует. По умолчанию.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Compilation.CodeOptimization">
      <summary>
        <para>Режим оптимизации кода определяет, компилирует ли UnityEditor скрипты в режиме отладки или выпуска.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.CodeOptimization.Debug">
      <summary>
        <para>Режим отладки включает отладку C#, но снижает производительность C#.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.CodeOptimization.None">
      <summary>
        <para>Унитализированное значение для режима оптимизации кода.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.CodeOptimization.Release">
      <summary>
        <para>Режим выпуска отключает отладку C#, но повышает производительность C#.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Compilation.CompilationPipeline">
      <summary>
        <para>Методы и свойства конвейера компиляции скриптов.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Compilation.CompilationPipeline.assemblyCompilationFinished(System.Action`2&lt;System.String,UnityEditor.Compilation.CompilerMessage[]&gt;)">
      <summary>
        <para>Событие, которое вызывается в основном потоке при завершении компиляции сборки.</para>
      </summary>
      <param name="value">Первым параметром является путь выходной сборки. Вторым параметром являются сообщения компилятора.</param>
    </member>
    <member name="?:UnityEditor.Compilation.CompilationPipeline.assemblyCompilationStarted(System.Action`1&lt;System.String&gt;)">
      <summary>
        <para>Событие, которое вызывается в основном потоке при запуске сборки сборки.</para>
      </summary>
      <param name="value">Параметр — это путь выходной сборки.</param>
    </member>
    <member name="P:UnityEditor.Compilation.CompilationPipeline.codeOptimization">
      <summary>
        <para>Текущая компиляция.КодОптимизация| режим оптимизации кода.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Compilation.CompilationPipeline.codeOptimizationChanged(System.Action`1&lt;UnityEditor.Compilation.CodeOptimization&gt;)">
      <summary>
        <para>Это событие возникает всякий раз, когда свойство codeOptimization изменяется между Compilation.CodeOptimization.Debug| Отладка и компиляция.CodeOptimization.Release| Режимы выпуска.</para>
      </summary>
      <param name="value">Текущее значение режима оптимизации компиляции|кода.</param>
    </member>
    <member name="?:UnityEditor.Compilation.CompilationPipeline.compilationFinished(System.Action`1&lt;System.Object&gt;)">
      <summary>
        <para>Событие, которое вызывается в основном потоке после завершения компиляции сборок.</para>
      </summary>
      <param name="value">Объект контекста, который является временным хранилищем, позволяющим сравнивать события начала и окончания компиляции.</param>
    </member>
    <member name="?:UnityEditor.Compilation.CompilationPipeline.compilationStarted(System.Action`1&lt;System.Object&gt;)">
      <summary>
        <para>Событие, которое вызывается в основном потоке при запуске компиляции сборок.</para>
      </summary>
      <param name="value">Объект контекста, который является временным хранилищем, позволяющим сравнивать события начала и окончания компиляции.</param>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.AssemblyDefinitionReferenceGUIDToGUID(System.String)">
      <summary>
        <para>Преобразует ссылку GUID файла определения сборки в строку GUID.</para>
      </summary>
      <param name="reference">Ссылка на GUID файла определения сборки.</param>
      <returns>
        <para>Строка идентификатора GUID.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.GetAssemblies(UnityEditor.Compilation.AssembliesType)">
      <summary>
        <para>Получите все сборки скриптов, скомпилированные Unity, отфильтрованные по AssembliesType.</para>
      </summary>
      <param name="assembliesType">
      </param>
      <returns>
        <para>Массив сборок скриптов, скомпилированных Unity.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.GetAssemblyDefinitionFilePathFromAssemblyName(System.String)">
      <summary>
        <para>Возвращает путь к файлу определения сборки из имени сборки. Возвращает значение null, если для заданного имени сборки нет файла определения сборки.</para>
      </summary>
      <param name="assemblyName">Имя сборки.</param>
      <returns>
        <para>Путь к файлу определения сборки.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.GetAssemblyDefinitionFilePathFromAssemblyReference(System.String)">
      <summary>
        <para>Возвращает путь к файлу определения сборки для идентификатора GUID файла определения сборки или ссылки на имя сборки. Возвращает значение null, если для заданной ссылки на сборку нет файла определения сборки.</para>
      </summary>
      <param name="reference">Идентификатор GUID файла определения сборки или ссылка на имя сборки.</param>
      <returns>
        <para>Путь к данному файлу определения сборки.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.GetAssemblyDefinitionFilePathFromScriptPath(System.String)">
      <summary>
        <para>Возвращает путь к файлу определения сборки для исходного пути (скрипта). Возвращает значение null, если для заданного пути к сценарию нет файла определения сборки.</para>
      </summary>
      <param name="sourceFilePath">Путь к исходному файлу (скрипту).</param>
      <returns>
        <para>Путь к файлу определения сборки.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.GetAssemblyDefinitionPlatforms">
      <summary>
        <para>Возвращает все платформы, поддерживаемые файлами определений сборок.  См. также: СборкаОпределениеПлатформа.</para>
      </summary>
      <returns>
        <para>Платформы, поддерживаемые файлами определений сборок.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.GetAssemblyDefinitionReferenceType(System.String)">
      <summary>
        <para>Служебный метод для определения того, является ли ссылка на файл определения сборки ссылкой guID или ссылкой на имя сборки.</para>
      </summary>
      <param name="reference">Ссылка на данный файл определения сборки.</param>
      <returns>
        <para>Является ли ссылка идентификатором GUID или именем сборки.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.GetAssemblyNameFromScriptPath(System.String)">
      <summary>
        <para>Возвращает имя сборки для исходного пути (скрипта). Возвращает значение null, если для заданного пути к сценарию нет имени сборки.</para>
      </summary>
      <param name="sourceFilePath">Исходный путь (скрипт).</param>
      <returns>
        <para>Имя сборки.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.GetAssemblyRootNamespaceFromScriptPath(System.String)">
      <summary>
        <para>Получает корневое пространство имен, связанное с заданным путем к сценарию.</para>
      </summary>
      <param name="sourceFilePath">Путь к исходному файлу (скрипту).</param>
      <returns>
        <para>Возвращает корневое пространство имен для заданного сценария. Если для сценария не определено корневое пространство имен, возвращает значение null.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.GetDefinesFromAssemblyName(System.String)">
      <summary>
        <para>Перечисляет все директивы #define, используемые для компиляции указанной сборки.</para>
      </summary>
      <param name="assemblyName">Имя сборки без расширения.</param>
      <returns>
        <para>Строковый массив директив #define, объявленных для сборки. Возвращает значение null, если сборка не найдена.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.GetPrecompiledAssemblyNames">
      <summary>
        <para>Получение всех предварительно скомпилированных имен сборок.</para>
      </summary>
      <returns>
        <para>Предкомпилированные имена сборок.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.GetPrecompiledAssemblyPathFromAssemblyName(System.String)">
      <summary>
        <para>Возвращает путь к файлу сборки из имени сборки. Возвращает значение null, если имя предварительно скомпилированной сборки не совпадает.</para>
      </summary>
      <param name="assemblyName">Имя сборки.</param>
      <returns>
        <para>Путь к файлу предварительно скомпилированной сборки.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.GetPrecompiledAssemblyPaths(UnityEditor.Compilation.CompilationPipeline/PrecompiledAssemblySources)">
      <summary>
        <para>Возвращает пути к предварительно скомпилированным сборкам, которые включаются при построении сборок редактора и соответствуют любому из заданных precompiledAssemblySources.</para>
      </summary>
      <param name="precompiledAssemblySources">Определяет, какие пути сборки будут возвращены.</param>
      <returns>
        <para>Массив путей к предварительно скомпилированным сборкам.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.GetResponseFileDefinesFromAssemblyName(System.String)">
      <summary>
        <para>Перечисляет все директивы #define, используемые для компиляции указанной сборки, то есть из файла ответов.</para>
      </summary>
      <param name="assemblyName">Имя сборки без расширения.</param>
      <returns>
        <para>Строковый массив директив #define, объявленных для сборки. Возвращает значение null, если сборка не найдена.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.GetSystemAssemblyDirectories(UnityEditor.ApiCompatibilityLevel)">
      <summary>
        <para>Используйте его, чтобы получить список каталогов, содержащих системные ссылки для определенного уровня ApiCompatibilityLevel.</para>
      </summary>
      <param name="apiCompatibilityLevel">
      </param>
      <returns>
        <para>Возвращает массив, заполненный абсолютными путями к каталогам.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.GUIDToAssemblyDefinitionReferenceGUID(System.String)">
      <summary>
        <para>Преобразует заданный идентификатор GUID в ссылку GUID файла определения сборки.</para>
      </summary>
      <param name="guid">Идентификатор GUID файла определения данной сборки.</param>
      <returns>
        <para>Ссылка на GUID файла определения сборки для данного идентификатора GUID ресурса.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.IsDefineConstraintsCompatible(System.String[],System.String[])">
      <summary>
        <para>Позволяет проверить, удовлетворяются ли указанные ограничения #define указанным списком директив #define.</para>
      </summary>
      <param name="defines">Строковый массив директив #define.</param>
      <param name="defineConstraints">Строковый массив #define директив для проверки совместимости.</param>
      <returns>
        <para>Значение true, если указанные ограничения #define удовлетворяются указанными директивами #define. В противном случае возвращает значение False.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.ParseResponseFile(System.String,System.String,System.String[])">
      <summary>
        <para>Извлекает файл ResponseFileData, описывающий содержимое файла ответов.</para>
      </summary>
      <param name="relativePath">Путь к анализируемому файлу ответов.</param>
      <param name="projectDirectory">Абсолютный путь к корню каталога Project, в котором находится файл ответов.</param>
      <param name="systemReferenceDirectories">Массив каталогов, содержащих системные справочные библиотеки.</param>
      <returns>
        <para>Описывает содержимое файла ответов, который был проанализирован. Ошибки, определения и т.д.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Compilation.CompilationPipeline.PrecompiledAssemblySources">
      <summary>
        <para>Задает источники предварительно скомпилированных сборок, на которые ссылаются во время компиляции.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.CompilationPipeline.PrecompiledAssemblySources.All">
      <summary>
        <para>Соответствует всем источникам сборки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.CompilationPipeline.PrecompiledAssemblySources.SystemAssembly">
      <summary>
        <para>Соответствует сборкам, предоставляемым целевой платформой.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.CompilationPipeline.PrecompiledAssemblySources.UnityAssembly">
      <summary>
        <para>Соответствует любым собраниям Unity.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.CompilationPipeline.PrecompiledAssemblySources.UnityEditor">
      <summary>
        <para>Соответствует сборкам модуля UnityEditor и редактора.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.CompilationPipeline.PrecompiledAssemblySources.UnityEngine">
      <summary>
        <para>Соответствует сборкам UnityEngine и модуля среды выполнения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.CompilationPipeline.PrecompiledAssemblySources.UserAssembly">
      <summary>
        <para>Соответствует предварительно скомпилированным сборкам, присутствующим в проекте и пакетах.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.RequestScriptCompilation">
      <summary>
        <para>Позволяет запросить повторную компиляцию сценариев редактора в проекте.</para>
      </summary>
      <param name="options">Необязательный параметр, указывающий, должен ли редактор очищать кэш сборки перед компиляцией.</param>
    </member>
    <member name="M:UnityEditor.Compilation.CompilationPipeline.RequestScriptCompilation(UnityEditor.Compilation.RequestScriptCompilationOptions)">
      <summary>
        <para>Позволяет запросить повторную компиляцию сценариев редактора в проекте.</para>
      </summary>
      <param name="options">Необязательный параметр, указывающий, должен ли редактор очищать кэш сборки перед компиляцией.</param>
    </member>
    <member name="T:UnityEditor.Compilation.CompilerMessage">
      <summary>
        <para>Сообщение компилятора.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.CompilerMessage.column">
      <summary>
        <para>Столбец строки для сообщения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.CompilerMessage.file">
      <summary>
        <para>Файл для сообщения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.CompilerMessage.line">
      <summary>
        <para>Строка файла для сообщения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.CompilerMessage.message">
      <summary>
        <para>Сообщение компилятора.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.CompilerMessage.type">
      <summary>
        <para>Тип сообщения.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Compilation.CompilerMessageType">
      <summary>
        <para>Тип сообщения компилятора.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.CompilerMessageType.Error">
      <summary>
        <para>Сообщение об ошибке.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.CompilerMessageType.Info">
      <summary>
        <para>Информационное сообщение.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.CompilerMessageType.Warning">
      <summary>
        <para>Предупреждение.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Compilation.PrecompiledAssemblyException">
      <summary>
        <para>Исключение для ошибок предварительно скомпилированной сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.PrecompiledAssemblyException.filePaths">
      <summary>
        <para>Пути к файлам для предварительно скомпилированных сборок, вызвавших исключение.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Compilation.PrecompiledAssemblyException.#ctor(System.String,System.String[])">
      <summary>
        <para>Конструктор.</para>
      </summary>
      <param name="message">Сообщение об исключении.</param>
      <param name="filePaths">Пути к файлам для предварительно скомпилированных сборок.</param>
    </member>
    <member name="T:UnityEditor.Compilation.ReferencesOptions">
      <summary>
        <para>Параметры управления ссылками Unity на другие файлы определений сборок, которые Unity использует во время компиляции.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.ReferencesOptions.None">
      <summary>
        <para>Параметры по умолчанию.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.ReferencesOptions.UseEngineModules">
      <summary>
        <para>Используйте модули UnityEngine при компиляции.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Compilation.RequestScriptCompilationOptions">
      <summary>
        <para>Параметры для указания поведения CompilationPipeline.RequestScriptCompilation.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.RequestScriptCompilationOptions.CleanBuildCache">
      <summary>
        <para>Очистите все кэшированные результаты сборки, что приведет к полному перестроению всех сценариев.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.RequestScriptCompilationOptions.None">
      <summary>
        <para>Поведение по умолчанию. Unity будет перекомпилировать только те сценарии, которые изменились или которые нуждаются в перекомпиляции из-за изменений в настройках, влияющих на компиляцию скриптов.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Compilation.ResponseFileData">
      <summary>
        <para>Класс данных, используемый для хранения проанализированных данных файла ответов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.ResponseFileData.Defines">
      <summary>
        <para>Массив определяемых символов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.ResponseFileData.Errors">
      <summary>
        <para>Сообщения об ошибках, возникшие во время синтаксического анализа файла ответов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.ResponseFileData.FullPathReferences">
      <summary>
        <para>Массив абсолютного пути ссылки на сборки, которые должны ссылаться на сборки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.ResponseFileData.OtherArguments">
      <summary>
        <para>Дополнительные параметры компилятора, записанные в файле ответов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Compilation.ResponseFileData.Unsafe">
      <summary>
        <para>Где «небезопасный» код разрешен при компиляции скриптов.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Compilation.ScriptCompilerOptions">
      <summary>
        <para>Параметры компилятора передаются компилятору скриптов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.ScriptCompilerOptions.AdditionalCompilerArguments">
      <summary>
        <para>Дополнительные аргументы компилятора.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.ScriptCompilerOptions.AllowUnsafeCode">
      <summary>
        <para>Разрешить 'небезопасный' код при компиляции скриптов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.ScriptCompilerOptions.AnalyzerConfigPath">
      <summary>
        <para>Сохраняет путь к глобальному конфигурационному файлу Roslyn.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.ScriptCompilerOptions.ApiCompatibilityLevel">
      <summary>
        <para>ApiCompatibilityLevel для данной сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.ScriptCompilerOptions.CodeOptimization">
      <summary>
        <para>Указывает, включена ли оптимизация производительности для сборки.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Compilation.ScriptCompilerOptions.#ctor">
      <summary>
        <para>Создает объект ScriptCompilerOptions со значениями по умолчанию, используемыми для компиляции скриптов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.ScriptCompilerOptions.EmitReferenceAssembly">
      <summary>
        <para>Создавайте эталонную сборку при компиляции сценариев.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.ScriptCompilerOptions.LanguageVersion">
      <summary>
        <para>Строковое представление языковой версии, используемой для компиляции текущей сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.ScriptCompilerOptions.ResponseFiles">
      <summary>
        <para>Массив пути к файлам ответов, влияющий на текущую компиляцию.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.ScriptCompilerOptions.RoslynAdditionalFilePaths">
      <summary>
        <para>Сохраняет пути к дополнительным файлам Roslyn Analyzer.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.ScriptCompilerOptions.RoslynAnalyzerDllPaths">
      <summary>
        <para>Сохраняет пути к .dll файлам.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Compilation.ScriptCompilerOptions.RoslynAnalyzerRulesetPath">
      <summary>
        <para>Сохраняет путь к файлу набора правил Roslyn.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ComputeShaderImporter">
      <summary>
        <para>Определите параметры импорта шейдеров вычислений в редакторе Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ComputeShaderImporter.preprocessorOverride">
      <summary>
        <para>Препроцессор, используемый Unity для компиляции этого вычислительного шейдера.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.CrashReporting.CrashReportingSettings">
      <summary>
        <para>API редактора для функции редактора служб Unity. Обычно CrashReporting включается из окна Службы, но при написании собственного расширения редактора этот API можно использовать.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CrashReporting.CrashReportingSettings.captureEditorExceptions">
      <summary>
        <para>Это логическое поле приведет к тому, что функция CrashReporting в Unity будет фиксировать исключения, возникающие в редакторе во время работы в режиме воспроизведения, если значение true, или игнорировать эти ошибки, если false.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CrashReporting.CrashReportingSettings.enabled">
      <summary>
        <para>Это логическое поле приведет к тому, что функция CrashReporting в Unity будет включена, если значение true, или отключена, если false.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CrashReporting.CrashReportingSettings.logBufferSize">
      <summary>
        <para>Служба отчетов о производительности будет хранить буфер до последних сообщений журнала X (Debug.Log и т. д.) для отправки вместе с отчетами о сбоях.  Значение по умолчанию — 10 сообщений журнала, максимальное — 50. Установите значение 0, чтобы отключить захват журналов с отчетами о сбоях.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.CreateAssetObjectEventArgs">
      <summary>
        <para>Изменение этого типа указывает на то, что объект актива был создан. Это происходит, например, когда Undo.RegisterCreatedObjectUndo используется с экземпляром ресурса (например, Texture).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CreateAssetObjectEventArgs.guid">
      <summary>
        <para>Идентификатор GUID нового ресурса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CreateAssetObjectEventArgs.instanceId">
      <summary>
        <para>Идентификатор экземпляра измененного ресурса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CreateAssetObjectEventArgs.scene">
      <summary>
        <para>Сцена, содержащая новый ресурс. Обычно это недопустимая сцена, если ресурс явно не связан в сцене (например, RenderSettings).</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CreateAssetObjectEventArgs.#ctor(UnityEditor.GUID,System.Int32,UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Создает новый экземпляр.</para>
      </summary>
      <param name="guid">Идентификатор GUID нового ресурса.</param>
      <param name="instanceId">Идентификатор экземпляра измененного ресурса.</param>
      <param name="scene">Сцена, содержащая новый ресурс.</param>
    </member>
    <member name="T:UnityEditor.CreateGameObjectHierarchyEventArgs">
      <summary>
        <para>Изменение этого типа указывает на то, что был создан объект GameObject, возможно, с дополнительными объектами под ним в иерархии. Это происходит, например, когда Undo.RegisterCreatedObjectUndo используется с объектом GameObject.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CreateGameObjectHierarchyEventArgs.instanceId">
      <summary>
        <para>Идентификатор экземпляра созданного объекта GameObject.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CreateGameObjectHierarchyEventArgs.scene">
      <summary>
        <para>Сцена, содержащая созданный объект GameObject.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CreateGameObjectHierarchyEventArgs.#ctor(System.Int32,UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Создает новый экземпляр.</para>
      </summary>
      <param name="instanceId">Идентификатор экземпляра созданного объекта GameObject.</param>
      <param name="scene">Сцена, содержащая созданный объект GameObject.</param>
    </member>
    <member name="T:UnityEditor.CustomEditor">
      <summary>
        <para>Сообщает классу Editor, для какого типа среды выполнения предназначен редактор.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.CustomEditor.isFallback">
      <summary>
        <para>Если значение равно true, сопоставляйте этот редактор только в том случае, если нестандартные редакторы не совпадают. По умолчанию используется значение false.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CustomEditor.#ctor(System.Type)">
      <summary>
        <para>Определяет, какой тип объекта может редактировать пользовательский класс редактора.</para>
      </summary>
      <param name="inspectedType">Введите текст, который этот редактор может редактировать.</param>
      <param name="editorForChildClasses">Если значение равно true, дочерние классы inspectedType также отобразят этот редактор. По умолчанию используется значение false.</param>
    </member>
    <member name="M:UnityEditor.CustomEditor.#ctor(System.Type,System.Boolean)">
      <summary>
        <para>Определяет, какой тип объекта может редактировать пользовательский класс редактора.</para>
      </summary>
      <param name="inspectedType">Введите текст, который этот редактор может редактировать.</param>
      <param name="editorForChildClasses">Если значение равно true, дочерние классы inspectedType также отобразят этот редактор. По умолчанию используется значение false.</param>
    </member>
    <member name="T:UnityEditor.CustomEditorForRenderPipelineAttribute">
      <summary>
        <para>Сообщает классу Editor, для какого типа среды выполнения он является редактором, когда активируется данный RenderPipeline.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CustomEditorForRenderPipelineAttribute.#ctor(System.Type,System.Type)">
      <summary>
        <para>Определяет, какой тип объекта может редактировать пользовательский класс редактора.</para>
      </summary>
      <param name="inspectedType">Введите текст, который этот редактор может редактировать.</param>
      <param name="renderPipeline">Тип RenderPipelineAsset, который должен быть активен для использования этого инспектора.</param>
      <param name="editorForChildClasses">Если значение равно true, дочерние классы inspectedType также отобразят этот редактор. По умолчанию используется значение false.</param>
    </member>
    <member name="M:UnityEditor.CustomEditorForRenderPipelineAttribute.#ctor(System.Type,System.Type,System.Boolean)">
      <summary>
        <para>Определяет, какой тип объекта может редактировать пользовательский класс редактора.</para>
      </summary>
      <param name="inspectedType">Введите текст, который этот редактор может редактировать.</param>
      <param name="renderPipeline">Тип RenderPipelineAsset, который должен быть активен для использования этого инспектора.</param>
      <param name="editorForChildClasses">Если значение равно true, дочерние классы inspectedType также отобразят этот редактор. По умолчанию используется значение false.</param>
    </member>
    <member name="T:UnityEditor.CustomPreviewAttribute">
      <summary>
        <para>Добавляет дополнительный предварительный просмотр в инспектор для указанного типа.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CustomPreviewAttribute.#ctor(System.Type)">
      <summary>
        <para>Указывает DefaultPreview, для какого класса он является предварительным просмотром.</para>
      </summary>
      <param name="type">Тип, для которого требуется создать пользовательский предварительный просмотр.</param>
    </member>
    <member name="T:UnityEditor.CustomPropertyDrawer">
      <summary>
        <para>Сообщает пользовательскому объекту PropertyDrawer или DecoratorDrawer, для какого сериализуемого класса среды выполнения или PropertyAttribute предназначен ящик.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.CustomPropertyDrawer.#ctor(System.Type)">
      <summary>
        <para>Сообщает классу PropertyDrawer или DecoratorDrawer, для какого класса или атрибута времени выполнения он предназначен.</para>
      </summary>
      <param name="type">Если ящик предназначен для пользовательского сериализуемого класса, типом должен быть этот класс. Если ящик предназначен для переменных скрипта с определенным атрибутом PropertyAttribute, типом должен быть этот атрибут.</param>
      <param name="useForChildren">Если значение равно true, ящик будет использоваться для любых дочерних элементов указанного класса, если они не определят свой собственный ящик.</param>
    </member>
    <member name="M:UnityEditor.CustomPropertyDrawer.#ctor(System.Type,System.Boolean)">
      <summary>
        <para>Сообщает классу PropertyDrawer или DecoratorDrawer, для какого класса или атрибута времени выполнения он предназначен.</para>
      </summary>
      <param name="type">Если ящик предназначен для пользовательского сериализуемого класса, типом должен быть этот класс. Если ящик предназначен для переменных скрипта с определенным атрибутом PropertyAttribute, типом должен быть этот атрибут.</param>
      <param name="useForChildren">Если значение равно true, ящик будет использоваться для любых дочерних элементов указанного класса, если они не определят свой собственный ящик.</param>
    </member>
    <member name="T:UnityEditor.D3D11FullscreenMode">
      <summary>
        <para>Полноэкранный режим Direct3D 11.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.D3D11FullscreenMode.ExclusiveMode">
      <summary>
        <para>Эксклюзивный режим.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.D3D11FullscreenMode.FullscreenWindow">
      <summary>
        <para>Полноэкранное окно.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.D3D9FullscreenMode">
      <summary>
        <para>Полноэкранный режим Direct3D 9.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.D3D9FullscreenMode.ExclusiveMode">
      <summary>
        <para>Эксклюзивный режим.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.D3D9FullscreenMode.FullscreenWindow">
      <summary>
        <para>Полноэкранное окно.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.DDSImporter">
      <summary>
        <para>Средство импорта текстур позволяет изменять настройки импорта Texture2D для текстур DDS из скриптов редактора.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.DDSImporter.isReadable">
      <summary>
        <para>Считываются ли текстурные данные из скриптов.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.DecoratorDrawer">
      <summary>
        <para>Базовый класс для наследования пользовательских ящиков декоратора.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.DecoratorDrawer.attribute">
      <summary>
        <para>Атрибут PropertyAttribute для декоратора. (Только для чтения)</para>
      </summary>
    </member>
    <member name="M:UnityEditor.DecoratorDrawer.CanCacheInspectorGUI">
      <summary>
        <para>Переопределите этот метод, чтобы определить, можно ли кэшировать графический интерфейс инспектора для декоратора.</para>
      </summary>
      <returns>
        <para>Можно ли кэшировать графический интерфейс инспектора для декоратора.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.DecoratorDrawer.GetHeight">
      <summary>
        <para>Переопределите этот метод, чтобы указать, как высокая высота графического интерфейса для этого декоратора в пикселях.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.DecoratorDrawer.OnGUI(UnityEngine.Rect)">
      <summary>
        <para>Переопределите этот метод, чтобы создать собственный графический интерфейс для декоратора. Смотрите DecoratorDrawer для примера того, как это использовать.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в графическом интерфейсе декоратора.</param>
    </member>
    <member name="T:UnityEditor.DefaultAsset">
      <summary>
        <para>DefaultAsset используется для ресурсов, которые не имеют определенного типа (пока).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.DefaultLightingExplorerExtension">
      <summary>
        <para>Определение по умолчанию для обозревателя освещения. Может быть переопределен полностью или частично.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.DefaultLightingExplorerExtension.#ctor">
      <summary>
        <para>Конструктор.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.DefaultLightingExplorerExtension.Get2DLightColumns">
      <summary>
        <para>Получает определения столбцов для 2D-подсветки.</para>
      </summary>
      <returns>
        <para>Возвращает определения столбцов для 2D-подсветки.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.DefaultLightingExplorerExtension.Get2DLights">
      <summary>
        <para>Получает массив всех 2D-источников света в сцене.</para>
      </summary>
      <returns>
        <para>Возвращает массив 2D-индикаторов.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.DefaultLightingExplorerExtension.GetContentTabs">
      <summary>
        <para>При этом возвращаются все вкладки по умолчанию для обозревателя освещения.</para>
      </summary>
      <returns>
        <para>Вкладки по умолчанию для обозревателя освещения.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.DefaultLightingExplorerExtension.GetEmissives">
      <summary>
        <para>Возвращает объекты с излучаемым материалом.</para>
      </summary>
      <returns>
        <para>Объекты с излучающим материалом.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.DefaultLightingExplorerExtension.GetEmissivesColumns">
      <summary>
        <para>Возвращает определения столбцов для излучателей.</para>
      </summary>
      <returns>
        <para>Определения столбцов для излучателей.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.DefaultLightingExplorerExtension.GetLightColumns">
      <summary>
        <para>Возвращает определения столбцов для Lights.</para>
      </summary>
      <returns>
        <para>Определения столбцов для Lights.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.DefaultLightingExplorerExtension.GetLightProbeColumns">
      <summary>
        <para>Возвращает определения столбцов для световых зондов.</para>
      </summary>
      <returns>
        <para>Определения столбцов для световых зондов.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.DefaultLightingExplorerExtension.GetLightProbes">
      <summary>
        <para>Возвращает световые зонды.</para>
      </summary>
      <returns>
        <para>Световые зонды.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.DefaultLightingExplorerExtension.GetLights">
      <summary>
        <para>Возвращает индикаторы.</para>
      </summary>
      <returns>
        <para>Светофор.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.DefaultLightingExplorerExtension.GetObjectsForLightingExplorer">
      <summary>
        <para>Возвращает значение типа T Objects для отображения в Light Explorer.</para>
      </summary>
      <returns>
        <para>Возвращает и массив объектов типа T.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.DefaultLightingExplorerExtension.GetReflectionProbeColumns">
      <summary>
        <para>Возвращает определения столбцов для зондов отражения.</para>
      </summary>
      <returns>
        <para>Определения столбцов для датчиков отражения.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.DefaultLightingExplorerExtension.GetReflectionProbes">
      <summary>
        <para>Возвращает датчики отражения.</para>
      </summary>
      <returns>
        <para>Датчики отражения.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.DestroyAssetObjectEventArgs">
      <summary>
        <para>Изменение этого типа указывает на то, что объект актива был уничтожен. Это происходит, например, когда Undo.DestroyObjectImmediate используется с экземпляром ресурса (например, Texture).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.DestroyAssetObjectEventArgs.guid">
      <summary>
        <para>Идентификатор GUID удаленного ресурса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.DestroyAssetObjectEventArgs.instanceId">
      <summary>
        <para>Идентификатор экземпляра измененного ресурса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.DestroyAssetObjectEventArgs.scene">
      <summary>
        <para>Сцена, содержащая ресурс. Обычно это недопустимая сцена, если ресурс явно не связан в сцене (например, RenderSettings).</para>
      </summary>
    </member>
    <member name="M:UnityEditor.DestroyAssetObjectEventArgs.#ctor(UnityEditor.GUID,System.Int32,UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Создает новый экземпляр.</para>
      </summary>
      <param name="guid">Идентификатор GUID удаленного ресурса.</param>
      <param name="instanceId">Идентификатор экземпляра измененного ресурса.</param>
      <param name="scene">Сцена, содержащая ресурс.</param>
    </member>
    <member name="T:UnityEditor.DestroyGameObjectHierarchyEventArgs">
      <summary>
        <para>Изменение этого типа указывает на то, что Объект GameObject и вся иерархия под ним были уничтожены. Это происходит, например, когда Undo.DestroyObjectImmediate используется с Объектом GameObject.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.DestroyGameObjectHierarchyEventArgs.instanceId">
      <summary>
        <para>Идентификатор экземпляра объекта GameObject, который был уничтожен.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.DestroyGameObjectHierarchyEventArgs.parentInstanceId">
      <summary>
        <para>Идентификатор экземпляра родительского объекта GameObject объекта GameObject, который был уничтожен.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.DestroyGameObjectHierarchyEventArgs.scene">
      <summary>
        <para>Сцена, содержащая объект GameObject, который был уничтожен.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.DestroyGameObjectHierarchyEventArgs.#ctor(System.Int32,UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Создает новый экземпляр.</para>
      </summary>
      <param name="instanceId">Идентификатор экземпляра объекта GameObject, который был уничтожен.</param>
      <param name="parentInstanceId">Идентификатор экземпляра родительского объекта GameObject объекта GameObject, который был уничтожен.</param>
      <param name="scene">Сцена, содержащая объект GameObject, который был уничтожен.</param>
    </member>
    <member name="M:UnityEditor.DestroyGameObjectHierarchyEventArgs.#ctor(System.Int32,System.Int32,UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Создает новый экземпляр.</para>
      </summary>
      <param name="instanceId">Идентификатор экземпляра объекта GameObject, который был уничтожен.</param>
      <param name="parentInstanceId">Идентификатор экземпляра родительского объекта GameObject объекта GameObject, который был уничтожен.</param>
      <param name="scene">Сцена, содержащая объект GameObject, который был уничтожен.</param>
    </member>
    <member name="T:UnityEditor.DialogOptOutDecisionType">
      <summary>
        <para>Тип решения об отказе, которое может принять пользователь.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DialogOptOutDecisionType.ForThisMachine">
      <summary>
        <para>Решение отказаться от просмотра диалогового окна на все время на текущем компьютере пользователя.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DialogOptOutDecisionType.ForThisSession">
      <summary>
        <para>Решение отказаться от просмотра диалогового окна в течение текущего сеанса редактора.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.DragAndDrop">
      <summary>
        <para>Редактор операций перетаскивания.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.DragAndDrop.activeControlID">
      <summary>
        <para>Получение или установка идентификатора активного в данный момент элемента управления перетаскиванием.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.DragAndDrop.objectReferences">
      <summary>
        <para>Ссылки на перетаскиваемые объекты|.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.DragAndDrop.paths">
      <summary>
        <para>Перетаскиваемые имена файлов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.DragAndDrop.visualMode">
      <summary>
        <para>Визуальная индикация перетаскивания.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.DragAndDrop.AcceptDrag">
      <summary>
        <para>Примите операцию перетаскивания.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.DragAndDrop.AddDropHandler(UnityEditor.DragAndDrop/ProjectBrowserDropHandler)">
      <summary>
        <para>Разрешить переопределение поведения по умолчанию для соответствующего окна. В одном окне может быть зарегистрировано несколько обработчиков. Если обработчик возвращает DragAndDropVisualMode.None система проверит следующий обработчик. Любые другие результаты (DragAndDropVisualMode.Rejected или другие DragAndDropVisualMode) означают, что этот обработчик обработал событие перетаскивания, и никакой другой обработчик не будет вызван. Последний обработчик является обработчиком Unity по умолчанию.</para>
      </summary>
      <param name="handler">Функция для обработки падения в соответствующем окне.</param>
    </member>
    <member name="M:UnityEditor.DragAndDrop.AddDropHandler(UnityEditor.DragAndDrop/SceneDropHandler)">
      <summary>
        <para>Разрешить переопределение поведения по умолчанию для соответствующего окна. В одном окне может быть зарегистрировано несколько обработчиков. Если обработчик возвращает DragAndDropVisualMode.None система проверит следующий обработчик. Любые другие результаты (DragAndDropVisualMode.Rejected или другие DragAndDropVisualMode) означают, что этот обработчик обработал событие перетаскивания, и никакой другой обработчик не будет вызван. Последний обработчик является обработчиком Unity по умолчанию.</para>
      </summary>
      <param name="handler">Функция для обработки падения в соответствующем окне.</param>
    </member>
    <member name="M:UnityEditor.DragAndDrop.AddDropHandler(UnityEditor.DragAndDrop/HierarchyDropHandler)">
      <summary>
        <para>Разрешить переопределение поведения по умолчанию для соответствующего окна. В одном окне может быть зарегистрировано несколько обработчиков. Если обработчик возвращает DragAndDropVisualMode.None система проверит следующий обработчик. Любые другие результаты (DragAndDropVisualMode.Rejected или другие DragAndDropVisualMode) означают, что этот обработчик обработал событие перетаскивания, и никакой другой обработчик не будет вызван. Последний обработчик является обработчиком Unity по умолчанию.</para>
      </summary>
      <param name="handler">Функция для обработки падения в соответствующем окне.</param>
    </member>
    <member name="M:UnityEditor.DragAndDrop.AddDropHandler(UnityEditor.DragAndDrop/InspectorDropHandler)">
      <summary>
        <para>Разрешить переопределение поведения по умолчанию для соответствующего окна. В одном окне может быть зарегистрировано несколько обработчиков. Если обработчик возвращает DragAndDropVisualMode.None система проверит следующий обработчик. Любые другие результаты (DragAndDropVisualMode.Rejected или другие DragAndDropVisualMode) означают, что этот обработчик обработал событие перетаскивания, и никакой другой обработчик не будет вызван. Последний обработчик является обработчиком Unity по умолчанию.</para>
      </summary>
      <param name="handler">Функция для обработки падения в соответствующем окне.</param>
    </member>
    <member name="M:UnityEditor.DragAndDrop.GetGenericData(System.String)">
      <summary>
        <para>Получение данных, связанных с текущей операцией перетаскивания.</para>
      </summary>
      <param name="type">
      </param>
    </member>
    <member name="M:UnityEditor.DragAndDrop.HasHandler(System.Int32,System.Delegate)">
      <summary>
        <para>Проверьте, зарегистрирован ли обработчик для идентификатора окна назначения.</para>
      </summary>
      <param name="dropDstId">Идентификатор окна назначения.</param>
      <param name="handler">Обработчик целевого окна.</param>
      <returns>
        <para>Значение true, если обработчик уже зарегистрирован.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.DragAndDrop.HierarchyDropHandler">
      <summary>
        <para>Обработчик иерархии.</para>
      </summary>
      <param name="dropTargetInstanceID">Идентификатор игрового объекта в окне Иерархия, находящемся под курсором мыши.</param>
      <param name="parentForDraggedObjects">Родительский объект ForDraggedObjects устанавливается только в особых ситуациях в режиме Prefab (чаще всего он будет равен null). Если это значение задано, идентификатор dropTargetInstanceID равен 0. И клиентский код должен использовать 'parentForDraggedObjects' в качестве принудительного родительского элемента перетаскивания.</param>
      <param name="perform">Значение true, если событие имеет тип EventType.DragPerform.</param>
      <param name="dropMode">Укажите способ перемещения перетаскиваемого объекта в окне Иерархия.</param>
      <returns>
        <para>Возвращает значение DragAndDropVisualMode.None, если этот обработчик не может обработать событие. В этом случае для обработки будет вызван новый обработчик. Любые другие результаты DragAndDropVisualMode остановят цепочку обработчиков.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.DragAndDrop.InspectorDropHandler">
      <summary>
        <para>Обработчик для инспектора.</para>
      </summary>
      <param name="targets">Целевые объекты операции перетаскивания.</param>
      <param name="perform">Значение true, если событие имеет тип EventType.DragPerform.</param>
      <returns>
        <para>Возвращает значение DragAndDropVisualMode.None, если этот обработчик не может обработать событие. В этом случае для обработки будет вызван новый обработчик. Любые другие результаты DragAndDropVisualMode остановят цепочку обработчиков.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.DragAndDrop.PrepareStartDrag">
      <summary>
        <para>Очищает данные перетаскивания.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.DragAndDrop.ProjectBrowserDropHandler">
      <summary>
        <para>Обработчик проекта.</para>
      </summary>
      <param name="dragInstanceId">Идентификатор перетаскиваемого ресурса, перетаскиваемого в окно браузера проектов.</param>
      <param name="dropUponPath">Путь к перетаскиваемому ресурсу, перетаскиваемому в окно браузера проектов.</param>
      <param name="perform">Значение true, если событие имеет тип EventType.DragPerform.</param>
      <returns>
        <para>Возвращает значение DragAndDropVisualMode.None, если этот обработчик не может обработать событие. В этом случае для обработки будет вызван новый обработчик. Любые другие результаты DragAndDropVisualMode остановят цепочку обработчиков.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.DragAndDrop.RemoveDropHandler(UnityEditor.DragAndDrop/ProjectBrowserDropHandler)">
      <summary>
        <para>Отмените регистрацию определенного обработчика перетаскивания из целевого объекта перетаскивания окна.</para>
      </summary>
      <param name="handler">Обработчик для отмены регистрации.</param>
    </member>
    <member name="M:UnityEditor.DragAndDrop.RemoveDropHandler(UnityEditor.DragAndDrop/SceneDropHandler)">
      <summary>
        <para>Отмените регистрацию определенного обработчика перетаскивания из целевого объекта перетаскивания окна.</para>
      </summary>
      <param name="handler">Обработчик для отмены регистрации.</param>
    </member>
    <member name="M:UnityEditor.DragAndDrop.RemoveDropHandler(UnityEditor.DragAndDrop/HierarchyDropHandler)">
      <summary>
        <para>Отмените регистрацию определенного обработчика перетаскивания из целевого объекта перетаскивания окна.</para>
      </summary>
      <param name="handler">Обработчик для отмены регистрации.</param>
    </member>
    <member name="M:UnityEditor.DragAndDrop.RemoveDropHandler(UnityEditor.DragAndDrop/InspectorDropHandler)">
      <summary>
        <para>Отмените регистрацию определенного обработчика перетаскивания из целевого объекта перетаскивания окна.</para>
      </summary>
      <param name="handler">Обработчик для отмены регистрации.</param>
    </member>
    <member name="T:UnityEditor.DragAndDrop.SceneDropHandler">
      <summary>
        <para>Обработчик сцены.</para>
      </summary>
      <param name="dropUpon">Перетаскиваемый игровой объект, перетаскиваемый в представление «Сцена».</param>
      <param name="worldPosition">Положение в мире.</param>
      <param name="viewportPosition">Позиция в окне просмотра.</param>
      <param name="parentForDraggedObjects">Родительское преобразование перетаскиваемого объекта.</param>
      <param name="perform">Значение true, если событие имеет тип EventType.DragPerform.</param>
    </member>
    <member name="M:UnityEditor.DragAndDrop.SetGenericData(System.String,System.Object)">
      <summary>
        <para>Задайте данные, связанные с текущей операцией перетаскивания.</para>
      </summary>
      <param name="type">
      </param>
      <param name="data">
      </param>
    </member>
    <member name="M:UnityEditor.DragAndDrop.StartDrag(System.String)">
      <summary>
        <para>Запустите операцию перетаскивания.</para>
      </summary>
      <param name="title">
      </param>
    </member>
    <member name="T:UnityEditor.DragAndDropVisualMode">
      <summary>
        <para>Режим визуальной индикации для операции drag &amp; Drop.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DragAndDropVisualMode.Copy">
      <summary>
        <para>Копирование перетаскиваемых объектов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DragAndDropVisualMode.Generic">
      <summary>
        <para>Универсальная операция перетаскивания.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DragAndDropVisualMode.Link">
      <summary>
        <para>Связывание перетаскиваемых объектов с целевыми объектами.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DragAndDropVisualMode.Move">
      <summary>
        <para>Перемещение перетаскиваемых объектов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DragAndDropVisualMode.None">
      <summary>
        <para>Нет индикации (перетаскивание не должно выполняться).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DragAndDropVisualMode.Rejected">
      <summary>
        <para>Отклонена операция перетаскивания.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.DragAndDropWindowTarget">
      <summary>
        <para>Идентификаторы для основных окон. Они используются API DragAndDrop.RemoveHandler.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DragAndDropWindowTarget.hierarchy">
      <summary>
        <para>Идентификатор для целевой иерархии.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DragAndDropWindowTarget.inspector">
      <summary>
        <para>Идентификатор для нацеливания на инспектора.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DragAndDropWindowTarget.projectBrowser">
      <summary>
        <para>Идентификатор для браузера проектов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DragAndDropWindowTarget.sceneView">
      <summary>
        <para>Идентификатор для целевого представления «Сцена».</para>
      </summary>
    </member>
    <member name="T:UnityEditor.DrawCameraMode">
      <summary>
        <para>Режимы рисования для Handles.DrawCamera.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.Albedo">
      <summary>
        <para>Рисуйте объекты только с помощью компонента albedo. Это значение устарело. Пожалуйста, используйте DrawCameraMode.RealtimeAlbedo.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.AlphaChannel">
      <summary>
        <para>Камера настроена на отображение альфа-канала рендеринга.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.Baked">
      <summary>
        <para>Рисуйте объекты только с запеченным GI. Это значение устарело. Пожалуйста, используйте DrawCameraMode.BakedLightmap.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.BakedAlbedo">
      <summary>
        <para>Рисуйте объекты только с компонентом baked albedo.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.BakedCharting">
      <summary>
        <para>Рисуйте объекты разными цветами для каждой запеченной диаграммы (УФ-остров).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.BakedDirectionality">
      <summary>
        <para>Рисуйте объекты только с запеченным компонентом направленности.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.BakedEmissive">
      <summary>
        <para>Рисуйте объекты только с запеченным эмиссионным компонентом.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.BakedIndices">
      <summary>
        <para>Рисуйте объекты только с запеченными индексами.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.BakedLightmap">
      <summary>
        <para>Рисуйте объекты только с помощью запеченной световой карты.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.BakedLightmapCulling">
      <summary>
        <para>Рисуйте объекты с выделенными текселями карты видимого света.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.BakedTexelValidity">
      <summary>
        <para>Рисуйте объекты только с запеченным текселем.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.BakedUVOverlap">
      <summary>
        <para>Рисуйте объекты с выделенными перекрывающимися текселями световой карты.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.Charting">
      <summary>
        <para>Рисуйте объекты разными цветами для каждой диаграммы в реальном времени (УФ-остров).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.Clustering">
      <summary>
        <para>Рисуйте разными цветами для каждого кластера.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.DeferredDiffuse">
      <summary>
        <para>Нарисуйте диффузный цвет G-буфера отложенного затенения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.DeferredNormal">
      <summary>
        <para>Нарисуйте нормаль мирового пространства отложенного затенения G-буфера.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.DeferredSmoothness">
      <summary>
        <para>Нарисуйте значение гладкости G-буфера отложенного затенения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.DeferredSpecular">
      <summary>
        <para>Нарисуйте зеркальный цвет G-буфера отложенного затенения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.Directionality">
      <summary>
        <para>Рисуйте объекты с направленностью для Enlighten Realtime Global Illumination. Это значение устарело. Пожалуйста, используйте DrawCameraMode.RealtimeDirectionality.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.Emissive">
      <summary>
        <para>Рисуйте объекты только с компонентом эмиссии. Это значение устарело. Пожалуйста, используйте DrawCameraMode.RealtimeEmissive.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.GIContributorsReceivers">
      <summary>
        <para>Рисуйте сетчатые рендереры и ландшафты разными цветами, чтобы отобразить их свойства StaticEditorFlags.ContributeGI / ReceiveGI. С цветами по умолчанию: желтый означает, что «ContributeGI» выключен. Синий означает, что 'ContributeGI' включен, и объект получает GI из световых карт. Смотрите также: ReceiveGI.Lightmaps Красный цвет означает, что 'ContributeGI' включен, но вместо этого объект получает GI от Light Probes. См. также: ReceiveGI.LightProbes.  Все цвета можно настроить в разделе «Настройки» &gt; «Цвета».</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.Irradiance">
      <summary>
        <para>Рисуйте объекты только с помощью Enlighten Realtime Global Illumination. Это значение устарело. Пожалуйста, используйте DrawCameraMode.RealtimeIndirect.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.LightOverlap">
      <summary>
        <para>Камера настроена на отображение в красных статических огнях, которые возвращаются к «статическим», потому что более четырех томов света перекрываются.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.LitClustering">
      <summary>
        <para>Нарисуйте освещенные кластеры.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.Mipmaps">
      <summary>
        <para>Камера настроена на отображение разрешения текстуры с красным оттенком, указывающим на слишком высокое разрешение, и синим оттенком, указывающим на размеры текстур, которые могут быть выше.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.Normal">
      <summary>
        <para>Нарисуйте камеру так, как если бы она была нарисована в игре. При этом используются четкие флаги камеры.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.Overdraw">
      <summary>
        <para>Камера настроена на отображение перерисовки сцены с более яркими цветами, указывающими на большую перерисовку.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.RealtimeAlbedo">
      <summary>
        <para>Рисуйте объекты только с помощью компонента Альбедо Enlighten Realtime Global Illumination.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.RealtimeCharting">
      <summary>
        <para>Рисуйте объекты разными цветами для каждой диаграммы в реальном времени (УФ-остров).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.RealtimeDirectionality">
      <summary>
        <para>Рисуйте объекты только с помощью компонента направленности Enlighten Realtime Global Illumination.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.RealtimeEmissive">
      <summary>
        <para>Рисуйте объекты только с помощью компонента излучения Enlighten Realtime Global Illumination.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.RealtimeIndirect">
      <summary>
        <para>Рисуйте объекты только с помощью непрямого света Enlighten Realtime Global Illumination.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.RenderPaths">
      <summary>
        <para>Камера настроена на рисование контуров рендеринга с цветовой кодировкой.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.ShadowCascades">
      <summary>
        <para>Камера настроена на рисование каскадов направленной светлой тени карты.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.ShadowMasks">
      <summary>
        <para>Камера настроена на отображение цветных ShadowMasks, раскрашивающих светлую штуковину с тем же цветом.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.SpriteMask">
      <summary>
        <para>Камера настроена на отображение SpriteMask и SpriteRenderer с набором SpriteRenderer.maskInteraction.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.Systems">
      <summary>
        <para>Рисуйте объекты с разным цветом для каждой системы GI.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.Textured">
      <summary>
        <para>Нарисуйте камеру текстурированной с выделенным каркасом и без очистки фона.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.TexturedWire">
      <summary>
        <para>Нарисуйте камеру, где все объекты имеют каркасное наложение. и отсутствие очистки фона.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.TextureStreaming">
      <summary>
        <para>Камера настроена на работу в режиме отладки потоковой передачи текстур.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.UserDefined">
      <summary>
        <para>Пользовательский режим, определенный пользователем.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.ValidateAlbedo">
      <summary>
        <para>Камера настроена на рисование физически обоснованного, проверенного альбедо рендеринга.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.ValidateMetalSpecular">
      <summary>
        <para>Камера настроена на рисование физически обоснованного, металлического или зеркального подтвержденного рендеринга.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.DrawCameraMode.Wireframe">
      <summary>
        <para>Рисуйте камеру в каркасе без очистки фона.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.DrawGizmo">
      <summary>
        <para>Атрибут DrawGizmo позволяет предоставить gizmo-рендерер для любого компонента.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.DrawGizmo.#ctor(UnityEditor.GizmoType)">
      <summary>
        <para>Определяет, когда gizmo должен быть вызван для рисования.</para>
      </summary>
      <param name="gizmo">Флаги для обозначения того, когда должна быть нарисована штуковина.</param>
    </member>
    <member name="M:UnityEditor.DrawGizmo.#ctor(UnityEditor.GizmoType,System.Type)">
      <summary>
        <para>То же самое, что и выше. drawnGizmoType определяет, каким типом должен быть объект, который мы рисуем.</para>
      </summary>
      <param name="gizmo">Флаги для обозначения того, когда должна быть нарисована штуковина.</param>
      <param name="drawnGizmoType">Тип объекта, для которого должна быть нарисована штуковина.</param>
    </member>
    <member name="T:UnityEditor.Editor">
      <summary>
        <para>Наследование от этого базового класса для создания пользовательского инспектора или редактора для пользовательского объекта.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Editor.finishedDefaultHeaderGUI(System.Action`1&lt;UnityEditor.Editor&gt;)">
      <summary>
        <para>Событие, возникающее при рисовании заголовка окна инспектора после рисования элементов заголовка по умолчанию.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="P:UnityEditor.Editor.serializedObject">
      <summary>
        <para>Объект SerializedObject, представляющий проверяемый объект или объекты.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Editor.target">
      <summary>
        <para>Проверяемый объект.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Editor.targets">
      <summary>
        <para>Массив всех проверяемых объектов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Editor.CreateCachedEditor(UnityEngine.Object,System.Type,UnityEditor.Editor&amp;)">
      <summary>
        <para>При возврате previousEditor является редактором для targetObject или targetObjects. Функция либо возвращается, если редактор уже отслеживает объекты, либо уничтожает предыдущий редактор и создает новый.</para>
      </summary>
      <param name="obj">Объект, отслеживаемый редактором.</param>
      <param name="editorType">Запрошенный тип редактора. Задайте значение null для редактора по умолчанию для объекта.</param>
      <param name="previousEditor">Предыдущий редактор для объекта. После возврата из CreateCachedEditor предыдущийEditor является редактором для targetObject или targetObjects.</param>
      <param name="objects">Объекты, отслеживаемые редактором.</param>
      <param name="targetObject">
      </param>
      <param name="targetObjects">
      </param>
    </member>
    <member name="M:UnityEditor.Editor.CreateCachedEditor(UnityEngine.Object[],System.Type,UnityEditor.Editor&amp;)">
      <summary>
        <para>При возврате previousEditor является редактором для targetObject или targetObjects. Функция либо возвращается, если редактор уже отслеживает объекты, либо уничтожает предыдущий редактор и создает новый.</para>
      </summary>
      <param name="obj">Объект, отслеживаемый редактором.</param>
      <param name="editorType">Запрошенный тип редактора. Задайте значение null для редактора по умолчанию для объекта.</param>
      <param name="previousEditor">Предыдущий редактор для объекта. После возврата из CreateCachedEditor предыдущийEditor является редактором для targetObject или targetObjects.</param>
      <param name="objects">Объекты, отслеживаемые редактором.</param>
      <param name="targetObject">
      </param>
      <param name="targetObjects">
      </param>
    </member>
    <member name="M:UnityEditor.Editor.CreateCachedEditorWithContext(UnityEngine.Object,UnityEngine.Object,System.Type,UnityEditor.Editor&amp;)">
      <summary>
        <para>Создает кэшированный редактор с помощью объекта контекста.</para>
      </summary>
      <param name="targetObject">
      </param>
      <param name="context">
      </param>
      <param name="editorType">
      </param>
      <param name="previousEditor">
      </param>
      <param name="targetObjects">
      </param>
    </member>
    <member name="M:UnityEditor.Editor.CreateCachedEditorWithContext(UnityEngine.Object[],UnityEngine.Object,System.Type,UnityEditor.Editor&amp;)">
      <summary>
        <para>Создает кэшированный редактор с помощью объекта контекста.</para>
      </summary>
      <param name="targetObject">
      </param>
      <param name="context">
      </param>
      <param name="editorType">
      </param>
      <param name="previousEditor">
      </param>
      <param name="targetObjects">
      </param>
    </member>
    <member name="M:UnityEditor.Editor.CreateEditor(UnityEngine.Object)">
      <summary>
        <para>Создайте пользовательский редактор для targetObject или targetObjects.</para>
      </summary>
      <param name="objects">Все объекты должны быть одного типа.</param>
      <param name="targetObject">
      </param>
      <param name="editorType">
      </param>
      <param name="targetObjects">
      </param>
    </member>
    <member name="M:UnityEditor.Editor.CreateEditor(UnityEngine.Object,System.Type)">
      <summary>
        <para>Создайте пользовательский редактор для targetObject или targetObjects.</para>
      </summary>
      <param name="objects">Все объекты должны быть одного типа.</param>
      <param name="targetObject">
      </param>
      <param name="editorType">
      </param>
      <param name="targetObjects">
      </param>
    </member>
    <member name="M:UnityEditor.Editor.CreateEditor(UnityEngine.Object[])">
      <summary>
        <para>Создайте пользовательский редактор для targetObject или targetObjects.</para>
      </summary>
      <param name="objects">Все объекты должны быть одного типа.</param>
      <param name="targetObject">
      </param>
      <param name="editorType">
      </param>
      <param name="targetObjects">
      </param>
    </member>
    <member name="M:UnityEditor.Editor.CreateEditor(UnityEngine.Object[],System.Type)">
      <summary>
        <para>Создайте пользовательский редактор для targetObject или targetObjects.</para>
      </summary>
      <param name="objects">Все объекты должны быть одного типа.</param>
      <param name="targetObject">
      </param>
      <param name="editorType">
      </param>
      <param name="targetObjects">
      </param>
    </member>
    <member name="M:UnityEditor.Editor.CreateEditorWithContext(UnityEngine.Object[],UnityEngine.Object,System.Type)">
      <summary>
        <para>Создайте пользовательский редактор для targetObject или targetObjects с объектом контекста.</para>
      </summary>
      <param name="targetObjects">
      </param>
      <param name="context">
      </param>
      <param name="editorType">
      </param>
    </member>
    <member name="M:UnityEditor.Editor.CreateInspectorGUI">
      <summary>
        <para>Реализуйте этот метод, чтобы создать пользовательский инспектор UIElements.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Editor.DrawDefaultInspector">
      <summary>
        <para>Рисует встроенный инспектор.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Editor.DrawFoldoutInspector(UnityEngine.Object,UnityEditor.Editor&amp;)">
      <summary>
        <para>Рисует графический интерфейс инспектора со складным заголовком для целевого объекта.</para>
      </summary>
      <param name="target">Объект, для которого отображается инспектор.</param>
      <param name="editor">Ссылка на переменную типа Editor.</param>
    </member>
    <member name="M:UnityEditor.Editor.DrawHeader">
      <summary>
        <para>Вызовите эту функцию, чтобы нарисовать заголовок редактора.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Editor.DrawPreview(UnityEngine.Rect)">
      <summary>
        <para>Первая точка входа для предварительного просмотра чертежа.</para>
      </summary>
      <param name="previewArea">Доступная область для рисования предварительного просмотра.</param>
    </member>
    <member name="M:UnityEditor.Editor.GetInfoString">
      <summary>
        <para>Реализуйте этот метод для отображения сведений об активе поверх предварительного просмотра ресурса.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Editor.GetPreviewTitle">
      <summary>
        <para>Переопределите этот метод, если требуется изменить метку области предварительного просмотра.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Editor.HasPreviewGUI">
      <summary>
        <para>Переопределите этот метод в подклассах, если реализован OnPreviewGUI.</para>
      </summary>
      <returns>
        <para>Значение true, если этот компонент может быть предварительно просмотрен в текущем состоянии.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Editor.OnInspectorGUI">
      <summary>
        <para>Реализуйте эту функцию, чтобы создать пользовательский инспектор.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Editor.OnInteractivePreviewGUI(UnityEngine.Rect,UnityEngine.GUIStyle)">
      <summary>
        <para>Реализация для создания собственного интерактивного пользовательского предварительного просмотра. Интерактивные пользовательские предварительные просмотры используются в области предварительного просмотра инспектора и селектора объектов.</para>
      </summary>
      <param name="r">Прямоугольник, в котором можно нарисовать предварительный просмотр.</param>
      <param name="background">Фоновое изображение.</param>
    </member>
    <member name="M:UnityEditor.Editor.OnPreviewGUI(UnityEngine.Rect,UnityEngine.GUIStyle)">
      <summary>
        <para>Реализация для создания собственного пользовательского предварительного просмотра для области предварительного просмотра инспектора, заголовков основного редактора и селектора объектов.</para>
      </summary>
      <param name="r">Прямоугольник, в котором можно нарисовать предварительный просмотр.</param>
      <param name="background">Фоновое изображение.</param>
    </member>
    <member name="M:UnityEditor.Editor.OnPreviewSettings">
      <summary>
        <para>Переопределите этот метод, если требуется отобразить пользовательские элементы управления в заголовке предварительного просмотра.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Editor.RenderStaticPreview(System.String,UnityEngine.Object[],System.Int32,System.Int32)">
      <summary>
        <para>Переопределите этот метод, если требуется отобразить статический предварительный просмотр.</para>
      </summary>
      <param name="assetPath">Актив для работы.</param>
      <param name="subAssets">Массив всех ресурсов на assetPath.</param>
      <param name="width">Ширина создаваемой текстуры.</param>
      <param name="height">Высота создаваемой текстуры.</param>
      <returns>
        <para>Сгенерированная текстура или null.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Editor.Repaint">
      <summary>
        <para>Перерисуйте всех инспекторов, которые показывают этот редактор.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Editor.RequiresConstantRepaint">
      <summary>
        <para>Проверяет, требует ли этот редактор постоянных перерисовок в текущем состоянии.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Editor.ShouldHideOpenButton">
      <summary>
        <para>Возвращает настройку видимости кнопки 'открыть' в инспекторе.</para>
      </summary>
      <returns>
        <para>Возвращает значение true, если кнопка должна быть скрыта.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Editor.UseDefaultMargins">
      <summary>
        <para>Переопределите этот метод в подклассах, чтобы вернуть значение false, если не нужны поля по умолчанию.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.EditorAnalytics">
      <summary>
        <para>API редактора для функции EditorAnalytics.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorAnalytics.enabled">
      <summary>
        <para>Возвращает значение true, если включен параметр EditorAnalytics.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorAnalytics.RegisterEventWithLimit(System.String,System.Int32,System.Int32,System.String)">
      <summary>
        <para>Этот API используется для регистрации события Editor Analytics. Примечание: Этот API предназначен только для внутреннего использования и, вероятно, изменится в будущем. Не используйте в пользовательском коде.</para>
      </summary>
      <param name="eventName">Название мероприятия.</param>
      <param name="ver">Номер версии события.</param>
      <param name="maxEventPerHour">Почасовое ограничение для этого имени события.</param>
      <param name="maxItems">Максимальное количество элементов в этом событии.</param>
      <param name="vendorKey">Имя ключа поставщика.</param>
    </member>
    <member name="M:UnityEditor.EditorAnalytics.RegisterEventWithLimit(System.String,System.Int32,System.Int32,System.String,System.Int32)">
      <summary>
        <para>Этот API используется для регистрации события Editor Analytics. Примечание: Этот API предназначен только для внутреннего использования и, вероятно, изменится в будущем. Не используйте в пользовательском коде.</para>
      </summary>
      <param name="eventName">Название мероприятия.</param>
      <param name="ver">Номер версии события.</param>
      <param name="maxEventPerHour">Почасовое ограничение для этого имени события.</param>
      <param name="maxItems">Максимальное количество элементов в этом событии.</param>
      <param name="vendorKey">Имя ключа поставщика.</param>
    </member>
    <member name="M:UnityEditor.EditorAnalytics.SendEventWithLimit(System.String,System.Object)">
      <summary>
        <para>Этот API используется для отправки события Editor Analytics. Примечание: Этот API предназначен только для внутреннего использования и, вероятно, изменится в будущем. Не используйте в пользовательском коде.</para>
      </summary>
      <param name="eventName">Название мероприятия.</param>
      <param name="parameters">Дополнительные данные о событии.</param>
      <param name="ver">Номер версии события.</param>
    </member>
    <member name="M:UnityEditor.EditorAnalytics.SendEventWithLimit(System.String,System.Object,System.Int32)">
      <summary>
        <para>Этот API используется для отправки события Editor Analytics. Примечание: Этот API предназначен только для внутреннего использования и, вероятно, изменится в будущем. Не используйте в пользовательском коде.</para>
      </summary>
      <param name="eventName">Название мероприятия.</param>
      <param name="parameters">Дополнительные данные о событии.</param>
      <param name="ver">Номер версии события.</param>
    </member>
    <member name="M:UnityEditor.EditorAnalytics.SetEventWithLimitEndPoint(System.String,System.String,System.Int32)">
      <summary>
        <para>Этот API используется для задания URL-адреса конечной точки события. Примечание: Этот API предназначен только для внутреннего использования и, вероятно, изменится в будущем. Не используйте в пользовательском коде.</para>
      </summary>
      <param name="eventName">Название мероприятия.</param>
      <param name="ver">Номер версии события.</param>
      <param name="endPoint">URL-адрес конечной точки события.</param>
    </member>
    <member name="M:UnityEditor.EditorAnalytics.SetEventWithLimitPriority(System.String,UnityEngine.Analytics.AnalyticsEventPriority,System.Int32)">
      <summary>
        <para>Используйте API для задания свойства события. Примечание: Этот API предназначен только для внутреннего использования и, вероятно, изменится в будущем. Не используйте в пользовательском коде.</para>
      </summary>
      <param name="eventName">Название мероприятия.</param>
      <param name="ver">Номер версии события.</param>
      <param name="eventPriority">Приоритет события.</param>
    </member>
    <member name="T:UnityEditor.EditorAnalyticsSessionInfo">
      <summary>
        <para>Предоставляет доступ к сведениям о сеансе Editor Analytics.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorAnalyticsSessionInfo.activeElapsedTime">
      <summary>
        <para>Общее время (в миллисекундах) взаимодействия пользователя с редактором с начала текущего сеанса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorAnalyticsSessionInfo.elapsedTime">
      <summary>
        <para>Продолжительность текущего сеанса в миллисекундах.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorAnalyticsSessionInfo.focusedElapsedTime">
      <summary>
        <para>Общее время в миллисекундах, в течение которого редактор находился в фокусе во время текущего сеанса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorAnalyticsSessionInfo.id">
      <summary>
        <para>Случайный уникальный идентификатор GUID, определяющий текущий сеанс редактора.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorAnalyticsSessionInfo.playbackElapsedTime">
      <summary>
        <para>Общее время (в миллисекундах) нахождения редактора в режиме воспроизведения в течение текущего сеанса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorAnalyticsSessionInfo.sessionCount">
      <summary>
        <para>Количество сеансов редактора, произошедших с момента установки текущего экземпляра редактора Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorAnalyticsSessionInfo.userId">
      <summary>
        <para>Случайный идентификатор GUID, однозначно идентифицирующий установку редактора.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.EditorApplication">
      <summary>
        <para>Основной класс приложения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorApplication.applicationContentsPath">
      <summary>
        <para>Путь к папке содержимого редактора Unity. (Только для чтения)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorApplication.applicationPath">
      <summary>
        <para>Возвращает путь к приложению редактора Unity. (Только для чтения)</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorApplication.contextualPropertyMenu">
      <summary>
        <para>Обратный вызов возникает всякий раз, когда пользователь щелкает по свойству в инспекторе.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorApplication.currentScene">
      <summary>
        <para>Путь к сцене, открытый пользователем в данный момент (будет пустой строкой, если в данный момент не открыт Scene). (Только для чтения)</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorApplication.delayCall">
      <summary>
        <para>Делегат, который вызывается один раз после всех инспекторов, обновляется.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.EditorApplication.hierarchyChanged(System.Action)">
      <summary>
        <para>Событие, возникающее при изменении объекта или группы объектов в иерархии.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="F:UnityEditor.EditorApplication.hierarchyWindowChanged">
      <summary>
        <para>Обратный вызов, возникающий при изменении объекта в иерархии.  Каждый раз, когда объект (или группа объектов) создается, переименовывается, воспитывается, не является родителем или уничтожается, возникает обратный вызов. </para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorApplication.hierarchyWindowItemOnGUI">
      <summary>
        <para>Делегируйте события OnGUI для каждого видимого элемента списка в HierarchyWindow.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorApplication.isCompiling">
      <summary>
        <para>Компилирует ли редактор скрипты в настоящее время? (Только для чтения)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorApplication.isPaused">
      <summary>
        <para>Редактор в настоящее время приостановлен?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorApplication.isPlaying">
      <summary>
        <para>Находится ли редактор в режиме воспроизведения?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorApplication.isPlayingOrWillChangePlaymode">
      <summary>
        <para>Редактор либо в настоящее время находится в режиме воспроизведения, либо собирается переключиться на него? (Только для чтения)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorApplication.isRemoteConnected">
      <summary>
        <para>Редактор в настоящее время подключен к клиентскому приложению Unity Remote 4.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorApplication.isSceneDirty">
      <summary>
        <para>Значение true, если открытая в данный момент scene в редакторе содержит несохраненные изменения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorApplication.isTemporaryProject">
      <summary>
        <para>Возвращает значение true, если текущий проект был создан как временный.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorApplication.isUpdating">
      <summary>
        <para>Значение true, если редактор в данный момент обновляет базу AssetDatabase.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorApplication.modifierKeysChanged">
      <summary>
        <para>Делегируйте измененные клавиши-модификаторы клавиатуры.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.EditorApplication.pauseStateChanged(System.Action`1&lt;UnityEditor.PauseState&gt;)">
      <summary>
        <para>Событие, возникающее при каждом изменении состояния паузы редактора.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="?:UnityEditor.EditorApplication.playModeStateChanged(System.Action`1&lt;UnityEditor.PlayModeStateChange&gt;)">
      <summary>
        <para>Событие, возникающее при каждом изменении состояния режима воспроизведения редактора.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="?:UnityEditor.EditorApplication.projectChanged(System.Action)">
      <summary>
        <para>Событие, возникающее при каждом изменении состояния проекта.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="F:UnityEditor.EditorApplication.projectWindowChanged">
      <summary>
        <para>Обратный вызов возникает при каждом изменении состояния окна проекта.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorApplication.projectWindowItemOnGUI">
      <summary>
        <para>Делегирование событий OnGUI для каждого видимого элемента списка в ProjectWindow.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.EditorApplication.quitting(System.Action)">
      <summary>
        <para>Unity вызывает это событие, когда приложение редактора завершает работу.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="P:UnityEditor.EditorApplication.scriptingRuntimeVersion">
      <summary>
        <para>Возвращает версию среды выполнения сценариев, используемую в настоящее время редактором.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorApplication.searchChanged">
      <summary>
        <para>Обратный вызов возникает при каждом изменении содержимого поля поиска окна.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorApplication.timeSinceStartup">
      <summary>
        <para>Время, прошедшее с момента начала работы редактора. (Только для чтения)</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorApplication.update">
      <summary>
        <para>Делегирование универсальных обновлений.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.EditorApplication.wantsToQuit(System.Func`1&lt;System.Boolean&gt;)">
      <summary>
        <para>Unity вызывает это событие, когда приложение редактора хочет завершить работу.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="M:UnityEditor.EditorApplication.Beep">
      <summary>
        <para>Воспроизводит системный звуковой сигнал.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.EditorApplication.CallbackFunction">
      <summary>
        <para>Делегат для вызова из обратных вызовов EditorApplication.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorApplication.DirtyHierarchyWindowSorting">
      <summary>
        <para>Задайте метод сортировки иерархии как грязный.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorApplication.EnterPlaymode">
      <summary>
        <para>Переключает редактор в режим воспроизведения.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorApplication.ExecuteMenuItem(System.String)">
      <summary>
        <para>Вызывает пункт меню в указанном пути.</para>
      </summary>
      <param name="menuItemPath">
      </param>
    </member>
    <member name="M:UnityEditor.EditorApplication.Exit(System.Int32)">
      <summary>
        <para>Закройте приложение редактора Unity.</para>
      </summary>
      <param name="returnValue">
      </param>
    </member>
    <member name="M:UnityEditor.EditorApplication.ExitPlaymode">
      <summary>
        <para>Переключает редактор в режим редактирования.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.EditorApplication.HierarchyWindowItemCallback">
      <summary>
        <para>Делегируйте вызов для каждого видимого элемента списка в HierarchyWindow в каждом событии OnGUI.</para>
      </summary>
      <param name="instanceID">
      </param>
      <param name="selectionRect">
      </param>
    </member>
    <member name="M:UnityEditor.EditorApplication.LoadLevelAdditiveAsyncInPlayMode(System.String)">
      <summary>
        <para>Загрузите заданный уровень аддитивно в режиме воспроизведения асинхронно</para>
      </summary>
      <param name="path">
      </param>
    </member>
    <member name="M:UnityEditor.EditorApplication.LoadLevelAdditiveInPlayMode(System.String)">
      <summary>
        <para>Загрузите заданный уровень дополнительно в режиме игры.</para>
      </summary>
      <param name="path">
      </param>
    </member>
    <member name="M:UnityEditor.EditorApplication.LoadLevelAsyncInPlayMode(System.String)">
      <summary>
        <para>Загрузите заданный уровень в режиме воспроизведения асинхронно.</para>
      </summary>
      <param name="path">
      </param>
    </member>
    <member name="M:UnityEditor.EditorApplication.LoadLevelInPlayMode(System.String)">
      <summary>
        <para>Загрузите заданный уровень в игровом режиме.</para>
      </summary>
      <param name="path">
      </param>
    </member>
    <member name="M:UnityEditor.EditorApplication.LockReloadAssemblies">
      <summary>
        <para>Предотвращает загрузку сборок, когда это неудобно.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorApplication.MarkSceneDirty">
      <summary>
        <para>Явно пометьте текущую открытую сцену как измененную.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorApplication.NewEmptyScene">
      <summary>
        <para>Создайте новую абсолютно пустую Сцену.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorApplication.NewScene">
      <summary>
        <para>Создайте новую сцену.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorApplication.OpenProject(System.String,System.String[])">
      <summary>
        <para>Откройте другой проект.</para>
      </summary>
      <param name="projectPath">Путь к открываемому проекту.</param>
      <param name="args">Аргументы для передачи в командную строку.</param>
    </member>
    <member name="M:UnityEditor.EditorApplication.OpenScene(System.String)">
      <summary>
        <para>Открывает сцену на пути.</para>
      </summary>
      <param name="path">
      </param>
    </member>
    <member name="M:UnityEditor.EditorApplication.OpenSceneAdditive(System.String)">
      <summary>
        <para>Открывает сцену на контуре аддитивно.</para>
      </summary>
      <param name="path">
      </param>
    </member>
    <member name="T:UnityEditor.EditorApplication.ProjectWindowItemCallback">
      <summary>
        <para>Делегирование для вызова каждого видимого элемента списка в ProjectWindow в каждом событии OnGUI.</para>
      </summary>
      <param name="guid">
      </param>
      <param name="selectionRect">
      </param>
    </member>
    <member name="M:UnityEditor.EditorApplication.QueuePlayerLoopUpdate">
      <summary>
        <para>Обычно обновление цикла проигрывателя происходит в редакторе после изменения сцены. Этот метод позволяет поставить в очередь обновление цикла проигрывателя независимо от того, была ли изменена сцена.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorApplication.RepaintHierarchyWindow">
      <summary>
        <para>Может использоваться для обеспечения перерисовки HierarchyWindow.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorApplication.RepaintProjectWindow">
      <summary>
        <para>Может использоваться для обеспечения перерисовки ProjectWindow.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorApplication.SaveAssets">
      <summary>
        <para>Сохраняет все сериализуемые ресурсы, которые еще не были записаны на диск (например, Материалы).</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorApplication.SaveCurrentSceneIfUserWantsTo">
      <summary>
        <para>Спросите пользователя, хотят ли они сохранить открытую сцену.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorApplication.SaveScene">
      <summary>
        <para>Сохраните открытую сцену.</para>
      </summary>
      <param name="path">Путь к файлу для сохранения. Если он пуст, текущая открытая сцена будет перезаписана, или, если она никогда не сохранялась ранее, отображается диалоговое окно сохранения.</param>
      <param name="saveAsCopy">Если задано значение true, Scene будет сохранен без изменения текущего Scene и без очистки маркера несохраненных изменений.</param>
      <returns>
        <para>Значение true, если сохранение выполнено успешно, в противном случае — значение false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorApplication.SaveScene(System.String)">
      <summary>
        <para>Сохраните открытую сцену.</para>
      </summary>
      <param name="path">Путь к файлу для сохранения. Если он пуст, текущая открытая сцена будет перезаписана, или, если она никогда не сохранялась ранее, отображается диалоговое окно сохранения.</param>
      <param name="saveAsCopy">Если задано значение true, Scene будет сохранен без изменения текущего Scene и без очистки маркера несохраненных изменений.</param>
      <returns>
        <para>Значение true, если сохранение выполнено успешно, в противном случае — значение false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorApplication.SaveScene(System.String,System.Boolean)">
      <summary>
        <para>Сохраните открытую сцену.</para>
      </summary>
      <param name="path">Путь к файлу для сохранения. Если он пуст, текущая открытая сцена будет перезаписана, или, если она никогда не сохранялась ранее, отображается диалоговое окно сохранения.</param>
      <param name="saveAsCopy">Если задано значение true, Scene будет сохранен без изменения текущего Scene и без очистки маркера несохраненных изменений.</param>
      <returns>
        <para>Значение true, если сохранение выполнено успешно, в противном случае — значение false.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.EditorApplication.SerializedPropertyCallbackFunction">
      <summary>
        <para>Делегат для вызова из обратных вызовов контекстного инспектора EditorApplication.</para>
      </summary>
      <param name="menu">Контекстное меню, которое будет показано пользователю.</param>
      <param name="property">Свойство, для которого отображается контекстное меню.</param>
    </member>
    <member name="M:UnityEditor.EditorApplication.SetTemporaryProjectKeepPath(System.String)">
      <summary>
        <para>Задает путь, по которому Unity должен хранить текущий временный проект при закрытии проекта.</para>
      </summary>
      <param name="path">Путь, по которому должен быть перемещен текущий временный проект при его закрытии.</param>
    </member>
    <member name="M:UnityEditor.EditorApplication.Step">
      <summary>
        <para>Выполните шаг с одним кадром.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorApplication.UnlockReloadAssemblies">
      <summary>
        <para>Должен вызываться после LockReloadAssemblies, чтобы снова включить загрузку сборок.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.EditorBuildSettings">
      <summary>
        <para>Этот класс позволяет модифицировать редактор для примера использования этого класса.  См. также: EditorBuildSettingsScene, EditorBuildSettings.scenes.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.EditorBuildSettings.sceneListChanged(System.Action)">
      <summary>
        <para>Делегат, вызываемый всякий раз, когда задан параметр EditorBuildSettings.scenes.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="P:UnityEditor.EditorBuildSettings.scenes">
      <summary>
        <para>Список сцен, которые должны быть включены в сборку. Это тот же список сцен, который отображается в окне. Вы можете изменить этот список, чтобы настроить, какие сцены должны быть включены в сборку.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorBuildSettings.AddConfigObject(System.String,UnityEngine.Object,System.Boolean)">
      <summary>
        <para>Сохраните ссылку на объект конфигурации по имени.  Объект должен быть ресурсом в проекте, иначе он не будет сохранен при перезапуске редактора или перезагрузке скриптов.  Чтобы избежать конфликтов имен с другими пакетами, рекомендуется, чтобы имена квалифицировались пространством имен, т. е. «company.package.name».</para>
      </summary>
      <param name="name">Имя ссылки на объект в строковом формате. Это имя строки должно быть уникальным в рамках проекта или параметру overwrite должно быть присвоено значение true.</param>
      <param name="obj">Ссылка на объект, подлежащая хранению.  Этот объект должен быть сохранен, а не равен нулю.</param>
      <param name="overwrite">Логический параметр, используемый для указания того, что требуется перезаписать запись с тем же именем, если она уже существует.</param>
      <returns>
        <para>Создает исключение, если объект имеет значение null, не сохраняется или если существует конфликт имен и параметру overwrite присвоено значение false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorBuildSettings.GetConfigObjectNames">
      <summary>
        <para>Возвращает массив строк, содержащий имена всех сохраненных ссылок на объекты конфигурации.</para>
      </summary>
      <returns>
        <para>Возвращает массив строк, содержащий имена всех сохраненных ссылок.  Если ссылок нет, будет возвращен пустой массив.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorBuildSettings.RemoveConfigObject(System.String)">
      <summary>
        <para>Удалите ссылку на объект конфигурации по имени.</para>
      </summary>
      <param name="name">Имя в строковом формате удаляемой ссылки на объект config. Это имя, присвоенное объекту при первом создании ссылки. Примечание: Это может отличаться от имени объекта, так как объект может быть добавлен несколько раз с разными именами.</param>
      <returns>
        <para>Возвращает значение true, если ссылка была найдена и удалена, в противном случае — значение false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorBuildSettings.TryGetConfigObject(System.String,T&amp;)">
      <summary>
        <para>Получение ссылки на объект конфигурации по имени.</para>
      </summary>
      <param name="name">Имя в строковом формате ссылки на объект config, которую необходимо получить.</param>
      <param name="result">Ссылка на объект config, в которой будет храниться возвращенный объект. Это должен быть объект типа Object.</param>
      <returns>
        <para>Возвращает значение true, если была найдена ссылка на объект конфигурации и тип соответствует параметру result.  Возвращает значение false, если запись не найдена, ссылка на объект config имеет значение null или если запрашиваемый тип не соответствует сохраненному типу.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.EditorBuildSettingsScene">
      <summary>
        <para>Представляет записи в списке Сцены, отображаемые в окне. Этот класс содержит путь к сцене сцены и флаг включения, который указывает, включен ли Scene в окне Параметры сборки или нет.  Этот класс можно использовать в сочетании с EditorBuildSettings.scenes для заполнения списка сцен, включенных в сборку с помощью скрипта. Это полезно при создании пользовательских сценариев редактора для автоматизации конвейера сборки.  Пример сценария см. в разделе EditorBuildSettings.scenes.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorBuildSettingsScene.enabled">
      <summary>
        <para>Включена ли эта Scene в примере использования этого класса.  См. также: EditorBuildSettingsScene, EditorBuildSettings.scenes.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorBuildSettingsScene.path">
      <summary>
        <para>Путь к файлу Scene, указанный в редакторе для примера использования этого класса.  См. также: EditorBuildSettingsScene, EditorBuildSettings.scenes.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.EditorCurveBinding">
      <summary>
        <para>Определяет способ прикрепления кривой к объекту, которым она управляет.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorCurveBinding.path">
      <summary>
        <para>Контур преобразования анимируемого объекта.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorCurveBinding.propertyName">
      <summary>
        <para>Имя анимируемого свойства.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorCurveBinding.type">
      <summary>
        <para>Тип анимируемого свойства.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorCurveBinding.DiscreteCurve(System.String,System.Type,System.String)">
      <summary>
        <para>Создает предварительно настроенную привязку для кривой, где значения не должны быть интерполированы.</para>
      </summary>
      <param name="inPath">Путь преобразования к анимируемому объекту.</param>
      <param name="inType">Тип анимируемого объекта.</param>
      <param name="inPropertyName">Имя свойства, которое будет анимироваться на объекте.</param>
    </member>
    <member name="M:UnityEditor.EditorCurveBinding.FloatCurve(System.String,System.Type,System.String)">
      <summary>
        <para>Создает предварительно настроенную привязку для плавающей кривой.</para>
      </summary>
      <param name="inPath">Путь преобразования к анимируемому объекту.</param>
      <param name="inType">Тип анимируемого объекта.</param>
      <param name="inPropertyName">Имя свойства, которое будет анимироваться на объекте.</param>
    </member>
    <member name="M:UnityEditor.EditorCurveBinding.PPtrCurve(System.String,System.Type,System.String)">
      <summary>
        <para>Создает предварительно настроенную привязку для кривой, указывающей на объект Object.</para>
      </summary>
      <param name="inPath">Путь преобразования к анимируемому объекту.</param>
      <param name="inType">Тип анимируемого объекта.</param>
      <param name="inPropertyName">Имя свойства, которое будет анимироваться на объекте.</param>
    </member>
    <member name="T:UnityEditor.EditorGUI">
      <summary>
        <para>Они работают почти так же, как обычные функции графического интерфейса, а также имеют соответствующие реализации в EditorGUILayout.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUI.actionKey">
      <summary>
        <para>Удерживается ли зависящая от платформы клавиша модификатора 'action'? (Только для чтения)</para>
      </summary>
    </member>
    <member name="?:UnityEditor.EditorGUI.hyperLinkClicked(System.Action`2&lt;UnityEditor.EditorWindow,UnityEditor.HyperLinkClickedEventArgs&gt;)">
      <summary>
        <para>Событие, используемое для реагирования на клики по части текстовой гиперссылки.</para>
      </summary>
      <param name="value">Первый параметр типа EditorWindow соответствует окну, содержащему нажатый текст. Второй параметр типа HyperLinkClickedEventArgs содержит данные гиперссылки.</param>
    </member>
    <member name="P:UnityEditor.EditorGUI.indentLevel">
      <summary>
        <para>Уровень отступа меток поля.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUI.showMixedValue">
      <summary>
        <para>Делает так, чтобы следующие элементы управления выглядели как редактирование нескольких различных значений.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUI.BeginChangeCheck">
      <summary>
        <para>Запускает новый блок кода для проверки изменений графического интерфейса.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUI.BeginDisabledGroup(System.Boolean)">
      <summary>
        <para>Создайте группу элементов управления, которые можно отключить.</para>
      </summary>
      <param name="disabled">Логическое значение, указывающее, следует ли отключать элементы управления внутри группы.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.BeginFoldoutHeaderGroup(UnityEngine.Rect,System.Boolean,System.String,UnityEngine.GUIStyle,System.Action`1&lt;UnityEngine.Rect&gt;,UnityEngine.GUIStyle)">
      <summary>
        <para>Сделайте этикетку с откидной стрелкой слева от нее.</para>
      </summary>
      <param name="foldout">Показанное состояние складывания.</param>
      <param name="content">Отображаемая метка.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="menuAction">Действие, выполняемое при щелчке значка.</param>
      <param name="menuIcon">Дополнительный GUIStyle для значка.</param>
      <param name="position">Прямоугольник на экране для использования в элементе управления.</param>
      <returns>
        <para>Состояние складывания, выбранное пользователем. Если значение равно true, следует отобразить подобъекты.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.BeginFoldoutHeaderGroup(UnityEngine.Rect,System.Boolean,UnityEngine.GUIContent,UnityEngine.GUIStyle,System.Action`1&lt;UnityEngine.Rect&gt;,UnityEngine.GUIStyle)">
      <summary>
        <para>Сделайте этикетку с откидной стрелкой слева от нее.</para>
      </summary>
      <param name="foldout">Показанное состояние складывания.</param>
      <param name="content">Отображаемая метка.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="menuAction">Действие, выполняемое при щелчке значка.</param>
      <param name="menuIcon">Дополнительный GUIStyle для значка.</param>
      <param name="position">Прямоугольник на экране для использования в элементе управления.</param>
      <returns>
        <para>Состояние складывания, выбранное пользователем. Если значение равно true, следует отобразить подобъекты.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.BeginProperty(UnityEngine.Rect,UnityEngine.GUIContent,UnityEditor.SerializedProperty)">
      <summary>
        <para>Создайте оболочку Свойств, полезную для обеспечения работы обычных элементов управления графического интерфейса пользователя с SerializedProperty.</para>
      </summary>
      <param name="totalPosition">Прямоугольник на экране, используемый для элемента управления, включая метку, если это применимо.</param>
      <param name="label">Дополнительная метка перед ползунком. Используйте значение null, чтобы использовать имя из SerializedProperty. Используйте GUIContent.none, чтобы не отображать метку.</param>
      <param name="property">Объект SerializedProperty, используемый для элемента управления.</param>
      <returns>
        <para>Фактическая метка, используемая для элемента управления.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.BoundsField(UnityEngine.Rect,UnityEngine.Bounds)">
      <summary>
        <para>Создает поле «Центр» и «Экстенты» для ввода границ.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка для отображения над полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.BoundsField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Bounds)">
      <summary>
        <para>Создает поле «Центр» и «Экстенты» для ввода границ.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка для отображения над полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.BoundsIntField(UnityEngine.Rect,UnityEngine.BoundsInt)">
      <summary>
        <para>Создает поле Положение и Размер для ввода BoundsInt.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка для отображения над полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.BoundsIntField(UnityEngine.Rect,System.String,UnityEngine.BoundsInt)">
      <summary>
        <para>Создает поле Положение и Размер для ввода BoundsInt.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка для отображения над полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.BoundsIntField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.BoundsInt)">
      <summary>
        <para>Создает поле Положение и Размер для ввода BoundsInt.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка для отображения над полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.CanCacheInspectorGUI(UnityEditor.SerializedProperty)">
      <summary>
        <para>Узнайте, можно ли кэшировать графический интерфейс инспектора SerializedProperty.</para>
      </summary>
      <param name="property">Сериализованная собственность, о которой идет речь.</param>
      <returns>
        <para>Можно ли кэшировать графический интерфейс инспектора свойства.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.EditorGUI.ChangeCheckScope">
      <summary>
        <para>Проверьте, был ли изменен какой-либо элемент управления внутри блока кода.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUI.ChangeCheckScope.changed">
      <summary>
        <para>Значение true, если для параметра GUI.changed задано значение true, в противном случае — значение false.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUI.ChangeCheckScope.#ctor">
      <summary>
        <para>Начинает объект ChangeCheckScope.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUI.ColorField(UnityEngine.Rect,UnityEngine.Color)">
      <summary>
        <para>Создает поле для выбора цвета.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Цвет для редактирования.</param>
      <param name="showEyedropper">Если значение равно true, палитра цветов должна отобразить элемент управления пипеткой. Если значение равно false, не показывайте его.</param>
      <param name="showAlpha">Если значение равно true, разрешите пользователю задать значение альфа-канала для цвета. Если значение равно false, скройте альфа-компонент.</param>
      <param name="hdr">Если значение равно true, обработайте цвет как значение HDR. Если значение равно false, рассматривайте его как стандартное значение LDR.</param>
      <param name="hdrConfig">
      </param>
      <returns>
        <para>Цвет, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.ColorField(UnityEngine.Rect,System.String,UnityEngine.Color)">
      <summary>
        <para>Создает поле для выбора цвета.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Цвет для редактирования.</param>
      <param name="showEyedropper">Если значение равно true, палитра цветов должна отобразить элемент управления пипеткой. Если значение равно false, не показывайте его.</param>
      <param name="showAlpha">Если значение равно true, разрешите пользователю задать значение альфа-канала для цвета. Если значение равно false, скройте альфа-компонент.</param>
      <param name="hdr">Если значение равно true, обработайте цвет как значение HDR. Если значение равно false, рассматривайте его как стандартное значение LDR.</param>
      <param name="hdrConfig">
      </param>
      <returns>
        <para>Цвет, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.ColorField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Color)">
      <summary>
        <para>Создает поле для выбора цвета.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Цвет для редактирования.</param>
      <param name="showEyedropper">Если значение равно true, палитра цветов должна отобразить элемент управления пипеткой. Если значение равно false, не показывайте его.</param>
      <param name="showAlpha">Если значение равно true, разрешите пользователю задать значение альфа-канала для цвета. Если значение равно false, скройте альфа-компонент.</param>
      <param name="hdr">Если значение равно true, обработайте цвет как значение HDR. Если значение равно false, рассматривайте его как стандартное значение LDR.</param>
      <param name="hdrConfig">
      </param>
      <returns>
        <para>Цвет, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.ColorField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Color,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
        <para>Создает поле для выбора цвета.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Цвет для редактирования.</param>
      <param name="showEyedropper">Если значение равно true, палитра цветов должна отобразить элемент управления пипеткой. Если значение равно false, не показывайте его.</param>
      <param name="showAlpha">Если значение равно true, разрешите пользователю задать значение альфа-канала для цвета. Если значение равно false, скройте альфа-компонент.</param>
      <param name="hdr">Если значение равно true, обработайте цвет как значение HDR. Если значение равно false, рассматривайте его как стандартное значение LDR.</param>
      <param name="hdrConfig">
      </param>
      <returns>
        <para>Цвет, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.ColorField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Color,System.Boolean,System.Boolean,System.Boolean,UnityEditor.ColorPickerHDRConfig)">
      <summary>
        <para>Создает поле для выбора цвета.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Цвет для редактирования.</param>
      <param name="showEyedropper">Если значение равно true, палитра цветов должна отобразить элемент управления пипеткой. Если значение равно false, не показывайте его.</param>
      <param name="showAlpha">Если значение равно true, разрешите пользователю задать значение альфа-канала для цвета. Если значение равно false, скройте альфа-компонент.</param>
      <param name="hdr">Если значение равно true, обработайте цвет как значение HDR. Если значение равно false, рассматривайте его как стандартное значение LDR.</param>
      <param name="hdrConfig">
      </param>
      <returns>
        <para>Цвет, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.CurveField(UnityEngine.Rect,UnityEngine.AnimationCurve)">
      <summary>
        <para>Создает поле для редактирования AnimationCurve.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Кривая для редактирования.</param>
      <param name="color">Цвет, с помощью которого отображается кривая.</param>
      <param name="ranges">Необязательный прямоугольник, внутри которого ограничена кривая.</param>
      <returns>
        <para>Кривая, отредактированная пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.CurveField(UnityEngine.Rect,System.String,UnityEngine.AnimationCurve)">
      <summary>
        <para>Создает поле для редактирования AnimationCurve.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Кривая для редактирования.</param>
      <param name="color">Цвет, с помощью которого отображается кривая.</param>
      <param name="ranges">Необязательный прямоугольник, внутри которого ограничена кривая.</param>
      <returns>
        <para>Кривая, отредактированная пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.CurveField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.AnimationCurve)">
      <summary>
        <para>Создает поле для редактирования AnimationCurve.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Кривая для редактирования.</param>
      <param name="color">Цвет, с помощью которого отображается кривая.</param>
      <param name="ranges">Необязательный прямоугольник, внутри которого ограничена кривая.</param>
      <returns>
        <para>Кривая, отредактированная пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.CurveField(UnityEngine.Rect,UnityEngine.AnimationCurve,UnityEngine.Color,UnityEngine.Rect)">
      <summary>
        <para>Создает поле для редактирования AnimationCurve.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Кривая для редактирования.</param>
      <param name="color">Цвет, с помощью которого отображается кривая.</param>
      <param name="ranges">Необязательный прямоугольник, внутри которого ограничена кривая.</param>
      <returns>
        <para>Кривая, отредактированная пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.CurveField(UnityEngine.Rect,System.String,UnityEngine.AnimationCurve,UnityEngine.Color,UnityEngine.Rect)">
      <summary>
        <para>Создает поле для редактирования AnimationCurve.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Кривая для редактирования.</param>
      <param name="color">Цвет, с помощью которого отображается кривая.</param>
      <param name="ranges">Необязательный прямоугольник, внутри которого ограничена кривая.</param>
      <returns>
        <para>Кривая, отредактированная пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.CurveField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.AnimationCurve,UnityEngine.Color,UnityEngine.Rect)">
      <summary>
        <para>Создает поле для редактирования AnimationCurve.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Кривая для редактирования.</param>
      <param name="color">Цвет, с помощью которого отображается кривая.</param>
      <param name="ranges">Необязательный прямоугольник, внутри которого ограничена кривая.</param>
      <returns>
        <para>Кривая, отредактированная пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.CurveField(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.Color,UnityEngine.Rect)">
      <summary>
        <para>Создает поле для редактирования AnimationCurve.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="property">Кривая для редактирования.</param>
      <param name="color">Цвет, с помощью которого отображается кривая.</param>
      <param name="ranges">Необязательный прямоугольник, внутри которого ограничена кривая.</param>
      <param name="label">Необязательная метка для отображения перед полем. Передайте [[GUIContent.none], чтобы скрыть метку.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.CurveField(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.Color,UnityEngine.Rect,UnityEngine.GUIContent)">
      <summary>
        <para>Создает поле для редактирования AnimationCurve.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="property">Кривая для редактирования.</param>
      <param name="color">Цвет, с помощью которого отображается кривая.</param>
      <param name="ranges">Необязательный прямоугольник, внутри которого ограничена кривая.</param>
      <param name="label">Необязательная метка для отображения перед полем. Передайте [[GUIContent.none], чтобы скрыть метку.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DelayedDoubleField(UnityEngine.Rect,System.Double,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает отложенное текстовое поле для ввода двойников.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в двойном поле.</param>
      <param name="label">Необязательная метка для отображения перед двойным полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет клавишу ВВОД или фокус не будет смещен от двойного поля.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DelayedDoubleField(UnityEngine.Rect,System.String,System.Double,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает отложенное текстовое поле для ввода двойников.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в двойном поле.</param>
      <param name="label">Необязательная метка для отображения перед двойным полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет клавишу ВВОД или фокус не будет смещен от двойного поля.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DelayedDoubleField(UnityEngine.Rect,UnityEngine.GUIContent,System.Double,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает отложенное текстовое поле для ввода двойников.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в двойном поле.</param>
      <param name="label">Необязательная метка для отображения перед двойным полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет клавишу ВВОД или фокус не будет смещен от двойного поля.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DelayedDoubleField">
      <summary>
        <para>Создает отложенное текстовое поле для ввода двойников.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в двойном поле.</param>
      <param name="property">Свойство double для редактирования.</param>
      <param name="label">Необязательная метка для отображения перед двойным полем. Передайте GUIContent.none, чтобы скрыть метку.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DelayedFloatField(UnityEngine.Rect,System.Single,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает отложенное текстовое поле для ввода чисел с плавающей точкой.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в плавающем поле.</param>
      <param name="label">Необязательная метка для отображения перед плавающим полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет клавишу ВВОД или фокус не будет смещен от поля float.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DelayedFloatField(UnityEngine.Rect,System.String,System.Single,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает отложенное текстовое поле для ввода чисел с плавающей точкой.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в плавающем поле.</param>
      <param name="label">Необязательная метка для отображения перед плавающим полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет клавишу ВВОД или фокус не будет смещен от поля float.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DelayedFloatField(UnityEngine.Rect,UnityEngine.GUIContent,System.Single,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает отложенное текстовое поле для ввода чисел с плавающей точкой.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в плавающем поле.</param>
      <param name="label">Необязательная метка для отображения перед плавающим полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет клавишу ВВОД или фокус не будет смещен от поля float.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DelayedFloatField(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent)">
      <summary>
        <para>Создает отложенное текстовое поле для ввода чисел с плавающей точкой.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в плавающем поле.</param>
      <param name="property">Свойство float для редактирования.</param>
      <param name="label">Необязательная метка для отображения перед плавающим полем. Передайте GUIContent.none, чтобы скрыть метку.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DelayedIntField(UnityEngine.Rect,System.Int32,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает отложенное текстовое поле для ввода целых чисел.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле int.</param>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет клавишу ВВОД или фокус не будет перемещен из поля int.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DelayedIntField(UnityEngine.Rect,System.String,System.Int32,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает отложенное текстовое поле для ввода целых чисел.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле int.</param>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет клавишу ВВОД или фокус не будет перемещен из поля int.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DelayedIntField(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает отложенное текстовое поле для ввода целых чисел.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле int.</param>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет клавишу ВВОД или фокус не будет перемещен из поля int.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DelayedIntField(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent)">
      <summary>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет клавишу ВВОД или фокус не будет перемещен из поля int.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле int.</param>
      <param name="property">Редактируемое свойство int.</param>
      <param name="label">Необязательная метка для отображения перед полем int. Передайте GUIContent.none, чтобы скрыть метку.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DelayedTextField(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает отложенное текстовое поле.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в текстовом поле.</param>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="text">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет клавишу ВВОД или фокус не будет смещен из текстового поля.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DelayedTextField(UnityEngine.Rect,System.String,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает отложенное текстовое поле.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в текстовом поле.</param>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="text">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет клавишу ВВОД или фокус не будет смещен из текстового поля.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DelayedTextField(UnityEngine.Rect,UnityEngine.GUIContent,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает отложенное текстовое поле.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в текстовом поле.</param>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="text">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет клавишу ВВОД или фокус не будет смещен из текстового поля.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DelayedTextField(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent)">
      <summary>
        <para>Создает отложенное текстовое поле.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в текстовом поле.</param>
      <param name="property">Свойство text, которое требуется изменить.</param>
      <param name="label">Необязательная метка для отображения перед полем int. Передайте GUIContent.none, чтобы скрыть метку.</param>
    </member>
    <member name="T:UnityEditor.EditorGUI.DisabledGroupScope">
      <summary>
        <para>Создайте группу элементов управления, которые можно отключить.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUI.DisabledGroupScope.#ctor(System.Boolean)">
      <summary>
        <para>Создайте новый объект DisabledGroupScope и создайте соответствующую группу.</para>
      </summary>
      <param name="disabled">Логическое значение, указывающее, следует ли отключать элементы управления внутри группы.</param>
    </member>
    <member name="T:UnityEditor.EditorGUI.DisabledScope">
      <summary>
        <para>Создайте группу элементов управления, которые можно отключить.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUI.DisabledScope.#ctor(System.Boolean)">
      <summary>
        <para>Создайте новый DisabledScope и создайте соответствующую группу.</para>
      </summary>
      <param name="disabled">Логическое значение, указывающее, следует ли отключать элементы управления внутри группы.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DoubleField(UnityEngine.Rect,System.Double,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает текстовое поле для ввода двойников.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в двойном поле.</param>
      <param name="label">Необязательная метка для отображения перед двойным полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DoubleField(UnityEngine.Rect,System.String,System.Double,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает текстовое поле для ввода двойников.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в двойном поле.</param>
      <param name="label">Необязательная метка для отображения перед двойным полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DoubleField(UnityEngine.Rect,UnityEngine.GUIContent,System.Double,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает текстовое поле для ввода двойников.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в двойном поле.</param>
      <param name="label">Необязательная метка для отображения перед двойным полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DrawPreviewTexture(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.Material,UnityEngine.ScaleMode,System.Single,System.Single,UnityEngine.Rendering.ColorWriteMask,System.Single)">
      <summary>
        <para>Рисует текстуру внутри прямоугольника.</para>
      </summary>
      <param name="position">Прямоугольник на экране, чтобы нарисовать текстуру внутри.</param>
      <param name="image">Текстура для отображения.</param>
      <param name="mat">Материал, который будет использоваться при рисовании текстуры.</param>
      <param name="scaleMode">Как масштабировать изображение, если его пропорции не соответствуют пропорциям, которые должны быть нарисованы внутри.</param>
      <param name="imageAspect">Соотношение сторон для исходного изображения. Если 0 (значение по умолчанию), используется соотношение сторон изображения.</param>
      <param name="mipLevel">Уровень MIP для выборки. Если текстура отрицательная, она проходит в обычном режиме. Задает _Mip свойство материала.</param>
      <param name="colorWriteMask">Указывает, какие цветовые компоненты изображения будут записаны. Задает свойство _ColorMask материала.</param>
      <param name="exposure">Задает экспозицию для текстуры. Задает свойство _Exposure материала.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DrawPreviewTexture(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.Material,UnityEngine.ScaleMode,System.Single,System.Single,UnityEngine.Rendering.ColorWriteMask)">
      <summary>
        <para>Рисует текстуру внутри прямоугольника.</para>
      </summary>
      <param name="position">Прямоугольник на экране, чтобы нарисовать текстуру внутри.</param>
      <param name="image">Текстура для отображения.</param>
      <param name="mat">Материал, который будет использоваться при рисовании текстуры.</param>
      <param name="scaleMode">Как масштабировать изображение, если его пропорции не соответствуют пропорциям, которые должны быть нарисованы внутри.</param>
      <param name="imageAspect">Соотношение сторон для исходного изображения. Если 0 (значение по умолчанию), используется соотношение сторон изображения.</param>
      <param name="mipLevel">Уровень MIP для выборки. Если текстура отрицательная, она проходит в обычном режиме. Задает _Mip свойство материала.</param>
      <param name="colorWriteMask">Указывает, какие цветовые компоненты изображения будут записаны. Задает свойство _ColorMask материала.</param>
      <param name="exposure">Задает экспозицию для текстуры. Задает свойство _Exposure материала.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DrawPreviewTexture(UnityEngine.Rect,UnityEngine.Texture)">
      <summary>
        <para>Рисует текстуру внутри прямоугольника.</para>
      </summary>
      <param name="position">Прямоугольник на экране, чтобы нарисовать текстуру внутри.</param>
      <param name="image">Текстура для отображения.</param>
      <param name="mat">Материал, который будет использоваться при рисовании текстуры.</param>
      <param name="scaleMode">Как масштабировать изображение, если его пропорции не соответствуют пропорциям, которые должны быть нарисованы внутри.</param>
      <param name="imageAspect">Соотношение сторон для исходного изображения. Если 0 (значение по умолчанию), используется соотношение сторон изображения.</param>
      <param name="mipLevel">Уровень MIP для выборки. Если текстура отрицательная, она проходит в обычном режиме. Задает _Mip свойство материала.</param>
      <param name="colorWriteMask">Указывает, какие цветовые компоненты изображения будут записаны. Задает свойство _ColorMask материала.</param>
      <param name="exposure">Задает экспозицию для текстуры. Задает свойство _Exposure материала.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DrawPreviewTexture(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.Material)">
      <summary>
        <para>Рисует текстуру внутри прямоугольника.</para>
      </summary>
      <param name="position">Прямоугольник на экране, чтобы нарисовать текстуру внутри.</param>
      <param name="image">Текстура для отображения.</param>
      <param name="mat">Материал, который будет использоваться при рисовании текстуры.</param>
      <param name="scaleMode">Как масштабировать изображение, если его пропорции не соответствуют пропорциям, которые должны быть нарисованы внутри.</param>
      <param name="imageAspect">Соотношение сторон для исходного изображения. Если 0 (значение по умолчанию), используется соотношение сторон изображения.</param>
      <param name="mipLevel">Уровень MIP для выборки. Если текстура отрицательная, она проходит в обычном режиме. Задает _Mip свойство материала.</param>
      <param name="colorWriteMask">Указывает, какие цветовые компоненты изображения будут записаны. Задает свойство _ColorMask материала.</param>
      <param name="exposure">Задает экспозицию для текстуры. Задает свойство _Exposure материала.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DrawPreviewTexture(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.Material,UnityEngine.ScaleMode)">
      <summary>
        <para>Рисует текстуру внутри прямоугольника.</para>
      </summary>
      <param name="position">Прямоугольник на экране, чтобы нарисовать текстуру внутри.</param>
      <param name="image">Текстура для отображения.</param>
      <param name="mat">Материал, который будет использоваться при рисовании текстуры.</param>
      <param name="scaleMode">Как масштабировать изображение, если его пропорции не соответствуют пропорциям, которые должны быть нарисованы внутри.</param>
      <param name="imageAspect">Соотношение сторон для исходного изображения. Если 0 (значение по умолчанию), используется соотношение сторон изображения.</param>
      <param name="mipLevel">Уровень MIP для выборки. Если текстура отрицательная, она проходит в обычном режиме. Задает _Mip свойство материала.</param>
      <param name="colorWriteMask">Указывает, какие цветовые компоненты изображения будут записаны. Задает свойство _ColorMask материала.</param>
      <param name="exposure">Задает экспозицию для текстуры. Задает свойство _Exposure материала.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DrawPreviewTexture(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.Material,UnityEngine.ScaleMode,System.Single)">
      <summary>
        <para>Рисует текстуру внутри прямоугольника.</para>
      </summary>
      <param name="position">Прямоугольник на экране, чтобы нарисовать текстуру внутри.</param>
      <param name="image">Текстура для отображения.</param>
      <param name="mat">Материал, который будет использоваться при рисовании текстуры.</param>
      <param name="scaleMode">Как масштабировать изображение, если его пропорции не соответствуют пропорциям, которые должны быть нарисованы внутри.</param>
      <param name="imageAspect">Соотношение сторон для исходного изображения. Если 0 (значение по умолчанию), используется соотношение сторон изображения.</param>
      <param name="mipLevel">Уровень MIP для выборки. Если текстура отрицательная, она проходит в обычном режиме. Задает _Mip свойство материала.</param>
      <param name="colorWriteMask">Указывает, какие цветовые компоненты изображения будут записаны. Задает свойство _ColorMask материала.</param>
      <param name="exposure">Задает экспозицию для текстуры. Задает свойство _Exposure материала.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DrawPreviewTexture(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.Material,UnityEngine.ScaleMode,System.Single,System.Single)">
      <summary>
        <para>Рисует текстуру внутри прямоугольника.</para>
      </summary>
      <param name="position">Прямоугольник на экране, чтобы нарисовать текстуру внутри.</param>
      <param name="image">Текстура для отображения.</param>
      <param name="mat">Материал, который будет использоваться при рисовании текстуры.</param>
      <param name="scaleMode">Как масштабировать изображение, если его пропорции не соответствуют пропорциям, которые должны быть нарисованы внутри.</param>
      <param name="imageAspect">Соотношение сторон для исходного изображения. Если 0 (значение по умолчанию), используется соотношение сторон изображения.</param>
      <param name="mipLevel">Уровень MIP для выборки. Если текстура отрицательная, она проходит в обычном режиме. Задает _Mip свойство материала.</param>
      <param name="colorWriteMask">Указывает, какие цветовые компоненты изображения будут записаны. Задает свойство _ColorMask материала.</param>
      <param name="exposure">Задает экспозицию для текстуры. Задает свойство _Exposure материала.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DrawRect(UnityEngine.Rect,UnityEngine.Color)">
      <summary>
        <para>Рисует заполненный прямоугольник цвета в указанном положении и размере в текущем окне редактора.</para>
      </summary>
      <param name="rect">Положение и размер рисуемого прямоугольника.</param>
      <param name="color">Цвет прямоугольника.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DrawTextureAlpha(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.ScaleMode,System.Single,System.Single)">
      <summary>
        <para>Рисует альфа-канал текстуры внутри прямоугольника.</para>
      </summary>
      <param name="position">Прямоугольник на экране, чтобы нарисовать текстуру внутри.</param>
      <param name="image">Текстура для отображения.</param>
      <param name="scaleMode">Как масштабировать изображение, если его пропорции не соответствуют пропорциям, которые должны быть нарисованы внутри.</param>
      <param name="imageAspect">Соотношение сторон для исходного изображения. Если 0 (значение по умолчанию), используется соотношение сторон изображения.</param>
      <param name="mipLevel">Какой уровень MIP для выборки. Если текстура отрицательная, она будет отобрана в обычном режиме. Он задает свойство _Mip материала.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DrawTextureAlpha(UnityEngine.Rect,UnityEngine.Texture)">
      <summary>
        <para>Рисует альфа-канал текстуры внутри прямоугольника.</para>
      </summary>
      <param name="position">Прямоугольник на экране, чтобы нарисовать текстуру внутри.</param>
      <param name="image">Текстура для отображения.</param>
      <param name="scaleMode">Как масштабировать изображение, если его пропорции не соответствуют пропорциям, которые должны быть нарисованы внутри.</param>
      <param name="imageAspect">Соотношение сторон для исходного изображения. Если 0 (значение по умолчанию), используется соотношение сторон изображения.</param>
      <param name="mipLevel">Какой уровень MIP для выборки. Если текстура отрицательная, она будет отобрана в обычном режиме. Он задает свойство _Mip материала.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DrawTextureAlpha(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.ScaleMode)">
      <summary>
        <para>Рисует альфа-канал текстуры внутри прямоугольника.</para>
      </summary>
      <param name="position">Прямоугольник на экране, чтобы нарисовать текстуру внутри.</param>
      <param name="image">Текстура для отображения.</param>
      <param name="scaleMode">Как масштабировать изображение, если его пропорции не соответствуют пропорциям, которые должны быть нарисованы внутри.</param>
      <param name="imageAspect">Соотношение сторон для исходного изображения. Если 0 (значение по умолчанию), используется соотношение сторон изображения.</param>
      <param name="mipLevel">Какой уровень MIP для выборки. Если текстура отрицательная, она будет отобрана в обычном режиме. Он задает свойство _Mip материала.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DrawTextureAlpha(UnityEngine.Rect,UnityEngine.Texture,UnityEngine.ScaleMode,System.Single)">
      <summary>
        <para>Рисует альфа-канал текстуры внутри прямоугольника.</para>
      </summary>
      <param name="position">Прямоугольник на экране, чтобы нарисовать текстуру внутри.</param>
      <param name="image">Текстура для отображения.</param>
      <param name="scaleMode">Как масштабировать изображение, если его пропорции не соответствуют пропорциям, которые должны быть нарисованы внутри.</param>
      <param name="imageAspect">Соотношение сторон для исходного изображения. Если 0 (значение по умолчанию), используется соотношение сторон изображения.</param>
      <param name="mipLevel">Какой уровень MIP для выборки. Если текстура отрицательная, она будет отобрана в обычном режиме. Он задает свойство _Mip материала.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DropdownButton(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.FocusType)">
      <summary>
        <para>Создает кнопку, которая реагирует на нажатие мыши, для отображения вашего собственного раскрывающегося содержимого.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования для кнопки.</param>
      <param name="content">Текст, изображение и всплывающая подсказка для этой кнопки.</param>
      <param name="focusType">Должна ли кнопка выбираться с помощью клавиатуры или нет.</param>
      <param name="style">Необязательный стиль для использования.</param>
      <returns>
        <para>Значение true, когда пользователь нажимает кнопку.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DropdownButton(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.FocusType,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает кнопку, которая реагирует на нажатие мыши, для отображения вашего собственного раскрывающегося содержимого.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования для кнопки.</param>
      <param name="content">Текст, изображение и всплывающая подсказка для этой кнопки.</param>
      <param name="focusType">Должна ли кнопка выбираться с помощью клавиатуры или нет.</param>
      <param name="style">Необязательный стиль для использования.</param>
      <returns>
        <para>Значение true, когда пользователь нажимает кнопку.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.DropShadowLabel(UnityEngine.Rect,System.String)">
      <summary>
        <para>Рисует метку с тенью.</para>
      </summary>
      <param name="position">Где показать этикетку.</param>
      <param name="content">Текст для отображения @style используемого стиля.</param>
      <param name="text">
      </param>
      <param name="style">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DropShadowLabel(UnityEngine.Rect,UnityEngine.GUIContent)">
      <summary>
        <para>Рисует метку с тенью.</para>
      </summary>
      <param name="position">Где показать этикетку.</param>
      <param name="content">Текст для отображения @style используемого стиля.</param>
      <param name="text">
      </param>
      <param name="style">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DropShadowLabel(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Рисует метку с тенью.</para>
      </summary>
      <param name="position">Где показать этикетку.</param>
      <param name="content">Текст для отображения @style используемого стиля.</param>
      <param name="text">
      </param>
      <param name="style">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUI.DropShadowLabel(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Рисует метку с тенью.</para>
      </summary>
      <param name="position">Где показать этикетку.</param>
      <param name="content">Текст для отображения @style используемого стиля.</param>
      <param name="text">
      </param>
      <param name="style">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUI.EndChangeCheck">
      <summary>
        <para>Завершает блок кода и проверяет наличие изменений графического интерфейса.</para>
      </summary>
      <returns>
        <para>Возвращает значение true, если состояние графического интерфейса пользователя изменилось с момента вызова EditorGUI.BeginChangeCheck, в противном случае — значение false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EndDisabledGroup">
      <summary>
        <para>Завершает группу с ограниченными возможностями, созданную с помощью BeginDisabledGroup.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUI.EndFoldoutHeaderGroup">
      <summary>
        <para>Закрывает группу, созданную с помощью BeginFoldoutHeaderGroup. См. также: EditorGUILayout.beginFoldoutHeaderGroup.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUI.EndProperty">
      <summary>
        <para>Завершает оболочку свойств, начатую с помощью BeginProperty.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumFlagsField(UnityEngine.Rect,System.Enum)">
      <summary>
        <para>Отображает меню с параметром для каждого значения типа перечисления при щелчке. Опция для значения 0 с именем 'Nothing' и опция для значения ~0 (то есть все биты установлены) с именем 'Everything' всегда отображаются в верхней части меню. Имена значений 0 и ~0 можно переопределить, определив эти значения в типе перечисления.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле флагов перечисления.</param>
      <param name="label">Необязательная метка для отображения перед полем флагов перечисления.</param>
      <param name="enumValue">Значение помечает перечисление (поддерживает значения перечисления только для типов перечислений с int в качестве базового типа).</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="includeObsolete">Задайте значение true, чтобы включить значения перечисления в атрибут ObsoleteAttribute. Задайте значение false, чтобы исключить значения перечисления с помощью ObsoleteAttribute.</param>
      <returns>
        <para>Значение флага перечисления, измененное пользователем. Это выбор BitMask, где каждый бит представляет индекс значения Enum. (Обратите внимание, что это возвращаемое значение само по себе не является перечислением).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumFlagsField(UnityEngine.Rect,System.Enum,UnityEngine.GUIStyle)">
      <summary>
        <para>Отображает меню с параметром для каждого значения типа перечисления при щелчке. Опция для значения 0 с именем 'Nothing' и опция для значения ~0 (то есть все биты установлены) с именем 'Everything' всегда отображаются в верхней части меню. Имена значений 0 и ~0 можно переопределить, определив эти значения в типе перечисления.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле флагов перечисления.</param>
      <param name="label">Необязательная метка для отображения перед полем флагов перечисления.</param>
      <param name="enumValue">Значение помечает перечисление (поддерживает значения перечисления только для типов перечислений с int в качестве базового типа).</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="includeObsolete">Задайте значение true, чтобы включить значения перечисления в атрибут ObsoleteAttribute. Задайте значение false, чтобы исключить значения перечисления с помощью ObsoleteAttribute.</param>
      <returns>
        <para>Значение флага перечисления, измененное пользователем. Это выбор BitMask, где каждый бит представляет индекс значения Enum. (Обратите внимание, что это возвращаемое значение само по себе не является перечислением).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumFlagsField(UnityEngine.Rect,System.String,System.Enum)">
      <summary>
        <para>Отображает меню с параметром для каждого значения типа перечисления при щелчке. Опция для значения 0 с именем 'Nothing' и опция для значения ~0 (то есть все биты установлены) с именем 'Everything' всегда отображаются в верхней части меню. Имена значений 0 и ~0 можно переопределить, определив эти значения в типе перечисления.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле флагов перечисления.</param>
      <param name="label">Необязательная метка для отображения перед полем флагов перечисления.</param>
      <param name="enumValue">Значение помечает перечисление (поддерживает значения перечисления только для типов перечислений с int в качестве базового типа).</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="includeObsolete">Задайте значение true, чтобы включить значения перечисления в атрибут ObsoleteAttribute. Задайте значение false, чтобы исключить значения перечисления с помощью ObsoleteAttribute.</param>
      <returns>
        <para>Значение флага перечисления, измененное пользователем. Это выбор BitMask, где каждый бит представляет индекс значения Enum. (Обратите внимание, что это возвращаемое значение само по себе не является перечислением).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumFlagsField(UnityEngine.Rect,System.String,System.Enum,UnityEngine.GUIStyle)">
      <summary>
        <para>Отображает меню с параметром для каждого значения типа перечисления при щелчке. Опция для значения 0 с именем 'Nothing' и опция для значения ~0 (то есть все биты установлены) с именем 'Everything' всегда отображаются в верхней части меню. Имена значений 0 и ~0 можно переопределить, определив эти значения в типе перечисления.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле флагов перечисления.</param>
      <param name="label">Необязательная метка для отображения перед полем флагов перечисления.</param>
      <param name="enumValue">Значение помечает перечисление (поддерживает значения перечисления только для типов перечислений с int в качестве базового типа).</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="includeObsolete">Задайте значение true, чтобы включить значения перечисления в атрибут ObsoleteAttribute. Задайте значение false, чтобы исключить значения перечисления с помощью ObsoleteAttribute.</param>
      <returns>
        <para>Значение флага перечисления, измененное пользователем. Это выбор BitMask, где каждый бит представляет индекс значения Enum. (Обратите внимание, что это возвращаемое значение само по себе не является перечислением).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumFlagsField(UnityEngine.Rect,UnityEngine.GUIContent,System.Enum)">
      <summary>
        <para>Отображает меню с параметром для каждого значения типа перечисления при щелчке. Опция для значения 0 с именем 'Nothing' и опция для значения ~0 (то есть все биты установлены) с именем 'Everything' всегда отображаются в верхней части меню. Имена значений 0 и ~0 можно переопределить, определив эти значения в типе перечисления.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле флагов перечисления.</param>
      <param name="label">Необязательная метка для отображения перед полем флагов перечисления.</param>
      <param name="enumValue">Значение помечает перечисление (поддерживает значения перечисления только для типов перечислений с int в качестве базового типа).</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="includeObsolete">Задайте значение true, чтобы включить значения перечисления в атрибут ObsoleteAttribute. Задайте значение false, чтобы исключить значения перечисления с помощью ObsoleteAttribute.</param>
      <returns>
        <para>Значение флага перечисления, измененное пользователем. Это выбор BitMask, где каждый бит представляет индекс значения Enum. (Обратите внимание, что это возвращаемое значение само по себе не является перечислением).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumFlagsField(UnityEngine.Rect,UnityEngine.GUIContent,System.Enum,UnityEngine.GUIStyle)">
      <summary>
        <para>Отображает меню с параметром для каждого значения типа перечисления при щелчке. Опция для значения 0 с именем 'Nothing' и опция для значения ~0 (то есть все биты установлены) с именем 'Everything' всегда отображаются в верхней части меню. Имена значений 0 и ~0 можно переопределить, определив эти значения в типе перечисления.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле флагов перечисления.</param>
      <param name="label">Необязательная метка для отображения перед полем флагов перечисления.</param>
      <param name="enumValue">Значение помечает перечисление (поддерживает значения перечисления только для типов перечислений с int в качестве базового типа).</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="includeObsolete">Задайте значение true, чтобы включить значения перечисления в атрибут ObsoleteAttribute. Задайте значение false, чтобы исключить значения перечисления с помощью ObsoleteAttribute.</param>
      <returns>
        <para>Значение флага перечисления, измененное пользователем. Это выбор BitMask, где каждый бит представляет индекс значения Enum. (Обратите внимание, что это возвращаемое значение само по себе не является перечислением).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumFlagsField(UnityEngine.Rect,UnityEngine.GUIContent,System.Enum,System.Boolean,UnityEngine.GUIStyle)">
      <summary>
        <para>Отображает меню с параметром для каждого значения типа перечисления при щелчке. Опция для значения 0 с именем 'Nothing' и опция для значения ~0 (то есть все биты установлены) с именем 'Everything' всегда отображаются в верхней части меню. Имена значений 0 и ~0 можно переопределить, определив эти значения в типе перечисления.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле флагов перечисления.</param>
      <param name="label">Необязательная метка для отображения перед полем флагов перечисления.</param>
      <param name="enumValue">Значение помечает перечисление (поддерживает значения перечисления только для типов перечислений с int в качестве базового типа).</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="includeObsolete">Задайте значение true, чтобы включить значения перечисления в атрибут ObsoleteAttribute. Задайте значение false, чтобы исключить значения перечисления с помощью ObsoleteAttribute.</param>
      <returns>
        <para>Значение флага перечисления, измененное пользователем. Это выбор BitMask, где каждый бит представляет индекс значения Enum. (Обратите внимание, что это возвращаемое значение само по себе не является перечислением).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumMaskField(UnityEngine.Rect,System.Enum)">
      <summary>
        <para>Этот метод устарел. Вместо этого используйте EditorGUI.EnumFlagsField.  Создает поле для масок на основе перечисления.</para>
      </summary>
      <param name="position">Прямоугольник на экране, используемый для этого элемента управления.</param>
      <param name="label">Подпись/метка для элемента управления.</param>
      <param name="enumValue">Enum для использования для флагов.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Выбор BitMask, где каждый бит представляет индекс значений перечисления. (Обратите внимание, что это возвращаемое значение само по себе не является перечислением).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumMaskField(UnityEngine.Rect,System.String,System.Enum)">
      <summary>
        <para>Этот метод устарел. Вместо этого используйте EditorGUI.EnumFlagsField.  Создает поле для масок на основе перечисления.</para>
      </summary>
      <param name="position">Прямоугольник на экране, используемый для этого элемента управления.</param>
      <param name="label">Подпись/метка для элемента управления.</param>
      <param name="enumValue">Enum для использования для флагов.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Выбор BitMask, где каждый бит представляет индекс значений перечисления. (Обратите внимание, что это возвращаемое значение само по себе не является перечислением).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumMaskField(UnityEngine.Rect,UnityEngine.GUIContent,System.Enum)">
      <summary>
        <para>Этот метод устарел. Вместо этого используйте EditorGUI.EnumFlagsField.  Создает поле для масок на основе перечисления.</para>
      </summary>
      <param name="position">Прямоугольник на экране, используемый для этого элемента управления.</param>
      <param name="label">Подпись/метка для элемента управления.</param>
      <param name="enumValue">Enum для использования для флагов.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Выбор BitMask, где каждый бит представляет индекс значений перечисления. (Обратите внимание, что это возвращаемое значение само по себе не является перечислением).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumMaskField(UnityEngine.Rect,System.Enum,UnityEngine.GUIStyle)">
      <summary>
        <para>Этот метод устарел. Вместо этого используйте EditorGUI.EnumFlagsField.  Создает поле для масок на основе перечисления.</para>
      </summary>
      <param name="position">Прямоугольник на экране, используемый для этого элемента управления.</param>
      <param name="label">Подпись/метка для элемента управления.</param>
      <param name="enumValue">Enum для использования для флагов.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Выбор BitMask, где каждый бит представляет индекс значений перечисления. (Обратите внимание, что это возвращаемое значение само по себе не является перечислением).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumMaskField(UnityEngine.Rect,System.String,System.Enum,UnityEngine.GUIStyle)">
      <summary>
        <para>Этот метод устарел. Вместо этого используйте EditorGUI.EnumFlagsField.  Создает поле для масок на основе перечисления.</para>
      </summary>
      <param name="position">Прямоугольник на экране, используемый для этого элемента управления.</param>
      <param name="label">Подпись/метка для элемента управления.</param>
      <param name="enumValue">Enum для использования для флагов.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Выбор BitMask, где каждый бит представляет индекс значений перечисления. (Обратите внимание, что это возвращаемое значение само по себе не является перечислением).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumMaskField(UnityEngine.Rect,UnityEngine.GUIContent,System.Enum,UnityEngine.GUIStyle)">
      <summary>
        <para>Этот метод устарел. Вместо этого используйте EditorGUI.EnumFlagsField.  Создает поле для масок на основе перечисления.</para>
      </summary>
      <param name="position">Прямоугольник на экране, используемый для этого элемента управления.</param>
      <param name="label">Подпись/метка для элемента управления.</param>
      <param name="enumValue">Enum для использования для флагов.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Выбор BitMask, где каждый бит представляет индекс значений перечисления. (Обратите внимание, что это возвращаемое значение само по себе не является перечислением).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumMaskPopup(UnityEngine.Rect,System.String,System.Enum)">
      <summary>
        <para>Этот метод устарел. Вместо этого используйте EditorGUI.EnumFlagsField.  Создает всплывающее поле выбора перечисления для битовой маски.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selected">Параметры перечисления, отображаемые в поле.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Параметры перечисления, выбранные пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumMaskPopup(UnityEngine.Rect,System.String,System.Enum,UnityEngine.GUIStyle)">
      <summary>
        <para>Этот метод устарел. Вместо этого используйте EditorGUI.EnumFlagsField.  Создает всплывающее поле выбора перечисления для битовой маски.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selected">Параметры перечисления, отображаемые в поле.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Параметры перечисления, выбранные пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumMaskPopup(UnityEngine.Rect,UnityEngine.GUIContent,System.Enum)">
      <summary>
        <para>Этот метод устарел. Вместо этого используйте EditorGUI.EnumFlagsField.  Создает всплывающее поле выбора перечисления для битовой маски.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selected">Параметры перечисления, отображаемые в поле.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Параметры перечисления, выбранные пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumMaskPopup(UnityEngine.Rect,UnityEngine.GUIContent,System.Enum,UnityEngine.GUIStyle)">
      <summary>
        <para>Этот метод устарел. Вместо этого используйте EditorGUI.EnumFlagsField.  Создает всплывающее поле выбора перечисления для битовой маски.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selected">Параметры перечисления, отображаемые в поле.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Параметры перечисления, выбранные пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumPopup(UnityEngine.Rect,System.Enum)">
      <summary>
        <para>Создает всплывающее поле выделения перечисления.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selected">Параметр перечисления, отображаемый в поле.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="includeObsolete">Задайте значение true, чтобы включить значения перечисления в атрибут ObsoleteAttribute. Задайте значение false, чтобы исключить значения перечисления с помощью ObsoleteAttribute.</param>
      <param name="checkEnabled">Метод, вызываемый для каждого отображаемого значения перечисления. Указанный метод должен возвращать значение true, если параметр может быть выбран, в противном случае — значение false.</param>
      <returns>
        <para>Параметр перечисления, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumPopup(UnityEngine.Rect,System.String,System.Enum)">
      <summary>
        <para>Создает всплывающее поле выделения перечисления.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selected">Параметр перечисления, отображаемый в поле.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="includeObsolete">Задайте значение true, чтобы включить значения перечисления в атрибут ObsoleteAttribute. Задайте значение false, чтобы исключить значения перечисления с помощью ObsoleteAttribute.</param>
      <param name="checkEnabled">Метод, вызываемый для каждого отображаемого значения перечисления. Указанный метод должен возвращать значение true, если параметр может быть выбран, в противном случае — значение false.</param>
      <returns>
        <para>Параметр перечисления, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumPopup(UnityEngine.Rect,UnityEngine.GUIContent,System.Enum)">
      <summary>
        <para>Создает всплывающее поле выделения перечисления.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selected">Параметр перечисления, отображаемый в поле.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="includeObsolete">Задайте значение true, чтобы включить значения перечисления в атрибут ObsoleteAttribute. Задайте значение false, чтобы исключить значения перечисления с помощью ObsoleteAttribute.</param>
      <param name="checkEnabled">Метод, вызываемый для каждого отображаемого значения перечисления. Указанный метод должен возвращать значение true, если параметр может быть выбран, в противном случае — значение false.</param>
      <returns>
        <para>Параметр перечисления, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumPopup(UnityEngine.Rect,System.Enum,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает всплывающее поле выделения перечисления.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selected">Параметр перечисления, отображаемый в поле.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="includeObsolete">Задайте значение true, чтобы включить значения перечисления в атрибут ObsoleteAttribute. Задайте значение false, чтобы исключить значения перечисления с помощью ObsoleteAttribute.</param>
      <param name="checkEnabled">Метод, вызываемый для каждого отображаемого значения перечисления. Указанный метод должен возвращать значение true, если параметр может быть выбран, в противном случае — значение false.</param>
      <returns>
        <para>Параметр перечисления, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumPopup(UnityEngine.Rect,System.String,System.Enum,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает всплывающее поле выделения перечисления.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selected">Параметр перечисления, отображаемый в поле.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="includeObsolete">Задайте значение true, чтобы включить значения перечисления в атрибут ObsoleteAttribute. Задайте значение false, чтобы исключить значения перечисления с помощью ObsoleteAttribute.</param>
      <param name="checkEnabled">Метод, вызываемый для каждого отображаемого значения перечисления. Указанный метод должен возвращать значение true, если параметр может быть выбран, в противном случае — значение false.</param>
      <returns>
        <para>Параметр перечисления, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumPopup(UnityEngine.Rect,UnityEngine.GUIContent,System.Enum,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает всплывающее поле выделения перечисления.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selected">Параметр перечисления, отображаемый в поле.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="includeObsolete">Задайте значение true, чтобы включить значения перечисления в атрибут ObsoleteAttribute. Задайте значение false, чтобы исключить значения перечисления с помощью ObsoleteAttribute.</param>
      <param name="checkEnabled">Метод, вызываемый для каждого отображаемого значения перечисления. Указанный метод должен возвращать значение true, если параметр может быть выбран, в противном случае — значение false.</param>
      <returns>
        <para>Параметр перечисления, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.EnumPopup(UnityEngine.Rect,UnityEngine.GUIContent,System.Enum,System.Func`2&lt;System.Enum,System.Boolean&gt;,System.Boolean,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает всплывающее поле выделения перечисления.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selected">Параметр перечисления, отображаемый в поле.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="includeObsolete">Задайте значение true, чтобы включить значения перечисления в атрибут ObsoleteAttribute. Задайте значение false, чтобы исключить значения перечисления с помощью ObsoleteAttribute.</param>
      <param name="checkEnabled">Метод, вызываемый для каждого отображаемого значения перечисления. Указанный метод должен возвращать значение true, если параметр может быть выбран, в противном случае — значение false.</param>
      <returns>
        <para>Параметр перечисления, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.FloatField(UnityEngine.Rect,System.Single,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает текстовое поле для ввода плавающих точек.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в плавающем поле.</param>
      <param name="label">Необязательная метка для отображения перед плавающим полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.FloatField(UnityEngine.Rect,System.String,System.Single,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает текстовое поле для ввода плавающих точек.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в плавающем поле.</param>
      <param name="label">Необязательная метка для отображения перед плавающим полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.FloatField(UnityEngine.Rect,UnityEngine.GUIContent,System.Single,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает текстовое поле для ввода плавающих точек.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в плавающем поле.</param>
      <param name="label">Необязательная метка для отображения перед плавающим полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.FocusTextInControl(System.String)">
      <summary>
        <para>Переместите фокус клавиатуры в именованное текстовое поле и начните редактирование содержимого.</para>
      </summary>
      <param name="name">Имя задается с помощью графического интерфейса пользователя. SetNextControlName.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.Foldout(UnityEngine.Rect,System.Boolean,System.String)">
      <summary>
        <para>Делает метку со стрелкой откидывания слева от нее.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве стрелки и метки.</param>
      <param name="foldout">Показанное состояние складывания.</param>
      <param name="content">Отображаемая метка.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="toggleOnLabelClick">Должна ли метка быть интерактивной частью элемента управления?</param>
      <returns>
        <para>Состояние складывания, выбранное пользователем. Если значение равно true, следует отобразить подобъекты.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Foldout(UnityEngine.Rect,System.Boolean,UnityEngine.GUIContent)">
      <summary>
        <para>Делает метку со стрелкой откидывания слева от нее.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве стрелки и метки.</param>
      <param name="foldout">Показанное состояние складывания.</param>
      <param name="content">Отображаемая метка.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="toggleOnLabelClick">Должна ли метка быть интерактивной частью элемента управления?</param>
      <returns>
        <para>Состояние складывания, выбранное пользователем. Если значение равно true, следует отобразить подобъекты.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Foldout(UnityEngine.Rect,System.Boolean,System.String,System.Boolean)">
      <summary>
        <para>Делает метку со стрелкой откидывания слева от нее.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве стрелки и метки.</param>
      <param name="foldout">Показанное состояние складывания.</param>
      <param name="content">Отображаемая метка.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="toggleOnLabelClick">Должна ли метка быть интерактивной частью элемента управления?</param>
      <returns>
        <para>Состояние складывания, выбранное пользователем. Если значение равно true, следует отобразить подобъекты.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Foldout(UnityEngine.Rect,System.Boolean,UnityEngine.GUIContent,System.Boolean)">
      <summary>
        <para>Делает метку со стрелкой откидывания слева от нее.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве стрелки и метки.</param>
      <param name="foldout">Показанное состояние складывания.</param>
      <param name="content">Отображаемая метка.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="toggleOnLabelClick">Должна ли метка быть интерактивной частью элемента управления?</param>
      <returns>
        <para>Состояние складывания, выбранное пользователем. Если значение равно true, следует отобразить подобъекты.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Foldout(UnityEngine.Rect,System.Boolean,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Делает метку со стрелкой откидывания слева от нее.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве стрелки и метки.</param>
      <param name="foldout">Показанное состояние складывания.</param>
      <param name="content">Отображаемая метка.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="toggleOnLabelClick">Должна ли метка быть интерактивной частью элемента управления?</param>
      <returns>
        <para>Состояние складывания, выбранное пользователем. Если значение равно true, следует отобразить подобъекты.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Foldout(UnityEngine.Rect,System.Boolean,System.String,System.Boolean,UnityEngine.GUIStyle)">
      <summary>
        <para>Делает метку со стрелкой откидывания слева от нее.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве стрелки и метки.</param>
      <param name="foldout">Показанное состояние складывания.</param>
      <param name="content">Отображаемая метка.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="toggleOnLabelClick">Должна ли метка быть интерактивной частью элемента управления?</param>
      <returns>
        <para>Состояние складывания, выбранное пользователем. Если значение равно true, следует отобразить подобъекты.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Foldout(UnityEngine.Rect,System.Boolean,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Делает метку со стрелкой откидывания слева от нее.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве стрелки и метки.</param>
      <param name="foldout">Показанное состояние складывания.</param>
      <param name="content">Отображаемая метка.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="toggleOnLabelClick">Должна ли метка быть интерактивной частью элемента управления?</param>
      <returns>
        <para>Состояние складывания, выбранное пользователем. Если значение равно true, следует отобразить подобъекты.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Foldout(UnityEngine.Rect,System.Boolean,UnityEngine.GUIContent,System.Boolean,UnityEngine.GUIStyle)">
      <summary>
        <para>Делает метку со стрелкой откидывания слева от нее.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве стрелки и метки.</param>
      <param name="foldout">Показанное состояние складывания.</param>
      <param name="content">Отображаемая метка.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="toggleOnLabelClick">Должна ли метка быть интерактивной частью элемента управления?</param>
      <returns>
        <para>Состояние складывания, выбранное пользователем. Если значение равно true, следует отобразить подобъекты.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.GetPropertyHeight(UnityEditor.SerializedProperty,System.Boolean)">
      <summary>
        <para>Получите высоту, необходимую для элемента управления PropertyField.</para>
      </summary>
      <param name="property">Высота участка недвижимости.</param>
      <param name="label">Описательный текст или изображение.</param>
      <param name="includeChildren">Должна ли возвращаемая высота включать высоту дочерних свойств?</param>
      <param name="type">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUI.GetPropertyHeight(UnityEditor.SerializedPropertyType,UnityEngine.GUIContent)">
      <summary>
        <para>Получите высоту, необходимую для элемента управления PropertyField.</para>
      </summary>
      <param name="property">Высота участка недвижимости.</param>
      <param name="label">Описательный текст или изображение.</param>
      <param name="includeChildren">Должна ли возвращаемая высота включать высоту дочерних свойств?</param>
      <param name="type">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUI.GetPropertyHeight(UnityEditor.SerializedProperty)">
      <summary>
        <para>Получите высоту, необходимую для элемента управления PropertyField.</para>
      </summary>
      <param name="property">Высота участка недвижимости.</param>
      <param name="label">Описательный текст или изображение.</param>
      <param name="includeChildren">Должна ли возвращаемая высота включать высоту дочерних свойств?</param>
      <param name="type">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUI.GetPropertyHeight(UnityEditor.SerializedProperty,UnityEngine.GUIContent)">
      <summary>
        <para>Получите высоту, необходимую для элемента управления PropertyField.</para>
      </summary>
      <param name="property">Высота участка недвижимости.</param>
      <param name="label">Описательный текст или изображение.</param>
      <param name="includeChildren">Должна ли возвращаемая высота включать высоту дочерних свойств?</param>
      <param name="type">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUI.GetPropertyHeight(UnityEditor.SerializedProperty,UnityEngine.GUIContent,System.Boolean)">
      <summary>
        <para>Получите высоту, необходимую для элемента управления PropertyField.</para>
      </summary>
      <param name="property">Высота участка недвижимости.</param>
      <param name="label">Описательный текст или изображение.</param>
      <param name="includeChildren">Должна ли возвращаемая высота включать высоту дочерних свойств?</param>
      <param name="type">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUI.GradientField(UnityEngine.Rect,UnityEngine.Gradient)">
      <summary>
        <para>Создает поле для редактирования градиента.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="gradient">Редактируемый градиент.</param>
      <param name="hdr">Откройте редактор градиентов HDR.</param>
      <param name="colorSpace">Отображение градиента и редактора градиентов в этом цветовом пространстве.</param>
      <returns>
        <para>Градиент, редактируемый пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.GradientField(UnityEngine.Rect,System.String,UnityEngine.Gradient)">
      <summary>
        <para>Создает поле для редактирования градиента.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="gradient">Редактируемый градиент.</param>
      <param name="hdr">Откройте редактор градиентов HDR.</param>
      <param name="colorSpace">Отображение градиента и редактора градиентов в этом цветовом пространстве.</param>
      <returns>
        <para>Градиент, редактируемый пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.GradientField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Gradient)">
      <summary>
        <para>Создает поле для редактирования градиента.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="gradient">Редактируемый градиент.</param>
      <param name="hdr">Откройте редактор градиентов HDR.</param>
      <param name="colorSpace">Отображение градиента и редактора градиентов в этом цветовом пространстве.</param>
      <returns>
        <para>Градиент, редактируемый пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.GradientField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Gradient,System.Boolean)">
      <summary>
        <para>Создает поле для редактирования градиента.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="gradient">Редактируемый градиент.</param>
      <param name="hdr">Откройте редактор градиентов HDR.</param>
      <param name="colorSpace">Отображение градиента и редактора градиентов в этом цветовом пространстве.</param>
      <returns>
        <para>Градиент, редактируемый пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.GradientField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Gradient,System.Boolean,UnityEngine.ColorSpace)">
      <summary>
        <para>Создает поле для редактирования градиента.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="gradient">Редактируемый градиент.</param>
      <param name="hdr">Откройте редактор градиентов HDR.</param>
      <param name="colorSpace">Отображение градиента и редактора градиентов в этом цветовом пространстве.</param>
      <returns>
        <para>Градиент, редактируемый пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.HandlePrefixLabel(UnityEngine.Rect,UnityEngine.Rect,UnityEngine.GUIContent)">
      <summary>
        <para>Создает метку для некоторого элемента управления.</para>
      </summary>
      <param name="totalPosition">Прямоугольник на экране для использования в целом как для метки, так и для элемента управления.</param>
      <param name="labelPosition">Прямоугольник на экране для использования в качестве метки.</param>
      <param name="label">Метка, отображаемая для элемента управления.</param>
      <param name="id">Уникальный идентификатор элемента управления. Если не указано, используется идентификатор следующего элемента управления.</param>
      <param name="style">Необязательный GUIStyle для использования для метки.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.HandlePrefixLabel(UnityEngine.Rect,UnityEngine.Rect,UnityEngine.GUIContent,System.Int32)">
      <summary>
        <para>Создает метку для некоторого элемента управления.</para>
      </summary>
      <param name="totalPosition">Прямоугольник на экране для использования в целом как для метки, так и для элемента управления.</param>
      <param name="labelPosition">Прямоугольник на экране для использования в качестве метки.</param>
      <param name="label">Метка, отображаемая для элемента управления.</param>
      <param name="id">Уникальный идентификатор элемента управления. Если не указано, используется идентификатор следующего элемента управления.</param>
      <param name="style">Необязательный GUIStyle для использования для метки.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.HandlePrefixLabel(UnityEngine.Rect,UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает метку для некоторого элемента управления.</para>
      </summary>
      <param name="totalPosition">Прямоугольник на экране для использования в целом как для метки, так и для элемента управления.</param>
      <param name="labelPosition">Прямоугольник на экране для использования в качестве метки.</param>
      <param name="label">Метка, отображаемая для элемента управления.</param>
      <param name="id">Уникальный идентификатор элемента управления. Если не указано, используется идентификатор следующего элемента управления.</param>
      <param name="style">Необязательный GUIStyle для использования для метки.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.HelpBox(UnityEngine.Rect,System.String,UnityEditor.MessageType)">
      <summary>
        <para>Создает окно справки с сообщением пользователю.</para>
      </summary>
      <param name="position">Прямоугольник на экране, чтобы нарисовать поле справки внутри.</param>
      <param name="message">Текст сообщения.</param>
      <param name="type">Тип сообщения.</param>
    </member>
    <member name="T:UnityEditor.EditorGUI.IndentLevelScope">
      <summary>
        <para>Область управления уровнем отступа меток полей.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUI.IndentLevelScope.#ctor">
      <summary>
        <para>Создает объект IndentLevelScope и увеличивает уровень отступа EditorGUI.</para>
      </summary>
      <param name="increment">Уровень отступа EditorGUI будет увеличен на эту величину внутри области.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.IndentLevelScope.#ctor(System.Int32)">
      <summary>
        <para>Создает объект IndentLevelScope и увеличивает уровень отступа EditorGUI.</para>
      </summary>
      <param name="increment">Уровень отступа EditorGUI будет увеличен на эту величину внутри области.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.InspectorTitlebar">
      <summary>
        <para>Создает строку заголовка, похожую на окно инспектора.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в строке заголовка.</param>
      <param name="foldout">Состояние складывания, показанное стрелкой.</param>
      <param name="targetObj">Объект (например, компонент), для которого предназначена строка заголовка.</param>
      <param name="targetObjs">Объекты, для которых предназначена строка заголовка.</param>
      <param name="expandable">Должен ли этот редактор отображать стрелку складывания, чтобы переключить отображение его свойств.</param>
      <returns>
        <para>Состояние складывания, выбранное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.InspectorTitlebar">
      <summary>
        <para>Создает строку заголовка, похожую на окно инспектора.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в строке заголовка.</param>
      <param name="foldout">Состояние складывания, показанное стрелкой.</param>
      <param name="targetObj">Объект (например, компонент), для которого предназначена строка заголовка.</param>
      <param name="targetObjs">Объекты, для которых предназначена строка заголовка.</param>
      <param name="expandable">Должен ли этот редактор отображать стрелку складывания, чтобы переключить отображение его свойств.</param>
      <returns>
        <para>Состояние складывания, выбранное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.InspectorTitlebar(UnityEngine.Rect,System.Boolean,UnityEngine.Object,System.Boolean)">
      <summary>
        <para>Создает строку заголовка, похожую на окно инспектора.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в строке заголовка.</param>
      <param name="foldout">Состояние складывания, показанное стрелкой.</param>
      <param name="targetObj">Объект (например, компонент), для которого предназначена строка заголовка.</param>
      <param name="targetObjs">Объекты, для которых предназначена строка заголовка.</param>
      <param name="expandable">Должен ли этот редактор отображать стрелку складывания, чтобы переключить отображение его свойств.</param>
      <returns>
        <para>Состояние складывания, выбранное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.InspectorTitlebar(UnityEngine.Rect,System.Boolean,UnityEngine.Object[],System.Boolean)">
      <summary>
        <para>Создает строку заголовка, похожую на окно инспектора.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в строке заголовка.</param>
      <param name="foldout">Состояние складывания, показанное стрелкой.</param>
      <param name="targetObj">Объект (например, компонент), для которого предназначена строка заголовка.</param>
      <param name="targetObjs">Объекты, для которых предназначена строка заголовка.</param>
      <param name="expandable">Должен ли этот редактор отображать стрелку складывания, чтобы переключить отображение его свойств.</param>
      <returns>
        <para>Состояние складывания, выбранное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntField(UnityEngine.Rect,System.Int32)">
      <summary>
        <para>Создает текстовое поле для ввода целых чисел.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле int.</param>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntField(UnityEngine.Rect,System.String,System.Int32)">
      <summary>
        <para>Создает текстовое поле для ввода целых чисел.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле int.</param>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntField(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32)">
      <summary>
        <para>Создает текстовое поле для ввода целых чисел.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле int.</param>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntField(UnityEngine.Rect,System.Int32,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает текстовое поле для ввода целых чисел.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле int.</param>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntField(UnityEngine.Rect,System.String,System.Int32,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает текстовое поле для ввода целых чисел.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле int.</param>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntField(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает текстовое поле для ввода целых чисел.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле int.</param>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntPopup(UnityEngine.Rect,System.Int32,System.String[],System.Int32[])">
      <summary>
        <para>Создает целое всплывающее поле выбора.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedValue">Значение параметра, отображаемого в поле.</param>
      <param name="displayedOptions">Массив с отображаемыми параметрами, которые пользователь может выбрать.</param>
      <param name="optionValues">Массив со значениями для каждого параметра. Если optionValues предполагается прямое сопоставление selectedValue с displayedOptions.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Значение параметра, выбранного пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntPopup(UnityEngine.Rect,System.Int32,UnityEngine.GUIContent[],System.Int32[])">
      <summary>
        <para>Создает целое всплывающее поле выбора.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedValue">Значение параметра, отображаемого в поле.</param>
      <param name="displayedOptions">Массив с отображаемыми параметрами, которые пользователь может выбрать.</param>
      <param name="optionValues">Массив со значениями для каждого параметра. Если optionValues предполагается прямое сопоставление selectedValue с displayedOptions.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Значение параметра, выбранного пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntPopup(UnityEngine.Rect,System.Int32,System.String[],System.Int32[],UnityEngine.GUIStyle)">
      <summary>
        <para>Создает целое всплывающее поле выбора.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedValue">Значение параметра, отображаемого в поле.</param>
      <param name="displayedOptions">Массив с отображаемыми параметрами, которые пользователь может выбрать.</param>
      <param name="optionValues">Массив со значениями для каждого параметра. Если optionValues предполагается прямое сопоставление selectedValue с displayedOptions.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Значение параметра, выбранного пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntPopup(UnityEngine.Rect,System.Int32,UnityEngine.GUIContent[],System.Int32[],UnityEngine.GUIStyle)">
      <summary>
        <para>Создает целое всплывающее поле выбора.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedValue">Значение параметра, отображаемого в поле.</param>
      <param name="displayedOptions">Массив с отображаемыми параметрами, которые пользователь может выбрать.</param>
      <param name="optionValues">Массив со значениями для каждого параметра. Если optionValues предполагается прямое сопоставление selectedValue с displayedOptions.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Значение параметра, выбранного пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntPopup(UnityEngine.Rect,System.String,System.Int32,System.String[],System.Int32[],UnityEngine.GUIStyle)">
      <summary>
        <para>Создает целое всплывающее поле выбора.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedValue">Значение параметра, отображаемого в поле.</param>
      <param name="displayedOptions">Массив с отображаемыми параметрами, которые пользователь может выбрать.</param>
      <param name="optionValues">Массив со значениями для каждого параметра. Если optionValues предполагается прямое сопоставление selectedValue с displayedOptions.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Значение параметра, выбранного пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntPopup(UnityEngine.Rect,System.String,System.Int32,System.String[],System.Int32[])">
      <summary>
        <para>Создает целое всплывающее поле выбора.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedValue">Значение параметра, отображаемого в поле.</param>
      <param name="displayedOptions">Массив с отображаемыми параметрами, которые пользователь может выбрать.</param>
      <param name="optionValues">Массив со значениями для каждого параметра. Если optionValues предполагается прямое сопоставление selectedValue с displayedOptions.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Значение параметра, выбранного пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntPopup(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,UnityEngine.GUIContent[],System.Int32[],UnityEngine.GUIStyle)">
      <summary>
        <para>Создает целое всплывающее поле выбора.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedValue">Значение параметра, отображаемого в поле.</param>
      <param name="displayedOptions">Массив с отображаемыми параметрами, которые пользователь может выбрать.</param>
      <param name="optionValues">Массив со значениями для каждого параметра. Если optionValues предполагается прямое сопоставление selectedValue с displayedOptions.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Значение параметра, выбранного пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntPopup(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,UnityEngine.GUIContent[],System.Int32[])">
      <summary>
        <para>Создает целое всплывающее поле выбора.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedValue">Значение параметра, отображаемого в поле.</param>
      <param name="displayedOptions">Массив с отображаемыми параметрами, которые пользователь может выбрать.</param>
      <param name="optionValues">Массив со значениями для каждого параметра. Если optionValues предполагается прямое сопоставление selectedValue с displayedOptions.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Значение параметра, выбранного пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntPopup(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent[],System.Int32[])">
      <summary>
        <para>
        </para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="property">Объект SerializedProperty, используемый для элемента управления.</param>
      <param name="displayedOptions">Массив с отображаемыми параметрами, которые пользователь может выбрать.</param>
      <param name="optionValues">Массив со значениями для каждого параметра. Если optionValues предполагается прямое сопоставление selectedValue с displayedOptions.</param>
      <param name="label">Необязательная метка перед полем.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntPopup(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent[],System.Int32[],UnityEngine.GUIContent)">
      <summary>
        <para>
        </para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="property">Объект SerializedProperty, используемый для элемента управления.</param>
      <param name="displayedOptions">Массив с отображаемыми параметрами, которые пользователь может выбрать.</param>
      <param name="optionValues">Массив со значениями для каждого параметра. Если optionValues предполагается прямое сопоставление selectedValue с displayedOptions.</param>
      <param name="label">Необязательная метка перед полем.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntSlider(UnityEngine.Rect,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Создает ползунок, который пользователь может перетащить, чтобы изменить целое значение между min и max.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в ползунке.</param>
      <param name="label">Дополнительная метка перед ползунком.</param>
      <param name="value">Значение, отображаемое ползунком. Это определяет положение перетаскиваемого большого пальца.</param>
      <param name="leftValue">Значение в левом конце ползунка.</param>
      <param name="rightValue">Значение в правом конце ползунка.</param>
      <returns>
        <para>Значение, заданное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntSlider(UnityEngine.Rect,System.String,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Создает ползунок, который пользователь может перетащить, чтобы изменить целое значение между min и max.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в ползунке.</param>
      <param name="label">Дополнительная метка перед ползунком.</param>
      <param name="value">Значение, отображаемое ползунком. Это определяет положение перетаскиваемого большого пальца.</param>
      <param name="leftValue">Значение в левом конце ползунка.</param>
      <param name="rightValue">Значение в правом конце ползунка.</param>
      <returns>
        <para>Значение, заданное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntSlider(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Создает ползунок, который пользователь может перетащить, чтобы изменить целое значение между min и max.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в ползунке.</param>
      <param name="label">Дополнительная метка перед ползунком.</param>
      <param name="value">Значение, отображаемое ползунком. Это определяет положение перетаскиваемого большого пальца.</param>
      <param name="leftValue">Значение в левом конце ползунка.</param>
      <param name="rightValue">Значение в правом конце ползунка.</param>
      <returns>
        <para>Значение, заданное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntSlider(UnityEngine.Rect,UnityEditor.SerializedProperty,System.Int32,System.Int32)">
      <summary>
        <para>Создает ползунок, который пользователь может перетащить, чтобы изменить значение между min и max.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в ползунке.</param>
      <param name="label">Дополнительная метка перед ползунком.</param>
      <param name="property">Значение, отображаемое ползунком. Это определяет положение перетаскиваемого большого пальца.</param>
      <param name="leftValue">Значение в левом конце ползунка.</param>
      <param name="rightValue">Значение в правом конце ползунка.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntSlider(UnityEngine.Rect,UnityEditor.SerializedProperty,System.Int32,System.Int32,System.String)">
      <summary>
        <para>Создает ползунок, который пользователь может перетащить, чтобы изменить значение между min и max.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в ползунке.</param>
      <param name="label">Дополнительная метка перед ползунком.</param>
      <param name="property">Значение, отображаемое ползунком. Это определяет положение перетаскиваемого большого пальца.</param>
      <param name="leftValue">Значение в левом конце ползунка.</param>
      <param name="rightValue">Значение в правом конце ползунка.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.IntSlider(UnityEngine.Rect,UnityEditor.SerializedProperty,System.Int32,System.Int32,UnityEngine.GUIContent)">
      <summary>
        <para>Создает ползунок, который пользователь может перетащить, чтобы изменить значение между min и max.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в ползунке.</param>
      <param name="label">Дополнительная метка перед ползунком.</param>
      <param name="property">Значение, отображаемое ползунком. Это определяет положение перетаскиваемого большого пальца.</param>
      <param name="leftValue">Значение в левом конце ползунка.</param>
      <param name="rightValue">Значение в правом конце ползунка.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.LabelField(UnityEngine.Rect,System.String)">
      <summary>
        <para>Создает поле метки. (Полезно для отображения информации только для чтения.)</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле метки.</param>
      <param name="label">Метка перед полем метки.</param>
      <param name="label2">Метка, которую нужно показать справа.</param>
      <param name="style">Информация о стиле (цвет и т.д.) для отображения этикетки.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.LabelField(UnityEngine.Rect,UnityEngine.GUIContent)">
      <summary>
        <para>Создает поле метки. (Полезно для отображения информации только для чтения.)</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле метки.</param>
      <param name="label">Метка перед полем метки.</param>
      <param name="label2">Метка, которую нужно показать справа.</param>
      <param name="style">Информация о стиле (цвет и т.д.) для отображения этикетки.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.LabelField(UnityEngine.Rect,System.String,System.String)">
      <summary>
        <para>Создает поле метки. (Полезно для отображения информации только для чтения.)</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле метки.</param>
      <param name="label">Метка перед полем метки.</param>
      <param name="label2">Метка, которую нужно показать справа.</param>
      <param name="style">Информация о стиле (цвет и т.д.) для отображения этикетки.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.LabelField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.GUIContent)">
      <summary>
        <para>Создает поле метки. (Полезно для отображения информации только для чтения.)</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле метки.</param>
      <param name="label">Метка перед полем метки.</param>
      <param name="label2">Метка, которую нужно показать справа.</param>
      <param name="style">Информация о стиле (цвет и т.д.) для отображения этикетки.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.LabelField(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает поле метки. (Полезно для отображения информации только для чтения.)</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле метки.</param>
      <param name="label">Метка перед полем метки.</param>
      <param name="label2">Метка, которую нужно показать справа.</param>
      <param name="style">Информация о стиле (цвет и т.д.) для отображения этикетки.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.LabelField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает поле метки. (Полезно для отображения информации только для чтения.)</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле метки.</param>
      <param name="label">Метка перед полем метки.</param>
      <param name="label2">Метка, которую нужно показать справа.</param>
      <param name="style">Информация о стиле (цвет и т.д.) для отображения этикетки.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.LabelField(UnityEngine.Rect,System.String,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает поле метки. (Полезно для отображения информации только для чтения.)</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле метки.</param>
      <param name="label">Метка перед полем метки.</param>
      <param name="label2">Метка, которую нужно показать справа.</param>
      <param name="style">Информация о стиле (цвет и т.д.) для отображения этикетки.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.LabelField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает поле метки. (Полезно для отображения информации только для чтения.)</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле метки.</param>
      <param name="label">Метка перед полем метки.</param>
      <param name="label2">Метка, которую нужно показать справа.</param>
      <param name="style">Информация о стиле (цвет и т.д.) для отображения этикетки.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.LayerField(UnityEngine.Rect,System.Int32)">
      <summary>
        <para>Создает поле выделения слоя.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="layer">Слой, показанный в поле.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Слой, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.LayerField(UnityEngine.Rect,System.String,System.Int32)">
      <summary>
        <para>Создает поле выделения слоя.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="layer">Слой, показанный в поле.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Слой, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.LayerField(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32)">
      <summary>
        <para>Создает поле выделения слоя.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="layer">Слой, показанный в поле.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Слой, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.LayerField(UnityEngine.Rect,System.Int32,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает поле выделения слоя.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="layer">Слой, показанный в поле.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Слой, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.LayerField(UnityEngine.Rect,System.String,System.Int32,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает поле выделения слоя.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="layer">Слой, показанный в поле.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Слой, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.LayerField(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает поле выделения слоя.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="layer">Слой, показанный в поле.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Слой, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.LinkButton(UnityEngine.Rect,System.String)">
      <summary>
        <para>Создайте кликабельную метку ссылки.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в элементе управления. Подчеркивание выполняется с нижней границей, поэтому установите размер соответственно.</param>
      <param name="label">Метка ссылки.</param>
      <returns>
        <para>Значение true, когда пользователь щелкает ссылку.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.LinkButton(UnityEngine.Rect,UnityEngine.GUIContent)">
      <summary>
        <para>Создайте кликабельную метку ссылки.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в элементе управления. Подчеркивание выполняется с нижней границей, поэтому установите размер соответственно.</param>
      <param name="label">Метка ссылки.</param>
      <returns>
        <para>Значение true, когда пользователь щелкает ссылку.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.LongField(UnityEngine.Rect,System.Int64)">
      <summary>
        <para>Создает текстовое поле для ввода длинных целых чисел.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в длинном поле.</param>
      <param name="label">Необязательная метка для отображения перед длинным полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.LongField(UnityEngine.Rect,System.String,System.Int64)">
      <summary>
        <para>Создает текстовое поле для ввода длинных целых чисел.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в длинном поле.</param>
      <param name="label">Необязательная метка для отображения перед длинным полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.LongField(UnityEngine.Rect,UnityEngine.GUIContent,System.Int64)">
      <summary>
        <para>Создает текстовое поле для ввода длинных целых чисел.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в длинном поле.</param>
      <param name="label">Необязательная метка для отображения перед длинным полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.LongField(UnityEngine.Rect,System.String,System.Int64,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает текстовое поле для ввода длинных целых чисел.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в длинном поле.</param>
      <param name="label">Необязательная метка для отображения перед длинным полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.LongField(UnityEngine.Rect,UnityEngine.GUIContent,System.Int64,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает текстовое поле для ввода длинных целых чисел.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в длинном поле.</param>
      <param name="label">Необязательная метка для отображения перед длинным полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.MaskField(UnityEngine.Rect,System.Int32,System.String[])">
      <summary>
        <para>Создает поле для масок.</para>
      </summary>
      <param name="position">Прямоугольник на экране, используемый для этого элемента управления.</param>
      <param name="label">Метка для поля.</param>
      <param name="mask">Отображаемая текущая маска.</param>
      <param name="displayedOption">Массив строк, содержащий метки для каждого флага.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="displayedOptions">Массив строк, содержащий метки для каждого флага.</param>
      <returns>
        <para>Значение, измененное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.MaskField(UnityEngine.Rect,System.String,System.Int32,System.String[])">
      <summary>
        <para>Создает поле для масок.</para>
      </summary>
      <param name="position">Прямоугольник на экране, используемый для этого элемента управления.</param>
      <param name="label">Метка для поля.</param>
      <param name="mask">Отображаемая текущая маска.</param>
      <param name="displayedOption">Массив строк, содержащий метки для каждого флага.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="displayedOptions">Массив строк, содержащий метки для каждого флага.</param>
      <returns>
        <para>Значение, измененное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.MaskField(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,System.String[])">
      <summary>
        <para>Создает поле для масок.</para>
      </summary>
      <param name="position">Прямоугольник на экране, используемый для этого элемента управления.</param>
      <param name="label">Метка для поля.</param>
      <param name="mask">Отображаемая текущая маска.</param>
      <param name="displayedOption">Массив строк, содержащий метки для каждого флага.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="displayedOptions">Массив строк, содержащий метки для каждого флага.</param>
      <returns>
        <para>Значение, измененное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.MaskField(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,System.String[],UnityEngine.GUIStyle)">
      <summary>
        <para>Создает поле для масок.</para>
      </summary>
      <param name="position">Прямоугольник на экране, используемый для этого элемента управления.</param>
      <param name="label">Метка для поля.</param>
      <param name="mask">Отображаемая текущая маска.</param>
      <param name="displayedOption">Массив строк, содержащий метки для каждого флага.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="displayedOptions">Массив строк, содержащий метки для каждого флага.</param>
      <returns>
        <para>Значение, измененное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.MaskField(UnityEngine.Rect,System.String,System.Int32,System.String[],UnityEngine.GUIStyle)">
      <summary>
        <para>Создает поле для масок.</para>
      </summary>
      <param name="position">Прямоугольник на экране, используемый для этого элемента управления.</param>
      <param name="label">Метка для поля.</param>
      <param name="mask">Отображаемая текущая маска.</param>
      <param name="displayedOption">Массив строк, содержащий метки для каждого флага.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="displayedOptions">Массив строк, содержащий метки для каждого флага.</param>
      <returns>
        <para>Значение, измененное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.MaskField(UnityEngine.Rect,System.Int32,System.String[],UnityEngine.GUIStyle)">
      <summary>
        <para>Создает поле для масок.</para>
      </summary>
      <param name="position">Прямоугольник на экране, используемый для этого элемента управления.</param>
      <param name="label">Метка для поля.</param>
      <param name="mask">Отображаемая текущая маска.</param>
      <param name="displayedOption">Массив строк, содержащий метки для каждого флага.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="displayedOptions">Массив строк, содержащий метки для каждого флага.</param>
      <returns>
        <para>Значение, измененное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.MinMaxSlider(UnityEngine.GUIContent,UnityEngine.Rect,System.Single&amp;,System.Single&amp;,System.Single,System.Single)">
      <summary>
        <para>Создает специальный ползунок, который пользователь может использовать для указания диапазона между min и max.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в ползунке.</param>
      <param name="label">Дополнительная метка перед ползунком.</param>
      <param name="minValue">Наименьшее значение диапазона, отображаемого ползунком, переданное по ссылке.</param>
      <param name="maxValue">Верхнее значение в диапазоне, отображаемом ползунком, переданное по ссылке.</param>
      <param name="minLimit">Ограничение в левом конце ползунка.</param>
      <param name="maxLimit">Ограничение в правом конце ползунка.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.MinMaxSlider(UnityEngine.Rect,System.Single&amp;,System.Single&amp;,System.Single,System.Single)">
      <summary>
        <para>Создает специальный ползунок, который пользователь может использовать для указания диапазона между min и max.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в ползунке.</param>
      <param name="label">Дополнительная метка перед ползунком.</param>
      <param name="minValue">Наименьшее значение диапазона, отображаемого ползунком, переданное по ссылке.</param>
      <param name="maxValue">Верхнее значение в диапазоне, отображаемом ползунком, переданное по ссылке.</param>
      <param name="minLimit">Ограничение в левом конце ползунка.</param>
      <param name="maxLimit">Ограничение в правом конце ползунка.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.MinMaxSlider(UnityEngine.Rect,System.String,System.Single&amp;,System.Single&amp;,System.Single,System.Single)">
      <summary>
        <para>Создает специальный ползунок, который пользователь может использовать для указания диапазона между min и max.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в ползунке.</param>
      <param name="label">Дополнительная метка перед ползунком.</param>
      <param name="minValue">Наименьшее значение диапазона, отображаемого ползунком, переданное по ссылке.</param>
      <param name="maxValue">Верхнее значение в диапазоне, отображаемом ползунком, переданное по ссылке.</param>
      <param name="minLimit">Ограничение в левом конце ползунка.</param>
      <param name="maxLimit">Ограничение в правом конце ползунка.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.MinMaxSlider(UnityEngine.Rect,UnityEngine.GUIContent,System.Single&amp;,System.Single&amp;,System.Single,System.Single)">
      <summary>
        <para>Создает специальный ползунок, который пользователь может использовать для указания диапазона между min и max.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в ползунке.</param>
      <param name="label">Дополнительная метка перед ползунком.</param>
      <param name="minValue">Наименьшее значение диапазона, отображаемого ползунком, переданное по ссылке.</param>
      <param name="maxValue">Верхнее значение в диапазоне, отображаемом ползунком, переданное по ссылке.</param>
      <param name="minLimit">Ограничение в левом конце ползунка.</param>
      <param name="maxLimit">Ограничение в правом конце ползунка.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.MultiFloatField(UnityEngine.Rect,UnityEngine.GUIContent[],System.Single[])">
      <summary>
        <para>Создает мульти-элемент управления с текстовыми полями для ввода нескольких плавающих точек в одной строке.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в плавающем поле.</param>
      <param name="label">Необязательная метка для отображения перед плавающим полем.</param>
      <param name="subLabels">Массив с небольшими метками для отображения перед каждым плавающим полем. В каждом поле есть место только для одной буквы.</param>
      <param name="values">Массив со значениями для редактирования.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.MultiFloatField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.GUIContent[],System.Single[])">
      <summary>
        <para>Создает мульти-элемент управления с текстовыми полями для ввода нескольких плавающих точек в одной строке.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в плавающем поле.</param>
      <param name="label">Необязательная метка для отображения перед плавающим полем.</param>
      <param name="subLabels">Массив с небольшими метками для отображения перед каждым плавающим полем. В каждом поле есть место только для одной буквы.</param>
      <param name="values">Массив со значениями для редактирования.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.MultiIntField(UnityEngine.Rect,UnityEngine.GUIContent[],System.Int32[])">
      <summary>
        <para>Создает мульти-элемент управления с текстовыми полями для ввода нескольких целых чисел в одной строке.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в целочисленном поле.</param>
      <param name="subLabels">Массив с небольшими метками для отображения перед каждым полем int. В каждом поле есть место только для одной буквы.</param>
      <param name="values">Массив со значениями для редактирования.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.MultiPropertyField(UnityEngine.Rect,UnityEngine.GUIContent[],UnityEditor.SerializedProperty,UnityEngine.GUIContent)">
      <summary>
        <para>Создает мульти-элемент управления с несколькими полями свойств в одной строке.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле с несколькими свойствами.</param>
      <param name="valuesIterator">SerializedProperty первого свойства, для которого создается элемент управления.</param>
      <param name="label">Необязательная метка для использования. Если не указано, используется метка самого свойства. Используйте GUIContent.none, чтобы вообще не отображать метку.</param>
      <param name="subLabels">Массив с небольшими метками для отображения перед каждым плавающим полем. В каждом поле есть место только для одной буквы.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.MultiPropertyField(UnityEngine.Rect,UnityEngine.GUIContent[],UnityEditor.SerializedProperty)">
      <summary>
        <para>Создает мульти-элемент управления с несколькими полями свойств в одной строке.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле с несколькими свойствами.</param>
      <param name="valuesIterator">SerializedProperty первого свойства, для которого создается элемент управления.</param>
      <param name="label">Необязательная метка для использования. Если не указано, используется метка самого свойства. Используйте GUIContent.none, чтобы вообще не отображать метку.</param>
      <param name="subLabels">Массив с небольшими метками для отображения перед каждым плавающим полем. В каждом поле есть место только для одной буквы.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.ObjectField(UnityEngine.Rect,UnityEngine.Object,System.Type)">
      <summary>
        <para>Создает поле объекта. Объекты можно назначать либо путем перетаскивания объектов, либо путем выбора объекта с помощью средства выбора объектов.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="obj">Объект, отображаемый в поле.</param>
      <param name="objType">Тип объектов, которые могут быть назначены.</param>
      <param name="allowSceneObjects">Разрешить назначение объектов Scene. Дополнительные сведения см. в разделе Описание.</param>
      <returns>
        <para>Объект, заданный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.ObjectField(UnityEngine.Rect,System.String,UnityEngine.Object,System.Type)">
      <summary>
        <para>Создает поле объекта. Объекты можно назначать либо путем перетаскивания объектов, либо путем выбора объекта с помощью средства выбора объектов.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="obj">Объект, отображаемый в поле.</param>
      <param name="objType">Тип объектов, которые могут быть назначены.</param>
      <param name="allowSceneObjects">Разрешить назначение объектов Scene. Дополнительные сведения см. в разделе Описание.</param>
      <returns>
        <para>Объект, заданный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.ObjectField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Object,System.Type)">
      <summary>
        <para>Создает поле объекта. Объекты можно назначать либо путем перетаскивания объектов, либо путем выбора объекта с помощью средства выбора объектов.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="obj">Объект, отображаемый в поле.</param>
      <param name="objType">Тип объектов, которые могут быть назначены.</param>
      <param name="allowSceneObjects">Разрешить назначение объектов Scene. Дополнительные сведения см. в разделе Описание.</param>
      <returns>
        <para>Объект, заданный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.ObjectField(UnityEngine.Rect,UnityEngine.Object,System.Type,System.Boolean)">
      <summary>
        <para>Создает поле объекта. Объекты можно назначать либо путем перетаскивания объектов, либо путем выбора объекта с помощью средства выбора объектов.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="obj">Объект, отображаемый в поле.</param>
      <param name="objType">Тип объектов, которые могут быть назначены.</param>
      <param name="allowSceneObjects">Разрешить назначение объектов Scene. Дополнительные сведения см. в разделе Описание.</param>
      <returns>
        <para>Объект, заданный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.ObjectField(UnityEngine.Rect,System.String,UnityEngine.Object,System.Type,System.Boolean)">
      <summary>
        <para>Создает поле объекта. Объекты можно назначать либо путем перетаскивания объектов, либо путем выбора объекта с помощью средства выбора объектов.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="obj">Объект, отображаемый в поле.</param>
      <param name="objType">Тип объектов, которые могут быть назначены.</param>
      <param name="allowSceneObjects">Разрешить назначение объектов Scene. Дополнительные сведения см. в разделе Описание.</param>
      <returns>
        <para>Объект, заданный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.ObjectField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Object,System.Type,System.Boolean)">
      <summary>
        <para>Создает поле объекта. Объекты можно назначать либо путем перетаскивания объектов, либо путем выбора объекта с помощью средства выбора объектов.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="obj">Объект, отображаемый в поле.</param>
      <param name="objType">Тип объектов, которые могут быть назначены.</param>
      <param name="allowSceneObjects">Разрешить назначение объектов Scene. Дополнительные сведения см. в разделе Описание.</param>
      <returns>
        <para>Объект, заданный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.ObjectField(UnityEngine.Rect,UnityEditor.SerializedProperty)">
      <summary>
        <para>Создает поле объекта. Объекты можно назначать либо путем перетаскивания объектов, либо путем выбора объекта с помощью средства выбора объектов.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="property">Свойство ссылки на объект, отображаемое в поле.</param>
      <param name="objType">Тип объектов, которые могут быть назначены.</param>
      <param name="label">Необязательная метка для отображения перед полем. Передайте файл GUIContent.none, чтобы скрыть метку.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.ObjectField(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent)">
      <summary>
        <para>Создает поле объекта. Объекты можно назначать либо путем перетаскивания объектов, либо путем выбора объекта с помощью средства выбора объектов.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="property">Свойство ссылки на объект, отображаемое в поле.</param>
      <param name="objType">Тип объектов, которые могут быть назначены.</param>
      <param name="label">Необязательная метка для отображения перед полем. Передайте файл GUIContent.none, чтобы скрыть метку.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.ObjectField(UnityEngine.Rect,UnityEditor.SerializedProperty,System.Type)">
      <summary>
        <para>Создает поле объекта. Объекты можно назначать либо путем перетаскивания объектов, либо путем выбора объекта с помощью средства выбора объектов.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="property">Свойство ссылки на объект, отображаемое в поле.</param>
      <param name="objType">Тип объектов, которые могут быть назначены.</param>
      <param name="label">Необязательная метка для отображения перед полем. Передайте файл GUIContent.none, чтобы скрыть метку.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.ObjectField(UnityEngine.Rect,UnityEditor.SerializedProperty,System.Type,UnityEngine.GUIContent)">
      <summary>
        <para>Создает поле объекта. Объекты можно назначать либо путем перетаскивания объектов, либо путем выбора объекта с помощью средства выбора объектов.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="property">Свойство ссылки на объект, отображаемое в поле.</param>
      <param name="objType">Тип объектов, которые могут быть назначены.</param>
      <param name="label">Необязательная метка для отображения перед полем. Передайте файл GUIContent.none, чтобы скрыть метку.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.PasswordField(UnityEngine.Rect,System.String)">
      <summary>
        <para>Создает текстовое поле, в котором пользователь может ввести пароль.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле пароля.</param>
      <param name="label">Необязательная метка для отображения перед полем пароля.</param>
      <param name="password">Пароль для редактирования.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Пароль, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.PasswordField(UnityEngine.Rect,System.String,System.String)">
      <summary>
        <para>Создает текстовое поле, в котором пользователь может ввести пароль.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле пароля.</param>
      <param name="label">Необязательная метка для отображения перед полем пароля.</param>
      <param name="password">Пароль для редактирования.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Пароль, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.PasswordField(UnityEngine.Rect,UnityEngine.GUIContent,System.String)">
      <summary>
        <para>Создает текстовое поле, в котором пользователь может ввести пароль.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле пароля.</param>
      <param name="label">Необязательная метка для отображения перед полем пароля.</param>
      <param name="password">Пароль для редактирования.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Пароль, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.PasswordField(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает текстовое поле, в котором пользователь может ввести пароль.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле пароля.</param>
      <param name="label">Необязательная метка для отображения перед полем пароля.</param>
      <param name="password">Пароль для редактирования.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Пароль, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.PasswordField(UnityEngine.Rect,System.String,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает текстовое поле, в котором пользователь может ввести пароль.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле пароля.</param>
      <param name="label">Необязательная метка для отображения перед полем пароля.</param>
      <param name="password">Пароль для редактирования.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Пароль, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.PasswordField(UnityEngine.Rect,UnityEngine.GUIContent,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает текстовое поле, в котором пользователь может ввести пароль.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле пароля.</param>
      <param name="label">Необязательная метка для отображения перед полем пароля.</param>
      <param name="password">Пароль для редактирования.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Пароль, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Popup(UnityEngine.Rect,System.Int32,System.String[])">
      <summary>
        <para>Создает универсальное всплывающее поле выбора.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedIndex">Индекс параметра, отображаемого в поле.</param>
      <param name="displayedOptions">Массив с параметрами, отображаемыми во всплывающем окне.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Индекс параметра, выбранного пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Popup(UnityEngine.Rect,System.Int32,UnityEngine.GUIContent[])">
      <summary>
        <para>Создает универсальное всплывающее поле выбора.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedIndex">Индекс параметра, отображаемого в поле.</param>
      <param name="displayedOptions">Массив с параметрами, отображаемыми во всплывающем окне.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Индекс параметра, выбранного пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Popup(UnityEngine.Rect,System.String,System.Int32,System.String[])">
      <summary>
        <para>Создает универсальное всплывающее поле выбора.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedIndex">Индекс параметра, отображаемого в поле.</param>
      <param name="displayedOptions">Массив с параметрами, отображаемыми во всплывающем окне.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Индекс параметра, выбранного пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Popup(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,UnityEngine.GUIContent[])">
      <summary>
        <para>Создает универсальное всплывающее поле выбора.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedIndex">Индекс параметра, отображаемого в поле.</param>
      <param name="displayedOptions">Массив с параметрами, отображаемыми во всплывающем окне.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Индекс параметра, выбранного пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Popup(UnityEngine.Rect,System.Int32,System.String[],UnityEngine.GUIStyle)">
      <summary>
        <para>Создает универсальное всплывающее поле выбора.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedIndex">Индекс параметра, отображаемого в поле.</param>
      <param name="displayedOptions">Массив с параметрами, отображаемыми во всплывающем окне.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Индекс параметра, выбранного пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Popup(UnityEngine.Rect,System.Int32,UnityEngine.GUIContent[],UnityEngine.GUIStyle)">
      <summary>
        <para>Создает универсальное всплывающее поле выбора.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedIndex">Индекс параметра, отображаемого в поле.</param>
      <param name="displayedOptions">Массив с параметрами, отображаемыми во всплывающем окне.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Индекс параметра, выбранного пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Popup(UnityEngine.Rect,System.String,System.Int32,System.String[],UnityEngine.GUIStyle)">
      <summary>
        <para>Создает универсальное всплывающее поле выбора.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedIndex">Индекс параметра, отображаемого в поле.</param>
      <param name="displayedOptions">Массив с параметрами, отображаемыми во всплывающем окне.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Индекс параметра, выбранного пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Popup(UnityEngine.Rect,UnityEngine.GUIContent,System.Int32,UnityEngine.GUIContent[],UnityEngine.GUIStyle)">
      <summary>
        <para>Создает универсальное всплывающее поле выбора.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedIndex">Индекс параметра, отображаемого в поле.</param>
      <param name="displayedOptions">Массив с параметрами, отображаемыми во всплывающем окне.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Индекс параметра, выбранного пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.PrefixLabel(UnityEngine.Rect,UnityEngine.GUIContent)">
      <summary>
        <para>Создает метку перед каким-либо элементом управления.</para>
      </summary>
      <param name="totalPosition">Прямоугольник на экране для использования в целом как для метки, так и для элемента управления.</param>
      <param name="id">Уникальный идентификатор элемента управления. Если не указано, используется идентификатор следующего элемента управления.</param>
      <param name="label">Метка для отображения перед элементом управления.</param>
      <param name="style">Стиль, используемый для метки.</param>
      <returns>
        <para>Прямоугольник на экране для использования только для самого элемента управления.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.PrefixLabel(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает метку перед каким-либо элементом управления.</para>
      </summary>
      <param name="totalPosition">Прямоугольник на экране для использования в целом как для метки, так и для элемента управления.</param>
      <param name="id">Уникальный идентификатор элемента управления. Если не указано, используется идентификатор следующего элемента управления.</param>
      <param name="label">Метка для отображения перед элементом управления.</param>
      <param name="style">Стиль, используемый для метки.</param>
      <returns>
        <para>Прямоугольник на экране для использования только для самого элемента управления.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.PrefixLabel(UnityEngine.Rect,System.Int32,UnityEngine.GUIContent)">
      <summary>
        <para>Создает метку перед каким-либо элементом управления.</para>
      </summary>
      <param name="totalPosition">Прямоугольник на экране для использования в целом как для метки, так и для элемента управления.</param>
      <param name="id">Уникальный идентификатор элемента управления. Если не указано, используется идентификатор следующего элемента управления.</param>
      <param name="label">Метка для отображения перед элементом управления.</param>
      <param name="style">Стиль, используемый для метки.</param>
      <returns>
        <para>Прямоугольник на экране для использования только для самого элемента управления.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.PrefixLabel(UnityEngine.Rect,System.Int32,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает метку перед каким-либо элементом управления.</para>
      </summary>
      <param name="totalPosition">Прямоугольник на экране для использования в целом как для метки, так и для элемента управления.</param>
      <param name="id">Уникальный идентификатор элемента управления. Если не указано, используется идентификатор следующего элемента управления.</param>
      <param name="label">Метка для отображения перед элементом управления.</param>
      <param name="style">Стиль, используемый для метки.</param>
      <returns>
        <para>Прямоугольник на экране для использования только для самого элемента управления.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.ProgressBar(UnityEngine.Rect,System.Single,System.String)">
      <summary>
        <para>Создает индикатор выполнения.</para>
      </summary>
      <param name="totalPosition">Прямоугольник на экране для использования в целом для обоих элементов управления.</param>
      <param name="value">Отображаемое значение.</param>
      <param name="position">
      </param>
      <param name="text">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUI.PropertyField(UnityEngine.Rect,UnityEditor.SerializedProperty,System.Boolean)">
      <summary>
        <para>Используйте его, чтобы создать поле для SerializedProperty в редакторе.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле свойства.</param>
      <param name="property">Объект SerializedProperty, для которого необходимо создать поле.</param>
      <param name="label">Необязательная метка для использования. Если не указано, используется метка самого свойства. Используйте GUIContent.none, чтобы вообще не отображать метку.</param>
      <param name="includeChildren">Если значение true, то рисуется свойство, включающее детей; в противном случае только сам элемент управления (например, только складка, но ничего под ним).</param>
      <returns>
        <para>Значение true, если свойство имеет дочерние объекты, расширено и includeChildren имеет значение false; в противном случае — значение false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.PropertyField(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent,System.Boolean)">
      <summary>
        <para>Используйте его, чтобы создать поле для SerializedProperty в редакторе.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле свойства.</param>
      <param name="property">Объект SerializedProperty, для которого необходимо создать поле.</param>
      <param name="label">Необязательная метка для использования. Если не указано, используется метка самого свойства. Используйте GUIContent.none, чтобы вообще не отображать метку.</param>
      <param name="includeChildren">Если значение true, то рисуется свойство, включающее детей; в противном случае только сам элемент управления (например, только складка, но ничего под ним).</param>
      <returns>
        <para>Значение true, если свойство имеет дочерние объекты, расширено и includeChildren имеет значение false; в противном случае — значение false.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.EditorGUI.PropertyScope">
      <summary>
        <para>Создайте оболочку Свойств, полезную для обеспечения работы обычных элементов управления графического интерфейса пользователя с SerializedProperty.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUI.PropertyScope.content">
      <summary>
        <para>Фактическая метка, используемая для элемента управления.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUI.PropertyScope.#ctor(UnityEngine.Rect,UnityEngine.GUIContent,UnityEditor.SerializedProperty)">
      <summary>
        <para>Создайте новый объект PropertyScope и запустите соответствующее свойство.</para>
      </summary>
      <param name="totalPosition">Прямоугольник на экране, используемый для элемента управления, включая метку, если это применимо.</param>
      <param name="label">Метка перед ползунком. Используйте значение null, чтобы использовать имя из SerializedProperty. Используйте GUIContent.none, чтобы не отображать метку.</param>
      <param name="property">Объект SerializedProperty, используемый для элемента управления.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.RectField(UnityEngine.Rect,UnityEngine.Rect)">
      <summary>
        <para>Создает поле X, Y, W и H для ввода Rect.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка для отображения над полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.RectField(UnityEngine.Rect,System.String,UnityEngine.Rect)">
      <summary>
        <para>Создает поле X, Y, W и H для ввода Rect.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка для отображения над полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.RectField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Rect)">
      <summary>
        <para>Создает поле X, Y, W и H для ввода Rect.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка для отображения над полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.RectField">
      <summary>
        <para>Создает значения X, Y, W и H для Rect с помощью SerializedProperty (не общедоступной).</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUI.RectIntField(UnityEngine.Rect,UnityEngine.RectInt)">
      <summary>
        <para>Создает поле X, Y, W и H для ввода RectInt.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка для отображения над полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.RectIntField(UnityEngine.Rect,System.String,UnityEngine.RectInt)">
      <summary>
        <para>Создает поле X, Y, W и H для ввода RectInt.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка для отображения над полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.RectIntField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.RectInt)">
      <summary>
        <para>Создает поле X, Y, W и H для ввода RectInt.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка для отображения над полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.SelectableLabel(UnityEngine.Rect,System.String)">
      <summary>
        <para>Создает выбираемое поле метки. (Полезно для отображения информации только для чтения, которую можно копировать и вставлять.)</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве метки.</param>
      <param name="text">Отображаемый текст.</param>
      <param name="style">Дополнительный GUIStyle.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.SelectableLabel(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает выбираемое поле метки. (Полезно для отображения информации только для чтения, которую можно копировать и вставлять.)</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в качестве метки.</param>
      <param name="text">Отображаемый текст.</param>
      <param name="style">Дополнительный GUIStyle.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.Slider(UnityEngine.Rect,System.Single,System.Single,System.Single)">
      <summary>
        <para>Создает ползунок, который пользователь может перетащить, чтобы изменить значение между min и max.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в ползунке.</param>
      <param name="label">Дополнительная метка перед ползунком.</param>
      <param name="value">Значение, отображаемое ползунком. Это определяет положение перетаскиваемого большого пальца.</param>
      <param name="leftValue">Значение в левом конце ползунка.</param>
      <param name="rightValue">Значение в правом конце ползунка.</param>
      <returns>
        <para>Значение, заданное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Slider(UnityEngine.Rect,System.String,System.Single,System.Single,System.Single)">
      <summary>
        <para>Создает ползунок, который пользователь может перетащить, чтобы изменить значение между min и max.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в ползунке.</param>
      <param name="label">Дополнительная метка перед ползунком.</param>
      <param name="value">Значение, отображаемое ползунком. Это определяет положение перетаскиваемого большого пальца.</param>
      <param name="leftValue">Значение в левом конце ползунка.</param>
      <param name="rightValue">Значение в правом конце ползунка.</param>
      <returns>
        <para>Значение, заданное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Slider(UnityEngine.Rect,UnityEngine.GUIContent,System.Single,System.Single,System.Single)">
      <summary>
        <para>Создает ползунок, который пользователь может перетащить, чтобы изменить значение между min и max.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в ползунке.</param>
      <param name="label">Дополнительная метка перед ползунком.</param>
      <param name="value">Значение, отображаемое ползунком. Это определяет положение перетаскиваемого большого пальца.</param>
      <param name="leftValue">Значение в левом конце ползунка.</param>
      <param name="rightValue">Значение в правом конце ползунка.</param>
      <returns>
        <para>Значение, заданное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Slider(UnityEngine.Rect,UnityEditor.SerializedProperty,System.Single,System.Single)">
      <summary>
        <para>Создает ползунок, который пользователь может перетащить, чтобы изменить значение между min и max.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в ползунке.</param>
      <param name="label">Дополнительная метка перед ползунком.</param>
      <param name="property">Значение, отображаемое ползунком. Это определяет положение перетаскиваемого большого пальца.</param>
      <param name="leftValue">Значение в левом конце ползунка.</param>
      <param name="rightValue">Значение в правом конце ползунка.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.Slider(UnityEngine.Rect,UnityEditor.SerializedProperty,System.Single,System.Single,System.String)">
      <summary>
        <para>Создает ползунок, который пользователь может перетащить, чтобы изменить значение между min и max.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в ползунке.</param>
      <param name="label">Дополнительная метка перед ползунком.</param>
      <param name="property">Значение, отображаемое ползунком. Это определяет положение перетаскиваемого большого пальца.</param>
      <param name="leftValue">Значение в левом конце ползунка.</param>
      <param name="rightValue">Значение в правом конце ползунка.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.Slider(UnityEngine.Rect,UnityEditor.SerializedProperty,System.Single,System.Single,UnityEngine.GUIContent)">
      <summary>
        <para>Создает ползунок, который пользователь может перетащить, чтобы изменить значение между min и max.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в ползунке.</param>
      <param name="label">Дополнительная метка перед ползунком.</param>
      <param name="property">Значение, отображаемое ползунком. Это определяет положение перетаскиваемого большого пальца.</param>
      <param name="leftValue">Значение в левом конце ползунка.</param>
      <param name="rightValue">Значение в правом конце ползунка.</param>
    </member>
    <member name="M:UnityEditor.EditorGUI.TagField(UnityEngine.Rect,System.String)">
      <summary>
        <para>Создает поле выбора тега.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="tag">Тег, отображаемый в поле.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Тег, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.TagField(UnityEngine.Rect,System.String,System.String)">
      <summary>
        <para>Создает поле выбора тега.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="tag">Тег, отображаемый в поле.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Тег, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.TagField(UnityEngine.Rect,UnityEngine.GUIContent,System.String)">
      <summary>
        <para>Создает поле выбора тега.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="tag">Тег, отображаемый в поле.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Тег, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.TagField(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает поле выбора тега.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="tag">Тег, отображаемый в поле.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Тег, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.TagField(UnityEngine.Rect,System.String,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает поле выбора тега.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="tag">Тег, отображаемый в поле.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Тег, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.TagField(UnityEngine.Rect,UnityEngine.GUIContent,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает поле выбора тега.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="tag">Тег, отображаемый в поле.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Тег, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.TextArea(UnityEngine.Rect,System.String)">
      <summary>
        <para>Создает текстовую область.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в текстовом поле.</param>
      <param name="text">Редактируемый текст.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Текст, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.TextArea(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает текстовую область.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в текстовом поле.</param>
      <param name="text">Редактируемый текст.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Текст, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.TextField(UnityEngine.Rect,System.String)">
      <summary>
        <para>Создает текстовое поле.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в текстовом поле.</param>
      <param name="label">Необязательная метка для отображения перед текстовым полем.</param>
      <param name="text">Редактируемый текст.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Текст, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.TextField(UnityEngine.Rect,System.String,System.String)">
      <summary>
        <para>Создает текстовое поле.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в текстовом поле.</param>
      <param name="label">Необязательная метка для отображения перед текстовым полем.</param>
      <param name="text">Редактируемый текст.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Текст, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.TextField(UnityEngine.Rect,UnityEngine.GUIContent,System.String)">
      <summary>
        <para>Создает текстовое поле.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в текстовом поле.</param>
      <param name="label">Необязательная метка для отображения перед текстовым полем.</param>
      <param name="text">Редактируемый текст.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Текст, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.TextField(UnityEngine.Rect,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает текстовое поле.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в текстовом поле.</param>
      <param name="label">Необязательная метка для отображения перед текстовым полем.</param>
      <param name="text">Редактируемый текст.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Текст, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.TextField(UnityEngine.Rect,System.String,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает текстовое поле.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в текстовом поле.</param>
      <param name="label">Необязательная метка для отображения перед текстовым полем.</param>
      <param name="text">Редактируемый текст.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Текст, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.TextField(UnityEngine.Rect,UnityEngine.GUIContent,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает текстовое поле.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в текстовом поле.</param>
      <param name="label">Необязательная метка для отображения перед текстовым полем.</param>
      <param name="text">Редактируемый текст.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Текст, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Toggle(UnityEngine.Rect,System.Boolean)">
      <summary>
        <para>Делает переключатель.</para>
      </summary>
      <param name="position">Прямоугольник на экране, используемый для переключения.</param>
      <param name="label">Дополнительная метка перед переключателем.</param>
      <param name="value">Показанное состояние переключателя.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Выбранное состояние переключателя.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Toggle(UnityEngine.Rect,System.String,System.Boolean)">
      <summary>
        <para>Делает переключатель.</para>
      </summary>
      <param name="position">Прямоугольник на экране, используемый для переключения.</param>
      <param name="label">Дополнительная метка перед переключателем.</param>
      <param name="value">Показанное состояние переключателя.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Выбранное состояние переключателя.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Toggle(UnityEngine.Rect,System.Boolean,UnityEngine.GUIStyle)">
      <summary>
        <para>Делает переключатель.</para>
      </summary>
      <param name="position">Прямоугольник на экране, используемый для переключения.</param>
      <param name="label">Дополнительная метка перед переключателем.</param>
      <param name="value">Показанное состояние переключателя.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Выбранное состояние переключателя.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Toggle(UnityEngine.Rect,System.String,System.Boolean,UnityEngine.GUIStyle)">
      <summary>
        <para>Делает переключатель.</para>
      </summary>
      <param name="position">Прямоугольник на экране, используемый для переключения.</param>
      <param name="label">Дополнительная метка перед переключателем.</param>
      <param name="value">Показанное состояние переключателя.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Выбранное состояние переключателя.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Toggle(UnityEngine.Rect,UnityEngine.GUIContent,System.Boolean)">
      <summary>
        <para>Делает переключатель.</para>
      </summary>
      <param name="position">Прямоугольник на экране, используемый для переключения.</param>
      <param name="label">Дополнительная метка перед переключателем.</param>
      <param name="value">Показанное состояние переключателя.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Выбранное состояние переключателя.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Toggle(UnityEngine.Rect,UnityEngine.GUIContent,System.Boolean,UnityEngine.GUIStyle)">
      <summary>
        <para>Делает переключатель.</para>
      </summary>
      <param name="position">Прямоугольник на экране, используемый для переключения.</param>
      <param name="label">Дополнительная метка перед переключателем.</param>
      <param name="value">Показанное состояние переключателя.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <returns>
        <para>Выбранное состояние переключателя.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.ToggleLeft(UnityEngine.Rect,System.String,System.Boolean)">
      <summary>
        <para>Создает поле переключения, где переключатель находится слева, а метка непосредственно справа от него.</para>
      </summary>
      <param name="position">Прямоугольник на экране, используемый для переключения.</param>
      <param name="label">Метка для отображения рядом с переключателем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="labelStyle">Необязательный GUIStyle для использования для метки.</param>
      <returns>
        <para>Значение, заданное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.ToggleLeft(UnityEngine.Rect,System.String,System.Boolean,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает поле переключения, где переключатель находится слева, а метка непосредственно справа от него.</para>
      </summary>
      <param name="position">Прямоугольник на экране, используемый для переключения.</param>
      <param name="label">Метка для отображения рядом с переключателем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="labelStyle">Необязательный GUIStyle для использования для метки.</param>
      <returns>
        <para>Значение, заданное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.ToggleLeft(UnityEngine.Rect,UnityEngine.GUIContent,System.Boolean)">
      <summary>
        <para>Создает поле переключения, где переключатель находится слева, а метка непосредственно справа от него.</para>
      </summary>
      <param name="position">Прямоугольник на экране, используемый для переключения.</param>
      <param name="label">Метка для отображения рядом с переключателем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="labelStyle">Необязательный GUIStyle для использования для метки.</param>
      <returns>
        <para>Значение, заданное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.ToggleLeft(UnityEngine.Rect,UnityEngine.GUIContent,System.Boolean,UnityEngine.GUIStyle)">
      <summary>
        <para>Создает поле переключения, где переключатель находится слева, а метка непосредственно справа от него.</para>
      </summary>
      <param name="position">Прямоугольник на экране, используемый для переключения.</param>
      <param name="label">Метка для отображения рядом с переключателем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="labelStyle">Необязательный GUIStyle для использования для метки.</param>
      <returns>
        <para>Значение, заданное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Vector2Field(UnityEngine.Rect,System.String,UnityEngine.Vector2)">
      <summary>
        <para>Создает поле X и Y для ввода Vector2.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Vector2Field(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Vector2)">
      <summary>
        <para>Создает поле X и Y для ввода Vector2.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Vector2IntField(UnityEngine.Rect,System.String,UnityEngine.Vector2Int)">
      <summary>
        <para>Создает целочисленное поле X и Y для ввода Vector2Int.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Vector2IntField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Vector2Int)">
      <summary>
        <para>Создает целочисленное поле X и Y для ввода Vector2Int.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Vector3Field(UnityEngine.Rect,System.String,UnityEngine.Vector3)">
      <summary>
        <para>Создает поле X, Y и Z для ввода Vector3.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Vector3Field(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Vector3)">
      <summary>
        <para>Создает поле X, Y и Z для ввода Vector3.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Vector3IntField(UnityEngine.Rect,System.String,UnityEngine.Vector3Int)">
      <summary>
        <para>Создает целочисленное поле X, Y и Z для ввода объекта Vector3Int.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Vector3IntField(UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.Vector3Int)">
      <summary>
        <para>Создает целочисленное поле X, Y и Z для ввода объекта Vector3Int.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUI.Vector4Field(UnityEngine.Rect,System.String,UnityEngine.Vector4)">
      <summary>
        <para>Создает поле X, Y, Z и W для ввода Vector4.</para>
      </summary>
      <param name="position">Прямоугольник на экране для использования в поле.</param>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.EditorGUILayout">
      <summary>
        <para>Автоматически выложенная версия EditorGUI.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BeginBuildTargetSelectionGrouping">
      <summary>
        <para>Начните целевую группу сборки и верните выбранную BuildTargetGroup.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BeginFadeGroup(System.Single)">
      <summary>
        <para>Начинается группа, которую можно скрыть/показать, и переход будет анимирован.</para>
      </summary>
      <param name="value">Значение от 0 до 1, 0 скрыто, а 1 полностью видно.</param>
      <returns>
        <para>Если группа видна или нет.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BeginFoldoutHeaderGroup(System.Boolean,System.String,UnityEngine.GUIStyle,System.Action`1&lt;UnityEngine.Rect&gt;,UnityEngine.GUIStyle)">
      <summary>
        <para>Сделайте этикетку с откидной стрелкой слева от нее.</para>
      </summary>
      <param name="foldout">Показанное состояние складывания.</param>
      <param name="content">Отображаемая метка.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="menuAction">Действие, выполняемое при щелчке значка.</param>
      <param name="menuIcon">Дополнительный GUIStyle для значка.</param>
      <returns>
        <para>Состояние складывания, выбранное пользователем. Если значение равно true, следует отобразить подобъекты.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BeginFoldoutHeaderGroup(System.Boolean,UnityEngine.GUIContent,UnityEngine.GUIStyle,System.Action`1&lt;UnityEngine.Rect&gt;,UnityEngine.GUIStyle)">
      <summary>
        <para>Сделайте этикетку с откидной стрелкой слева от нее.</para>
      </summary>
      <param name="foldout">Показанное состояние складывания.</param>
      <param name="content">Отображаемая метка.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="menuAction">Действие, выполняемое при щелчке значка.</param>
      <param name="menuIcon">Дополнительный GUIStyle для значка.</param>
      <returns>
        <para>Состояние складывания, выбранное пользователем. Если значение равно true, следует отобразить подобъекты.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BeginHorizontal(UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Начните горизонтальную группу и верните ее обратно.</para>
      </summary>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BeginHorizontal(UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Начните горизонтальную группу и верните ее обратно.</para>
      </summary>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BeginScrollView(UnityEngine.Vector2,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Начните автоматически выложенное представление прокрутки.</para>
      </summary>
      <param name="scrollPosition">Позиция для использования дисплея.</param>
      <param name="alwayShowHorizontal">Необязательный параметр, чтобы всегда отображать горизонтальную полосу прокрутки. Если значение false или опущено, оно отображается только в том случае, если содержимое внутри ScrollView шире, чем само представление прокрутки.</param>
      <param name="alwayShowVertical">Необязательный параметр, чтобы всегда отображать вертикальную полосу прокрутки. Если значение false или опущено, оно отображается только в том случае, если содержимое внутри ScrollView выше, чем само представление scrollview.</param>
      <param name="horizontalScrollbar">Дополнительный GUIStyle для горизонтальной полосы прокрутки. Если его исключить, используется стиль horizontalScrollbar из текущего GUISkin.</param>
      <param name="verticalScrollbar">Дополнительный GUIStyle для вертикальной полосы прокрутки. Если исключить, используется вертикальный стиль Scrollbar из текущего GUISkin.</param>
      <param name="options">
      </param>
      <param name="alwaysShowHorizontal">
      </param>
      <param name="alwaysShowVertical">
      </param>
      <param name="background">
      </param>
      <returns>
        <para>Измененная прокруткаПозиция. Передайте его обратно в передаваемую переменную, как показано в примере.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BeginScrollView(UnityEngine.Vector2,System.Boolean,System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Начните автоматически выложенное представление прокрутки.</para>
      </summary>
      <param name="scrollPosition">Позиция для использования дисплея.</param>
      <param name="alwayShowHorizontal">Необязательный параметр, чтобы всегда отображать горизонтальную полосу прокрутки. Если значение false или опущено, оно отображается только в том случае, если содержимое внутри ScrollView шире, чем само представление прокрутки.</param>
      <param name="alwayShowVertical">Необязательный параметр, чтобы всегда отображать вертикальную полосу прокрутки. Если значение false или опущено, оно отображается только в том случае, если содержимое внутри ScrollView выше, чем само представление scrollview.</param>
      <param name="horizontalScrollbar">Дополнительный GUIStyle для горизонтальной полосы прокрутки. Если его исключить, используется стиль horizontalScrollbar из текущего GUISkin.</param>
      <param name="verticalScrollbar">Дополнительный GUIStyle для вертикальной полосы прокрутки. Если исключить, используется вертикальный стиль Scrollbar из текущего GUISkin.</param>
      <param name="options">
      </param>
      <param name="alwaysShowHorizontal">
      </param>
      <param name="alwaysShowVertical">
      </param>
      <param name="background">
      </param>
      <returns>
        <para>Измененная прокруткаПозиция. Передайте его обратно в передаваемую переменную, как показано в примере.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BeginScrollView(UnityEngine.Vector2,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Начните автоматически выложенное представление прокрутки.</para>
      </summary>
      <param name="scrollPosition">Позиция для использования дисплея.</param>
      <param name="alwayShowHorizontal">Необязательный параметр, чтобы всегда отображать горизонтальную полосу прокрутки. Если значение false или опущено, оно отображается только в том случае, если содержимое внутри ScrollView шире, чем само представление прокрутки.</param>
      <param name="alwayShowVertical">Необязательный параметр, чтобы всегда отображать вертикальную полосу прокрутки. Если значение false или опущено, оно отображается только в том случае, если содержимое внутри ScrollView выше, чем само представление scrollview.</param>
      <param name="horizontalScrollbar">Дополнительный GUIStyle для горизонтальной полосы прокрутки. Если его исключить, используется стиль horizontalScrollbar из текущего GUISkin.</param>
      <param name="verticalScrollbar">Дополнительный GUIStyle для вертикальной полосы прокрутки. Если исключить, используется вертикальный стиль Scrollbar из текущего GUISkin.</param>
      <param name="options">
      </param>
      <param name="alwaysShowHorizontal">
      </param>
      <param name="alwaysShowVertical">
      </param>
      <param name="background">
      </param>
      <returns>
        <para>Измененная прокруткаПозиция. Передайте его обратно в передаваемую переменную, как показано в примере.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BeginScrollView">
      <summary>
        <para>Начните автоматически выложенное представление прокрутки.</para>
      </summary>
      <param name="scrollPosition">Позиция для использования дисплея.</param>
      <param name="alwayShowHorizontal">Необязательный параметр, чтобы всегда отображать горизонтальную полосу прокрутки. Если значение false или опущено, оно отображается только в том случае, если содержимое внутри ScrollView шире, чем само представление прокрутки.</param>
      <param name="alwayShowVertical">Необязательный параметр, чтобы всегда отображать вертикальную полосу прокрутки. Если значение false или опущено, оно отображается только в том случае, если содержимое внутри ScrollView выше, чем само представление scrollview.</param>
      <param name="horizontalScrollbar">Дополнительный GUIStyle для горизонтальной полосы прокрутки. Если его исключить, используется стиль horizontalScrollbar из текущего GUISkin.</param>
      <param name="verticalScrollbar">Дополнительный GUIStyle для вертикальной полосы прокрутки. Если исключить, используется вертикальный стиль Scrollbar из текущего GUISkin.</param>
      <param name="options">
      </param>
      <param name="alwaysShowHorizontal">
      </param>
      <param name="alwaysShowVertical">
      </param>
      <param name="background">
      </param>
      <returns>
        <para>Измененная прокруткаПозиция. Передайте его обратно в передаваемую переменную, как показано в примере.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BeginScrollView(UnityEngine.Vector2,System.Boolean,System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Начните автоматически выложенное представление прокрутки.</para>
      </summary>
      <param name="scrollPosition">Позиция для использования дисплея.</param>
      <param name="alwayShowHorizontal">Необязательный параметр, чтобы всегда отображать горизонтальную полосу прокрутки. Если значение false или опущено, оно отображается только в том случае, если содержимое внутри ScrollView шире, чем само представление прокрутки.</param>
      <param name="alwayShowVertical">Необязательный параметр, чтобы всегда отображать вертикальную полосу прокрутки. Если значение false или опущено, оно отображается только в том случае, если содержимое внутри ScrollView выше, чем само представление scrollview.</param>
      <param name="horizontalScrollbar">Дополнительный GUIStyle для горизонтальной полосы прокрутки. Если его исключить, используется стиль horizontalScrollbar из текущего GUISkin.</param>
      <param name="verticalScrollbar">Дополнительный GUIStyle для вертикальной полосы прокрутки. Если исключить, используется вертикальный стиль Scrollbar из текущего GUISkin.</param>
      <param name="options">
      </param>
      <param name="alwaysShowHorizontal">
      </param>
      <param name="alwaysShowVertical">
      </param>
      <param name="background">
      </param>
      <returns>
        <para>Измененная прокруткаПозиция. Передайте его обратно в передаваемую переменную, как показано в примере.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BeginToggleGroup(System.String,System.Boolean)">
      <summary>
        <para>Начните вертикальную группу с помощью переключателя, чтобы включить или отключить все элементы управления внутри одновременно.</para>
      </summary>
      <param name="label">Метка, отображаемая над переключаемыми элементами управления.</param>
      <param name="toggle">Включенное состояние группы переключателей.</param>
      <returns>
        <para>Включенное состояние, выбранное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BeginToggleGroup(UnityEngine.GUIContent,System.Boolean)">
      <summary>
        <para>Начните вертикальную группу с помощью переключателя, чтобы включить или отключить все элементы управления внутри одновременно.</para>
      </summary>
      <param name="label">Метка, отображаемая над переключаемыми элементами управления.</param>
      <param name="toggle">Включенное состояние группы переключателей.</param>
      <returns>
        <para>Включенное состояние, выбранное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BeginVertical(UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Начните вертикальную группу и верните ее обратно.</para>
      </summary>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета.         Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BeginVertical(UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Начните вертикальную группу и верните ее обратно.</para>
      </summary>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета.         Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BeginVertical">
      <summary>
        <para>Начните вертикальную группу и верните ее обратно.</para>
      </summary>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета.         Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BoundsField(UnityEngine.Bounds,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создать поле «Центр и экстенты» для ввода границ.</para>
      </summary>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BoundsField(System.String,UnityEngine.Bounds,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создать поле «Центр и экстенты» для ввода границ.</para>
      </summary>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BoundsField(UnityEngine.GUIContent,UnityEngine.Bounds,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создать поле «Центр и экстенты» для ввода границ.</para>
      </summary>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BoundsIntField(UnityEngine.BoundsInt,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле «Позиция и размер» для ввода BoundsInt.</para>
      </summary>
      <param name="label">Создайте поле «Позиция и размер» для ввода границ.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BoundsIntField(System.String,UnityEngine.BoundsInt,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле «Позиция и размер» для ввода BoundsInt.</para>
      </summary>
      <param name="label">Создайте поле «Позиция и размер» для ввода границ.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.BoundsIntField(UnityEngine.GUIContent,UnityEngine.BoundsInt,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле «Позиция и размер» для ввода BoundsInt.</para>
      </summary>
      <param name="label">Создайте поле «Позиция и размер» для ввода границ.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ColorField(UnityEngine.Color,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для выбора цвета.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Цвет для редактирования.</param>
      <param name="showEyedropper">Если значение равно true, палитра цветов должна отобразить элемент управления пипеткой. Если значение равно false, не показывайте его.</param>
      <param name="showAlpha">Если значение равно true, разрешите пользователю задать значение альфа-канала для цвета. Если значение равно false, скройте альфа-компонент.</param>
      <param name="hdr">Если значение равно true, обработайте цвет как значение HDR. Если значение равно false, рассматривайте его как стандартное значение LDR.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="hdrConfig">
      </param>
      <returns>
        <para>Цвет, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ColorField(System.String,UnityEngine.Color,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для выбора цвета.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Цвет для редактирования.</param>
      <param name="showEyedropper">Если значение равно true, палитра цветов должна отобразить элемент управления пипеткой. Если значение равно false, не показывайте его.</param>
      <param name="showAlpha">Если значение равно true, разрешите пользователю задать значение альфа-канала для цвета. Если значение равно false, скройте альфа-компонент.</param>
      <param name="hdr">Если значение равно true, обработайте цвет как значение HDR. Если значение равно false, рассматривайте его как стандартное значение LDR.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="hdrConfig">
      </param>
      <returns>
        <para>Цвет, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ColorField(UnityEngine.GUIContent,UnityEngine.Color,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для выбора цвета.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Цвет для редактирования.</param>
      <param name="showEyedropper">Если значение равно true, палитра цветов должна отобразить элемент управления пипеткой. Если значение равно false, не показывайте его.</param>
      <param name="showAlpha">Если значение равно true, разрешите пользователю задать значение альфа-канала для цвета. Если значение равно false, скройте альфа-компонент.</param>
      <param name="hdr">Если значение равно true, обработайте цвет как значение HDR. Если значение равно false, рассматривайте его как стандартное значение LDR.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="hdrConfig">
      </param>
      <returns>
        <para>Цвет, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ColorField(UnityEngine.GUIContent,UnityEngine.Color,System.Boolean,System.Boolean,System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для выбора цвета.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Цвет для редактирования.</param>
      <param name="showEyedropper">Если значение равно true, палитра цветов должна отобразить элемент управления пипеткой. Если значение равно false, не показывайте его.</param>
      <param name="showAlpha">Если значение равно true, разрешите пользователю задать значение альфа-канала для цвета. Если значение равно false, скройте альфа-компонент.</param>
      <param name="hdr">Если значение равно true, обработайте цвет как значение HDR. Если значение равно false, рассматривайте его как стандартное значение LDR.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="hdrConfig">
      </param>
      <returns>
        <para>Цвет, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ColorField(UnityEngine.GUIContent,UnityEngine.Color,System.Boolean,System.Boolean,System.Boolean,UnityEditor.ColorPickerHDRConfig,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для выбора цвета.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Цвет для редактирования.</param>
      <param name="showEyedropper">Если значение равно true, палитра цветов должна отобразить элемент управления пипеткой. Если значение равно false, не показывайте его.</param>
      <param name="showAlpha">Если значение равно true, разрешите пользователю задать значение альфа-канала для цвета. Если значение равно false, скройте альфа-компонент.</param>
      <param name="hdr">Если значение равно true, обработайте цвет как значение HDR. Если значение равно false, рассматривайте его как стандартное значение LDR.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="hdrConfig">
      </param>
      <returns>
        <para>Цвет, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.CurveField(UnityEngine.AnimationCurve,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для редактирования AnimationCurve.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Кривая для редактирования.</param>
      <param name="color">Цвет, с помощью которого отображается кривая.</param>
      <param name="ranges">Необязательный прямоугольник, внутри которого ограничена кривая.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Кривая, отредактированная пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.CurveField(System.String,UnityEngine.AnimationCurve,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для редактирования AnimationCurve.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Кривая для редактирования.</param>
      <param name="color">Цвет, с помощью которого отображается кривая.</param>
      <param name="ranges">Необязательный прямоугольник, внутри которого ограничена кривая.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Кривая, отредактированная пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.CurveField(UnityEngine.GUIContent,UnityEngine.AnimationCurve,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для редактирования AnimationCurve.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Кривая для редактирования.</param>
      <param name="color">Цвет, с помощью которого отображается кривая.</param>
      <param name="ranges">Необязательный прямоугольник, внутри которого ограничена кривая.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Кривая, отредактированная пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.CurveField(UnityEngine.AnimationCurve,UnityEngine.Color,UnityEngine.Rect,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для редактирования AnimationCurve.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Кривая для редактирования.</param>
      <param name="color">Цвет, с помощью которого отображается кривая.</param>
      <param name="ranges">Необязательный прямоугольник, внутри которого ограничена кривая.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Кривая, отредактированная пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.CurveField(System.String,UnityEngine.AnimationCurve,UnityEngine.Color,UnityEngine.Rect,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для редактирования AnimationCurve.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Кривая для редактирования.</param>
      <param name="color">Цвет, с помощью которого отображается кривая.</param>
      <param name="ranges">Необязательный прямоугольник, внутри которого ограничена кривая.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Кривая, отредактированная пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.CurveField(UnityEngine.GUIContent,UnityEngine.AnimationCurve,UnityEngine.Color,UnityEngine.Rect,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для редактирования AnimationCurve.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Кривая для редактирования.</param>
      <param name="color">Цвет, с помощью которого отображается кривая.</param>
      <param name="ranges">Необязательный прямоугольник, внутри которого ограничена кривая.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Кривая, отредактированная пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.CurveField(UnityEditor.SerializedProperty,UnityEngine.Color,UnityEngine.Rect,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для редактирования AnimationCurve.</para>
      </summary>
      <param name="property">Кривая для редактирования.</param>
      <param name="color">Цвет, с помощью которого отображается кривая.</param>
      <param name="ranges">Необязательный прямоугольник, внутри которого ограничена кривая.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="label">Необязательная метка для отображения перед полем. Передайте [[GUIContent.none], чтобы скрыть метку.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.CurveField(UnityEditor.SerializedProperty,UnityEngine.Color,UnityEngine.Rect,UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для редактирования AnimationCurve.</para>
      </summary>
      <param name="property">Кривая для редактирования.</param>
      <param name="color">Цвет, с помощью которого отображается кривая.</param>
      <param name="ranges">Необязательный прямоугольник, внутри которого ограничена кривая.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="label">Необязательная метка для отображения перед полем. Передайте [[GUIContent.none], чтобы скрыть метку.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedDoubleField(System.Double,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле для ввода двойников.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед двойным полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">           Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.         </param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет клавишу ВВОД или фокус не будет смещен от двойного поля.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedDoubleField(System.Double,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле для ввода двойников.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед двойным полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">           Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.         </param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет клавишу ВВОД или фокус не будет смещен от двойного поля.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedDoubleField(System.String,System.Double,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле для ввода двойников.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед двойным полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">           Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.         </param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет клавишу ВВОД или фокус не будет смещен от двойного поля.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedDoubleField(System.String,System.Double,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле для ввода двойников.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед двойным полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">           Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.         </param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет клавишу ВВОД или фокус не будет смещен от двойного поля.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedDoubleField(UnityEngine.GUIContent,System.Double,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле для ввода двойников.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед двойным полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">           Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.         </param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет клавишу ВВОД или фокус не будет смещен от двойного поля.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedDoubleField(UnityEngine.GUIContent,System.Double,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле для ввода двойников.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед двойным полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">           Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.         </param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет клавишу ВВОД или фокус не будет смещен от двойного поля.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedDoubleField">
      <summary>
        <para>Создайте отложенное текстовое поле для ввода двойников.</para>
      </summary>
      <param name="property">Свойство double для редактирования.</param>
      <param name="label">Необязательная метка для отображения перед двойным полем. Передайте GUIContent.none, чтобы скрыть метку.</param>
      <param name="options">           Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.         </param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedDoubleField">
      <summary>
        <para>Создайте отложенное текстовое поле для ввода двойников.</para>
      </summary>
      <param name="property">Свойство double для редактирования.</param>
      <param name="label">Необязательная метка для отображения перед двойным полем. Передайте GUIContent.none, чтобы скрыть метку.</param>
      <param name="options">           Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.         </param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedFloatField(System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле для ввода плавающих точек.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед плавающим полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет клавишу ВВОД или фокус не будет смещен от поля float.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedFloatField(System.Single,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле для ввода плавающих точек.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед плавающим полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет клавишу ВВОД или фокус не будет смещен от поля float.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedFloatField(System.String,System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле для ввода плавающих точек.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед плавающим полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет клавишу ВВОД или фокус не будет смещен от поля float.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedFloatField(System.String,System.Single,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле для ввода плавающих точек.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед плавающим полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет клавишу ВВОД или фокус не будет смещен от поля float.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedFloatField(UnityEngine.GUIContent,System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле для ввода плавающих точек.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед плавающим полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет клавишу ВВОД или фокус не будет смещен от поля float.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedFloatField(UnityEngine.GUIContent,System.Single,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле для ввода плавающих точек.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед плавающим полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет клавишу ВВОД или фокус не будет смещен от поля float.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedFloatField(UnityEditor.SerializedProperty,UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле для ввода плавающих точек.</para>
      </summary>
      <param name="property">Свойство float для редактирования.</param>
      <param name="label">Необязательная метка для отображения перед плавающим полем. Передайте GUIContent.none, чтобы скрыть метку.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedFloatField(UnityEditor.SerializedProperty,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле для ввода плавающих точек.</para>
      </summary>
      <param name="property">Свойство float для редактирования.</param>
      <param name="label">Необязательная метка для отображения перед плавающим полем. Передайте GUIContent.none, чтобы скрыть метку.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedIntField(System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле для ввода целых чисел.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет клавишу ВВОД или фокус не будет перемещен из поля int.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedIntField(System.Int32,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле для ввода целых чисел.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет клавишу ВВОД или фокус не будет перемещен из поля int.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedIntField(System.String,System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле для ввода целых чисел.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет клавишу ВВОД или фокус не будет перемещен из поля int.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedIntField(System.String,System.Int32,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле для ввода целых чисел.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет клавишу ВВОД или фокус не будет перемещен из поля int.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedIntField(UnityEngine.GUIContent,System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле для ввода целых чисел.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет клавишу ВВОД или фокус не будет перемещен из поля int.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedIntField(UnityEngine.GUIContent,System.Int32,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле для ввода целых чисел.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет клавишу ВВОД или фокус не будет перемещен из поля int.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedIntField(UnityEditor.SerializedProperty,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле для ввода целых чисел.</para>
      </summary>
      <param name="property">Редактируемое свойство int.</param>
      <param name="label">Необязательная метка для отображения перед полем int. Передайте GUIContent.none, чтобы скрыть метку.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedIntField(UnityEditor.SerializedProperty,UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле для ввода целых чисел.</para>
      </summary>
      <param name="property">Редактируемое свойство int.</param>
      <param name="label">Необязательная метка для отображения перед полем int. Передайте GUIContent.none, чтобы скрыть метку.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedTextField(System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="text">Редактируемый текст.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет клавишу ВВОД или фокус не будет смещен из текстового поля.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedTextField(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="text">Редактируемый текст.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет клавишу ВВОД или фокус не будет смещен из текстового поля.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedTextField(System.String,System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="text">Редактируемый текст.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет клавишу ВВОД или фокус не будет смещен из текстового поля.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedTextField(System.String,System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="text">Редактируемый текст.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет клавишу ВВОД или фокус не будет смещен из текстового поля.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedTextField(UnityEngine.GUIContent,System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="text">Редактируемый текст.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет клавишу ВВОД или фокус не будет смещен из текстового поля.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedTextField(UnityEngine.GUIContent,System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="text">Редактируемый текст.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем. Обратите внимание, что возвращаемое значение не изменится до тех пор, пока пользователь не нажмет клавишу ВВОД или фокус не будет смещен из текстового поля.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedTextField(UnityEditor.SerializedProperty,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле.</para>
      </summary>
      <param name="property">Свойство text, которое требуется изменить.</param>
      <param name="label">Необязательная метка для отображения перед полем int. Передайте GUIContent.none, чтобы скрыть метку.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DelayedTextField(UnityEditor.SerializedProperty,UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте отложенное текстовое поле.</para>
      </summary>
      <param name="property">Свойство text, которое требуется изменить.</param>
      <param name="label">Необязательная метка для отображения перед полем int. Передайте GUIContent.none, чтобы скрыть метку.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DoubleField(System.Double,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле для ввода двойных значений.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед двойным полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DoubleField(System.Double,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле для ввода двойных значений.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед двойным полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DoubleField(System.String,System.Double,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле для ввода двойных значений.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед двойным полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DoubleField(System.String,System.Double,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле для ввода двойных значений.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед двойным полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DoubleField(UnityEngine.GUIContent,System.Double,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле для ввода двойных значений.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед двойным полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DoubleField(UnityEngine.GUIContent,System.Double,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле для ввода двойных значений.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед двойным полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DropdownButton(UnityEngine.GUIContent,UnityEngine.FocusType,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте кнопку, которая реагирует на опущенную мышь, для отображения вашего собственного раскрывающегося содержимого.</para>
      </summary>
      <param name="content">Текст, изображение и всплывающая подсказка для этой кнопки.</param>
      <param name="focusType">Должна ли кнопка выбираться с помощью клавиатуры или нет.</param>
      <param name="style">Необязательный стиль для использования.</param>
      <param name="options">Необязательный список параметров макета, задающих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение true, когда пользователь нажимает кнопку.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.DropdownButton(UnityEngine.GUIContent,UnityEngine.FocusType,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте кнопку, которая реагирует на опущенную мышь, для отображения вашего собственного раскрывающегося содержимого.</para>
      </summary>
      <param name="content">Текст, изображение и всплывающая подсказка для этой кнопки.</param>
      <param name="focusType">Должна ли кнопка выбираться с помощью клавиатуры или нет.</param>
      <param name="style">Необязательный стиль для использования.</param>
      <param name="options">Необязательный список параметров макета, задающих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение true, когда пользователь нажимает кнопку.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EditorToolbar(UnityEditor.EditorTools.EditorTool[])">
      <summary>
        <para>Создает панель инструментов, заполненную указанной коллекцией инструментов редактора.</para>
      </summary>
      <param name="tools">Коллекция инструментов редактора для панели инструментов.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EditorToolbar(System.Collections.Generic.IList`1&lt;T&gt;)">
      <summary>
        <para>Создает панель инструментов, заполненную указанной коллекцией инструментов редактора.</para>
      </summary>
      <param name="tools">Коллекция инструментов редактора для панели инструментов.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EditorToolbarForTarget(UnityEngine.Object)">
      <summary>
        <para>Создает панель инструментов, заполненную коллекцией инструментов редактора, соответствующих атрибуту EditorToolAttribute целевого объекта.</para>
      </summary>
      <param name="target">Целевой объект.</param>
      <param name="content">Необязательная префиксная метка.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EditorToolbarForTarget(UnityEngine.GUIContent,UnityEngine.Object)">
      <summary>
        <para>Создает панель инструментов, заполненную коллекцией инструментов редактора, соответствующих атрибуту EditorToolAttribute целевого объекта.</para>
      </summary>
      <param name="target">Целевой объект.</param>
      <param name="content">Необязательная префиксная метка.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EndBuildTargetSelectionGrouping">
      <summary>
        <para>Закройте группу, начавшуюся с BeginBuildTargetSelectionGrouping.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EndFadeGroup">
      <summary>
        <para>Закрывает группу, созданную с помощью BeginFadeGroup.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EndFoldoutHeaderGroup">
      <summary>
        <para>Закрывает группу, созданную с помощью BeginFoldoutHeaderGroup.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EndHorizontal">
      <summary>
        <para>Закрыть группу начали с BeginHorizontal.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EndScrollView">
      <summary>
        <para>Завершает представление прокрутки, начатое вызовом BeginScrollView.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EndToggleGroup">
      <summary>
        <para>Закройте группу, созданную с помощью BeginToggleGroup.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EndVertical">
      <summary>
        <para>Закройте группу, начавшуюся с BeginVertical.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumFlagsField(System.Enum,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Отображает меню с параметром для каждого значения типа перечисления при щелчке.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем флагов перечисления.</param>
      <param name="enumValue">Значение флагов перечисления.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="includeObsolete">Задайте значение true, чтобы включить значения перечисления в атрибут ObsoleteAttribute. Задайте значение false, чтобы исключить значения перечисления с помощью ObsoleteAttribute.</param>
      <returns>
        <para>Значение флага перечисления, измененное пользователем. Это выбор BitMask, где каждый бит представляет индекс значения Enum. (Обратите внимание, что это возвращаемое значение само по себе не является перечислением).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumFlagsField(System.Enum,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Отображает меню с параметром для каждого значения типа перечисления при щелчке.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем флагов перечисления.</param>
      <param name="enumValue">Значение флагов перечисления.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="includeObsolete">Задайте значение true, чтобы включить значения перечисления в атрибут ObsoleteAttribute. Задайте значение false, чтобы исключить значения перечисления с помощью ObsoleteAttribute.</param>
      <returns>
        <para>Значение флага перечисления, измененное пользователем. Это выбор BitMask, где каждый бит представляет индекс значения Enum. (Обратите внимание, что это возвращаемое значение само по себе не является перечислением).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumFlagsField(System.String,System.Enum,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Отображает меню с параметром для каждого значения типа перечисления при щелчке.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем флагов перечисления.</param>
      <param name="enumValue">Значение флагов перечисления.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="includeObsolete">Задайте значение true, чтобы включить значения перечисления в атрибут ObsoleteAttribute. Задайте значение false, чтобы исключить значения перечисления с помощью ObsoleteAttribute.</param>
      <returns>
        <para>Значение флага перечисления, измененное пользователем. Это выбор BitMask, где каждый бит представляет индекс значения Enum. (Обратите внимание, что это возвращаемое значение само по себе не является перечислением).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumFlagsField(System.String,System.Enum,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Отображает меню с параметром для каждого значения типа перечисления при щелчке.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем флагов перечисления.</param>
      <param name="enumValue">Значение флагов перечисления.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="includeObsolete">Задайте значение true, чтобы включить значения перечисления в атрибут ObsoleteAttribute. Задайте значение false, чтобы исключить значения перечисления с помощью ObsoleteAttribute.</param>
      <returns>
        <para>Значение флага перечисления, измененное пользователем. Это выбор BitMask, где каждый бит представляет индекс значения Enum. (Обратите внимание, что это возвращаемое значение само по себе не является перечислением).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumFlagsField(UnityEngine.GUIContent,System.Enum,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Отображает меню с параметром для каждого значения типа перечисления при щелчке.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем флагов перечисления.</param>
      <param name="enumValue">Значение флагов перечисления.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="includeObsolete">Задайте значение true, чтобы включить значения перечисления в атрибут ObsoleteAttribute. Задайте значение false, чтобы исключить значения перечисления с помощью ObsoleteAttribute.</param>
      <returns>
        <para>Значение флага перечисления, измененное пользователем. Это выбор BitMask, где каждый бит представляет индекс значения Enum. (Обратите внимание, что это возвращаемое значение само по себе не является перечислением).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumFlagsField(UnityEngine.GUIContent,System.Enum,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Отображает меню с параметром для каждого значения типа перечисления при щелчке.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем флагов перечисления.</param>
      <param name="enumValue">Значение флагов перечисления.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="includeObsolete">Задайте значение true, чтобы включить значения перечисления в атрибут ObsoleteAttribute. Задайте значение false, чтобы исключить значения перечисления с помощью ObsoleteAttribute.</param>
      <returns>
        <para>Значение флага перечисления, измененное пользователем. Это выбор BitMask, где каждый бит представляет индекс значения Enum. (Обратите внимание, что это возвращаемое значение само по себе не является перечислением).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumFlagsField(UnityEngine.GUIContent,System.Enum,System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Отображает меню с параметром для каждого значения типа перечисления при щелчке.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем флагов перечисления.</param>
      <param name="enumValue">Значение флагов перечисления.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="includeObsolete">Задайте значение true, чтобы включить значения перечисления в атрибут ObsoleteAttribute. Задайте значение false, чтобы исключить значения перечисления с помощью ObsoleteAttribute.</param>
      <returns>
        <para>Значение флага перечисления, измененное пользователем. Это выбор BitMask, где каждый бит представляет индекс значения Enum. (Обратите внимание, что это возвращаемое значение само по себе не является перечислением).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumFlagsField(UnityEngine.GUIContent,System.Enum,System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Отображает меню с параметром для каждого значения типа перечисления при щелчке.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем флагов перечисления.</param>
      <param name="enumValue">Значение флагов перечисления.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="includeObsolete">Задайте значение true, чтобы включить значения перечисления в атрибут ObsoleteAttribute. Задайте значение false, чтобы исключить значения перечисления с помощью ObsoleteAttribute.</param>
      <returns>
        <para>Значение флага перечисления, измененное пользователем. Это выбор BitMask, где каждый бит представляет индекс значения Enum. (Обратите внимание, что это возвращаемое значение само по себе не является перечислением).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumMaskField(UnityEngine.GUIContent,System.Enum,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Этот метод устарел. Вместо этого используйте EditorGUILayout.EnumFlagsField.  Создайте поле для масок на основе перечисления.</para>
      </summary>
      <param name="label">Префиксная метка для этого поля.</param>
      <param name="enumValue">Enum для использования для флагов.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, измененное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumMaskField(System.String,System.Enum,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Этот метод устарел. Вместо этого используйте EditorGUILayout.EnumFlagsField.  Создайте поле для масок на основе перечисления.</para>
      </summary>
      <param name="label">Префиксная метка для этого поля.</param>
      <param name="enumValue">Enum для использования для флагов.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, измененное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumMaskField(UnityEngine.GUIContent,System.Enum,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Этот метод устарел. Вместо этого используйте EditorGUILayout.EnumFlagsField.  Создайте поле для масок на основе перечисления.</para>
      </summary>
      <param name="label">Префиксная метка для этого поля.</param>
      <param name="enumValue">Enum для использования для флагов.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, измененное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumMaskField(System.String,System.Enum,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Этот метод устарел. Вместо этого используйте EditorGUILayout.EnumFlagsField.  Создайте поле для масок на основе перечисления.</para>
      </summary>
      <param name="label">Префиксная метка для этого поля.</param>
      <param name="enumValue">Enum для использования для флагов.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, измененное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumMaskField(System.Enum,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Этот метод устарел. Вместо этого используйте EditorGUILayout.EnumFlagsField.  Создайте поле для масок на основе перечисления.</para>
      </summary>
      <param name="label">Префиксная метка для этого поля.</param>
      <param name="enumValue">Enum для использования для флагов.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, измененное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumMaskField(System.Enum,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Этот метод устарел. Вместо этого используйте EditorGUILayout.EnumFlagsField.  Создайте поле для масок на основе перечисления.</para>
      </summary>
      <param name="label">Префиксная метка для этого поля.</param>
      <param name="enumValue">Enum для использования для флагов.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, измененное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumMaskPopup(System.String,System.Enum,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Этот метод устарел. Вместо этого используйте EditorGUILayout.EnumFlagsField.  Создайте всплывающее поле выбора перечисления для битовой маски.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selected">Параметры перечисления, отображаемые в поле.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Дополнительные параметры макета.</param>
      <returns>
        <para>Параметры перечисления, выбранные пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumMaskPopup(System.String,System.Enum,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Этот метод устарел. Вместо этого используйте EditorGUILayout.EnumFlagsField.  Создайте всплывающее поле выбора перечисления для битовой маски.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selected">Параметры перечисления, отображаемые в поле.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Дополнительные параметры макета.</param>
      <returns>
        <para>Параметры перечисления, выбранные пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumMaskPopup(UnityEngine.GUIContent,System.Enum,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Этот метод устарел. Вместо этого используйте EditorGUILayout.EnumFlagsField.  Создайте всплывающее поле выбора перечисления для битовой маски.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selected">Параметры перечисления, отображаемые в поле.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Дополнительные параметры макета.</param>
      <returns>
        <para>Параметры перечисления, выбранные пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumMaskPopup(UnityEngine.GUIContent,System.Enum,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Этот метод устарел. Вместо этого используйте EditorGUILayout.EnumFlagsField.  Создайте всплывающее поле выбора перечисления для битовой маски.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selected">Параметры перечисления, отображаемые в поле.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Дополнительные параметры макета.</param>
      <returns>
        <para>Параметры перечисления, выбранные пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumPopup(System.Enum,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте всплывающее поле выделения перечисления.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selected">Параметр перечисления, отображаемый в поле.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="includeObsolete">Задайте значение true, чтобы включить значения перечисления в атрибут ObsoleteAttribute. Задайте значение false, чтобы исключить значения перечисления с помощью ObsoleteAttribute.</param>
      <param name="checkEnabled">Метод, вызываемый для каждого отображаемого значения перечисления. Указанный метод должен возвращать значение true, если параметр может быть выбран, в противном случае — значение false.</param>
      <returns>
        <para>Параметр перечисления, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumPopup(System.Enum,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте всплывающее поле выделения перечисления.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selected">Параметр перечисления, отображаемый в поле.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="includeObsolete">Задайте значение true, чтобы включить значения перечисления в атрибут ObsoleteAttribute. Задайте значение false, чтобы исключить значения перечисления с помощью ObsoleteAttribute.</param>
      <param name="checkEnabled">Метод, вызываемый для каждого отображаемого значения перечисления. Указанный метод должен возвращать значение true, если параметр может быть выбран, в противном случае — значение false.</param>
      <returns>
        <para>Параметр перечисления, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumPopup(System.String,System.Enum,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте всплывающее поле выделения перечисления.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selected">Параметр перечисления, отображаемый в поле.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="includeObsolete">Задайте значение true, чтобы включить значения перечисления в атрибут ObsoleteAttribute. Задайте значение false, чтобы исключить значения перечисления с помощью ObsoleteAttribute.</param>
      <param name="checkEnabled">Метод, вызываемый для каждого отображаемого значения перечисления. Указанный метод должен возвращать значение true, если параметр может быть выбран, в противном случае — значение false.</param>
      <returns>
        <para>Параметр перечисления, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumPopup(System.String,System.Enum,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте всплывающее поле выделения перечисления.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selected">Параметр перечисления, отображаемый в поле.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="includeObsolete">Задайте значение true, чтобы включить значения перечисления в атрибут ObsoleteAttribute. Задайте значение false, чтобы исключить значения перечисления с помощью ObsoleteAttribute.</param>
      <param name="checkEnabled">Метод, вызываемый для каждого отображаемого значения перечисления. Указанный метод должен возвращать значение true, если параметр может быть выбран, в противном случае — значение false.</param>
      <returns>
        <para>Параметр перечисления, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumPopup(UnityEngine.GUIContent,System.Enum,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте всплывающее поле выделения перечисления.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selected">Параметр перечисления, отображаемый в поле.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="includeObsolete">Задайте значение true, чтобы включить значения перечисления в атрибут ObsoleteAttribute. Задайте значение false, чтобы исключить значения перечисления с помощью ObsoleteAttribute.</param>
      <param name="checkEnabled">Метод, вызываемый для каждого отображаемого значения перечисления. Указанный метод должен возвращать значение true, если параметр может быть выбран, в противном случае — значение false.</param>
      <returns>
        <para>Параметр перечисления, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumPopup(UnityEngine.GUIContent,System.Enum,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте всплывающее поле выделения перечисления.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selected">Параметр перечисления, отображаемый в поле.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="includeObsolete">Задайте значение true, чтобы включить значения перечисления в атрибут ObsoleteAttribute. Задайте значение false, чтобы исключить значения перечисления с помощью ObsoleteAttribute.</param>
      <param name="checkEnabled">Метод, вызываемый для каждого отображаемого значения перечисления. Указанный метод должен возвращать значение true, если параметр может быть выбран, в противном случае — значение false.</param>
      <returns>
        <para>Параметр перечисления, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumPopup(UnityEngine.GUIContent,System.Enum,System.Func`2&lt;System.Enum,System.Boolean&gt;,System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте всплывающее поле выделения перечисления.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selected">Параметр перечисления, отображаемый в поле.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="includeObsolete">Задайте значение true, чтобы включить значения перечисления в атрибут ObsoleteAttribute. Задайте значение false, чтобы исключить значения перечисления с помощью ObsoleteAttribute.</param>
      <param name="checkEnabled">Метод, вызываемый для каждого отображаемого значения перечисления. Указанный метод должен возвращать значение true, если параметр может быть выбран, в противном случае — значение false.</param>
      <returns>
        <para>Параметр перечисления, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.EnumPopup(UnityEngine.GUIContent,System.Enum,System.Func`2&lt;System.Enum,System.Boolean&gt;,System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте всплывающее поле выделения перечисления.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selected">Параметр перечисления, отображаемый в поле.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="includeObsolete">Задайте значение true, чтобы включить значения перечисления в атрибут ObsoleteAttribute. Задайте значение false, чтобы исключить значения перечисления с помощью ObsoleteAttribute.</param>
      <param name="checkEnabled">Метод, вызываемый для каждого отображаемого значения перечисления. Указанный метод должен возвращать значение true, если параметр может быть выбран, в противном случае — значение false.</param>
      <returns>
        <para>Параметр перечисления, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.EditorGUILayout.FadeGroupScope">
      <summary>
        <para>Начинается группа, которую можно скрыть/показать, и переход будет анимирован.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUILayout.FadeGroupScope.visible">
      <summary>
        <para>Отображается ли группа.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.FadeGroupScope.#ctor(System.Single)">
      <summary>
        <para>Создайте новый FadeGroupScope и создайте соответствующую группу.</para>
      </summary>
      <param name="value">Значение от 0 до 1, 0 скрыто, а 1 полностью видно.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.FloatField(System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле для ввода значений с плавающей точкой.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед плавающим полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.FloatField(System.Single,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле для ввода значений с плавающей точкой.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед плавающим полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.FloatField(System.String,System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле для ввода значений с плавающей точкой.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед плавающим полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.FloatField(System.String,System.Single,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле для ввода значений с плавающей точкой.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед плавающим полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.FloatField(UnityEngine.GUIContent,System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле для ввода значений с плавающей точкой.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед плавающим полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.FloatField(UnityEngine.GUIContent,System.Single,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле для ввода значений с плавающей точкой.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед плавающим полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Foldout(System.Boolean,System.String)">
      <summary>
        <para>Сделайте этикетку с откидной стрелкой слева от нее.</para>
      </summary>
      <param name="foldout">Показанное состояние складывания.</param>
      <param name="content">Отображаемая метка.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="toggleOnLabelClick">Указывает, переключает ли нажатие метки состояние складывания. Значение по умолчанию — false. Задайте значение true, чтобы включить метку в интерактивную область.</param>
      <returns>
        <para>Состояние складывания, выбранное пользователем. Если значение равно true, следует отобразить подобъекты.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Foldout(System.Boolean,System.String,System.Boolean,UnityEngine.GUIStyle)">
      <summary>
        <para>Сделайте этикетку с откидной стрелкой слева от нее.</para>
      </summary>
      <param name="foldout">Показанное состояние складывания.</param>
      <param name="content">Отображаемая метка.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="toggleOnLabelClick">Указывает, переключает ли нажатие метки состояние складывания. Значение по умолчанию — false. Задайте значение true, чтобы включить метку в интерактивную область.</param>
      <returns>
        <para>Состояние складывания, выбранное пользователем. Если значение равно true, следует отобразить подобъекты.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Foldout(System.Boolean,UnityEngine.GUIContent)">
      <summary>
        <para>Сделайте этикетку с откидной стрелкой слева от нее.</para>
      </summary>
      <param name="foldout">Показанное состояние складывания.</param>
      <param name="content">Отображаемая метка.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="toggleOnLabelClick">Указывает, переключает ли нажатие метки состояние складывания. Значение по умолчанию — false. Задайте значение true, чтобы включить метку в интерактивную область.</param>
      <returns>
        <para>Состояние складывания, выбранное пользователем. Если значение равно true, следует отобразить подобъекты.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Foldout(System.Boolean,UnityEngine.GUIContent,System.Boolean,UnityEngine.GUIStyle)">
      <summary>
        <para>Сделайте этикетку с откидной стрелкой слева от нее.</para>
      </summary>
      <param name="foldout">Показанное состояние складывания.</param>
      <param name="content">Отображаемая метка.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="toggleOnLabelClick">Указывает, переключает ли нажатие метки состояние складывания. Значение по умолчанию — false. Задайте значение true, чтобы включить метку в интерактивную область.</param>
      <returns>
        <para>Состояние складывания, выбранное пользователем. Если значение равно true, следует отобразить подобъекты.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Foldout(System.Boolean,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Сделайте этикетку с откидной стрелкой слева от нее.</para>
      </summary>
      <param name="foldout">Показанное состояние складывания.</param>
      <param name="content">Отображаемая метка.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="toggleOnLabelClick">Указывает, переключает ли нажатие метки состояние складывания. Значение по умолчанию — false. Задайте значение true, чтобы включить метку в интерактивную область.</param>
      <returns>
        <para>Состояние складывания, выбранное пользователем. Если значение равно true, следует отобразить подобъекты.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Foldout(System.Boolean,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Сделайте этикетку с откидной стрелкой слева от нее.</para>
      </summary>
      <param name="foldout">Показанное состояние складывания.</param>
      <param name="content">Отображаемая метка.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="toggleOnLabelClick">Указывает, переключает ли нажатие метки состояние складывания. Значение по умолчанию — false. Задайте значение true, чтобы включить метку в интерактивную область.</param>
      <returns>
        <para>Состояние складывания, выбранное пользователем. Если значение равно true, следует отобразить подобъекты.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.GetControlRect(UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Получите исправление для элемента управления Редактора.</para>
      </summary>
      <param name="hasLabel">Необязательно логическое значение, чтобы указать, имеет ли элемент управления метку. Значение по умолчанию равно true.</param>
      <param name="height">Высота элемента управления в пикселях. Значение по умолчанию — EditorGUIUtility.singleLineHeight.</param>
      <param name="style">Дополнительный стиль GUIStyle для использования в элементе управления.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.GetControlRect(System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Получите исправление для элемента управления Редактора.</para>
      </summary>
      <param name="hasLabel">Необязательно логическое значение, чтобы указать, имеет ли элемент управления метку. Значение по умолчанию равно true.</param>
      <param name="height">Высота элемента управления в пикселях. Значение по умолчанию — EditorGUIUtility.singleLineHeight.</param>
      <param name="style">Дополнительный стиль GUIStyle для использования в элементе управления.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.GetControlRect(System.Boolean,System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Получите исправление для элемента управления Редактора.</para>
      </summary>
      <param name="hasLabel">Необязательно логическое значение, чтобы указать, имеет ли элемент управления метку. Значение по умолчанию равно true.</param>
      <param name="height">Высота элемента управления в пикселях. Значение по умолчанию — EditorGUIUtility.singleLineHeight.</param>
      <param name="style">Дополнительный стиль GUIStyle для использования в элементе управления.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.GetControlRect(System.Boolean,System.Single,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Получите исправление для элемента управления Редактора.</para>
      </summary>
      <param name="hasLabel">Необязательно логическое значение, чтобы указать, имеет ли элемент управления метку. Значение по умолчанию равно true.</param>
      <param name="height">Высота элемента управления в пикселях. Значение по умолчанию — EditorGUIUtility.singleLineHeight.</param>
      <param name="style">Дополнительный стиль GUIStyle для использования в элементе управления.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.GradientField(UnityEngine.Gradient,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для редактирования градиента.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Редактируемый градиент.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="hdr">
      </param>
      <returns>
        <para>Градиент, редактируемый пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.GradientField(System.String,UnityEngine.Gradient,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для редактирования градиента.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Редактируемый градиент.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="hdr">
      </param>
      <returns>
        <para>Градиент, редактируемый пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.GradientField(UnityEngine.GUIContent,UnityEngine.Gradient,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для редактирования градиента.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Редактируемый градиент.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="hdr">
      </param>
      <returns>
        <para>Градиент, редактируемый пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.GradientField(UnityEngine.GUIContent,UnityEngine.Gradient,System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для редактирования градиента.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем.</param>
      <param name="value">Редактируемый градиент.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="hdr">
      </param>
      <returns>
        <para>Градиент, редактируемый пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.HelpBox(System.String,UnityEditor.MessageType)">
      <summary>
        <para>Создайте окно справки с сообщением пользователю.</para>
      </summary>
      <param name="message">Текст сообщения.</param>
      <param name="type">Тип сообщения.</param>
      <param name="wide">Если это так, то коробка будет охватывать всю ширину окна; в противном случае он будет охватывать только часть элементов управления.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.HelpBox(System.String,UnityEditor.MessageType,System.Boolean)">
      <summary>
        <para>Создайте окно справки с сообщением пользователю.</para>
      </summary>
      <param name="message">Текст сообщения.</param>
      <param name="type">Тип сообщения.</param>
      <param name="wide">Если это так, то коробка будет охватывать всю ширину окна; в противном случае он будет охватывать только часть элементов управления.</param>
    </member>
    <member name="T:UnityEditor.EditorGUILayout.HorizontalScope">
      <summary>
        <para>Одноразовый вспомогательный класс для управления BeginHorizontal / EndHorizontal.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUILayout.HorizontalScope.rect">
      <summary>
        <para>Рект горизонтальной группы.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.HorizontalScope.#ctor(UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте новую горизонтальную область и создайте соответствующую горизонтальную группу.</para>
      </summary>
      <param name="style">Стиль, используемый для фонового изображения и значений заполнения. Если оставить за его пределами, фон будет прозрачным.</param>
      <param name="options">Необязательный список параметров макета, задающих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.HorizontalScope.#ctor(UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте новую горизонтальную область и создайте соответствующую горизонтальную группу.</para>
      </summary>
      <param name="style">Стиль, используемый для фонового изображения и значений заполнения. Если оставить за его пределами, фон будет прозрачным.</param>
      <param name="options">Необязательный список параметров макета, задающих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.InspectorTitlebar(System.Boolean,UnityEngine.Object)">
      <summary>
        <para>Создайте строку заголовка, похожую на окно инспектора.</para>
      </summary>
      <param name="foldout">Состояние складывания, показанное стрелкой.</param>
      <param name="targetObj">Объект (например, компонент) или объекты, для которых предназначена строка заголовка.</param>
      <param name="targetObjs">
      </param>
      <returns>
        <para>Состояние складывания, выбранное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.InspectorTitlebar(System.Boolean,UnityEngine.Object[])">
      <summary>
        <para>Создайте строку заголовка, похожую на окно инспектора.</para>
      </summary>
      <param name="foldout">Состояние складывания, показанное стрелкой.</param>
      <param name="targetObj">Объект (например, компонент) или объекты, для которых предназначена строка заголовка.</param>
      <param name="targetObjs">
      </param>
      <returns>
        <para>Состояние складывания, выбранное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntField(System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле для ввода целых чисел.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntField(System.Int32,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле для ввода целых чисел.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntField(System.String,System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле для ввода целых чисел.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntField(System.String,System.Int32,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле для ввода целых чисел.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntField(UnityEngine.GUIContent,System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле для ввода целых чисел.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntField(UnityEngine.GUIContent,System.Int32,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле для ввода целых чисел.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем int.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntPopup(System.Int32,System.String[],System.Int32[],UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте целочисленное всплывающее поле выбора.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedValue">Значение параметра, отображаемого в поле.</param>
      <param name="displayedOptions">Массив с отображаемыми параметрами, которые пользователь может выбрать.</param>
      <param name="optionValues">Массив со значениями для каждого параметра.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение параметра, выбранного пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntPopup(System.Int32,System.String[],System.Int32[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте целочисленное всплывающее поле выбора.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedValue">Значение параметра, отображаемого в поле.</param>
      <param name="displayedOptions">Массив с отображаемыми параметрами, которые пользователь может выбрать.</param>
      <param name="optionValues">Массив со значениями для каждого параметра.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение параметра, выбранного пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntPopup(System.Int32,UnityEngine.GUIContent[],System.Int32[],UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте целочисленное всплывающее поле выбора.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedValue">Значение параметра, отображаемого в поле.</param>
      <param name="displayedOptions">Массив с отображаемыми параметрами, которые пользователь может выбрать.</param>
      <param name="optionValues">Массив со значениями для каждого параметра.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение параметра, выбранного пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntPopup(System.Int32,UnityEngine.GUIContent[],System.Int32[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте целочисленное всплывающее поле выбора.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedValue">Значение параметра, отображаемого в поле.</param>
      <param name="displayedOptions">Массив с отображаемыми параметрами, которые пользователь может выбрать.</param>
      <param name="optionValues">Массив со значениями для каждого параметра.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение параметра, выбранного пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntPopup(System.String,System.Int32,System.String[],System.Int32[],UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте целочисленное всплывающее поле выбора.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedValue">Значение параметра, отображаемого в поле.</param>
      <param name="displayedOptions">Массив с отображаемыми параметрами, которые пользователь может выбрать.</param>
      <param name="optionValues">Массив со значениями для каждого параметра.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение параметра, выбранного пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntPopup(System.String,System.Int32,System.String[],System.Int32[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте целочисленное всплывающее поле выбора.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedValue">Значение параметра, отображаемого в поле.</param>
      <param name="displayedOptions">Массив с отображаемыми параметрами, которые пользователь может выбрать.</param>
      <param name="optionValues">Массив со значениями для каждого параметра.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение параметра, выбранного пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntPopup(UnityEngine.GUIContent,System.Int32,UnityEngine.GUIContent[],System.Int32[],UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте целочисленное всплывающее поле выбора.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedValue">Значение параметра, отображаемого в поле.</param>
      <param name="displayedOptions">Массив с отображаемыми параметрами, которые пользователь может выбрать.</param>
      <param name="optionValues">Массив со значениями для каждого параметра.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение параметра, выбранного пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntPopup(UnityEngine.GUIContent,System.Int32,UnityEngine.GUIContent[],System.Int32[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте целочисленное всплывающее поле выбора.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedValue">Значение параметра, отображаемого в поле.</param>
      <param name="displayedOptions">Массив с отображаемыми параметрами, которые пользователь может выбрать.</param>
      <param name="optionValues">Массив со значениями для каждого параметра.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение параметра, выбранного пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntPopup(UnityEditor.SerializedProperty,UnityEngine.GUIContent[],System.Int32[],UnityEngine.GUIContent,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте целочисленное всплывающее поле выбора.</para>
      </summary>
      <param name="property">Значение параметра, отображаемого в поле.</param>
      <param name="displayedOptions">Массив с отображаемыми параметрами, которые пользователь может выбрать.</param>
      <param name="optionValues">Массив со значениями для каждого параметра.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="style">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntPopup(UnityEditor.SerializedProperty,UnityEngine.GUIContent[],System.Int32[],UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте целочисленное всплывающее поле выбора.</para>
      </summary>
      <param name="property">Значение параметра, отображаемого в поле.</param>
      <param name="displayedOptions">Массив с отображаемыми параметрами, которые пользователь может выбрать.</param>
      <param name="optionValues">Массив со значениями для каждого параметра.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="style">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntPopup(UnityEditor.SerializedProperty,UnityEngine.GUIContent[],System.Int32[],UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте целочисленное всплывающее поле выбора.</para>
      </summary>
      <param name="property">Значение параметра, отображаемого в поле.</param>
      <param name="displayedOptions">Массив с отображаемыми параметрами, которые пользователь может выбрать.</param>
      <param name="optionValues">Массив со значениями для каждого параметра.</param>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="style">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntSlider(System.Int32,System.Int32,System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте ползунок, который пользователь может перетащить, чтобы изменить целое значение между min и max.</para>
      </summary>
      <param name="label">Дополнительная метка перед ползунком.</param>
      <param name="value">Значение, отображаемое ползунком. Это определяет положение перетаскиваемого большого пальца.</param>
      <param name="leftValue">Значение в левом конце ползунка.</param>
      <param name="rightValue">Значение в правом конце ползунка.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, заданное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntSlider(System.String,System.Int32,System.Int32,System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте ползунок, который пользователь может перетащить, чтобы изменить целое значение между min и max.</para>
      </summary>
      <param name="label">Дополнительная метка перед ползунком.</param>
      <param name="value">Значение, отображаемое ползунком. Это определяет положение перетаскиваемого большого пальца.</param>
      <param name="leftValue">Значение в левом конце ползунка.</param>
      <param name="rightValue">Значение в правом конце ползунка.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, заданное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntSlider(UnityEngine.GUIContent,System.Int32,System.Int32,System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте ползунок, который пользователь может перетащить, чтобы изменить целое значение между min и max.</para>
      </summary>
      <param name="label">Дополнительная метка перед ползунком.</param>
      <param name="value">Значение, отображаемое ползунком. Это определяет положение перетаскиваемого большого пальца.</param>
      <param name="leftValue">Значение в левом конце ползунка.</param>
      <param name="rightValue">Значение в правом конце ползунка.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, заданное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntSlider(UnityEditor.SerializedProperty,System.Int32,System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте ползунок, который пользователь может перетащить, чтобы изменить целое значение между min и max.</para>
      </summary>
      <param name="label">Дополнительная метка перед ползунком.</param>
      <param name="property">Значение, отображаемое ползунком. Это определяет положение перетаскиваемого большого пальца.</param>
      <param name="leftValue">Значение в левом конце ползунка.</param>
      <param name="rightValue">Значение в правом конце ползунка.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntSlider(UnityEditor.SerializedProperty,System.Int32,System.Int32,System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте ползунок, который пользователь может перетащить, чтобы изменить целое значение между min и max.</para>
      </summary>
      <param name="label">Дополнительная метка перед ползунком.</param>
      <param name="property">Значение, отображаемое ползунком. Это определяет положение перетаскиваемого большого пальца.</param>
      <param name="leftValue">Значение в левом конце ползунка.</param>
      <param name="rightValue">Значение в правом конце ползунка.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.IntSlider(UnityEditor.SerializedProperty,System.Int32,System.Int32,UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте ползунок, который пользователь может перетащить, чтобы изменить целое значение между min и max.</para>
      </summary>
      <param name="label">Дополнительная метка перед ползунком.</param>
      <param name="property">Значение, отображаемое ползунком. Это определяет положение перетаскиваемого большого пальца.</param>
      <param name="leftValue">Значение в левом конце ползунка.</param>
      <param name="rightValue">Значение в правом конце ползунка.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LabelField(System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле метки. (Полезно для отображения информации только для чтения.)</para>
      </summary>
      <param name="label">Метка перед полем метки.</param>
      <param name="label2">Метка, которую нужно показать справа.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="style">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LabelField(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле метки. (Полезно для отображения информации только для чтения.)</para>
      </summary>
      <param name="label">Метка перед полем метки.</param>
      <param name="label2">Метка, которую нужно показать справа.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="style">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LabelField(UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле метки. (Полезно для отображения информации только для чтения.)</para>
      </summary>
      <param name="label">Метка перед полем метки.</param>
      <param name="label2">Метка, которую нужно показать справа.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="style">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LabelField(UnityEngine.GUIContent,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле метки. (Полезно для отображения информации только для чтения.)</para>
      </summary>
      <param name="label">Метка перед полем метки.</param>
      <param name="label2">Метка, которую нужно показать справа.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="style">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LabelField(System.String,System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле метки. (Полезно для отображения информации только для чтения.)</para>
      </summary>
      <param name="label">Метка перед полем метки.</param>
      <param name="label2">Метка, которую нужно показать справа.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="style">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LabelField(System.String,System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле метки. (Полезно для отображения информации только для чтения.)</para>
      </summary>
      <param name="label">Метка перед полем метки.</param>
      <param name="label2">Метка, которую нужно показать справа.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="style">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LabelField(UnityEngine.GUIContent,UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле метки. (Полезно для отображения информации только для чтения.)</para>
      </summary>
      <param name="label">Метка перед полем метки.</param>
      <param name="label2">Метка, которую нужно показать справа.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="style">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LabelField(UnityEngine.GUIContent,UnityEngine.GUIContent,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле метки. (Полезно для отображения информации только для чтения.)</para>
      </summary>
      <param name="label">Метка перед полем метки.</param>
      <param name="label2">Метка, которую нужно показать справа.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="style">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LayerField(System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле выделения слоя.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="layer">Слой, показанный в поле.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Слой, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LayerField(System.Int32,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле выделения слоя.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="layer">Слой, показанный в поле.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Слой, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LayerField(System.String,System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле выделения слоя.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="layer">Слой, показанный в поле.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Слой, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LayerField(System.String,System.Int32,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле выделения слоя.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="layer">Слой, показанный в поле.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Слой, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LayerField(UnityEngine.GUIContent,System.Int32,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле выделения слоя.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="layer">Слой, показанный в поле.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Слой, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LayerField(UnityEngine.GUIContent,System.Int32,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле выделения слоя.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="layer">Слой, показанный в поле.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Слой, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LinkButton(System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте кликабельную метку ссылки.</para>
      </summary>
      <param name="label">Метка ссылки.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение true, когда пользователь щелкает ссылку.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LinkButton(UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте кликабельную метку ссылки.</para>
      </summary>
      <param name="label">Метка ссылки.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение true, когда пользователь щелкает ссылку.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LongField(System.Int64,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле для ввода длинных целых чисел.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед длинным полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LongField(System.Int64,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле для ввода длинных целых чисел.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед длинным полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LongField(System.String,System.Int64,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле для ввода длинных целых чисел.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед длинным полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LongField(System.String,System.Int64,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле для ввода длинных целых чисел.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед длинным полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LongField(UnityEngine.GUIContent,System.Int64,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле для ввода длинных целых чисел.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед длинным полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.LongField(UnityEngine.GUIContent,System.Int64,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле для ввода длинных целых чисел.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед длинным полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.MaskField(UnityEngine.GUIContent,System.Int32,System.String[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте поле для масок.</para>
      </summary>
      <param name="label">Префиксная метка поля.</param>
      <param name="mask">Отображаемая текущая маска.</param>
      <param name="displayedOption">Массив строк, содержащий метки для каждого флага.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="displayedOptions">
      </param>
      <param name="style">
      </param>
      <returns>
        <para>Значение, измененное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.MaskField(System.String,System.Int32,System.String[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте поле для масок.</para>
      </summary>
      <param name="label">Префиксная метка поля.</param>
      <param name="mask">Отображаемая текущая маска.</param>
      <param name="displayedOption">Массив строк, содержащий метки для каждого флага.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="displayedOptions">
      </param>
      <param name="style">
      </param>
      <returns>
        <para>Значение, измененное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.MaskField(UnityEngine.GUIContent,System.Int32,System.String[],UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте поле для масок.</para>
      </summary>
      <param name="label">Префиксная метка поля.</param>
      <param name="mask">Отображаемая текущая маска.</param>
      <param name="displayedOption">Массив строк, содержащий метки для каждого флага.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="displayedOptions">
      </param>
      <param name="style">
      </param>
      <returns>
        <para>Значение, измененное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.MaskField(System.String,System.Int32,System.String[],UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте поле для масок.</para>
      </summary>
      <param name="label">Префиксная метка поля.</param>
      <param name="mask">Отображаемая текущая маска.</param>
      <param name="displayedOption">Массив строк, содержащий метки для каждого флага.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="displayedOptions">
      </param>
      <param name="style">
      </param>
      <returns>
        <para>Значение, измененное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.MaskField(System.Int32,System.String[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте поле для масок.</para>
      </summary>
      <param name="label">Префиксная метка поля.</param>
      <param name="mask">Отображаемая текущая маска.</param>
      <param name="displayedOption">Массив строк, содержащий метки для каждого флага.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="displayedOptions">
      </param>
      <param name="style">
      </param>
      <returns>
        <para>Значение, измененное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.MaskField(System.Int32,System.String[],UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте поле для масок.</para>
      </summary>
      <param name="label">Префиксная метка поля.</param>
      <param name="mask">Отображаемая текущая маска.</param>
      <param name="displayedOption">Массив строк, содержащий метки для каждого флага.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <param name="displayedOptions">
      </param>
      <param name="style">
      </param>
      <returns>
        <para>Значение, измененное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.MinMaxSlider(System.Single&amp;,System.Single&amp;,System.Single,System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте специальный ползунок, который пользователь может использовать для указания диапазона между min и max.</para>
      </summary>
      <param name="label">Дополнительная метка перед ползунком.</param>
      <param name="minValue">Наименьшее значение диапазона, отображаемого ползунком, переданное по ссылке.</param>
      <param name="maxValue">Верхнее значение в диапазоне, отображаемом ползунком, переданное по ссылке.</param>
      <param name="minLimit">Ограничение в левом конце ползунка.</param>
      <param name="maxLimit">Ограничение в правом конце ползунка.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.MinMaxSlider(System.String,System.Single&amp;,System.Single&amp;,System.Single,System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте специальный ползунок, который пользователь может использовать для указания диапазона между min и max.</para>
      </summary>
      <param name="label">Дополнительная метка перед ползунком.</param>
      <param name="minValue">Наименьшее значение диапазона, отображаемого ползунком, переданное по ссылке.</param>
      <param name="maxValue">Верхнее значение в диапазоне, отображаемом ползунком, переданное по ссылке.</param>
      <param name="minLimit">Ограничение в левом конце ползунка.</param>
      <param name="maxLimit">Ограничение в правом конце ползунка.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.MinMaxSlider(UnityEngine.GUIContent,System.Single&amp;,System.Single&amp;,System.Single,System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте специальный ползунок, который пользователь может использовать для указания диапазона между min и max.</para>
      </summary>
      <param name="label">Дополнительная метка перед ползунком.</param>
      <param name="minValue">Наименьшее значение диапазона, отображаемого ползунком, переданное по ссылке.</param>
      <param name="maxValue">Верхнее значение в диапазоне, отображаемом ползунком, переданное по ссылке.</param>
      <param name="minLimit">Ограничение в левом конце ползунка.</param>
      <param name="maxLimit">Ограничение в правом конце ползунка.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ObjectField(UnityEngine.Object,System.Type,System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для получения любого типа объекта.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="obj">Объект, отображаемый в поле.</param>
      <param name="objType">Тип объектов, которые могут быть назначены.</param>
      <param name="allowSceneObjects">Разрешить назначение объектов Scene. Дополнительные сведения см. в разделе Описание.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Объект, заданный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ObjectField(System.String,UnityEngine.Object,System.Type,System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для получения любого типа объекта.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="obj">Объект, отображаемый в поле.</param>
      <param name="objType">Тип объектов, которые могут быть назначены.</param>
      <param name="allowSceneObjects">Разрешить назначение объектов Scene. Дополнительные сведения см. в разделе Описание.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Объект, заданный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ObjectField(UnityEngine.GUIContent,UnityEngine.Object,System.Type,System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для получения любого типа объекта.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="obj">Объект, отображаемый в поле.</param>
      <param name="objType">Тип объектов, которые могут быть назначены.</param>
      <param name="allowSceneObjects">Разрешить назначение объектов Scene. Дополнительные сведения см. в разделе Описание.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Объект, заданный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ObjectField(UnityEditor.SerializedProperty,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для получения любого типа объекта.</para>
      </summary>
      <param name="property">Свойство ссылки на объект, отображаемое в поле.</param>
      <param name="objType">Тип объектов, которые могут быть назначены.</param>
      <param name="label">Необязательная метка перед полем. Передайте файл GUIContent.none, чтобы скрыть метку.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ObjectField(UnityEditor.SerializedProperty,UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для получения любого типа объекта.</para>
      </summary>
      <param name="property">Свойство ссылки на объект, отображаемое в поле.</param>
      <param name="objType">Тип объектов, которые могут быть назначены.</param>
      <param name="label">Необязательная метка перед полем. Передайте файл GUIContent.none, чтобы скрыть метку.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ObjectField(UnityEditor.SerializedProperty,System.Type,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для получения любого типа объекта.</para>
      </summary>
      <param name="property">Свойство ссылки на объект, отображаемое в поле.</param>
      <param name="objType">Тип объектов, которые могут быть назначены.</param>
      <param name="label">Необязательная метка перед полем. Передайте файл GUIContent.none, чтобы скрыть метку.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ObjectField(UnityEditor.SerializedProperty,System.Type,UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для получения любого типа объекта.</para>
      </summary>
      <param name="property">Свойство ссылки на объект, отображаемое в поле.</param>
      <param name="objType">Тип объектов, которые могут быть назначены.</param>
      <param name="label">Необязательная метка перед полем. Передайте файл GUIContent.none, чтобы скрыть метку.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.PasswordField(System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле, в котором пользователь может ввести пароль.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем пароля.</param>
      <param name="password">Пароль для редактирования.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Пароль, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.PasswordField(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле, в котором пользователь может ввести пароль.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем пароля.</param>
      <param name="password">Пароль для редактирования.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Пароль, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.PasswordField(System.String,System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле, в котором пользователь может ввести пароль.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем пароля.</param>
      <param name="password">Пароль для редактирования.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Пароль, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.PasswordField(System.String,System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле, в котором пользователь может ввести пароль.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем пароля.</param>
      <param name="password">Пароль для редактирования.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Пароль, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.PasswordField(UnityEngine.GUIContent,System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле, в котором пользователь может ввести пароль.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем пароля.</param>
      <param name="password">Пароль для редактирования.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Пароль, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.PasswordField(UnityEngine.GUIContent,System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле, в котором пользователь может ввести пароль.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед полем пароля.</param>
      <param name="password">Пароль для редактирования.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Пароль, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Popup(System.Int32,System.String[],UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте универсальное всплывающее поле выбора.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedIndex">Индекс параметра, отображаемого в поле.</param>
      <param name="displayedOptions">Массив с параметрами, отображаемыми во всплывающем окне.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Индекс параметра, выбранного пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Popup(System.Int32,System.String[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте универсальное всплывающее поле выбора.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedIndex">Индекс параметра, отображаемого в поле.</param>
      <param name="displayedOptions">Массив с параметрами, отображаемыми во всплывающем окне.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Индекс параметра, выбранного пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Popup(System.Int32,UnityEngine.GUIContent[],UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте универсальное всплывающее поле выбора.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedIndex">Индекс параметра, отображаемого в поле.</param>
      <param name="displayedOptions">Массив с параметрами, отображаемыми во всплывающем окне.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Индекс параметра, выбранного пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Popup(System.Int32,UnityEngine.GUIContent[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте универсальное всплывающее поле выбора.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedIndex">Индекс параметра, отображаемого в поле.</param>
      <param name="displayedOptions">Массив с параметрами, отображаемыми во всплывающем окне.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Индекс параметра, выбранного пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Popup(System.String,System.Int32,System.String[],UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте универсальное всплывающее поле выбора.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedIndex">Индекс параметра, отображаемого в поле.</param>
      <param name="displayedOptions">Массив с параметрами, отображаемыми во всплывающем окне.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Индекс параметра, выбранного пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Popup(System.String,System.Int32,System.String[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте универсальное всплывающее поле выбора.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedIndex">Индекс параметра, отображаемого в поле.</param>
      <param name="displayedOptions">Массив с параметрами, отображаемыми во всплывающем окне.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Индекс параметра, выбранного пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Popup(UnityEngine.GUIContent,System.Int32,UnityEngine.GUIContent[],UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте универсальное всплывающее поле выбора.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedIndex">Индекс параметра, отображаемого в поле.</param>
      <param name="displayedOptions">Массив с параметрами, отображаемыми во всплывающем окне.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Индекс параметра, выбранного пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Popup(UnityEngine.GUIContent,System.Int32,UnityEngine.GUIContent[],UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте универсальное всплывающее поле выбора.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="selectedIndex">Индекс параметра, отображаемого в поле.</param>
      <param name="displayedOptions">Массив с параметрами, отображаемыми во всплывающем окне.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Индекс параметра, выбранного пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.PrefixLabel(System.String)">
      <summary>
        <para>Сделайте метку перед каким-нибудь элементом управления.</para>
      </summary>
      <param name="label">Метка для отображения слева от элемента управления.</param>
      <param name="followingStyle">
      </param>
      <param name="labelStyle">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.PrefixLabel(UnityEngine.GUIContent)">
      <summary>
        <para>Сделайте метку перед каким-нибудь элементом управления.</para>
      </summary>
      <param name="label">Метка для отображения слева от элемента управления.</param>
      <param name="followingStyle">
      </param>
      <param name="labelStyle">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.PrefixLabel(System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Сделайте метку перед каким-нибудь элементом управления.</para>
      </summary>
      <param name="label">Метка для отображения слева от элемента управления.</param>
      <param name="followingStyle">
      </param>
      <param name="labelStyle">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.PrefixLabel(System.String,UnityEngine.GUIStyle,UnityEngine.GUIStyle)">
      <summary>
        <para>Сделайте метку перед каким-нибудь элементом управления.</para>
      </summary>
      <param name="label">Метка для отображения слева от элемента управления.</param>
      <param name="followingStyle">
      </param>
      <param name="labelStyle">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.PrefixLabel(UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Сделайте метку перед каким-нибудь элементом управления.</para>
      </summary>
      <param name="label">Метка для отображения слева от элемента управления.</param>
      <param name="followingStyle">
      </param>
      <param name="labelStyle">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.PrefixLabel(UnityEngine.GUIContent,UnityEngine.GUIStyle,UnityEngine.GUIStyle)">
      <summary>
        <para>Сделайте метку перед каким-нибудь элементом управления.</para>
      </summary>
      <param name="label">Метка для отображения слева от элемента управления.</param>
      <param name="followingStyle">
      </param>
      <param name="labelStyle">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.PropertyField(UnityEditor.SerializedProperty,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для SerializedProperty.</para>
      </summary>
      <param name="property">Объект SerializedProperty, для которого необходимо создать поле.</param>
      <param name="label">Необязательная метка для использования. Если не указано, используется метка самого свойства. Используйте GUIContent.none, чтобы вообще не отображать метку.</param>
      <param name="includeChildren">Если значение true, то рисуется свойство, включающее детей; в противном случае только сам элемент управления (например, только складка, но ничего под ним).</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение true, если свойство имеет дочерние объекты, расширено и includeChildren имеет значение false; в противном случае — значение false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.PropertyField(UnityEditor.SerializedProperty,UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для SerializedProperty.</para>
      </summary>
      <param name="property">Объект SerializedProperty, для которого необходимо создать поле.</param>
      <param name="label">Необязательная метка для использования. Если не указано, используется метка самого свойства. Используйте GUIContent.none, чтобы вообще не отображать метку.</param>
      <param name="includeChildren">Если значение true, то рисуется свойство, включающее детей; в противном случае только сам элемент управления (например, только складка, но ничего под ним).</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение true, если свойство имеет дочерние объекты, расширено и includeChildren имеет значение false; в противном случае — значение false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.PropertyField(UnityEditor.SerializedProperty,System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для SerializedProperty.</para>
      </summary>
      <param name="property">Объект SerializedProperty, для которого необходимо создать поле.</param>
      <param name="label">Необязательная метка для использования. Если не указано, используется метка самого свойства. Используйте GUIContent.none, чтобы вообще не отображать метку.</param>
      <param name="includeChildren">Если значение true, то рисуется свойство, включающее детей; в противном случае только сам элемент управления (например, только складка, но ничего под ним).</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение true, если свойство имеет дочерние объекты, расширено и includeChildren имеет значение false; в противном случае — значение false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.PropertyField(UnityEditor.SerializedProperty,UnityEngine.GUIContent,System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле для SerializedProperty.</para>
      </summary>
      <param name="property">Объект SerializedProperty, для которого необходимо создать поле.</param>
      <param name="label">Необязательная метка для использования. Если не указано, используется метка самого свойства. Используйте GUIContent.none, чтобы вообще не отображать метку.</param>
      <param name="includeChildren">Если значение true, то рисуется свойство, включающее детей; в противном случае только сам элемент управления (например, только складка, но ничего под ним).</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение true, если свойство имеет дочерние объекты, расширено и includeChildren имеет значение false; в противном случае — значение false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.RectField(UnityEngine.Rect,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле X, Y, W &amp; H для ввода Rect.</para>
      </summary>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.RectField(System.String,UnityEngine.Rect,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле X, Y, W &amp; H для ввода Rect.</para>
      </summary>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.RectField(UnityEngine.GUIContent,UnityEngine.Rect,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле X, Y, W &amp; H для ввода Rect.</para>
      </summary>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.RectIntField(UnityEngine.RectInt,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле X, Y, W &amp; H для ввода RectInt.</para>
      </summary>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.RectIntField(System.String,UnityEngine.RectInt,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле X, Y, W &amp; H для ввода RectInt.</para>
      </summary>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.RectIntField(UnityEngine.GUIContent,UnityEngine.RectInt,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле X, Y, W &amp; H для ввода RectInt.</para>
      </summary>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.EditorGUILayout.ScrollViewScope">
      <summary>
        <para>Одноразовый вспомогательный класс для управления BeginScrollView / EndScrollView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUILayout.ScrollViewScope.handleScrollWheel">
      <summary>
        <para>Должен ли этот ScrollView обрабатывать события колеса прокрутки. (по умолчанию: true).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUILayout.ScrollViewScope.scrollPosition">
      <summary>
        <para>Измененная прокруткаПозиция. Передайте его обратно в передаваемую переменную, как показано в примере.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ScrollViewScope.#ctor(UnityEngine.Vector2,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте новый ScrollViewScope и запустите соответствующий ScrollView.</para>
      </summary>
      <param name="scrollPosition">Используемая позиция прокрутки.</param>
      <param name="alwaysShowHorizontal">Следует ли всегда отображать горизонтальную полосу прокрутки. Если значение равно false, оно отображается только в том случае, если содержимое внутри ScrollView шире, чем само представление scrollview.</param>
      <param name="alwaysShowVertical">Следует ли всегда отображать вертикальную полосу прокрутки. Если значение равно false, оно отображается только в том случае, если содержимое внутри ScrollView выше, чем само представление прокрутки.</param>
      <param name="horizontalScrollbar">Дополнительный GUIStyle для горизонтальной полосы прокрутки. Если его исключить, используется стиль horizontalScrollbar из текущего GUISkin.</param>
      <param name="verticalScrollbar">Дополнительный GUIStyle для вертикальной полосы прокрутки. Если исключить, используется вертикальный стиль Scrollbar из текущего GUISkin.</param>
      <param name="options">
      </param>
      <param name="style">
      </param>
      <param name="background">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ScrollViewScope.#ctor(UnityEngine.Vector2,System.Boolean,System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте новый ScrollViewScope и запустите соответствующий ScrollView.</para>
      </summary>
      <param name="scrollPosition">Используемая позиция прокрутки.</param>
      <param name="alwaysShowHorizontal">Следует ли всегда отображать горизонтальную полосу прокрутки. Если значение равно false, оно отображается только в том случае, если содержимое внутри ScrollView шире, чем само представление scrollview.</param>
      <param name="alwaysShowVertical">Следует ли всегда отображать вертикальную полосу прокрутки. Если значение равно false, оно отображается только в том случае, если содержимое внутри ScrollView выше, чем само представление прокрутки.</param>
      <param name="horizontalScrollbar">Дополнительный GUIStyle для горизонтальной полосы прокрутки. Если его исключить, используется стиль horizontalScrollbar из текущего GUISkin.</param>
      <param name="verticalScrollbar">Дополнительный GUIStyle для вертикальной полосы прокрутки. Если исключить, используется вертикальный стиль Scrollbar из текущего GUISkin.</param>
      <param name="options">
      </param>
      <param name="style">
      </param>
      <param name="background">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ScrollViewScope.#ctor(UnityEngine.Vector2,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте новый ScrollViewScope и запустите соответствующий ScrollView.</para>
      </summary>
      <param name="scrollPosition">Используемая позиция прокрутки.</param>
      <param name="alwaysShowHorizontal">Следует ли всегда отображать горизонтальную полосу прокрутки. Если значение равно false, оно отображается только в том случае, если содержимое внутри ScrollView шире, чем само представление scrollview.</param>
      <param name="alwaysShowVertical">Следует ли всегда отображать вертикальную полосу прокрутки. Если значение равно false, оно отображается только в том случае, если содержимое внутри ScrollView выше, чем само представление прокрутки.</param>
      <param name="horizontalScrollbar">Дополнительный GUIStyle для горизонтальной полосы прокрутки. Если его исключить, используется стиль horizontalScrollbar из текущего GUISkin.</param>
      <param name="verticalScrollbar">Дополнительный GUIStyle для вертикальной полосы прокрутки. Если исключить, используется вертикальный стиль Scrollbar из текущего GUISkin.</param>
      <param name="options">
      </param>
      <param name="style">
      </param>
      <param name="background">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ScrollViewScope.#ctor(UnityEngine.Vector2,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте новый ScrollViewScope и запустите соответствующий ScrollView.</para>
      </summary>
      <param name="scrollPosition">Используемая позиция прокрутки.</param>
      <param name="alwaysShowHorizontal">Следует ли всегда отображать горизонтальную полосу прокрутки. Если значение равно false, оно отображается только в том случае, если содержимое внутри ScrollView шире, чем само представление scrollview.</param>
      <param name="alwaysShowVertical">Следует ли всегда отображать вертикальную полосу прокрутки. Если значение равно false, оно отображается только в том случае, если содержимое внутри ScrollView выше, чем само представление прокрутки.</param>
      <param name="horizontalScrollbar">Дополнительный GUIStyle для горизонтальной полосы прокрутки. Если его исключить, используется стиль horizontalScrollbar из текущего GUISkin.</param>
      <param name="verticalScrollbar">Дополнительный GUIStyle для вертикальной полосы прокрутки. Если исключить, используется вертикальный стиль Scrollbar из текущего GUISkin.</param>
      <param name="options">
      </param>
      <param name="style">
      </param>
      <param name="background">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ScrollViewScope.#ctor(UnityEngine.Vector2,System.Boolean,System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте новый ScrollViewScope и запустите соответствующий ScrollView.</para>
      </summary>
      <param name="scrollPosition">Используемая позиция прокрутки.</param>
      <param name="alwaysShowHorizontal">Следует ли всегда отображать горизонтальную полосу прокрутки. Если значение равно false, оно отображается только в том случае, если содержимое внутри ScrollView шире, чем само представление scrollview.</param>
      <param name="alwaysShowVertical">Следует ли всегда отображать вертикальную полосу прокрутки. Если значение равно false, оно отображается только в том случае, если содержимое внутри ScrollView выше, чем само представление прокрутки.</param>
      <param name="horizontalScrollbar">Дополнительный GUIStyle для горизонтальной полосы прокрутки. Если его исключить, используется стиль horizontalScrollbar из текущего GUISkin.</param>
      <param name="verticalScrollbar">Дополнительный GUIStyle для вертикальной полосы прокрутки. Если исключить, используется вертикальный стиль Scrollbar из текущего GUISkin.</param>
      <param name="options">
      </param>
      <param name="style">
      </param>
      <param name="background">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.SelectableLabel(System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте выбираемое поле метки. (Полезно для отображения информации только для чтения, которую можно копировать и вставлять.)</para>
      </summary>
      <param name="text">Отображаемый текст.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.SelectableLabel(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте выбираемое поле метки. (Полезно для отображения информации только для чтения, которую можно копировать и вставлять.)</para>
      </summary>
      <param name="text">Отображаемый текст.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Slider(System.Single,System.Single,System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте ползунок, который пользователь может перетащить, чтобы изменить значение между min и max.</para>
      </summary>
      <param name="label">Дополнительная метка перед ползунком.</param>
      <param name="value">Значение, отображаемое ползунком. Это определяет положение перетаскиваемого большого пальца.</param>
      <param name="leftValue">Значение в левом конце ползунка.</param>
      <param name="rightValue">Значение в правом конце ползунка.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, заданное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Slider(System.String,System.Single,System.Single,System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте ползунок, который пользователь может перетащить, чтобы изменить значение между min и max.</para>
      </summary>
      <param name="label">Дополнительная метка перед ползунком.</param>
      <param name="value">Значение, отображаемое ползунком. Это определяет положение перетаскиваемого большого пальца.</param>
      <param name="leftValue">Значение в левом конце ползунка.</param>
      <param name="rightValue">Значение в правом конце ползунка.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, заданное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Slider(UnityEngine.GUIContent,System.Single,System.Single,System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте ползунок, который пользователь может перетащить, чтобы изменить значение между min и max.</para>
      </summary>
      <param name="label">Дополнительная метка перед ползунком.</param>
      <param name="value">Значение, отображаемое ползунком. Это определяет положение перетаскиваемого большого пальца.</param>
      <param name="leftValue">Значение в левом конце ползунка.</param>
      <param name="rightValue">Значение в правом конце ползунка.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, заданное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Slider(UnityEditor.SerializedProperty,System.Single,System.Single,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте ползунок, который пользователь может перетащить, чтобы изменить значение между min и max.</para>
      </summary>
      <param name="label">Дополнительная метка перед ползунком.</param>
      <param name="property">Значение, отображаемое ползунком. Это определяет положение перетаскиваемого большого пальца.</param>
      <param name="leftValue">Значение в левом конце ползунка.</param>
      <param name="rightValue">Значение в правом конце ползунка.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Slider(UnityEditor.SerializedProperty,System.Single,System.Single,System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте ползунок, который пользователь может перетащить, чтобы изменить значение между min и max.</para>
      </summary>
      <param name="label">Дополнительная метка перед ползунком.</param>
      <param name="property">Значение, отображаемое ползунком. Это определяет положение перетаскиваемого большого пальца.</param>
      <param name="leftValue">Значение в левом конце ползунка.</param>
      <param name="rightValue">Значение в правом конце ползунка.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Slider(UnityEditor.SerializedProperty,System.Single,System.Single,UnityEngine.GUIContent,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте ползунок, который пользователь может перетащить, чтобы изменить значение между min и max.</para>
      </summary>
      <param name="label">Дополнительная метка перед ползунком.</param>
      <param name="property">Значение, отображаемое ползунком. Это определяет положение перетаскиваемого большого пальца.</param>
      <param name="leftValue">Значение в левом конце ползунка.</param>
      <param name="rightValue">Значение в правом конце ползунка.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Space">
      <summary>
        <para>Создайте небольшой пробел между предыдущим элементом управления и следующим.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.TagField(System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле выбора тега.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="tag">Тег, отображаемый в поле.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Тег, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.TagField(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле выбора тега.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="tag">Тег, отображаемый в поле.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Тег, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.TagField(System.String,System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле выбора тега.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="tag">Тег, отображаемый в поле.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Тег, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.TagField(System.String,System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле выбора тега.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="tag">Тег, отображаемый в поле.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Тег, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.TagField(UnityEngine.GUIContent,System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле выбора тега.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="tag">Тег, отображаемый в поле.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Тег, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.TagField(UnityEngine.GUIContent,System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле выбора тега.</para>
      </summary>
      <param name="label">Необязательная метка перед полем.</param>
      <param name="tag">Тег, отображаемый в поле.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Тег, выбранный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.TextArea(System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создание текстовой области.</para>
      </summary>
      <param name="text">Редактируемый текст.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Текст, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.TextArea(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создание текстовой области.</para>
      </summary>
      <param name="text">Редактируемый текст.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Текст, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.TextField(System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед текстовым полем.</param>
      <param name="text">Редактируемый текст.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Текст, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.TextField(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед текстовым полем.</param>
      <param name="text">Редактируемый текст.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Текст, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.TextField(System.String,System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед текстовым полем.</param>
      <param name="text">Редактируемый текст.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Текст, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.TextField(System.String,System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед текстовым полем.</param>
      <param name="text">Редактируемый текст.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Текст, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.TextField(UnityEngine.GUIContent,System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед текстовым полем.</param>
      <param name="text">Редактируемый текст.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Текст, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.TextField(UnityEngine.GUIContent,System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте текстовое поле.</para>
      </summary>
      <param name="label">Необязательная метка для отображения перед текстовым полем.</param>
      <param name="text">Редактируемый текст.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Текст, введенный пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Toggle(System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте переключатель.</para>
      </summary>
      <param name="label">Дополнительная метка перед переключателем.</param>
      <param name="value">Показанное состояние переключателя.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Выбранное состояние переключателя.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Toggle(System.String,System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте переключатель.</para>
      </summary>
      <param name="label">Дополнительная метка перед переключателем.</param>
      <param name="value">Показанное состояние переключателя.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Выбранное состояние переключателя.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Toggle(UnityEngine.GUIContent,System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте переключатель.</para>
      </summary>
      <param name="label">Дополнительная метка перед переключателем.</param>
      <param name="value">Показанное состояние переключателя.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Выбранное состояние переключателя.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Toggle(System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте переключатель.</para>
      </summary>
      <param name="label">Дополнительная метка перед переключателем.</param>
      <param name="value">Показанное состояние переключателя.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Выбранное состояние переключателя.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Toggle(System.String,System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте переключатель.</para>
      </summary>
      <param name="label">Дополнительная метка перед переключателем.</param>
      <param name="value">Показанное состояние переключателя.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Выбранное состояние переключателя.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Toggle(UnityEngine.GUIContent,System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Сделайте переключатель.</para>
      </summary>
      <param name="label">Дополнительная метка перед переключателем.</param>
      <param name="value">Показанное состояние переключателя.</param>
      <param name="style">Дополнительный GUIStyle.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Выбранное состояние переключателя.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.EditorGUILayout.ToggleGroupScope">
      <summary>
        <para>Начните вертикальную группу с помощью переключателя, чтобы включить или отключить все элементы управления внутри одновременно.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUILayout.ToggleGroupScope.enabled">
      <summary>
        <para>Включенное состояние, выбранное пользователем.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ToggleGroupScope.#ctor(System.String,System.Boolean)">
      <summary>
        <para>
        </para>
      </summary>
      <param name="label">Метка, отображаемая над переключаемыми элементами управления.</param>
      <param name="toggle">Включенное состояние группы переключателей.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ToggleGroupScope.#ctor(UnityEngine.GUIContent,System.Boolean)">
      <summary>
        <para>
        </para>
      </summary>
      <param name="label">Метка, отображаемая над переключаемыми элементами управления.</param>
      <param name="toggle">Включенное состояние группы переключателей.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ToggleLeft(System.String,System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле переключения, где переключатель находится слева, а метка непосредственно справа от него.</para>
      </summary>
      <param name="label">Метка для отображения рядом с переключателем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="labelStyle">Необязательный GUIStyle для использования для метки.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ToggleLeft(UnityEngine.GUIContent,System.Boolean,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле переключения, где переключатель находится слева, а метка непосредственно справа от него.</para>
      </summary>
      <param name="label">Метка для отображения рядом с переключателем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="labelStyle">Необязательный GUIStyle для использования для метки.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ToggleLeft(System.String,System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле переключения, где переключатель находится слева, а метка непосредственно справа от него.</para>
      </summary>
      <param name="label">Метка для отображения рядом с переключателем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="labelStyle">Необязательный GUIStyle для использования для метки.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ToggleLeft(UnityEngine.GUIContent,System.Boolean,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле переключения, где переключатель находится слева, а метка непосредственно справа от него.</para>
      </summary>
      <param name="label">Метка для отображения рядом с переключателем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="labelStyle">Необязательный GUIStyle для использования для метки.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ToolContextToolbar(UnityEngine.GUIContent,System.Collections.Generic.IList`1&lt;T&gt;)">
      <summary>
        <para>Создает панель инструментов, заполненную указанной коллекцией контекстов инструмента редактора.</para>
      </summary>
      <param name="content">Необязательная префиксная метка для отображения перед панелью инструментов. Передайте значение null, чтобы пропустить этот префикс.</param>
      <param name="contexts">Коллекция инструментов редактора для панели инструментов.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.ToolContextToolbarForTarget(UnityEngine.GUIContent,UnityEngine.Object)">
      <summary>
        <para>Создает панель инструментов, заполненную коллекцией EditorToolContext, которая соответствует типу EditorToolContextAttribute.targetType целевого объекта.</para>
      </summary>
      <param name="content">Необязательная префиксная метка. Передайте значение null, чтобы опустить метку.</param>
      <param name="target">Целевой объект. Это может быть либо компонент, либо редактор.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Vector2Field(System.String,UnityEngine.Vector2,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле X &amp; Y для ввода Vector2.</para>
      </summary>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt;</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Vector2Field(UnityEngine.GUIContent,UnityEngine.Vector2,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле X &amp; Y для ввода Vector2.</para>
      </summary>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt;</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Vector2IntField(System.String,UnityEngine.Vector2Int,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте целое поле X &amp; Y для ввода Vector2Int.</para>
      </summary>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Vector2IntField(UnityEngine.GUIContent,UnityEngine.Vector2Int,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте целое поле X &amp; Y для ввода Vector2Int.</para>
      </summary>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Vector3Field(System.String,UnityEngine.Vector3,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле X, Y &amp; Z для ввода Vector3.</para>
      </summary>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Vector3Field(UnityEngine.GUIContent,UnityEngine.Vector3,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле X, Y &amp; Z для ввода Vector3.</para>
      </summary>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Vector3IntField(System.String,UnityEngine.Vector3Int,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте целое поле X, Y и Z для ввода Vector3Int.</para>
      </summary>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Vector3IntField(UnityEngine.GUIContent,UnityEngine.Vector3Int,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте целое поле X, Y и Z для ввода Vector3Int.</para>
      </summary>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.Vector4Field(System.String,UnityEngine.Vector4,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте поле X, Y, Z &amp; W для ввода Vector4.</para>
      </summary>
      <param name="label">Метка для отображения над полем.</param>
      <param name="value">Значение, которое требуется изменить.</param>
      <param name="options">Необязательный список параметров макета, определяющих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>Значение, введенное пользователем.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.EditorGUILayout.VerticalScope">
      <summary>
        <para>Одноразовый вспомогательный класс для управления BeginVertical / EndVertical.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUILayout.VerticalScope.rect">
      <summary>
        <para>Прямоугольник вертикальной группы.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.VerticalScope.#ctor(UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте новый VerticalScope и создайте соответствующую вертикальную группу.</para>
      </summary>
      <param name="style">Стиль, используемый для фонового изображения и значений заполнения. Если оставить за его пределами, фон будет прозрачным.</param>
      <param name="options">Необязательный список параметров макета, задающих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="M:UnityEditor.EditorGUILayout.VerticalScope.#ctor(UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>Создайте новый VerticalScope и создайте соответствующую вертикальную группу.</para>
      </summary>
      <param name="style">Стиль, используемый для фонового изображения и значений заполнения. Если оставить за его пределами, фон будет прозрачным.</param>
      <param name="options">Необязательный список параметров макета, задающих дополнительные свойства макета. Любые значения, переданные здесь, переопределяют параметры, определенные стилем. &lt;br&gt; См. также: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight, GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
    </member>
    <member name="T:UnityEditor.EditorGUIUtility">
      <summary>
        <para>Прочие вспомогательные материалы для EditorGUI.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUIUtility.currentViewWidth">
      <summary>
        <para>Ширина области графического интерфейса пользователя для текущего редактора EditorWindow или другого представления. Доступ к этому свойству должен осуществляться только в рамках вызова OnGUI.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUIUtility.editingTextField">
      <summary>
        <para>Редактируется ли текстовое поле в данный момент?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUIUtility.fieldWidth">
      <summary>
        <para>Минимальная ширина в пикселях, зарезервированная для полей элементов управления Editor GUI.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUIUtility.hierarchyMode">
      <summary>
        <para>Является ли графический интерфейс редактора иерархическим режимом?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUIUtility.isProSkin">
      <summary>
        <para>Использует ли пользователь в настоящее время профессиональный скин? (Только для чтения)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUIUtility.labelWidth">
      <summary>
        <para>Ширина в пикселях, зарезервированная для меток элементов управления Editor GUI.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUIUtility.pixelsPerPoint">
      <summary>
        <para>Масштаб точек графического интерфейса относительно пикселей экрана для текущего представления Это значение представляет собой количество пикселей экрана на точку пространства интерфейса. Например, 2.0 на дисплеях Retina. Обратите внимание, что значение может отличаться от одного представления к другому, если представления находятся на мониторах с разными масштабами пользовательского интерфейса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUIUtility.singleLineHeight">
      <summary>
        <para>Получите высоту, используемую для одного элемента управления Editor, такого как однострочный EditorGUI.TextField или EditorGUI.Popup.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUIUtility.standardVerticalSpacing">
      <summary>
        <para>Получите высоту, используемую по умолчанию для вертикального интервала между элементами управления.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUIUtility.systemCopyBuffer">
      <summary>
        <para>Буфер копирования системы.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUIUtility.textFieldHasSelection">
      <summary>
        <para>Значение true, если текстовое поле в данный момент сфокусировано и текст в нем выделен.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUIUtility.whiteTexture">
      <summary>
        <para>Получите белую текстуру.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorGUIUtility.wideMode">
      <summary>
        <para>Находится ли графический интерфейс редактора в настоящее время в широком режиме?</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.AddCursorRect(UnityEngine.Rect,UnityEditor.MouseCursor)">
      <summary>
        <para>Добавление пользовательского указателя мыши к элементу управления.</para>
      </summary>
      <param name="position">Прямоугольник, внутри которого должен отображаться элемент управления.</param>
      <param name="mouse">Используемый курсор мыши.</param>
      <param name="controlID">Идентификатор целевого элемента управления.</param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.AddCursorRect(UnityEngine.Rect,UnityEditor.MouseCursor,System.Int32)">
      <summary>
        <para>Добавление пользовательского указателя мыши к элементу управления.</para>
      </summary>
      <param name="position">Прямоугольник, внутри которого должен отображаться элемент управления.</param>
      <param name="mouse">Используемый курсор мыши.</param>
      <param name="controlID">Идентификатор целевого элемента управления.</param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.CommandEvent(System.String)">
      <summary>
        <para>Создает событие, которое можно отправить в другое окно.</para>
      </summary>
      <param name="commandName">Отправляемая команда.</param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.DrawColorSwatch(UnityEngine.Rect,UnityEngine.Color)">
      <summary>
        <para>Нарисуйте цветной образец.</para>
      </summary>
      <param name="position">Прямоугольник для рисования образца цвета внутри.</param>
      <param name="color">Цвет для рисования.</param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.DrawCurveSwatch(UnityEngine.Rect,UnityEngine.AnimationCurve,UnityEditor.SerializedProperty,UnityEngine.Color,UnityEngine.Color)">
      <summary>
        <para>Нарисуйте образец кривой.</para>
      </summary>
      <param name="position">Прямоугольник для рисования образца цвета внутри.</param>
      <param name="curve">Кривая для рисования.</param>
      <param name="property">Кривая для рисования в виде serializedProperty.</param>
      <param name="color">Цвет для рисования кривой.</param>
      <param name="bgColor">Цвет для рисования фона.</param>
      <param name="curveRanges">Необязательный параметр для указания диапазона кривой, который должен быть включен в образец.</param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.DrawCurveSwatch(UnityEngine.Rect,UnityEngine.AnimationCurve,UnityEditor.SerializedProperty,UnityEngine.Color,UnityEngine.Color,UnityEngine.Rect)">
      <summary>
        <para>Нарисуйте образец кривой.</para>
      </summary>
      <param name="position">Прямоугольник для рисования образца цвета внутри.</param>
      <param name="curve">Кривая для рисования.</param>
      <param name="property">Кривая для рисования в виде serializedProperty.</param>
      <param name="color">Цвет для рисования кривой.</param>
      <param name="bgColor">Цвет для рисования фона.</param>
      <param name="curveRanges">Необязательный параметр для указания диапазона кривой, который должен быть включен в образец.</param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.DrawRegionSwatch(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEditor.SerializedProperty,UnityEngine.Color,UnityEngine.Color,UnityEngine.Rect)">
      <summary>
        <para>Нарисуйте образец с заполненной областью между двумя кривыми SerializedProperty.</para>
      </summary>
      <param name="position">
      </param>
      <param name="property">
      </param>
      <param name="property2">
      </param>
      <param name="color">
      </param>
      <param name="bgColor">
      </param>
      <param name="curveRanges">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.DrawRegionSwatch(UnityEngine.Rect,UnityEngine.AnimationCurve,UnityEngine.AnimationCurve,UnityEngine.Color,UnityEngine.Color,UnityEngine.Rect)">
      <summary>
        <para>Нарисуйте образец с областью заполнения между двумя кривыми.</para>
      </summary>
      <param name="position">
      </param>
      <param name="curve">
      </param>
      <param name="curve2">
      </param>
      <param name="color">
      </param>
      <param name="bgColor">
      </param>
      <param name="curveRanges">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.FindTexture(System.String)">
      <summary>
        <para>Получите текстуру из имени исходного файла.</para>
      </summary>
      <param name="name">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.GetBuiltinSkin(UnityEditor.EditorSkin)">
      <summary>
        <para>Получите один из встроенных скинов GUI, который может быть игровым представлением, инспектором или скином представления сцены, выбранным параметром.</para>
      </summary>
      <param name="skin">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.GetFlowLayoutedRects(UnityEngine.Rect,UnityEngine.GUIStyle,System.Single,System.Single,System.Collections.Generic.List`1&lt;System.String&gt;)">
      <summary>
        <para>Макет списка строковых элементов слева направо, сверху вниз в заданной области.</para>
      </summary>
      <param name="rect">Область, где нужно разместить элементы.</param>
      <param name="style">Стиль для элементов.</param>
      <param name="horizontalSpacing">Дополнительный горизонтальный интервал между последовательными элементами.</param>
      <param name="verticalSpacing">Дополнительный вертикальный интервал между строками элементов.</param>
      <param name="items">Строки для макета.</param>
      <returns>
        <para>Список прямоугольников для переданных элементов.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.GetIconForObject(UnityEngine.Object)">
      <summary>
        <para>Получает пользовательский значок, связанный с объектом. Только GameObjects и MonoScript имеют связанные пользовательские значки.</para>
      </summary>
      <param name="obj">Объект GameObject или MonoScript для запроса</param>
      <returns>
        <para>Возвращает пользовательский значок, связанный с объектом. Если с объектом не связан пользовательский значок, возвращает значение null.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.GetIconSize">
      <summary>
        <para>Получите размер, заданный с помощью SetIconSize.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.GetMainWindowPosition">
      <summary>
        <para>Возвращает положение главного окна редактора Unity.</para>
      </summary>
      <returns>
        <para>Положение главного окна редактора Unity.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.GetObjectPickerControlID">
      <summary>
        <para>Идентификатор элемента управления текущего средства выбора объектов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.GetObjectPickerObject">
      <summary>
        <para>Объект, выбранный в данный момент в средстве выбора объектов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.HasObjectThumbnail(System.Type)">
      <summary>
        <para>Имеет ли данный класс миниатюры для каждого объекта?</para>
      </summary>
      <param name="objType">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.IconContent(System.String)">
      <summary>
        <para>Извлеките GUIContent из встроенных ресурсов Unity с заданным именем.</para>
      </summary>
      <param name="name">Имя нужного значка.</param>
      <param name="text">Всплывающая подсказка для наведения указателя мыши на значок.</param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.IconContent(System.String,System.String)">
      <summary>
        <para>Извлеките GUIContent из встроенных ресурсов Unity с заданным именем.</para>
      </summary>
      <param name="name">Имя нужного значка.</param>
      <param name="text">Всплывающая подсказка для наведения указателя мыши на значок.</param>
    </member>
    <member name="T:UnityEditor.EditorGUIUtility.IconSizeScope">
      <summary>
        <para>Одноразовый помощник области для GetIconSize / SetIconSize.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.IconSizeScope.#ctor(UnityEngine.Vector2)">
      <summary>
        <para>Запустите IconSizeScope.</para>
      </summary>
      <param name="iconSizeWithinScope">Размер, который будет использоваться для значков, отображаемых как GUIContent в этой области.</param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.IsDisplayReferencedByCameras(System.Int32)">
      <summary>
        <para>Проверьте, может ли какая-либо включенная камера отображаться на определенном дисплее.</para>
      </summary>
      <param name="displayIndex">Отображаемый индекс.</param>
      <returns>
        <para>Значение true, если камера будет отображаться на дисплее.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.Load(System.String)">
      <summary>
        <para>Загрузите встроенный ресурс.</para>
      </summary>
      <param name="path">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.LoadRequired(System.String)">
      <summary>
        <para>Загрузите необходимый встроенный ресурс.</para>
      </summary>
      <param name="path">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.LookLikeControls">
      <summary>
        <para>Сделайте так, чтобы все EditorGUI выглядели как обычные элементы управления.</para>
      </summary>
      <param name="labelWidth">Ширина, используемая для префиксных меток.</param>
      <param name="fieldWidth">Ширина текстовых записей.</param>
      <param name="_labelWidth">
      </param>
      <param name="_fieldWidth">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.LookLikeControls">
      <summary>
        <para>Сделайте так, чтобы все EditorGUI выглядели как обычные элементы управления.</para>
      </summary>
      <param name="labelWidth">Ширина, используемая для префиксных меток.</param>
      <param name="fieldWidth">Ширина текстовых записей.</param>
      <param name="_labelWidth">
      </param>
      <param name="_fieldWidth">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.LookLikeControls(System.Single,System.Single)">
      <summary>
        <para>Сделайте так, чтобы все EditorGUI выглядели как обычные элементы управления.</para>
      </summary>
      <param name="labelWidth">Ширина, используемая для префиксных меток.</param>
      <param name="fieldWidth">Ширина текстовых записей.</param>
      <param name="_labelWidth">
      </param>
      <param name="_fieldWidth">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.LookLikeInspector">
      <summary>
        <para>Сделайте так, чтобы все элементы управления EditorGUI выглядели как упрощенные элементы управления представлением структуры.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.ObjectContent(UnityEngine.Object,System.Type)">
      <summary>
        <para>Возвращает объект GUIContent с именем и значком объекта Object.</para>
      </summary>
      <param name="obj">
      </param>
      <param name="type">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.PingObject(UnityEngine.Object)">
      <summary>
        <para>Проверьте связь с объектом в сцене, например щелкните его в инспекторе.</para>
      </summary>
      <param name="obj">Объект, для которого выполняется проверка связи.</param>
      <param name="targetInstanceID">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.PingObject(System.Int32)">
      <summary>
        <para>Проверьте связь с объектом в сцене, например щелкните его в инспекторе.</para>
      </summary>
      <param name="obj">Объект, для которого выполняется проверка связи.</param>
      <param name="targetInstanceID">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.PixelsToPoints(UnityEngine.Vector2)">
      <summary>
        <para>Преобразование позиции из пикселя в пространство точек.</para>
      </summary>
      <param name="position">Положение графического интерфейса пользователя в пиксельном пространстве.</param>
      <returns>
        <para>Вектор, представляющий ту же позицию в точечном пространстве.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.PixelsToPoints(UnityEngine.Rect)">
      <summary>
        <para>Преобразование rect из пиксельного пространства в точечное пространство.</para>
      </summary>
      <param name="rect">Графический интерфейс пользователя rect, измеряемый в пикселях.</param>
      <returns>
        <para>Рект, представляющий ту же область в точках.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.PointsToPixels(UnityEngine.Vector2)">
      <summary>
        <para>Преобразуйте объект Rect из точечного пространства в пиксельное пространство.</para>
      </summary>
      <param name="position">Графический интерфейс, измеряемый в пунктах.</param>
      <returns>
        <para>Рект, представляющий ту же область в пикселях.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.PointsToPixels(UnityEngine.Rect)">
      <summary>
        <para>Преобразует позицию из точки в пиксельное пространство.</para>
      </summary>
      <param name="rect">Положение графического интерфейса пользователя в точечном пространстве.</param>
      <returns>
        <para>Та же позиция в пиксельном пространстве.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.EditorGUIUtility.PropertyCallbackScope">
      <summary>
        <para>Задает область, в которой вызывается обратный вызов перед отображением каждого свойства.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.PropertyCallbackScope.#ctor(System.Action`2&lt;UnityEngine.Rect,UnityEditor.SerializedProperty&gt;)">
      <summary>
        <para>Запустите объект PropertyCallbackScope.</para>
      </summary>
      <param name="callback">Обратный вызов вызывается для каждого отображаемого свойства и перед началом рисования.</param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.PropertyCallbackScope.Dispose">
      <summary>
        <para>Освобождает обратный вызов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.QueueGameViewInputEvent(UnityEngine.Event)">
      <summary>
        <para>Отправьте входное событие в игру.</para>
      </summary>
      <param name="evt">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.RenderGameViewCameras(UnityEngine.Rect,System.Boolean,System.Boolean)">
      <summary>
        <para>Рендеринг всех внутриигровых камер.</para>
      </summary>
      <param name="cameraRect">Устройство определяет координаты для рендеринга всех игровых камер.</param>
      <param name="gizmos">Покажите вещицы также.</param>
      <param name="gui">
      </param>
      <param name="statsRect">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.RenderGameViewCameras(UnityEngine.Rect,UnityEngine.Rect,System.Boolean,System.Boolean)">
      <summary>
        <para>Рендеринг всех внутриигровых камер.</para>
      </summary>
      <param name="cameraRect">Устройство определяет координаты для рендеринга всех игровых камер.</param>
      <param name="gizmos">Покажите вещицы также.</param>
      <param name="gui">
      </param>
      <param name="statsRect">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.SetIconForObject(UnityEngine.Object,UnityEngine.Texture2D)">
      <summary>
        <para>Задает пользовательский значок для связывания с Объектом GameObject или MonoScript. Пользовательский значок отображается в представлении «Сцена» и инспекторе.</para>
      </summary>
      <param name="obj">Объект GameObject или MonoScript, с которым необходимо связать значок.</param>
      <param name="icon">Пользовательский значок, связанный с Объектом GameObject или MonoScript. Если это значение равно null, значок по умолчанию восстанавливается.</param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.SetIconSize(UnityEngine.Vector2)">
      <summary>
        <para>Установите значки, отображаемые как часть GUIContent, для рендеринга в определенном размере.</para>
      </summary>
      <param name="size">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.SetMainWindowPosition(UnityEngine.Rect)">
      <summary>
        <para>Задает положение главного окна редактора Unity.</para>
      </summary>
      <param name="position">
      </param>
    </member>
    <member name="M:UnityEditor.EditorGUIUtility.ShowObjectPicker(UnityEngine.Object,System.Boolean,System.String,System.Int32)">
      <summary>
        <para>Отображение средства выбора объектов из кода.</para>
      </summary>
      <param name="obj">Объект, выделяемый по умолчанию.</param>
      <param name="allowSceneObjects">Разрешен ли выбор объектов Scene или должен отображаться только ресурсы.</param>
      <param name="searchFilter">Применяемый фильтр поиска по умолчанию.</param>
      <param name="controlID">Идентификатор устанавливаемого элемента управления. Это полезно, если вы показываете более одного из них. Вы можете получить значение позже.</param>
    </member>
    <member name="T:UnityEditor.EditorJsonUtility">
      <summary>
        <para>Служебные функции для работы с данными JSON и объектами движка.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorJsonUtility.FromJsonOverwrite(System.String,System.Object)">
      <summary>
        <para>Перезаписывайте данные в объекте, считывая данные из его представления JSON.</para>
      </summary>
      <param name="json">JSON-представление объекта.</param>
      <param name="objectToOverwrite">Объект, который требуется перезаписать.</param>
    </member>
    <member name="M:UnityEditor.EditorJsonUtility.ToJson(System.Object)">
      <summary>
        <para>Создание JSON-представления объекта.</para>
      </summary>
      <param name="obj">Объект, преобразуемый в форму JSON.</param>
      <param name="prettyPrint">Если значение равно true, отформатируйте выходные данные для удобства чтения. Если значение равно false, отформатируйте выходные данные для минимального размера. Значение по умолчанию — false.</param>
      <returns>
        <para>Данные объекта в формате JSON.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorJsonUtility.ToJson(System.Object,System.Boolean)">
      <summary>
        <para>Создание JSON-представления объекта.</para>
      </summary>
      <param name="obj">Объект, преобразуемый в форму JSON.</param>
      <param name="prettyPrint">Если значение равно true, отформатируйте выходные данные для удобства чтения. Если значение равно false, отформатируйте выходные данные для минимального размера. Значение по умолчанию — false.</param>
      <returns>
        <para>Данные объекта в формате JSON.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.EditorPrefs">
      <summary>
        <para>Сохраняет и получает доступ к настройкам редактора Unity.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorPrefs.DeleteAll">
      <summary>
        <para>Удаляет все ключи и значения из настроек. Используйте с осторожностью.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorPrefs.DeleteKey(System.String)">
      <summary>
        <para>Удаляет ключ и соответствующее ему значение из настроек.</para>
      </summary>
      <param name="key">
      </param>
    </member>
    <member name="M:UnityEditor.EditorPrefs.GetBool(System.String)">
      <summary>
        <para>Возвращает значение, соответствующее ключу в файле предпочтений, если он существует.</para>
      </summary>
      <param name="key">
      </param>
      <param name="defaultValue">
      </param>
    </member>
    <member name="M:UnityEditor.EditorPrefs.GetBool(System.String,System.Boolean)">
      <summary>
        <para>Возвращает значение, соответствующее ключу в файле предпочтений, если он существует.</para>
      </summary>
      <param name="key">
      </param>
      <param name="defaultValue">
      </param>
    </member>
    <member name="M:UnityEditor.EditorPrefs.GetFloat(System.String)">
      <summary>
        <para>Возвращает значение float, соответствующее ключу, если оно существует в файле предпочтений.</para>
      </summary>
      <param name="key">Имя ключа для чтения float.</param>
      <param name="defaultValue">Значение float, возвращаемое, если ключа нет в хранилище.</param>
      <returns>
        <para>Значение float, хранящееся в файле предпочтений, или идентификатор значения defaultValue, запрошенный с плавающей точкой, не существует.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorPrefs.GetFloat(System.String,System.Single)">
      <summary>
        <para>Возвращает значение float, соответствующее ключу, если оно существует в файле предпочтений.</para>
      </summary>
      <param name="key">Имя ключа для чтения float.</param>
      <param name="defaultValue">Значение float, возвращаемое, если ключа нет в хранилище.</param>
      <returns>
        <para>Значение float, хранящееся в файле предпочтений, или идентификатор значения defaultValue, запрошенный с плавающей точкой, не существует.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorPrefs.GetInt(System.String)">
      <summary>
        <para>Возвращает значение, соответствующее ключу в файле предпочтений, если он существует.</para>
      </summary>
      <param name="key">Имя ключа для считывания целого числа.</param>
      <param name="defaultValue">Целое значение, возвращаемое, если ключа нет в хранилище.</param>
      <returns>
        <para>Значение, хранящееся в файле предпочтений.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorPrefs.GetInt(System.String,System.Int32)">
      <summary>
        <para>Возвращает значение, соответствующее ключу в файле предпочтений, если он существует.</para>
      </summary>
      <param name="key">Имя ключа для считывания целого числа.</param>
      <param name="defaultValue">Целое значение, возвращаемое, если ключа нет в хранилище.</param>
      <returns>
        <para>Значение, хранящееся в файле предпочтений.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorPrefs.GetString(System.String)">
      <summary>
        <para>Возвращает значение, соответствующее ключу в файле предпочтений, если он существует.</para>
      </summary>
      <param name="key">
      </param>
      <param name="defaultValue">
      </param>
    </member>
    <member name="M:UnityEditor.EditorPrefs.GetString(System.String,System.String)">
      <summary>
        <para>Возвращает значение, соответствующее ключу в файле предпочтений, если он существует.</para>
      </summary>
      <param name="key">
      </param>
      <param name="defaultValue">
      </param>
    </member>
    <member name="M:UnityEditor.EditorPrefs.HasKey(System.String)">
      <summary>
        <para>Возвращает значение true, если ключ существует в файле установок.</para>
      </summary>
      <param name="key">Имя проверяемого ключа.</param>
      <returns>
        <para>Наличие или отсутствие ключа.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorPrefs.SetBool(System.String,System.Boolean)">
      <summary>
        <para>Задает значение предпочтения, определенного ключом.</para>
      </summary>
      <param name="key">
      </param>
      <param name="value">
      </param>
    </member>
    <member name="M:UnityEditor.EditorPrefs.SetFloat(System.String,System.Single)">
      <summary>
        <para>Задает плавающее значение предпочтения, определенного ключом.</para>
      </summary>
      <param name="key">Имя ключа для записи float.</param>
      <param name="value">Плавающее значение для записи в хранилище.</param>
    </member>
    <member name="M:UnityEditor.EditorPrefs.SetInt(System.String,System.Int32)">
      <summary>
        <para>Задает значение предпочтения, определенного ключом, как целое число.</para>
      </summary>
      <param name="key">Имя ключа для записи целого числа.</param>
      <param name="value">Значение целого числа для записи в хранилище.</param>
    </member>
    <member name="M:UnityEditor.EditorPrefs.SetString(System.String,System.String)">
      <summary>
        <para>Задает значение предпочтения, определенного ключом. Обратите внимание, что EditorPrefs не поддерживает пустые строки и вместо этого будет хранить пустую строку.</para>
      </summary>
      <param name="key">
      </param>
      <param name="value">
      </param>
    </member>
    <member name="T:UnityEditor.EditorSelectedRenderState">
      <summary>
        <para>Редактор выбрал режим рендеринга для выбора Scene View.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorSelectedRenderState.Hidden">
      <summary>
        <para>В модуле подготовки отчетов в редакторе отсутствует подсветка выделения или каркас.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorSelectedRenderState.Highlight">
      <summary>
        <para>Рендерер имеет подсветку выделения, но не имеет каркаса в редакторе.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorSelectedRenderState.Wireframe">
      <summary>
        <para>Рендерер имеет каркас, но не выделяет выделение в редакторе.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.EditorSettings">
      <summary>
        <para>Пользовательские настройки для редактора Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.assetNamingUsesSpace">
      <summary>
        <para>Определяет, следует ли вставлять пробел перед числом в дублирующихся именах активов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.assetPipelineMode">
      <summary>
        <para>Выберите режим assetpipeline.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.asyncShaderCompilation">
      <summary>
        <para>Включите асинхронную компиляцию шейдеров в представлении «Игра и сцена».</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.cacheServerDownloadBatchSize">
      <summary>
        <para>Управляет размером пакетов, используемых при выполнении запросов на загрузку сервера кэша.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.cacheServerEnableAuth">
      <summary>
        <para>Переключите необходимость включения проверки подлинности для кэширования сервера.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.cacheServerEnableDownload">
      <summary>
        <para>Переключите ли включение загрузки с сервера кэша.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.cacheServerEnableTls">
      <summary>
        <para>Переключите, следует ли включить шифрование TLS для кэширования сервера.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.cacheServerEnableUpload">
      <summary>
        <para>Переключите, следует ли включить отправку с сервера кэша.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.cacheServerEndpoint">
      <summary>
        <para>IP-адрес конечной точки сервера кэширования</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.cacheServerMode">
      <summary>
        <para>Выберите режим сервера кэширования</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.cacheServerNamespacePrefix">
      <summary>
        <para>Задает префикс пространства имен, используемый для сервера кэша.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.cacheServerValidationMode">
      <summary>
        <para>Выберите Режим проверки сервера ускорителя.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.cachingShaderPreprocessor">
      <summary>
        <para>Включает препроцессор кэширования шейдеров.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.disableCookiesInLightmapper">
      <summary>
        <para>Это свойство теперь устарело. Используйте EditorSettings.enableCookiesInLightmapper. </para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.enableCookiesInLightmapper">
      <summary>
        <para>Определяет, должны ли файлы cookie оцениваться Progressive Lightmapper во время расчетов Global Illumination.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.enableTextureStreamingInEditMode">
      <summary>
        <para>Включите систему потоковой передачи текстур mipmap в режиме редактирования.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.enableTextureStreamingInPlayMode">
      <summary>
        <para>Включите систему потоковой передачи текстур mipmap в режиме воспроизведения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.enterPlayModeOptions">
      <summary>
        <para>Определяет состояние параметров режима enter play в редакторе Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.enterPlayModeOptionsEnabled">
      <summary>
        <para>Определяет, включены ли параметры режима воспроизведения в редакторе Unity или нет.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.gameObjectNamingDigits">
      <summary>
        <para>Указывает количество цифр, используемых для чисел в дублированном имени GameoObject.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.gameObjectNamingScheme">
      <summary>
        <para>Указывает, какую схему именования следует использовать для дублирующихся объектов GameObjects.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.prefabModeAllowAutoSave">
      <summary>
        <para>Разрешить автоматическое сохранение в предварительном режиме для этого проекта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.prefabRegularEnvironment">
      <summary>
        <para>Позволяет указать сцену для использования в качестве префабов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.prefabUIEnvironment">
      <summary>
        <para>Позволяет указать Scene для использования в качестве префабов пользовательского интерфейса.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.projectGenerationRootNamespace">
      <summary>
        <para>Определяет, какое корневое пространство имен записывается в проекты c# .csproj, создаваемые Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.projectGenerationUserExtensions">
      <summary>
        <para>Управляет списком расширений файлов, которые будут включены в проекты c# .csproj, создаваемые Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.refreshImportMode">
      <summary>
        <para>Управляет использованием редактором параллельных процессов при импорте ресурсов во время обновления базы данных активов для этого проекта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.serializeInlineMappingsOnOneLine">
      <summary>
        <para>Заставляет Unity записывать ссылки и другие встроенные сопоставления в одной строке, чтобы уменьшить шум управления версиями.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.spritePackerPaddingPower">
      <summary>
        <para>Мощность 2 значения для добавления границы (заполнения) к спрайтам, упакованным в Atlas (Legacy Sprite Packer).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.unityRemoteCompression">
      <summary>
        <para>Получает или задает метод сжатия, используемый для потока экрана Unity Remote.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.unityRemoteDevice">
      <summary>
        <para>Получает или задает идентификатор устройства, используемый для функции Unity Remote.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.unityRemoteJoystickSource">
      <summary>
        <para>Получает или задает источник джойстика, используемый в редакторе при подключении Unity Remote.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.unityRemoteResolution">
      <summary>
        <para>Получает или задает разрешение, используемое для потока экрана Unity Remote.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.useLegacyProbeSampleCount">
      <summary>
        <para>Включите устаревшее фиксированное количество образцов для выпечки light Probes с помощью Progressive Lightmapper.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.webSecurityEmulationEnabled">
      <summary>
        <para>Определяет, эмулирует ли редактор Unity ограничения сетевой безопасности веб-проигрывателя.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSettings.webSecurityEmulationHostUrl">
      <summary>
        <para>URL-адрес, по которому функция эмуляции веб-безопасности будет притворяться, что ваша игра размещена.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.EditorSettings.NamingScheme">
      <summary>
        <para>Какую схему именования использовать для дублирующихся объектов GameObjects.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorSettings.NamingScheme.Dot">
      <summary>
        <para>Добавляет точку, за которой следует число, к имени экземпляра или дубликата Объекта GameObject ('Prefab.1').</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorSettings.NamingScheme.SpaceParenthesis">
      <summary>
        <para>Добавляет пробел и число в скобках к имени экземпляра или дубликата Объекта GameObject ('Prefab (1)').</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorSettings.NamingScheme.Underscore">
      <summary>
        <para>Добавляет подчеркивание и число к имени экземпляра или дубликата Объекта GameObject ('Prefab_1').</para>
      </summary>
    </member>
    <member name="T:UnityEditor.EditorSkin">
      <summary>
        <para>Перечисление, выбирающее, какой скин вернуть из EditorGUIUtility.GetBuiltinSkin.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorSkin.Game">
      <summary>
        <para>Скин, используемый для игровых представлений.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorSkin.Inspector">
      <summary>
        <para>Кожа используется для инспекторов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorSkin.Scene">
      <summary>
        <para>Обложка, используемая для представлений сцены.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.EditorSnapSettings">
      <summary>
        <para>Управляйте поведением привязки маркера в редакторе.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSnapSettings.gridSnapEnabled">
      <summary>
        <para>Получает или задает значение, указывающее, включена ли привязка сетки.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.EditorSnapSettings.gridSnapEnabledChanged(System.Action)">
      <summary>
        <para>Обратный вызов инициируется при изменении значения значения привязки сетки.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="P:UnityEditor.EditorSnapSettings.move">
      <summary>
        <para>Получает или задает приращение, к которому выполняется привязка обработки перевода.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSnapSettings.rotate">
      <summary>
        <para>Получает или задает приращение, к которому прикреплена ручка поворота.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorSnapSettings.scale">
      <summary>
        <para>Получает или задает приращение, к которому прикрепляются маркеры масштабирования.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorSnapSettings.ResetSnapSettings">
      <summary>
        <para>Сбрасывает настройки EditorSnap до значений по умолчанию.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.EditorStyles">
      <summary>
        <para>Общие стили GUIStyles, используемые для элементов управления EditorGUI.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.boldFont">
      <summary>
        <para>Жирный шрифт.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.boldLabel">
      <summary>
        <para>Стиль для жирной этикетки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.centeredGreyMiniLabel">
      <summary>
        <para>Стиль для этикетки с мелким шрифтом, который центрирован и серый.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.colorField">
      <summary>
        <para>Стиль, используемый для заголовков для полей Цвета.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.foldout">
      <summary>
        <para>Стиль, используемый для заголовков для EditorGUI.Foldout.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.foldoutHeader">
      <summary>
        <para>Стиль, используемый для заголовков для EditorGUILayout.BeginFoldoutHeaderGroup.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.foldoutHeaderIcon">
      <summary>
        <para>Стиль, используемый для значка для EditorGUILayout.BeginFoldoutHeaderGroup.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.foldoutPreDrop">
      <summary>
        <para>Стиль, используемый для заголовков для EditorGUI.Foldout.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.helpBox">
      <summary>
        <para>Стиль, используемый для фонового поля для EditorGUI.HelpBox.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.iconButton">
      <summary>
        <para>Стиль, используемый для автономной кнопки значка.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.inspectorDefaultMargins">
      <summary>
        <para>Оберните содержимое в вертикальную группу с помощью этого стиля, чтобы получить поля по умолчанию, используемые в инспекторе.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.inspectorFullWidthMargins">
      <summary>
        <para>Оберните содержимое в вертикальную группу с помощью этого стиля, чтобы получить поля полной ширины в инспекторе.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.label">
      <summary>
        <para>Стиль, используемый для помеченных на всех перегрузках EditorGUI, которые принимают префиксную метку.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.largeLabel">
      <summary>
        <para>Стиль для этикетки крупным шрифтом.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.layerMaskField">
      <summary>
        <para>Стиль, используемый для заголовков для слоев-масок.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.linkLabel">
      <summary>
        <para>Стиль, используемый для ссылок.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.miniBoldFont">
      <summary>
        <para>Мини Жирный шрифт.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.miniBoldLabel">
      <summary>
        <para>Стиль для мини жирной этикетки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.miniButton">
      <summary>
        <para>Стиль, используемый для автономной маленькой кнопки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.miniButtonLeft">
      <summary>
        <para>Стиль, используемый для самой левой кнопки в горизонтальной группе кнопок.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.miniButtonMid">
      <summary>
        <para>Стиль, используемый для средних кнопок в горизонтальной группе.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.miniButtonRight">
      <summary>
        <para>Стиль, используемый для самой правой кнопки в горизонтальной группе.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.miniFont">
      <summary>
        <para>Мини-шрифт.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.miniLabel">
      <summary>
        <para>Стиль для этикетки мелким шрифтом.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.miniPullDown">
      <summary>
        <para>Стиль, используемый для элементов управления раскрывающегося списка.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.miniTextField">
      <summary>
        <para>Меньшее текстовое поле.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.numberField">
      <summary>
        <para>Стиль, используемый для редакторов полей для чисел.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.objectField">
      <summary>
        <para>Стиль, используемый для заголовков полей объектов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.objectFieldMiniThumb">
      <summary>
        <para>Стиль, используемый для полей объектов с миниатюрой (например, текстуры). </para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.objectFieldThumb">
      <summary>
        <para>Стиль, используемый для заголовков кнопки «Выбрать» в полях объекта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.popup">
      <summary>
        <para>Стиль, используемый для EditorGUI.Popup, EditorGUI.EnumPopup,.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.radioButton">
      <summary>
        <para>Стиль, используемый для переключателя.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.selectionRect">
      <summary>
        <para>Стиль, используемый для рисования выделенной области в SceneView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.standardFont">
      <summary>
        <para>Стандартный шрифт.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.textArea">
      <summary>
        <para>Стиль, используемый для EditorGUI.TextArea.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.textField">
      <summary>
        <para>Стиль, используемый для EditorGUI.TextField.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.toggle">
      <summary>
        <para>Стиль, используемый для заголовков для EditorGUI.Toggle.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.toggleGroup">
      <summary>
        <para>Стиль, используемый для заголовков для EditorGUILayout.BeginToggleGroup.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.toolbar">
      <summary>
        <para>Фон панели инструментов из верхней части окон.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.toolbarButton">
      <summary>
        <para>Стиль для кнопок и переключателей на панелях инструментов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.toolbarDropDown">
      <summary>
        <para>Раскрывающийся список панелей инструментов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.toolbarPopup">
      <summary>
        <para>Всплывающее окно панели инструментов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.toolbarSearchField">
      <summary>
        <para>Поле поиска панели инструментов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.toolbarTextField">
      <summary>
        <para>Текстовое поле панели инструментов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.whiteBoldLabel">
      <summary>
        <para>Стиль для белой жирной этикетки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.whiteLabel">
      <summary>
        <para>Стиль для белой этикетки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.whiteLargeLabel">
      <summary>
        <para>Стиль для белой крупной этикетки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.whiteMiniLabel">
      <summary>
        <para>Стиль для белой мини-этикетки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.wordWrappedLabel">
      <summary>
        <para>Стиль метки с переносом слов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorStyles.wordWrappedMiniLabel">
      <summary>
        <para>Стиль для мини-этикетки с переносом слов.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.EditorTools.EditorTool">
      <summary>
        <para>Используйте этот класс для реализации инструментов редактора. Это базовый класс, от которого наследуются все инструменты редактора.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorTools.EditorTool.gridSnapEnabled">
      <summary>
        <para>Это свойство используется для разрешения текущему инструменту EditorTool включать/отключать привязку сетки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorTools.EditorTool.target">
      <summary>
        <para>Проверяемый объект.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorTools.EditorTool.targets">
      <summary>
        <para>Массив проверяемых объектов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorTools.EditorTool.toolbarIcon">
      <summary>
        <para>Значок и всплывающая подсказка для этого пользовательского инструмента редактора. Если эта функция не реализована, на панели инструментов отображается значок инспектора для целевого типа. Если целевой тип не определен, на панели инструментов отображается значок «Режим инструмента».</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorTools.EditorTool.IsAvailable">
      <summary>
        <para>Проверяет доступность пользовательского инструмента редактора в зависимости от состояния редактора.</para>
      </summary>
      <returns>
        <para>Возвращает значение true, если доступно пользовательское средство редактора. В противном случае возвращает значение false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorTools.EditorTool.OnActivated">
      <summary>
        <para>Вызывается после этого EditorTool становится активным инструментом.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorTools.EditorTool.OnToolGUI(UnityEditor.EditorWindow)">
      <summary>
        <para>Используйте этот метод для реализации пользовательского инструмента редактора.</para>
      </summary>
      <param name="window">Окно, в котором отображается пользовательский инструмент редактора.</param>
    </member>
    <member name="M:UnityEditor.EditorTools.EditorTool.OnWillBeDeactivated">
      <summary>
        <para>Вызывается до того, как этот EditorTool перестанет быть активным инструментом.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.EditorTools.EditorToolAttribute">
      <summary>
        <para>Регистрирует EditorTool в качестве глобального инструмента или компонента для определенного целевого типа.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorTools.EditorToolAttribute.#ctor(System.String,System.Type,System.Type)">
      <summary>
        <para>Регистрирует EditorTool в качестве глобального инструмента или инструмента CustomEditor.</para>
      </summary>
      <param name="displayName">Имя, отображаемое в меню.</param>
      <param name="componentToolTarget">Задайте тип, который может редактировать этот инструмент. Задайте значение null, если средство не является инструментом компонента.</param>
      <param name="editorToolContext">Задайте тип EditorToolContext, к которому относится этот инструмент. Когда EditorTool определяет область editorToolContext, инструмент не отображается в меню и должен быть активирован методом EditorToolContext.ResolveTool.</param>
    </member>
    <member name="M:UnityEditor.EditorTools.EditorToolAttribute.#ctor(System.String,System.Type)">
      <summary>
        <para>Регистрирует EditorTool в качестве глобального инструмента или инструмента CustomEditor.</para>
      </summary>
      <param name="displayName">Имя, отображаемое в меню.</param>
      <param name="componentToolTarget">Задайте тип, который может редактировать этот инструмент. Задайте значение null, если средство не является инструментом компонента.</param>
      <param name="editorToolContext">Задайте тип EditorToolContext, к которому относится этот инструмент. Когда EditorTool определяет область editorToolContext, инструмент не отображается в меню и должен быть активирован методом EditorToolContext.ResolveTool.</param>
    </member>
    <member name="T:UnityEditor.EditorTools.EditorToolContext">
      <summary>
        <para>Этот класс используется для реализации специализированных версий встроенных средств преобразования. Встроенные инструменты преобразования включают «Перемещение», «Поворот», «Масштабирование», «Выпрямление» и «Преобразование».</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorTools.EditorToolContext.target">
      <summary>
        <para>Проверяемый объект.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorTools.EditorToolContext.targets">
      <summary>
        <para>Массив проверяемых объектов.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorTools.EditorToolContext.GetEditorToolType(UnityEditor.Tool)">
      <summary>
        <para>Определяет тип EditorTool для данного инструмента.</para>
      </summary>
      <param name="tool">Инструмент, который необходимо преобразовать в тип EditorTool.</param>
      <returns>
        <para>Тип EditorTool для запрошенного инструмента.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorTools.EditorToolContext.OnActivated">
      <summary>
        <para>Вызываемый после этого EditorToolContext становится активным контекстом инструмента.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorTools.EditorToolContext.OnToolGUI(UnityEditor.EditorWindow)">
      <summary>
        <para>Реализует любые общие функциональные возможности для набора инструментов манипулирования, доступных для этого контекста.</para>
      </summary>
      <param name="window">Окно, в котором отображается активный инструмент EditorTool.</param>
    </member>
    <member name="M:UnityEditor.EditorTools.EditorToolContext.OnWillBeDeactivated">
      <summary>
        <para>Вызывается перед этим EditorToolContext перестает быть активным контекстом инструмента.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorTools.EditorToolContext.ResolveTool(UnityEditor.Tool)">
      <summary>
        <para>Возвращает соответствующий тип EditorTool для указанного инструмента с учетом контекста.</para>
      </summary>
      <param name="tool">Инструмент для разрешения в тип EditorTool.</param>
      <returns>
        <para>Тип EditorTool для запрошенного инструмента.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.EditorTools.EditorToolContextAttribute">
      <summary>
        <para>Регистрирует EditorToolContext как глобальный контекст или контекст компонента для определенного целевого типа.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorTools.EditorToolContextAttribute.#ctor(System.String,System.Type)">
      <summary>
        <para>Регистрирует EditorToolContext либо как глобальный контекст инструмента, либо как контекст инструмента компонента.</para>
      </summary>
      <param name="displayName">Имя, отображаемое в меню.</param>
      <param name="targetType">Задайте тип, который может редактировать этот инструмент. Задайте значение null, если средство не является инструментом компонента.</param>
    </member>
    <member name="T:UnityEditor.EditorTools.GameObjectToolContext">
      <summary>
        <para>Этот класс представляет контекст по умолчанию для средств манипуляций. Когда GameObjectToolContext активен, инструменты манипуляции влияют на свойство преобразования GameObjects в выделении SceneView.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.EditorTools.IDrawSelectedHandles">
      <summary>
        <para>Реализуйте этот интерфейс для рисования дескрипторов, если выделенный элемент содержит тип, предназначенный для EditorTool.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorTools.IDrawSelectedHandles.OnDrawHandles">
      <summary>
        <para>Реализуйте этот метод для рисования неинтерактивных дескрипторов, когда доступен пользовательский редактор.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.EditorTools.ToolAttribute">
      <summary>
        <para>Базовый класс, от которого наследуют EditorToolAttribute и EditorToolContextAttribute.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorTools.ToolAttribute.displayName">
      <summary>
        <para>Имя, отображаемое в меню.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorTools.ToolAttribute.targetContext">
      <summary>
        <para>Если он предоставлен, Инструмент EditorTool будет доступен только в том случае, если Объект ToolManager.activeContextType равен targetContext.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorTools.ToolAttribute.targetType">
      <summary>
        <para>Задайте тип, который может редактировать этот РедакторTool или EditorToolContext. Задайте значение null, если средство не является специфическим для компонента и должно быть доступно в любое время.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.EditorTools.ToolManager">
      <summary>
        <para>Этот класс управляет инструментами редактора в представлении Scene.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.EditorTools.ToolManager.activeContextChanged(System.Action)">
      <summary>
        <para>Определяет обработчик событий при изменении активного редактора EditorToolContext.</para>
      </summary>
      <param name="value">Событие, возникающее после изменения активного редактора EditorToolContext.</param>
    </member>
    <member name="?:UnityEditor.EditorTools.ToolManager.activeContextChanging(System.Action)">
      <summary>
        <para>Определяет обработчик событий, когда будет изменен активный EditorToolContext.</para>
      </summary>
      <param name="value">Событие, выданное перед изменением активного редактора EditorToolContext.</param>
    </member>
    <member name="P:UnityEditor.EditorTools.ToolManager.activeContextType">
      <summary>
        <para>Получает тип EditorToolContext, который в данный момент активен. Значение по умолчанию — GameObjectToolContext.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.EditorTools.ToolManager.activeToolChanged(System.Action)">
      <summary>
        <para>Определяет обработчик событий при изменении активного средства.</para>
      </summary>
      <param name="value">Событие, возникающее после изменения активного инструмента.</param>
    </member>
    <member name="?:UnityEditor.EditorTools.ToolManager.activeToolChanging(System.Action)">
      <summary>
        <para>Определяет обработчик событий при изменении активного средства.</para>
      </summary>
      <param name="value">Событие, выданное до изменения активного инструмента.</param>
    </member>
    <member name="P:UnityEditor.EditorTools.ToolManager.activeToolType">
      <summary>
        <para>Получает тип инструмента EditorTool, который в данный момент активен.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorTools.ToolManager.IsActiveContext(UnityEditor.EditorTools.EditorToolContext)">
      <summary>
        <para>Проверьте, является ли EditorToolContext в данный момент активным контекстом инструмента.</para>
      </summary>
      <param name="context">EditorToolContext для сравнения с активным контекстом инструмента.</param>
      <returns>
        <para>Возвращает значение true, если контекст активен, значение false, если он не является активным.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorTools.ToolManager.IsActiveTool(UnityEditor.EditorTools.EditorTool)">
      <summary>
        <para>Проверьте, является ли EditorTool в настоящее время активным инструментом.</para>
      </summary>
      <param name="tool">Инструмент EditorTool для сравнения с активным инструментом.</param>
      <returns>
        <para>Возвращает значение true, если средство активно, значение false, если оно не является активным.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorTools.ToolManager.RestorePreviousPersistentTool">
      <summary>
        <para>Задает последний используемый глобальный EditorTool в качестве активного инструмента.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorTools.ToolManager.RestorePreviousTool">
      <summary>
        <para>Задает последний используемый Инструмент EditorTool в качестве активного инструмента.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorTools.ToolManager.SetActiveContext(System.Type)">
      <summary>
        <para>Задает активный EditorToolContext.</para>
      </summary>
      <param name="context">Тип EditorToolContext, задаваемый в качестве активного инструмента.</param>
    </member>
    <member name="M:UnityEditor.EditorTools.ToolManager.SetActiveContext">
      <summary>
        <para>Задает активный EditorToolContext.</para>
      </summary>
      <param name="context">Тип EditorToolContext, задаваемый в качестве активного инструмента.</param>
    </member>
    <member name="M:UnityEditor.EditorTools.ToolManager.SetActiveTool">
      <summary>
        <para>Задает активный инструмент EditorTool.</para>
      </summary>
      <param name="type">Тип EditorTool, который необходимо установить в качестве активного инструмента.</param>
      <param name="tool">Экземпляр EditorTool, который необходимо установить в качестве активного инструмента.</param>
    </member>
    <member name="M:UnityEditor.EditorTools.ToolManager.SetActiveTool(System.Type)">
      <summary>
        <para>Задает активный инструмент EditorTool.</para>
      </summary>
      <param name="type">Тип EditorTool, который необходимо установить в качестве активного инструмента.</param>
      <param name="tool">Экземпляр EditorTool, который необходимо установить в качестве активного инструмента.</param>
    </member>
    <member name="M:UnityEditor.EditorTools.ToolManager.SetActiveTool(UnityEditor.EditorTools.EditorTool)">
      <summary>
        <para>Задает активный инструмент EditorTool.</para>
      </summary>
      <param name="type">Тип EditorTool, который необходимо установить в качестве активного инструмента.</param>
      <param name="tool">Экземпляр EditorTool, который необходимо установить в качестве активного инструмента.</param>
    </member>
    <member name="T:UnityEditor.EditorUserBuildSettings">
      <summary>
        <para>Пользовательские настройки сборки для редактора</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.activeBuildTarget">
      <summary>
        <para>Активный в данный момент целевой объект сборки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EditorUserBuildSettings.activeBuildTargetChanged">
      <summary>
        <para>Активируется в ответ на SwitchActiveBuildTarget.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.activeScriptCompilationDefines">
      <summary>
        <para>ДИРЕКТИВЫ DEFINE для компилятора.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.allowDebugging">
      <summary>
        <para>Включите подключение отладчиков уровня источника.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.androidBuildSubtarget">
      <summary>
        <para>Варианты платформы Android.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.androidCreateSymbols">
      <summary>
        <para>Задает тип создаваемого пакета символов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.androidCreateSymbolsZip">
      <summary>
        <para>Задайте значение true, чтобы создать файл символов.zip в том же расположении, что и .apk или AAB-файл.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.androidETC2Fallback">
      <summary>
        <para>Резервный вариант декомпрессии текстур ETC2 на устройствах Android, которые не поддерживают ETC2.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.androidUseLegacySdkTools">
      <summary>
        <para>Используйте устаревшие инструменты Android SDK для упаковки приложений.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.buildAppBundle">
      <summary>
        <para>Установите значение true, чтобы создать пакет приложений Android (файл aab) вместо apk. Значение по умолчанию — false.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.buildScriptsOnly">
      <summary>
        <para>Включен только сценарий сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.buildWithDeepProfilingSupport">
      <summary>
        <para>Включает поддержку глубокого профилирования в проигрывателе.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.compressFilesInPackage">
      <summary>
        <para>Сжатие файлов в пакете.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.compressWithPsArc">
      <summary>
        <para>Создавайте данные, сжатые с помощью PSArc.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.connectProfiler">
      <summary>
        <para>Запустите проигрыватель с подключением к профилировщику.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.development">
      <summary>
        <para>Включает сборку разработки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.enableHeadlessMode">
      <summary>
        <para>Встроен ли автономный плеер в безголовый режим.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.explicitArrayBoundsChecks">
      <summary>
        <para>Активно ли проверяются границы массива?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.explicitDivideByZeroChecks">
      <summary>
        <para>Активно ли проверяется деление на ноль?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.explicitNullChecks">
      <summary>
        <para>Активно ли проверяются нулевые ссылки?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.exportAsGoogleAndroidProject">
      <summary>
        <para>Экспорт проекта Android для использования с Android Studio/Gradle.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.forceInstallation">
      <summary>
        <para>Принудительная установка пакета, даже при ошибке.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.forceOptimizeScriptCompilation">
      <summary>
        <para>Принудительная полная оптимизация для компиляции скриптов в сборках разработки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.il2CppCodeGeneration">
      <summary>
        <para>Задает параметр создания кода для IL2CPP.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.installInBuildFolder">
      <summary>
        <para>Поместите встроенный проигрыватель в папку сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.iOSBuildConfigType">
      <summary>
        <para>Схема, с которой проект будет выполняться в Xcode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.iOSXcodeBuildConfig">
      <summary>
        <para>Схема, которую Xcode использует для запуска этого проекта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.macOSXcodeBuildConfig">
      <summary>
        <para>Схема, которую Xcode использует для запуска этого проекта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.managedDebuggerFixedPort">
      <summary>
        <para>Принудительное использование порта управляемым отладчиком. Значение по умолчанию равно 0, что означает автоматический выбор порта для конкретной платформы.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.movePackageToDiscOuterEdge">
      <summary>
        <para>Помещает упаковку на внешний край диска.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.needSubmissionMaterials">
      <summary>
        <para>Создание материалов для отправки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.overrideMaxTextureSize">
      <summary>
        <para>Переопределение максимального размера текстуры при импорте ресурсов.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.overrideTextureCompression">
      <summary>
        <para>Импортируемый ресурс переопределяет сжатие текстур.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.ps4BuildSubtarget">
      <summary>
        <para>Ps4 Сборка субтаргета.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.ps4HardwareTarget">
      <summary>
        <para>Указывает, на какую версию оборудования PS4 следует ориентироваться.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.selectedBuildTargetGroup">
      <summary>
        <para>Выбранная в данный момент целевая группа сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.selectedStandaloneTarget">
      <summary>
        <para>Выбранный в данный момент целевой объект для автономной сборки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.standaloneBuildSubtarget">
      <summary>
        <para>Подцель автономной сборки рабочего стола.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.streamingInstallLaunchRange">
      <summary>
        <para>При построении пакета потоковой установки Xbox One (makepkg.exe) Код создания макета в Unity назначает каждую сцену и связанные с ней ресурсы отдельным блокам. Unity пометит Scene 0 как часть диапазона запуска, IE набор блоков, необходимых для запуска игры, вы можете включить дополнительные сцены в этот диапазон запуска, если хотите, это указывает диапазон сцен (начиная с 0), которые должны быть включены в набор запуска. </para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.symlinkLibraries">
      <summary>
        <para>Символьное связывание библиотек среды выполнения с проектом iOS Xcode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.symlinkSources">
      <summary>
        <para>Символьные ссылки на источники при создании проекта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.waitForManagedDebugger">
      <summary>
        <para>Инструктирует проигрывателя дождаться присоединения управляемого отладчика перед выполнением кода сценария.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.waitForPlayerConnection">
      <summary>
        <para>Настраивает проигрыватель на ожидание подключения игрока при запуске проигрывателя.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.webGLBuildSubtarget">
      <summary>
        <para>Подцель WebGL Build.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.webGLUsePreBuiltUnityEngine">
      <summary>
        <para>Используйте встроенную версию движка Unity на JavaScript.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.windowsDevicePortalAddress">
      <summary>
        <para>Задает адрес подключения Windows DevicePortal устройства для развертывания и запуска приложения UWP при использовании функции построения и выполнения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.windowsDevicePortalPassword">
      <summary>
        <para>Задает пароль Windows DevicePortal для устройства, которое необходимо развернуть и запустить приложение UWP при использовании функции построения и выполнения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.windowsDevicePortalUsername">
      <summary>
        <para>Задает имя пользователя Windows DevicePortal для устройства, которое развертывается и запускается приложение UWP при использовании функции построения и выполнения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.wsaBuildAndRunDeployTarget">
      <summary>
        <para>Задает и получает устройство Windows для запуска приложения UWP при использовании функции сборки и выполнения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.wsaSubtarget">
      <summary>
        <para>Задает и получает тип оконечного устройства для приложения, запускаемого при построении на платформе Магазина Windows.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.wsaUWPBuildType">
      <summary>
        <para>Тип сборки для универсальной платформы Windows.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.wsaUWPSDK">
      <summary>
        <para>Задает и получает целевой пакет SDK UWP для построения приложения Магазина Windows.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.wsaUWPVisualStudioVersion">
      <summary>
        <para>Задает и получает версию Visual Studio для построения приложения Магазина Windows.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.xboxBuildSubtarget">
      <summary>
        <para>Подцель "Сборка Xbox".</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.xboxOneDeployDrive">
      <summary>
        <para>Выбранный в данный момент диск для развертывания Xbox One.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.xboxOneDeployMethod">
      <summary>
        <para>Выбранный в данный момент метод развертывания Xbox One.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.xboxOneNetworkSharePath">
      <summary>
        <para>Пусть к общей сетевой папке e.g. MYCOMPUTER\SHAREDFOLDER\.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.xboxOneRebootIfDeployFailsAndRetry">
      <summary>
        <para>Настраивает XBox для перезагрузки и повторного развертывания при сбое развертывания.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUserBuildSettings.xboxOneUsername">
      <summary>
        <para>Имя пользователя учетной записи Windows, связанное с общей папкой компьютера.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorUserBuildSettings.GetBuildLocation(UnityEditor.BuildTarget)">
      <summary>
        <para>Получите текущее расположение для сборки.</para>
      </summary>
      <param name="target">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUserBuildSettings.GetPlatformSettings(System.String,System.String)">
      <summary>
        <para>Возвращает значение для параметра редактора спецификаций платформы.</para>
      </summary>
      <param name="platformName">Имя платформы.</param>
      <param name="name">Имя параметра.</param>
    </member>
    <member name="M:UnityEditor.EditorUserBuildSettings.SetBuildLocation(UnityEditor.BuildTarget,System.String)">
      <summary>
        <para>Задайте новое расположение для сборки.</para>
      </summary>
      <param name="target">
      </param>
      <param name="location">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUserBuildSettings.SetPlatformSettings(System.String,System.String,System.String)">
      <summary>
        <para>Установите настройку редактора спецификаций платформы.</para>
      </summary>
      <param name="platformName">Имя платформы.</param>
      <param name="name">Имя параметра.</param>
      <param name="value">Установка значения.</param>
    </member>
    <member name="M:UnityEditor.EditorUserBuildSettings.SwitchActiveBuildTarget(UnityEditor.BuildTarget)">
      <summary>
        <para>Выберите новый целевой объект сборки, который будет активным.</para>
      </summary>
      <param name="target">Целевая платформа сборки.</param>
      <param name="targetGroup">Создание целевой группы.</param>
      <returns>
        <para>Значение true, если целевой объект сборки был успешно переключен, в противном случае — значение false (например, если проверка лицензии не удалась, файлы отсутствуют или если пользователь отменил операцию через пользовательский интерфейс).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorUserBuildSettings.SwitchActiveBuildTarget(UnityEditor.BuildTargetGroup,UnityEditor.BuildTarget)">
      <summary>
        <para>Выберите новый целевой объект сборки, который будет активным.</para>
      </summary>
      <param name="target">Целевая платформа сборки.</param>
      <param name="targetGroup">Создание целевой группы.</param>
      <returns>
        <para>Значение true, если целевой объект сборки был успешно переключен, в противном случае — значение false (например, если проверка лицензии не удалась, файлы отсутствуют или если пользователь отменил операцию через пользовательский интерфейс).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorUserBuildSettings.SwitchActiveBuildTargetAsync(UnityEditor.BuildTargetGroup,UnityEditor.BuildTarget)">
      <summary>
        <para>Выберите новый целевой объект сборки, который будет активен во время следующего обновления редактора.</para>
      </summary>
      <param name="targetGroup">Целевая платформа сборки.</param>
      <param name="target">Создание целевой группы.</param>
      <returns>
        <para>Значение true, если целевой объект сборки был успешно переключен, в противном случае — значение false (например, если проверка лицензии не удалась, файлы отсутствуют или если пользователь отменил операцию через пользовательский интерфейс).</para>
      </returns>
    </member>
    <member name="T:UnityEditor.EditorUtility">
      <summary>
        <para>Служебные функции редактора.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorUtility.scriptCompilationFailed">
      <summary>
        <para>Значение true, если в журнале имеются сообщения об ошибках компиляции.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorUtility.ClearDefaultParentObject(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Удаляет родительский объект GameObject по умолчанию из определенной или активной сцены.</para>
      </summary>
      <param name="scene">Укажите Scene, чтобы очистить родительский объект по умолчанию для определенной Scene. Если параметр Scene не указан, этот метод очищает родительский объект по умолчанию для активного Scene.</param>
    </member>
    <member name="M:UnityEditor.EditorUtility.ClearDefaultParentObject">
      <summary>
        <para>Удаляет родительский объект GameObject по умолчанию из определенной или активной сцены.</para>
      </summary>
      <param name="scene">Укажите Scene, чтобы очистить родительский объект по умолчанию для определенной Scene. Если параметр Scene не указан, этот метод очищает родительский объект по умолчанию для активного Scene.</param>
    </member>
    <member name="M:UnityEditor.EditorUtility.ClearDirty(UnityEngine.Object)">
      <summary>
        <para>Очистите грязный флаг цели.</para>
      </summary>
      <param name="target">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.ClearProgressBar">
      <summary>
        <para>Удаляет индикатор выполнения.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorUtility.CollectDeepHierarchy(UnityEngine.Object[])">
      <summary>
        <para>Соберите все объекты в иерархии, укорененные в каждом из заданных объектов.</para>
      </summary>
      <param name="roots">Массив объектов, с которых начнется поиск.</param>
      <returns>
        <para>Массив объектов, наследно прикрепленных к поисковому массиву.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorUtility.CollectDependencies(UnityEngine.Object[])">
      <summary>
        <para>Вычисляет и возвращает список всех активов, от которых зависят активы, перечисленные в корнях.</para>
      </summary>
      <param name="roots">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.CompressCubemapTexture(UnityEngine.Cubemap,UnityEngine.TextureFormat,System.Int32)">
      <summary>
        <para>Сжатие текстуры кубической карты.</para>
      </summary>
      <param name="texture">
      </param>
      <param name="format">
      </param>
      <param name="quality">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.CompressCubemapTexture(UnityEngine.Cubemap,UnityEngine.TextureFormat,UnityEditor.TextureCompressionQuality)">
      <summary>
        <para>Сжатие текстуры кубической карты.</para>
      </summary>
      <param name="texture">
      </param>
      <param name="format">
      </param>
      <param name="quality">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.CompressTexture(UnityEngine.Texture2D,UnityEngine.TextureFormat,System.Int32)">
      <summary>
        <para>Сжатие текстуры.</para>
      </summary>
      <param name="texture">
      </param>
      <param name="format">
      </param>
      <param name="quality">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.CompressTexture(UnityEngine.Texture2D,UnityEngine.TextureFormat,UnityEditor.TextureCompressionQuality)">
      <summary>
        <para>Сжатие текстуры.</para>
      </summary>
      <param name="texture">
      </param>
      <param name="format">
      </param>
      <param name="quality">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.CopySerialized(UnityEngine.Object,UnityEngine.Object)">
      <summary>
        <para>Скопируйте все настройки объекта Unity.</para>
      </summary>
      <param name="source">
      </param>
      <param name="dest">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.CopySerializedIfDifferent(UnityEngine.Object,UnityEngine.Object)">
      <summary>
        <para>Скопируйте все настройки объекта Unity во второй объект, если они отличаются.</para>
      </summary>
      <param name="source">
      </param>
      <param name="dest">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.CopySerializedManagedFieldsOnly(System.Object,System.Object)">
      <summary>
        <para>Копирует сериализуемые поля из одного управляемого объекта в другой.</para>
      </summary>
      <param name="source">Объект, из которого копируются данные.</param>
      <param name="dest">Объект, в который необходимо скопировать данные.</param>
    </member>
    <member name="M:UnityEditor.EditorUtility.CreateGameObjectWithHideFlags(System.String,UnityEngine.HideFlags,System.Type[])">
      <summary>
        <para>Создает игровой объект с HideFlags и указанными компонентами.</para>
      </summary>
      <param name="name">
      </param>
      <param name="flags">
      </param>
      <param name="components">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.DisplayCancelableProgressBar(System.String,System.String,System.Single)">
      <summary>
        <para>Отображает или обновляет индикатор выполнения с кнопкой отмены.</para>
      </summary>
      <param name="title">
      </param>
      <param name="info">
      </param>
      <param name="progress">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.DisplayDialog(System.String,System.String,System.String)">
      <summary>
        <para>Этот метод отображает модальное диалоговое окно.</para>
      </summary>
      <param name="title">Заголовок окна сообщения.</param>
      <param name="message">Текст сообщения.</param>
      <param name="ok">Метка отображается на кнопке диалогового окна ОК.</param>
      <param name="cancel">Метка, отображаемая на кнопке диалогового окна Отмена.</param>
      <returns>
        <para>Возвращает значение true, если пользователь нажимает кнопку ОК. В противном случае возвращает значение false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorUtility.DisplayDialog(System.String,System.String,System.String,System.String)">
      <summary>
        <para>Этот метод отображает модальное диалоговое окно.</para>
      </summary>
      <param name="title">Заголовок окна сообщения.</param>
      <param name="message">Текст сообщения.</param>
      <param name="ok">Метка отображается на кнопке диалогового окна ОК.</param>
      <param name="cancel">Метка, отображаемая на кнопке диалогового окна Отмена.</param>
      <returns>
        <para>Возвращает значение true, если пользователь нажимает кнопку ОК. В противном случае возвращает значение false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorUtility.DisplayDialog(System.String,System.String,System.String,UnityEditor.DialogOptOutDecisionType,System.String)">
      <summary>
        <para>Этот метод отображает модальное диалоговое окно, позволяющее пользователю отказаться от повторного отображения текущего диалогового окна.</para>
      </summary>
      <param name="title">Заголовок окна сообщения.</param>
      <param name="message">Текст сообщения.</param>
      <param name="ok">Метка отображается на кнопке диалогового окна ОК.</param>
      <param name="cancel">Метка, отображаемая на кнопке диалогового окна Отмена.</param>
      <param name="dialogOptOutDecisionType">Тип решения об отказе, которое может принять пользователь.</param>
      <param name="dialogOptOutDecisionStorageKey">Уникальный параметр ключа для хранения решения.</param>
      <returns>
        <para>Значение true, если пользователь нажимает кнопку ОК или ранее отказался от него. Возвращает значение false, если пользователь отменяет или закрывает диалоговое окно без принятия решения.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorUtility.DisplayDialog(System.String,System.String,System.String,System.String,UnityEditor.DialogOptOutDecisionType,System.String)">
      <summary>
        <para>Этот метод отображает модальное диалоговое окно, позволяющее пользователю отказаться от повторного отображения текущего диалогового окна.</para>
      </summary>
      <param name="title">Заголовок окна сообщения.</param>
      <param name="message">Текст сообщения.</param>
      <param name="ok">Метка отображается на кнопке диалогового окна ОК.</param>
      <param name="cancel">Метка, отображаемая на кнопке диалогового окна Отмена.</param>
      <param name="dialogOptOutDecisionType">Тип решения об отказе, которое может принять пользователь.</param>
      <param name="dialogOptOutDecisionStorageKey">Уникальный параметр ключа для хранения решения.</param>
      <returns>
        <para>Значение true, если пользователь нажимает кнопку ОК или ранее отказался от него. Возвращает значение false, если пользователь отменяет или закрывает диалоговое окно без принятия решения.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorUtility.DisplayDialogComplex(System.String,System.String,System.String,System.String,System.String)">
      <summary>
        <para>Отображает модальное диалоговое окно с тремя кнопками.</para>
      </summary>
      <param name="title">Заголовок диалогового окна.</param>
      <param name="message">Назначение диалога.</param>
      <param name="ok">Выбрана функция диалога.</param>
      <param name="cancel">Закройте диалоговое окно без операции.</param>
      <param name="alt">Выберите альтернативное назначение диалогового окна.</param>
      <returns>
        <para>Возвращает идентификатор выбранной кнопки. Идентификаторы 0, 1 или 2 соответствуют кнопкам OK, Cancel и alt соответственно.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorUtility.DisplayPopupMenu(UnityEngine.Rect,System.String,UnityEditor.MenuCommand)">
      <summary>
        <para>Отображает всплывающее меню.</para>
      </summary>
      <param name="position">
      </param>
      <param name="menuItemPath">
      </param>
      <param name="command">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.DisplayProgressBar(System.String,System.String,System.Single)">
      <summary>
        <para>Отображает или обновляет индикатор выполнения.</para>
      </summary>
      <param name="title">
      </param>
      <param name="info">
      </param>
      <param name="progress">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.FocusProjectWindow">
      <summary>
        <para>Выводит окно проекта на передний план и фокусирует его.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorUtility.FormatBytes(System.Int32)">
      <summary>
        <para>Возвращает текст для нескольких байтов.</para>
      </summary>
      <param name="bytes">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.GetDialogOptOutDecision(UnityEditor.DialogOptOutDecisionType,System.String)">
      <summary>
        <para>Этот метод отображает модальное диалоговое окно, позволяющее пользователю отказаться от повторного отображения текущего диалогового окна.</para>
      </summary>
      <param name="dialogOptOutDecisionType">Тип решения об отказе, которое может принять пользователь.</param>
      <param name="dialogOptOutDecisionStorageKey">Уникальный параметр ключа для хранения решения.</param>
      <returns>
        <para>Значение true, если пользователь ранее отказался от просмотра диалогового окна, связанного с dialogOptOutDecisionStorageKey. Возвращает значение false, если пользователь еще не отказался от него.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorUtility.GetDirtyCount(System.Int32)">
      <summary>
        <para>Возвращает целое число, указывающее, сколько раз изменялись сериализованные свойства указанного объекта.</para>
      </summary>
      <param name="instanceID">Идентификатор экземпляра объекта.</param>
      <param name="target">Объект.</param>
    </member>
    <member name="M:UnityEditor.EditorUtility.GetDirtyCount(UnityEngine.Object)">
      <summary>
        <para>Возвращает целое число, указывающее, сколько раз изменялись сериализованные свойства указанного объекта.</para>
      </summary>
      <param name="instanceID">Идентификатор экземпляра объекта.</param>
      <param name="target">Объект.</param>
    </member>
    <member name="M:UnityEditor.EditorUtility.GetObjectEnabled(UnityEngine.Object)">
      <summary>
        <para>Включен ли объект (0 отключено, 1 включено, -1 не имеет включенной кнопки).</para>
      </summary>
      <param name="target">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.InstanceIDToObject(System.Int32)">
      <summary>
        <para>Преобразует идентификатор экземпляра в ссылку на объект.</para>
      </summary>
      <param name="instanceID">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.IsDirty(System.Int32)">
      <summary>
        <para>Получает логическое значение, указывающее, изменялся ли указанный объект с момента его последнего сохранения.</para>
      </summary>
      <param name="instanceID">Идентификатор экземпляра объекта.</param>
      <param name="target">Объект.</param>
      <returns>
        <para>Значение true, если объект изменился; в противном случае — значение false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorUtility.IsDirty(UnityEngine.Object)">
      <summary>
        <para>Получает логическое значение, указывающее, изменялся ли указанный объект с момента его последнего сохранения.</para>
      </summary>
      <param name="instanceID">Идентификатор экземпляра объекта.</param>
      <param name="target">Объект.</param>
      <returns>
        <para>Значение true, если объект изменился; в противном случае — значение false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorUtility.IsPersistent(UnityEngine.Object)">
      <summary>
        <para>Определяет, хранится ли объект на диске.</para>
      </summary>
      <param name="target">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.IsRunningUnderCPUEmulation">
      <summary>
        <para>Получает логическое значение. Это значение указывает, не может ли ваш процессор выполнять Unity изначально и работает ли эмулированная версия.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorUtility.NaturalCompare(System.String,System.String)">
      <summary>
        <para>Человекоподобная сортировка.</para>
      </summary>
      <param name="a">
      </param>
      <param name="b">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.OpenFilePanel(System.String,System.String,System.String)">
      <summary>
        <para>Отображает диалоговое окно «Открыть файл» и возвращает выбранный путь.</para>
      </summary>
      <param name="title">
      </param>
      <param name="directory">
      </param>
      <param name="extension">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.OpenFilePanelWithFilters(System.String,System.String,System.String[])">
      <summary>
        <para>Отображает диалоговое окно «Открыть файл» и возвращает выбранный путь.</para>
      </summary>
      <param name="title">Заголовок диалогового окна.</param>
      <param name="directory">Каталог по умолчанию.</param>
      <param name="filters">Расширения файлов в форме { 'Файлы изображений', 'png,jpg,jpeg', 'Все файлы', '*' }.</param>
    </member>
    <member name="M:UnityEditor.EditorUtility.OpenFolderPanel(System.String,System.String,System.String)">
      <summary>
        <para>Отображает диалоговое окно «Открыть папку» и возвращает выбранный путь.</para>
      </summary>
      <param name="title">
      </param>
      <param name="folder">
      </param>
      <param name="defaultName">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.OpenPropertyEditor(UnityEngine.Object)">
      <summary>
        <para>Откройте редактор свойств для объекта Object.</para>
      </summary>
      <param name="obj">Объект, открываемый в редакторе свойств.</param>
    </member>
    <member name="M:UnityEditor.EditorUtility.RequestScriptReload">
      <summary>
        <para>Редактор Unity асинхронно перезагружает сборки сценариев на следующем кадре. Это сбрасывает состояние всех скриптов, но Unity не компилирует код, который изменился с момента предыдущей компиляции.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorUtility.SaveFilePanel(System.String,System.String,System.String,System.String)">
      <summary>
        <para>Отображает диалоговое окно «Сохранить файл» и возвращает выбранный путь.</para>
      </summary>
      <param name="title">
      </param>
      <param name="directory">
      </param>
      <param name="defaultName">
      </param>
      <param name="extension">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.SaveFilePanelInProject(System.String,System.String,System.String,System.String)">
      <summary>
        <para>Отображает диалоговое окно «Сохранить файл» в папке «Ресурсы» проекта и возвращает выбранный путь.</para>
      </summary>
      <param name="title">
      </param>
      <param name="defaultName">
      </param>
      <param name="extension">
      </param>
      <param name="message">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.SaveFolderPanel(System.String,System.String,System.String)">
      <summary>
        <para>Отображает диалоговое окно «Сохранить папку» и возвращает выбранный путь.</para>
      </summary>
      <param name="title">
      </param>
      <param name="folder">
      </param>
      <param name="defaultName">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.SetCameraAnimateMaterials(UnityEngine.Camera,System.Boolean)">
      <summary>
        <para>Настраивает эту камеру на анимацию материалов в редакторе.</para>
      </summary>
      <param name="camera">
      </param>
      <param name="animate">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.SetCameraAnimateMaterialsTime(UnityEngine.Camera,System.Single)">
      <summary>
        <para>Задает глобальное время для использования этой камеры при рендеринге.</para>
      </summary>
      <param name="camera">
      </param>
      <param name="time">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.SetCustomDiffTool(System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>
        <para>Задайте пользовательские настройки инструмента diff.</para>
      </summary>
      <param name="path">Траектория инструмента Diff.</param>
      <param name="twoWayDiff">Двухсторонняя командная строка diff.</param>
      <param name="threeWayDiff">Трехсторонняя командная строка diff.</param>
      <param name="mergeCommand">Командная строка слияния.</param>
      <param name="forceEnableCustomTool">Задает пользовательский инструмент в качестве текущего активного инструмента "Управление ревизиями", diff/Merge.</param>
    </member>
    <member name="M:UnityEditor.EditorUtility.SetDefaultParentObject(UnityEngine.GameObject)">
      <summary>
        <para>Задает родительский объект по умолчанию для активной Scene.</para>
      </summary>
      <param name="defaultParentObject">Объект GameObject, устанавливаемый в качестве родительского объекта по умолчанию.</param>
    </member>
    <member name="M:UnityEditor.EditorUtility.SetDialogOptOutDecision(UnityEditor.DialogOptOutDecisionType,System.String,System.Boolean)">
      <summary>
        <para>Этот метод отображает модальное диалоговое окно, позволяющее пользователю отказаться от повторного отображения текущего диалогового окна.</para>
      </summary>
      <param name="dialogOptOutDecisionType">Тип решения об отказе, которое может принять пользователь.</param>
      <param name="dialogOptOutDecisionStorageKey">Уникальный параметр ключа для хранения решения.</param>
      <param name="optOutDecision">Уникальный параметр ключа для хранения решения.</param>
    </member>
    <member name="M:UnityEditor.EditorUtility.SetDirty(UnityEngine.Object)">
      <summary>
        <para>Помечает целевой объект как грязный.</para>
      </summary>
      <param name="target">Объект, помеченный как грязный.</param>
    </member>
    <member name="M:UnityEditor.EditorUtility.SetObjectEnabled(UnityEngine.Object,System.Boolean)">
      <summary>
        <para>Задайте включенное состояние объекта.</para>
      </summary>
      <param name="target">
      </param>
      <param name="enabled">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.SetSelectedRenderState(UnityEngine.Renderer,UnityEditor.EditorSelectedRenderState)">
      <summary>
        <para>Установите выбранный режим отображения Scene View для этого модуля рендеринга.</para>
      </summary>
      <param name="renderer">
      </param>
      <param name="renderState">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.SetSelectedWireframeHidden(UnityEngine.Renderer,System.Boolean)">
      <summary>
        <para>Задает, будет ли скрыт каркас выбранного рендерера при выборе объекта GameObject, к которому он прикреплен.</para>
      </summary>
      <param name="renderer">
      </param>
      <param name="enabled">
      </param>
    </member>
    <member name="M:UnityEditor.EditorUtility.UnloadUnusedAssetsImmediate">
      <summary>
        <para>Выгружает неиспользуемые ресурсы.</para>
      </summary>
      <param name="ignoreReferencesFromScript">При значении true удаляйте ресурсы, даже если они связаны в скриптах.</param>
    </member>
    <member name="M:UnityEditor.EditorUtility.UnloadUnusedAssetsImmediate">
      <summary>
        <para>Выгружает неиспользуемые ресурсы.</para>
      </summary>
      <param name="ignoreReferencesFromScript">При значении true удаляйте ресурсы, даже если они связаны в скриптах.</param>
    </member>
    <member name="M:UnityEditor.EditorUtility.UpdateGlobalShaderProperties(System.Single)">
      <summary>
        <para>Обновляет глобальные свойства шейдера, используемые при отрисовке.</para>
      </summary>
      <param name="time">Время для использования. -1 для отключения.</param>
    </member>
    <member name="T:UnityEditor.EditorWindow">
      <summary>
        <para>Производное от этого класса для создания окна редактора.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.autoRepaintOnSceneChange">
      <summary>
        <para>Автоматически ли перерисовывается окно при изменении сцены?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.docked">
      <summary>
        <para>Возвращает значение true, если окно EditorWindow закреплено.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.focusedWindow">
      <summary>
        <para>EditorWindow, который в настоящее время имеет фокус клавиатуры. (Только для чтения)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.hasFocus">
      <summary>
        <para>Возвращает значение true, если объект EditorWindow сфокусирован.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.hasUnsavedChanges">
      <summary>
        <para>Это свойство указывает, запрашивает ли редактор пользователю сохранение или отмену несохраненных изменений перед закрытием окна.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.maximized">
      <summary>
        <para>Это окно развернуто?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.maxSize">
      <summary>
        <para>Максимальный размер этого окна, когда оно плавающее или модальное. Максимальный размер не используется при закреплении окна.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.minSize">
      <summary>
        <para>Минимальный размер этого окна, когда оно плавающее или модальное. Минимальный размер не используется при закреплении окна.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.mouseOverWindow">
      <summary>
        <para>Окно EditorWindow в настоящее время находится под курсором мыши. (Только для чтения)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.position">
      <summary>
        <para>Требуемое положение окна в пространстве экрана.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.rootVisualElement">
      <summary>
        <para>Извлекает корневой визуальный элемент этой иерархии окон.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.saveChangesMessage">
      <summary>
        <para>Сообщение, которое отображается пользователю при появлении запроса на сохранение</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.title">
      <summary>
        <para>Заголовок этого окна.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.titleContent">
      <summary>
        <para>Объект GUIContent, используемый для рисования заголовка EditorWindows.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.wantsLessLayoutEvents">
      <summary>
        <para>Указывает, выполняется ли этап макета перед всеми событиями пользователя (например, EventType.MouseDown или EventType, KeyDown) или выполняется только перед событиями перерисовки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.wantsMouseEnterLeaveWindow">
      <summary>
        <para>Проверяет, получены ли события MouseEnterWindow и MouseLeaveWindow в графическом интерфейсе этого окна редактора.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindow.wantsMouseMove">
      <summary>
        <para>Проверяет, получены ли события MouseMove в графическом интерфейсе в этом окне редактора.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorWindow.BeginWindows">
      <summary>
        <para>Отметьте начальную область всех всплывающих окон.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorWindow.Close">
      <summary>
        <para>Закройте окно редактора.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorWindow.CreateWindow(System.Type[])">
      <summary>
        <para>Создает окно EditorWindow типа T.</para>
      </summary>
      <param name="T">Тип окна. Должен быть производным от EditorWindow.</param>
      <param name="title">Заголовок созданного окна. Если это значение равно null, используйте имя класса в качестве заголовка.</param>
      <param name="desiredDockNextTo">Массив типов EditorWindow, к которым окно попытается пристыковаться.</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.CreateWindow(System.String,System.Type[])">
      <summary>
        <para>Создает окно EditorWindow типа T.</para>
      </summary>
      <param name="T">Тип окна. Должен быть производным от EditorWindow.</param>
      <param name="title">Заголовок созданного окна. Если это значение равно null, используйте имя класса в качестве заголовка.</param>
      <param name="desiredDockNextTo">Массив типов EditorWindow, к которым окно попытается пристыковаться.</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.DiscardChanges">
      <summary>
        <para>Отменяет несохраненные изменения в содержимом окна.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorWindow.EndWindows">
      <summary>
        <para>Закройте группу окон, созданную с помощью EditorWindow.BeginWindows.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorWindow.Focus">
      <summary>
        <para>Перемещает фокус клавиатуры на другой EditorWindow.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorWindow.FocusWindowIfItsOpen(System.Type)">
      <summary>
        <para>Фокусирует первый найденный EditorWindow заданного типа, если он открыт.</para>
      </summary>
      <param name="t">Тип окна. Должен быть производным от EditorWindow.</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.FocusWindowIfItsOpen">
      <summary>
        <para>Фокусирует первый найденный EditorWindow типа T, если он открыт.</para>
      </summary>
      <param name="T">Тип окна. Должен быть производным от EditorWindow.</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetExtraPaneTypes">
      <summary>
        <para>Получает дополнительные панели, связанные с окном.</para>
      </summary>
      <returns>
        <para>Дополнительные панели, относящиеся к окну.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindow(System.Type)">
      <summary>
        <para>Возвращает первое окно EditorWindow типа t, которое в данный момент находится на экране.</para>
      </summary>
      <param name="t">Тип окна. Должен быть производным от EditorWindow.</param>
      <param name="utility">Установите значение true, чтобы создать плавающее окно утилиты, значение false, чтобы создать обычное окно.</param>
      <param name="title">Если GetWindow создаст новое окно, оно получит этот заголовок. Если это значение равно null, используйте имя класса в качестве заголовка.</param>
      <param name="focus">Стоит ли давать окну фокус, если оно уже существует. (Если GetWindow создает новое окно, оно всегда будет фокусироваться).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindow(System.Type,System.Boolean)">
      <summary>
        <para>Возвращает первое окно EditorWindow типа t, которое в данный момент находится на экране.</para>
      </summary>
      <param name="t">Тип окна. Должен быть производным от EditorWindow.</param>
      <param name="utility">Установите значение true, чтобы создать плавающее окно утилиты, значение false, чтобы создать обычное окно.</param>
      <param name="title">Если GetWindow создаст новое окно, оно получит этот заголовок. Если это значение равно null, используйте имя класса в качестве заголовка.</param>
      <param name="focus">Стоит ли давать окну фокус, если оно уже существует. (Если GetWindow создает новое окно, оно всегда будет фокусироваться).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindow(System.Type,System.Boolean,System.String)">
      <summary>
        <para>Возвращает первое окно EditorWindow типа t, которое в данный момент находится на экране.</para>
      </summary>
      <param name="t">Тип окна. Должен быть производным от EditorWindow.</param>
      <param name="utility">Установите значение true, чтобы создать плавающее окно утилиты, значение false, чтобы создать обычное окно.</param>
      <param name="title">Если GetWindow создаст новое окно, оно получит этот заголовок. Если это значение равно null, используйте имя класса в качестве заголовка.</param>
      <param name="focus">Стоит ли давать окну фокус, если оно уже существует. (Если GetWindow создает новое окно, оно всегда будет фокусироваться).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindow(System.Type,System.Boolean,System.String,System.Boolean)">
      <summary>
        <para>Возвращает первое окно EditorWindow типа t, которое в данный момент находится на экране.</para>
      </summary>
      <param name="t">Тип окна. Должен быть производным от EditorWindow.</param>
      <param name="utility">Установите значение true, чтобы создать плавающее окно утилиты, значение false, чтобы создать обычное окно.</param>
      <param name="title">Если GetWindow создаст новое окно, оно получит этот заголовок. Если это значение равно null, используйте имя класса в качестве заголовка.</param>
      <param name="focus">Стоит ли давать окну фокус, если оно уже существует. (Если GetWindow создает новое окно, оно всегда будет фокусироваться).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindow">
      <summary>
        <para>Возвращает первое окно EditorWindow типа T, которое в данный момент находится на экране.</para>
      </summary>
      <param name="T">Тип окна. Должен быть производным от EditorWindow.</param>
      <param name="utility">Установите значение true, чтобы создать плавающее окно утилиты, значение false, чтобы создать обычное окно.</param>
      <param name="title">Если GetWindow создаст новое окно, оно получит этот заголовок. Если это значение равно null, используйте имя класса в качестве заголовка.</param>
      <param name="focus">Стоит ли давать окну фокус, если оно уже существует. (Если GetWindow создает новое окно, оно всегда будет фокусироваться).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindow(System.Boolean)">
      <summary>
        <para>Возвращает первое окно EditorWindow типа T, которое в данный момент находится на экране.</para>
      </summary>
      <param name="T">Тип окна. Должен быть производным от EditorWindow.</param>
      <param name="utility">Установите значение true, чтобы создать плавающее окно утилиты, значение false, чтобы создать обычное окно.</param>
      <param name="title">Если GetWindow создаст новое окно, оно получит этот заголовок. Если это значение равно null, используйте имя класса в качестве заголовка.</param>
      <param name="focus">Стоит ли давать окну фокус, если оно уже существует. (Если GetWindow создает новое окно, оно всегда будет фокусироваться).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindow(System.Boolean,System.String)">
      <summary>
        <para>Возвращает первое окно EditorWindow типа T, которое в данный момент находится на экране.</para>
      </summary>
      <param name="T">Тип окна. Должен быть производным от EditorWindow.</param>
      <param name="utility">Установите значение true, чтобы создать плавающее окно утилиты, значение false, чтобы создать обычное окно.</param>
      <param name="title">Если GetWindow создаст новое окно, оно получит этот заголовок. Если это значение равно null, используйте имя класса в качестве заголовка.</param>
      <param name="focus">Стоит ли давать окну фокус, если оно уже существует. (Если GetWindow создает новое окно, оно всегда будет фокусироваться).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindow(System.String)">
      <summary>
        <para>Возвращает первое окно EditorWindow типа T, которое в данный момент находится на экране.</para>
      </summary>
      <param name="T">Тип окна. Должен быть производным от EditorWindow.</param>
      <param name="utility">Установите значение true, чтобы создать плавающее окно утилиты, значение false, чтобы создать обычное окно.</param>
      <param name="title">Если GetWindow создаст новое окно, оно получит этот заголовок. Если это значение равно null, используйте имя класса в качестве заголовка.</param>
      <param name="focus">Стоит ли давать окну фокус, если оно уже существует. (Если GetWindow создает новое окно, оно всегда будет фокусироваться).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindow(System.String,System.Boolean)">
      <summary>
        <para>Возвращает первое окно EditorWindow типа T, которое в данный момент находится на экране.</para>
      </summary>
      <param name="T">Тип окна. Должен быть производным от EditorWindow.</param>
      <param name="utility">Установите значение true, чтобы создать плавающее окно утилиты, значение false, чтобы создать обычное окно.</param>
      <param name="title">Если GetWindow создаст новое окно, оно получит этот заголовок. Если это значение равно null, используйте имя класса в качестве заголовка.</param>
      <param name="focus">Стоит ли давать окну фокус, если оно уже существует. (Если GetWindow создает новое окно, оно всегда будет фокусироваться).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindow(System.Boolean,System.String,System.Boolean)">
      <summary>
        <para>Возвращает первое окно EditorWindow типа T, которое в данный момент находится на экране.</para>
      </summary>
      <param name="T">Тип окна. Должен быть производным от EditorWindow.</param>
      <param name="utility">Установите значение true, чтобы создать плавающее окно утилиты, значение false, чтобы создать обычное окно.</param>
      <param name="title">Если GetWindow создаст новое окно, оно получит этот заголовок. Если это значение равно null, используйте имя класса в качестве заголовка.</param>
      <param name="focus">Стоит ли давать окну фокус, если оно уже существует. (Если GetWindow создает новое окно, оно всегда будет фокусироваться).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindow(System.Type[])">
      <summary>
        <para>Возвращает первое окно EditorWindow типа T, которое в данный момент находится на экране.</para>
      </summary>
      <param name="T">Тип окна. Должен быть производным от EditorWindow.</param>
      <param name="title">Если GetWindow создаст новое окно, оно получит этот заголовок. Если это значение равно null, используйте имя класса в качестве заголовка.</param>
      <param name="desiredDockNextTo">Массив типов EditorWindow, к которым окно попытается пристыковаться.</param>
      <param name="focus">Стоит ли давать окну фокус, если оно уже существует. (Если GetWindow создает новое окно, оно всегда будет фокусироваться).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindow(System.String,System.Type[])">
      <summary>
        <para>Возвращает первое окно EditorWindow типа T, которое в данный момент находится на экране.</para>
      </summary>
      <param name="T">Тип окна. Должен быть производным от EditorWindow.</param>
      <param name="title">Если GetWindow создаст новое окно, оно получит этот заголовок. Если это значение равно null, используйте имя класса в качестве заголовка.</param>
      <param name="desiredDockNextTo">Массив типов EditorWindow, к которым окно попытается пристыковаться.</param>
      <param name="focus">Стоит ли давать окну фокус, если оно уже существует. (Если GetWindow создает новое окно, оно всегда будет фокусироваться).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindow(System.String,System.Boolean,System.Type[])">
      <summary>
        <para>Возвращает первое окно EditorWindow типа T, которое в данный момент находится на экране.</para>
      </summary>
      <param name="T">Тип окна. Должен быть производным от EditorWindow.</param>
      <param name="title">Если GetWindow создаст новое окно, оно получит этот заголовок. Если это значение равно null, используйте имя класса в качестве заголовка.</param>
      <param name="desiredDockNextTo">Массив типов EditorWindow, к которым окно попытается пристыковаться.</param>
      <param name="focus">Стоит ли давать окну фокус, если оно уже существует. (Если GetWindow создает новое окно, оно всегда будет фокусироваться).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindowWithRect(System.Type,UnityEngine.Rect)">
      <summary>
        <para>Возвращает первое окно EditorWindow типа t, которое в данный момент находится на экране.</para>
      </summary>
      <param name="t">Тип окна. Должен быть производным от EditorWindow.</param>
      <param name="rect">Положение на экране, где будет отображаться вновь созданное окно.</param>
      <param name="utility">Установите значение true, чтобы создать плавающее окно утилиты, значение false, чтобы создать обычное окно.</param>
      <param name="title">Если GetWindow создаст новое окно, оно получит этот заголовок. Если это значение равно null, используйте имя класса в качестве заголовка.</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindowWithRect(System.Type,UnityEngine.Rect,System.Boolean)">
      <summary>
        <para>Возвращает первое окно EditorWindow типа t, которое в данный момент находится на экране.</para>
      </summary>
      <param name="t">Тип окна. Должен быть производным от EditorWindow.</param>
      <param name="rect">Положение на экране, где будет отображаться вновь созданное окно.</param>
      <param name="utility">Установите значение true, чтобы создать плавающее окно утилиты, значение false, чтобы создать обычное окно.</param>
      <param name="title">Если GetWindow создаст новое окно, оно получит этот заголовок. Если это значение равно null, используйте имя класса в качестве заголовка.</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindowWithRect(System.Type,UnityEngine.Rect,System.Boolean,System.String)">
      <summary>
        <para>Возвращает первое окно EditorWindow типа t, которое в данный момент находится на экране.</para>
      </summary>
      <param name="t">Тип окна. Должен быть производным от EditorWindow.</param>
      <param name="rect">Положение на экране, где будет отображаться вновь созданное окно.</param>
      <param name="utility">Установите значение true, чтобы создать плавающее окно утилиты, значение false, чтобы создать обычное окно.</param>
      <param name="title">Если GetWindow создаст новое окно, оно получит этот заголовок. Если это значение равно null, используйте имя класса в качестве заголовка.</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindowWithRect(UnityEngine.Rect)">
      <summary>
        <para>Возвращает первое окно EditorWindow типа t, которое в данный момент находится на экране.</para>
      </summary>
      <param name="t">Тип окна. Должен быть производным от EditorWindow.</param>
      <param name="rect">Положение на экране, где будет отображаться вновь созданное окно.</param>
      <param name="utility">Установите значение true, чтобы создать плавающее окно утилиты, значение false, чтобы создать обычное окно.</param>
      <param name="title">Если GetWindow создаст новое окно, оно получит этот заголовок. Если это значение равно null, используйте имя класса в качестве заголовка.</param>
      <param name="focus">Стоит ли давать окну фокус, если оно уже существует. (Если GetWindow создает новое окно, оно всегда будет фокусироваться).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindowWithRect(UnityEngine.Rect,System.Boolean)">
      <summary>
        <para>Возвращает первое окно EditorWindow типа t, которое в данный момент находится на экране.</para>
      </summary>
      <param name="t">Тип окна. Должен быть производным от EditorWindow.</param>
      <param name="rect">Положение на экране, где будет отображаться вновь созданное окно.</param>
      <param name="utility">Установите значение true, чтобы создать плавающее окно утилиты, значение false, чтобы создать обычное окно.</param>
      <param name="title">Если GetWindow создаст новое окно, оно получит этот заголовок. Если это значение равно null, используйте имя класса в качестве заголовка.</param>
      <param name="focus">Стоит ли давать окну фокус, если оно уже существует. (Если GetWindow создает новое окно, оно всегда будет фокусироваться).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindowWithRect(UnityEngine.Rect,System.Boolean,System.String)">
      <summary>
        <para>Возвращает первое окно EditorWindow типа t, которое в данный момент находится на экране.</para>
      </summary>
      <param name="t">Тип окна. Должен быть производным от EditorWindow.</param>
      <param name="rect">Положение на экране, где будет отображаться вновь созданное окно.</param>
      <param name="utility">Установите значение true, чтобы создать плавающее окно утилиты, значение false, чтобы создать обычное окно.</param>
      <param name="title">Если GetWindow создаст новое окно, оно получит этот заголовок. Если это значение равно null, используйте имя класса в качестве заголовка.</param>
      <param name="focus">Стоит ли давать окну фокус, если оно уже существует. (Если GetWindow создает новое окно, оно всегда будет фокусироваться).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.GetWindowWithRect(UnityEngine.Rect,System.Boolean,System.String,System.Boolean)">
      <summary>
        <para>Возвращает первое окно EditorWindow типа t, которое в данный момент находится на экране.</para>
      </summary>
      <param name="t">Тип окна. Должен быть производным от EditorWindow.</param>
      <param name="rect">Положение на экране, где будет отображаться вновь созданное окно.</param>
      <param name="utility">Установите значение true, чтобы создать плавающее окно утилиты, значение false, чтобы создать обычное окно.</param>
      <param name="title">Если GetWindow создаст новое окно, оно получит этот заголовок. Если это значение равно null, используйте имя класса в качестве заголовка.</param>
      <param name="focus">Стоит ли давать окну фокус, если оно уже существует. (Если GetWindow создает новое окно, оно всегда будет фокусироваться).</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.HasOpenInstances">
      <summary>
        <para>Проверяет, открыто ли окно редактора.</para>
      </summary>
      <param name="t">Тип окна. Должен быть производным от EditorWindow.</param>
      <returns>
        <para>Возвращает значение true, если открыт объект EditorWindow, соответствующий указанному типу. В противном случае возвращает значение false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.EditorWindow.OnBackingScaleFactorChanged">
      <summary>
        <para>Вызывается при изменении масштабирования пользовательского интерфейса для данного редактораWindow.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorWindow.RemoveNotification">
      <summary>
        <para>Перестаньте показывать уведомление.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorWindow.Repaint">
      <summary>
        <para>Сделайте перерисовку окна.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorWindow.SaveChanges">
      <summary>
        <para>Выполняет действие сохранения содержимого окна.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorWindow.SendEvent(UnityEngine.Event)">
      <summary>
        <para>Отправляет событие в окно.</para>
      </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:UnityEditor.EditorWindow.Show">
      <summary>
        <para>Откройте окно EditorWindow.</para>
      </summary>
      <param name="immediateDisplay">Немедленное отображение Показать.</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.Show(System.Boolean)">
      <summary>
        <para>Откройте окно EditorWindow.</para>
      </summary>
      <param name="immediateDisplay">Немедленное отображение Показать.</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.ShowAsDropDown(UnityEngine.Rect,UnityEngine.Vector2)">
      <summary>
        <para>Показывает окно с раскрывающимся списком и стилем.</para>
      </summary>
      <param name="buttonRect">Кнопка, с помощью которой будет определяться положение окна (см. описание).</param>
      <param name="windowSize">Начальный размер окна.</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.ShowAuxWindow">
      <summary>
        <para>Отобразите окно редактора во вспомогательном окне.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorWindow.ShowModal">
      <summary>
        <para>Показать окно модального редактора.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorWindow.ShowModalUtility">
      <summary>
        <para>Отображение EditorWindow в виде плавающего модального окна.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorWindow.ShowNotification(UnityEngine.GUIContent)">
      <summary>
        <para>Отображение уведомления.</para>
      </summary>
      <param name="notification">Содержимое уведомления.</param>
      <param name="fadeoutWait">Продолжительность отображения уведомления. Измеряется в секундах.</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.ShowNotification(UnityEngine.GUIContent,System.Double)">
      <summary>
        <para>Отображение уведомления.</para>
      </summary>
      <param name="notification">Содержимое уведомления.</param>
      <param name="fadeoutWait">Продолжительность отображения уведомления. Измеряется в секундах.</param>
    </member>
    <member name="M:UnityEditor.EditorWindow.ShowPopup">
      <summary>
        <para>Показывает окно редактора с использованием фрейминга в стиле всплывающих окон.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorWindow.ShowUtility">
      <summary>
        <para>Отображение EditorWindow как плавающего окна утилиты.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorWindow.TryGetOverlay(System.String,UnityEditor.Overlays.Overlay&amp;)">
      <summary>
        <para>Получите наложение с соответствующим идентификатором из холста EditorWindow.</para>
      </summary>
      <param name="id">Идентификатор извлекаемого наложения.</param>
      <param name="match">Содержит наложение с соответствующим идентификатором или null, если соответствующее наложение не найдено.</param>
      <returns>
        <para>Возвращает значение true, если наложение найдено, в противном случае — значение false.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.EditorWindowTitleAttribute">
      <summary>
        <para>Этот класс используется для задания текста заголовка и значка для окна редактора. </para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindowTitleAttribute.icon">
      <summary>
        <para>Задает путь к значку окна редактора по умолчанию.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindowTitleAttribute.title">
      <summary>
        <para>Задает текст заголовка окна редактора.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.EditorWindowTitleAttribute.useTypeNameAsIconName">
      <summary>
        <para>Если задано значение true, Unity задает имя значка окна таким же, как имя его типа.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.EditorWindowTitleAttribute.#ctor">
      <summary>
        <para>Создает содержимое заголовка окна редактора.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.EnterPlayModeOptions">
      <summary>
        <para>Определяет флаги для параметров режима enter play в редакторе Unity.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EnterPlayModeOptions.DisableDomainReload">
      <summary>
        <para>Если перезагрузка домена отключена, сценарии не перезагружаются при входе в режим воспроизведения. Это позволяет быстрее переключиться в режим воспроизведения, поскольку нет необходимости уничтожать, создавать и перезагружать домен приложения .NET.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EnterPlayModeOptions.DisableSceneReload">
      <summary>
        <para>Если перезагрузка сцены отключена, Unity сбрасывает состояние сцены и эмулирует все необходимые вызовы постпроцессора при входе в режим воспроизведения вместо перезагрузки всей сцены. Это позволяет быстрее переключиться в режим воспроизведения, потому что нет необходимости уничтожать, создавать и пробуждать все объекты Scene, а также сериализовать и десериализовать Scene с диска.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.EnterPlayModeOptions.None">
      <summary>
        <para>Это приводит к тому, что Unity перезагружает домен приложения .NET и всю сцену при входе в режим воспроизведения.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Events.UnityEventTools">
      <summary>
        <para>Инструменты редактора для работы с постоянными UnityEvents.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.AddBoolPersistentListener(UnityEngine.Events.UnityEventBase,UnityEngine.Events.UnityAction`1&lt;System.Boolean&gt;,System.Boolean)">
      <summary>
        <para>Добавляет постоянный предустановленный вызов прослушивателю.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="call">Функция для вызова.</param>
      <param name="argument">Аргумент, используемый при вызове.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.AddFloatPersistentListener(UnityEngine.Events.UnityEventBase,UnityEngine.Events.UnityAction`1&lt;System.Single&gt;,System.Single)">
      <summary>
        <para>Добавляет постоянный предустановленный вызов прослушивателю.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="call">Функция для вызова.</param>
      <param name="argument">Аргумент, используемый при вызове.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.AddIntPersistentListener(UnityEngine.Events.UnityEventBase,UnityEngine.Events.UnityAction`1&lt;System.Int32&gt;,System.Int32)">
      <summary>
        <para>Добавляет постоянный предустановленный вызов прослушивателю.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="call">Функция для вызова.</param>
      <param name="argument">Аргумент, используемый при вызове.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.AddObjectPersistentListener(UnityEngine.Events.UnityEventBase,UnityEngine.Events.UnityAction`1&lt;T&gt;,T)">
      <summary>
        <para>Добавляет постоянный предустановленный вызов прослушивателю.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="call">Функция для вызова.</param>
      <param name="argument">Аргумент, используемый при вызове.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.AddPersistentListener(UnityEngine.Events.UnityEventBase)">
      <summary>
        <para>Добавляет постоянный вызов прослушивателю. Будет вызван с аргументами, определенными событием, и отправлен из места вызова.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="call">Функция для вызова.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.AddPersistentListener(UnityEngine.Events.UnityEvent,UnityEngine.Events.UnityAction)">
      <summary>
        <para>Добавляет постоянный вызов прослушивателю. Будет вызван с аргументами, определенными событием, и отправлен из места вызова.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="call">Функция для вызова.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.AddPersistentListener(UnityEngine.Events.UnityEvent`1&lt;T0&gt;,UnityEngine.Events.UnityAction`1&lt;T0&gt;)">
      <summary>
        <para>Добавляет постоянный вызов прослушивателю. Будет вызван с аргументами, определенными событием, и отправлен из места вызова.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="call">Функция для вызова.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.AddPersistentListener(UnityEngine.Events.UnityEvent`2&lt;T0,T1&gt;,UnityEngine.Events.UnityAction`2&lt;T0,T1&gt;)">
      <summary>
        <para>Добавляет постоянный вызов прослушивателю. Будет вызван с аргументами, определенными событием, и отправлен из места вызова.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="call">Функция для вызова.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.AddPersistentListener(UnityEngine.Events.UnityEvent`3&lt;T0,T1,T2&gt;,UnityEngine.Events.UnityAction`3&lt;T0,T1,T2&gt;)">
      <summary>
        <para>Добавляет постоянный вызов прослушивателю. Будет вызван с аргументами, определенными событием, и отправлен из места вызова.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="call">Функция для вызова.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.AddPersistentListener(UnityEngine.Events.UnityEvent`4&lt;T0,T1,T2,T3&gt;,UnityEngine.Events.UnityAction`4&lt;T0,T1,T2,T3&gt;)">
      <summary>
        <para>Добавляет постоянный вызов прослушивателю. Будет вызван с аргументами, определенными событием, и отправлен из места вызова.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="call">Функция для вызова.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.AddStringPersistentListener(UnityEngine.Events.UnityEventBase,UnityEngine.Events.UnityAction`1&lt;System.String&gt;,System.String)">
      <summary>
        <para>Добавляет постоянный предустановленный вызов прослушивателю.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="call">Функция для вызова.</param>
      <param name="argument">Аргумент, используемый при вызове.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.AddVoidPersistentListener(UnityEngine.Events.UnityEventBase,UnityEngine.Events.UnityAction)">
      <summary>
        <para>Добавляет постоянный предустановленный вызов прослушивателю.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="call">Функция для вызова.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RegisterBoolPersistentListener(UnityEngine.Events.UnityEventBase,System.Int32,UnityEngine.Events.UnityAction`1&lt;System.Boolean&gt;,System.Boolean)">
      <summary>
        <para>Изменяет событие по заданному индексу.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="index">Индекс для изменения.</param>
      <param name="call">Функция для вызова.</param>
      <param name="argument">Аргумент, используемый при вызове.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RegisterFloatPersistentListener(UnityEngine.Events.UnityEventBase,System.Int32,UnityEngine.Events.UnityAction`1&lt;System.Single&gt;,System.Single)">
      <summary>
        <para>Изменяет событие по заданному индексу.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="index">Индекс для изменения.</param>
      <param name="call">Функция для вызова.</param>
      <param name="argument">Аргумент, используемый при вызове.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RegisterIntPersistentListener(UnityEngine.Events.UnityEventBase,System.Int32,UnityEngine.Events.UnityAction`1&lt;System.Int32&gt;,System.Int32)">
      <summary>
        <para>Изменяет событие по заданному индексу.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="index">Индекс для изменения.</param>
      <param name="call">Функция для вызова.</param>
      <param name="argument">Аргумент, используемый при вызове.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RegisterObjectPersistentListener(UnityEngine.Events.UnityEventBase,System.Int32,UnityEngine.Events.UnityAction`1&lt;T&gt;,T)">
      <summary>
        <para>Изменяет событие по заданному индексу.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="index">Индекс для изменения.</param>
      <param name="call">Функция для вызова.</param>
      <param name="argument">Аргумент, используемый при вызове.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RegisterPersistentListener(UnityEngine.Events.UnityEvent,System.Int32,UnityEngine.Events.UnityAction)">
      <summary>
        <para>Изменяет событие по заданному индексу.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="index">Индекс для изменения.</param>
      <param name="call">Функция для вызова.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RegisterPersistentListener(UnityEngine.Events.UnityEvent`1&lt;T0&gt;,System.Int32,UnityEngine.Events.UnityAction`1&lt;T0&gt;)">
      <summary>
        <para>Изменяет событие по заданному индексу.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="index">Индекс для изменения.</param>
      <param name="call">Функция для вызова.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RegisterPersistentListener(UnityEngine.Events.UnityEvent`2&lt;T0,T1&gt;,System.Int32,UnityEngine.Events.UnityAction`2&lt;T0,T1&gt;)">
      <summary>
        <para>Изменяет событие по заданному индексу.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="index">Индекс для изменения.</param>
      <param name="call">Функция для вызова.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RegisterPersistentListener(UnityEngine.Events.UnityEvent`3&lt;T0,T1,T2&gt;,System.Int32,UnityEngine.Events.UnityAction`3&lt;T0,T1,T2&gt;)">
      <summary>
        <para>Изменяет событие по заданному индексу.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="index">Индекс для изменения.</param>
      <param name="call">Функция для вызова.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RegisterPersistentListener(UnityEngine.Events.UnityEvent`4&lt;T0,T1,T2,T3&gt;,System.Int32,UnityEngine.Events.UnityAction`4&lt;T0,T1,T2,T3&gt;)">
      <summary>
        <para>Изменяет событие по заданному индексу.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="index">Индекс для изменения.</param>
      <param name="call">Функция для вызова.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RegisterStringPersistentListener(UnityEngine.Events.UnityEventBase,System.Int32,UnityEngine.Events.UnityAction`1&lt;System.String&gt;,System.String)">
      <summary>
        <para>Изменяет событие по заданному индексу.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="index">Индекс для изменения.</param>
      <param name="call">Функция для вызова.</param>
      <param name="argument">Аргумент, используемый при вызове.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RegisterVoidPersistentListener(UnityEngine.Events.UnityEventBase,System.Int32,UnityEngine.Events.UnityAction)">
      <summary>
        <para>Изменяет событие по заданному индексу.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="index">Индекс для изменения.</param>
      <param name="call">Функция для вызова.</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RemovePersistentListener(UnityEngine.Events.UnityEventBase,System.Int32)">
      <summary>
        <para>Удаляет заданную функцию из события.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="index">Индекс для удаления (если указан).</param>
      <param name="call">Функция удаления (если указана).</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RemovePersistentListener(UnityEngine.Events.UnityEventBase,UnityEngine.Events.UnityAction)">
      <summary>
        <para>Удаляет заданную функцию из события.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="index">Индекс для удаления (если указан).</param>
      <param name="call">Функция удаления (если указана).</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RemovePersistentListener(UnityEngine.Events.UnityEventBase,UnityEngine.Events.UnityAction`1&lt;T0&gt;)">
      <summary>
        <para>Удаляет заданную функцию из события.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="index">Индекс для удаления (если указан).</param>
      <param name="call">Функция удаления (если указана).</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RemovePersistentListener(UnityEngine.Events.UnityEventBase,UnityEngine.Events.UnityAction`2&lt;T0,T1&gt;)">
      <summary>
        <para>Удаляет заданную функцию из события.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="index">Индекс для удаления (если указан).</param>
      <param name="call">Функция удаления (если указана).</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RemovePersistentListener(UnityEngine.Events.UnityEventBase,UnityEngine.Events.UnityAction`3&lt;T0,T1,T2&gt;)">
      <summary>
        <para>Удаляет заданную функцию из события.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="index">Индекс для удаления (если указан).</param>
      <param name="call">Функция удаления (если указана).</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.RemovePersistentListener(UnityEngine.Events.UnityEventBase,UnityEngine.Events.UnityAction`4&lt;T0,T1,T2,T3&gt;)">
      <summary>
        <para>Удаляет заданную функцию из события.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="index">Индекс для удаления (если указан).</param>
      <param name="call">Функция удаления (если указана).</param>
    </member>
    <member name="M:UnityEditor.Events.UnityEventTools.UnregisterPersistentListener(UnityEngine.Events.UnityEventBase,System.Int32)">
      <summary>
        <para>Отменяет регистрацию заданного прослушивателя по указанному индексу.</para>
      </summary>
      <param name="unityEvent">Событие для изменения.</param>
      <param name="index">Индекс для отмены регистрации.</param>
    </member>
    <member name="T:UnityEditor.Experimental.ArtifactID">
      <summary>
        <para>Однозначно идентифицирует произведенный артефакт, такой как импортированный актив (например, результат импорта текстуры).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.ArtifactID.isValid">
      <summary>
        <para>Значение true, если этот идентификатор артефакта является допустимым.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Experimental.ArtifactID.value">
      <summary>
        <para>Уникальное значение.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Experimental.ArtifactKey">
      <summary>
        <para>Объект ArtifactKey используется для указания артефакта для поиска или создания.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Experimental.ArtifactKey.guid">
      <summary>
        <para>Идентификатор GUID, указывающий соответствующий ресурс.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Experimental.ArtifactKey.importerType">
      <summary>
        <para>Управляемый тип средства импорта, используемого для создания артефакта.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.ArtifactKey.isValid">
      <summary>
        <para>Возвращает значение true, если хэш-значение является допустимым. (Только для чтения)</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Experimental.ArtifactKey.#ctor(UnityEditor.GUID)">
      <summary>
        <para>Создайте ключ артефакта.</para>
      </summary>
      <param name="g">Идентификатор guid.</param>
      <param name="guid">Идентификатор guid.</param>
      <param name="importerType">Управляемый тип средства импорта.</param>
    </member>
    <member name="M:UnityEditor.Experimental.ArtifactKey.#ctor(UnityEditor.GUID,System.Type)">
      <summary>
        <para>Создайте ключ артефакта.</para>
      </summary>
      <param name="g">Идентификатор guid.</param>
      <param name="guid">Идентификатор guid.</param>
      <param name="importerType">Управляемый тип средства импорта.</param>
    </member>
    <member name="T:UnityEditor.Experimental.Licensing.LicensingUtility">
      <summary>
        <para>Используйте класс "Служебная программа лицензирования" для запроса разрешений пользователя. Разрешения пользователей называются правами. Права представляют собой простые строки. Например, 'com.unity.editor.ui'.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Experimental.Licensing.LicensingUtility.HasEntitlement(System.String)">
      <summary>
        <para>Проверяет, имеет ли текущий пользователь право на определенное право.</para>
      </summary>
      <param name="entitlement">Строка запрошенных прав.</param>
      <returns>
        <para>Возвращает значение true, если пользователь имеет право на строку прав. В противном случае возвращает значение false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Experimental.Licensing.LicensingUtility.HasEntitlements(System.String[])">
      <summary>
        <para>Проверяет, имеет ли текущий пользователь право на список прав.</para>
      </summary>
      <param name="entitlements">Запрошенный список строк прав.</param>
      <returns>
        <para>Возвращает список строк прав, на которые пользователь имеет право на основе запрошенного списка.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Experimental.Lightmapping">
      <summary>
        <para>Экспериментальные функции отображения света.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Experimental.Lightmapping.additionalBakedProbesCompleted(System.Action)">
      <summary>
        <para>Событие, которое вызывается, когда дополнительные пробные выпекания завершены и результаты готовы к получению.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="P:UnityEditor.Experimental.Lightmapping.extractAmbientOcclusion">
      <summary>
        <para>Записывает отфильтрованную текстуру окклюзии окружающей среды на диск при создании ресурса данных освещения и будет расположен рядом с другими световыми картами. Это работает только в режиме По требованию и если включена окклюзия окружающей среды. Обратите внимание, что значения из ползунков прямой и косвенной экспозиции не применяются. В настоящее время не поддерживается индикатором Progressive GPU.  </para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.Lightmapping.probesIgnoreDirectEnvironment">
      <summary>
        <para>При включенном параметре игнорируется прямой вклад освещения окружающей среды в запеченных зондах.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Experimental.Lightmapping.Bake(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Запускает синхронное задание запекания освещения для целевой сцены.</para>
      </summary>
      <param name="targetScene">Сцена для генерации данных освещения.</param>
      <returns>
        <para>Возвращает значение true, если Unity успешно завершит задание на выпечку освещения. Возвращает значение false, если Unity не завершает задание запекания освещения.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Experimental.Lightmapping.BakeAsync(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Запускает асинхронное задание выпечки освещения для целевой сцены.</para>
      </summary>
      <param name="targetScene">Сцена для генерации данных освещения.</param>
      <returns>
        <para>Возвращает значение true, если Unity успешно запускает задание выпечки освещения. Возвращает значение false, если Unity не удается успешно запустить задание обжига освещения.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Experimental.Lightmapping.GetAdditionalBakedProbes">
      <summary>
        <para>Извлеките результат выпечки с помощью дополнительных зондов.</para>
      </summary>
      <param name="id">Идентификатор, который использовался для отправки массива позиций для выпечки.</param>
      <returns>
        <para>Значение true, если outBakedProbeSH и outBakedProbeValidity могут быть успешно возвращены.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Experimental.Lightmapping.GetCustomBakeResults(UnityEngine.Vector4[])">
      <summary>
        <para>Извлеките пользовательские результаты выпечки.</para>
      </summary>
      <param name="results">Ненормализованное количество видимости неба для входных точек (в xyz). Компонент w — это доля лучей, которые ударяют по задним граням.</param>
      <returns>
        <para>Значение true, если результаты были получены. Значение false, если нет доступных данных или массив результатов не соответствует количеству точек в выпечке.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Experimental.Lightmapping.SetAdditionalBakedProbes">
      <summary>
        <para>Отправьте дополнительные позиции зонда для выпечки с помощью идентификатора.</para>
      </summary>
      <param name="id">Удостоверение личности для определения позиций, подлежащих выпечке. Этот идентификатор используется позже для получения результата для этих позиций.</param>
      <param name="positions">Массив позиций зонда.</param>
    </member>
    <member name="M:UnityEditor.Experimental.Lightmapping.SetCustomBakeInputs(UnityEngine.Vector4[],System.Int32)">
      <summary>
        <para>Задайте пользовательские входные данные для выпечки.</para>
      </summary>
      <param name="inputData">Позиции (xyz) точек, для которых рассчитывается величина видимости неба. Компонент w представляет собой смещение, которое будет применено к лучу, исходящему из положения.</param>
      <param name="sampleCount">Количество образцов на верхнем полушарии используется для расчета видимости неба.</param>
    </member>
    <member name="M:UnityEditor.Experimental.Lightmapping.SetLightDirty(UnityEngine.Light)">
      <summary>
        <para>Вручную устанавливает свет как грязный.</para>
      </summary>
      <param name="light">Свет установить как грязный.</param>
    </member>
    <member name="?:UnityEditor.Experimental.Rendering.IScriptableBakedReflectionSystem">
      <summary>
        <para>Определяет необходимые члены для реализации ScriptableBakedReflectionSystem.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.Rendering.IScriptableBakedReflectionSystem.stageCount">
      <summary>
        <para>Количество этапов процесса выпечки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.Rendering.IScriptableBakedReflectionSystem.stateHashes">
      <summary>
        <para>Хэши текущего запеченного состояния scriptableBakedReflectionSystem.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Experimental.Rendering.IScriptableBakedReflectionSystem.BakeAllReflectionProbes">
      <summary>
        <para>Реализуйте этот метод для запекания всех загруженных датчиков отражения.</para>
      </summary>
      <returns>
        <para>Возвращает значение true, если процесс выпечки отражательного зонда успешно завершен. Возвращает значение false, если выпечка не завершена, например, если текущая сцена никогда не сохранялась.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Experimental.Rendering.IScriptableBakedReflectionSystem.Cancel">
      <summary>
        <para>Отмена выполняемых заданий выпечки.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Experimental.Rendering.IScriptableBakedReflectionSystem.Clear">
      <summary>
        <para>Очистите состояние системы ScriptableBakedReflection.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Experimental.Rendering.IScriptableBakedReflectionSystem.SynchronizeReflectionProbes">
      <summary>
        <para>Синхронизируйте загруженные данные с фактическими компонентами и настройками рендеринга.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Experimental.Rendering.IScriptableBakedReflectionSystem.Tick(UnityEditor.Experimental.Rendering.SceneStateHash,UnityEditor.Experimental.Rendering.IScriptableBakedReflectionSystemStageNotifier)">
      <summary>
        <para>Этот метод вызывается при каждом обновлении редактора до тех пор, пока ScriptableBakedReflectionSystem не укажет, что выпечка завершена, с дескриптором. SetIsDone(true). (См. IScriptableBakedReflectionSystemStageNotifier.SetIsDone).</para>
      </summary>
      <param name="sceneStateHash">Хэш текущего состояния сцены.</param>
      <param name="handle">Ручка для получения уведомлений о статусе этапов процесса выпечки.</param>
    </member>
    <member name="?:UnityEditor.Experimental.Rendering.IScriptableBakedReflectionSystemStageNotifier">
      <summary>
        <para>Реализация этого интерфейса предоставляется при установке галочки ScriptableBakedReflectionSystem. (См. IScriptableBakedReflectionSystem.Tick).</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Experimental.Rendering.IScriptableBakedReflectionSystemStageNotifier.EnterStage(System.Int32,System.String,System.Single)">
      <summary>
        <para>Обновите информацию о ходе выполнения этапа выпечки.</para>
      </summary>
      <param name="stage">Текущий этап в процессе.</param>
      <param name="progressMessage">Отображаемое сообщение о ходе выполнения.</param>
      <param name="progress">Ход представления отчета (от 0 до 1).</param>
    </member>
    <member name="M:UnityEditor.Experimental.Rendering.IScriptableBakedReflectionSystemStageNotifier.ExitStage(System.Int32)">
      <summary>
        <para>Указывает, что этап завершен.</para>
      </summary>
      <param name="stage">Завершенный этап.</param>
    </member>
    <member name="M:UnityEditor.Experimental.Rendering.IScriptableBakedReflectionSystemStageNotifier.SetIsDone(System.Boolean)">
      <summary>
        <para>Указывает, завершена ли выпечка.</para>
      </summary>
      <param name="isDone">Завершена ли выпечка.</param>
    </member>
    <member name="T:UnityEditor.Experimental.Rendering.SceneStateHash">
      <summary>
        <para>Этот класс содержит хэши, представляющие состояние Scene.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.Rendering.SceneStateHash.ambientProbeHash">
      <summary>
        <para>Хэш, представляющий состояние зонда окружающей среды.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.Rendering.SceneStateHash.sceneObjectsHash">
      <summary>
        <para>Хэш, представляющий состояние объектов Scene.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.Rendering.SceneStateHash.skySettingsHash">
      <summary>
        <para>Хэш, представляющий настройки неба.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Experimental.Rendering.ScriptableBakedReflectionSystem">
      <summary>
        <para>Пустая реализация IScriptableBakedReflectionSystem.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.Rendering.ScriptableBakedReflectionSystem.stageCount">
      <summary>
        <para>Количество этапов процесса выпечки.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.Rendering.ScriptableBakedReflectionSystem.stateHashes">
      <summary>
        <para>Хэши текущего запеченного состояния scriptableBakedReflectionSystem.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Experimental.Rendering.ScriptableBakedReflectionSystem.BakeAllReflectionProbes">
      <summary>
        <para>Реализуйте этот метод для запекания всех загруженных датчиков отражения.</para>
      </summary>
      <returns>
        <para>Значение true, когда зонд был запечен, ложное, когда выпечка не была завершена.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Experimental.Rendering.ScriptableBakedReflectionSystem.Cancel">
      <summary>
        <para>Отмена выполняемых заданий выпечки.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Experimental.Rendering.ScriptableBakedReflectionSystem.Clear">
      <summary>
        <para>Очистите состояние ScriptableBakedReflectionSystem.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Experimental.Rendering.ScriptableBakedReflectionSystem.SynchronizeReflectionProbes">
      <summary>
        <para>Синхронизируйте загруженные данные с фактическими компонентами и настройками рендеринга.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Experimental.Rendering.ScriptableBakedReflectionSystem.Tick(UnityEditor.Experimental.Rendering.SceneStateHash,UnityEditor.Experimental.Rendering.IScriptableBakedReflectionSystemStageNotifier)">
      <summary>
        <para>Этот метод вызывается во время обновления редактора до тех пор, пока ScriptableBakedReflectionSystem не укажет, что выпечка завершена, с дескриптором. SetIsDone(true). (См. IScriptableBakedReflectionSystemStageNotifier.SetIsDone).</para>
      </summary>
      <param name="sceneStateHash">Хэш текущего состояния сцены.</param>
      <param name="handle">Ручка для получения уведомлений о статусе этапов процесса выпечки.</param>
    </member>
    <member name="T:UnityEditor.Experimental.Rendering.ScriptableBakedReflectionSystemSettings">
      <summary>
        <para>Глобальные настройки для скриптовой системы отражения.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Experimental.Rendering.ScriptableBakedReflectionSystemSettings.system">
      <summary>
        <para>Активная в настоящее время система ScriptableBakedReflectionSystem см. раздел IScriptableBakedReflectionSystem.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ExportPackageOptions">
      <summary>
        <para>Опция экспорта пакета. Несколько вариантов могут быть объединены вместе с помощью | оператор.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ExportPackageOptions.Default">
      <summary>
        <para>Режим по умолчанию. Не будет включать зависимости или подкаталоги, а также ресурсы библиотеки, если они специально не включены в список активов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ExportPackageOptions.IncludeDependencies">
      <summary>
        <para>В дополнение к перечисленным путям к ресурсам будут также включены все зависимые активы.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ExportPackageOptions.IncludeLibraryAssets">
      <summary>
        <para>Экспортированный пакет будет включать в себя все библиотечные активы, т.е. параметры проекта, расположенные в папке Library проекта.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ExportPackageOptions.Interactive">
      <summary>
        <para>Операция экспорта будет запущена асинхронно и отобразит экспортированный файл пакета в окне файлового браузера после завершения экспорта.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ExportPackageOptions.Recurse">
      <summary>
        <para>Будет повторяться через любые перечисленные подкаталоги и включать в них все ресурсы.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ExpressionEvaluator">
      <summary>
        <para>Вычисляет простые математические выражения; поддерживает int float и операторы: + - * % ^ ( ).</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ExpressionEvaluator.Evaluate(System.String,T&amp;)">
      <summary>
        <para>Вычисляет математическое выражение и возвращает результат.</para>
      </summary>
      <param name="expression">Строка, содержащая математическое выражение (например, '4+3').</param>
      <param name="value">Результат вычисления выражения. Поддерживаемые типы: int, float, long, double.</param>
      <returns>
        <para>Указывает, можно ли успешно исказить выражение.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.FilePathAttribute">
      <summary>
        <para>Атрибут, указывающий расположение файла относительно папки Project или папки установок Unity. См. также: FilePathAttribute.Location.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.FilePathAttribute.#ctor(System.String,UnityEditor.FilePathAttribute/Location)">
      <summary>
        <para>
        </para>
      </summary>
      <param name="relativePath">Относительный путь к указанному 'местоположению'.</param>
      <param name="location">Параметр Location, указывающий, с какой корневой папкой следует объединить 'relativePath'.</param>
    </member>
    <member name="T:UnityEditor.FilePathAttribute.Location">
      <summary>
        <para>Задает расположение папки, используемой Unity, вместе с относительным путем, указанным в конструкторе FilePathAttribute.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.FilePathAttribute.Location.PreferencesFolder">
      <summary>
        <para>Используйте это расположение для сохранения файла относительно папки установок. Полезно для пользовательских файлов, которые находятся во всех проектах.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.FilePathAttribute.Location.ProjectFolder">
      <summary>
        <para>Используйте это расположение для сохранения файла относительно папки проекта. Полезно для файлов для каждого проекта (не совместно используемых проектами).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.FileUtil">
      <summary>
        <para>Позволяет перемещать, копировать, удалять операции над файлами или каталогами.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.FileUtil.CopyFileOrDirectory(System.String,System.String)">
      <summary>
        <para>Копирует файл или каталог.</para>
      </summary>
      <param name="source">
      </param>
      <param name="dest">
      </param>
    </member>
    <member name="M:UnityEditor.FileUtil.CopyFileOrDirectoryFollowSymlinks(System.String,System.String)">
      <summary>
        <para>Копирует файл или каталог.</para>
      </summary>
      <param name="source">
      </param>
      <param name="dest">
      </param>
    </member>
    <member name="M:UnityEditor.FileUtil.DeleteFileOrDirectory(System.String)">
      <summary>
        <para>Удаляет файл или каталог с заданным путем.</para>
      </summary>
      <param name="path">
      </param>
    </member>
    <member name="M:UnityEditor.FileUtil.GetLogicalPath(System.String)">
      <summary>
        <para>Преобразует физический путь в логический.</para>
      </summary>
      <param name="path">Физический путь.</param>
      <returns>
        <para>Логический путь.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.FileUtil.GetPhysicalPath(System.String)">
      <summary>
        <para>Преобразует логический путь в физический.</para>
      </summary>
      <param name="path">Логический путь.</param>
      <returns>
        <para>Физический путь.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.FileUtil.GetUniqueTempPathInProject">
      <summary>
        <para>Возвращает уникальный путь в папке Temp в текущем проекте.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.FileUtil.MoveFileOrDirectory(System.String,System.String)">
      <summary>
        <para>Перемещает файл или каталог из заданного пути в другой.</para>
      </summary>
      <param name="source">
      </param>
      <param name="dest">
      </param>
    </member>
    <member name="M:UnityEditor.FileUtil.ReplaceDirectory(System.String,System.String)">
      <summary>
        <para>Заменяет каталог.</para>
      </summary>
      <param name="src">
      </param>
      <param name="dst">
      </param>
    </member>
    <member name="M:UnityEditor.FileUtil.ReplaceFile(System.String,System.String)">
      <summary>
        <para>Заменяет файл.</para>
      </summary>
      <param name="src">
      </param>
      <param name="dst">
      </param>
    </member>
    <member name="T:UnityEditor.FontRenderingMode">
      <summary>
        <para>Константы режима отрисовки шрифтов для TrueTypeFontImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.FontRenderingMode.HintedRaster">
      <summary>
        <para>Используйте подсказку отрисовки шрифтов без сглаживания. Это самый четкий вариант рендеринга шрифтов, который может быть наиболее читаемым для небольших размеров шрифта.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.FontRenderingMode.HintedSmooth">
      <summary>
        <para>Используйте рендеринг сглаженных шрифтов с подсказками. Это заставляет линии символов проходить вдоль границ пикселей.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.FontRenderingMode.OSDefault">
      <summary>
        <para>Используйте режим рендеринга шрифтов ОС по умолчанию. Этот режим доступен только для динамических шрифтов, так как статические шрифты генерируются во время сборки.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.FontRenderingMode.Smooth">
      <summary>
        <para>Используйте отрисовку сглаженных шрифтов. При использовании динамических шрифтов это режим, который является самым быстрым в рендеринге текстур шрифтов.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.FontTextureCase">
      <summary>
        <para>Константы текстурного регистра для TrueTypeFontImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.FontTextureCase.ASCII">
      <summary>
        <para>Импорт базового набора символов ASCII.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.FontTextureCase.ASCIILowerCase">
      <summary>
        <para>Импортируйте только набор символов ASCII в нижнем регистре.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.FontTextureCase.ASCIIUpperCase">
      <summary>
        <para>Импортируйте только набор символов ASCII в верхнем регистре.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.FontTextureCase.CustomSet">
      <summary>
        <para>Пользовательский набор символов.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.FontTextureCase.Dynamic">
      <summary>
        <para>При необходимости визуализируйте символы в текстуру шрифта во время выполнения.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.FontTextureCase.Unicode">
      <summary>
        <para>Импортируйте набор символов Юникода, общих для латинского алфавита.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ForceReserializeAssetsOptions">
      <summary>
        <para>Параметры для AssetDatabase.ForceReserializeAssets.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ForceReserializeAssetsOptions.ReserializeAssets">
      <summary>
        <para>Указывает, что AssetDatabase.ForceReserializeAssets должен загружать, обновлять и сохранять ресурсы по путям, переданным функции, но не по сопутствующим мета-файлам.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ForceReserializeAssetsOptions.ReserializeAssetsAndMetadata">
      <summary>
        <para>Указывает, что AssetDatabase.ForceReserializeAssets должны загружать, обновлять и сохранять как ресурсы по путям, передаваемым функции, так и сопутствующие им мета-файлы.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ForceReserializeAssetsOptions.ReserializeMetadata">
      <summary>
        <para>Указывает, что AssetDatabase.ForceReserializeAssets должны загружать, обновлять и сохранять мета-файлы для ресурсов по путям, переданным функции, но не сами ресурсы.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.GameObjectUtility">
      <summary>
        <para>Функции утилиты GameObject.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.AreStaticEditorFlagsSet(UnityEngine.GameObject,UnityEditor.StaticEditorFlags)">
      <summary>
        <para>Возвращает значение true, если переданные в StaticEditorFlags заданы для указанного объекта GameObject.</para>
      </summary>
      <param name="go">Объект GameObject для проверки.</param>
      <param name="flags">Флаги, которые вы хотите проверить.</param>
      <returns>
        <para>Соответствуют ли статические флаги GameObject указанным флагам.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.EnsureUniqueNameForSibling(UnityEngine.GameObject)">
      <summary>
        <para>Этот метод можно использовать после передачи одного Объекта GameObject в другой, чтобы убедиться, что дочерний объект GameObject имеет уникальное имя по сравнению со своими братьями и сестрами в иерархии.</para>
      </summary>
      <param name="self">The GameObject whose name you want to ensure is unique.</param>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.GetMonoBehavioursWithMissingScriptCount(UnityEngine.GameObject)">
      <summary>
        <para>Gets the number of MonoBehaviours with a missing script for the given GameObject.</para>
      </summary>
      <param name="go">GameObject to query.</param>
      <returns>
        <para>The number of MonoBehaviours with a missing script.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.GetNavMeshArea(UnityEngine.GameObject)">
      <summary>
        <para>Get the navmesh area index for the GameObject.</para>
      </summary>
      <param name="go">The GameObject to query.</param>
      <returns>
        <para>NavMesh area index.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.GetNavMeshAreaFromName(System.String)">
      <summary>
        <para>Get the navmesh area index from the area name.</para>
      </summary>
      <param name="name">NavMesh area name to query.</param>
      <returns>
        <para>The NavMesh area index. If there is no NavMesh area with the requested name, the return value is -1.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.GetNavMeshAreaNames">
      <summary>
        <para>Get all the navmesh area names.</para>
      </summary>
      <returns>
        <para>Names of all the NavMesh areas.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.GetNavMeshLayer(UnityEngine.GameObject)">
      <summary>
        <para>Get the navmesh layer for the GameObject.</para>
      </summary>
      <param name="go">The GameObject to check.</param>
      <returns>
        <para>The navmesh layer for the GameObject specified.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.GetNavMeshLayerFromName(System.String)">
      <summary>
        <para>Get the navmesh layer from the layer name.</para>
      </summary>
      <param name="name">The name of the navmesh layer.</param>
      <returns>
        <para>The layer number of the navmesh layer name specified.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.GetNavMeshLayerNames">
      <summary>
        <para>Get all the navmesh layer names.</para>
      </summary>
      <returns>
        <para>An array of the names of all navmesh layers.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.GetStaticEditorFlags(UnityEngine.GameObject)">
      <summary>
        <para>Gets the StaticEditorFlags of the GameObject specified.</para>
      </summary>
      <param name="go">The GameObject whose flags you are interested in.</param>
      <returns>
        <para>The static editor flags of the GameObject specified.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.GetUniqueNameForSibling(UnityEngine.Transform,System.String)">
      <summary>
        <para>You can use this method before instantiating a new sibling, or before parenting one GameObject to another, to ensure the new child GameObject has a unique name compared to its siblings in the hierarchy.</para>
      </summary>
      <param name="parent">Target parent for a new GameObject. Null means root level.</param>
      <param name="name">Requested name for a new GameObject.</param>
      <returns>
        <para>Unique name for a new GameObject.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.ModifyMaskIfGameObjectIsHiddenForPrefabModeInContext(System.UInt64,UnityEngine.GameObject)">
      <summary>
        <para>Use this method if a custom scene culling mask is needed for renderers that should be shown or hidden in a Scene view when Prefab Mode in Context is active.</para>
      </summary>
      <param name="sceneCullingMask">The scene culling mask intended to be used with the custom renderer.</param>
      <param name="gameObject">The GameObject associated with the custom renderer.</param>
      <returns>
        <para>If the GameObject is hidden for Prefab Mode in Context, a modified scene culling mask is returned. If it's not hidden, then the input scene culling mask is returned.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.RemoveMonoBehavioursWithMissingScript(UnityEngine.GameObject)">
      <summary>
        <para>Removes the MonoBehaviours with a missing script from the given GameObject.</para>
      </summary>
      <param name="go">The GameObject to remove MonoBehaviours with a missing script from.</param>
      <returns>
        <para>The number of MonoBehaviours with a missing script that were removed.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.SetNavMeshArea(UnityEngine.GameObject,System.Int32)">
      <summary>
        <para>Set the navmesh area for the gameobject.</para>
      </summary>
      <param name="go">GameObject to modify.</param>
      <param name="areaIndex">NavMesh area index to set.</param>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.SetNavMeshLayer(UnityEngine.GameObject,System.Int32)">
      <summary>
        <para>Set the navmesh layer for the GameObject.</para>
      </summary>
      <param name="go">The GameObject on which to set the navmesh layer.</param>
      <param name="areaIndex">The layer number you want to set.</param>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.SetParentAndAlign(UnityEngine.GameObject,UnityEngine.GameObject)">
      <summary>
        <para>Sets the parent and gives the child the same layer and position.</para>
      </summary>
      <param name="child">The GameObject that should have a new parent set.</param>
      <param name="parent">The GameObject that the child should get as a parent and have position and layer copied from. If null, this function does nothing.</param>
    </member>
    <member name="M:UnityEditor.GameObjectUtility.SetStaticEditorFlags(UnityEngine.GameObject,UnityEditor.StaticEditorFlags)">
      <summary>
        <para>Sets the StaticEditorFlags of the specified GameObject.</para>
      </summary>
      <param name="go">The GameObject whose Static Editor Flags you want to set.</param>
      <param name="flags">The StaticEditorFlags to set on the GameObject.</param>
    </member>
    <member name="T:UnityEditor.GenericMenu">
      <summary>
        <para>GenericMenu lets you create custom context menus and dropdown menus.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.GenericMenu.allowDuplicateNames">
      <summary>
        <para>Allow the menu to have multiple items with the same name.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.GenericMenu.AddDisabledItem(UnityEngine.GUIContent)">
      <summary>
        <para>Add a disabled item to the menu.</para>
      </summary>
      <param name="content">The GUIContent to display as a disabled menu item.</param>
    </member>
    <member name="M:UnityEditor.GenericMenu.AddDisabledItem(UnityEngine.GUIContent,System.Boolean)">
      <summary>
        <para>Add a disabled item to the menu.</para>
      </summary>
      <param name="content">The GUIContent to display as a disabled menu item.</param>
      <param name="on">Specifies whether to show that the item is currently activated (i.e. a tick next to the item in the menu).</param>
    </member>
    <member name="M:UnityEditor.GenericMenu.AddItem(UnityEngine.GUIContent,System.Boolean,UnityEditor.GenericMenu/MenuFunction)">
      <summary>
        <para>Add an item to the menu.</para>
      </summary>
      <param name="content">The GUIContent to add as a menu item.</param>
      <param name="on">Specifies whether to show the item is currently activated (i.e. a tick next to the item in the menu).</param>
      <param name="func">The function to call when the menu item is selected.</param>
    </member>
    <member name="M:UnityEditor.GenericMenu.AddItem(UnityEngine.GUIContent,System.Boolean,UnityEditor.GenericMenu/MenuFunction2,System.Object)">
      <summary>
        <para>Add an item to the menu.</para>
      </summary>
      <param name="content">The GUIContent to add as a menu item.</param>
      <param name="on">Specifies whether to show the item is currently activated (i.e. a tick next to the item in the menu).</param>
      <param name="func">The function to call when the menu item is selected.</param>
      <param name="userData">The data to pass to the function called when the item is selected.</param>
    </member>
    <member name="M:UnityEditor.GenericMenu.AddSeparator(System.String)">
      <summary>
        <para>Add a seperator item to the menu.</para>
      </summary>
      <param name="path">The path to the submenu, if adding a separator to a submenu. When adding a separator to the top level of a menu, use an empty string as the path.</param>
    </member>
    <member name="M:UnityEditor.GenericMenu.DropDown(UnityEngine.Rect)">
      <summary>
        <para>Show the menu at the given screen rect.</para>
      </summary>
      <param name="position">The position at which to show the menu.</param>
    </member>
    <member name="M:UnityEditor.GenericMenu.GetItemCount">
      <summary>
        <para>Get number of items in the menu.</para>
      </summary>
      <returns>
        <para>The number of items in the menu.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.GenericMenu.MenuFunction">
      <summary>
        <para>Callback function, called when a menu item is selected.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.GenericMenu.MenuFunction2">
      <summary>
        <para>Callback function with user data, called when a menu item is selected.</para>
      </summary>
      <param name="userData">The data to pass through to the callback function.</param>
    </member>
    <member name="M:UnityEditor.GenericMenu.ShowAsContext">
      <summary>
        <para>Show the menu under the mouse when right-clicked.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.GizmoType">
      <summary>
        <para>Determines how a gizmo is drawn or picked in the Unity editor.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.GizmoType.Active">
      <summary>
        <para>Draw the gizmo if it is active (shown in the inspector).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.GizmoType.InSelectionHierarchy">
      <summary>
        <para>Draw the gizmo if it is selected or it is a child/descendent of the selected.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.GizmoType.NonSelected">
      <summary>
        <para>Draw the gizmo if it is not selected.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.GizmoType.NotInSelectionHierarchy">
      <summary>
        <para>Draw the gizmo if it is not selected and also no parent/ancestor is selected.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.GizmoType.Pickable">
      <summary>
        <para>The gizmo can be picked in the editor.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.GizmoType.Selected">
      <summary>
        <para>Draw the gizmo if it is selected.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.GlobalObjectId">
      <summary>
        <para>Struct providing an API for stable, project-global object identifiers.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.GlobalObjectId.assetGUID">
      <summary>
        <para>The GUID for the asset to which this object belongs.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.GlobalObjectId.identifierType">
      <summary>
        <para>The identifier type represented as an integer.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.GlobalObjectId.targetObjectId">
      <summary>
        <para>The local file ID of the object.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.GlobalObjectId.targetPrefabId">
      <summary>
        <para>The prefab instance id of the object.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.GlobalObjectId.Equals(UnityEditor.GlobalObjectId)">
      <summary>
        <para>Check equality between two GlobalObjectIds.</para>
      </summary>
      <param name="other">
      </param>
    </member>
    <member name="M:UnityEditor.GlobalObjectId.GetGlobalObjectIdSlow(UnityEngine.Object)">
      <summary>
        <para>Converts an Object reference or InstanceID to a GlobalObjectId.</para>
      </summary>
      <param name="targetObject">The Object to be converted.</param>
      <param name="instanceId">The InstanceID of the Object to be converted.</param>
      <returns>
        <para>The converted GlobalObjectId. If the conversion is unsuccessful, the GlobalObjectId is set to the default null ID: "GlobalObjectId_V1-0-00000000000000000000000000000000-0-0".</para>
      </returns>
    </member>
    <member name="M:UnityEditor.GlobalObjectId.GetGlobalObjectIdSlow(System.Int32)">
      <summary>
        <para>Converts an Object reference or InstanceID to a GlobalObjectId.</para>
      </summary>
      <param name="targetObject">The Object to be converted.</param>
      <param name="instanceId">The InstanceID of the Object to be converted.</param>
      <returns>
        <para>The converted GlobalObjectId. If the conversion is unsuccessful, the GlobalObjectId is set to the default null ID: "GlobalObjectId_V1-0-00000000000000000000000000000000-0-0".</para>
      </returns>
    </member>
    <member name="M:UnityEditor.GlobalObjectId.GetGlobalObjectIdsSlow(UnityEngine.Object[],UnityEditor.GlobalObjectId[])">
      <summary>
        <para>Creates an array of GlobalObjectIds based on an array of Objects or InstanceIDs.</para>
      </summary>
      <param name="objects">Array of Objects to convert.</param>
      <param name="outputIdentifiers">Resulting array of GlobalObjectIds.</param>
      <param name="instanceIds">Array of InstanceIDs to convert.</param>
    </member>
    <member name="M:UnityEditor.GlobalObjectId.GetGlobalObjectIdsSlow(System.Int32[],UnityEditor.GlobalObjectId[])">
      <summary>
        <para>Creates an array of GlobalObjectIds based on an array of Objects or InstanceIDs.</para>
      </summary>
      <param name="objects">Array of Objects to convert.</param>
      <param name="outputIdentifiers">Resulting array of GlobalObjectIds.</param>
      <param name="instanceIds">Array of InstanceIDs to convert.</param>
    </member>
    <member name="M:UnityEditor.GlobalObjectId.GlobalObjectIdentifiersToInstanceIDsSlow(UnityEditor.GlobalObjectId[],System.Int32[])">
      <summary>
        <para>Creates an array of InstanceIDs based on an array of GlobalObjectIds.</para>
      </summary>
      <param name="identifiers">Array of GlobalObjectIds to convert.</param>
      <param name="outputInstanceIDs">Resulting array of InstanceIDs.</param>
    </member>
    <member name="M:UnityEditor.GlobalObjectId.GlobalObjectIdentifiersToObjectsSlow(UnityEditor.GlobalObjectId[],UnityEngine.Object[])">
      <summary>
        <para>Creates an array of Objects based on an array of GlobalObjectIds.</para>
      </summary>
      <param name="identifiers">Array of GlobalObjectIds to convert.</param>
      <param name="outputObjects">Resulting array of Object references.</param>
    </member>
    <member name="M:UnityEditor.GlobalObjectId.GlobalObjectIdentifierToInstanceIDSlow(UnityEditor.GlobalObjectId)">
      <summary>
        <para>Converts a GlobalObjectId to an InstanceID.</para>
      </summary>
      <param name="id">The GlobalObjectId to lookup.</param>
      <returns>
        <para>If the GlobalObjectId is found, this method returns the converted InstanceID. Returns 0 if the GlobalObjectId is not found.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.GlobalObjectId.GlobalObjectIdentifierToObjectSlow(UnityEditor.GlobalObjectId)">
      <summary>
        <para>Converts a GlobalObjectId to an Object reference.</para>
      </summary>
      <param name="id">The GlobalObjectId to lookup.</param>
      <returns>
        <para>If the GlobalObjectId is found, this method returns the converted Object reference. Returns null if the GlobalObjectId is not found.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.GlobalObjectId.ToString">
      <summary>
        <para>Get the string representation of the GlobalObjectId.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.GlobalObjectId.TryParse(System.String,UnityEditor.GlobalObjectId&amp;)">
      <summary>
        <para>Parses the string representation of a GlobalObjectId into a GlobalObjectId struct.</para>
      </summary>
      <param name="stringValue">The string representation of a GlobalObjectId.
Example: "GlobalObjectId_V1-2-74c253e3f16be4776bb2d88e01f77c8a-902906726-0".</param>
      <param name="id">The GlobalObjectId struct for the parsed values.</param>
      <returns>
        <para>Returns true if the string representation is successfully parsed. Otherwise, returns false.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.GraphicsJobMode">
      <summary>
        <para>Enum used to specify the graphics jobs mode to use.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.GraphicsJobMode.Legacy">
      <summary>
        <para>Legacy graphics jobs.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.GraphicsJobMode.Native">
      <summary>
        <para>Native graphics jobs.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.GridPalette">
      <summary>
        <para>GridPalette stores settings for Palette assets when shown in the Palette window.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.GridPalette.cellSizing">
      <summary>
        <para>Determines the sizing of cells for a Palette.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.GridPalette.transparencySortAxis">
      <summary>
        <para>Determines the sorting axis if the Transparency Sort Mode is set to Custom Axis.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.GridPalette.transparencySortMode">
      <summary>
        <para>Determines the Transparency Sorting Mode of Renderers in the Palette.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.GridPalette.CellSizing">
      <summary>
        <para>Controls the sizing of cells for a Palette.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.GridPalette.CellSizing.Automatic">
      <summary>
        <para>Automatically resizes the Palette cells by the size of Sprites in the Palette.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.GridPalette.CellSizing.Manual">
      <summary>
        <para>Size of Palette cells will be changed manually by the user.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.GUIDrawer">
      <summary>
        <para>Base class for PropertyDrawer and DecoratorDrawer.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Handles">
      <summary>
        <para>Custom 3D GUI controls and drawing in the Scene view.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Handles.centerColor">
      <summary>
        <para>Color to use for handles that represent the center of something.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Handles.color">
      <summary>
        <para>Colors of the handles.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Handles.currentCamera">
      <summary>
        <para>Setup viewport and stuff for a current camera.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Handles.inverseMatrix">
      <summary>
        <para>The inverse of the matrix for all handle operations.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Handles.lighting">
      <summary>
        <para>Are handles lit?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Handles.lineThickness">
      <summary>
        <para>Retrieves the user preference setting that controls the thickness of tool handle lines. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Handles.matrix">
      <summary>
        <para>Matrix for all handle operations.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Handles.preselectionColor">
      <summary>
        <para>Color to use to highlight an unselected handle currently under the mouse pointer.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Handles.secondaryColor">
      <summary>
        <para>Soft color to use for for general things.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Handles.selectedColor">
      <summary>
        <para>Color to use for the currently active handle.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Handles.xAxisColor">
      <summary>
        <para>Color to use for handles that manipulates the X coordinate of something.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Handles.yAxisColor">
      <summary>
        <para>Color to use for handles that manipulates the Y coordinate of something.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Handles.zAxisColor">
      <summary>
        <para>Color to use for handles that manipulates the Z coordinate of something.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Handles.zTest">
      <summary>
        <para>zTest of the handles.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Handles.ArrowHandleCap(System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.EventType)">
      <summary>
        <para>Draw an arrow like those used by the move tool.</para>
      </summary>
      <param name="controlID">The control ID for the handle.</param>
      <param name="position">The position of the handle in the space of Handles.matrix.</param>
      <param name="rotation">The rotation of the handle in the space of Handles.matrix.</param>
      <param name="size">The size of the handle in the space of Handles.matrix. Use HandleUtility.GetHandleSize if you want a constant screen-space size.</param>
      <param name="eventType">Event type for the handle to act upon. By design it handles EventType.Layout and EventType.Repaint events.</param>
    </member>
    <member name="M:UnityEditor.Handles.BeginGUI">
      <summary>
        <para>Begin a 2D GUI block inside the 3D handle GUI.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Handles.Button(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,System.Single,UnityEditor.Handles/CapFunction)">
      <summary>
        <para>Make a 3D Button.</para>
      </summary>
      <param name="position">The position to draw the button in the space of Handles.matrix.</param>
      <param name="direction">The rotation of the button in the space of Handles.matrix.</param>
      <param name="size">The visual size of the handle. Use HandleUtility.GetHandleSize if you want a constant screen-space size.</param>
      <param name="pickSize">The size of the button for the purpose of detecting a click. Use HandleUtility.GetHandleSize if you want a constant screen-space size.</param>
      <param name="capFunction">The draw style of the button.</param>
      <returns>
        <para>True when the user clicks the button.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Handles.CapFunction">
      <summary>
        <para>The function to use for drawing the handle e.g. Handles.RectangleCap.</para>
      </summary>
      <param name="controlID">The control ID for the handle.</param>
      <param name="position">The position of the handle in the space of Handles.matrix.</param>
      <param name="rotation">The rotation of the handle in the space of Handles.matrix.</param>
      <param name="size">The size of the handle in world-space units.</param>
      <param name="eventType">Event type for the handle to act upon. By design it handles EventType.Layout and EventType.Repaint events.</param>
    </member>
    <member name="M:UnityEditor.Handles.CircleHandleCap(System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.EventType)">
      <summary>
        <para>Draw a circle handle. Pass this into handle functions.</para>
      </summary>
      <param name="controlID">The control ID for the handle.</param>
      <param name="position">The position of the handle in the space of Handles.matrix.</param>
      <param name="rotation">The rotation of the handle in the space of Handles.matrix.</param>
      <param name="size">The size of the handle in the space of Handles.matrix. Use HandleUtility.GetHandleSize if you want a constant screen-space size.</param>
      <param name="eventType">Event type for the handle to act upon. By design it handles EventType.Layout and EventType.Repaint events.</param>
    </member>
    <member name="M:UnityEditor.Handles.ClearCamera(UnityEngine.Rect,UnityEngine.Camera)">
      <summary>
        <para>Clears the camera.</para>
      </summary>
      <param name="position">Where in the Scene to clear.</param>
      <param name="camera">The camera to clear.</param>
    </member>
    <member name="M:UnityEditor.Handles.ConeHandleCap(System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.EventType)">
      <summary>
        <para>Draw a cone handle. Pass this into handle functions.</para>
      </summary>
      <param name="controlID">The control ID for the handle.</param>
      <param name="position">The position of the handle in the space of Handles.matrix.</param>
      <param name="rotation">The rotation of the handle in the space of Handles.matrix.</param>
      <param name="size">The size of the handle in the space of Handles.matrix. Use HandleUtility.GetHandleSize if you want a constant screen-space size.</param>
      <param name="eventType">Event type for the handle to act upon. By design it handles EventType.Layout and EventType.Repaint events.</param>
    </member>
    <member name="M:UnityEditor.Handles.CubeHandleCap(System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.EventType)">
      <summary>
        <para>Draw a cube handle. Pass this into handle functions.</para>
      </summary>
      <param name="controlID">The control ID for the handle.</param>
      <param name="position">The position of the handle in the space of Handles.matrix.</param>
      <param name="rotation">The rotation of the handle in the space of Handles.matrix.</param>
      <param name="size">The size of the handle in the space of Handles.matrix. Use HandleUtility.GetHandleSize if you want a constant screen-space size.</param>
      <param name="eventType">Event type for the handle to act upon. By design it handles EventType.Layout and EventType.Repaint events.</param>
    </member>
    <member name="M:UnityEditor.Handles.CylinderHandleCap(System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.EventType)">
      <summary>
        <para>Draw a cylinder handle. Pass this into handle functions.</para>
      </summary>
      <param name="controlID">The control ID for the handle.</param>
      <param name="position">The position of the handle in the space of Handles.matrix.</param>
      <param name="rotation">The rotation of the handle in the space of Handles.matrix.</param>
      <param name="size">The size of the handle in the space of Handles.matrix. Use HandleUtility.GetHandleSize if you want a constant screen-space size.</param>
      <param name="eventType">Event type for the handle to act upon. By design it handles EventType.Layout and EventType.Repaint events.</param>
    </member>
    <member name="M:UnityEditor.Handles.Disc(System.Int32,UnityEngine.Quaternion,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Boolean,System.Single)">
      <summary>
        <para>Make a 3D disc that can be dragged with the mouse.</para>
      </summary>
      <param name="id">Control id of the handle.</param>
      <param name="rotation">The rotation of the disc.</param>
      <param name="position">The center of the disc.</param>
      <param name="axis">The axis to rotate around.</param>
      <param name="size">The size of the disc in world space.</param>
      <param name="cutoffPlane">If true, only the front-facing half of the circle is draw / draggable. This is useful when you have many overlapping rotation axes (like in the default rotate tool) to avoid clutter.</param>
      <param name="snap">The grid size to snap to.</param>
      <returns>
        <para>The new rotation value modified by the user's interaction with the handle. If the user has not moved the handle, it will return the same value as you passed into the function.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.Disc(UnityEngine.Quaternion,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Boolean,System.Single)">
      <summary>
        <para>Make a 3D disc that can be dragged with the mouse.</para>
      </summary>
      <param name="id">Control id of the handle.</param>
      <param name="rotation">The rotation of the disc.</param>
      <param name="position">The center of the disc.</param>
      <param name="axis">The axis to rotate around.</param>
      <param name="size">The size of the disc in world space.</param>
      <param name="cutoffPlane">If true, only the front-facing half of the circle is draw / draggable. This is useful when you have many overlapping rotation axes (like in the default rotate tool) to avoid clutter.</param>
      <param name="snap">The grid size to snap to.</param>
      <returns>
        <para>The new rotation value modified by the user's interaction with the handle. If the user has not moved the handle, it will return the same value as you passed into the function.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.DotHandleCap(System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.EventType)">
      <summary>
        <para>Draw a dot handle. Pass this into handle functions.</para>
      </summary>
      <param name="controlID">The control ID for the handle.</param>
      <param name="position">The position of the handle in the space of Handles.matrix.</param>
      <param name="rotation">The rotation of the handle in the space of Handles.matrix.</param>
      <param name="size">The size of the handle in the space of Handles.matrix. Use HandleUtility.GetHandleSize if you want a constant screen-space size.</param>
      <param name="eventType">Event type for the handle to act upon. By design it handles EventType.Layout and EventType.Repaint events.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawAAConvexPolygon(UnityEngine.Vector3[])">
      <summary>
        <para>Draw anti-aliased convex polygon specified with point array.</para>
      </summary>
      <param name="points">List of points describing the convex polygon.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawAAPolyLine(UnityEngine.Vector3[])">
      <summary>
        <para>Draw anti-aliased line specified with point array and width.</para>
      </summary>
      <param name="lineTex">The AA texture used for rendering.</param>
      <param name="width">The width of the line.</param>
      <param name="points">List of points to build the line from.</param>
      <param name="actualNumberOfPoints">
      </param>
    </member>
    <member name="M:UnityEditor.Handles.DrawAAPolyLine(System.Single,UnityEngine.Vector3[])">
      <summary>
        <para>Draw anti-aliased line specified with point array and width.</para>
      </summary>
      <param name="lineTex">The AA texture used for rendering.</param>
      <param name="width">The width of the line.</param>
      <param name="points">List of points to build the line from.</param>
      <param name="actualNumberOfPoints">
      </param>
    </member>
    <member name="M:UnityEditor.Handles.DrawAAPolyLine(UnityEngine.Texture2D,UnityEngine.Vector3[])">
      <summary>
        <para>Draw anti-aliased line specified with point array and width.</para>
      </summary>
      <param name="lineTex">The AA texture used for rendering.</param>
      <param name="width">The width of the line.</param>
      <param name="points">List of points to build the line from.</param>
      <param name="actualNumberOfPoints">
      </param>
    </member>
    <member name="M:UnityEditor.Handles.DrawAAPolyLine(System.Single,System.Int32,UnityEngine.Vector3[])">
      <summary>
        <para>Draw anti-aliased line specified with point array and width.</para>
      </summary>
      <param name="lineTex">The AA texture used for rendering.</param>
      <param name="width">The width of the line.</param>
      <param name="points">List of points to build the line from.</param>
      <param name="actualNumberOfPoints">
      </param>
    </member>
    <member name="M:UnityEditor.Handles.DrawAAPolyLine(UnityEngine.Texture2D,System.Single,UnityEngine.Vector3[])">
      <summary>
        <para>Draw anti-aliased line specified with point array and width.</para>
      </summary>
      <param name="lineTex">The AA texture used for rendering.</param>
      <param name="width">The width of the line.</param>
      <param name="points">List of points to build the line from.</param>
      <param name="actualNumberOfPoints">
      </param>
    </member>
    <member name="M:UnityEditor.Handles.DrawBezier(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Color,UnityEngine.Texture2D,System.Single)">
      <summary>
        <para>Draw textured bezier line through start and end points with the given tangents.</para>
      </summary>
      <param name="startPosition">The start point of the bezier line.</param>
      <param name="endPosition">The end point of the bezier line.</param>
      <param name="startTangent">The start tangent of the bezier line.</param>
      <param name="endTangent">The end tangent of the bezier line.</param>
      <param name="color">The color to use for the bezier line.</param>
      <param name="texture">The texture to use for drawing the bezier line.</param>
      <param name="width">The width of the bezier line.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawCamera">
      <summary>
        <para>Draws a camera inside a rectangle.</para>
      </summary>
      <param name="position">The area to draw the camera within in GUI coordinates.</param>
      <param name="camera">The camera to draw.</param>
      <param name="drawMode">How the camera is drawn (textured, wireframe, etc).</param>
      <param name="gridParam">Parameters of grid drawing (can be omitted).</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawCamera(UnityEngine.Rect,UnityEngine.Camera)">
      <summary>
        <para>Draws a camera inside a rectangle.</para>
      </summary>
      <param name="position">The area to draw the camera within in GUI coordinates.</param>
      <param name="camera">The camera to draw.</param>
      <param name="drawMode">How the camera is drawn (textured, wireframe, etc.).</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawCamera(UnityEngine.Rect,UnityEngine.Camera,UnityEditor.DrawCameraMode)">
      <summary>
        <para>Draws a camera inside a rectangle.</para>
      </summary>
      <param name="position">The area to draw the camera within in GUI coordinates.</param>
      <param name="camera">The camera to draw.</param>
      <param name="drawMode">How the camera is drawn (textured, wireframe, etc.).</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawDottedLine(UnityEngine.Vector3,UnityEngine.Vector3,System.Single)">
      <summary>
        <para>Draw a dotted line from p1 to p2.</para>
      </summary>
      <param name="p1">The start point.</param>
      <param name="p2">The end point.</param>
      <param name="screenSpaceSize">The size in pixels for the lengths of the line segments and the gaps between them.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawDottedLines(UnityEngine.Vector3[],System.Single)">
      <summary>
        <para>Draw a list of dotted line segments.</para>
      </summary>
      <param name="lineSegments">A list of pairs of points that represent the start and end of line segments.</param>
      <param name="screenSpaceSize">The size in pixels for the lengths of the line segments and the gaps between them.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawDottedLines(UnityEngine.Vector3[],System.Int32[],System.Single)">
      <summary>
        <para>Draw a list of indexed dotted line segments.</para>
      </summary>
      <param name="points">A list of points.</param>
      <param name="segmentIndices">A list of pairs of indices to the start and end points of the line segments.</param>
      <param name="screenSpaceSize">The size in pixels for the lengths of the line segments and the gaps between them.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawGizmos">
      <summary>
        <para>Draw a subset of Gizmos (before or after postprocessing) for the given camera.</para>
      </summary>
      <param name="camera">The camera of the current view.</param>
    </member>
    <member name="T:UnityEditor.Handles.DrawingScope">
      <summary>
        <para>Disposable helper struct for automatically setting and reverting Handles.color and/or Handles.matrix.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Handles.DrawingScope.originalColor">
      <summary>
        <para>The value of Handles.color at the time this DrawingScope was created.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Handles.DrawingScope.originalMatrix">
      <summary>
        <para>The value of Handles.matrix at the time this DrawingScope was created.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Handles.DrawingScope.#ctor(UnityEngine.Color)">
      <summary>
        <para>Create a new DrawingScope and set Handles.color and/or Handles.matrix to the specified values.</para>
      </summary>
      <param name="matrix">The matrix to use for displaying Handles inside the scope block.</param>
      <param name="color">The color to use for displaying Handles inside the scope block.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawingScope.#ctor(UnityEngine.Color,UnityEngine.Matrix4x4)">
      <summary>
        <para>Create a new DrawingScope and set Handles.color and/or Handles.matrix to the specified values.</para>
      </summary>
      <param name="matrix">The matrix to use for displaying Handles inside the scope block.</param>
      <param name="color">The color to use for displaying Handles inside the scope block.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawingScope.#ctor(UnityEngine.Matrix4x4)">
      <summary>
        <para>Create a new DrawingScope and set Handles.color and/or Handles.matrix to the specified values.</para>
      </summary>
      <param name="matrix">The matrix to use for displaying Handles inside the scope block.</param>
      <param name="color">The color to use for displaying Handles inside the scope block.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawingScope.Dispose">
      <summary>
        <para>Automatically reverts Handles.color and Handles.matrix to their values prior to entering the scope, when the scope is exited. You do not need to call this method manually.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Handles.DrawLine(UnityEngine.Vector3,UnityEngine.Vector3,System.Single)">
      <summary>
        <para>Draws a line from p1 to p2.</para>
      </summary>
      <param name="p1">The position of the first line's end point in world space.</param>
      <param name="p2">The position of the second line's end point in world space.</param>
      <param name="thickness">Line thickness in UI points (zero thickness draws single-pixel line).</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawLine(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Draws a line from p1 to p2.</para>
      </summary>
      <param name="p1">The position of the first line's end point in world space.</param>
      <param name="p2">The position of the second line's end point in world space.</param>
      <param name="thickness">Line thickness in UI points (zero thickness draws single-pixel line).</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawLines(UnityEngine.Vector3[])">
      <summary>
        <para>Draw a list of line segments.</para>
      </summary>
      <param name="lineSegments">A list of pairs of points that represent the start and end of line segments.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawLines(UnityEngine.Vector3[],System.Int32[])">
      <summary>
        <para>Draw a list of indexed line segments.</para>
      </summary>
      <param name="points">A list of points.</param>
      <param name="segmentIndices">A list of pairs of indices to the start and end points of the line segments.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawPolyLine(UnityEngine.Vector3[])">
      <summary>
        <para>Draw a line going through the list of points.</para>
      </summary>
      <param name="points">
      </param>
    </member>
    <member name="M:UnityEditor.Handles.DrawSelectionFrame(System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.EventType)">
      <summary>
        <para>Draw a camera facing selection frame.</para>
      </summary>
      <param name="controlID">
      </param>
      <param name="position">
      </param>
      <param name="rotation">
      </param>
      <param name="size">
      </param>
      <param name="eventType">
      </param>
    </member>
    <member name="M:UnityEditor.Handles.DrawSolidArc(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single)">
      <summary>
        <para>Draw a circular sector (pie piece) in 3D space.</para>
      </summary>
      <param name="center">The center of the circle.</param>
      <param name="normal">The normal of the circle.</param>
      <param name="from">The direction of the point on the circumference, relative to the center, where the sector begins.</param>
      <param name="angle">The angle of the sector, in degrees.</param>
      <param name="radius">The radius of the circle

Note: Use HandleUtility.GetHandleSize where you might want to have constant screen-sized handles.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawSolidDisc(UnityEngine.Vector3,UnityEngine.Vector3,System.Single)">
      <summary>
        <para>Draw a solid flat disc in 3D space.</para>
      </summary>
      <param name="center">The center of the disc.</param>
      <param name="normal">The normal of the disc.</param>
      <param name="radius">The radius of the disc.

Note: Use HandleUtility.GetHandleSize where you might want to have constant screen-sized handles.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawSolidRectangleWithOutline(UnityEngine.Vector3[],UnityEngine.Color,UnityEngine.Color)">
      <summary>
        <para>Draw a solid outlined rectangle in 3D space.</para>
      </summary>
      <param name="verts">The 4 vertices of the rectangle in world coordinates.</param>
      <param name="faceColor">The color of the rectangle's face.</param>
      <param name="outlineColor">The outline color of the rectangle.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawTexture3DSDF(UnityEngine.Texture,System.Single,System.Single,UnityEngine.Gradient)">
      <summary>
        <para>Draws a 3D texture using Signed Distance Field rendering mode in 3D space.</para>
      </summary>
      <param name="texture">The volumetric texture to draw.</param>
      <param name="stepScale">The number by which to multiply the ray step size. The ray step size is the distance between 2 neighboring pixels. The default value is 1.</param>
      <param name="surfaceOffset">The intensity of the pixels at which the surface is rendered. When this value is positive, Unity will expand the rendered surface. When this value is negative, Unity will render empty space as a surface, and a surface as empty space. The default value is 0.</param>
      <param name="customColorRamp">The custom gradient that Unity uses as a color ramp. If this is not specified, Unity uses &lt;a href="https:ai.googleblog.com201908turbo-improved-rainbow-colormap-for.html"&gt;Google Turbo color ramp&lt;a&gt;.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawTexture3DSlice(UnityEngine.Texture,UnityEngine.Vector3,UnityEngine.FilterMode,System.Boolean,UnityEngine.Gradient)">
      <summary>
        <para>Draws a 3D texture using Slice rendering mode in 3D space.</para>
      </summary>
      <param name="texture">The volumetric texture to draw.</param>
      <param name="slicePositions">The positions of the texture sampling planes.</param>
      <param name="filterMode">Sets the texture filtering mode to use.</param>
      <param name="useColorRamp">Enables color ramp visualization.</param>
      <param name="customColorRamp">The custom gradient that Unity uses as a color ramp. If this is not specified, Unity uses &lt;a href="https:ai.googleblog.com201908turbo-improved-rainbow-colormap-for.html"&gt;Google Turbo color ramp&lt;a&gt;.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawTexture3DVolume(UnityEngine.Texture,System.Single,System.Single,UnityEngine.FilterMode,System.Boolean,UnityEngine.Gradient)">
      <summary>
        <para>Draws a 3D texture using Volume rendering mode in 3D space.</para>
      </summary>
      <param name="texture">The volumetric texture to draw.</param>
      <param name="opacity">The non-linear volume opacity modifier. Use this to control the opacity of the visualization. Valid values are 0-1, inclusive. A value of 1 is fully opaque and a value of 0 is fully transparent. The default value is 1.</param>
      <param name="qualityModifier">Sets the sample per texture pixel count. Higher values result in a higher quality render. The default value is 1.</param>
      <param name="filterMode">Sets the texture filtering mode to use.</param>
      <param name="useColorRamp">Enables color ramp visualization.</param>
      <param name="customColorRamp">The custom gradient that Unity uses as a color ramp. If this is not specified, Unity uses &lt;a href="https:ai.googleblog.com201908turbo-improved-rainbow-colormap-for.html"&gt;Google Turbo color ramp&lt;a&gt;.</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawWireArc(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single,System.Single)">
      <summary>
        <para>Draws a circular arc in 3D space.</para>
      </summary>
      <param name="center">The center of the circle in world space.</param>
      <param name="normal">The normal of the circle in world space.</param>
      <param name="from">The direction of the point on the circle circumference, relative to the center, where the arc begins.</param>
      <param name="angle">The angle of the arc, in degrees.</param>
      <param name="radius">The radius of the circle in world space units.</param>
      <param name="thickness">Line thickness in UI points (zero thickness draws single-pixel line).</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawWireArc(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single)">
      <summary>
        <para>Draws a circular arc in 3D space.</para>
      </summary>
      <param name="center">The center of the circle in world space.</param>
      <param name="normal">The normal of the circle in world space.</param>
      <param name="from">The direction of the point on the circle circumference, relative to the center, where the arc begins.</param>
      <param name="angle">The angle of the arc, in degrees.</param>
      <param name="radius">The radius of the circle in world space units.</param>
      <param name="thickness">Line thickness in UI points (zero thickness draws single-pixel line).</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawWireCube(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Draw a wireframe box with center and size.</para>
      </summary>
      <param name="center">
      </param>
      <param name="size">
      </param>
    </member>
    <member name="M:UnityEditor.Handles.DrawWireDisc(UnityEngine.Vector3,UnityEngine.Vector3,System.Single)">
      <summary>
        <para>Draws the outline of a flat disc in 3D space.</para>
      </summary>
      <param name="center">The center of the disc in world space.</param>
      <param name="normal">The normal of the disc in world space.</param>
      <param name="radius">The radius of the disc in world space units.</param>
      <param name="thickness">Line thickness in UI points (zero thickness draws single-pixel line).</param>
    </member>
    <member name="M:UnityEditor.Handles.DrawWireDisc(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single)">
      <summary>
        <para>Draws the outline of a flat disc in 3D space.</para>
      </summary>
      <param name="center">The center of the disc in world space.</param>
      <param name="normal">The normal of the disc in world space.</param>
      <param name="radius">The radius of the disc in world space units.</param>
      <param name="thickness">Line thickness in UI points (zero thickness draws single-pixel line).</param>
    </member>
    <member name="M:UnityEditor.Handles.EndGUI">
      <summary>
        <para>End a 2D GUI block and get back to the 3D handle GUI.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Handles.FreeMoveHandle(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.Vector3,UnityEditor.Handles/CapFunction)">
      <summary>
        <para>Make an unconstrained movement handle.</para>
      </summary>
      <param name="position">The position of the handle in the space of Handles.matrix.</param>
      <param name="rotation">The rotation of the handle in the space of Handles.matrix.</param>
      <param name="size">The size of the handle in the space of Handles.matrix. Use HandleUtility.GetHandleSize if you want a constant screen-space size.</param>
      <param name="snap">The snap increment on all axes. See Handles.SnapValue.</param>
      <param name="capFunction">The function to call for doing the actual drawing.</param>
      <param name="controlID">The control ID for the handle.</param>
      <returns>
        <para>The new value modified by the user's interaction with the handle. If the user has not moved the handle, it will return the same value as you passed into the function.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.FreeMoveHandle(System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.Vector3,UnityEditor.Handles/CapFunction)">
      <summary>
        <para>Make an unconstrained movement handle.</para>
      </summary>
      <param name="position">The position of the handle in the space of Handles.matrix.</param>
      <param name="rotation">The rotation of the handle in the space of Handles.matrix.</param>
      <param name="size">The size of the handle in the space of Handles.matrix. Use HandleUtility.GetHandleSize if you want a constant screen-space size.</param>
      <param name="snap">The snap increment on all axes. See Handles.SnapValue.</param>
      <param name="capFunction">The function to call for doing the actual drawing.</param>
      <param name="controlID">The control ID for the handle.</param>
      <returns>
        <para>The new value modified by the user's interaction with the handle. If the user has not moved the handle, it will return the same value as you passed into the function.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.FreeRotateHandle(System.Int32,UnityEngine.Quaternion,UnityEngine.Vector3,System.Single)">
      <summary>
        <para>Make an unconstrained rotation handle.</para>
      </summary>
      <param name="id">Control id of the handle.</param>
      <param name="rotation">Orientation of the handle.</param>
      <param name="position">Center of the handle in 3D space.</param>
      <param name="size">The size of the handle.

Note: Use HandleUtility.GetHandleSize where you might want to have constant screen-sized handles.</param>
      <returns>
        <para>The new rotation value modified by the user's interaction with the handle. If the user has not moved the handle, it will return the same value as you passed into the function.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.FreeRotateHandle(UnityEngine.Quaternion,UnityEngine.Vector3,System.Single)">
      <summary>
        <para>Make an unconstrained rotation handle.</para>
      </summary>
      <param name="id">Control id of the handle.</param>
      <param name="rotation">Orientation of the handle.</param>
      <param name="position">Center of the handle in 3D space.</param>
      <param name="size">The size of the handle.

Note: Use HandleUtility.GetHandleSize where you might want to have constant screen-sized handles.</param>
      <returns>
        <para>The new rotation value modified by the user's interaction with the handle. If the user has not moved the handle, it will return the same value as you passed into the function.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.GetMainGameViewSize">
      <summary>
        <para>Get the width and height of the main game view.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Handles.Label(UnityEngine.Vector3,System.String)">
      <summary>
        <para>Make a text label positioned in 3D space.</para>
      </summary>
      <param name="position">Position in 3D space as seen from the current handle camera.</param>
      <param name="text">Text to display on the label.</param>
      <param name="image">Texture to display on the label.</param>
      <param name="content">Text, image and tooltip for this label.</param>
      <param name="style">The style to use. If left out, the label style from the current GUISkin is used.

Note: Use HandleUtility.GetHandleSize where you might want to have constant screen-sized handles.</param>
    </member>
    <member name="M:UnityEditor.Handles.Label(UnityEngine.Vector3,UnityEngine.Texture)">
      <summary>
        <para>Make a text label positioned in 3D space.</para>
      </summary>
      <param name="position">Position in 3D space as seen from the current handle camera.</param>
      <param name="text">Text to display on the label.</param>
      <param name="image">Texture to display on the label.</param>
      <param name="content">Text, image and tooltip for this label.</param>
      <param name="style">The style to use. If left out, the label style from the current GUISkin is used.

Note: Use HandleUtility.GetHandleSize where you might want to have constant screen-sized handles.</param>
    </member>
    <member name="M:UnityEditor.Handles.Label(UnityEngine.Vector3,UnityEngine.GUIContent)">
      <summary>
        <para>Make a text label positioned in 3D space.</para>
      </summary>
      <param name="position">Position in 3D space as seen from the current handle camera.</param>
      <param name="text">Text to display on the label.</param>
      <param name="image">Texture to display on the label.</param>
      <param name="content">Text, image and tooltip for this label.</param>
      <param name="style">The style to use. If left out, the label style from the current GUISkin is used.

Note: Use HandleUtility.GetHandleSize where you might want to have constant screen-sized handles.</param>
    </member>
    <member name="M:UnityEditor.Handles.Label(UnityEngine.Vector3,System.String,UnityEngine.GUIStyle)">
      <summary>
        <para>Make a text label positioned in 3D space.</para>
      </summary>
      <param name="position">Position in 3D space as seen from the current handle camera.</param>
      <param name="text">Text to display on the label.</param>
      <param name="image">Texture to display on the label.</param>
      <param name="content">Text, image and tooltip for this label.</param>
      <param name="style">The style to use. If left out, the label style from the current GUISkin is used.

Note: Use HandleUtility.GetHandleSize where you might want to have constant screen-sized handles.</param>
    </member>
    <member name="M:UnityEditor.Handles.Label(UnityEngine.Vector3,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Make a text label positioned in 3D space.</para>
      </summary>
      <param name="position">Position in 3D space as seen from the current handle camera.</param>
      <param name="text">Text to display on the label.</param>
      <param name="image">Texture to display on the label.</param>
      <param name="content">Text, image and tooltip for this label.</param>
      <param name="style">The style to use. If left out, the label style from the current GUISkin is used.

Note: Use HandleUtility.GetHandleSize where you might want to have constant screen-sized handles.</param>
    </member>
    <member name="M:UnityEditor.Handles.MakeBezierPoints(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Int32)">
      <summary>
        <para>Retuns an array of points to representing the bezier curve.</para>
      </summary>
      <param name="startPosition">
      </param>
      <param name="endPosition">
      </param>
      <param name="startTangent">
      </param>
      <param name="endTangent">
      </param>
      <param name="division">
      </param>
    </member>
    <member name="M:UnityEditor.Handles.PositionHandle(UnityEngine.Vector3,UnityEngine.Quaternion)">
      <summary>
        <para>Make a position handle.</para>
      </summary>
      <param name="position">Center of the handle in 3D space.</param>
      <param name="rotation">Orientation of the handle in 3D space.</param>
      <returns>
        <para>The new value modified by the user's interaction with the handle. If the user has not moved the handle, it will return the same value as you passed into the function.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.RadiusHandle(UnityEngine.Quaternion,UnityEngine.Vector3,System.Single,System.Boolean)">
      <summary>
        <para>Make a Scene view radius handle.</para>
      </summary>
      <param name="rotation">Orientation of the handle.</param>
      <param name="position">Center of the handle in 3D space.</param>
      <param name="radius">Radius to modify.</param>
      <param name="handlesOnly">Whether to omit the circular outline of the radius and only draw the point handles.</param>
      <returns>
        <para>The new value modified by the user's interaction with the handle. If the user has not moved the handle, it will return the same value as you passed into the function.

Note: Use HandleUtility.GetHandleSize where you might want to have constant screen-sized handles.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.RadiusHandle(UnityEngine.Quaternion,UnityEngine.Vector3,System.Single)">
      <summary>
        <para>Make a Scene view radius handle.</para>
      </summary>
      <param name="rotation">Orientation of the handle.</param>
      <param name="position">Center of the handle in 3D space.</param>
      <param name="radius">Radius to modify.</param>
      <param name="handlesOnly">Whether to omit the circular outline of the radius and only draw the point handles.</param>
      <returns>
        <para>The new value modified by the user's interaction with the handle. If the user has not moved the handle, it will return the same value as you passed into the function.

Note: Use HandleUtility.GetHandleSize where you might want to have constant screen-sized handles.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.RectangleHandleCap(System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.EventType)">
      <summary>
        <para>Draw a rectangle handle. Pass this into handle functions.</para>
      </summary>
      <param name="controlID">The control ID for the handle.</param>
      <param name="position">The position of the handle in the space of Handles.matrix.</param>
      <param name="rotation">The rotation of the handle in the space of Handles.matrix.</param>
      <param name="size">The size of the handle in the space of Handles.matrix. Use HandleUtility.GetHandleSize if you want a constant screen-space size.</param>
      <param name="eventType">Event type for the handle to act upon. By design it handles EventType.Layout and EventType.Repaint events.</param>
    </member>
    <member name="M:UnityEditor.Handles.RotationHandle(UnityEngine.Quaternion,UnityEngine.Vector3)">
      <summary>
        <para>Make a Scene view rotation handle.</para>
      </summary>
      <param name="rotation">Orientation of the handle.</param>
      <param name="position">Center of the handle in 3D space.</param>
      <returns>
        <para>The new rotation value modified by the user's interaction with the handle. If the user has not moved the handle, it will return the same value as you passed into the function.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.ScaleHandle(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single)">
      <summary>
        <para>Make a Scene view scale handle.</para>
      </summary>
      <param name="scale">Scale to modify.</param>
      <param name="position">The position of the handle.</param>
      <param name="rotation">The rotation of the handle.</param>
      <param name="size">Allows you to scale the size of the handle on-screen.</param>
      <returns>
        <para>The new value modified by the user's interaction with the handle. If the user has not moved the handle, it will return the same value as you passed into the function.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.ScaleSlider(System.Single,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,System.Single)">
      <summary>
        <para>Make a directional scale slider.</para>
      </summary>
      <param name="scale">The value the user can modify.</param>
      <param name="position">The position of the handle in the space of Handles.matrix.</param>
      <param name="direction">The direction of the handle in the space of Handles.matrix.</param>
      <param name="rotation">The rotation of the handle in the space of Handles.matrix.</param>
      <param name="size">The size of the handle in the space of Handles.matrix. Use HandleUtility.GetHandleSize if you want a constant screen-space size.</param>
      <param name="snap">The snap increment. See Handles.SnapValue.</param>
      <returns>
        <para>The new value modified by the user's interaction with the handle. If the user has not moved the handle, it will return the same value as you passed into the function.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.ScaleValueHandle(System.Single,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEditor.Handles/CapFunction,System.Single)">
      <summary>
        <para>Make a 3D handle that scales a single float.</para>
      </summary>
      <param name="value">The value the user can modify.</param>
      <param name="position">The position of the handle in the space of Handles.matrix.</param>
      <param name="rotation">The rotation of the handle in the space of Handles.matrix.</param>
      <param name="size">The size of the handle in the space of Handles.matrix. Use HandleUtility.GetHandleSize if you want a constant screen-space size.</param>
      <param name="snap">The snap increment. See Handles.SnapValue.</param>
      <param name="capFunction">The function to call for doing the actual drawing.</param>
      <returns>
        <para>The new value modified by the user's interaction with the handle. If the user has not moved the handle, it will return the same value as you passed into the function.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.SetCamera(UnityEngine.Camera)">
      <summary>
        <para>Set the current camera so all Handles and Gizmos are draw with its settings.</para>
      </summary>
      <param name="camera">
      </param>
      <param name="position">
      </param>
    </member>
    <member name="M:UnityEditor.Handles.SetCamera(UnityEngine.Rect,UnityEngine.Camera)">
      <summary>
        <para>Set the current camera so all Handles and Gizmos are draw with its settings.</para>
      </summary>
      <param name="camera">
      </param>
      <param name="position">
      </param>
    </member>
    <member name="M:UnityEditor.Handles.ShouldRenderGizmos">
      <summary>
        <para>Determines whether or not to draw Gizmos.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Handles.SizeFunction">
      <summary>
        <para>A delegate type for getting a handle's size based on its current position.</para>
      </summary>
      <param name="position">The current position of the handle in the space of Handles.matrix.</param>
    </member>
    <member name="M:UnityEditor.Handles.Slider(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Make a 3D slider that moves along one axis.</para>
      </summary>
      <param name="position">The position of the current point in the space of Handles.matrix.</param>
      <param name="direction">The direction axis of the slider in the space of Handles.matrix.</param>
      <param name="size">The size of the handle in the space of Handles.matrix. Use HandleUtility.GetHandleSize if you want a constant screen-space size.</param>
      <param name="snap">The snap increment. See Handles.SnapValue.</param>
      <param name="capFunction">The function to call for doing the actual drawing. By default it is Handles.ArrowHandleCap, but any function that has the same signature can be used.</param>
      <returns>
        <para>The new value modified by the user's interaction with the handle. If the user has not moved the handle, it will return the position value passed into the function.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.Slider(UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEditor.Handles/CapFunction,System.Single)">
      <summary>
        <para>Make a 3D slider that moves along one axis.</para>
      </summary>
      <param name="position">The position of the current point in the space of Handles.matrix.</param>
      <param name="direction">The direction axis of the slider in the space of Handles.matrix.</param>
      <param name="size">The size of the handle in the space of Handles.matrix. Use HandleUtility.GetHandleSize if you want a constant screen-space size.</param>
      <param name="snap">The snap increment. See Handles.SnapValue.</param>
      <param name="capFunction">The function to call for doing the actual drawing. By default it is Handles.ArrowHandleCap, but any function that has the same signature can be used.</param>
      <returns>
        <para>The new value modified by the user's interaction with the handle. If the user has not moved the handle, it will return the position value passed into the function.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.Slider2D(System.Int32,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEditor.Handles/CapFunction,UnityEngine.Vector2,System.Boolean)">
      <summary>
        <para>Make a 3D slider that moves along a plane defined by two axes.</para>
      </summary>
      <param name="id">(optional) override the default ControlID for this Slider2D instance.</param>
      <param name="handlePos">The position of the current point in the space of Handles.matrix.</param>
      <param name="offset">(optional) renders the Slider2D at handlePos, but treats the Slider2D's origin as handlePos + offset. Useful for Slider2D instances that are placed/rendered relative to another object or handle.</param>
      <param name="handleDir">The direction of the handle in the space of Handles.matrix, only used for rendering of the handle.</param>
      <param name="slideDir1">The first axis of the slider's plane of movement in the space of Handles.matrix.</param>
      <param name="slideDir2">The second axis of the slider's plane of movement in the space of Handles.matrix.</param>
      <param name="handleSize">The size of the handle in the space of Handles.matrix. Use HandleUtility.GetHandleSize if you want a constant screen-space size.</param>
      <param name="snap">(float or Vector2) The snap increment along both axes, either uniform or per-axis. See Handles.SnapValue.</param>
      <param name="drawHelper">(default: false) render a rectangle around the handle when dragging.</param>
      <param name="capFunction">The function to call for doing the actual drawing.</param>
      <returns>
        <para>The new value modified by the user's interaction with the handle. If the user has not moved the handle, it will return the position value passed into the function.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.Slider2D(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEditor.Handles/CapFunction,System.Single,System.Boolean)">
      <summary>
        <para>Make a 3D slider that moves along a plane defined by two axes.</para>
      </summary>
      <param name="id">(optional) override the default ControlID for this Slider2D instance.</param>
      <param name="handlePos">The position of the current point in the space of Handles.matrix.</param>
      <param name="offset">(optional) renders the Slider2D at handlePos, but treats the Slider2D's origin as handlePos + offset. Useful for Slider2D instances that are placed/rendered relative to another object or handle.</param>
      <param name="handleDir">The direction of the handle in the space of Handles.matrix, only used for rendering of the handle.</param>
      <param name="slideDir1">The first axis of the slider's plane of movement in the space of Handles.matrix.</param>
      <param name="slideDir2">The second axis of the slider's plane of movement in the space of Handles.matrix.</param>
      <param name="handleSize">The size of the handle in the space of Handles.matrix. Use HandleUtility.GetHandleSize if you want a constant screen-space size.</param>
      <param name="snap">(float or Vector2) The snap increment along both axes, either uniform or per-axis. See Handles.SnapValue.</param>
      <param name="drawHelper">(default: false) render a rectangle around the handle when dragging.</param>
      <param name="capFunction">The function to call for doing the actual drawing.</param>
      <returns>
        <para>The new value modified by the user's interaction with the handle. If the user has not moved the handle, it will return the position value passed into the function.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.Slider2D(System.Int32,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEditor.Handles/CapFunction,UnityEngine.Vector2,System.Boolean)">
      <summary>
        <para>Make a 3D slider that moves along a plane defined by two axes.</para>
      </summary>
      <param name="id">(optional) override the default ControlID for this Slider2D instance.</param>
      <param name="handlePos">The position of the current point in the space of Handles.matrix.</param>
      <param name="offset">(optional) renders the Slider2D at handlePos, but treats the Slider2D's origin as handlePos + offset. Useful for Slider2D instances that are placed/rendered relative to another object or handle.</param>
      <param name="handleDir">The direction of the handle in the space of Handles.matrix, only used for rendering of the handle.</param>
      <param name="slideDir1">The first axis of the slider's plane of movement in the space of Handles.matrix.</param>
      <param name="slideDir2">The second axis of the slider's plane of movement in the space of Handles.matrix.</param>
      <param name="handleSize">The size of the handle in the space of Handles.matrix. Use HandleUtility.GetHandleSize if you want a constant screen-space size.</param>
      <param name="snap">(float or Vector2) The snap increment along both axes, either uniform or per-axis. See Handles.SnapValue.</param>
      <param name="drawHelper">(default: false) render a rectangle around the handle when dragging.</param>
      <param name="capFunction">The function to call for doing the actual drawing.</param>
      <returns>
        <para>The new value modified by the user's interaction with the handle. If the user has not moved the handle, it will return the position value passed into the function.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.Slider2D(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,UnityEditor.Handles/CapFunction,UnityEngine.Vector2,System.Boolean)">
      <summary>
        <para>Make a 3D slider that moves along a plane defined by two axes.</para>
      </summary>
      <param name="id">(optional) override the default ControlID for this Slider2D instance.</param>
      <param name="handlePos">The position of the current point in the space of Handles.matrix.</param>
      <param name="offset">(optional) renders the Slider2D at handlePos, but treats the Slider2D's origin as handlePos + offset. Useful for Slider2D instances that are placed/rendered relative to another object or handle.</param>
      <param name="handleDir">The direction of the handle in the space of Handles.matrix, only used for rendering of the handle.</param>
      <param name="slideDir1">The first axis of the slider's plane of movement in the space of Handles.matrix.</param>
      <param name="slideDir2">The second axis of the slider's plane of movement in the space of Handles.matrix.</param>
      <param name="handleSize">The size of the handle in the space of Handles.matrix. Use HandleUtility.GetHandleSize if you want a constant screen-space size.</param>
      <param name="snap">(float or Vector2) The snap increment along both axes, either uniform or per-axis. See Handles.SnapValue.</param>
      <param name="drawHelper">(default: false) render a rectangle around the handle when dragging.</param>
      <param name="capFunction">The function to call for doing the actual drawing.</param>
      <returns>
        <para>The new value modified by the user's interaction with the handle. If the user has not moved the handle, it will return the position value passed into the function.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.SnapToGrid(UnityEngine.Transform[],UnityEngine.SnapAxis)">
      <summary>
        <para>Rounds each Transform.position to the closest multiple of EditorSnap.move.</para>
      </summary>
      <param name="transforms">The transforms to snap.</param>
      <param name="axis">The axes on which to apply snapping.</param>
    </member>
    <member name="M:UnityEditor.Handles.SnapValue(System.Single,System.Single)">
      <summary>
        <para>Rounds value to the closest multiple of snap if snapping is active. Note that snap can only be positive.</para>
      </summary>
      <param name="value">The value to snap.</param>
      <param name="snap">The increment to snap to.</param>
      <returns>
        <para>If snapping is active, rounds value to the closest multiple of snap (snap can only be positive).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.SnapValue(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Rounds value to the closest multiple of snap if snapping is active. Note that snap can only be positive.</para>
      </summary>
      <param name="value">The value to snap.</param>
      <param name="snap">The increment to snap to.</param>
      <returns>
        <para>If snapping is active, rounds value to the closest multiple of snap (snap can only be positive).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.SnapValue(UnityEngine.Vector2,UnityEngine.Vector2)">
      <summary>
        <para>Rounds value to the closest multiple of snap if snapping is active. Note that snap can only be positive.</para>
      </summary>
      <param name="value">The value to snap.</param>
      <param name="snap">The increment to snap to.</param>
      <returns>
        <para>If snapping is active, rounds value to the closest multiple of snap (snap can only be positive).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Handles.SphereHandleCap(System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.EventType)">
      <summary>
        <para>Draw a sphere handle. Pass this into handle functions.</para>
      </summary>
      <param name="controlID">The control ID for the handle.</param>
      <param name="position">The position of the handle in the space of Handles.matrix.</param>
      <param name="rotation">The rotation of the handle in the space of Handles.matrix.</param>
      <param name="eventType">Event type for the handle to act upon. By design it handles EventType.Layout and EventType.Repaint events.</param>
      <param name="size">The size of the handle in the space of Handles.matrix. Use HandleUtility.GetHandleSize if you want a constant screen-space size.</param>
    </member>
    <member name="M:UnityEditor.Handles.TransformHandle(UnityEngine.Vector3&amp;,UnityEngine.Quaternion&amp;,UnityEngine.Vector3&amp;)">
      <summary>
        <para>Creates a transform handle.</para>
      </summary>
      <param name="position">Position of the handle.</param>
      <param name="rotation">Orientation of the handle.</param>
      <param name="scale">Scale value to modify.</param>
      <param name="uniformScale">Uniform scale value to modify.</param>
    </member>
    <member name="M:UnityEditor.Handles.TransformHandle(UnityEngine.Vector3&amp;,UnityEngine.Quaternion&amp;,System.Single&amp;)">
      <summary>
        <para>Creates a transform handle.</para>
      </summary>
      <param name="position">Position of the handle.</param>
      <param name="rotation">Orientation of the handle.</param>
      <param name="scale">Scale value to modify.</param>
      <param name="uniformScale">Uniform scale value to modify.</param>
    </member>
    <member name="M:UnityEditor.Handles.TransformHandle(UnityEngine.Vector3&amp;,UnityEngine.Quaternion&amp;)">
      <summary>
        <para>Creates a transform handle.</para>
      </summary>
      <param name="position">Position of the handle.</param>
      <param name="rotation">Orientation of the handle.</param>
      <param name="scale">Scale value to modify.</param>
      <param name="uniformScale">Uniform scale value to modify.</param>
    </member>
    <member name="P:UnityEditor.Handles.UIColliderHandleColor">
      <summary>
        <para>Color to use for the Unity UI's padding visualization.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.HandleUtility">
      <summary>
        <para>Helper functions for Scene View style 3D GUI.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.HandleUtility.acceleration">
      <summary>
        <para>Get standard acceleration for dragging values (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.HandleUtility.niceMouseDelta">
      <summary>
        <para>Get nice mouse delta to use for dragging a float value (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.HandleUtility.niceMouseDeltaZoom">
      <summary>
        <para>Get nice mouse delta to use for zooming (Read Only).</para>
      </summary>
    </member>
    <member name="?:UnityEditor.HandleUtility.pickGameObjectCustomPasses(UnityEditor.HandleUtility/PickGameObjectCallback)">
      <summary>
        <para>Subscribe to this event to add additional picking objects to the HandleUtility.PickGameObject method.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="?:UnityEditor.HandleUtility.placeObjectCustomPasses(UnityEditor.HandleUtility/PlaceObjectDelegate)">
      <summary>
        <para>Subscribe to this event to handle object placement in the SceneView.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="M:UnityEditor.HandleUtility.AddControl(System.Int32,System.Single)">
      <summary>
        <para>Record a distance measurement from a handle.</para>
      </summary>
      <param name="controlId">
      </param>
      <param name="distance">
      </param>
    </member>
    <member name="M:UnityEditor.HandleUtility.AddDefaultControl(System.Int32)">
      <summary>
        <para>Add the ID for a default control. This will be picked if nothing else is.</para>
      </summary>
      <param name="controlId">
      </param>
    </member>
    <member name="M:UnityEditor.HandleUtility.CalcLineTranslation(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Map a mouse drag onto a movement along a line in 3D space.</para>
      </summary>
      <param name="src">The source point of the drag.</param>
      <param name="dest">The destination point of the drag.</param>
      <param name="srcPosition">The 3D position the dragged object had at src ray.</param>
      <param name="constraintDir">3D direction of constrained movement.</param>
      <returns>
        <para>The distance travelled along constraintDir.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.HandleUtility.ClosestPointToArc(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single)">
      <summary>
        <para>Get the point on an arc (in 3D space) which is closest to the current mouse position.</para>
      </summary>
      <param name="center">
      </param>
      <param name="normal">
      </param>
      <param name="from">
      </param>
      <param name="angle">
      </param>
      <param name="radius">
      </param>
    </member>
    <member name="M:UnityEditor.HandleUtility.ClosestPointToDisc(UnityEngine.Vector3,UnityEngine.Vector3,System.Single)">
      <summary>
        <para>Get the point on an disc (in 3D space) which is closest to the current mouse position.</para>
      </summary>
      <param name="center">
      </param>
      <param name="normal">
      </param>
      <param name="radius">
      </param>
    </member>
    <member name="M:UnityEditor.HandleUtility.ClosestPointToPolyLine(UnityEngine.Vector3[])">
      <summary>
        <para>Get the point on a polyline (in 3D space) which is closest to the current mouse position.</para>
      </summary>
      <param name="vertices">
      </param>
    </member>
    <member name="M:UnityEditor.HandleUtility.DistancePointBezier(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Calculate distance between a point and a Bezier curve.</para>
      </summary>
      <param name="point">
      </param>
      <param name="startPosition">
      </param>
      <param name="endPosition">
      </param>
      <param name="startTangent">
      </param>
      <param name="endTangent">
      </param>
    </member>
    <member name="M:UnityEditor.HandleUtility.DistancePointLine(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Calculate distance between a point and a line.</para>
      </summary>
      <param name="point">
      </param>
      <param name="lineStart">
      </param>
      <param name="lineEnd">
      </param>
    </member>
    <member name="M:UnityEditor.HandleUtility.DistancePointToLine(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2)">
      <summary>
        <para>Distance from a point p in 2d to a line defined by two points a and b.</para>
      </summary>
      <param name="p">
      </param>
      <param name="a">
      </param>
      <param name="b">
      </param>
    </member>
    <member name="M:UnityEditor.HandleUtility.DistancePointToLineSegment(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2)">
      <summary>
        <para>Distance from a point p in 2d to a line segment defined by two points a and b.</para>
      </summary>
      <param name="p">
      </param>
      <param name="a">
      </param>
      <param name="b">
      </param>
    </member>
    <member name="M:UnityEditor.HandleUtility.DistanceToArc(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3,System.Single,System.Single)">
      <summary>
        <para>Returns the distance in pixels from the mouse pointer to a 3D section of a disc.</para>
      </summary>
      <param name="center">
      </param>
      <param name="normal">
      </param>
      <param name="from">
      </param>
      <param name="angle">
      </param>
      <param name="radius">
      </param>
    </member>
    <member name="M:UnityEditor.HandleUtility.DistanceToCircle(UnityEngine.Vector3,System.Single)">
      <summary>
        <para>Returns the distance in pixels from the mouse pointer to a camera facing circle.</para>
      </summary>
      <param name="position">
      </param>
      <param name="radius">
      </param>
    </member>
    <member name="M:UnityEditor.HandleUtility.DistanceToCone(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single)">
      <summary>
        <para>Returns the distance in pixels from the mouse pointer to a cone.</para>
      </summary>
      <param name="position">Position of the cone.</param>
      <param name="rotation">Rotation of the cone.</param>
      <param name="size">Size of the cone.</param>
      <returns>
        <para>Distance from mouse to cone in pixels.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.HandleUtility.DistanceToCube(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single)">
      <summary>
        <para>Returns the distance in pixels from the mouse pointer to a cube.</para>
      </summary>
      <param name="position">Position of the cube.</param>
      <param name="rotation">Rotation of the cube.</param>
      <param name="size">Size of the cube.</param>
      <returns>
        <para>Distance from mouse to cube in pixels.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.HandleUtility.DistanceToDisc(UnityEngine.Vector3,UnityEngine.Vector3,System.Single)">
      <summary>
        <para>Returns the distance in pixels from the mouse pointer to a 3D disc.</para>
      </summary>
      <param name="center">
      </param>
      <param name="normal">
      </param>
      <param name="radius">
      </param>
    </member>
    <member name="M:UnityEditor.HandleUtility.DistanceToLine(UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Returns the distance in pixels from the mouse pointer to a line.</para>
      </summary>
      <param name="p1">
      </param>
      <param name="p2">
      </param>
    </member>
    <member name="M:UnityEditor.HandleUtility.DistanceToPolyLine(UnityEngine.Vector3[])">
      <summary>
        <para>Returns the distance in pixels from the mouse pointer to a polyline.</para>
      </summary>
      <param name="points">
      </param>
    </member>
    <member name="M:UnityEditor.HandleUtility.DistanceToRectangle(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single)">
      <summary>
        <para>Returns the distance in pixels from the mouse pointer to a rectangle on screen.</para>
      </summary>
      <param name="position">
      </param>
      <param name="rotation">
      </param>
      <param name="size">
      </param>
    </member>
    <member name="M:UnityEditor.HandleUtility.FindNearestVertex(UnityEngine.Vector2,UnityEngine.Vector3&amp;)">
      <summary>
        <para>Returns the nearest vertex to a guiPoint within a maximum radius of 50 pixels.</para>
      </summary>
      <param name="guiPoint">A point in GUI space.</param>
      <param name="vertex">The nearest vertex position to guiPoint, or a default value if no vertex is within the minimum picking distance.</param>
      <param name="objectsToSearch">An array of Transform to consider when picking the nearest vertex. If null, all active objects in open scenes are considered.</param>
      <param name="objectsToIgnore">An array of Transform to exclude from consideration when picking nearest vertex.</param>
      <returns>
        <para>Returns true if a vertex within 50 pixels of the guiPoint was found, false if no vertex found within the minimum picking radius.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.HandleUtility.FindNearestVertex(UnityEngine.Vector2,UnityEngine.Transform[],UnityEngine.Vector3&amp;)">
      <summary>
        <para>Returns the nearest vertex to a guiPoint within a maximum radius of 50 pixels.</para>
      </summary>
      <param name="guiPoint">A point in GUI space.</param>
      <param name="vertex">The nearest vertex position to guiPoint, or a default value if no vertex is within the minimum picking distance.</param>
      <param name="objectsToSearch">An array of Transform to consider when picking the nearest vertex. If null, all active objects in open scenes are considered.</param>
      <param name="objectsToIgnore">An array of Transform to exclude from consideration when picking nearest vertex.</param>
      <returns>
        <para>Returns true if a vertex within 50 pixels of the guiPoint was found, false if no vertex found within the minimum picking radius.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.HandleUtility.FindNearestVertex(UnityEngine.Vector2,UnityEngine.Transform[],UnityEngine.Transform[],UnityEngine.Vector3&amp;)">
      <summary>
        <para>Returns the nearest vertex to a guiPoint within a maximum radius of 50 pixels.</para>
      </summary>
      <param name="guiPoint">A point in GUI space.</param>
      <param name="vertex">The nearest vertex position to guiPoint, or a default value if no vertex is within the minimum picking distance.</param>
      <param name="objectsToSearch">An array of Transform to consider when picking the nearest vertex. If null, all active objects in open scenes are considered.</param>
      <param name="objectsToIgnore">An array of Transform to exclude from consideration when picking nearest vertex.</param>
      <returns>
        <para>Returns true if a vertex within 50 pixels of the guiPoint was found, false if no vertex found within the minimum picking radius.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.HandleUtility.GetHandleSize(UnityEngine.Vector3)">
      <summary>
        <para>Get world space size of a manipulator handle at given position.</para>
      </summary>
      <param name="position">The position of the handle in 3d space.</param>
      <returns>
        <para>A constant screen-size for the handle, based on the distance between from the supplied handle's position to the camera.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.HandleUtility.GUIPointToScreenPixelCoordinate(UnityEngine.Vector2)">
      <summary>
        <para>Converts a 2D GUI position to screen pixel coordinates.</para>
      </summary>
      <param name="guiPoint">
      </param>
    </member>
    <member name="M:UnityEditor.HandleUtility.GUIPointToWorldRay(UnityEngine.Vector2)">
      <summary>
        <para>Convert 2D GUI position to a world space ray.</para>
      </summary>
      <param name="position">
      </param>
    </member>
    <member name="M:UnityEditor.HandleUtility.PickGameObject(UnityEngine.Vector2,System.Int32&amp;)">
      <summary>
        <para>Pick game object closest to specified position.</para>
      </summary>
      <param name="selectPrefabRoot">Select Prefab.</param>
      <param name="materialIndex">Returns index into material array of the Renderer component that is closest to specified position.</param>
      <param name="position">A position in GUI coordinates. The top-left of the window is (0,0), and the bottom-right is (Screen.width, Screen.height).</param>
      <param name="ignore">An array of GameObjects that will not be considered when selecting the nearest GameObject.</param>
      <param name="filter">An array of GameObjects to be exclusively considered for selection. If null, all GameObjects in open scenes are eligible for selection.</param>
      <param name="selection">An array of GameObjects to be exclusively considered for selection. If null, all GameObjects in open scenes are eligible for selection.</param>
      <returns>
        <para>The GameObject that is under the requested position.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.HandleUtility.PickGameObject(UnityEngine.Vector2,UnityEngine.GameObject[],System.Int32&amp;)">
      <summary>
        <para>Pick game object closest to specified position.</para>
      </summary>
      <param name="selectPrefabRoot">Select Prefab.</param>
      <param name="materialIndex">Returns index into material array of the Renderer component that is closest to specified position.</param>
      <param name="position">A position in GUI coordinates. The top-left of the window is (0,0), and the bottom-right is (Screen.width, Screen.height).</param>
      <param name="ignore">An array of GameObjects that will not be considered when selecting the nearest GameObject.</param>
      <param name="filter">An array of GameObjects to be exclusively considered for selection. If null, all GameObjects in open scenes are eligible for selection.</param>
      <param name="selection">An array of GameObjects to be exclusively considered for selection. If null, all GameObjects in open scenes are eligible for selection.</param>
      <returns>
        <para>The GameObject that is under the requested position.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.HandleUtility.PickGameObject(UnityEngine.Vector2,UnityEngine.GameObject[],UnityEngine.GameObject[],System.Int32&amp;)">
      <summary>
        <para>Pick game object closest to specified position.</para>
      </summary>
      <param name="selectPrefabRoot">Select Prefab.</param>
      <param name="materialIndex">Returns index into material array of the Renderer component that is closest to specified position.</param>
      <param name="position">A position in GUI coordinates. The top-left of the window is (0,0), and the bottom-right is (Screen.width, Screen.height).</param>
      <param name="ignore">An array of GameObjects that will not be considered when selecting the nearest GameObject.</param>
      <param name="filter">An array of GameObjects to be exclusively considered for selection. If null, all GameObjects in open scenes are eligible for selection.</param>
      <param name="selection">An array of GameObjects to be exclusively considered for selection. If null, all GameObjects in open scenes are eligible for selection.</param>
      <returns>
        <para>The GameObject that is under the requested position.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.HandleUtility.PickGameObject(UnityEngine.Vector2,System.Boolean)">
      <summary>
        <para>Pick game object closest to specified position.</para>
      </summary>
      <param name="selectPrefabRoot">Select Prefab.</param>
      <param name="materialIndex">Returns index into material array of the Renderer component that is closest to specified position.</param>
      <param name="position">A position in GUI coordinates. The top-left of the window is (0,0), and the bottom-right is (Screen.width, Screen.height).</param>
      <param name="ignore">An array of GameObjects that will not be considered when selecting the nearest GameObject.</param>
      <param name="filter">An array of GameObjects to be exclusively considered for selection. If null, all GameObjects in open scenes are eligible for selection.</param>
      <param name="selection">An array of GameObjects to be exclusively considered for selection. If null, all GameObjects in open scenes are eligible for selection.</param>
      <returns>
        <para>The GameObject that is under the requested position.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.HandleUtility.PickGameObject(UnityEngine.Vector2,System.Boolean,UnityEngine.GameObject[])">
      <summary>
        <para>Pick game object closest to specified position.</para>
      </summary>
      <param name="selectPrefabRoot">Select Prefab.</param>
      <param name="materialIndex">Returns index into material array of the Renderer component that is closest to specified position.</param>
      <param name="position">A position in GUI coordinates. The top-left of the window is (0,0), and the bottom-right is (Screen.width, Screen.height).</param>
      <param name="ignore">An array of GameObjects that will not be considered when selecting the nearest GameObject.</param>
      <param name="filter">An array of GameObjects to be exclusively considered for selection. If null, all GameObjects in open scenes are eligible for selection.</param>
      <param name="selection">An array of GameObjects to be exclusively considered for selection. If null, all GameObjects in open scenes are eligible for selection.</param>
      <returns>
        <para>The GameObject that is under the requested position.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.HandleUtility.PickGameObject(UnityEngine.Vector2,System.Boolean,UnityEngine.GameObject[],UnityEngine.GameObject[])">
      <summary>
        <para>Pick game object closest to specified position.</para>
      </summary>
      <param name="selectPrefabRoot">Select Prefab.</param>
      <param name="materialIndex">Returns index into material array of the Renderer component that is closest to specified position.</param>
      <param name="position">A position in GUI coordinates. The top-left of the window is (0,0), and the bottom-right is (Screen.width, Screen.height).</param>
      <param name="ignore">An array of GameObjects that will not be considered when selecting the nearest GameObject.</param>
      <param name="filter">An array of GameObjects to be exclusively considered for selection. If null, all GameObjects in open scenes are eligible for selection.</param>
      <param name="selection">An array of GameObjects to be exclusively considered for selection. If null, all GameObjects in open scenes are eligible for selection.</param>
      <returns>
        <para>The GameObject that is under the requested position.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.HandleUtility.PickGameObject(UnityEngine.Vector2,System.Boolean,UnityEngine.GameObject[],UnityEngine.GameObject[],System.Int32&amp;)">
      <summary>
        <para>Pick game object closest to specified position.</para>
      </summary>
      <param name="selectPrefabRoot">Select Prefab.</param>
      <param name="materialIndex">Returns index into material array of the Renderer component that is closest to specified position.</param>
      <param name="position">A position in GUI coordinates. The top-left of the window is (0,0), and the bottom-right is (Screen.width, Screen.height).</param>
      <param name="ignore">An array of GameObjects that will not be considered when selecting the nearest GameObject.</param>
      <param name="filter">An array of GameObjects to be exclusively considered for selection. If null, all GameObjects in open scenes are eligible for selection.</param>
      <param name="selection">An array of GameObjects to be exclusively considered for selection. If null, all GameObjects in open scenes are eligible for selection.</param>
      <returns>
        <para>The GameObject that is under the requested position.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.HandleUtility.PickGameObjectCallback">
      <summary>
        <para>This is the method definition for pickGameObjectCustomPasses.</para>
      </summary>
      <param name="cam">The camera with which to render pickable objects.</param>
      <param name="layers">A layer mask specifying what layers to consider valid for picking. See also Camera.cullingMask.</param>
      <param name="position">A position in GUI coordinates. The top-left of the window is (0,0), and the bottom-right is (Screen.width, Screen.height).</param>
      <param name="ignore">An array of GameObjects that will not be considered when selecting the nearest GameObject.</param>
      <param name="filter">An array of GameObjects that will be tested for picking intersection. If this argument is not null, only GameObjects in the filter array will be selected.</param>
      <param name="materialIndex">Returns the index of the Renderer component in the material array that is closest to the specified position. If the picked object does not contain a MeshRenderer, or the picking intersection does not fall within a mesh boundary, this returns -1.</param>
    </member>
    <member name="M:UnityEditor.HandleUtility.PickRectObjects(UnityEngine.Rect)">
      <summary>
        <para>Pick GameObjects that lie within a specified screen rectangle.</para>
      </summary>
      <param name="rect">An screen rectangle specified with pixel coordinates.</param>
    </member>
    <member name="M:UnityEditor.HandleUtility.PickRectObjects(UnityEngine.Rect,System.Boolean)">
      <summary>
        <para>
        </para>
      </summary>
      <param name="rect">
      </param>
      <param name="selectPrefabRootsOnly">
      </param>
    </member>
    <member name="M:UnityEditor.HandleUtility.PlaceObject(UnityEngine.Vector2,UnityEngine.Vector3&amp;,UnityEngine.Vector3&amp;)">
      <summary>
        <para>Casts a ray against the loaded scenes and returns the nearest intersected point on a collider.</para>
      </summary>
      <param name="guiPosition">The GUI position in the SceneView. You can pass Event.current.mousePosition to this parameter in most cases.</param>
      <param name="position">Returns the nearest intersected point to a ray cast from the mouse position into the scene.</param>
      <param name="normal">Returns the normal of the nearest intersected point to a ray cast from the mouse position into the scene.</param>
      <returns>
        <para>Returns true if the raycast intersected something in the scene; otherwise, false.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.HandleUtility.PlaceObjectDelegate">
      <summary>
        <para>This is the method definition for placeObjectCustomPasses.</para>
      </summary>
      <param name="guiPosition">The GUI position in the SceneView. You can pass Event.current.mousePosition to this parameter in most cases.</param>
      <param name="position">Returns the nearest intersected point to a ray cast from the guiPosition into the scene.</param>
      <param name="normal">Returns the normal of the nearest intersected point to a ray cast from the mouse position into the scene.</param>
    </member>
    <member name="M:UnityEditor.HandleUtility.PointOnLineParameter(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Returns the parameter for the projection of the point on the given line.</para>
      </summary>
      <param name="point">
      </param>
      <param name="linePoint">
      </param>
      <param name="lineDirection">
      </param>
    </member>
    <member name="M:UnityEditor.HandleUtility.PopCamera(UnityEngine.Camera)">
      <summary>
        <para>Retrieve all camera settings.</para>
      </summary>
      <param name="camera">
      </param>
    </member>
    <member name="M:UnityEditor.HandleUtility.ProjectPointLine(UnityEngine.Vector3,UnityEngine.Vector3,UnityEngine.Vector3)">
      <summary>
        <para>Project point onto a line.</para>
      </summary>
      <param name="point">
      </param>
      <param name="lineStart">
      </param>
      <param name="lineEnd">
      </param>
    </member>
    <member name="M:UnityEditor.HandleUtility.PushCamera(UnityEngine.Camera)">
      <summary>
        <para>Store all camera settings.</para>
      </summary>
      <param name="camera">
      </param>
    </member>
    <member name="M:UnityEditor.HandleUtility.RaySnap(UnityEngine.Ray)">
      <summary>
        <para>Casts ray against the Scene and report if an object lies in its path.</para>
      </summary>
      <param name="ray">
      </param>
      <returns>
        <para>A boxed RaycastHit, null if nothing hit it.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.HandleUtility.Repaint">
      <summary>
        <para>Repaint the current view.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.HandleUtility.WorldPointToSizedRect(UnityEngine.Vector3,UnityEngine.GUIContent,UnityEngine.GUIStyle)">
      <summary>
        <para>Calculate a rectangle to display a 2D GUI element near a projected point in 3D space.</para>
      </summary>
      <param name="position">The world-space position to use.</param>
      <param name="content">The content to make room for.</param>
      <param name="style">The style to use. The style's alignment.</param>
    </member>
    <member name="M:UnityEditor.HandleUtility.WorldToGUIPoint(UnityEngine.Vector3)">
      <summary>
        <para>Convert a world space point to a 2D GUI position.</para>
      </summary>
      <param name="world">Point in world space.</param>
    </member>
    <member name="M:UnityEditor.HandleUtility.WorldToGUIPointWithDepth(UnityEngine.Vector3)">
      <summary>
        <para>Convert a world space point to a 2D GUI position.</para>
      </summary>
      <param name="world">Point in world space.</param>
      <returns>
        <para>A Vector3 where the x and y values relate to the 2D GUI position. The z value is the distance in world units from the camera.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Help">
      <summary>
        <para>Helper class to access Unity documentation.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Help.BrowseURL(System.String)">
      <summary>
        <para>Open url in the default web browser.</para>
      </summary>
      <param name="url">
      </param>
    </member>
    <member name="M:UnityEditor.Help.GetHelpURLForObject(UnityEngine.Object)">
      <summary>
        <para>Get the URL for this object's documentation.</para>
      </summary>
      <param name="obj">The object to retrieve documentation for.</param>
      <returns>
        <para>The documentation URL for the object. Note that this could use the https: or file: schemas.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Help.HasHelpForObject(UnityEngine.Object)">
      <summary>
        <para>Is there a help page for this object?</para>
      </summary>
      <param name="obj">
      </param>
    </member>
    <member name="M:UnityEditor.Help.ShowHelpForObject(UnityEngine.Object)">
      <summary>
        <para>Show help page for this object.</para>
      </summary>
      <param name="obj">
      </param>
    </member>
    <member name="M:UnityEditor.Help.ShowHelpPage(System.String)">
      <summary>
        <para>Show a help page.</para>
      </summary>
      <param name="page">
      </param>
    </member>
    <member name="T:UnityEditor.HierarchyDropFlags">
      <summary>
        <para>Define how dragged objects should be dropped relative to already existing Hierarchy items.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.HierarchyDropFlags.DropAbove">
      <summary>
        <para>Drop a dragged object above the Hierarchy sibling item the mouse is hovered over. The dropTargetInstanceID is the Hierarchy item below the hover point and the dropped object is inserted above the target.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.HierarchyDropFlags.DropAfterParent">
      <summary>
        <para>Drop a dragged object into the first child position after the parent of the Hierarchy item when the mouse is hovering between the parent and the first child. The dropTargetInstanceID is the first child under a parent and the dropped object is inserted between the parent and the first child. When using DropAfterParent, DropBetween and DropAbove are also used to provide information to locate the dropped object.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.HierarchyDropFlags.DropBetween">
      <summary>
        <para>Drop a dragged object between two Hierarchy sibling items the mouse is hovered over. The dropTargetInstanceID is the Hierarchy item above the hover point, the dropped object is inserted below the target. </para>
      </summary>
    </member>
    <member name="F:UnityEditor.HierarchyDropFlags.DropUpon">
      <summary>
        <para>Drop a dragged object on the Hierarchy item the mouse is hovering over. The hovered-over item is the dropTargetInstanceID and the dropped object is inserted as a child of the target. This flag is also used when dragging and dropping objects from outside the Hierarchy and into and below the last item in the Hierarchy to add to the Scene. In this case, the dropTargetInstanceID is the Scene handle.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.HierarchyDropFlags.None">
      <summary>
        <para>Insert dragged object in the Hierarchy. The default flag value is 0. The only case in which DropMode is 0 is when dragging outside items and parentForDraggedObjects is set. Then dropTargetInstanceID is 0 and the target is passed to the parentForDraggedObjects.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.HierarchyDropFlags.SearchActive">
      <summary>
        <para>This flag is set if the Hierarchy is showing search results. If a search is active, only DropUpon is allowed (no other actions can be performed on a partial list of items).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Highlighter">
      <summary>
        <para>Use this class to highlight elements in the editor for use in in-editor tutorials and similar.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Highlighter.active">
      <summary>
        <para>Is there currently an active highlight?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Highlighter.activeRect">
      <summary>
        <para>The rect in screenspace of the current active highlight.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Highlighter.activeText">
      <summary>
        <para>The text of the current active highlight.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Highlighter.activeVisible">
      <summary>
        <para>Is the current active highlight visible yet?</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Highlighter.Highlight(System.String,System.String)">
      <summary>
        <para>Highlights an element in the editor.</para>
      </summary>
      <param name="windowTitle">The title of the window the element is inside.</param>
      <param name="text">The text to identify the element with.</param>
      <param name="mode">Optional mode to specify how to search for the element.</param>
      <returns>
        <para>true if the requested element was found; otherwise false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Highlighter.Highlight(System.String,System.String,UnityEditor.HighlightSearchMode)">
      <summary>
        <para>Highlights an element in the editor.</para>
      </summary>
      <param name="windowTitle">The title of the window the element is inside.</param>
      <param name="text">The text to identify the element with.</param>
      <param name="mode">Optional mode to specify how to search for the element.</param>
      <returns>
        <para>true if the requested element was found; otherwise false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Highlighter.HighlightIdentifier(UnityEngine.Rect,System.String)">
      <summary>
        <para>Call this method to create an identifiable rect that the Highlighter can find.</para>
      </summary>
      <param name="position">The position to make highlightable.</param>
      <param name="identifier">The identifier text of the rect.</param>
    </member>
    <member name="M:UnityEditor.Highlighter.Stop">
      <summary>
        <para>Stops the active highlight.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.HighlightSearchMode">
      <summary>
        <para>Used to specify how to find a given element in the editor to highlight.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.HighlightSearchMode.Auto">
      <summary>
        <para>Highlights the first element found using any of the search modes.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.HighlightSearchMode.Content">
      <summary>
        <para>Highlights an element containing text using the text as identifier.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.HighlightSearchMode.Identifier">
      <summary>
        <para>Highlights an element with a given identifier text.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.HighlightSearchMode.None">
      <summary>
        <para>Highlights nothing.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.HighlightSearchMode.PrefixLabel">
      <summary>
        <para>Highlights an entire editor control using its label text as identifier.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.HyperLinkClickedEventArgs">
      <summary>
        <para>Arguments for the event EditorGUI.hyperLinkClicked.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.HyperLinkClickedEventArgs.hyperLinkData">
      <summary>
        <para>Parameters found in the hyperlink tag.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.IApplyRevertPropertyContextMenuItemProvider">
      <summary>
        <para>Used to identify a MonoBehaviour that provides a hook into the apply/revert context menu for Prefabs open in Prefab Mode and non Prefabs.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IApplyRevertPropertyContextMenuItemProvider.GetSourceName(UnityEngine.Component)">
      <summary>
        <para>Returns the component specific name to be used in the apply menu item.</para>
      </summary>
      <param name="comp">
      </param>
    </member>
    <member name="M:UnityEditor.IApplyRevertPropertyContextMenuItemProvider.GetSourceTerm">
      <summary>
        <para>Returns the name of the source term to be used in the apply/revert menu item.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IApplyRevertPropertyContextMenuItemProvider.TryGetApplyMethodForFieldName">
      <summary>
        <para>Extension hook for an optional property apply menu item.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IApplyRevertPropertyContextMenuItemProvider.TryGetRevertMethodForFieldName">
      <summary>
        <para>Extension hook for an optional property revert menu item.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.IconKind">
      <summary>
        <para>Icon kind.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IconKind.Any">
      <summary>
        <para>This icon can be used for any purpose in an application.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IconKind.Application">
      <summary>
        <para>This icon is used for the main application icons.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IconKind.Notification">
      <summary>
        <para>This icon is used for push notifications.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IconKind.Settings">
      <summary>
        <para>This icon is used for settings.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IconKind.Spotlight">
      <summary>
        <para>This icon is used for Spotlight searches. (iOS only).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IconKind.Store">
      <summary>
        <para>This icon is used by the iOS App Store.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.IHasCustomMenu">
      <summary>
        <para>Defines a method to add custom menu items to an Editor Window.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IHasCustomMenu.AddItemsToMenu(UnityEditor.GenericMenu)">
      <summary>
        <para>Adds your custom menu items to an Editor Window.</para>
      </summary>
      <param name="menu">
      </param>
    </member>
    <member name="T:UnityEditor.IHVImageFormatImporter">
      <summary>
        <para>Use IHVImageFormatImporter to modify Texture2D import settings for Textures in IHV (Independent Hardware Vendor) formats such as .DDS and .PVR from Editor scripts.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IHVImageFormatImporter.filterMode">
      <summary>
        <para>Filtering mode of the texture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IHVImageFormatImporter.isReadable">
      <summary>
        <para>Is texture data readable from scripts.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IHVImageFormatImporter.streamingMipmaps">
      <summary>
        <para>Enable mipmap streaming for this texture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IHVImageFormatImporter.streamingMipmapsPriority">
      <summary>
        <para>Relative priority for this texture when reducing memory size in order to hit the memory budget.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IHVImageFormatImporter.wrapMode">
      <summary>
        <para>Texture coordinate wrapping mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IHVImageFormatImporter.wrapModeU">
      <summary>
        <para>Texture U coordinate wrapping mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IHVImageFormatImporter.wrapModeV">
      <summary>
        <para>Texture V coordinate wrapping mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IHVImageFormatImporter.wrapModeW">
      <summary>
        <para>Texture W coordinate wrapping mode for Texture3D.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Il2Cpp.Il2CppBuildPipelineData">
      <summary>
        <para>Contains information for various IIl2CppProcessor callbacks.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Il2Cpp.Il2CppBuildPipelineData.inputDirectory">
      <summary>
        <para>The directory containing the assemblies that IL2CPP will process.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Il2Cpp.Il2CppBuildPipelineData.target">
      <summary>
        <para>The build target.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Il2Cpp.Il2CppBuildPipelineData.#ctor(UnityEditor.BuildTarget,System.String)">
      <summary>
        <para>Creates a new instance of an Il2CppBuildPipelineData.</para>
      </summary>
      <param name="target">
      </param>
      <param name="inputDirectory">
      </param>
    </member>
    <member name="T:UnityEditor.Il2CppCompilerConfiguration">
      <summary>
        <para>C++ compiler configuration used when compiling IL2CPP generated code.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Il2CppCompilerConfiguration.Debug">
      <summary>
        <para>Debug configuration turns off all optimizations, which makes the code quicker to build but slower to run.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Il2CppCompilerConfiguration.Master">
      <summary>
        <para>Master configuration enables all possible optimizations, squeezing every bit of performance possible. For instance, on platforms that use the MSVC++ compiler, this option enables link-time code generation. Compiling code using this configuration can take significantly longer than it does using the Release configuration. Unity recommends building the shipping version of your game using the Master configuration if the increase in build time is acceptable.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Il2CppCompilerConfiguration.Release">
      <summary>
        <para>Release configuration enables optimizations, so the compiled code runs faster and the binary size is smaller but it takes longer to compile.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.ILightingExplorerExtension">
      <summary>
        <para>Interface for when you extend the Lighting Explorer. Used in full overrides of the default behavior.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ILightingExplorerExtension.GetContentTabs">
      <summary>
        <para>Returns the tabs that you have selected to display in the Lighting Explorer.</para>
      </summary>
      <returns>
        <para>Tabs for the Lighting Explorer.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ILightingExplorerExtension.OnDisable">
      <summary>
        <para>This is called when the Lighting Explorer OnDisable is called, or when you switch to another extension.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ILightingExplorerExtension.OnEnable">
      <summary>
        <para>This is called when the Lighting Explorer OnEnable is called, or when you switch to another extension.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.AdvancedDropdown">
      <summary>
        <para>Inherit from this class to implement your own drop-down control.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.AdvancedDropdown.minimumSize">
      <summary>
        <para>Minimum size of the drop-down window. By default, the drop-down will try to match the width of the given rect or the rendered content.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.AdvancedDropdown.BuildRoot">
      <summary>
        <para>Implement this method to generate the content of the drop-down.
This method is called when the drop-down is being shown.</para>
      </summary>
      <returns>
        <para>Root of the list.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.AdvancedDropdown.ItemSelected(UnityEditor.IMGUI.Controls.AdvancedDropdownItem)">
      <summary>
        <para>Override this method to get notified when an item is selected.</para>
      </summary>
      <param name="item">Item that got selected.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.AdvancedDropdown.Show(UnityEngine.Rect)">
      <summary>
        <para>Call this method to show the drop-down at the given position.</para>
      </summary>
      <param name="rect">Position of the button that triggered the drop-down.</param>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.AdvancedDropdownItem">
      <summary>
        <para>Items that build the drop-down list.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.AdvancedDropdownItem.children">
      <summary>
        <para>The list of child items of this item.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.AdvancedDropdownItem.enabled">
      <summary>
        <para>True if the item is enabled.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.AdvancedDropdownItem.icon">
      <summary>
        <para>If set, this icon will be rendered to the left of the item name.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.AdvancedDropdownItem.id">
      <summary>
        <para>The unique identifier for an item.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.AdvancedDropdownItem.name">
      <summary>
        <para>Name shown for this item when rendered.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.AdvancedDropdownItem.AddChild(UnityEditor.IMGUI.Controls.AdvancedDropdownItem)">
      <summary>
        <para>Adds the given AdvancedDropdownItem child to the children list.</para>
      </summary>
      <param name="child">AdvancedDropdownItem to be added to the children list.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.AdvancedDropdownItem.AddSeparator">
      <summary>
        <para>Adds a separator to the list of children in the drop-down.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.AdvancedDropdownState">
      <summary>
        <para>The state of the drop-down. This Object can be serialized.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.ArcHandle">
      <summary>
        <para>A class for a compound handle to edit an angle and a radius in the Scene view.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.ArcHandle.angle">
      <summary>
        <para>Returns or specifies the angle of the arc for the handle.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.ArcHandle.angleHandleColor">
      <summary>
        <para>Returns or specifies the color of the angle control handle.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.ArcHandle.angleHandleDrawFunction">
      <summary>
        <para>The Handles.CapFunction to use when displaying the angle control handle.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.ArcHandle.angleHandleSizeFunction">
      <summary>
        <para>The Handles.SizeFunction to specify how large the angle control handle should be.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.ArcHandle.fillColor">
      <summary>
        <para>Returns or specifies the color of the arc shape.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.ArcHandle.radius">
      <summary>
        <para>Returns or specifies the radius of the arc for the handle.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.ArcHandle.radiusHandleColor">
      <summary>
        <para>Returns or specifies the color of the radius control handle.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.ArcHandle.radiusHandleDrawFunction">
      <summary>
        <para>The Handles.CapFunction to use when displaying the radius control handle.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.ArcHandle.radiusHandleSizeFunction">
      <summary>
        <para>The Handles.SizeFunction to specify how large the angle control handle should be.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.ArcHandle.wireframeColor">
      <summary>
        <para>Returns or specifies the color of the curved line along the outside of the arc.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.ArcHandle.#ctor">
      <summary>
        <para>Creates a new instance of the ArcHandle class.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.ArcHandle.DefaultAngleHandleDrawFunction(System.Int32,UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,UnityEngine.EventType)">
      <summary>
        <para>A Handles.CapFunction that draws a line terminated with Handles.CylinderHandleCap.</para>
      </summary>
      <param name="controlID">The control ID for the handle.</param>
      <param name="position">The position of the handle in the space of Handles.matrix.</param>
      <param name="rotation">The rotation of the handle in the space of Handles.matrix.</param>
      <param name="size">The size of the handle in the space of Handles.matrix. Use HandleUtility.GetHandleSize if you want a constant screen-space size.</param>
      <param name="eventType">Event type for the handle to act upon. By design it handles EventType.Layout and EventType.Repaint events.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.ArcHandle.DefaultAngleHandleSizeFunction(UnityEngine.Vector3)">
      <summary>
        <para>A Handles.SizeFunction that returns a fixed screen-space size.</para>
      </summary>
      <param name="position">The current position of the handle in the space of Handles.matrix.</param>
      <returns>
        <para>The size to use for a handle at the specified position.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.ArcHandle.DefaultRadiusHandleSizeFunction(UnityEngine.Vector3)">
      <summary>
        <para>A Handles.SizeFunction that returns a fixed screen-space size.</para>
      </summary>
      <param name="position">The current position of the handle in the space of Handles.matrix.</param>
      <returns>
        <para>The size to use for a handle at the specified position.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.ArcHandle.DrawHandle">
      <summary>
        <para>A function to display this instance in the current handle camera using its current configuration.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.ArcHandle.SetColorWithoutRadiusHandle(UnityEngine.Color,System.Single)">
      <summary>
        <para>Sets angleHandleColor, wireframeColor, and fillColor to the same value, where fillColor will have the specified alpha value. radiusHandleColor will be set to Color.clear and the radius handle will be disabled.</para>
      </summary>
      <param name="color">The color to use for the angle control handle and the fill shape.</param>
      <param name="fillColorAlpha">The alpha value to use for fillColor.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.ArcHandle.SetColorWithRadiusHandle(UnityEngine.Color,System.Single)">
      <summary>
        <para>Sets angleHandleColor, radiusHandleColor, wireframeColor, and fillColor to the same value, where fillColor will have the specified alpha value.</para>
      </summary>
      <param name="color">The color to use for the angle and radius control handles and the fill shape.</param>
      <param name="fillColorAlpha">The alpha value to use for fillColor.</param>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.BoxBoundsHandle">
      <summary>
        <para>A compound handle to edit a box-shaped bounding volume in the Scene view.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.BoxBoundsHandle.size">
      <summary>
        <para>Returns or specifies the size of the bounding box.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.BoxBoundsHandle.#ctor">
      <summary>
        <para>Create a new instance of the BoxBoundsHandle class.</para>
      </summary>
      <param name="controlIDHint">An integer value used to generate consistent control IDs for each control handle on this instance. Avoid using the same value for all of your BoxBoundsHandle instances.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.BoxBoundsHandle.#ctor(System.Int32)">
      <summary>
        <para>Create a new instance of the BoxBoundsHandle class.</para>
      </summary>
      <param name="controlIDHint">An integer value used to generate consistent control IDs for each control handle on this instance. Avoid using the same value for all of your BoxBoundsHandle instances.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.BoxBoundsHandle.DrawWireframe">
      <summary>
        <para>Draw a wireframe box for this instance.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.CapsuleBoundsHandle">
      <summary>
        <para>A compound handle to edit a capsule-shaped bounding volume in the Scene view.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.CapsuleBoundsHandle.height">
      <summary>
        <para>Returns or specifies the height of the capsule bounding volume.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.CapsuleBoundsHandle.heightAxis">
      <summary>
        <para>Returns or specifies the axis in the handle's space to which height maps. The radius maps to the remaining axes.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.CapsuleBoundsHandle.radius">
      <summary>
        <para>Returns or specifies the radius of the capsule bounding volume.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.CapsuleBoundsHandle.#ctor">
      <summary>
        <para>Create a new instance of the CapsuleBoundsHandle class.</para>
      </summary>
      <param name="controlIDHint">An integer value used to generate consistent control IDs for each control handle on this instance. Avoid using the same value for all of your CapsuleBoundsHandle instances.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.CapsuleBoundsHandle.#ctor(System.Int32)">
      <summary>
        <para>Create a new instance of the CapsuleBoundsHandle class.</para>
      </summary>
      <param name="controlIDHint">An integer value used to generate consistent control IDs for each control handle on this instance. Avoid using the same value for all of your CapsuleBoundsHandle instances.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.CapsuleBoundsHandle.DrawWireframe">
      <summary>
        <para>Draw a wireframe capsule for this instance.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.CapsuleBoundsHandle.HeightAxis">
      <summary>
        <para>An enumeration for specifying which axis on a CapsuleBoundsHandle object maps to the CapsuleBoundsHandle.height parameter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.CapsuleBoundsHandle.HeightAxis.X">
      <summary>
        <para>X-axis.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.CapsuleBoundsHandle.HeightAxis.Y">
      <summary>
        <para>Y-axis.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.CapsuleBoundsHandle.HeightAxis.Z">
      <summary>
        <para>Z-axis.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.CapsuleBoundsHandle.OnHandleChanged(UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle/HandleDirection,UnityEngine.Bounds,UnityEngine.Bounds)">
      <summary>
        <para>A callback for when a control handle was dragged in the Scene.</para>
      </summary>
      <param name="handle">The handle that was dragged.</param>
      <param name="boundsOnClick">The raw Bounds for this instance's volume at the time the control handle was clicked.</param>
      <param name="newBounds">The raw Bounds for this instance's volume based on the updated handle position.</param>
      <returns>
        <para>The bounds that should be applied to this instance, with any necessary modifications applied.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.JointAngularLimitHandle">
      <summary>
        <para>A class for a compound handle to edit multiaxial angular motion limits in the Scene view.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.angleHandleDrawFunction">
      <summary>
        <para>The Handles.CapFunction to use when displaying the angle control handle.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.angleHandleSizeFunction">
      <summary>
        <para>The Handles.SizeFunction to specify how large the angle control handle should be.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.fillAlpha">
      <summary>
        <para>Returns or specifies the opacity to use when rendering fill shapes for the range of motion for each axis. Defaults to 0.1.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.radius">
      <summary>
        <para>Returns or specifies the radius of the arc for the handle. Defaults to 1.0.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.wireframeAlpha">
      <summary>
        <para>Returns or specifies the opacity to use for the curved lines along the outside of the arcs of motion. Defaults to 1.0.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.xHandleColor">
      <summary>
        <para>Returns or specifies the color to use for the handle limiting motion around the x-axis. Defaults to Handles.xAxisColor.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.xMax">
      <summary>
        <para>Returns or specifies the maximum angular motion about the x-axis.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.xMin">
      <summary>
        <para>Returns or specifies the minimum angular motion about the x-axis.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.xMotion">
      <summary>
        <para>Returns or specifies how angular motion is limited about the x-axis. Defaults to ConfigurableJointMotion.Limited.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.xRange">
      <summary>
        <para>Returns or specifies the range of valid values for angular motion about the x-axis. Defaults to [-180.0, 180.0].</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.yHandleColor">
      <summary>
        <para>Returns or specifies the color to use for the handle limiting motion around the y-axis. Defaults to Handles.yAxisColor.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.yMax">
      <summary>
        <para>Returns or specifies the maximum angular motion about the y-axis.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.yMin">
      <summary>
        <para>Returns or specifies the minimum angular motion about the y-axis.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.yMotion">
      <summary>
        <para>Returns or specifies how angular motion is limited about the y-axis. Defaults to ConfigurableJointMotion.Limited.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.yRange">
      <summary>
        <para>Returns or specifies the range of valid values for angular motion about the y-axis. Defaults to [-180.0, 180.0].</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.zHandleColor">
      <summary>
        <para>Returns or specifies the color to use for the handle limiting motion around the z-axis. Defaults to Handles.zAxisColor.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.zMax">
      <summary>
        <para>Returns or specifies the maximum angular motion about the z-axis.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.zMin">
      <summary>
        <para>Returns or specifies the minimum angular motion about the z-axis.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.zMotion">
      <summary>
        <para>Returns or specifies how angular motion is limited about the z-axis. Defaults to ConfigurableJointMotion.Limited.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.zRange">
      <summary>
        <para>Returns or specifies the range of valid values for angular motion about the z-axis. Defaults to [-180.0, 180.0].</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.#ctor">
      <summary>
        <para>Creates a new instance of the JointAngularLimitHandle class.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.JointAngularLimitHandle.DrawHandle">
      <summary>
        <para>A function to display this instance in the current handle camera using its current configuration.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.MultiColumnHeader">
      <summary>
        <para>The MultiColumnHeader is a general purpose class that e.g can be used with the TreeView to create multi-column tree views and list views.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.MultiColumnHeader.allowDraggingColumnsToReorder">
      <summary>
        <para>Use this property to control whether the user can drag and drop columns to re-order them.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.MultiColumnHeader.canSort">
      <summary>
        <para>Use this property to control whether sorting is enabled for all the columns.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.IMGUI.Controls.MultiColumnHeader.columnSettingsChanged(System.Action`1&lt;System.Int32&gt;)">
      <summary>
        <para>Event raised when any settings from a column has changed (for example, a column width was resized).</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="?:UnityEditor.IMGUI.Controls.MultiColumnHeader.columnsSwapped(System.Action`2&lt;System.Int32,System.Int32&gt;)">
      <summary>
        <para>Event raised when the user switches the order of two columns.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.MultiColumnHeader.currentColumnIndex">
      <summary>
        <para>The index of the column that is currently being handled during an event. This property can be used for column specific handling when overriding AddColumnHeaderContextMenuItems</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.MultiColumnHeader.height">
      <summary>
        <para>Customizable height of the multi column header.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.MultiColumnHeader.sortedColumnIndex">
      <summary>
        <para>The index of the column that is set to be the primary sorting column. This is the column that shows the sorting arrow above the header text.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.IMGUI.Controls.MultiColumnHeader.sortingChanged(UnityEditor.IMGUI.Controls.MultiColumnHeader/HeaderCallback)">
      <summary>
        <para>Subscribe to this event to get notified when sorting has changed.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.MultiColumnHeader.state">
      <summary>
        <para>This is the state of the MultiColumnHeader.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.IMGUI.Controls.MultiColumnHeader.visibleColumnsChanged(UnityEditor.IMGUI.Controls.MultiColumnHeader/HeaderCallback)">
      <summary>
        <para>Subscribe to this event to get notified when the number of visible columns has changed.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.AddColumnHeaderContextMenuItems(UnityEditor.GenericMenu)">
      <summary>
        <para>Override this method to extend the default context menu items shown when context clicking the header area.</para>
      </summary>
      <param name="menu">Context menu shown.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.ColumnHeaderClicked(UnityEditor.IMGUI.Controls.MultiColumnHeaderState/Column,System.Int32)">
      <summary>
        <para>Override to customize the behavior when clicking a column header.</para>
      </summary>
      <param name="column">Column clicked.</param>
      <param name="columnIndex">Column index clicked.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.ColumnHeaderGUI(UnityEditor.IMGUI.Controls.MultiColumnHeaderState/Column,UnityEngine.Rect,System.Int32)">
      <summary>
        <para>Override to customize the GUI of a single column header.</para>
      </summary>
      <param name="column">Column header data.</param>
      <param name="headerRect">Rect for column header.</param>
      <param name="columnIndex">Column index.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.#ctor(UnityEditor.IMGUI.Controls.MultiColumnHeaderState)">
      <summary>
        <para>Constructor.</para>
      </summary>
      <param name="state">Column header state and Column state.</param>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.MultiColumnHeader.DefaultGUI">
      <summary>
        <para>Default GUI methods and properties for the MultiColumnHeader class.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.MultiColumnHeader.DefaultGUI.columnContentMargin">
      <summary>
        <para>Margin that can be used by clients of the MultiColumnHeader to control spacing between content in multiple columns.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.MultiColumnHeader.DefaultGUI.defaultHeight">
      <summary>
        <para>Default height of the header.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.MultiColumnHeader.DefaultGUI.minimumHeight">
      <summary>
        <para>This height is the minium height the header can have and can only be used if sorting is disabled.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.MultiColumnHeader.DefaultStyles">
      <summary>
        <para>Default styles used by the MultiColumnHeader class.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.MultiColumnHeader.DefaultStyles.background">
      <summary>
        <para>Style used for rendering the background of the header.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.MultiColumnHeader.DefaultStyles.columnHeader">
      <summary>
        <para>Style used for left aligned header text.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.MultiColumnHeader.DefaultStyles.columnHeaderCenterAligned">
      <summary>
        <para>Style used for centered header text.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.MultiColumnHeader.DefaultStyles.columnHeaderRightAligned">
      <summary>
        <para>Style used for right aligned header text.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.GetCellRect(System.Int32,UnityEngine.Rect)">
      <summary>
        <para>Calculates a cell rect for a column and row using the visibleColumnIndex and rowRect parameters.</para>
      </summary>
      <param name="visibleColumnIndex">
      </param>
      <param name="rowRect">
      </param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.GetColumn(System.Int32)">
      <summary>
        <para>Returns the column data for a given column index.</para>
      </summary>
      <param name="columnIndex">Column index.</param>
      <returns>
        <para>Column data.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.GetColumnRect(System.Int32)">
      <summary>
        <para>Returns the header column Rect for a given visible column index.</para>
      </summary>
      <param name="visibleColumnIndex">Index of a visible column.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.GetVisibleColumnIndex(System.Int32)">
      <summary>
        <para>Convert from column index to visible column index.</para>
      </summary>
      <param name="columnIndex">Column index.</param>
      <returns>
        <para>Visible column index.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.MultiColumnHeader.HeaderCallback">
      <summary>
        <para>Delegate used for events from the MultiColumnHeader.</para>
      </summary>
      <param name="multiColumnHeader">The MultiColumnHeader that dispatched this event.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.IsColumnVisible(System.Int32)">
      <summary>
        <para>Check if a column is currently visible in the MultiColumnHeader.</para>
      </summary>
      <param name="columnIndex">Column index.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.IsSortedAscending(System.Int32)">
      <summary>
        <para>Check the sorting order state for a column.</para>
      </summary>
      <param name="columnIndex">Column index.</param>
      <returns>
        <para>True if sorted ascending.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.OnGUI(UnityEngine.Rect,System.Single)">
      <summary>
        <para>Render and handle input for the MultiColumnHeader at the given rect.</para>
      </summary>
      <param name="xScroll">Horizontal scroll offset.</param>
      <param name="rect">Rect where the MultiColumnHeader is drawn in.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.OnSortingChanged">
      <summary>
        <para>Called when sorting changes and dispatches the sortingChanged event.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.OnVisibleColumnsChanged">
      <summary>
        <para>Called when the number of visible column changes and dispatches the visibleColumnsChanged event.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.Repaint">
      <summary>
        <para>Requests the window which contains the MultiColumnHeader to repaint.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.ResizeToFit">
      <summary>
        <para>Resizes the column widths of the columns that have auto-resize enabled to make all the columns fit to the width of the MultiColumnHeader render rect.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.SetSortDirection(System.Int32,System.Boolean)">
      <summary>
        <para>Change sort direction for a given column.</para>
      </summary>
      <param name="columnIndex">Column index.</param>
      <param name="sortAscending">Direction of the sorting.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.SetSorting(System.Int32,System.Boolean)">
      <summary>
        <para>Sets the primary sorting column and its sorting order.</para>
      </summary>
      <param name="columnIndex">Column to sort.</param>
      <param name="sortAscending">Sorting order for the column specified.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.SetSortingColumns(System.Int32[],System.Boolean[])">
      <summary>
        <para>Sets multiple sorting columns and the associated sorting orders.</para>
      </summary>
      <param name="columnIndices">Column indices of the sorted columns.</param>
      <param name="sortAscending">Sorting order for the column indices specified.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.SortingButton(UnityEditor.IMGUI.Controls.MultiColumnHeaderState/Column,UnityEngine.Rect,System.Int32)">
      <summary>
        <para>Provides the button logic for a column header and the rendering of the sorting arrow (if visible).</para>
      </summary>
      <param name="column">Column data.</param>
      <param name="headerRect">Column header rect.</param>
      <param name="columnIndex">Column index.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeader.ToggleVisibility(System.Int32)">
      <summary>
        <para>Method for toggling the visibility of a column.</para>
      </summary>
      <param name="columnIndex">Toggle visibility for this column.</param>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.MultiColumnHeaderState">
      <summary>
        <para>State used by the MultiColumnHeader.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.columns">
      <summary>
        <para>The array of column states used by the MultiColumnHeader class.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.maximumNumberOfSortedColumns">
      <summary>
        <para>This property controls the maximum number of columns returned by the sortedColumns property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.sortedColumnIndex">
      <summary>
        <para>This property holds the index to the primary sorted column.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.sortedColumns">
      <summary>
        <para>The array of column indices for multiple column sorting.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.visibleColumns">
      <summary>
        <para>This is the array of currently visible column indices.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.widthOfAllVisibleColumns">
      <summary>
        <para>Returns the sum of all the widths of the visible columns in the visibleColumns array.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.CanOverwriteSerializedFields(UnityEditor.IMGUI.Controls.MultiColumnHeaderState,UnityEditor.IMGUI.Controls.MultiColumnHeaderState)">
      <summary>
        <para>Checks if the source state can transfer its serialized data to the destination state.</para>
      </summary>
      <param name="source">State that have serialized data to be transfered to the destination state.</param>
      <param name="destination">Destination state.</param>
      <returns>
        <para>Returns true if the source state have the same number of columns as the destination state.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.Column">
      <summary>
        <para>Column state.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.Column.allowToggleVisibility">
      <summary>
        <para>Option to allow/disallow hiding the column from the context menu.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.Column.autoResize">
      <summary>
        <para>Option to allow the column to resize automatically when resizing the entire MultiColumnHeader.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.Column.canSort">
      <summary>
        <para>Is sorting enabled for this column. If false, left-clicking this column header has no effect.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.Column.contextMenuText">
      <summary>
        <para>If this is set then it is used for the context menu for toggling visibility, if not set then the ::headerContent is used.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.Column.headerContent">
      <summary>
        <para>This is the GUIContent that will be rendered in the column header.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.Column.headerTextAlignment">
      <summary>
        <para>Alignment of the header content.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.Column.maxWidth">
      <summary>
        <para>Maximum width of the column.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.Column.minWidth">
      <summary>
        <para>Minimum width of the column.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.Column.sortedAscending">
      <summary>
        <para>Value that controls if this column is sorted ascending or descending.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.Column.sortingArrowAlignment">
      <summary>
        <para>Alignment of the sorting arrow.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.Column.userData">
      <summary>
        <para>Serialized field that holds an integer value that can be used as a handle to access any non-serialized user data.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.Column.width">
      <summary>
        <para>The width of the column.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.#ctor(UnityEditor.IMGUI.Controls.MultiColumnHeaderState/Column[])">
      <summary>
        <para>Constructor.</para>
      </summary>
      <param name="columns">Column data.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.MultiColumnHeaderState.OverwriteSerializedFields(UnityEditor.IMGUI.Controls.MultiColumnHeaderState,UnityEditor.IMGUI.Controls.MultiColumnHeaderState)">
      <summary>
        <para>Overwrites the seralized fields from the source state to the destination state.</para>
      </summary>
      <param name="source">State that have serialized data to be transfered to the destination state.</param>
      <param name="destination">Destination state.</param>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle">
      <summary>
        <para>Base class for a compound handle to edit a bounding volume in the Scene view.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.axes">
      <summary>
        <para>Flags specifying which axes should display control handles.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.center">
      <summary>
        <para>Returns or specifies the center of the bounding volume for the handle.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.handleColor">
      <summary>
        <para>Returns or specifies the color of the control handles.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.midpointHandleDrawFunction">
      <summary>
        <para>An optional Handles.CapFunction to use when displaying the control handles. Defaults to Handles.DotHandleCap if no value is specified.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.midpointHandleSizeFunction">
      <summary>
        <para>The Handles.SizeFunction to specify how large the midpoint control handles should be.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.wireframeColor">
      <summary>
        <para>Returns or specifies the color of the wireframe shape.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.Axes">
      <summary>
        <para>A flag enumeration for specifying which axes on a PrimitiveBoundsHandle object should be enabled.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.Axes.All">
      <summary>
        <para>All axes.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.Axes.None">
      <summary>
        <para>No axes.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.Axes.X">
      <summary>
        <para>X-axis (bit 0).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.Axes.Y">
      <summary>
        <para>Y-axis (bit 1).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.Axes.Z">
      <summary>
        <para>Z-axis (bit 2).</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.#ctor">
      <summary>
        <para>Create a new instance of the PrimitiveBoundsHandle class.</para>
      </summary>
      <param name="controlIDHint">An integer value used to generate consistent control IDs for each control handle on this instance. Avoid using the same value for all of your PrimitiveBoundsHandle instances.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.#ctor(System.Int32)">
      <summary>
        <para>Create a new instance of the PrimitiveBoundsHandle class.</para>
      </summary>
      <param name="controlIDHint">An integer value used to generate consistent control IDs for each control handle on this instance. Avoid using the same value for all of your PrimitiveBoundsHandle instances.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.DefaultMidpointHandleSizeFunction(UnityEngine.Vector3)">
      <summary>
        <para>A Handles.SizeFunction that returns a fixed screen-space size.</para>
      </summary>
      <param name="position">The current position of the handle in the space of Handles.matrix.</param>
      <returns>
        <para>The size to use for a handle at the specified position.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.DrawHandle">
      <summary>
        <para>A function to display this instance in the current handle camera using its current configuration.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.DrawWireframe">
      <summary>
        <para>Draw a wireframe shape for this instance. Subclasses must implement this method.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.GetSize">
      <summary>
        <para>Gets the current size of the bounding volume for this instance.</para>
      </summary>
      <returns>
        <para>The current size of the bounding volume for this instance.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.HandleDirection">
      <summary>
        <para>An enumeration of directions the handle moves in.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.HandleDirection.NegativeX">
      <summary>
        <para>This value corresponds to the handle moving in a negative direction away from PrimitiveBoundsHandle.center along the x-axis.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.HandleDirection.NegativeY">
      <summary>
        <para>This value corresponds to the handle moving in a negative direction away from PrimitiveBoundsHandle.center along the y-axis.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.HandleDirection.NegativeZ">
      <summary>
        <para>This value corresponds to the handle moving in a negative direction away from PrimitiveBoundsHandle.center along the z-axis.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.HandleDirection.PositiveX">
      <summary>
        <para>This value corresponds to the handle moving in a positive direction away from PrimitiveBoundsHandle.center along the x-axis.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.HandleDirection.PositiveY">
      <summary>
        <para>This value corresponds to the handle moving in a positive direction away from PrimitiveBoundsHandle.center along the y-axis.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.HandleDirection.PositiveZ">
      <summary>
        <para>This value corresponds to the handle moving in a positive direction away from PrimitiveBoundsHandle.center along the z-axis.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.IsAxisEnabled(UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle/Axes)">
      <summary>
        <para>Gets a value indicating whether the specified axis is enabled for the current instance.</para>
      </summary>
      <param name="axis">An Axes.</param>
      <param name="vector3Axis">An integer corresponding to an axis on a Vector3. For example, 0 is x, 1 is y, and 2 is z.</param>
      <returns>
        <para>true if the specified axis is enabled; otherwise, false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.IsAxisEnabled(System.Int32)">
      <summary>
        <para>Gets a value indicating whether the specified axis is enabled for the current instance.</para>
      </summary>
      <param name="axis">An Axes.</param>
      <param name="vector3Axis">An integer corresponding to an axis on a Vector3. For example, 0 is x, 1 is y, and 2 is z.</param>
      <returns>
        <para>true if the specified axis is enabled; otherwise, false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.OnHandleChanged(UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle/HandleDirection,UnityEngine.Bounds,UnityEngine.Bounds)">
      <summary>
        <para>A callback for when a control handle was dragged in the Scene.</para>
      </summary>
      <param name="handle">The handle that was dragged.</param>
      <param name="boundsOnClick">The raw Bounds for this instance's volume at the time the control handle was clicked.</param>
      <param name="newBounds">The raw Bounds for this instance's volume based on the updated handle position.</param>
      <returns>
        <para>The bounds that should be applied to this instance, with any necessary modifications applied.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.SetColor(UnityEngine.Color)">
      <summary>
        <para>Sets handleColor and wireframeColor to the same value.</para>
      </summary>
      <param name="color">The color to use for the control handles and the wireframe shape.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle.SetSize(UnityEngine.Vector3)">
      <summary>
        <para>Sets the current size of the bounding volume for this instance.</para>
      </summary>
      <param name="size">A Vector3 specifying how large the bounding volume is along all of its axes.</param>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.SearchField">
      <summary>
        <para>The SearchField control creates a text field for a user to input text that can be used for searching.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.SearchField.autoSetFocusOnFindCommand">
      <summary>
        <para>Changes the keyboard focus to the search field when the user presses ‘Ctrl/Cmd + F’ when set to true. It is true by default.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.IMGUI.Controls.SearchField.downOrUpArrowKeyPressed(UnityEditor.IMGUI.Controls.SearchField/SearchFieldCallback)">
      <summary>
        <para>This event is dispatched when the focused search field detects that the down or up key is pressed and can be used to change keyboard focus to another control, such as the TreeView.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.SearchField.searchFieldControlID">
      <summary>
        <para>This is the controlID used for the text field to obtain keyboard focus.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.SearchField.HasFocus">
      <summary>
        <para>This function returns true if the search field has keyboard focus.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.SearchField.OnGUI(System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>This function displays the search field with the default UI style and uses the GUILayout class to automatically calculate the position and size of the Rect it is rendered to. Pass an optional list to specify extra layout properties.</para>
      </summary>
      <param name="text">Text string to display in the search field.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. &lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The text entered in the search field. The original input string is returned instead if the search field text was not changed.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.SearchField.OnGUI(UnityEngine.Rect,System.String)">
      <summary>
        <para>This function displays the search field with the default UI style in the given Rect.</para>
      </summary>
      <param name="rect">Rectangle to use for the search field.</param>
      <param name="text">Text string to display in the search field.</param>
      <returns>
        <para>The text entered in the search field. The original input string is returned instead if the search field text was not changed.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.SearchField.OnGUI(UnityEngine.Rect,System.String,UnityEngine.GUIStyle,UnityEngine.GUIStyle,UnityEngine.GUIStyle)">
      <summary>
        <para>This function displays a search text field with the given Rect and UI style parameters.</para>
      </summary>
      <param name="rect">Rectangle to use for the search field.</param>
      <param name="text">Text string to display in the search field.</param>
      <param name="style">The text field style.</param>
      <param name="cancelButtonStyle">The cancel button style used when there is text in the search field.</param>
      <param name="emptyCancelButtonStyle">The cancel button style used when there is no text in the search field.</param>
      <returns>
        <para>The text entered in the SearchField. The original input string is returned instead if the search field text was not changed.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.SearchField.OnToolbarGUI(System.String,UnityEngine.GUILayoutOption[])">
      <summary>
        <para>This function displays the search field with the toolbar UI style and uses the GUILayout class to automatically calculate the position and size of the Rect it is rendered to. Pass an optional list to specify extra layout properties.</para>
      </summary>
      <param name="text">Text string to display in the search field.</param>
      <param name="options">An optional list of layout options that specify extra layout properties. &lt;br&gt;
See Also: GUILayout.Width, GUILayout.Height, GUILayout.MinWidth, GUILayout.MaxWidth, GUILayout.MinHeight,
GUILayout.MaxHeight, GUILayout.ExpandWidth, GUILayout.ExpandHeight.</param>
      <returns>
        <para>The text entered in the search field. The original input string is returned instead if the search field text was not changed.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.SearchField.OnToolbarGUI(UnityEngine.Rect,System.String)">
      <summary>
        <para>This function displays the search field with a toolbar style in the given Rect.</para>
      </summary>
      <param name="rect">Rectangle to use for the search field.</param>
      <param name="text">Text string to display in the search field.</param>
      <returns>
        <para>The text entered in the search field. The original input string is returned instead if the search field text was not changed.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.SearchField.SearchFieldCallback">
      <summary>
        <para>This is a generic callback delegate for SearchField events and does not take any parameters.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.SearchField.SetFocus">
      <summary>
        <para>This function changes keyboard focus to the search field so a user can start typing.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.SphereBoundsHandle">
      <summary>
        <para>A compound handle to edit a sphere-shaped bounding volume in the Scene view.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.SphereBoundsHandle.radius">
      <summary>
        <para>Returns or specifies the radius of the sphere bounding volume.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.SphereBoundsHandle.#ctor">
      <summary>
        <para>Create a new instance of the SphereBoundsHandle class.</para>
      </summary>
      <param name="controlIDHint">An integer value used to generate consistent control IDs for each control handle on this instance. Avoid using the same value for all of your SphereBoundsHandle instances.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.SphereBoundsHandle.#ctor(System.Int32)">
      <summary>
        <para>Create a new instance of the SphereBoundsHandle class.</para>
      </summary>
      <param name="controlIDHint">An integer value used to generate consistent control IDs for each control handle on this instance. Avoid using the same value for all of your SphereBoundsHandle instances.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.SphereBoundsHandle.DrawWireframe">
      <summary>
        <para>Draw a wireframe sphere for this instance.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.SphereBoundsHandle.OnHandleChanged(UnityEditor.IMGUI.Controls.PrimitiveBoundsHandle/HandleDirection,UnityEngine.Bounds,UnityEngine.Bounds)">
      <summary>
        <para>A callback for when a control handle was dragged in the Scene.</para>
      </summary>
      <param name="handle">The handle that was dragged.</param>
      <param name="boundsOnClick">The raw Bounds for this instance's volume at the time the control handle was clicked.</param>
      <param name="newBounds">The raw Bounds for this instance's volume based on the updated handle position.</param>
      <returns>
        <para>The bounds that should be applied to this instance, with any necessary modifications applied.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.TreeView">
      <summary>
        <para>The TreeView is an IMGUI control that lets you create tree views, list views and multi-column tables for Editor tools.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.baseIndent">
      <summary>
        <para>Indent used for all rows before the tree foldout arrows and content.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.cellMargin">
      <summary>
        <para>When using a MultiColumnHeader this value adjusts the cell rects provided for all columns except the tree foldout column.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.columnIndexForTreeFoldouts">
      <summary>
        <para>When using a MultiColumnHeader this value should be set to the column index in which the foldout arrows should appear.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.customFoldoutYOffset">
      <summary>
        <para>Custom vertical offset of the foldout arrow.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.depthIndentWidth">
      <summary>
        <para>Value that returns how far the foldouts are indented for each increasing depth value.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.extraSpaceBeforeIconAndLabel">
      <summary>
        <para>Value to control the spacing before the default icon and label. Can be used e.g for placing a toggle button to the left of the content.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.foldoutOverride">
      <summary>
        <para>Register a callback to this property to override the Foldout button in the TreeView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.foldoutWidth">
      <summary>
        <para>Width of the built-in foldout arrow.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.getNewSelectionOverride">
      <summary>
        <para>Register a callback to this field to override how the TreeView handles selection changes in response to keys and mouse clicks.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.hasSearch">
      <summary>
        <para>The current search state of the TreeView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.isDragging">
      <summary>
        <para>True if the user is currently dragging one or more items in the TreeView, and false otherwise.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.isInitialized">
      <summary>
        <para>The TreeView is initialized by calling Reload(). Therefore returns false until Reload() is called the first time.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.multiColumnHeader">
      <summary>
        <para>Get the MultiColumnHeader of the TreeView. Can be null if the TreeView was created without a MultiColumnHeader.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.rootItem">
      <summary>
        <para>The hidden root item of the TreeView (it is never rendered).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.rowHeight">
      <summary>
        <para>The fixed height used for each row in the TreeView if GetCustomRowHeight have not been overridden.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.searchString">
      <summary>
        <para>Current search string of the TreeView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.showAlternatingRowBackgrounds">
      <summary>
        <para>Enable this to show alternating row background colors.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.showBorder">
      <summary>
        <para>Enable this to show a border around the TreeView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.showingHorizontalScrollBar">
      <summary>
        <para>Returns true if the horizontal scroll bar is showing, otherwise false.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.showingVerticalScrollBar">
      <summary>
        <para>Returns true if the vertical scroll bar is showing, otherwise false.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.state">
      <summary>
        <para>The state of the TreeView (expanded state, selection, scroll etc.)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.totalHeight">
      <summary>
        <para>Returns the sum of the TreeView row heights, the MultiColumnHeader height (if used) and the border (if used).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.treeViewControlID">
      <summary>
        <para>The controlID used by the TreeView to obtain keyboard control focus.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.treeViewRect">
      <summary>
        <para>The Rect the TreeView is being rendered to.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeView.useScrollView">
      <summary>
        <para>When drawing the TreeView contents, will it be enclosed within a ScrollView?</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.AddExpandedRows(UnityEditor.IMGUI.Controls.TreeViewItem,System.Collections.Generic.IList`1&lt;UnityEditor.IMGUI.Controls.TreeViewItem&gt;)">
      <summary>
        <para>Adds the expanded rows of the full tree to the input list. Only use this method if a full tree was built in BuildRoot.</para>
      </summary>
      <param name="root">Root of the TreeView.</param>
      <param name="rows">Rows that will be refilled using the expanded state of TreeView.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.AfterRowsGUI">
      <summary>
        <para>This is called after all rows have their RowGUI called.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.BeforeRowsGUI">
      <summary>
        <para>This is called before any rows have their RowGUI called.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.BeginRename(UnityEditor.IMGUI.Controls.TreeViewItem)">
      <summary>
        <para>Shows the rename overlay for a TreeViewItem.</para>
      </summary>
      <param name="item">Item to rename.</param>
      <param name="delay">Delay in seconds until the rename overlay shows.</param>
      <returns>
        <para>Returns true if renaming was started. Returns false if renaming was already active.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.BeginRename(UnityEditor.IMGUI.Controls.TreeViewItem,System.Single)">
      <summary>
        <para>Shows the rename overlay for a TreeViewItem.</para>
      </summary>
      <param name="item">Item to rename.</param>
      <param name="delay">Delay in seconds until the rename overlay shows.</param>
      <returns>
        <para>Returns true if renaming was started. Returns false if renaming was already active.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.BuildRoot">
      <summary>
        <para>Abstract method that is required to be implemented. By default this method should create the full tree of TreeViewItems and return the root.</para>
      </summary>
      <returns>
        <para>The root of the tree. This item can later be accessed by 'rootItem'.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.BuildRows(UnityEditor.IMGUI.Controls.TreeViewItem)">
      <summary>
        <para>Override this method to take control of how the rows are generated.</para>
      </summary>
      <param name="root">Root item that was created in the BuildRoot method.</param>
      <returns>
        <para>The rows list shown in the TreeView. Can later be accessed using GetRows().</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.CanBeParent(UnityEditor.IMGUI.Controls.TreeViewItem)">
      <summary>
        <para>Override this method to control which items are allowed to be parents.</para>
      </summary>
      <param name="item">Can this item be a parent?</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.CanChangeExpandedState(UnityEditor.IMGUI.Controls.TreeViewItem)">
      <summary>
        <para>Override this method to control whether an item can be expanded or collapsed by key or mouse.</para>
      </summary>
      <param name="item">Can this item be expanded/collapsed.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.CanMultiSelect(UnityEditor.IMGUI.Controls.TreeViewItem)">
      <summary>
        <para>Override this method to control whether the item can be part of a multiselection.</para>
      </summary>
      <param name="item">Can this item be part of a multiselection.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.CanRename(UnityEditor.IMGUI.Controls.TreeViewItem)">
      <summary>
        <para>Override this method to control whether the item can be renamed using a keyboard shortcut or when clicking an already selected item.</para>
      </summary>
      <param name="item">Can this item be renamed?</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.CanStartDrag(UnityEditor.IMGUI.Controls.TreeView/CanStartDragArgs)">
      <summary>
        <para>This function is called whenever a TreeViewItem is clicked and dragged. It returns false by default.</para>
      </summary>
      <param name="args">
      </param>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.TreeView.CanStartDragArgs">
      <summary>
        <para>Method arguments for the CanStartDrag virtual method.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.CanStartDragArgs.draggedItem">
      <summary>
        <para>Item about to be dragged.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.CanStartDragArgs.draggedItemIDs">
      <summary>
        <para>The multi-selection about to be dragged.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.CenterRectUsingSingleLineHeight(UnityEngine.Rect&amp;)">
      <summary>
        <para>Modifies the input rect so it is centered and have a height equal to EditorGUIUtility.singleLineHeight.</para>
      </summary>
      <param name="rect">Rect to be modified and centered.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.CollapseAll">
      <summary>
        <para>Collapse all expanded items in the TreeView.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.CommandEventHandling">
      <summary>
        <para>This function is called automatically and handles the ExecuteCommand events for “SelectAll” and “FrameSelection”. Override this function to extend or avoid Command events.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.ContextClicked">
      <summary>
        <para>Override this method to handle context clicks outside any items (but still in the TreeView rect).</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.ContextClickedItem(System.Int32)">
      <summary>
        <para>Override this method to handle a context click on an item with ID TreeViewItem.id.</para>
      </summary>
      <param name="id">TreeViewItem id.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.CreateChildListForCollapsedParent">
      <summary>
        <para>Creates a dummy TreeViewItem list. Useful when overriding BuildRows to prevent building a full tree of items.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.#ctor(UnityEditor.IMGUI.Controls.TreeViewState)">
      <summary>
        <para>The TreeView is always constructed with a state object and optionally a multi-column header object if a header is needed.</para>
      </summary>
      <param name="state">TreeView state (expanded items, selection etc.)</param>
      <param name="multiColumnHeader">Multi-column header for the TreeView.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.#ctor(UnityEditor.IMGUI.Controls.TreeViewState,UnityEditor.IMGUI.Controls.MultiColumnHeader)">
      <summary>
        <para>The TreeView is always constructed with a state object and optionally a multi-column header object if a header is needed.</para>
      </summary>
      <param name="state">TreeView state (expanded items, selection etc.)</param>
      <param name="multiColumnHeader">Multi-column header for the TreeView.</param>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.TreeView.DefaultGUI">
      <summary>
        <para>Default GUI methods and properties for the TreeView class.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.DefaultGUI.BoldLabel(UnityEngine.Rect,System.String,System.Boolean,System.Boolean)">
      <summary>
        <para>Draws a bold label that have correct text color when selected and/or focused.</para>
      </summary>
      <param name="rect">Rect to render the text in.</param>
      <param name="label">Label to render.</param>
      <param name="selected">Selected state used for determining text color.</param>
      <param name="focused">Focused state used for determining text color.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.DefaultGUI.BoldLabelRightAligned(UnityEngine.Rect,System.String,System.Boolean,System.Boolean)">
      <summary>
        <para>Draws a bold right aligned label that have correct text color when selected and/or focused.</para>
      </summary>
      <param name="rect">Rect to render the text in.</param>
      <param name="label">Label to render.</param>
      <param name="selected">Selected state used for determining text color.</param>
      <param name="focused">Focused state used for determining text color.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.DefaultGUI.FoldoutLabel(UnityEngine.Rect,System.String,System.Boolean,System.Boolean)">
      <summary>
        <para>Draws a foldout label that have correct text color when selected and/or focused.</para>
      </summary>
      <param name="rect">Rect to render the text in.</param>
      <param name="label">Label to render.</param>
      <param name="selected">Selected state used for determining text color.</param>
      <param name="focused">Focused state used for determining text color.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.DefaultGUI.Label(UnityEngine.Rect,System.String,System.Boolean,System.Boolean)">
      <summary>
        <para>Draws a label that have correct text color when selected and/or focused.</para>
      </summary>
      <param name="rect">Rect to render the text in.</param>
      <param name="label">Label to render.</param>
      <param name="selected">Selected state used for determining text color.</param>
      <param name="focused">Focused state used for determining text color.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.DefaultGUI.LabelRightAligned(UnityEngine.Rect,System.String,System.Boolean,System.Boolean)">
      <summary>
        <para>Draws a right aligned label that have correct text color when selected and/or focused.</para>
      </summary>
      <param name="rect">Rect to render the text in.</param>
      <param name="label">Label to render.</param>
      <param name="selected">Selected state used for determining text color.</param>
      <param name="focused">Focused state used for determining text color.</param>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.TreeView.DefaultStyles">
      <summary>
        <para>Default styles used by the TreeView class.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.DefaultStyles.backgroundEven">
      <summary>
        <para>Background style used for alternating row background colors when enabling TreeView.showAlternatingRowBackgrounds.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.DefaultStyles.backgroundOdd">
      <summary>
        <para>Background style used for alternating row background colors when enabling TreeView.showAlternatingRowBackgrounds.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.DefaultStyles.boldLabel">
      <summary>
        <para>Bold label with alternative text color when selected and/or focused.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.DefaultStyles.boldLabelRightAligned">
      <summary>
        <para>Right aligned bold label with alternative text color when selected and/or focused.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.DefaultStyles.foldoutLabel">
      <summary>
        <para>The label that is used for foldout label with alternative text color when selected and/or focused.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.DefaultStyles.label">
      <summary>
        <para>Left aligned label with alternative text color when selected and/or focused.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.DefaultStyles.labelRightAligned">
      <summary>
        <para>Right aligend label with alternative text color when selected and/or focused.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.DoesItemMatchSearch(UnityEditor.IMGUI.Controls.TreeViewItem,System.String)">
      <summary>
        <para>Override this function to extend or change the search behavior.</para>
      </summary>
      <param name="item">Item used for matching against the search string.</param>
      <param name="search">The search string of the TreeView.</param>
      <returns>
        <para>True if item matches search string, otherwise false.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.TreeView.DoFoldoutCallback">
      <summary>
        <para>Callback signature used to override the TreeView foldout. See foldoutOverride.</para>
      </summary>
      <param name="position">Rect to draw the foldout.</param>
      <param name="expandedState">Current foldout state.</param>
      <param name="style">Toggle button style.</param>
      <returns>
        <para>Returns true if the foldout is still expanded. Otherwise, returns false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.DoubleClickedItem(System.Int32)">
      <summary>
        <para>Override this method to handle double click events on an item.</para>
      </summary>
      <param name="id">ID of TreeViewItem that was double clicked.</param>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.TreeView.DragAndDropArgs">
      <summary>
        <para>Method arguments for the HandleDragAndDrop virtual method.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.DragAndDropArgs.dragAndDropPosition">
      <summary>
        <para>When dragging items the current drag can have the following 3 positions relative to the items: Upon an item, Between two items or Outside items.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.DragAndDropArgs.insertAtIndex">
      <summary>
        <para>This index refers to the index in the children list of the parentItem where the current drag is positioned.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.DragAndDropArgs.parentItem">
      <summary>
        <para>The parent item is set if the drag is either upon this item or between two of its children.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.DragAndDropArgs.performDrop">
      <summary>
        <para>This value is false as long as the mouse button is down, when the mouse button is released it is true.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.TreeView.DragAndDropPosition">
      <summary>
        <para>Enum describing the possible positions a drag can have relative to the items: upon a item, between two items or outside items.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.DragAndDropPosition.BetweenItems">
      <summary>
        <para>This value is used when dragging between two items.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.DragAndDropPosition.OutsideItems">
      <summary>
        <para>This value is used when dragging outside all items.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.DragAndDropPosition.UponItem">
      <summary>
        <para>This value is used when the drag is upon a item.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.EndRename">
      <summary>
        <para>Ends renaming if the rename overlay is shown. If called while the rename overlay is not being shown, this method does nothing.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.ExpandAll">
      <summary>
        <para>Expand all collapsed items in the TreeView.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.ExpandedStateChanged">
      <summary>
        <para>Override to get notified when items are expanded or collapsed. This is a general notification that the expanded state has changed.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.FindItem(System.Int32,UnityEditor.IMGUI.Controls.TreeViewItem)">
      <summary>
        <para>Finds a TreeViewItem by an ID.</para>
      </summary>
      <param name="id">Find the TreeViewItem with this ID.</param>
      <param name="searchFromThisItem">Sets the search to start from an item. Use 'rootItem' to search the entire tree.</param>
      <returns>
        <para>This search method returns the TreeViewItem found and returns null if not found.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.FindRowOfItem(UnityEditor.IMGUI.Controls.TreeViewItem)">
      <summary>
        <para>Returns the row of the given TreeViewItem.</para>
      </summary>
      <param name="item">The item to find the row of.</param>
      <returns>
        <para>The row of the TreeViewItem.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.FindRows(System.Collections.Generic.IList`1&lt;System.Int32&gt;)">
      <summary>
        <para>Useful for converting from TreeViewItem IDs to TreeViewItems using the current rows.</para>
      </summary>
      <param name="ids">TreeViewItem IDs.</param>
      <returns>
        <para>TreeViewItems.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.FrameItem(System.Int32)">
      <summary>
        <para>This will reveal the item with ID id (by expanding the ancestors of that item) and will make sure it is visible in the ScrollView.</para>
      </summary>
      <param name="id">TreeViewItem ID.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.GetAncestors(System.Int32)">
      <summary>
        <para>This method is e.g. used for revealing items that are currently under a collapsed item.</para>
      </summary>
      <param name="id">TreeViewItem ID.</param>
      <returns>
        <para>List of all the ancestors of a given item with ID id.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.GetCellRectForTreeFoldouts(UnityEngine.Rect)">
      <summary>
        <para>Utility for multi column setups. This method will clip the input rowRect against the column rect defined by columnIndexForTreeFoldouts to get the cell rect where the the foldout arrows appear.</para>
      </summary>
      <param name="rowRect">Rect for a row.</param>
      <returns>
        <para>Cell rect in a multi column setup.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.GetContentIndent(UnityEditor.IMGUI.Controls.TreeViewItem)">
      <summary>
        <para>Returns the horizontal content offset for an item. This is where the content should begin (after the foldout arrow).</para>
      </summary>
      <param name="item">Item used to determine the indent.</param>
      <returns>
        <para>Indent.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.GetCustomRowHeight(System.Int32,UnityEditor.IMGUI.Controls.TreeViewItem)">
      <summary>
        <para>Override to control individual row heights.</para>
      </summary>
      <param name="row">Row index.</param>
      <param name="item">Item for given row.</param>
      <returns>
        <para>Height of row.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.GetDescendantsThatHaveChildren(System.Int32)">
      <summary>
        <para>Returns all descendants for the item with ID id that have children.</para>
      </summary>
      <param name="id">TreeViewItem ID.</param>
      <returns>
        <para>Descendants that have children.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.GetExpanded">
      <summary>
        <para>Returns a list of TreeViewItem IDs that are currently expanded in the TreeView.</para>
      </summary>
      <returns>
        <para>TreeViewItem IDs.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.GetFirstAndLastVisibleRows(System.Int32&amp;,System.Int32&amp;)">
      <summary>
        <para>Returns the first and the last indices of the rows that are visible in the scroll view of the TreeView.</para>
      </summary>
      <param name="firstRowVisible">First row visible.</param>
      <param name="lastRowVisible">Last row visible.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.GetFoldoutIndent(UnityEditor.IMGUI.Controls.TreeViewItem)">
      <summary>
        <para>Returns the horizontal foldout offset for an item. This is where the foldout arrow is rendered.</para>
      </summary>
      <param name="item">Item used to determine the indent.</param>
      <returns>
        <para>Indent for the foldout arrow.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.TreeView.GetNewSelectionFunction">
      <summary>
        <para>A callback which determines how TreeView handles selection changes in response to keys and mouse clicks.</para>
      </summary>
      <param name="clickedItem">The item clicked, or selected via keyboard.</param>
      <param name="keepMultiSelection">Should existing selection be kept? This is used to support dragging or right-clicking one item in a multi-selection.</param>
      <param name="useShiftAsActionKey">Should the action key be treated like the shift key? If so, the action key also indicates a range selection.</param>
      <param name="useActionKeyAsShift">
      </param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.GetRenameRect(UnityEngine.Rect,System.Int32,UnityEditor.IMGUI.Controls.TreeViewItem)">
      <summary>
        <para>Override this method if custom GUI handling are used in RowGUI. This method for controls where the rename overlay appears.</para>
      </summary>
      <param name="rowRect">Row rect for the item currently being renamed.</param>
      <param name="row">Row index for the item currently being renamed.</param>
      <param name="item">TreeViewItem that are currently being renamed.</param>
      <returns>
        <para>The rect where the rename overlay should appear.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.GetRowRect(System.Int32)">
      <summary>
        <para>Get the rect for a row.</para>
      </summary>
      <param name="row">Row index.</param>
      <returns>
        <para>Row rect.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.GetRows">
      <summary>
        <para>This is the list of TreeViewItems that have been built in BuildRows.</para>
      </summary>
      <returns>
        <para>Rows.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.GetSelection">
      <summary>
        <para>Returns the list of TreeViewItem IDs that are currently selected.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.HandleDragAndDrop(UnityEditor.IMGUI.Controls.TreeView/DragAndDropArgs)">
      <summary>
        <para>Override this function to control the drag and drop behavior of the TreeView.</para>
      </summary>
      <param name="args">Drag and drop arguments.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.HasFocus">
      <summary>
        <para>Returns true if the TreeView and its EditorWindow have keyboard focus.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.HasSelection">
      <summary>
        <para>Returns true if the TreeView has a selection.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.IsChildListForACollapsedParent(System.Collections.Generic.IList`1&lt;UnityEditor.IMGUI.Controls.TreeViewItem&gt;)">
      <summary>
        <para>Utility method for checking if the childList is identical to the one returned by the CreateChildListForCollapsedParent method.</para>
      </summary>
      <param name="childList">Children list of a TreeViewItem.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.IsExpanded(System.Int32)">
      <summary>
        <para>Returns true if the TreeViewItem with ID id is currently expanded.</para>
      </summary>
      <param name="id">TreeViewItem ID.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.IsSelected(System.Int32)">
      <summary>
        <para>Returns true if the TreeViewItem with ID id is currently selected.</para>
      </summary>
      <param name="id">TreeViewItem ID.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.KeyEvent">
      <summary>
        <para>Override this method to handle events when the TreeView has keyboard focus.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.OnGUI(UnityEngine.Rect)">
      <summary>
        <para>This is the main GUI method of the TreeView, where the TreeViewItems are processed and drawn.</para>
      </summary>
      <param name="rect">Rect where the TreeView is rendered.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.RefreshCustomRowHeights">
      <summary>
        <para>Refreshes the cache of custom row rects based on the heights returned by GetCustomRowHeight.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.Reload">
      <summary>
        <para>Call this to force the TreeView to reload its data. This in turn causes BuildRoot and BuildRows to be called.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.RenameEnded(UnityEditor.IMGUI.Controls.TreeView/RenameEndedArgs)">
      <summary>
        <para>Called when rename ends either by the user completing the renaming process, when the rename overlay loses focus or is closed using  EndRename.</para>
      </summary>
      <param name="args">
      </param>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.TreeView.RenameEndedArgs">
      <summary>
        <para>Method arguments for the virtual method RenameEnded.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.RenameEndedArgs.acceptedRename">
      <summary>
        <para>Is true if the rename is accepted.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.RenameEndedArgs.itemID">
      <summary>
        <para>Item with ID that are being renamed.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.RenameEndedArgs.newName">
      <summary>
        <para>Name entered in the rename overlay.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.RenameEndedArgs.originalName">
      <summary>
        <para>The original name when starting the rename.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.Repaint">
      <summary>
        <para>Request a repaint of the window that the TreeView is rendered in.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.RowGUI(UnityEditor.IMGUI.Controls.TreeView/RowGUIArgs)">
      <summary>
        <para>Override this method to add custom GUI content for the rows in the TreeView.</para>
      </summary>
      <param name="args">Row data.</param>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.TreeView.RowGUIArgs">
      <summary>
        <para>Method arguments for the virtual method RowGUI.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.RowGUIArgs.focused">
      <summary>
        <para>This value is true only when the TreeView has keyboard focus and the TreeView's window has focus.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.RowGUIArgs.isRenaming">
      <summary>
        <para>This value is true when the ::item is currently being renamed.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.RowGUIArgs.item">
      <summary>
        <para>Item for the current row being handled in TreeView.RowGUI.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.RowGUIArgs.label">
      <summary>
        <para>Label used for text rendering of the item displayName. Note this is an empty string when isRenaming == true.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.RowGUIArgs.row">
      <summary>
        <para>Row index into the list of current rows.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.RowGUIArgs.rowRect">
      <summary>
        <para>Row rect for the current row being handled.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.RowGUIArgs.selected">
      <summary>
        <para>This value is true when the current row's item is part of the current selection.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.RowGUIArgs.GetCellRect(System.Int32)">
      <summary>
        <para>If using a MultiColumnHeader for the TreeView this method can be used to get the cell rects of a row using the visible columns of the MultiColumnHeader.</para>
      </summary>
      <param name="visibleColumnIndex">Index into the list of visible columns of the multi column header.</param>
      <returns>
        <para>Cell rect defined by the intersection between the row rect and the rect of the visible column.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.RowGUIArgs.GetColumn(System.Int32)">
      <summary>
        <para>If using a MultiColumnHeader for the TreeView this method can be used to convert an index from the visible columns list to a index into the actual columns in the MultiColumnHeaderState.</para>
      </summary>
      <param name="visibleColumnIndex">This index is the index into the current visible columns.</param>
      <returns>
        <para>Column index into the columns array in MultiColumnHeaderState.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.RowGUIArgs.GetNumVisibleColumns">
      <summary>
        <para>If using a MultiColumnHeader for the TreeView use this method to get the number of visible columns currently being shown in the MultiColumnHeader.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.SearchChanged(System.String)">
      <summary>
        <para>Override the method to get notified of search string changes.</para>
      </summary>
      <param name="newSearch">
      </param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.SelectAllRows">
      <summary>
        <para>Selects all rows in the TreeView.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.SelectionChanged(System.Collections.Generic.IList`1&lt;System.Int32&gt;)">
      <summary>
        <para>Override the method to get notified of selection changes.</para>
      </summary>
      <param name="selectedIds">TreeViewItem IDs.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.SelectionClick(UnityEditor.IMGUI.Controls.TreeViewItem,System.Boolean)">
      <summary>
        <para>Use this method in RowGUI to peform the logic of a mouse click.</para>
      </summary>
      <param name="item">TreeViewItem clicked.</param>
      <param name="keepMultiSelection">If true then keeps the multiselection when clicking on a item already part of the selection. If false then clears the selection before selecting the item clicked. For left button clicks this is usually false. For context clicks it is usually true so a context opereration can operate on the multiselection.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.SetExpanded(System.Int32,System.Boolean)">
      <summary>
        <para>Set a single TreeViewItem to be expanded or collapsed.</para>
      </summary>
      <param name="id">TreeViewItem ID.</param>
      <param name="expanded">True expands item. False collapses item.</param>
      <returns>
        <para>True if item changed expanded state, false if item already had the expanded state.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.SetExpanded(System.Collections.Generic.IList`1&lt;System.Int32&gt;)">
      <summary>
        <para>Set the current expanded TreeViewItems of the TreeView. This will overwrite the previous expanded state.</para>
      </summary>
      <param name="ids">List of item IDs that should be expanded.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.SetExpandedRecursive(System.Int32,System.Boolean)">
      <summary>
        <para>Expand or collapse all items under item with id.</para>
      </summary>
      <param name="id">TreeViewItem ID.</param>
      <param name="expanded">Expanded state: true expands, false collapses.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.SetFocus">
      <summary>
        <para>Calling this function changes the keyboard focus to the TreeView.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.SetFocusAndEnsureSelectedItem">
      <summary>
        <para>Calling this function changes the keyboard focus to the TreeView and ensures an item is selected. Use this function to enable key navigation of the TreeView.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.SetSelection(System.Collections.Generic.IList`1&lt;System.Int32&gt;)">
      <summary>
        <para>Set the selected items of the TreeView.</para>
      </summary>
      <param name="selectedIDs">TreeViewItem IDs.</param>
      <param name="options">Options for extra logic performed after the selection. See TreeViewSelectionOptions.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.SetSelection(System.Collections.Generic.IList`1&lt;System.Int32&gt;,UnityEditor.IMGUI.Controls.TreeViewSelectionOptions)">
      <summary>
        <para>Set the selected items of the TreeView.</para>
      </summary>
      <param name="selectedIDs">TreeViewItem IDs.</param>
      <param name="options">Options for extra logic performed after the selection. See TreeViewSelectionOptions.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.SetupDepthsFromParentsAndChildren(UnityEditor.IMGUI.Controls.TreeViewItem)">
      <summary>
        <para>Utility method using the depth of the input TreeViewItem to set the correct depths for all its descendant TreeViewItems.</para>
      </summary>
      <param name="root">TreeViewItem from which the descendentans should have their depth updated.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.SetupDragAndDrop(UnityEditor.IMGUI.Controls.TreeView/SetupDragAndDropArgs)">
      <summary>
        <para>This function is called when CanStartDrag returns true.</para>
      </summary>
      <param name="args">
      </param>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.TreeView.SetupDragAndDropArgs">
      <summary>
        <para>Method arguments to the virtual method SetupDragAndDrop.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeView.SetupDragAndDropArgs.draggedItemIDs">
      <summary>
        <para>TreeViewItem IDs being dragged.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.SetupParentsAndChildrenFromDepths(UnityEditor.IMGUI.Controls.TreeViewItem,System.Collections.Generic.IList`1&lt;UnityEditor.IMGUI.Controls.TreeViewItem&gt;)">
      <summary>
        <para>Utility method for initializing all the parent and children properties of the rows using the order and the depths values that have been set.</para>
      </summary>
      <param name="root">The hidden root item.</param>
      <param name="rows">TreeViewItems where only the depth property have been set.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.SingleClickedItem(System.Int32)">
      <summary>
        <para>Override this method to handle single click events on an item.</para>
      </summary>
      <param name="id">ID of TreeViewItem that was single clicked.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeView.SortItemIDsInRowOrder(System.Collections.Generic.IList`1&lt;System.Int32&gt;)">
      <summary>
        <para>Returns a list sorted in the order in which they are shown in the TreeView.</para>
      </summary>
      <param name="ids">TreeViewItem IDs.</param>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.TreeViewItem">
      <summary>
        <para>The TreeViewItem is used to build the tree representation of a tree data structure.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeViewItem.children">
      <summary>
        <para>The list of child items of this TreeViewItem.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeViewItem.depth">
      <summary>
        <para>The depth refers to how many ancestors this item has, and corresponds to the number of horizontal ‘indents’ this item has.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeViewItem.displayName">
      <summary>
        <para>Name shown for this item when rendered.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeViewItem.hasChildren">
      <summary>
        <para>Returns true if children has any items.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeViewItem.icon">
      <summary>
        <para>If set, this icon will be rendered to the left of the displayName. The icon is rendered at 16x16 points by default.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeViewItem.id">
      <summary>
        <para>Unique ID for an item.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeViewItem.parent">
      <summary>
        <para>The parent of this TreeViewItem. If it is null then it is considered the root of the TreeViewItem tree.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeViewItem.AddChild(UnityEditor.IMGUI.Controls.TreeViewItem)">
      <summary>
        <para>Helper method that adds the child TreeViewItem to the children list and sets the parent property on the child.</para>
      </summary>
      <param name="child">TreeViewItem to be added to the children list.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeViewItem.#ctor(System.Int32)">
      <summary>
        <para>TreeViewItem constructor.</para>
      </summary>
      <param name="id">Unique ID to identify this TreeViewItem with among all TreeViewItems of the TreeView. See Also id.</param>
      <param name="depth">Depth of this TreeViewItem. See Also depth.</param>
      <param name="displayName">Rendered name of this TreeViewItem. See Also displayName.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeViewItem.#ctor(System.Int32,System.Int32)">
      <summary>
        <para>TreeViewItem constructor.</para>
      </summary>
      <param name="id">Unique ID to identify this TreeViewItem with among all TreeViewItems of the TreeView. See Also id.</param>
      <param name="depth">Depth of this TreeViewItem. See Also depth.</param>
      <param name="displayName">Rendered name of this TreeViewItem. See Also displayName.</param>
    </member>
    <member name="M:UnityEditor.IMGUI.Controls.TreeViewItem.#ctor(System.Int32,System.Int32,System.String)">
      <summary>
        <para>TreeViewItem constructor.</para>
      </summary>
      <param name="id">Unique ID to identify this TreeViewItem with among all TreeViewItems of the TreeView. See Also id.</param>
      <param name="depth">Depth of this TreeViewItem. See Also depth.</param>
      <param name="displayName">Rendered name of this TreeViewItem. See Also displayName.</param>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.TreeViewSelectionOptions">
      <summary>
        <para>Enum used by the TreeView.SetSelection method.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeViewSelectionOptions.FireSelectionChanged">
      <summary>
        <para>If this flag is passed to TreeView.SetSelection then the TreeView will call the its TreeView.SelectionChanged method.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeViewSelectionOptions.None">
      <summary>
        <para>If this flag is passed to TreeView.SetSelection no extra logic is be performed after setting selection.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeViewSelectionOptions.RevealAndFrame">
      <summary>
        <para>If this flag is passed to TreeView.SetSelection then the TreeView will make sure the last item in the input selection list is visible on screen.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.IMGUI.Controls.TreeViewState">
      <summary>
        <para>The TreeViewState contains serializable state information for the TreeView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeViewState.expandedIDs">
      <summary>
        <para>This is the list of currently expanded TreeViewItem IDs.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeViewState.lastClickedID">
      <summary>
        <para>The ID for the TreeViewItem that currently is being used for multi selection and key navigation.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.IMGUI.Controls.TreeViewState.scrollPos">
      <summary>
        <para>The current scroll values of the TreeView's scroll view.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeViewState.searchString">
      <summary>
        <para>Search string state that can be used in the TreeView to filter the tree data when creating the TreeViewItems.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.IMGUI.Controls.TreeViewState.selectedIDs">
      <summary>
        <para>Selected TreeViewItem IDs. Use of the SetSelection and IsSelected API will access this state.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ImportAssetOptions">
      <summary>
        <para>Asset importing options.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ImportAssetOptions.Default">
      <summary>
        <para>Default import options.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ImportAssetOptions.DontDownloadFromCacheServer">
      <summary>
        <para>Force a full reimport but don't download the assets from the cache server.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ImportAssetOptions.ForceSynchronousImport">
      <summary>
        <para>Import all assets synchronously.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ImportAssetOptions.ForceUncompressedImport">
      <summary>
        <para>Forces asset import as uncompressed for edition facilities.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ImportAssetOptions.ForceUpdate">
      <summary>
        <para>User initiated asset import.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ImportAssetOptions.ImportRecursive">
      <summary>
        <para>When a folder is imported, import all its contents as well.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.InitializeOnEnterPlayModeAttribute">
      <summary>
        <para>Allow an editor class method to be initialized when Unity enters Play Mode.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.InitializeOnLoadAttribute">
      <summary>
        <para>Allows you to initialize an Editor class when Unity loads, and when your scripts are recompiled.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.InitializeOnLoadMethodAttribute">
      <summary>
        <para>Allow an editor class method to be initialized when Unity loads without action from the user.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.InteractionMode">
      <summary>
        <para>The mode of interaction, user or automated, that an API method is called with.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.InteractionMode.AutomatedAction">
      <summary>
        <para>Use this setting to prevent a method from showing any dialog boxes to the user, and to prevent it recording to the undo history.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.InteractionMode.UserAction">
      <summary>
        <para>Use this setting to allow a method to show dialog boxes to the user, and to allow it to record to the undo history.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.iOSAppInBackgroundBehavior">
      <summary>
        <para>Application behavior when entering background.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSAppInBackgroundBehavior.Custom">
      <summary>
        <para>Custom background behavior, see iOSBackgroundMode for specific background modes.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSAppInBackgroundBehavior.Exit">
      <summary>
        <para>Application should exit when entering background.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSAppInBackgroundBehavior.Suspend">
      <summary>
        <para>Application should suspend execution when entering background.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.iOSBackgroundMode">
      <summary>
        <para>Background modes supported by the application corresponding to project settings in Xcode.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSBackgroundMode.Audio">
      <summary>
        <para>Audio, AirPlay and Picture in Picture.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSBackgroundMode.BluetoothCentral">
      <summary>
        <para>Uses Bluetooth LE accessories.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSBackgroundMode.BluetoothPeripheral">
      <summary>
        <para>Acts as a Bluetooth LE accessory.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSBackgroundMode.ExternalAccessory">
      <summary>
        <para>External accessory communication.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSBackgroundMode.Fetch">
      <summary>
        <para>Background fetch.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSBackgroundMode.Location">
      <summary>
        <para>Location updates.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSBackgroundMode.NewsstandContent">
      <summary>
        <para>Newsstand downloads.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSBackgroundMode.None">
      <summary>
        <para>No background modes supported.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSBackgroundMode.RemoteNotification">
      <summary>
        <para>Remote notifications.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSBackgroundMode.VOIP">
      <summary>
        <para>Voice over IP.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.iOSBuildType">
      <summary>
        <para>Build configurations for the generated Xcode project.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSBuildType.Debug">
      <summary>
        <para>Build configuration set to Debug for the generated Xcode project.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSBuildType.Release">
      <summary>
        <para>Build configuration set to Release for the generated Xcode project with optimization enabled.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.iOSDeviceRequirement">
      <summary>
        <para>A device requirement description used for configuration of App Slicing.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.iOSDeviceRequirement.values">
      <summary>
        <para>The values of the device requirement description.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.iOSDeviceRequirement.#ctor">
      <summary>
        <para>Constructs new device requirement description.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.iOSLaunchScreenImageType">
      <summary>
        <para>iOS launch screen settings.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSLaunchScreenImageType.iPadImage">
      <summary>
        <para>Launch screen image on the iPad.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSLaunchScreenImageType.iPhoneLandscapeImage">
      <summary>
        <para>Landscape oriented launch screen image on the iPhone.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSLaunchScreenImageType.iPhonePortraitImage">
      <summary>
        <para>Portrait oriented launch screen image on the iPhone.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.iOSLaunchScreenType">
      <summary>
        <para>iOS launch screen settings.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSLaunchScreenType.CustomStoryboard">
      <summary>
        <para>Use a specified custom Storyboard (.storyboard) file in Player Settings.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSLaunchScreenType.CustomXib">
      <summary>
        <para>Use a specified custom Interface Builder (.xib) file in Player Settings.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSLaunchScreenType.Default">
      <summary>
        <para>Use the default launch screen (dark blue background).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSLaunchScreenType.ImageAndBackgroundConstant">
      <summary>
        <para>Use a custom launch screen image specified in the iOS Player Settings or with PlayerSettings.iOS.SetLaunchScreenImage and use its original dimensions.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSLaunchScreenType.ImageAndBackgroundRelative">
      <summary>
        <para>Use a custom launch screen image specified in the iOS Player Settings or with PlayerSettings.iOS.SetLaunchScreenImage which will be scaled across the entire screen.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSLaunchScreenType.None">
      <summary>
        <para>Generate the Xcode project without any custom launch screens.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.iOSSdkVersion">
      <summary>
        <para>Supported iOS SDK versions.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSSdkVersion.DeviceSDK">
      <summary>
        <para>Device SDK.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSSdkVersion.SimulatorSDK">
      <summary>
        <para>Simulator SDK.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.iOSShowActivityIndicatorOnLoading">
      <summary>
        <para>Activity Indicator on loading.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSShowActivityIndicatorOnLoading.DontShow">
      <summary>
        <para>Don't Show.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSShowActivityIndicatorOnLoading.Gray">
      <summary>
        <para>Gray.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSShowActivityIndicatorOnLoading.White">
      <summary>
        <para>White.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSShowActivityIndicatorOnLoading.WhiteLarge">
      <summary>
        <para>White Large.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.iOSStatusBarStyle">
      <summary>
        <para>iOS status bar style.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSStatusBarStyle.Default">
      <summary>
        <para>Default.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSStatusBarStyle.LightContent">
      <summary>
        <para>A light status bar, intended for use on dark backgrounds.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.iOSTargetDevice">
      <summary>
        <para>Target iOS device.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSTargetDevice.iPadOnly">
      <summary>
        <para>iPad Only.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSTargetDevice.iPhoneAndiPad">
      <summary>
        <para>Universal : iPhone/iPod + iPad.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSTargetDevice.iPhoneOnly">
      <summary>
        <para>iPhone/iPod Only.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.iOSTargetOSVersion">
      <summary>
        <para>Supported iOS deployment versions.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSTargetOSVersion.iOS_4_0">
      <summary>
        <para>iOS 4.0.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSTargetOSVersion.iOS_4_1">
      <summary>
        <para>iOS 4.1.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSTargetOSVersion.iOS_4_2">
      <summary>
        <para>iOS 4.2.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSTargetOSVersion.iOS_4_3">
      <summary>
        <para>iOS 4.3.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSTargetOSVersion.iOS_5_0">
      <summary>
        <para>iOS 5.0.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSTargetOSVersion.iOS_5_1">
      <summary>
        <para>iOS 5.1.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSTargetOSVersion.iOS_6_0">
      <summary>
        <para>iOS 6.0.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSTargetOSVersion.iOS_7_0">
      <summary>
        <para>iOS 7.0.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSTargetOSVersion.iOS_7_1">
      <summary>
        <para>iOS 7.1.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSTargetOSVersion.iOS_8_0">
      <summary>
        <para>iOS 8.0.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSTargetOSVersion.iOS_8_1">
      <summary>
        <para>iOS 8.1.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.iOSTargetOSVersion.Unknown">
      <summary>
        <para>Unknown iOS version, managed by user.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.ITerrainLayerCustomUI">
      <summary>
        <para>Provides an interface to display a custom TerrainLayer UI in the Terrain Layers inspector.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ITerrainLayerCustomUI.OnTerrainLayerGUI(UnityEngine.TerrainLayer,UnityEngine.Terrain)">
      <summary>
        <para>Draws the custom GUI for the terrain layer.</para>
      </summary>
      <param name="terrainLayer">The TerrainLayer object.</param>
      <param name="terrain">The Terrain object on which the TerrainLayer object, specified by the terrainLayer parameter, is selected.</param>
      <returns>
        <para>Return false to have Unity draw the default TerrainLayer inspector. Otherwise draw the custom GUI and return true.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.L10n">
      <summary>
        <para>Class for text localization.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.L10n.Tr(System.String)">
      <summary>
        <para>This function referes a po file like ja.po as an asset. Asmdef and [assembly: UnityEditor.Localization] is needed.</para>
      </summary>
      <param name="str">Original text, basically English.</param>
      <returns>
        <para>Localized text.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.LightEditor">
      <summary>
        <para>The class used to render the Light Editor when a Light is selected in the Unity Editor.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.settings">
      <summary>
        <para>The settings helper that can be used for rendering a custom LightEditor.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.OnDestroy">
      <summary>
        <para>See ScriptableObject.OnDestroy.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.OnEnable">
      <summary>
        <para>See ScriptableObject.OnEnable.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.OnInspectorGUI">
      <summary>
        <para>See Editor.OnInspectorGUI.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.OnSceneGUI">
      <summary>
        <para>See Editor.OnSceneGUI.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.LightEditor.Settings">
      <summary>
        <para>Contains all drawable elements of the LightEditor.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.areaSizeX">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.areaSizeY">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.bakedShadowAngleProp">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.bakedShadowRadiusProp">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.bounceIntensity">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.color">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.colorTemperature">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.cookie">
      <summary>
        <para>The light cookie texture used by the light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.cookieProp">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.cookieSize">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.cullingMask">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.flare">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.halo">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.innerSpotAngle">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.intensity">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.isAreaLightType">
      <summary>
        <para>Is the current light an area light or not. Area lights include Rectangle and Disc lights.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.isBakedOrMixed">
      <summary>
        <para>Is the current light baked or mixed.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.isCompletelyBaked">
      <summary>
        <para>Is the light completely baked.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.isMixed">
      <summary>
        <para>Is the current light mixed.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.isRealtime">
      <summary>
        <para>Is the light real-time?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.light">
      <summary>
        <para>The light being inspected.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.lightmapping">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.lightShape">
      <summary>
        <para>This property describes the shape of the spot light. Only Scriptable Render Pipelines use this property; the built-in renderer does not support it.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.lightType">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.range">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.renderingLayerMask">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.renderMode">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.shadowsBias">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.shadowsNearPlane">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.shadowsNormalBias">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.shadowsResolution">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.shadowsStrength">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.shadowsType">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.spotAngle">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightEditor.Settings.useColorTemperature">
      <summary>
        <para>Exposed SerializedProperty for the inspected Light.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.ApplyModifiedProperties">
      <summary>
        <para>See SerializedObject.ApplyModifiedProperties.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawArea">
      <summary>
        <para>Draws the default LightEditor area widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawBakedShadowAngle">
      <summary>
        <para>Draws the default LightEditor baked shadow angle widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawBakedShadowRadius">
      <summary>
        <para>Draws the default LightEditor baked shadow radius widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawBounceIntensity">
      <summary>
        <para>Draws the default LightEditor bounce intensity widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawColor">
      <summary>
        <para>Draws the default LightEditor color widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawCookie">
      <summary>
        <para>Draws the default LightEditor cookie widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawCookieSize">
      <summary>
        <para>Draws the default LightEditor cookie size widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawCullingMask">
      <summary>
        <para>Draws the default LightEditor culling mask widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawFlare">
      <summary>
        <para>Draws the default LightEditor flare widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawHalo">
      <summary>
        <para>Draws the default LightEditor halo widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawInnerAndOuterSpotAngle">
      <summary>
        <para>Draws the default LightEditor inner and outer spot angle widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawIntensity">
      <summary>
        <para>Draws the default LightEditor intensity widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawLightmapping">
      <summary>
        <para>Draws the default LightEditor lightmapping widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawLightType">
      <summary>
        <para>Draws the default LightEditor light type widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawRange(System.Boolean)">
      <summary>
        <para>Draws the default LightEditor range widget.</para>
      </summary>
      <param name="showAreaOptions">
      </param>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawRenderingLayerMask">
      <summary>
        <para>Draws the default LightEditor rendering LayerMask widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawRenderMode">
      <summary>
        <para>Draws the default LightEditor render mode widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawRuntimeShadow">
      <summary>
        <para>Draws the default LightEditor runtime shadows widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawShadowsType">
      <summary>
        <para>Draws the default LightEditor shadows type widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.DrawSpotAngle">
      <summary>
        <para>Draws the default LightEditor spot angle widget.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.OnDestroy">
      <summary>
        <para>Cleanup internal settings state.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.OnEnable">
      <summary>
        <para>Populate the settings from the referenced SerializedObject.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightEditor.Settings.Update">
      <summary>
        <para>See SerializedObject.Update.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.LightingDataAsset">
      <summary>
        <para>The lighting data asset used by the active Scene.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.LightingExplorerExtensionAttribute">
      <summary>
        <para>An attribute to mark an extension class for the Lighting Explorer. Supports one extension per render pipeline.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightingExplorerExtensionAttribute.#ctor(System.Type)">
      <summary>
        <para>Constructor.</para>
      </summary>
      <param name="renderPipeline">The type that inherits from the RenderPipelineAsset used to filter the class.</param>
    </member>
    <member name="T:UnityEditor.LightingExplorerTab">
      <summary>
        <para>Create custom tabs for the Lighting Explorer.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightingExplorerTab.#ctor(System.String,System.Func`1&lt;UnityEngine.Object[]&gt;,System.Func`1&lt;UnityEditor.LightingExplorerTableColumn[]&gt;)">
      <summary>
        <para>Constructor.</para>
      </summary>
      <param name="title">The title of the tab.</param>
      <param name="objects">The objects that the tab must contain.</param>
      <param name="columns">How the columns should look and behave.</param>
      <param name="showFilterGUI">
      </param>
    </member>
    <member name="T:UnityEditor.LightingExplorerTableColumn">
      <summary>
        <para>This is used when defining how a column should look and behave in the Lighting Explorer.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.LightingExplorerTableColumn.ComparePropertiesDelegate">
      <summary>
        <para>A delegate for comparison of properties for sorting.</para>
      </summary>
      <param name="lhs">
      </param>
      <param name="rhs">
      </param>
    </member>
    <member name="T:UnityEditor.LightingExplorerTableColumn.CopyPropertiesDelegate">
      <summary>
        <para>A delegate for copying of properties.</para>
      </summary>
      <param name="target">
      </param>
      <param name="source">
      </param>
    </member>
    <member name="M:UnityEditor.LightingExplorerTableColumn.#ctor(UnityEditor.LightingExplorerTableColumn/DataType,UnityEngine.GUIContent,System.String,System.Int32,UnityEditor.LightingExplorerTableColumn/OnGUIDelegate,UnityEditor.LightingExplorerTableColumn/ComparePropertiesDelegate,UnityEditor.LightingExplorerTableColumn/CopyPropertiesDelegate,System.Int32[])">
      <summary>
        <para>Constructor.</para>
      </summary>
      <param name="type">Depending on what LightingExplorer.DataType we use, built-in compare and draw methods will be used. If you want to fully overload this, use LightingExplorer.DataType.Custom.</param>
      <param name="headerContent">Title for the column header.</param>
      <param name="propertyName">Name of the property on the object you wish to use. If you use LightingExplorer.DataType.Name, choose ‘null’.</param>
      <param name="width">Width of the column. The minimum width is this value divided by 2. The default value is 100.</param>
      <param name="onGUIDelegate">If you want to draw a property differently than the default, provide this delegate. If you use LightingExprlorer.DataType.Custom, you must override this.</param>
      <param name="compareDelegate">If you want to sort properties differently than the default way, provide this delegate. If you use LightingExplorer.DataType.Custom, you must override this.</param>
      <param name="copyDelegate">If you want to copy properties differently than the default way, provide this delegate. </param>
      <param name="dependencyIndices">If you depend on another Serialized property than the one in your column, use this field to specify which indices to include. The first column is index 0.</param>
    </member>
    <member name="T:UnityEditor.LightingExplorerTableColumn.DataType">
      <summary>
        <para>A data type that defines the default behaviors for how to draw and compare items in the columns.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightingExplorerTableColumn.DataType.Checkbox">
      <summary>
        <para>Draws a checkbox, and handles comparison for sorting.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightingExplorerTableColumn.DataType.Color">
      <summary>
        <para>Draws a color box, and handles comparison for sorting.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightingExplorerTableColumn.DataType.Custom">
      <summary>
        <para>No drawing or comparison for sorting. Please use the delegates in the constructor to override these.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightingExplorerTableColumn.DataType.Enum">
      <summary>
        <para>Draws an enum field, and handles comparison for sorting.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightingExplorerTableColumn.DataType.Float">
      <summary>
        <para>Draws a float field, and handles comparison for sorting.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightingExplorerTableColumn.DataType.Int">
      <summary>
        <para>Draws an int field, and handles comparison for sorting.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightingExplorerTableColumn.DataType.Name">
      <summary>
        <para>Draws a name field, and handles comparison for sorting. Also implements a search field for filtering the rows.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.LightingExplorerTableColumn.OnGUIDelegate">
      <summary>
        <para>A delegate for how to draw the property.</para>
      </summary>
      <param name="r">The current rect for where it will be drawn in the TableView.</param>
      <param name="prop">The property that is specified using ‘propertyName’ in the constructor.</param>
      <param name="dependencies">An array of properties specified by using ‘dependencyIndicies’ in the constructor.</param>
    </member>
    <member name="T:UnityEditor.LightingWindowEnvironmentSection">
      <summary>
        <para>Base class for the Inspector that overrides the Environment section of the Lighting window.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightingWindowEnvironmentSection.OnDisable">
      <summary>
        <para>OnDisable is called when this Inspector override is not used anymore.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightingWindowEnvironmentSection.OnEnable">
      <summary>
        <para>OnEnable is called when this Inspector override is used.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightingWindowEnvironmentSection.OnInspectorGUI">
      <summary>
        <para>A callback that is called when drawing the Environment section in the Lighting window.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.LightmapBakeQuality">
      <summary>
        <para>Bake quality setting for LightmapEditorSettings.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapBakeQuality.High">
      <summary>
        <para>High quality bake for final renderings.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapBakeQuality.Low">
      <summary>
        <para>Low quality bake for preview renderings.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.LightmapEditorSettings">
      <summary>
        <para>This class is now obsolete. Use LightingSettings.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.aoExponentDirect">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.aoExponentDirect.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.aoExponentIndirect">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.aoExponentIndirect.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.aoMaxDistance">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.aoMaxDistance.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.bakeResolution">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.lightmapResolution.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.bounces">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.bounces.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.denoiserTypeAO">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.denoiserTypeAO.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.denoiserTypeDirect">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.denoiserTypeDirect.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.denoiserTypeIndirect">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.denoiserTypeIndirect.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.directSampleCount">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.directSampleCount.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.enableAmbientOcclusion">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.ao.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.environmentSampleCount">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.environmentSampleCount.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.exportTrainingData">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.exportTrainingData.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.filteringAtrousPositionSigmaAO">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.filteringAtrousPositionSigmaAO.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.filteringAtrousPositionSigmaDirect">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.filteringAtrousPositionSigmaDirect.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.filteringAtrousPositionSigmaIndirect">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.filteringAtrousPositionSigmaIndirect.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.filteringGaussRadiusAO">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.filteringGaussRadiusAO.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.filteringGaussRadiusDirect">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.filteringGaussRadiusDirect.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.filteringGaussRadiusIndirect">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.filteringGaussRadiusIndirect.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.filteringMode">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.filteringMode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.filterTypeAO">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.filterTypeAO.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.filterTypeDirect">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.filterTypeDirect.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.filterTypeIndirect">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.filterTypeIndirect.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.indirectSampleCount">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.indirectSampleCount.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.lightmapper">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.lightmapper.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.lightmapsMode">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.directionalityMode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.maxAtlasHeight">
      <summary>
        <para>This property is now obsolete. Use maxAtlasSize instead.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.maxAtlasSize">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.lightmapMaxSize.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.maxAtlasWidth">
      <summary>
        <para>This property is now obsolete. Use maxAtlasSize instead.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.mixedBakeMode">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.mixedBakeMode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.padding">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.lightmapPadding.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.prioritizeView">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.prioritizeView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.realtimeResolution">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.indirectResolution.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.reflectionCubemapCompression">
      <summary>
        <para>Determines how Unity will compress baked reflection cubemap.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.sampling">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.sampling.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.textureCompression">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.compressLightmaps.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapEditorSettings.trainingDataDestination">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.trainingDataDestination.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.LightmapEditorSettings.DenoiserType">
      <summary>
        <para>This enum is now obsolete. Use LightingSettings.DenoiserType.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapEditorSettings.DenoiserType.None">
      <summary>
        <para>This type is now obsolete. Use LightingSettings.DenoiserType.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapEditorSettings.DenoiserType.OpenImage">
      <summary>
        <para>This type is now obsolete. Use LightingSettings.DenoiserType.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapEditorSettings.DenoiserType.Optix">
      <summary>
        <para>This type is now obsolete. Use LightingSettings.DenoiserType.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapEditorSettings.DenoiserType.RadeonPro">
      <summary>
        <para>This type is now obsolete. Use LightingSettings.DenoiserType.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.LightmapEditorSettings.FilterMode">
      <summary>
        <para>This enum is now obsolete. Use LightingSettings.FilterMode.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapEditorSettings.FilterMode.Advanced">
      <summary>
        <para>This type is now obsolete. Use LightingSettings.FilterMode.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapEditorSettings.FilterMode.Auto">
      <summary>
        <para>This type is now obsolete. Use LightingSettings.FilterMode.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapEditorSettings.FilterMode.None">
      <summary>
        <para>This type is now obsolete. Use LightingSettings.FilterMode.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.LightmapEditorSettings.FilterType">
      <summary>
        <para>This enum is now obsolete. Use LightingSettings.FilterType.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapEditorSettings.FilterType.ATrous">
      <summary>
        <para>This type is now obsolete. Use LightingSettings.FilterType.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapEditorSettings.FilterType.Gaussian">
      <summary>
        <para>This type is now obsolete. Use LightingSettings.FilterType.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapEditorSettings.FilterType.None">
      <summary>
        <para>This type is now obsolete. Use LightingSettings.FilterType.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.LightmapEditorSettings.Lightmapper">
      <summary>
        <para>This enum is now obsolete. Use LightingSettings.Lightmapper.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapEditorSettings.Lightmapper.Enlighten">
      <summary>
        <para>This type is now obsolete. Use LightingSettings.Lightmapper.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapEditorSettings.Lightmapper.ProgressiveCPU">
      <summary>
        <para>This type is now obsolete. Use LightingSettings.Lightmapper.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapEditorSettings.Lightmapper.ProgressiveGPU">
      <summary>
        <para>This type is now obsolete. Use LightingSettings.Lightmapper.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.LightmapEditorSettings.Sampling">
      <summary>
        <para>This enum is now obsolete. Use LightingSettings.Sampling.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapEditorSettings.Sampling.Auto">
      <summary>
        <para>This type is now obsolete. Use LightingSettings.Sampling.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.LightmapEditorSettings.Sampling.Fixed">
      <summary>
        <para>This type is now obsolete. Use LightingSettings.Sampling.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.LightmapParameters">
      <summary>
        <para>Configures how Unity bakes lighting and can be assigned to a LightingSettings instance or asset.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.antiAliasingSamples">
      <summary>
        <para>The maximum number of times to supersample a texel to reduce aliasing.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.backFaceTolerance">
      <summary>
        <para>The percentage of rays shot from a ray origin that must hit front faces to be considered usable.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.bakedLightmapTag">
      <summary>
        <para>BakedLightmapTag is an integer that affects the assignment to baked lightmaps. Objects with different values for bakedLightmapTag are guaranteed to not be assigned to the same lightmap even if the other baking parameters are the same.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.blurRadius">
      <summary>
        <para>The radius (in texels) of the post-processing filter that blurs baked direct lighting.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.clusterResolution">
      <summary>
        <para>Controls the resolution at which Enlighten Realtime Global Illumination stores and can transfer input light.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.directLightQuality">
      <summary>
        <para>The number of rays used for lights with an area. Allows for accurate soft shadowing.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.irradianceBudget">
      <summary>
        <para>The amount of data used for Enlighten Realtime Global Illumination texels. Specifies how detailed view of the Scene a texel has. Small values mean more averaged out lighting.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.irradianceQuality">
      <summary>
        <para>The number of rays to cast for computing irradiance form factors.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.isTransparent">
      <summary>
        <para>If enabled, the object appears transparent during GlobalIllumination lighting calculations.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.limitLightmapCount">
      <summary>
        <para>If enabled, objects sharing the same lightmap parameters will be packed into LightmapParameters.maxLightmapCount lightmaps.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.maxLightmapCount">
      <summary>
        <para>The maximum number of lightmaps created for objects sharing the same lightmap parameters. This property is ignored if LightmapParameters.limitLightmapCount is false.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.modellingTolerance">
      <summary>
        <para>Maximum size of gaps that can be ignored for GI (multiplier on pixel size).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.pushoff">
      <summary>
        <para>The distance to offset the ray origin from the geometry when performing ray tracing, in modelling units. Unity applies the offset to all baked lighting: direct lighting, indirect lighting, environment lighting and ambient occlusion.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.resolution">
      <summary>
        <para>The texel resolution per meter used for real-time lightmaps. This value is multiplied by LightingSettings.indirectResolution.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.stitchEdges">
      <summary>
        <para>Whether pairs of edges should be stitched together.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.systemTag">
      <summary>
        <para>System tag is an integer identifier. It lets you force an object into a different Enlighten Realtime Global Illumination system even though all the other parameters are the same.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.AOAntiAliasingSamples">
      <summary>
        <para>The maximum number of times to supersample a texel to reduce aliasing in AO.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LightmapParameters.AOQuality">
      <summary>
        <para>The number of rays to cast for computing ambient occlusion.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LightmapParameters.AssignToLightingSettings(UnityEngine.LightingSettings)">
      <summary>
        <para>Assignes itself to a LightingSettings instance or asset.</para>
      </summary>
      <param name="lightingSettings">
      </param>
    </member>
    <member name="M:UnityEditor.LightmapParameters.GetLightmapParametersForLightingSettings(UnityEngine.LightingSettings)">
      <summary>
        <para>Returns the assigned LightmapParameters for the specified LightingSettings.</para>
      </summary>
      <param name="lightingSettings">
      </param>
    </member>
    <member name="M:UnityEditor.LightmapParameters.SetLightmapParametersForLightingSettings(UnityEditor.LightmapParameters,UnityEngine.LightingSettings)">
      <summary>
        <para>Sets the LightmapParameters for the specified LightingSettings.</para>
      </summary>
      <param name="parameters">
      </param>
      <param name="lightingSettings">
      </param>
    </member>
    <member name="T:UnityEditor.Lightmapping">
      <summary>
        <para>Allows to control the lightmapping job.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Lightmapping.bakeCompleted(System.Action)">
      <summary>
        <para>Event which is called when bake job is completed. Only called when LightingSettings.autoGenerate is set to false.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="P:UnityEditor.Lightmapping.bakedGI">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.bakedGI.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Lightmapping.bakeStarted(System.Action)">
      <summary>
        <para>Event which is called when a bake is started. Only called when LightingSettings.autoGenerate is set to false.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="P:UnityEditor.Lightmapping.bounceBoost">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.albedoBoost.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Lightmapping.buildProgress">
      <summary>
        <para>Returns the current lightmapping build progress or 0 if Lightmapping.isRunning is false.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Lightmapping.completed">
      <summary>
        <para>Delegate which is called when bake job is completed.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Lightmapping.giWorkflowMode">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.autoGenerate.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Lightmapping.indirectOutputScale">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.indirectScale.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Lightmapping.isRunning">
      <summary>
        <para>Returns true when the bake job is running, false otherwise (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Lightmapping.lightingDataAsset">
      <summary>
        <para>The lighting data asset used by the active Scene.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Lightmapping.lightingDataAssetCleared(System.Action)">
      <summary>
        <para>Event which is called when a LightingData asset is removed from the project.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="?:UnityEditor.Lightmapping.lightingDataCleared(System.Action)">
      <summary>
        <para>Event which is called when baked Global Illumination data is cleared from the scene and from renderers.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="?:UnityEditor.Lightmapping.lightingDataUpdated(System.Action)">
      <summary>
        <para>Event which is called when any lighting data is updated as part of the GI backing process.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="P:UnityEditor.Lightmapping.lightingSettings">
      <summary>
        <para>The LightingSettings that will be used for the current Scene. Will throw an exception if it is null.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Lightmapping.lightingSettingsDefaults">
      <summary>
        <para>Default LightingSettings that Unity uses for Scenes where lightingSettings is not assigned. (Read only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Lightmapping.realtimeGI">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.realtimeGI.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Lightmapping.started(UnityEditor.Lightmapping/OnStartedFunction)">
      <summary>
        <para>Delegate which is called when bake job is started.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="M:UnityEditor.Lightmapping.Bake">
      <summary>
        <para>Starts a synchronous bake job.</para>
      </summary>
      <returns>
        <para>Returns true if the bake ran successfully. Will return false and print a warning message if it's not possible to start the bake.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Lightmapping.BakeAsync">
      <summary>
        <para>Starts an asynchronous bake job.</para>
      </summary>
      <returns>
        <para>Returns true if the bake was successfully started. Will return false and print a warning message if it's not possible to start the bake.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Lightmapping.BakeLightProbesOnly">
      <summary>
        <para>Starts a synchronous bake job, but only bakes light probes.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Lightmapping.BakeLightProbesOnlyAsync">
      <summary>
        <para>Starts an asynchronous bake job, but only bakes light probes.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Lightmapping.BakeMultipleScenes(System.String[])">
      <summary>
        <para>Bakes an array of Scenes.</para>
      </summary>
      <param name="paths">The path of the Scenes that should be baked.</param>
    </member>
    <member name="M:UnityEditor.Lightmapping.BakeReflectionProbe(UnityEngine.ReflectionProbe,System.String)">
      <summary>
        <para>Starts a synchronous bake job for the probe.</para>
      </summary>
      <param name="probe">Target probe.</param>
      <param name="path">The location where cubemap will be saved.</param>
      <returns>
        <para>Returns true if baking was succesful.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Lightmapping.BakeSelected">
      <summary>
        <para>Starts a synchronous bake job for the selected objects.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Lightmapping.BakeSelectedAsync">
      <summary>
        <para>Starts an asynchronous bake job for the selected objects.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Lightmapping.Cancel">
      <summary>
        <para>Cancels the currently running asynchronous bake job.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Lightmapping.Clear">
      <summary>
        <para>Deletes all runtime data for the currently loaded Scenes.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Lightmapping.ClearDiskCache">
      <summary>
        <para>Clears the cache used by lightmaps, reflection probes and default reflection.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Lightmapping.ClearLightingDataAsset">
      <summary>
        <para>For the currently loaded Scenes, this method deletes the Lighting Data Asset and any linked lightmaps and Reflection Probe assets.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Lightmapping.ForceStop">
      <summary>
        <para>Force the Progressive Path Tracer to stop baking and use the computed results as they are.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Lightmapping.GetLightingSettingsForScene(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Gets the LightingSettings object of a SceneManagement.Scene object.</para>
      </summary>
      <param name="scene">The SceneManagement.Scene object.</param>
      <returns>
        <para>The LightingSettings object if Scene.isLoaded is true. Otherwise returns null.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Lightmapping.GetTerrainGIChunks(UnityEngine.Terrain,System.Int32&amp;,System.Int32&amp;)">
      <summary>
        <para>Get how many chunks the terrain is divided into for GI baking.</para>
      </summary>
      <param name="terrain">The terrain.</param>
      <param name="numChunksX">Number of chunks in terrain width.</param>
      <param name="numChunksY">Number of chunks in terrain length.</param>
    </member>
    <member name="T:UnityEditor.Lightmapping.GIWorkflowMode">
      <summary>
        <para>Workflow mode for lightmap baking. Default is Iterative.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Lightmapping.GIWorkflowMode.Iterative">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.autoGenerate.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Lightmapping.GIWorkflowMode.Legacy">
      <summary>
        <para>Deprecated 4.x lightmapping support.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Lightmapping.GIWorkflowMode.OnDemand">
      <summary>
        <para>This property is now obsolete. Use LightingSettings.autoGenerate.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Lightmapping.OnCompletedFunction">
      <summary>
        <para>Delegate used by Lightmapping.completed callback.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Lightmapping.OnStartedFunction">
      <summary>
        <para>Delegate used by Lightmapping.started callback.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Lightmapping.SetLightingSettingsForScene(UnityEngine.SceneManagement.Scene,UnityEngine.LightingSettings)">
      <summary>
        <para>Applies the settings specified in the LightingSettings object to the SceneManagement.Scene object.</para>
      </summary>
      <param name="scene">The SceneManagement.Scene object. If the Scene.isLoaded property is false, the method does not apply the settings.</param>
      <param name="lightingSettings">The LightingSettings object.</param>
    </member>
    <member name="M:UnityEditor.Lightmapping.SetLightingSettingsForScenes(UnityEngine.SceneManagement.Scene[],UnityEngine.LightingSettings)">
      <summary>
        <para>Applies the settings specified in the LightingSettings object to an array of SceneManagement.Scene objects.</para>
      </summary>
      <param name="scenes">The array of SceneManagement.Scene objects. If the Scene.isLoaded property is false on a Scene object, the method does not apply the settings to that object.</param>
      <param name="lightingSettings">The LightingSettings object.</param>
    </member>
    <member name="M:UnityEditor.Lightmapping.Tetrahedralize(UnityEngine.Vector3[],System.Int32[]&amp;,UnityEngine.Vector3[]&amp;)">
      <summary>
        <para>Calculates tetrahderons from positions using Delaunay Tetrahedralization.</para>
      </summary>
      <param name="positions">An array of Light Probe positions.</param>
      <param name="outIndices">An array that Unity populates with updated Light Probe indices.</param>
      <param name="outPositions">An array that Unity populates with updated Light Probe positions.</param>
    </member>
    <member name="M:UnityEditor.Lightmapping.TryGetLightingSettings(UnityEngine.LightingSettings&amp;)">
      <summary>
        <para>Fetches the Lighting Settings for the current Scene. Will return false if it is null.</para>
      </summary>
      <param name="settings">See Lightmapping.lightingSettings.</param>
      <returns>
        <para>Returns true if there is an object, and false if it isn't.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Localization.Editor.LocalizationGroup">
      <summary>
        <para>While the instance alive, Localization System uses the dictionary for localization.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Localization.Editor.LocalizationGroup.locGroupName">
      <summary>
        <para>Accessor of the current group name.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Localization.Editor.LocalizationGroup.#ctor">
      <summary>
        <para>Set the current localization group.</para>
      </summary>
      <param name="behaviour">Use the assembly the behaviour belongs to.</param>
      <param name="type">Use the assembly the type belongs to.</param>
      <param name="obj">Use the assembly the obj belongs to.</param>
    </member>
    <member name="M:UnityEditor.Localization.Editor.LocalizationGroup.#ctor(UnityEngine.Behaviour)">
      <summary>
        <para>Set the current localization group.</para>
      </summary>
      <param name="behaviour">Use the assembly the behaviour belongs to.</param>
      <param name="type">Use the assembly the type belongs to.</param>
      <param name="obj">Use the assembly the obj belongs to.</param>
    </member>
    <member name="M:UnityEditor.Localization.Editor.LocalizationGroup.#ctor(System.Type)">
      <summary>
        <para>Set the current localization group.</para>
      </summary>
      <param name="behaviour">Use the assembly the behaviour belongs to.</param>
      <param name="type">Use the assembly the type belongs to.</param>
      <param name="obj">Use the assembly the obj belongs to.</param>
    </member>
    <member name="M:UnityEditor.Localization.Editor.LocalizationGroup.#ctor(System.Object)">
      <summary>
        <para>Set the current localization group.</para>
      </summary>
      <param name="behaviour">Use the assembly the behaviour belongs to.</param>
      <param name="type">Use the assembly the type belongs to.</param>
      <param name="obj">Use the assembly the obj belongs to.</param>
    </member>
    <member name="M:UnityEditor.Localization.Editor.LocalizationGroup.Dispose">
      <summary>
        <para>Since the LocalizationGroup is IDisposable, Dispose can be called explicitly.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.LocalizationAttribute">
      <summary>
        <para>An attribute to the assembly for Localization.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LocalizationAttribute.#ctor(System.String)">
      <summary>
        <para>Default constructor.</para>
      </summary>
      <param name="locGroupName">
      </param>
    </member>
    <member name="T:UnityEditor.LocalizationGroup">
      <summary>
        <para>This provides an auto dispose Localization system. This can be called recursively.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.LocalizationGroup.locGroupName">
      <summary>
        <para>A current group name for the localization.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LocalizationGroup.#ctor">
      <summary>
        <para>Default constructor.</para>
      </summary>
      <param name="behaviour">
      </param>
      <param name="type">
      </param>
      <param name="obj">
      </param>
    </member>
    <member name="M:UnityEditor.LocalizationGroup.#ctor(UnityEngine.Behaviour)">
      <summary>
        <para>Default constructor.</para>
      </summary>
      <param name="behaviour">
      </param>
      <param name="type">
      </param>
      <param name="obj">
      </param>
    </member>
    <member name="M:UnityEditor.LocalizationGroup.#ctor(System.Type)">
      <summary>
        <para>Default constructor.</para>
      </summary>
      <param name="behaviour">
      </param>
      <param name="type">
      </param>
      <param name="obj">
      </param>
    </member>
    <member name="M:UnityEditor.LocalizationGroup.#ctor(System.Object)">
      <summary>
        <para>Default constructor.</para>
      </summary>
      <param name="behaviour">
      </param>
      <param name="type">
      </param>
      <param name="obj">
      </param>
    </member>
    <member name="M:UnityEditor.LocalizationGroup.Dispose">
      <summary>
        <para>Dispose current state.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.LODUtility">
      <summary>
        <para>LOD Utility Helpers.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.LODUtility.CalculateLODGroupBoundingBox(UnityEngine.LODGroup)">
      <summary>
        <para>Recalculate the bounding region for the given LODGroup.</para>
      </summary>
      <param name="group">
      </param>
    </member>
    <member name="T:UnityEditor.MacFullscreenMode">
      <summary>
        <para>Mac fullscreen mode.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MacFullscreenMode.FullscreenWindow">
      <summary>
        <para>Fullscreen window.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MacFullscreenMode.FullscreenWindowWithDockAndMenuBar">
      <summary>
        <para>Fullscreen window with Dock and Menu bar.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ManagedReferenceMissingType">
      <summary>
        <para>Represents a managed reference object that has a missing type.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ManagedReferenceMissingType.assemblyName">
      <summary>
        <para>Name of the Assembly where Unity expects to find the class. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ManagedReferenceMissingType.className">
      <summary>
        <para>Name of the class that is needed to instantiate the Managed Reference. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ManagedReferenceMissingType.namespaceName">
      <summary>
        <para>Namespace where Unity expects to find the class.  Namespaces are optional so this might contain an empty string. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ManagedReferenceMissingType.referenceId">
      <summary>
        <para>The Managed Reference ID. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ManagedReferenceMissingType.serializedData">
      <summary>
        <para>String summarizing the content of the serialized data of the missing object. (Read Only)</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ManagedStrippingLevel">
      <summary>
        <para>Defines how aggressively Unity strips unused managed (C#) code.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ManagedStrippingLevel.Disabled">
      <summary>
        <para>Do not strip any code.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ManagedStrippingLevel.High">
      <summary>
        <para>UnityLinker will strip as much as possible. This will further reduce code size beyond what Medium can achieve. However, this additional reduction may come with tradeoffs. Possible side effects may include, managed code debugging of some methods may no longer work.  You may need to maintain a custom link.xml file, and some reflection code paths may not behave the same.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ManagedStrippingLevel.Low">
      <summary>
        <para>Remove unreachable managed code to reduce build size and Mono/IL2CPP build times.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ManagedStrippingLevel.Medium">
      <summary>
        <para>Run UnityLinker in a less conservative mode than Low. This will further reduce code size beyond what Low can achieve. However, this additional reduction may come with tradeoffs. Possible side effects may include, having to maintain a custom link.xml file, and some reflection code paths may not behave the same.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ManagedStrippingLevel.Minimal">
      <summary>
        <para>The class libraries, UnityEngine, and Windows Runtime assemblies will be stripped. All other assemblies are copied.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MaterialEditor">
      <summary>
        <para>The Unity Material Editor.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MaterialEditor.customShaderGUI">
      <summary>
        <para>Returns the custom ShaderGUI implemented by the shader.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MaterialEditor.isVisible">
      <summary>
        <para>Is the current material expanded.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MaterialEditor.kMiniTextureFieldLabelIndentLevel">
      <summary>
        <para>Useful for indenting shader properties that need the same indent as mini texture field.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialEditor.ApplyMaterialPropertyDrawers(UnityEngine.Material)">
      <summary>
        <para>Apply initial MaterialPropertyDrawer values.</para>
      </summary>
      <param name="material">
      </param>
      <param name="targets">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.ApplyMaterialPropertyDrawers(UnityEngine.Object[])">
      <summary>
        <para>Apply initial MaterialPropertyDrawer values.</para>
      </summary>
      <param name="material">
      </param>
      <param name="targets">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.Awake">
      <summary>
        <para>Called when the Editor is woken up.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialEditor.BeginAnimatedCheck(UnityEngine.Rect,UnityEditor.MaterialProperty)">
      <summary>
        <para>Creates a Property wrapper, useful for making regular GUI controls work with MaterialProperty.</para>
      </summary>
      <param name="totalPosition">Rectangle on the screen to use for the control, including label if applicable.</param>
      <param name="prop">The MaterialProperty to use for the control.</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.BeginAnimatedCheck(UnityEditor.MaterialProperty)">
      <summary>
        <para>Creates a Property wrapper, useful for making regular GUI controls work with MaterialProperty.</para>
      </summary>
      <param name="totalPosition">Rectangle on the screen to use for the control, including label if applicable.</param>
      <param name="prop">The MaterialProperty to use for the control.</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.ColorProperty(UnityEngine.Rect,UnityEditor.MaterialProperty,System.String)">
      <summary>
        <para>Draw a property field for a color shader property.</para>
      </summary>
      <param name="label">Label for the property.</param>
      <param name="position">
      </param>
      <param name="prop">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.ColorProperty(UnityEditor.MaterialProperty,System.String)">
      <summary>
        <para>Draw a property field for a color shader property.</para>
      </summary>
      <param name="label">Label for the property.</param>
      <param name="position">
      </param>
      <param name="prop">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.DefaultPreviewGUI(UnityEngine.Rect,UnityEngine.GUIStyle)">
      <summary>
        <para>Default handling of preview area for materials.</para>
      </summary>
      <param name="r">
      </param>
      <param name="background">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.DefaultPreviewSettingsGUI">
      <summary>
        <para>Default toolbar for material preview area.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialEditor.DefaultShaderProperty(UnityEditor.MaterialProperty,System.String)">
      <summary>
        <para>Handles UI for one shader property ignoring any custom drawers.</para>
      </summary>
      <param name="prop">
      </param>
      <param name="label">
      </param>
      <param name="position">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.DefaultShaderProperty(UnityEngine.Rect,UnityEditor.MaterialProperty,System.String)">
      <summary>
        <para>Handles UI for one shader property ignoring any custom drawers.</para>
      </summary>
      <param name="prop">
      </param>
      <param name="label">
      </param>
      <param name="position">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.DoubleSidedGIField">
      <summary>
        <para>Display UI for editing a material's Double Sided Global Illumination setting.
Returns true if the UI is indeed displayed i.e. the material supports the Double Sided Global Illumination setting.
+See Also: Material.doubleSidedGI.</para>
      </summary>
      <returns>
        <para>True if the UI is displayed, false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.EmissionEnabledProperty">
      <summary>
        <para>This function will draw the UI for controlling whether emission is enabled or not on a material.</para>
      </summary>
      <returns>
        <para>Returns true if enabled, or false if disabled or mixed due to multi-editing.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.EnableInstancingField">
      <summary>
        <para>Display UI for editing material's render queue setting.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialEditor.EnableInstancingField(UnityEngine.Rect)">
      <summary>
        <para>Display UI for editing material's render queue setting within the specified rect.</para>
      </summary>
      <param name="r">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.EndAnimatedCheck">
      <summary>
        <para>Ends a Property wrapper started with BeginAnimatedCheck.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialEditor.FixupEmissiveFlag(UnityEngine.Color,UnityEngine.MaterialGlobalIlluminationFlags)">
      <summary>
        <para>Returns a properly set global illlumination flag based on the passed in flag and the given color.</para>
      </summary>
      <param name="col">Emission color.</param>
      <param name="flags">Current global illumination flag.</param>
      <returns>
        <para>The fixed up flag.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.FixupEmissiveFlag(UnityEngine.Material)">
      <summary>
        <para>Properly sets up the globalIllumination flag on the given Material depending on the current flag's state and the material's emission property.</para>
      </summary>
      <param name="mat">The material to be fixed up.</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.FloatProperty(UnityEditor.MaterialProperty,System.String)">
      <summary>
        <para>Draw a property field for a float shader property.</para>
      </summary>
      <param name="label">Label for the property.</param>
      <param name="prop">
      </param>
      <param name="position">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.FloatProperty(UnityEngine.Rect,UnityEditor.MaterialProperty,System.String)">
      <summary>
        <para>Draw a property field for a float shader property.</para>
      </summary>
      <param name="label">Label for the property.</param>
      <param name="prop">
      </param>
      <param name="position">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.GetDefaultPropertyHeight(UnityEditor.MaterialProperty)">
      <summary>
        <para>Calculate height needed for the property, ignoring custom drawers.</para>
      </summary>
      <param name="prop">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.GetFlexibleRectBetweenFieldAndRightEdge(UnityEngine.Rect)">
      <summary>
        <para>Utility method for GUI layouting ShaderGUI. Used e.g for the rect after a left aligned Color field.</para>
      </summary>
      <param name="r">Field Rect.</param>
      <returns>
        <para>A sub rect of the input Rect.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.GetFlexibleRectBetweenLabelAndField(UnityEngine.Rect)">
      <summary>
        <para>Utility method for GUI layouting ShaderGUI.</para>
      </summary>
      <param name="r">Field Rect.</param>
      <returns>
        <para>A sub rect of the input Rect.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.GetLeftAlignedFieldRect(UnityEngine.Rect)">
      <summary>
        <para>Utility method for GUI layouting ShaderGUI.</para>
      </summary>
      <param name="r">Field Rect.</param>
      <returns>
        <para>A sub rect of the input Rect.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.GetMaterialProperties(UnityEngine.Object[])">
      <summary>
        <para>Get shader property information of the materials you pass in.</para>
      </summary>
      <param name="mats">The selected materials.</param>
      <returns>
        <para>Returns the material properties.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.GetMaterialProperty(UnityEngine.Object[],System.String)">
      <summary>
        <para>Get information about a single shader property.</para>
      </summary>
      <param name="mats">The selected materials.</param>
      <param name="name">Property name.</param>
      <param name="propertyIndex">Property index.</param>
      <returns>
        <para>Returns the property at the specified index.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.GetMaterialProperty(UnityEngine.Object[],System.Int32)">
      <summary>
        <para>Get information about a single shader property.</para>
      </summary>
      <param name="mats">The selected materials.</param>
      <param name="name">Property name.</param>
      <param name="propertyIndex">Property index.</param>
      <returns>
        <para>Returns the property at the specified index.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.GetMaterialPropertyNames(UnityEngine.Object[])">
      <summary>
        <para>Gets the shader property names of the materials you pass in.</para>
      </summary>
      <param name="mats">The selected materials.</param>
      <returns>
        <para>Returns the material property names.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.GetPropertyHeight(UnityEditor.MaterialProperty)">
      <summary>
        <para>Calculate height needed for the property.</para>
      </summary>
      <param name="prop">
      </param>
      <param name="label">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.GetPropertyHeight(UnityEditor.MaterialProperty,System.String)">
      <summary>
        <para>Calculate height needed for the property.</para>
      </summary>
      <param name="prop">
      </param>
      <param name="label">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.GetRectAfterLabelWidth(UnityEngine.Rect)">
      <summary>
        <para>Utility method for GUI layouting ShaderGUI. This is the rect after the label which can be used for multiple properties. The input rect can be fetched by calling: EditorGUILayout.GetControlRect.</para>
      </summary>
      <param name="r">Line Rect.</param>
      <returns>
        <para>A sub rect of the input Rect.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.GetRightAlignedFieldRect(UnityEngine.Rect)">
      <summary>
        <para>Utility method for GUI layouting ShaderGUI.</para>
      </summary>
      <param name="r">Field Rect.</param>
      <returns>
        <para>A sub rect of the input Rect.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.GetTextureOffset(System.String,System.Boolean&amp;,System.Boolean&amp;)">
      <summary>
        <para>Get the value of a given texture offset for a given texture property.</para>
      </summary>
      <param name="propertyName">Name of the texture property that you wish to examine the offset of.</param>
      <param name="hasMixedValueX">Does the x offset have multiple values?</param>
      <param name="hasMixedValueY">Does the y offset have multiple values?</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.GetTexturePropertyCustomArea(UnityEngine.Rect)">
      <summary>
        <para>Returns the free rect below the label and before the large thumb object field. Is used for e.g. tiling and offset properties.</para>
      </summary>
      <param name="position">The total rect of the texture property.</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.GetTextureScale(System.String,System.Boolean&amp;,System.Boolean&amp;)">
      <summary>
        <para>Get the value of a given texture scale for a given texture property.</para>
      </summary>
      <param name="propertyName">Name of the texture property that you wish to examine the scale of.</param>
      <param name="hasMixedValueX">Does the x scale have multiple values?</param>
      <param name="hasMixedValueY">Does the y scale have multiple values?</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.HasPreviewGUI">
      <summary>
        <para>Can this component be Previewed in its current state?</para>
      </summary>
      <returns>
        <para>True if this component can be Previewed in its current state.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.HelpBoxWithButton(UnityEngine.GUIContent,UnityEngine.GUIContent)">
      <summary>
        <para>Make a help box with a message and button. Returns true, if button was pressed.</para>
      </summary>
      <param name="messageContent">The message text.</param>
      <param name="buttonContent">The button text.</param>
      <returns>
        <para>Returns true, if button was pressed.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.IntegerProperty(UnityEditor.MaterialProperty,System.String)">
      <summary>
        <para>Draw a property field for an integer shader property.</para>
      </summary>
      <param name="label">Label for the property.</param>
      <param name="prop">
      </param>
      <param name="position">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.IntegerProperty(UnityEngine.Rect,UnityEditor.MaterialProperty,System.String)">
      <summary>
        <para>Draw a property field for an integer shader property.</para>
      </summary>
      <param name="label">Label for the property.</param>
      <param name="prop">
      </param>
      <param name="position">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.IsInstancingEnabled">
      <summary>
        <para>Determines whether the Enable Instancing checkbox is checked.</para>
      </summary>
      <returns>
        <para>Returns true if Enable Instancing checkbox is checked.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.LightmapEmissionFlagsProperty(System.Int32,System.Boolean)">
      <summary>
        <para>Draws the UI for setting the global illumination flag of a material.</para>
      </summary>
      <param name="indent">Level of indentation for the property.</param>
      <param name="enabled">True if emission is enabled for the material, false otherwise.</param>
      <param name="ignoreEmissionColor">True if property should always be displayed.</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.LightmapEmissionFlagsProperty(System.Int32,System.Boolean,System.Boolean)">
      <summary>
        <para>Draws the UI for setting the global illumination flag of a material.</para>
      </summary>
      <param name="indent">Level of indentation for the property.</param>
      <param name="enabled">True if emission is enabled for the material, false otherwise.</param>
      <param name="ignoreEmissionColor">True if property should always be displayed.</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.LightmapEmissionProperty">
      <summary>
        <para>This function will draw the UI for the lightmap emission property. (None, Realtime, baked)

See Also: MaterialLightmapFlags.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialEditor.LightmapEmissionProperty">
      <summary>
        <para>This function will draw the UI for the lightmap emission property. (None, Realtime, baked)

See Also: MaterialLightmapFlags.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialEditor.LightmapEmissionProperty">
      <summary>
        <para>This function will draw the UI for the lightmap emission property. (None, Realtime, baked)

See Also: MaterialLightmapFlags.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialEditor.OnDisable">
      <summary>
        <para>Called when the editor is disabled, if overridden please call the base OnDisable() to ensure that the material inspector is set up properly.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialEditor.OnEnable">
      <summary>
        <para>Called when the editor is enabled, if overridden please call the base OnEnable() to ensure that the material inspector is set up properly.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialEditor.OnInspectorGUI">
      <summary>
        <para>Implement specific MaterialEditor GUI code here. If you want to simply extend the existing editor call the base OnInspectorGUI () before doing any custom GUI code.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialEditor.OnPreviewGUI(UnityEngine.Rect,UnityEngine.GUIStyle)">
      <summary>
        <para>Custom preview for Image component.</para>
      </summary>
      <param name="r">Rectangle in which to draw the preview.</param>
      <param name="background">Background image.</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.OnShaderChanged">
      <summary>
        <para>A callback that is invoked when a Material's Shader is changed in the Inspector.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialEditor.PropertiesChanged">
      <summary>
        <para>Whenever a material property is changed call this function. This will rebuild the inspector and validate the properties.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialEditor.PropertiesDefaultGUI(UnityEditor.MaterialProperty[])">
      <summary>
        <para>Default rendering of shader properties.</para>
      </summary>
      <param name="props">Array of material properties.</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.PropertiesGUI">
      <summary>
        <para>Render the standard material properties. This method will either render properties using a ShaderGUI instance if found otherwise it uses PropertiesDefaultGUI.</para>
      </summary>
      <returns>
        <para>Returns true if any value was changed.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.RangeProperty(UnityEditor.MaterialProperty,System.String)">
      <summary>
        <para>Draw a range slider for a range shader property.</para>
      </summary>
      <param name="label">Label for the property.</param>
      <param name="prop">The property to edit.</param>
      <param name="position">Position and size of the range slider control.</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.RangeProperty(UnityEngine.Rect,UnityEditor.MaterialProperty,System.String)">
      <summary>
        <para>Draw a range slider for a range shader property.</para>
      </summary>
      <param name="label">Label for the property.</param>
      <param name="prop">The property to edit.</param>
      <param name="position">Position and size of the range slider control.</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.RegisterPropertyChangeUndo(System.String)">
      <summary>
        <para>Call this when you change a material property. It will add an undo for the action.</para>
      </summary>
      <param name="label">Undo Label.</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.RenderQueueField">
      <summary>
        <para>Display UI for editing material's render queue setting.</para>
      </summary>
      <param name="r">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.RenderQueueField(UnityEngine.Rect)">
      <summary>
        <para>Display UI for editing material's render queue setting.</para>
      </summary>
      <param name="r">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.RequiresConstantRepaint">
      <summary>
        <para>Does this edit require to be repainted constantly in its current state?</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialEditor.SetDefaultGUIWidths">
      <summary>
        <para>Set EditorGUIUtility.fieldWidth and labelWidth to the default values that PropertiesGUI uses.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialEditor.SetShader(UnityEngine.Shader)">
      <summary>
        <para>Set the shader of the material.</para>
      </summary>
      <param name="shader">Shader to set.</param>
      <param name="registerUndo">Should undo be registered.</param>
      <param name="newShader">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.SetShader(UnityEngine.Shader,System.Boolean)">
      <summary>
        <para>Set the shader of the material.</para>
      </summary>
      <param name="shader">Shader to set.</param>
      <param name="registerUndo">Should undo be registered.</param>
      <param name="newShader">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.SetTextureOffset(System.String,UnityEngine.Vector2,System.Int32)">
      <summary>
        <para>Set the offset of a given texture property.</para>
      </summary>
      <param name="propertyName">Name of the texture property that you wish to modify the offset of.</param>
      <param name="value">Scale to set.</param>
      <param name="coord">Set the x or y component of the offset (0 for x, 1 for y).</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.SetTextureScale(System.String,UnityEngine.Vector2,System.Int32)">
      <summary>
        <para>Set the scale of a given texture property.</para>
      </summary>
      <param name="propertyName">Name of the texture property that you wish to modify the scale of.</param>
      <param name="value">Scale to set.</param>
      <param name="coord">Set the x or y component of the scale (0 for x, 1 for y).</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.ShaderProperty(UnityEditor.MaterialProperty,System.String)">
      <summary>
        <para>Handes UI for one shader property.</para>
      </summary>
      <param name="prop">
      </param>
      <param name="label">
      </param>
      <param name="position">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.ShaderProperty(UnityEngine.Rect,UnityEditor.MaterialProperty,System.String)">
      <summary>
        <para>Handes UI for one shader property.</para>
      </summary>
      <param name="prop">
      </param>
      <param name="label">
      </param>
      <param name="position">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TextureCompatibilityWarning(UnityEditor.MaterialProperty)">
      <summary>
        <para>Checks if particular property has incorrect type of texture specified by the material, displays appropriate warning and suggests the user to automatically fix the problem.</para>
      </summary>
      <param name="prop">The texture property to check and display warning for, if necessary.</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TextureProperty(UnityEditor.MaterialProperty,System.String)">
      <summary>
        <para>Draw a property field for a texture shader property.</para>
      </summary>
      <param name="label">Label for the field.</param>
      <param name="scaleOffset">Draw scale / offset.</param>
      <param name="prop">
      </param>
      <param name="position">
      </param>
      <param name="tooltip">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TextureProperty(UnityEditor.MaterialProperty,System.String,System.Boolean)">
      <summary>
        <para>Draw a property field for a texture shader property.</para>
      </summary>
      <param name="label">Label for the field.</param>
      <param name="scaleOffset">Draw scale / offset.</param>
      <param name="prop">
      </param>
      <param name="position">
      </param>
      <param name="tooltip">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TextureProperty(UnityEngine.Rect,UnityEditor.MaterialProperty,System.String)">
      <summary>
        <para>Draw a property field for a texture shader property.</para>
      </summary>
      <param name="label">Label for the field.</param>
      <param name="scaleOffset">Draw scale / offset.</param>
      <param name="prop">
      </param>
      <param name="position">
      </param>
      <param name="tooltip">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TextureProperty(UnityEngine.Rect,UnityEditor.MaterialProperty,System.String,System.Boolean)">
      <summary>
        <para>Draw a property field for a texture shader property.</para>
      </summary>
      <param name="label">Label for the field.</param>
      <param name="scaleOffset">Draw scale / offset.</param>
      <param name="prop">
      </param>
      <param name="position">
      </param>
      <param name="tooltip">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TextureProperty(UnityEngine.Rect,UnityEditor.MaterialProperty,System.String,System.String,System.Boolean)">
      <summary>
        <para>Draw a property field for a texture shader property.</para>
      </summary>
      <param name="label">Label for the field.</param>
      <param name="scaleOffset">Draw scale / offset.</param>
      <param name="prop">
      </param>
      <param name="position">
      </param>
      <param name="tooltip">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TexturePropertyMiniThumbnail(UnityEngine.Rect,UnityEditor.MaterialProperty,System.String,System.String)">
      <summary>
        <para>Draw a property field for a texture shader property that only takes up a single line height.</para>
      </summary>
      <param name="position">Rect that this control should be rendered in.</param>
      <param name="label">Label for the field.</param>
      <param name="prop">
      </param>
      <param name="tooltip">
      </param>
      <returns>
        <para>Returns total height used by this control.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TexturePropertySingleLine(UnityEngine.GUIContent,UnityEditor.MaterialProperty)">
      <summary>
        <para>Method for showing a texture property control with additional inlined properites.</para>
      </summary>
      <param name="label">The label used for the texture property.</param>
      <param name="textureProp">The texture property.</param>
      <param name="extraProperty1">First optional property inlined after the texture property.</param>
      <param name="extraProperty2">Second optional property inlined after the extraProperty1.</param>
      <returns>
        <para>Returns the Rect used.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TexturePropertySingleLine(UnityEngine.GUIContent,UnityEditor.MaterialProperty,UnityEditor.MaterialProperty)">
      <summary>
        <para>Method for showing a texture property control with additional inlined properites.</para>
      </summary>
      <param name="label">The label used for the texture property.</param>
      <param name="textureProp">The texture property.</param>
      <param name="extraProperty1">First optional property inlined after the texture property.</param>
      <param name="extraProperty2">Second optional property inlined after the extraProperty1.</param>
      <returns>
        <para>Returns the Rect used.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TexturePropertySingleLine(UnityEngine.GUIContent,UnityEditor.MaterialProperty,UnityEditor.MaterialProperty,UnityEditor.MaterialProperty)">
      <summary>
        <para>Method for showing a texture property control with additional inlined properites.</para>
      </summary>
      <param name="label">The label used for the texture property.</param>
      <param name="textureProp">The texture property.</param>
      <param name="extraProperty1">First optional property inlined after the texture property.</param>
      <param name="extraProperty2">Second optional property inlined after the extraProperty1.</param>
      <returns>
        <para>Returns the Rect used.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TexturePropertyTwoLines(UnityEngine.GUIContent,UnityEditor.MaterialProperty,UnityEditor.MaterialProperty,UnityEngine.GUIContent,UnityEditor.MaterialProperty)">
      <summary>
        <para>Method for showing a compact layout of properties.</para>
      </summary>
      <param name="label">The label used for the texture property.</param>
      <param name="textureProp">The texture property.</param>
      <param name="extraProperty1">First extra property inlined after the texture property.</param>
      <param name="label2">Label for the second extra property (on a new line and indented).</param>
      <param name="extraProperty2">Second property on a new line below the texture.</param>
      <returns>
        <para>Returns the Rect used.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TexturePropertyWithHDRColor(UnityEngine.GUIContent,UnityEditor.MaterialProperty,UnityEditor.MaterialProperty,System.Boolean)">
      <summary>
        <para>Method for showing a texture property control with a HDR color field and its color brightness float field.</para>
      </summary>
      <param name="label">The label used for the texture property.</param>
      <param name="textureProp">The texture property.</param>
      <param name="colorProperty">The color property (will be treated as a HDR color).</param>
      <param name="showAlpha">If false then the alpha channel information will be hidden in the GUI.</param>
      <param name="hdrConfig">
      </param>
      <returns>
        <para>Return the Rect used.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TexturePropertyWithHDRColor(UnityEngine.GUIContent,UnityEditor.MaterialProperty,UnityEditor.MaterialProperty,UnityEditor.ColorPickerHDRConfig,System.Boolean)">
      <summary>
        <para>Method for showing a texture property control with a HDR color field and its color brightness float field.</para>
      </summary>
      <param name="label">The label used for the texture property.</param>
      <param name="textureProp">The texture property.</param>
      <param name="colorProperty">The color property (will be treated as a HDR color).</param>
      <param name="showAlpha">If false then the alpha channel information will be hidden in the GUI.</param>
      <param name="hdrConfig">
      </param>
      <returns>
        <para>Return the Rect used.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TextureScaleOffsetProperty(UnityEngine.Rect,UnityEditor.MaterialProperty)">
      <summary>
        <para>Draws tiling and offset properties for a texture.</para>
      </summary>
      <param name="position">Rect to draw this control in.</param>
      <param name="property">Property to draw.</param>
      <param name="partOfTexturePropertyControl">If this control should be rendered under large texture property control use 'true'. If this control should be shown seperately use 'false'.</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TextureScaleOffsetProperty(UnityEngine.Rect,UnityEditor.MaterialProperty,System.Boolean)">
      <summary>
        <para>Draws tiling and offset properties for a texture.</para>
      </summary>
      <param name="position">Rect to draw this control in.</param>
      <param name="property">Property to draw.</param>
      <param name="partOfTexturePropertyControl">If this control should be rendered under large texture property control use 'true'. If this control should be shown seperately use 'false'.</param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TextureScaleOffsetProperty(UnityEngine.Rect,UnityEngine.Vector4)">
      <summary>
        <para>TODO.</para>
      </summary>
      <param name="position">
      </param>
      <param name="scaleOffset">
      </param>
      <param name="partOfTexturePropertyControl">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.TextureScaleOffsetProperty(UnityEngine.Rect,UnityEngine.Vector4,System.Boolean)">
      <summary>
        <para>TODO.</para>
      </summary>
      <param name="position">
      </param>
      <param name="scaleOffset">
      </param>
      <param name="partOfTexturePropertyControl">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.VectorProperty(UnityEditor.MaterialProperty,System.String)">
      <summary>
        <para>Draw a property field for a vector shader property.</para>
      </summary>
      <param name="label">Label for the field.</param>
      <param name="prop">
      </param>
      <param name="position">
      </param>
    </member>
    <member name="M:UnityEditor.MaterialEditor.VectorProperty(UnityEngine.Rect,UnityEditor.MaterialProperty,System.String)">
      <summary>
        <para>Draw a property field for a vector shader property.</para>
      </summary>
      <param name="label">Label for the field.</param>
      <param name="prop">
      </param>
      <param name="position">
      </param>
    </member>
    <member name="T:UnityEditor.MaterialEditorExtensions">
      <summary>
        <para>Extension methods for the Material asset type in the editor.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialEditorExtensions.PerformBumpMapCheck(UnityEngine.Material)">
      <summary>
        <para>Iterates over all the Material properties with the MaterialProperty.PropFlags.Normal flag and checks that the textures referenced by these properties are imported as TextureImporterType.NormalMap.</para>
      </summary>
      <param name="material">The target material.</param>
    </member>
    <member name="T:UnityEditor.MaterialProperty">
      <summary>
        <para>Describes information and value of a single shader property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MaterialProperty.colorValue">
      <summary>
        <para>Color value of the property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MaterialProperty.displayName">
      <summary>
        <para>Display name of the property (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MaterialProperty.flags">
      <summary>
        <para>Flags that control how property is displayed (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MaterialProperty.floatValue">
      <summary>
        <para>Float value of the property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MaterialProperty.hasMixedValue">
      <summary>
        <para>Does this property have multiple different values? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MaterialProperty.intValue">
      <summary>
        <para>Int value of the property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MaterialProperty.name">
      <summary>
        <para>Name of the property (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MaterialProperty.rangeLimits">
      <summary>
        <para>Min/max limits of a ranged float property (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MaterialProperty.targets">
      <summary>
        <para>Material objects being edited by this property (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MaterialProperty.textureDimension">
      <summary>
        <para>Texture dimension (2D, Cubemap etc.) of the property (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MaterialProperty.textureValue">
      <summary>
        <para>Texture value of the property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MaterialProperty.type">
      <summary>
        <para>Type of the property (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MaterialProperty.vectorValue">
      <summary>
        <para>Vector value of the property.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MaterialProperty.PropFlags">
      <summary>
        <para>Flags that control how a MaterialProperty is displayed.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MaterialProperty.PropFlags.Gamma">
      <summary>
        <para>Signifies that values of this property are in gamma space and should not be gamma corrected.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MaterialProperty.PropFlags.HDR">
      <summary>
        <para>Signifies that values of this property contain High Dynamic Range (HDR) data.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MaterialProperty.PropFlags.HideInInspector">
      <summary>
        <para>Do not show the property in the Inspector.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MaterialProperty.PropFlags.None">
      <summary>
        <para>No flags are set.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MaterialProperty.PropFlags.NonModifiableTextureData">
      <summary>
        <para>Do not allow this texture property to be edited in the Inspector.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MaterialProperty.PropFlags.Normal">
      <summary>
        <para>Signifies that values of this property contain Normal (normalized vector) data.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MaterialProperty.PropFlags.NoScaleOffset">
      <summary>
        <para>Do not show UV scale/offset fields next to a texture.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MaterialProperty.PropFlags.PerRendererData">
      <summary>
        <para>In the Material Inspector, value for this property will be queried from Renderer's MaterialPropertyBlock, instead of from the Material. The value will also appear as read-only. This corresponds to the "[PerRendererData]" attribute in front of a property in the Shader code.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MaterialProperty.PropType">
      <summary>
        <para>Material property type.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MaterialProperty.PropType.Color">
      <summary>
        <para>Color property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MaterialProperty.PropType.Float">
      <summary>
        <para>Float property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MaterialProperty.PropType.Int">
      <summary>
        <para>Int property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MaterialProperty.PropType.Range">
      <summary>
        <para>Ranged float (with min/max values) property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MaterialProperty.PropType.Texture">
      <summary>
        <para>Texture property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MaterialProperty.PropType.Vector">
      <summary>
        <para>Vector property.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MaterialPropertyDrawer">
      <summary>
        <para>Base class to derive custom material property drawers from.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MaterialPropertyDrawer.Apply(UnityEditor.MaterialProperty)">
      <summary>
        <para>Apply extra initial values to the material.</para>
      </summary>
      <param name="prop">The MaterialProperty to apply values for.</param>
    </member>
    <member name="M:UnityEditor.MaterialPropertyDrawer.GetPropertyHeight(UnityEditor.MaterialProperty,System.String,UnityEditor.MaterialEditor)">
      <summary>
        <para>Override this method to specify how tall the GUI for this property is in pixels.</para>
      </summary>
      <param name="prop">The MaterialProperty to make the custom GUI for.</param>
      <param name="label">The label of this property.</param>
      <param name="editor">Current material editor.</param>
    </member>
    <member name="M:UnityEditor.MaterialPropertyDrawer.OnGUI(UnityEngine.Rect,UnityEditor.MaterialProperty,System.String,UnityEditor.MaterialEditor)">
      <summary>
        <para>Override this method to make your own GUI for the property.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the property GUI.</param>
      <param name="prop">The MaterialProperty to make the custom GUI for.</param>
      <param name="label">The label of this property.</param>
      <param name="editor">Current material editor.</param>
    </member>
    <member name="T:UnityEditor.Media.AudioTrackAttributes">
      <summary>
        <para>Descriptor for audio track format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Media.AudioTrackAttributes.channelCount">
      <summary>
        <para>Number of channels.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Media.AudioTrackAttributes.language">
      <summary>
        <para>Dialogue language, if applicable.  Can be empty.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Media.AudioTrackAttributes.sampleRate">
      <summary>
        <para>Audio sampling rate.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Media.H264EncoderAttributes">
      <summary>
        <para>Descriptor for H.264 encoder attributes.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Media.H264EncoderAttributes.gopSize">
      <summary>
        <para>The maximum size of a group of pictures, in frames.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Media.H264EncoderAttributes.numConsecutiveBFrames">
      <summary>
        <para>The maximum number of consecutive B frames between I and P frames.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Media.H264EncoderAttributes.profile">
      <summary>
        <para>The VideoEncodingProfile for the encoded video.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Media.MediaEncoder">
      <summary>
        <para>Encodes images and audio samples into an audio or movie file.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Media.MediaEncoder.AddFrame(UnityEngine.Texture2D)">
      <summary>
        <para>Appends a frame to the file's video track.</para>
      </summary>
      <param name="texture">Texture containing the pixels to be written into the track for the current frame.</param>
      <param name="time">Timestamp for the new frame.</param>
      <returns>
        <para>True if the operation succeeded. False otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Media.MediaEncoder.AddFrame(UnityEngine.Texture2D,UnityEditor.Media.MediaTime)">
      <summary>
        <para>Appends a frame to the file's video track.</para>
      </summary>
      <param name="texture">Texture containing the pixels to be written into the track for the current frame.</param>
      <param name="time">Timestamp for the new frame.</param>
      <returns>
        <para>True if the operation succeeded. False otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Media.MediaEncoder.AddFrame(System.Int32,System.Int32,System.Int32,UnityEngine.TextureFormat,Unity.Collections.NativeArray`1&lt;System.Byte&gt;)">
      <summary>
        <para>Appends a frame from a raw buffer to the file's video track.</para>
      </summary>
      <param name="width">Image width.</param>
      <param name="height">Image height.</param>
      <param name="rowBytes">Bytes in one row of pixels. Useful in case lines include padding. Can be set to 0 if there is no padding.</param>
      <param name="format">Pixel format. Only TextureFormat.RGBA32 is supported at this time.</param>
      <param name="data">Bytes containing the image.</param>
      <param name="time">Timestamp for new frame.</param>
      <returns>
        <para>True if the operation succeeded. False otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Media.MediaEncoder.AddFrame(System.Int32,System.Int32,System.Int32,UnityEngine.TextureFormat,Unity.Collections.NativeArray`1&lt;System.Byte&gt;,UnityEditor.Media.MediaTime)">
      <summary>
        <para>Appends a frame from a raw buffer to the file's video track.</para>
      </summary>
      <param name="width">Image width.</param>
      <param name="height">Image height.</param>
      <param name="rowBytes">Bytes in one row of pixels. Useful in case lines include padding. Can be set to 0 if there is no padding.</param>
      <param name="format">Pixel format. Only TextureFormat.RGBA32 is supported at this time.</param>
      <param name="data">Bytes containing the image.</param>
      <param name="time">Timestamp for new frame.</param>
      <returns>
        <para>True if the operation succeeded. False otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Media.MediaEncoder.AddSamples(System.UInt16,Unity.Collections.NativeArray`1&lt;System.Single&gt;)">
      <summary>
        <para>Appends sample frames to the specified audio track.</para>
      </summary>
      <param name="trackIndex">Index of the track to which sample frames will be added.</param>
      <param name="interleavedSamples">Sample frames to add.  Samples are expected to be interleaved.</param>
      <returns>
        <para>True if the operation succeeded. False otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Media.MediaEncoder.AddSamples(Unity.Collections.NativeArray`1&lt;System.Single&gt;)">
      <summary>
        <para>Appends sample frames to the specified audio track.</para>
      </summary>
      <param name="trackIndex">Index of the track to which sample frames will be added.</param>
      <param name="interleavedSamples">Sample frames to add.  Samples are expected to be interleaved.</param>
      <returns>
        <para>True if the operation succeeded. False otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Media.MediaEncoder.#ctor(System.String,UnityEditor.Media.VideoTrackAttributes,UnityEditor.Media.AudioTrackAttributes[])">
      <summary>
        <para>Create a new encoder with various track arrangements.</para>
      </summary>
      <param name="filePath">Path fo the media file to be written.</param>
      <param name="videoAttrs">Attributes for the file's video track, if any.</param>
      <param name="audioAttrs">Attributes for the file's audio tracks, if any.</param>
    </member>
    <member name="M:UnityEditor.Media.MediaEncoder.#ctor(System.String,UnityEditor.Media.VideoTrackEncoderAttributes,UnityEditor.Media.AudioTrackAttributes[])">
      <summary>
        <para>Create a new encoder with various track arrangements.</para>
      </summary>
      <param name="filePath">Path fo the media file to be written.</param>
      <param name="videoAttrs">Attributes for the file's video track, if any.</param>
      <param name="audioAttrs">Attributes for the file's audio tracks, if any.</param>
    </member>
    <member name="M:UnityEditor.Media.MediaEncoder.#ctor(System.String,UnityEditor.Media.VideoTrackAttributes,UnityEditor.Media.AudioTrackAttributes)">
      <summary>
        <para>Create a new encoder with various track arrangements.</para>
      </summary>
      <param name="filePath">Path fo the media file to be written.</param>
      <param name="videoAttrs">Attributes for the file's video track, if any.</param>
      <param name="audioAttrs">Attributes for the file's audio tracks, if any.</param>
    </member>
    <member name="M:UnityEditor.Media.MediaEncoder.#ctor(System.String,UnityEditor.Media.VideoTrackEncoderAttributes,UnityEditor.Media.AudioTrackAttributes)">
      <summary>
        <para>Create a new encoder with various track arrangements.</para>
      </summary>
      <param name="filePath">Path fo the media file to be written.</param>
      <param name="videoAttrs">Attributes for the file's video track, if any.</param>
      <param name="audioAttrs">Attributes for the file's audio tracks, if any.</param>
    </member>
    <member name="M:UnityEditor.Media.MediaEncoder.#ctor(System.String,UnityEditor.Media.VideoTrackAttributes)">
      <summary>
        <para>Create a new encoder with various track arrangements.</para>
      </summary>
      <param name="filePath">Path fo the media file to be written.</param>
      <param name="videoAttrs">Attributes for the file's video track, if any.</param>
      <param name="audioAttrs">Attributes for the file's audio tracks, if any.</param>
    </member>
    <member name="M:UnityEditor.Media.MediaEncoder.#ctor(System.String,UnityEditor.Media.VideoTrackEncoderAttributes)">
      <summary>
        <para>Create a new encoder with various track arrangements.</para>
      </summary>
      <param name="filePath">Path fo the media file to be written.</param>
      <param name="videoAttrs">Attributes for the file's video track, if any.</param>
      <param name="audioAttrs">Attributes for the file's audio tracks, if any.</param>
    </member>
    <member name="M:UnityEditor.Media.MediaEncoder.#ctor(System.String,UnityEditor.Media.AudioTrackAttributes[])">
      <summary>
        <para>Create a new encoder with various track arrangements.</para>
      </summary>
      <param name="filePath">Path fo the media file to be written.</param>
      <param name="videoAttrs">Attributes for the file's video track, if any.</param>
      <param name="audioAttrs">Attributes for the file's audio tracks, if any.</param>
    </member>
    <member name="M:UnityEditor.Media.MediaEncoder.#ctor(System.String,UnityEditor.Media.AudioTrackAttributes)">
      <summary>
        <para>Create a new encoder with various track arrangements.</para>
      </summary>
      <param name="filePath">Path fo the media file to be written.</param>
      <param name="videoAttrs">Attributes for the file's video track, if any.</param>
      <param name="audioAttrs">Attributes for the file's audio tracks, if any.</param>
    </member>
    <member name="M:UnityEditor.Media.MediaEncoder.Dispose">
      <summary>
        <para>Finishes writing all tracks and closes the file being written.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Media.MediaRational">
      <summary>
        <para>Rational number useful for expressing fractions precisely.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Media.MediaRational.denominator">
      <summary>
        <para>Fraction denominator.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Media.MediaRational.inverse">
      <summary>
        <para>The inverse of the rational number.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Media.MediaRational.isNegative">
      <summary>
        <para>Whether the rational number is negative.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Media.MediaRational.isValid">
      <summary>
        <para>Whether the rational number is valid.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Media.MediaRational.isZero">
      <summary>
        <para>Whether the rational number is zero.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Media.MediaRational.numerator">
      <summary>
        <para>Fraction numerator.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Media.MediaRational.#ctor(System.Int32)">
      <summary>
        <para>Constructs a rational number. The version that omits the denominator sets it to 1.</para>
      </summary>
      <param name="numerator">Numerator of the rational number.</param>
      <param name="denominator">Denominator of the rational number.</param>
    </member>
    <member name="M:UnityEditor.Media.MediaRational.#ctor(System.Int32,System.Int32)">
      <summary>
        <para>Constructs a rational number. The version that omits the denominator sets it to 1.</para>
      </summary>
      <param name="numerator">Numerator of the rational number.</param>
      <param name="denominator">Denominator of the rational number.</param>
    </member>
    <member name="F:UnityEditor.Media.MediaRational.Invalid">
      <summary>
        <para>Invalid rational value.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Media.MediaRational.op_Explicit(UnityEditor.Media.MediaRational)">
      <summary>
        <para>Returns the rational value expressed as a floating point value.</para>
      </summary>
      <param name="r">Rational number to convert.</param>
    </member>
    <member name="M:UnityEditor.Media.MediaRational.Set(System.Int32,System.Int32)">
      <summary>
        <para>Sets the numerator and denominator, performing normalization.</para>
      </summary>
      <param name="numerator">New value for the rational numerator.</param>
      <param name="denominator">New value for the rational denominator.</param>
    </member>
    <member name="T:UnityEditor.Media.MediaTime">
      <summary>
        <para>Time representation for use with media containers.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Media.MediaTime.count">
      <summary>
        <para>The sample count for the time value.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Media.MediaTime.rate">
      <summary>
        <para>The rate used for converting the count into seconds.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Media.MediaTime.#ctor(System.Int64)">
      <summary>
        <para>Creates a time value with an integer number of seconds, using 1Hz for the rate.</para>
      </summary>
      <param name="seconds">The number of seconds in the time value.</param>
    </member>
    <member name="M:UnityEditor.Media.MediaTime.#ctor(System.Int64,System.UInt32,System.UInt32)">
      <summary>
        <para>Creates a time value for a specified sample count and rate.</para>
      </summary>
      <param name="count">The sample count for the time value.</param>
      <param name="rateNumerator">Numerator for the rate used by the time value.</param>
      <param name="rateDenominator">Denominator for the rate used by the time value.</param>
    </member>
    <member name="F:UnityEditor.Media.MediaTime.Invalid">
      <summary>
        <para>Invalid time value.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Media.MediaTime.op_Explicit(UnityEditor.Media.MediaTime)">
      <summary>
        <para>Returns the time value expressed as a floating point number of seconds.</para>
      </summary>
      <param name="t">Time to convert.</param>
    </member>
    <member name="T:UnityEditor.Media.VideoTrackAttributes">
      <summary>
        <para>Descriptor for audio track format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Media.VideoTrackAttributes.bitRateMode">
      <summary>
        <para>VideoBitrateMode for the encoded video.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Media.VideoTrackAttributes.frameRate">
      <summary>
        <para>Frames per second.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Media.VideoTrackAttributes.height">
      <summary>
        <para>Image height in pixels.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Media.VideoTrackAttributes.includeAlpha">
      <summary>
        <para>True if the track is to include the alpha channel found in the texture passed to AddFrame. False otherwise.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Media.VideoTrackAttributes.width">
      <summary>
        <para>Image width in pixels.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Media.VideoTrackEncoderAttributes">
      <summary>
        <para>Descriptor for video track format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Media.VideoTrackEncoderAttributes.bitRateMode">
      <summary>
        <para>The VideoBitrateMode for the encoded video.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Media.VideoTrackEncoderAttributes.frameRate">
      <summary>
        <para>The frame rate for the encoded video, in frames per second, expressed as a fraction.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Media.VideoTrackEncoderAttributes.height">
      <summary>
        <para>The image height in pixels.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Media.VideoTrackEncoderAttributes.includeAlpha">
      <summary>
        <para>True if the track is to include the alpha channel found in the texture passed to AddFrame. False otherwise.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Media.VideoTrackEncoderAttributes.targetBitRate">
      <summary>
        <para>The target bit rate for the encoder.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Media.VideoTrackEncoderAttributes.width">
      <summary>
        <para>The image width in pixels.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Media.VideoTrackEncoderAttributes.#ctor(UnityEditor.Media.H264EncoderAttributes)">
      <summary>
        <para>Create a new VideoTrackEncoderAttributes with specific H.264 encoding options.</para>
      </summary>
      <param name="h264Attrs">H.264 encoding attributes (for macOS and Windows only).</param>
      <param name="vp8Attrs">VP8 encoding attributes.</param>
    </member>
    <member name="M:UnityEditor.Media.VideoTrackEncoderAttributes.#ctor(UnityEditor.Media.VP8EncoderAttributes)">
      <summary>
        <para>Create a new VideoTrackEncoderAttributes with specific H.264 encoding options.</para>
      </summary>
      <param name="h264Attrs">H.264 encoding attributes (for macOS and Windows only).</param>
      <param name="vp8Attrs">VP8 encoding attributes.</param>
    </member>
    <member name="T:UnityEditor.Media.VP8EncoderAttributes">
      <summary>
        <para>Descriptor for VP8 encoder attributes.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Media.VP8EncoderAttributes.keyframeDistance">
      <summary>
        <para>The maximum distance between I-frames.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MemoryProfiler.Connection">
      <summary>
        <para>A pair of from and to indices describing what thing keeps what other thing alive.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.Connection.from">
      <summary>
        <para>Index into a virtual list of all GC handles, followed by all native objects.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.Connection.to">
      <summary>
        <para>Index into a virtual list of all GC handles, followed by all native objects.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MemoryProfiler.FieldDescription">
      <summary>
        <para>Description of a field of a managed type.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.FieldDescription.isStatic">
      <summary>
        <para>Is this field static?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.FieldDescription.name">
      <summary>
        <para>Name of this field.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.FieldDescription.offset">
      <summary>
        <para>Offset of this field.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.FieldDescription.typeIndex">
      <summary>
        <para>The typeindex into PackedMemorySnapshot.typeDescriptions of the type this field belongs to.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MemoryProfiler.MemorySection">
      <summary>
        <para>A dump of a piece of memory from the player that's being profiled.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.MemorySection.bytes">
      <summary>
        <para>The actual bytes of the memory dump.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.MemorySection.startAddress">
      <summary>
        <para>The start address of this piece of memory.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MemoryProfiler.MemorySnapshot">
      <summary>
        <para>MemorySnapshot is a profiling tool to help diagnose memory usage.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.MemoryProfiler.MemorySnapshot.OnSnapshotReceived(System.Action`1&lt;UnityEditor.MemoryProfiler.PackedMemorySnapshot&gt;)">
      <summary>
        <para>Event that will be fired when a new memory snapshot comes in through the profiler connection. Its argument will be a PackedMemorySnapshot.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="M:UnityEditor.MemoryProfiler.MemorySnapshot.RequestNewSnapshot">
      <summary>
        <para>Requests a new snapshot from the currently connected target of the profiler. Memory snapshots are supported on IL2CPP and Mono .NET 3.5/4.0 scripting backends, although .NET 3.5 has been deprecated as of 2018.3.


NOTE: Each snapshot consists of approximately one managed object per recorded managed object. Snapshots taken from the editor will contain the objects in all previous snapshots that have not yet been garbage-collected. Therefore, repeated snapshots of the editor may grow exponentially. If you no longer need an old snapshot it is therefore advisable to null all references to it and call GC.Collect() before taking another one.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MemoryProfiler.PackedGCHandle">
      <summary>
        <para>A description of a GC handle used by the virtual machine.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedGCHandle.target">
      <summary>
        <para>The address of the managed object that the GC handle is referencing.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MemoryProfiler.PackedMemorySnapshot">
      <summary>
        <para>PackedMemorySnapshot is a compact representation of a memory snapshot.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedMemorySnapshot.connections">
      <summary>
        <para>Connections is an array of from,to pairs that describe which things are keeping which other things alive.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedMemorySnapshot.gcHandles">
      <summary>
        <para>All GC handles in use in the memorysnapshot.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedMemorySnapshot.managedHeapSections">
      <summary>
        <para>Array of actual managed heap memory sections.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedMemorySnapshot.nativeObjects">
      <summary>
        <para>All native C++ objects that were loaded at time of the snapshot.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedMemorySnapshot.nativeTypes">
      <summary>
        <para>Descriptions of all the C++ unity types the profiled player knows about.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedMemorySnapshot.typeDescriptions">
      <summary>
        <para>Descriptions of all the managed types that were known to the virtual machine when the snapshot was taken.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedMemorySnapshot.virtualMachineInformation">
      <summary>
        <para>Information about the virtual machine running executing the managade code inside the player.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MemoryProfiler.PackedNativeType">
      <summary>
        <para>A description of a C++ unity type.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedNativeType.name">
      <summary>
        <para>Name of this C++ unity type.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedNativeType.nativeBaseTypeArrayIndex">
      <summary>
        <para>The index used to obtain the native C++ base class description from the PackedMemorySnapshot.nativeTypes array.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MemoryProfiler.PackedNativeUnityEngineObject">
      <summary>
        <para>Description of a C++ unity object in memory.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedNativeUnityEngineObject.hideFlags">
      <summary>
        <para>The hideFlags this native object has.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedNativeUnityEngineObject.instanceId">
      <summary>
        <para>InstanceId of this object.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedNativeUnityEngineObject.isDontDestroyOnLoad">
      <summary>
        <para>Has this object has been marked as DontDestroyOnLoad?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedNativeUnityEngineObject.isManager">
      <summary>
        <para>Is this native object an internal Unity manager object?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedNativeUnityEngineObject.isPersistent">
      <summary>
        <para>Is this object persistent? (Assets are persistent, objects stored in Scenes and dynamically created objects are not persistent).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedNativeUnityEngineObject.name">
      <summary>
        <para>Name of this object.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedNativeUnityEngineObject.nativeObjectAddress">
      <summary>
        <para>The memory address of the native C++ object. This matches the "m_CachedPtr" field of UnityEngine.Object.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedNativeUnityEngineObject.nativeTypeArrayIndex">
      <summary>
        <para>The index used to obtain the native C++ type description from the PackedMemorySnapshot.nativeTypes array.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.PackedNativeUnityEngineObject.size">
      <summary>
        <para>Size in bytes of this object.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MemoryProfiler.PackedNativeUnityEngineObject.ObjectFlags">
      <summary>
        <para>Equivalent of Profiling.PackedNativeUnityEngineObject.ObjectFlags in the old memory profiler API.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MemoryProfiler.PackedNativeUnityEngineObject.ObjectFlags.IsDontDestroyOnLoad">
      <summary>
        <para>Equivalent of Profiling.PackedNativeUnityEngineObject.ObjectFlags.IsDontDestroyOnLoad in the old memory profiler API.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MemoryProfiler.PackedNativeUnityEngineObject.ObjectFlags.IsManager">
      <summary>
        <para>Equivalent of Profiling.PackedNativeUnityEngineObject.ObjectFlags.IsManager in the old memory profiler API.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MemoryProfiler.PackedNativeUnityEngineObject.ObjectFlags.IsPersistent">
      <summary>
        <para>Equivalent of Profiling.PackedNativeUnityEngineObject.ObjectFlags.IsPersistent in the old memory profiler API.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MemoryProfiler.TypeDescription">
      <summary>
        <para>Description of a managed type.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.TypeDescription.arrayRank">
      <summary>
        <para>If this is an arrayType, this will return the rank of the array. (1 for a 1-dimensional array, 2 for a 2-dimensional array, etc)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.TypeDescription.assembly">
      <summary>
        <para>Name of the assembly this type was loaded from.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.TypeDescription.baseOrElementTypeIndex">
      <summary>
        <para>The base type for this type, pointed to by an index into PackedMemorySnapshot.typeDescriptions.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.TypeDescription.fields">
      <summary>
        <para>An array containing descriptions of all fields of this type.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.TypeDescription.isArray">
      <summary>
        <para>Is this type an array?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.TypeDescription.isValueType">
      <summary>
        <para>Is this type a value type? (if it's not a value type, it's a reference type)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.TypeDescription.name">
      <summary>
        <para>Name of this type.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.TypeDescription.size">
      <summary>
        <para>Size in bytes of an instance of this type. If this type is an arraytype, this describes the amount of bytes a single element in the array will take up.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.TypeDescription.staticFieldBytes">
      <summary>
        <para>The actual contents of the bytes that store this types static fields, at the point of time when the snapshot was taken.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.TypeDescription.typeIndex">
      <summary>
        <para>The typeIndex of this type.  This index is an index into the PackedMemorySnapshot.typeDescriptions array.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.TypeDescription.typeInfoAddress">
      <summary>
        <para>The address in memory that contains the description of this type inside the virtual machine. This can be used to match managed objects in the heap to their corresponding TypeDescription,  as the first pointer of a managed object points to its type description.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MemoryProfiler.TypeDescription.TypeFlags">
      <summary>
        <para>Equivalent of Profiling.TypeFlags in the old memory profiler API.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MemoryProfiler.TypeDescription.TypeFlags.kArray">
      <summary>
        <para>Equivalent of Profiling.TypeFlags.kArray in the old memory profiler API.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MemoryProfiler.TypeDescription.TypeFlags.kArrayRankMask">
      <summary>
        <para>Equivalent of Profiling.TypeFlags.kArrayRankMask in the old memory profiler API.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MemoryProfiler.TypeDescription.TypeFlags.kValueType">
      <summary>
        <para>Equivalent of Profiling.TypeFlags.kValueType in the old memory profiler API.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MemoryProfiler.VirtualMachineInformation">
      <summary>
        <para>Information about the virtual machine running executing the managed code inside the player.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.VirtualMachineInformation.allocationGranularity">
      <summary>
        <para>Allocation granularity in bytes used by the virtual machine allocator.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.VirtualMachineInformation.arrayBoundsOffsetInHeader">
      <summary>
        <para>Offset in bytes inside the object header of an array object where the bounds of the array is stored.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.VirtualMachineInformation.arrayHeaderSize">
      <summary>
        <para>Size in bytes of the header of an array object.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.VirtualMachineInformation.arraySizeOffsetInHeader">
      <summary>
        <para>Offset in bytes inside the object header of an array object where the size of the array is stored.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.VirtualMachineInformation.heapFormatVersion">
      <summary>
        <para>A version number that will change when the object layout inside the managed heap will change.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.VirtualMachineInformation.objectHeaderSize">
      <summary>
        <para>Size in bytes of the header of each managed object.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MemoryProfiler.VirtualMachineInformation.pointerSize">
      <summary>
        <para>Size in bytes of a pointer.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Menu">
      <summary>
        <para>Menu class to manipulate the menu item.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Menu.#ctor">
      <summary>
        <para>Default constructor.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Menu.GetChecked(System.String)">
      <summary>
        <para>Get the check status of the given menu.</para>
      </summary>
      <param name="menuPath">
      </param>
    </member>
    <member name="M:UnityEditor.Menu.GetEnabled(System.String)">
      <summary>
        <para>Gets a menu item's enabled status.</para>
      </summary>
      <param name="menuPath">A slash-delimited path to the item's position in the menu. For example, "Scene/Place on Surface".</param>
      <returns>
        <para>True if the menu item is enabled. False otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Menu.SetChecked(System.String,System.Boolean)">
      <summary>
        <para>Set the check status of the given menu.</para>
      </summary>
      <param name="menuPath">
      </param>
      <param name="isChecked">
      </param>
    </member>
    <member name="T:UnityEditor.MenuCommand">
      <summary>
        <para>Used to extract the context for a MenuItem.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MenuCommand.context">
      <summary>
        <para>Context is the object that is the target of a menu command.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MenuCommand.userData">
      <summary>
        <para>An integer for passing custom information to a menu item.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MenuCommand.#ctor(UnityEngine.Object,System.Int32)">
      <summary>
        <para>Creates a new MenuCommand object.</para>
      </summary>
      <param name="inContext">
      </param>
      <param name="inUserData">
      </param>
    </member>
    <member name="M:UnityEditor.MenuCommand.#ctor(UnityEngine.Object)">
      <summary>
        <para>Creates a new MenuCommand object.</para>
      </summary>
      <param name="inContext">
      </param>
    </member>
    <member name="T:UnityEditor.MenuItem">
      <summary>
        <para>The MenuItem attribute allows you to add menu items to the main menu and Inspector window context menus.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MenuItem.editorModes">
      <summary>
        <para>Specifies the Editor modes that the item is displayed for. If you don't specify any Editor modes, the item is only displayed for the default mode.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MenuItem.#ctor(System.String)">
      <summary>
        <para>Creates a menu item and invokes the static function following it, when the menu item is selected.</para>
      </summary>
      <param name="itemName">The itemName is the menu item represented like a pathname.
        For example the menu item could be "GameObject/Do Something".</param>
      <param name="isValidateFunction">If isValidateFunction is true, this is a validation
        function and will be called before invoking the menu function with the same itemName.</param>
      <param name="priority">The order by which the menu items are displayed.</param>
    </member>
    <member name="M:UnityEditor.MenuItem.#ctor(System.String,System.Boolean)">
      <summary>
        <para>Creates a menu item and invokes the static function following it, when the menu item is selected.</para>
      </summary>
      <param name="itemName">The itemName is the menu item represented like a pathname.
        For example the menu item could be "GameObject/Do Something".</param>
      <param name="isValidateFunction">If isValidateFunction is true, this is a validation
        function and will be called before invoking the menu function with the same itemName.</param>
      <param name="priority">The order by which the menu items are displayed.</param>
    </member>
    <member name="M:UnityEditor.MenuItem.#ctor(System.String,System.Boolean,System.Int32)">
      <summary>
        <para>Creates a menu item and invokes the static function following it, when the menu item is selected.</para>
      </summary>
      <param name="itemName">The itemName is the menu item represented like a pathname.
        For example the menu item could be "GameObject/Do Something".</param>
      <param name="isValidateFunction">If isValidateFunction is true, this is a validation
        function and will be called before invoking the menu function with the same itemName.</param>
      <param name="priority">The order by which the menu items are displayed.</param>
    </member>
    <member name="T:UnityEditor.MeshOptimizationFlags">
      <summary>
        <para>Options to control the optimization of mesh data during asset import.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MeshOptimizationFlags.Everything">
      <summary>
        <para>Perform maximum optimization of the mesh data, enables all optimization options.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MeshOptimizationFlags.PolygonOrder">
      <summary>
        <para>Optimize the order of polygons in the mesh to make better use of the GPUs internal caches to improve rendering performance.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MeshOptimizationFlags.VertexOrder">
      <summary>
        <para>Optimize the order of vertices in the mesh to make better use of the GPUs internal caches to improve rendering performance.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MeshPreview">
      <summary>
        <para>Use this class to render an interactive preview of a mesh.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MeshPreview.mesh">
      <summary>
        <para>The Mesh to display in the preview space.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MeshPreview.#ctor(UnityEngine.Mesh)">
      <summary>
        <para>Creates a new MeshPreview instance with a Mesh target.</para>
      </summary>
      <param name="target">The Mesh to be displayed.</param>
    </member>
    <member name="M:UnityEditor.MeshPreview.Dispose">
      <summary>
        <para>Releases allocated resources associated with this object.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MeshPreview.GetInfoString(UnityEngine.Mesh)">
      <summary>
        <para>Returns a short summary of the Mesh attributes (ex, does this mesh contain positions, normals, tangents, etc...).</para>
      </summary>
      <param name="mesh">The Mesh to build a summary phrase for.</param>
      <returns>
        <para>A short summary of the mesh attributes.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MeshPreview.OnPreviewGUI(UnityEngine.Rect,UnityEngine.GUIStyle)">
      <summary>
        <para>Call this from an Editor.OnPreviewGUI or ObjectPreview.OnPreviewGUI to draw a mesh preview.</para>
      </summary>
      <param name="rect">Rectangle in which to draw the preview.</param>
      <param name="background">The background style.</param>
    </member>
    <member name="M:UnityEditor.MeshPreview.OnPreviewSettings">
      <summary>
        <para>Call this from Editor.OnPreviewSettings or ObjectPreview.OnPreviewSettings to draw additional settings related to the mesh preview.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MeshPreview.RenderStaticPreview(System.Int32,System.Int32)">
      <summary>
        <para>Creates a texture preview to override Editor.RenderStaticPreview. The current mesh will be drawn.</para>
      </summary>
      <param name="width">The width to render the texture.</param>
      <param name="height">The height to render the texture.</param>
      <returns>
        <para>Returns a rendered texture of the current mesh with default settings.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.MeshUtility">
      <summary>
        <para>Various utilities for mesh manipulation.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MeshUtility.AcquireReadOnlyMeshData(UnityEngine.Mesh)">
      <summary>
        <para>Gets a snapshot of Mesh data for read-only access in the Unity Editor.</para>
      </summary>
      <param name="mesh">The input mesh.</param>
      <param name="meshes">The input meshes.</param>
      <returns>
        <para>Returns a read-only snapshot of Mesh data. See Mesh.MeshDataArray and Mesh.MeshData.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MeshUtility.AcquireReadOnlyMeshData(UnityEngine.Mesh[])">
      <summary>
        <para>Gets a snapshot of Mesh data for read-only access in the Unity Editor.</para>
      </summary>
      <param name="mesh">The input mesh.</param>
      <param name="meshes">The input meshes.</param>
      <returns>
        <para>Returns a read-only snapshot of Mesh data. See Mesh.MeshDataArray and Mesh.MeshData.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MeshUtility.AcquireReadOnlyMeshData(System.Collections.Generic.List`1&lt;UnityEngine.Mesh&gt;)">
      <summary>
        <para>Gets a snapshot of Mesh data for read-only access in the Unity Editor.</para>
      </summary>
      <param name="mesh">The input mesh.</param>
      <param name="meshes">The input meshes.</param>
      <returns>
        <para>Returns a read-only snapshot of Mesh data. See Mesh.MeshDataArray and Mesh.MeshData.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MeshUtility.GetMeshCompression(UnityEngine.Mesh)">
      <summary>
        <para>Returns the mesh compression setting for a Mesh.</para>
      </summary>
      <param name="mesh">The mesh to get information on.</param>
    </member>
    <member name="M:UnityEditor.MeshUtility.Optimize(UnityEngine.Mesh)">
      <summary>
        <para>Optimizes the Mesh data to improve rendering performance.</para>
      </summary>
      <param name="mesh">
      </param>
    </member>
    <member name="M:UnityEditor.MeshUtility.SetMeshCompression(UnityEngine.Mesh,UnityEditor.ModelImporterMeshCompression)">
      <summary>
        <para>Change the mesh compression setting for a mesh.</para>
      </summary>
      <param name="mesh">The mesh to set the compression mode for.</param>
      <param name="compression">The compression mode to set.</param>
    </member>
    <member name="M:UnityEditor.MeshUtility.SetPerTriangleUV2(UnityEngine.Mesh,UnityEngine.Vector2[])">
      <summary>
        <para>Will insert per-triangle uv2 in mesh and handle vertex splitting etc.</para>
      </summary>
      <param name="src">
      </param>
      <param name="triUV">
      </param>
    </member>
    <member name="T:UnityEditor.MessageType">
      <summary>
        <para>User message types.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MessageType.Error">
      <summary>
        <para>Error message.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MessageType.Info">
      <summary>
        <para>Info message.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MessageType.None">
      <summary>
        <para>Neutral message.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MessageType.Warning">
      <summary>
        <para>Warning message.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MobileTextureSubtarget">
      <summary>
        <para>Compressed texture format for target build platform.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MobileTextureSubtarget.ASTC">
      <summary>
        <para>ASTC texture compression.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MobileTextureSubtarget.DXT">
      <summary>
        <para>S3 texture compression. Supported on devices with NVidia Tegra, Vivante and Intel GPUs.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MobileTextureSubtarget.ETC">
      <summary>
        <para>ETC1 texture compression (or ETC2 for textures with alpha). ETC1 is supported by all devices. ETC2 is available on devices which support OpenGL ES 3.0; on OpenGL ES 2 devices the texture is decompressed on CPU.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MobileTextureSubtarget.ETC2">
      <summary>
        <para>ETC2 texture compression. Available on devices which support OpenGL ES 3.0; on OpenGL ES 2 devices the texture is decompressed on CPU.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MobileTextureSubtarget.Generic">
      <summary>
        <para>Don't override texture compression.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MobileTextureSubtarget.PVRTC">
      <summary>
        <para>PowerVR texture compression. Available on devices with PowerVR GPU.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporter">
      <summary>
        <para>Model importer lets you modify import settings from editor scripts.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.addCollider">
      <summary>
        <para>Add to imported meshes.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.animationCompression">
      <summary>
        <para>Animation compression setting.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.animationPositionError">
      <summary>
        <para>Allowed error of animation position compression.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.animationRotationError">
      <summary>
        <para>Allowed error of animation rotation compression.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.animationScaleError">
      <summary>
        <para>Allowed error of animation scale compression.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.animationType">
      <summary>
        <para>Animator generation mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.animationWrapMode">
      <summary>
        <para>The default wrap mode for the generated animation clips.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.autoGenerateAvatarMappingIfUnspecified">
      <summary>
        <para>Generate auto mapping if no avatarSetup is provided when importing humanoid animation.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.avatarSetup">
      <summary>
        <para>The Avatar generation of the imported model.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.bakeAxisConversion">
      <summary>
        <para>Computes the axis conversion on geometry and animation for Models defined in an axis system that differs from Unity's (left handed, Z forward, Y-up).

                    When enabled, Unity transforms the geometry and animation data in order to convert the axis.

                    When disabled, Unity transforms the root GameObject of the hierarchy in order to convert the axis.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.bakeIK">
      <summary>
        <para>Bake Inverse Kinematics (IK) when importing.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.clipAnimations">
      <summary>
        <para>Animation clips to split animation into. See Also: ModelImporterClipAnimation.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.defaultClipAnimations">
      <summary>
        <para>Generate a list of all default animation clip based on TakeInfo.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.extraExposedTransformPaths">
      <summary>
        <para>Animation optimization setting.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.extraUserProperties">
      <summary>
        <para>Additional properties to treat as user properties.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.fileScale">
      <summary>
        <para>Scaling factor used when useFileScale is set to true (Read-only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.generateAnimations">
      <summary>
        <para>Animation generation options.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.generateMaterials">
      <summary>
        <para>Material generation options.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.generateSecondaryUV">
      <summary>
        <para>Generate secondary UV set for lightmapping.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.globalScale">
      <summary>
        <para>Global scale factor for importing.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.humanDescription">
      <summary>
        <para>The human description that is used to generate an Avatar during the import process.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.humanoidOversampling">
      <summary>
        <para>Controls how much oversampling is used when importing humanoid animations for retargeting.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.importAnimatedCustomProperties">
      <summary>
        <para>Import animated custom properties from file.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.importAnimation">
      <summary>
        <para>Import animation from file.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.importBlendShapeNormals">
      <summary>
        <para>Blend shape normal import options.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.importBlendShapes">
      <summary>
        <para>Controls import of BlendShapes.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.importCameras">
      <summary>
        <para>Controls import of cameras. Basic properties like field of view, near plane distance and far plane distance can be animated.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.importConstraints">
      <summary>
        <para>Import animation constraints.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.importedTakeInfos">
      <summary>
        <para>Generates the list of all imported take.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.importLights">
      <summary>
        <para>Controls import of lights. Note that because light are defined differently in DCC tools, some light types or properties may not be exported. Basic properties like color and intensity can be animated.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.importMaterials">
      <summary>
        <para>Import materials from file.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.importNormals">
      <summary>
        <para>Vertex normal import options.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.importTangents">
      <summary>
        <para>Vertex tangent import options.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.importVisibility">
      <summary>
        <para>Use visibility properties to enable or disable MeshRenderer components.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.indexFormat">
      <summary>
        <para>Format of the imported mesh index buffer data.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.isBakeIKSupported">
      <summary>
        <para>Is Bake Inverse Kinematics (IK) supported by this importer.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.isFileScaleUsed">
      <summary>
        <para>Is FileScale used when importing.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.isReadable">
      <summary>
        <para>Are mesh vertices and indices accessible from script?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.isTangentImportSupported">
      <summary>
        <para>Is import of tangents supported by this importer.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.isUseFileUnitsSupported">
      <summary>
        <para>Is useFileUnits supported for this asset.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.keepQuads">
      <summary>
        <para>If this is true, any quad faces that exist in the mesh data before it is imported are kept as quads instead of being split into two triangles, for the purposes of tessellation. Set this to false to disable this behavior.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.materialImportMode">
      <summary>
        <para>Material creation options.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.materialLocation">
      <summary>
        <para>Material import location options.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.materialName">
      <summary>
        <para>Material naming setting.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.materialSearch">
      <summary>
        <para>Existing material search setting.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.maxBonesPerVertex">
      <summary>
        <para>The maximum number of bones per vertex stored in this mesh data.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.meshCompression">
      <summary>
        <para>Mesh compression setting.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.meshOptimizationFlags">
      <summary>
        <para>Options to control the optimization of mesh data during asset import.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.minBoneWeight">
      <summary>
        <para>Minimum bone weight to keep.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.motionNodeName">
      <summary>
        <para>The path of the transform used to generation the motion of the animation.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.normalCalculationMode">
      <summary>
        <para>Normal generation options for ModelImporter.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.normalImportMode">
      <summary>
        <para>Normals import mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.normalSmoothingAngle">
      <summary>
        <para>Smoothing angle (in degrees) for calculating normals.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.normalSmoothingSource">
      <summary>
        <para>Source of smoothing information for calculation of normals.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.optimizeBones">
      <summary>
        <para>Only import bones where they are connected to vertices.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.optimizeGameObjects">
      <summary>
        <para>Animation optimization setting.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.optimizeMesh">
      <summary>
        <para>Vertex optimization setting.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.optimizeMeshPolygons">
      <summary>
        <para>Optimize the order of polygons in the mesh to make better use of the GPUs internal caches to improve rendering performance.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.optimizeMeshVertices">
      <summary>
        <para>Optimize the order of vertices in the mesh to make better use of the GPUs internal caches to improve rendering performance.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.preserveHierarchy">
      <summary>
        <para>If true, always create an explicit Prefab root. Otherwise, if the model has a single root, it is reused as the Prefab root.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.referencedClips">
      <summary>
        <para>Generates the list of all imported Animations.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.removeConstantScaleCurves">
      <summary>
        <para>Removes constant animation curves with values identical to the object initial scale value.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.resampleCurves">
      <summary>
        <para>If set to false, the importer will not resample curves when possible.
Read more about.

Notes:

- Some unsupported FBX features (such as PreRotation or PostRotation on transforms) will override this setting. In these situations, animation curves will still be resampled even if the setting is disabled. For best results, avoid using PreRotation, PostRotation and GetRotationPivot.

- This option was introduced in Version 5.3. Prior to this version, Unity's import behaviour was as if this option was always enabled. Therefore enabling the option gives the same behaviour as pre-5.3 animation import.
</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.secondaryUVAngleDistortion">
      <summary>
        <para>Threshold for angle distortion (in degrees) when generating secondary UV.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.secondaryUVAreaDistortion">
      <summary>
        <para>Threshold for area distortion when generating secondary UV.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.secondaryUVHardAngle">
      <summary>
        <para>Hard angle (in degrees) for generating secondary UV.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.secondaryUVMarginMethod">
      <summary>
        <para>Method to use for handling margins when generating secondary UV.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.secondaryUVMinLightmapResolution">
      <summary>
        <para>The minimum lightmap resolution in texels per unit that the associated model is expected to have.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.secondaryUVMinObjectScale">
      <summary>
        <para>The minimum object scale that the associated model is expected to have.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.secondaryUVPackMargin">
      <summary>
        <para>Margin to be left between charts when packing secondary UV.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.skinWeights">
      <summary>
        <para>Skin weights import options.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.sortHierarchyByName">
      <summary>
        <para>Sorts the gameObject hierarchy by name.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.sourceAvatar">
      <summary>
        <para>Imports the HumanDescription from the given Avatar.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.splitTangentsAcrossSeams">
      <summary>
        <para>Should tangents be split across UV seams.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.swapUVChannels">
      <summary>
        <para>Swap primary and secondary UV channels when importing.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.tangentImportMode">
      <summary>
        <para>Tangents import mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.transformPaths">
      <summary>
        <para>Generates the list of all imported Transforms.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.useFileScale">
      <summary>
        <para>Use FileScale when importing.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.useFileUnits">
      <summary>
        <para>Detect file units and import as 1FileUnit=1UnityUnit, otherwise it will import as 1cm=1UnityUnit.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.useSRGBMaterialColor">
      <summary>
        <para>When disabled, imported material albedo colors are converted to gamma space. This property should be disabled when using linear color space in Player rendering settings.
The default value is true.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporter.weldVertices">
      <summary>
        <para>Combine vertices that share the same position in space.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ModelImporter.CreateDefaultMaskForClip(UnityEditor.ModelImporterClipAnimation)">
      <summary>
        <para>Creates a mask that matches the model hierarchy, and applies it to the provided ModelImporterClipAnimation.</para>
      </summary>
      <param name="clip">Clip to which the mask will be applied.</param>
    </member>
    <member name="M:UnityEditor.ModelImporter.ExtractTextures(System.String)">
      <summary>
        <para>Extracts the embedded textures from a model file (such as FBX or SketchUp).</para>
      </summary>
      <param name="folderPath">The directory where the textures will be extracted.</param>
      <returns>
        <para>Returns true if the textures are extracted successfully, otherwise false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ModelImporter.SearchAndRemapMaterials(UnityEditor.ModelImporterMaterialName,UnityEditor.ModelImporterMaterialSearch)">
      <summary>
        <para>Search the project for matching materials and use them instead of the internal materials.</para>
      </summary>
      <param name="nameOption">The name matching option.</param>
      <param name="searchOption">The search type option.</param>
      <returns>
        <para>Returns false if the source file is empty or invalid. Returns true otherwise.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.ModelImporterAnimationCompression">
      <summary>
        <para>Animation compression options for ModelImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterAnimationCompression.KeyframeReduction">
      <summary>
        <para>Perform keyframe reduction.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterAnimationCompression.KeyframeReductionAndCompression">
      <summary>
        <para>Perform keyframe reduction and compression.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterAnimationCompression.Off">
      <summary>
        <para>No animation compression.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterAnimationCompression.Optimal">
      <summary>
        <para>Perform keyframe reduction and choose the best animation curve representation at runtime to reduce memory footprint (default).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterAnimationType">
      <summary>
        <para>Animation mode for ModelImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterAnimationType.Generic">
      <summary>
        <para>Generate a generic animator.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterAnimationType.Human">
      <summary>
        <para>Generate a human animator.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterAnimationType.Legacy">
      <summary>
        <para>Generate a legacy animation type.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterAnimationType.None">
      <summary>
        <para>Generate no animation data.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterAvatarSetup">
      <summary>
        <para>Set the Avatar generation mode for ModelImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterAvatarSetup.CopyFromOther">
      <summary>
        <para>Copy the Avatar from another model.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterAvatarSetup.CreateFromThisModel">
      <summary>
        <para>Create the Avatar from this model and save it as a sub-asset.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterAvatarSetup.NoAvatar">
      <summary>
        <para>Disable Avatar creation for this model.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterClipAnimation">
      <summary>
        <para>Animation clips to split animation into.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.additiveReferencePoseFrame">
      <summary>
        <para>The additive reference pose frame.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.curves">
      <summary>
        <para>Additionnal curves that will be that will be added during the import process.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.cycleOffset">
      <summary>
        <para>Offset to the cycle of a looping animation, if a different time in it is desired to be the start.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.events">
      <summary>
        <para>AnimationEvents that will be added during the import process.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.firstFrame">
      <summary>
        <para>First frame of the clip.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.hasAdditiveReferencePose">
      <summary>
        <para>Enable to defines an additive reference pose.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.heightFromFeet">
      <summary>
        <para>Keeps the feet aligned with the root transform position.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.heightOffset">
      <summary>
        <para>Offset to the vertical root position.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.keepOriginalOrientation">
      <summary>
        <para>Keeps the vertical position as it is authored in the source file.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.keepOriginalPositionXZ">
      <summary>
        <para>Keeps the vertical position as it is authored in the source file.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.keepOriginalPositionY">
      <summary>
        <para>Keeps the vertical position as it is authored in the source file.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.lastFrame">
      <summary>
        <para>Last frame of the clip.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.lockRootHeightY">
      <summary>
        <para>Enable to make vertical root motion be baked into the movement of the bones. Disable to make vertical root motion be stored as root motion.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.lockRootPositionXZ">
      <summary>
        <para>Enable to make horizontal root motion be baked into the movement of the bones. Disable to make horizontal root motion be stored as root motion.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.lockRootRotation">
      <summary>
        <para>Enable to make root rotation be baked into the movement of the bones. Disable to make root rotation be stored as root motion.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.loop">
      <summary>
        <para>Is the clip a looping animation?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.loopPose">
      <summary>
        <para>Enable to make the motion loop seamlessly.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.loopTime">
      <summary>
        <para>Enable to make the clip loop.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.maskNeedsUpdating">
      <summary>
        <para>Returns true when the source AvatarMask has changed. This only happens when  ModelImporterClipAnimation.maskType is set to ClipAnimationMaskType.CopyFromOther
To force a reload of the mask, simply set  ModelImporterClipAnimation.maskSource to the desired AvatarMask.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.maskSource">
      <summary>
        <para>The AvatarMask used to mask transforms during the import process.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.maskType">
      <summary>
        <para>Define mask type.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.mirror">
      <summary>
        <para>Mirror left and right in this clip.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.name">
      <summary>
        <para>Clip name.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.rotationOffset">
      <summary>
        <para>Offset in degrees to the root rotation.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.takeName">
      <summary>
        <para>Take name.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ModelImporterClipAnimation.wrapMode">
      <summary>
        <para>The wrap mode of the animation.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ModelImporterClipAnimation.ConfigureClipFromMask(UnityEngine.AvatarMask)">
      <summary>
        <para>Copy the mask settings from an AvatarMask to the clip configuration.</para>
      </summary>
      <param name="mask">AvatarMask from which the mask settings will be imported.</param>
    </member>
    <member name="M:UnityEditor.ModelImporterClipAnimation.ConfigureMaskFromClip(UnityEngine.AvatarMask&amp;)">
      <summary>
        <para>Copy the current masking settings from the clip to an AvatarMask.</para>
      </summary>
      <param name="mask">AvatarMask to which the masking values will be saved.</param>
    </member>
    <member name="T:UnityEditor.ModelImporterGenerateAnimations">
      <summary>
        <para>Animation generation options for ModelImporter. These options relate to the legacy Animation system, they should only be used when ModelImporter.animationType==ModelImporterAnimationType.Legacy.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterGenerateAnimations.GenerateAnimations">
      <summary>
        <para>Default animation import mode (All animations are stored in the root object).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterGenerateAnimations.InNodes">
      <summary>
        <para>Generate animations in the objects that animate.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterGenerateAnimations.InOriginalRoots">
      <summary>
        <para>Generate animations in the root objects of the animation package.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterGenerateAnimations.InRoot">
      <summary>
        <para>Generate animations in the transform root objects.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterGenerateAnimations.None">
      <summary>
        <para>Do not generate animations.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterGenerateMaterials">
      <summary>
        <para>Material generation options for ModelImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterGenerateMaterials.None">
      <summary>
        <para>Do not generate materials.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterGenerateMaterials.PerSourceMaterial">
      <summary>
        <para>Generate a material for each material in the source asset.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterGenerateMaterials.PerTexture">
      <summary>
        <para>Generate a material for each texture used.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterHumanoidOversampling">
      <summary>
        <para>Humanoid Oversampling available multipliers.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterHumanoidOversampling.X1">
      <summary>
        <para>Default Humanoid Oversampling multiplier = 1 which is equivalent to no oversampling.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterHumanoidOversampling.X2">
      <summary>
        <para>Humanoid Oversampling samples at 2 times the sampling rate found in the imported file.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterHumanoidOversampling.X4">
      <summary>
        <para>Humanoid Oversampling samples at 4 times the sampling rate found in the imported file.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterHumanoidOversampling.X8">
      <summary>
        <para>Humanoid Oversampling samples at 8 times the sampling rate found in the imported file.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterIndexFormat">
      <summary>
        <para>Format of the imported mesh index buffer data.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterIndexFormat.Auto">
      <summary>
        <para>Use 16 or 32 bit index buffer depending on mesh size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterIndexFormat.UInt16">
      <summary>
        <para>Use 16 bit index buffer.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterIndexFormat.UInt32">
      <summary>
        <para>Use 32 bit index buffer.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterMaterialImportMode">
      <summary>
        <para>Material import options for ModelImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterMaterialImportMode.ImportStandard">
      <summary>
        <para>The model importer imports materials in standard mode.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterMaterialImportMode.ImportViaMaterialDescription">
      <summary>
        <para>Enables the PreprocessMaterialDescription AssetPostprocessor on the current importer.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterMaterialImportMode.None">
      <summary>
        <para>The model importer does not import materials.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterMaterialLocation">
      <summary>
        <para>Material import options for ModelImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterMaterialLocation.External">
      <summary>
        <para>Extract the materials and textures from the model.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterMaterialLocation.InPrefab">
      <summary>
        <para>Unity imports materials as sub-assets.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterMaterialName">
      <summary>
        <para>Material naming options for ModelImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterMaterialName.BasedOnMaterialName">
      <summary>
        <para>Use a material name of the form &lt;materialName&gt;.mat.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterMaterialName.BasedOnModelNameAndMaterialName">
      <summary>
        <para>Use material names in the form &lt;modelFileName&gt;-&lt;materialName&gt;.mat.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterMaterialName.BasedOnTextureName">
      <summary>
        <para>Use material names in the form &lt;textureName&gt;.mat.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterMaterialName.BasedOnTextureName_Or_ModelNameAndMaterialName">
      <summary>
        <para>&lt;textureName&gt;.mat or &lt;modelFileName&gt;-&lt;materialName&gt;.mat material name.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterMaterialSearch">
      <summary>
        <para>Material search options for ModelImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterMaterialSearch.Everywhere">
      <summary>
        <para>Search in all project.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterMaterialSearch.Local">
      <summary>
        <para>Search in local Materials folder.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterMaterialSearch.RecursiveUp">
      <summary>
        <para>Recursive-up search in Materials folders.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterMeshCompression">
      <summary>
        <para>Mesh compression options for ModelImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterMeshCompression.High">
      <summary>
        <para>High amount of mesh compression.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterMeshCompression.Low">
      <summary>
        <para>Low amount of mesh compression.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterMeshCompression.Medium">
      <summary>
        <para>Medium amount of mesh compression.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterMeshCompression.Off">
      <summary>
        <para>No mesh compression (default).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterNormalCalculationMode">
      <summary>
        <para>Normal generation options for ModelImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterNormalCalculationMode.AngleWeighted">
      <summary>
        <para>The normals are weighted by the vertex angle on each face.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterNormalCalculationMode.AreaAndAngleWeighted">
      <summary>
        <para>The normals are weighted by both the face area and the vertex angle on each face.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterNormalCalculationMode.AreaWeighted">
      <summary>
        <para>The normals are weighted by the face area.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterNormalCalculationMode.Unweighted">
      <summary>
        <para>The normals are not weighted.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterNormalCalculationMode.Unweighted_Legacy">
      <summary>
        <para>The normals are unweighted. This option uses the legacy algorithm for handling hard edges.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterNormals">
      <summary>
        <para>Normal generation options for ModelImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterNormals.Calculate">
      <summary>
        <para>Calculate vertex normals.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterNormals.Import">
      <summary>
        <para>Import vertex normals from model file (default).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterNormals.None">
      <summary>
        <para>Do not import vertex normals.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterNormalSmoothingSource">
      <summary>
        <para>Source of smoothing information for calculation of normals in ModelImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterNormalSmoothingSource.FromAngle">
      <summary>
        <para>Use the angle between adjacent faces to determine if an edge is smooth or hard.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterNormalSmoothingSource.FromSmoothingGroups">
      <summary>
        <para>Use smoothing groups to determine which edges are smooth and which are hard.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterNormalSmoothingSource.None">
      <summary>
        <para>Do not create hard edges.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterNormalSmoothingSource.PreferSmoothingGroups">
      <summary>
        <para>Use smoothing groups if they are present in the Model file, otherwise use angle (default).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterSecondaryUVMarginMethod">
      <summary>
        <para>Methods for handling margins during lightmap UV generation in ModelImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterSecondaryUVMarginMethod.Calculate">
      <summary>
        <para>Calculate suitable lightmap UV margins based on expected lightmap resolution and object scale.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterSecondaryUVMarginMethod.Manual">
      <summary>
        <para>Specify pack margin manually.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterSkinWeights">
      <summary>
        <para>Skin weights options for ModelImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterSkinWeights.Custom">
      <summary>
        <para>Import a custom number of bones per vertex.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterSkinWeights.Standard">
      <summary>
        <para>Import the standard number of bones per vertex (currently 4).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterTangents">
      <summary>
        <para>Vertex tangent generation options for ModelImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterTangents.CalculateLegacy">
      <summary>
        <para>Calculate tangents with legacy algorithm.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterTangents.CalculateLegacyWithSplitTangents">
      <summary>
        <para>Calculate tangents with legacy algorithm, with splits across UV charts.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterTangents.CalculateMikk">
      <summary>
        <para>Calculate tangents using MikkTSpace (default).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterTangents.Import">
      <summary>
        <para>Import vertex tangents from model file.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterTangents.None">
      <summary>
        <para>Do not import vertex tangents.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ModelImporterTangentSpaceMode">
      <summary>
        <para>Tangent space generation options for ModelImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterTangentSpaceMode.Calculate">
      <summary>
        <para>Calculate tangents.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterTangentSpaceMode.Import">
      <summary>
        <para>Import normals/tangents from file.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ModelImporterTangentSpaceMode.None">
      <summary>
        <para>Strip normals/tangents.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MonoImporter">
      <summary>
        <para>Represents a C# script in the project.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MonoImporter.GetAllRuntimeMonoScripts">
      <summary>
        <para>Gets an array of scripts that will be available at runtime.</para>
      </summary>
      <returns>
        <para>Returns an array of scripts.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MonoImporter.GetDefaultReference(System.String)">
      <summary>
        <para>Gets the default value for a reference field in the imported MonoScript.</para>
      </summary>
      <param name="name">The name of a public field in the imported MonoScript.</param>
      <returns>
        <para>The Unity object to use as a default value for the given reference field.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MonoImporter.GetExecutionOrder(UnityEditor.MonoScript)">
      <summary>
        <para>Gets the execution order for a MonoScript.</para>
      </summary>
      <param name="script">The script to retrieve the execution order for.</param>
      <returns>
        <para>Returns the execution order for the given MonoScript.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MonoImporter.GetIcon">
      <summary>
        <para>Gets the icon to associate with the imported MonoScript.</para>
      </summary>
      <returns>
        <para>Returns the custom icon that will be associated with the imported MonoScript. If no custom icon will be associated with the imported MonoScript, returns null.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MonoImporter.GetScript">
      <summary>
        <para>Gets the imported MonoScript. If the imported C# file contains multiple classes, the first is returned.</para>
      </summary>
      <returns>
        <para>Returns the imported script.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MonoImporter.SetDefaultReferences(System.String[],UnityEngine.Object[])">
      <summary>
        <para>Sets default references for this MonoScript.</para>
      </summary>
      <param name="name">An array of names of public fields in the imported MonoScript. The type of each field must be derived from UnityEngine.Object.</param>
      <param name="target">An array of objects to use as default values. The size of the array must match the size of the names array. The array can include null values.</param>
    </member>
    <member name="M:UnityEditor.MonoImporter.SetExecutionOrder(UnityEditor.MonoScript,System.Int32)">
      <summary>
        <para>Sets the execution order for a MonoScript. This method forces Unity to reimport the MonoImporter for the target script.</para>
      </summary>
      <param name="script">The script to set the execution order for.</param>
      <param name="order">The execution order for the given MonoScript.</param>
    </member>
    <member name="M:UnityEditor.MonoImporter.SetIcon(UnityEngine.Texture2D)">
      <summary>
        <para>Sets a custom icon to associate with the imported MonoScript.</para>
      </summary>
      <param name="icon">The custom icon to associate with the imported MonoScript. When the value is null, Unity restores the default icon.</param>
    </member>
    <member name="T:UnityEditor.MonoScript">
      <summary>
        <para>Representation of Script assets.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MonoScript.FromMonoBehaviour(UnityEngine.MonoBehaviour)">
      <summary>
        <para>Returns the MonoScript object containing specified MonoBehaviour.</para>
      </summary>
      <param name="behaviour">The MonoBehaviour whose MonoScript should be returned.</param>
    </member>
    <member name="M:UnityEditor.MonoScript.FromScriptableObject(UnityEngine.ScriptableObject)">
      <summary>
        <para>Returns the MonoScript object containing specified ScriptableObject.</para>
      </summary>
      <param name="scriptableObject">The ScriptableObject whose MonoScript should be returned.</param>
    </member>
    <member name="M:UnityEditor.MonoScript.GetClass">
      <summary>
        <para>Returns the System.Type object of the class implemented by this script.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MouseCursor">
      <summary>
        <para>Custom mouse cursor shapes used with EditorGUIUtility.AddCursorRect.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.Arrow">
      <summary>
        <para>Normal pointer arrow.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.ArrowMinus">
      <summary>
        <para>Arrow with the minus symbol next to it.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.ArrowPlus">
      <summary>
        <para>Arrow with the plus symbol next to it.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.CustomCursor">
      <summary>
        <para>The current user defined cursor.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.FPS">
      <summary>
        <para>Cursor with an eye and stylized arrow keys for FPS navigation.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.Link">
      <summary>
        <para>Arrow with a Link badge (for assigning pointers).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.MoveArrow">
      <summary>
        <para>Arrow with the move symbol next to it for the sceneview.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.Orbit">
      <summary>
        <para>Cursor with an eye for orbit.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.Pan">
      <summary>
        <para>Cursor with a dragging hand for pan.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.ResizeHorizontal">
      <summary>
        <para>Horizontal resize arrows.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.ResizeUpLeft">
      <summary>
        <para>Resize up-Left for window edges.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.ResizeUpRight">
      <summary>
        <para>Resize up-right for window edges.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.ResizeVertical">
      <summary>
        <para>Vertical resize arrows.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.RotateArrow">
      <summary>
        <para>Arrow with the rotate symbol next to it for the sceneview.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.ScaleArrow">
      <summary>
        <para>Arrow with the scale symbol next to it for the sceneview.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.SlideArrow">
      <summary>
        <para>Arrow with small arrows for indicating sliding at number fields.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.SplitResizeLeftRight">
      <summary>
        <para>Left-Right resize arrows for window splitters.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.SplitResizeUpDown">
      <summary>
        <para>Up-Down resize arrows for window splitters.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.Text">
      <summary>
        <para>Text cursor.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MouseCursor.Zoom">
      <summary>
        <para>Cursor with a magnifying glass for zoom.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MPE.ChannelClient">
      <summary>
        <para>ChannelClient is a WebSocket client that connects to Unity's ChannelService, which is a WebSocket server.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MPE.ChannelClient.channelName">
      <summary>
        <para>The name of the channel this ChannelClient is connected to. The name matches the route of the URL used to connect to Unity's ChannelService. For example, 127.0.0.1:8928/&lt;my Channel Name&gt;.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MPE.ChannelClient.clientId">
      <summary>
        <para>The channel ID, which essentially a hash of the channel name. See ChannelService.ChannelNameToId.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MPE.ChannelClient.isAutoTick">
      <summary>
        <para>Specifies whether Unity processes (ticks) this ChannelClient's incoming and outgoing messages automatically, or the user processes (ticks) them manually, either in the main thread or a dedicated thread.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.Close">
      <summary>
        <para>Closes the ChannelClient. This closes the WebSocket client but not the Channel in the ChannelService. Other ChannelClients can still connect on the same Channel.</para>
      </summary>
      <param name="channelName">The name of the channel to close.</param>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.Close(System.String)">
      <summary>
        <para>Closes the ChannelClient. This closes the WebSocket client but not the Channel in the ChannelService. Other ChannelClients can still connect on the same Channel.</para>
      </summary>
      <param name="channelName">The name of the channel to close.</param>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.GetChannelClientInfo">
      <summary>
        <para>Gets the ChannelClientInfo for a specific channel.</para>
      </summary>
      <param name="channelName">The name of the channel to get information about.</param>
      <param name="clientId">The ID of the channel to get information about.</param>
      <returns>
        <para>A structure that describes the channel.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.GetChannelClientInfo(System.String)">
      <summary>
        <para>Gets the ChannelClientInfo for a specific channel.</para>
      </summary>
      <param name="channelName">The name of the channel to get information about.</param>
      <param name="clientId">The ID of the channel to get information about.</param>
      <returns>
        <para>A structure that describes the channel.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.GetChannelClientInfo(System.Int32)">
      <summary>
        <para>Gets the ChannelClientInfo for a specific channel.</para>
      </summary>
      <param name="channelName">The name of the channel to get information about.</param>
      <param name="clientId">The ID of the channel to get information about.</param>
      <returns>
        <para>A structure that describes the channel.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.GetChannelClientList">
      <summary>
        <para>Gets information for all ChannelClients running on a single instance of Unity.</para>
      </summary>
      <returns>
        <para>A list of ChannelClientInfo for all clients.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.GetOrCreateClient(System.String)">
      <summary>
        <para>Creates a new ChannelClient on a specific channel. If a client already exists, this method gets the client.</para>
      </summary>
      <param name="channelName">The name of the channel to open. This matches the last part of a WebSocket URL. For example, "127.0.0.1:9090/&lt;channelName&gt;".</param>
      <returns>
        <para>Instance of the newly-created or existing ChannelClient.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.IsConnected">
      <summary>
        <para>Checks whether the ChannelClient connected to a ChannelService.</para>
      </summary>
      <returns>
        <para>Return true if connected, and false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.NewRequestId">
      <summary>
        <para>Creates a unique request ID for this ChannelClient in this instance of Unity. For more information about requests, see ChannelClient.Request.</para>
      </summary>
      <param name="clientId">The ChannelClient ID to generate the request from.</param>
      <returns>
        <para>The request ID.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.NewRequestId(System.Int32)">
      <summary>
        <para>Creates a unique request ID for this ChannelClient in this instance of Unity. For more information about requests, see ChannelClient.Request.</para>
      </summary>
      <param name="clientId">The ChannelClient ID to generate the request from.</param>
      <returns>
        <para>The request ID.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.RegisterMessageHandler(System.Action`1&lt;System.String&gt;)">
      <summary>
        <para>Registers a new handler on a specific channel. The new handler is called whenever a message is sent to the ChannelClient.</para>
      </summary>
      <param name="handler">A handler for all incoming messages on a specific channel.</param>
      <returns>
        <para>An action that, when invoked, unregisters the ChannelClient handler (See ChannelClient.UnregisterMessageHandler).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.RegisterMessageHandler(System.Action`1&lt;System.Byte[]&gt;)">
      <summary>
        <para>Registers a new handler on a specific channel. The new handler is called whenever a message is sent to the ChannelClient.</para>
      </summary>
      <param name="handler">A handler for all incoming messages on a specific channel.</param>
      <returns>
        <para>An action that, when invoked, unregisters the ChannelClient handler (See ChannelClient.UnregisterMessageHandler).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.Send(System.String)">
      <summary>
        <para>Sends an ASCII or binary message to the ChannelService. Depending on how the channel's handler processes the message, it may also be sent to other connections.</para>
      </summary>
      <param name="data">Data to send.</param>
      <param name="connectionId">The connection ID of the client sending the data.</param>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.Send(System.Byte[])">
      <summary>
        <para>Sends an ASCII or binary message to the ChannelService. Depending on how the channel's handler processes the message, it may also be sent to other connections.</para>
      </summary>
      <param name="data">Data to send.</param>
      <param name="connectionId">The connection ID of the client sending the data.</param>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.Send(System.Int32,System.Byte[])">
      <summary>
        <para>Sends an ASCII or binary message to the ChannelService. Depending on how the channel's handler processes the message, it may also be sent to other connections.</para>
      </summary>
      <param name="data">Data to send.</param>
      <param name="connectionId">The connection ID of the client sending the data.</param>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.Shutdown">
      <summary>
        <para>Closes all ChannelClients in this instance of Unity.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.Start(System.Boolean)">
      <summary>
        <para>Starts an existing ChannelClient so it listens to incoming and outgoing messages.</para>
      </summary>
      <param name="autoTick">Specifies whether Unity processes (ticks) this ChannelClient's incoming and outgoing messages automatically, or the user processes (ticks) them manually, either in the main thread or a dedicated thread.</param>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.Stop">
      <summary>
        <para>Stops a specific ChannelClient from listening for new messages. This is different than ChannelClient.Close because you can restart the channel client using ChannelClient.Start.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.Tick">
      <summary>
        <para>Ticks the ChannelClient. When you call this method, it checks whether any incoming messages from the server need to be processed, and whether any outgoing messages need to be sent to the server.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.UnregisterMessageHandler(System.Action`1&lt;System.String&gt;)">
      <summary>
        <para>Unregisters a specific channel handler from a ChannelClient.</para>
      </summary>
      <param name="handler">The handler to unregister.</param>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClient.UnregisterMessageHandler(System.Action`1&lt;System.Byte[]&gt;)">
      <summary>
        <para>Unregisters a specific channel handler from a ChannelClient.</para>
      </summary>
      <param name="handler">The handler to unregister.</param>
    </member>
    <member name="T:UnityEditor.MPE.ChannelClientInfo">
      <summary>
        <para>A structure that contains all of a ChannelClient's connection data.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MPE.ChannelClientInfo.clientId">
      <summary>
        <para>The channel's channel ID (see ChannelClient.clientId).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MPE.ChannelClientInfo.connectionId">
      <summary>
        <para>The ChannelClient's connection ID.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MPE.ChannelClientInfo.name">
      <summary>
        <para>The ChannelClient's name (see ChannelClient.channelName. This matches the route of the URL connecting to the ChannelService. For example, "127.0.0.1:9292/&lt;channelName&gt;".</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MPE.ChannelClientScope">
      <summary>
        <para>Scope that can be use to open a channel client on a specific channel and close the channel when the scope ends.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MPE.ChannelClientScope.client">
      <summary>
        <para>Get the Chanel client of this scope.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClientScope.#ctor(System.Boolean,System.String,System.Action`1&lt;System.String&gt;,System.Boolean)">
      <summary>
        <para>Create a new Channel Client scope.</para>
      </summary>
      <param name="autoTick">If true, starts the channel client in auto tick mode.</param>
      <param name="channelName">Name of the channel to open.</param>
      <param name="handler">Handler to process message on the channel.</param>
      <param name="closeClientOnExit">If true, closes the client on exit.</param>
    </member>
    <member name="M:UnityEditor.MPE.ChannelClientScope.#ctor(System.Boolean,System.String,System.Action`1&lt;System.Byte[]&gt;,System.Boolean)">
      <summary>
        <para>Create a new Channel Client scope.</para>
      </summary>
      <param name="autoTick">If true, starts the channel client in auto tick mode.</param>
      <param name="channelName">Name of the channel to open.</param>
      <param name="handler">Handler to process message on the channel.</param>
      <param name="closeClientOnExit">If true, closes the client on exit.</param>
    </member>
    <member name="T:UnityEditor.MPE.ChannelInfo">
      <summary>
        <para>A structure that contains the connection information of a Channel in ChannelService.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MPE.ChannelInfo.id">
      <summary>
        <para>The ID of a specific channel. Normally this is the hash of the channel name.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MPE.ChannelInfo.name">
      <summary>
        <para>The name of the channel. This matches the route of the URL that connects to the ChannelService. For example, "127.0.0.1:9292/&lt;channelName&gt;".</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MPE.ChannelScope">
      <summary>
        <para>Scope that cna be use to open a channel and that will close the channel when the scope ends.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MPE.ChannelService">
      <summary>
        <para>The ChannelService encapsulates a WebSocket server running in Unity.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.Broadcast(System.Int32,System.Byte[])">
      <summary>
        <para>Sends a message to all  of a specific channel's ChannelClient connections.</para>
      </summary>
      <param name="channelId">The ID of the channel to send the message to.</param>
      <param name="data">The message to send. It can be binary or UTF8.</param>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.Broadcast(System.Int32,System.String)">
      <summary>
        <para>Sends a message to all  of a specific channel's ChannelClient connections.</para>
      </summary>
      <param name="channelId">The ID of the channel to send the message to.</param>
      <param name="data">The message to send. It can be binary or UTF8.</param>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.BroadcastBinary(System.Int32,System.Byte[])">
      <summary>
        <para>Sends a message to all  of a specific channel's ChannelClient connections.</para>
      </summary>
      <param name="channelId">The ID of the channel to send the message to.</param>
      <param name="data">The binary data to send.</param>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.ChannelNameToId(System.String)">
      <summary>
        <para>Closes a specific channel and all connections to that channel.</para>
      </summary>
      <param name="channelName">The ChannelName.</param>
      <returns>
        <para>The ChannelId.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.CloseChannel(System.String)">
      <summary>
        <para>Closes a specific channel and all connections to that channel.</para>
      </summary>
      <param name="channelName">The name of the channel to close.</param>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.GetAddress">
      <summary>
        <para>Gets the address of the ChannelService. This is always a local address. For example, 127.0.0.1.</para>
      </summary>
      <returns>
        <para>The address where the ChannelService listens to new connections.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.GetChannelClientList">
      <summary>
        <para>Gets a list of all channel clients connected to the ChannelService.</para>
      </summary>
      <returns>
        <para>A list that contains the ChannelInfo for every channel client.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.GetChannelList">
      <summary>
        <para>Gets a list of channels open in the ChannelService. By default the ChannelService always has a "status" channel and an "events" channel.</para>
      </summary>
      <returns>
        <para>A list that contains the ChannelInfo for every open channel.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.GetOrCreateChannel(System.String,System.Action`2&lt;System.Int32,System.Byte[]&gt;)">
      <summary>
        <para>Gets or creates a new channel.</para>
      </summary>
      <param name="channelName">The name of the channel to retrieve.</param>
      <param name="handler">The channel handler to register.</param>
      <returns>
        <para>This action can be invoked to unregister the handler from the channel (see ChannelService.UnregisterMessageHandler).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.GetPort">
      <summary>
        <para>Retrieves the port where the ChannelService runs. This port is chosen randomly when the ChannelService first starts. Alternatively you can specify the port from the command line, using the --ump-channel-service-port &lt;portNumber&gt; switch.</para>
      </summary>
      <returns>
        <para>The port number of the ChannelService.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.IsRunning">
      <summary>
        <para>Checks whether the ChannelService is running and listening to new connections..</para>
      </summary>
      <returns>
        <para>True if the service has started and false if it hasn't.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.RegisterMessageHandler(System.String,System.Action`2&lt;System.Int32,System.Byte[]&gt;)">
      <summary>
        <para>Registers a handler to process all incoming messages on a specific channel.</para>
      </summary>
      <param name="channelName">The name of the channel.</param>
      <param name="handler">The handler that processes messages.</param>
      <returns>
        <para>An action that you can use to unregister the handler from message processing (see ChannelService.UnregisterMessageHandler).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.Send(System.Int32,System.Byte[])">
      <summary>
        <para>Sends a message to a specific connection. The message can be binary or UTF8.</para>
      </summary>
      <param name="connectionId">The connection ID. This matches ChannelClientInfo.channelClientId.</param>
      <param name="data">Data to send to the connected client.</param>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.Send(System.Int32,System.String)">
      <summary>
        <para>Sends a message to a specific connection. The message can be binary or UTF8.</para>
      </summary>
      <param name="connectionId">The connection ID. This matches ChannelClientInfo.channelClientId.</param>
      <param name="data">Data to send to the connected client.</param>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.Start">
      <summary>
        <para>Starts the ChannelService. After you start the ChannelService it listens to connection at the URL provided by: &lt;ChannelService Address&gt;:&lt;ChannelServicePort&gt;&lt;channelName&gt;, for example, 127.0.0.1:9976events. See ChannelService.GetAddress and ChannnelService.GetPort.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.Stop">
      <summary>
        <para>Stops the ChannelService from listening to connections, and closes any already established connections.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MPE.ChannelService.UnregisterMessageHandler(System.String,System.Action`2&lt;System.Int32,System.Byte[]&gt;)">
      <summary>
        <para>Unregisters a specific handler from a Channel.</para>
      </summary>
      <param name="channelName">The channel to stop processing messages on.</param>
      <param name="handler">The handler to unregister.</param>
    </member>
    <member name="T:UnityEditor.MPE.EventDataSerialization">
      <summary>
        <para>The Serialization type for sending a message, with arguments, using the EventService. For more information about argument serialization, see ChannelService.Broadcast and ChannelService.Emit.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MPE.EventDataSerialization.JsonUtility">
      <summary>
        <para>Use JsonUtility.ToJson to serialize a message argument. Additional metadata is added to the message to specify which type to convert the JSON to when it is received.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MPE.EventDataSerialization.StandardJson">
      <summary>
        <para>Use normal JSON to send a message using the [[EventService]. The receiving handler gets JSON objects (Dictionary&lt;string, object&gt;, List&lt;object&gt;, primitive types) as arguments of his ChannelHandler.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MPE.EventService">
      <summary>
        <para>The EventService is a singleton implementation of a ChannelClient that runs on all instances of Unity. It is connected to the "events" channel and allows a Unity instance to send JSON messages to other EventServices in external process, or other instances of Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MPE.EventService.isConnected">
      <summary>
        <para>The EventService connected to the ChannelService's "events" channel.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MPE.EventService.CancelRequest(System.String,System.String)">
      <summary>
        <para>Checks whether there is a pending request for a specific event and, if there is, cancels it. See EventService.Request for more details on Request.</para>
      </summary>
      <param name="eventType">The event to cancel.</param>
      <param name="message">The error message sent to the pending request.</param>
      <returns>
        <para>Returns true if a pending request was found and cancelled false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.EventService.Clear">
      <summary>
        <para>Clear all pending Requests.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MPE.EventService.Close">
      <summary>
        <para>Closes the EventService, terminates connections to the ChannelService, and ensures that no more handlers are processed.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MPE.EventService.Emit(System.String,System.Object,System.Int32,UnityEditor.MPE.EventDataSerialization)">
      <summary>
        <para>Sends a fire-and-forget message to all ChannelClients connected to the "events" route.</para>
      </summary>
      <param name="eventType">The message's type name.</param>
      <param name="args">The arguments sent with the message.</param>
      <param name="targetId">When you send the event to a specific connection, this is the connection ID. By default it is set to -1, which sends the message to all other EventServices.</param>
      <param name="eventDataSerialization">Specifies how to serialize the request's arguments. This can be standard JSON, or JSON annotated with JsonUtility. You can use the latter to convert the argument to a concrete Unity object that supports JsonUtility.FromJson.</param>
    </member>
    <member name="M:UnityEditor.MPE.EventService.Emit(System.String,System.Object[],System.Int32,UnityEditor.MPE.EventDataSerialization)">
      <summary>
        <para>Sends a fire-and-forget message to all ChannelClients connected to the "events" route.</para>
      </summary>
      <param name="eventType">The message's type name.</param>
      <param name="args">The arguments sent with the message.</param>
      <param name="targetId">When you send the event to a specific connection, this is the connection ID. By default it is set to -1, which sends the message to all other EventServices.</param>
      <param name="eventDataSerialization">Specifies how to serialize the request's arguments. This can be standard JSON, or JSON annotated with JsonUtility. You can use the latter to convert the argument to a concrete Unity object that supports JsonUtility.FromJson.</param>
    </member>
    <member name="M:UnityEditor.MPE.EventService.IsRequestPending(System.String)">
      <summary>
        <para>Checks whether a request is pending on a specific event. For more information about Request, see EventService.Request.</para>
      </summary>
      <param name="eventType">Event type name.</param>
      <returns>
        <para>True if there is a pending request for this event. False otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.EventService.Log(System.String)">
      <summary>
        <para>Sends a log message to the ChannelService. Log messages are printed to the Console window.</para>
      </summary>
      <param name="msg">The message to send.</param>
      <param name="logType">The type of the message (i.e. Info, Warning or Error).</param>
    </member>
    <member name="M:UnityEditor.MPE.EventService.Log(System.String,UnityEngine.LogType)">
      <summary>
        <para>Sends a log message to the ChannelService. Log messages are printed to the Console window.</para>
      </summary>
      <param name="msg">The message to send.</param>
      <param name="logType">The type of the message (i.e. Info, Warning or Error).</param>
    </member>
    <member name="M:UnityEditor.MPE.EventService.RegisterEventHandler(System.String,System.Action`2&lt;System.String,System.Object[]&gt;)">
      <summary>
        <para>Registers a handler for a specific event type. The handler is called whenever a message of the specified type is sent. Messages are sent using EventService.Emit or EventService.Request.</para>
      </summary>
      <param name="eventType">The event type name.</param>
      <param name="handler">The handler.</param>
      <returns>
        <para>An action that, when invoked, unregisters the handler (see EventService.Off).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.EventService.RegisterEventHandler(System.String,System.Func`3&lt;System.String,System.Object[],System.Object&gt;)">
      <summary>
        <para>Registers a handler for a specific event type. The handler is called whenever a message of the specified type is sent. Messages are sent using EventService.Emit or EventService.Request.</para>
      </summary>
      <param name="eventType">The event type name.</param>
      <param name="handler">The handler.</param>
      <returns>
        <para>An action that, when invoked, unregisters the handler (see EventService.Off).</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.EventService.Request(System.String,System.Action`2&lt;System.Exception,System.Object[]&gt;,System.Object,System.Int64,UnityEditor.MPE.EventDataSerialization)">
      <summary>
        <para>Sends a request to all connected clients on the "events" channel.</para>
      </summary>
      <param name="eventType">The request's event type name.</param>
      <param name="promiseHandler">The handler called when the Request is either fulfilled or cancelled, or times out.</param>
      <param name="args">Arguments sent with the request event.</param>
      <param name="timeoutInMs">The timeout value in milliseconds. After this amount of time passes the Request is considered to be cancelled.</param>
      <param name="eventDataSerialization">Specifies how to serialize the request's arguments. This can be standard JSON, or JSON annotated with JsonUtility. You can use the latter to convert the argument to a concrete Unity object that supports JsonUtility.FromJson.</param>
    </member>
    <member name="M:UnityEditor.MPE.EventService.Request(System.String,System.Action`2&lt;System.Exception,System.Object[]&gt;,System.Object[],System.Int64,UnityEditor.MPE.EventDataSerialization)">
      <summary>
        <para>Sends a request to all connected clients on the "events" channel.</para>
      </summary>
      <param name="eventType">The request's event type name.</param>
      <param name="promiseHandler">The handler called when the Request is either fulfilled or cancelled, or times out.</param>
      <param name="args">Arguments sent with the request event.</param>
      <param name="timeoutInMs">The timeout value in milliseconds. After this amount of time passes the Request is considered to be cancelled.</param>
      <param name="eventDataSerialization">Specifies how to serialize the request's arguments. This can be standard JSON, or JSON annotated with JsonUtility. You can use the latter to convert the argument to a concrete Unity object that supports JsonUtility.FromJson.</param>
    </member>
    <member name="M:UnityEditor.MPE.EventService.Start">
      <summary>
        <para>Starts the EventService so it listens to new messages.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MPE.EventService.Tick">
      <summary>
        <para>Ticks the EventService. This processes all incoming and outgoing messages. By default, the EventService is ticked on each EditorApplication.update.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MPE.EventService.UnregisterEventHandler(System.String,System.Func`3&lt;System.String,System.Object[],System.Object&gt;)">
      <summary>
        <para>Unregisters a handler from a specific event.</para>
      </summary>
      <param name="eventType">The event to unregister from.</param>
      <param name="handler">The handler to unregister.</param>
    </member>
    <member name="T:UnityEditor.MPE.ProcessEvent">
      <summary>
        <para>Enum that represents the events a RoleProvider can receive.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MPE.ProcessEvent.AfterDomainReload">
      <summary>
        <para>Domain reload occurs.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MPE.ProcessEvent.Create">
      <summary>
        <para>A new Process is created.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MPE.ProcessEvent.Initialize">
      <summary>
        <para>A new Process is initialized.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MPE.ProcessEvent.Shutdown">
      <summary>
        <para>A new Process is about to shut down.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MPE.ProcessLevel">
      <summary>
        <para>The type of the current process. It can be a Unity master instance, or a secondary instance connected to the master.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MPE.ProcessLevel.Main">
      <summary>
        <para>The current process is a main instance of UnityEditor.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MPE.ProcessLevel.Secondary">
      <summary>
        <para>The current process is a secondary instance of UnityEditor that is connected to a master instance.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MPE.ProcessService">
      <summary>
        <para>*This is an experimental feature.* The ProcessService allows you to start slave instance of UnityEditor, opened to the same Project as the master instance, with a specific RoleProviderAttribute.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MPE.ProcessService.level">
      <summary>
        <para>The ProcessLevel of the running instance of UnityEditor.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.MPE.ProcessService.roleName">
      <summary>
        <para>The role name of the running UnityEditor process. For more information about how to register handlers for a specific process role, see RoleProviderAttribute. For a UnityEditor process of ProcessLevel Master, the roleName is always empty.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MPE.ProcessService.DisableProfileConnection">
      <summary>
        <para>Closes the Profiler connection.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MPE.ProcessService.EnableProfileConnection(System.String)">
      <summary>
        <para>Enables a connection to the Profiler. The standalone Profiler uses this method.</para>
      </summary>
      <param name="dataPath">Where to save profiling data. Normally this is set to Application.dataPath.</param>
      <returns>
        <para>Greater than 0 if successful.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ProcessService.GetProcessState(System.Int32)">
      <summary>
        <para>Gets the ProcessState of a given instance of UnityEditor.</para>
      </summary>
      <param name="pid">The process ID.</param>
      <returns>
        <para>The state of the queried process.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ProcessService.HasCapability(System.String)">
      <summary>
        <para>Checks whether the current process has a given capability.</para>
      </summary>
      <param name="capName">The capability name.</param>
      <returns>
        <para>True if the process has the capability. False otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ProcessService.IsChannelServiceStarted">
      <summary>
        <para>Checks whether the ChannelService is already started.</para>
      </summary>
      <returns>
        <para>True if the ChannelService is started. False otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.MPE.ProcessService.Launch(System.String,System.String[])">
      <summary>
        <para>Launches a secondary instance of UnityEditor on the same project as the master instance.</para>
      </summary>
      <param name="roleName">The name that corresponds to the RoleProviderAttribute of the process to start.</param>
      <param name="keyValuePairs">Arguments passed to the slave process.</param>
      <returns>
        <para>The process ID of the slave process. A value of 0 means the slave process could not be started.</para>
      </returns>
    </member>
    <member name="?:UnityEditor.MPE.ProcessService.ProcessExitedEvent(System.Action`2&lt;System.Int32,UnityEditor.MPE.ProcessState&gt;)">
      <summary>
        <para>An event triggered in a master instance of UnityEditor when you start a slave instance with ProcessService.Launch exit.</para>
      </summary>
      <param name="value">The first parameter is the process ID (PID) of the slave process that exited. The second parameter is the ProcessState of the slave process.</param>
    </member>
    <member name="M:UnityEditor.MPE.ProcessService.ReadParameter(System.String)">
      <summary>
        <para>A utility function to read command line arguments passed to the current process.</para>
      </summary>
      <param name="paramName">Specific name of a command line parameter.</param>
      <returns>
        <para>The parameter value. If empty, the parameter wasn't used on the command line.</para>
      </returns>
    </member>
    <member name="?:UnityEditor.MPE.ProcessService.SlaveProcessExitedEvent(System.Action`2&lt;System.Int32,UnityEditor.MPE.ProcessState&gt;)">
      <summary>
        <para>An event triggered in a master instance of UnityEditor when you start a slave instance with ProcessService.LaunchSlave exit.</para>
      </summary>
      <param name="value">The first parameter is the process ID (PID) of the slave process that exited. The second parameter is the ProcessState of the slave process.</param>
    </member>
    <member name="M:UnityEditor.MPE.ProcessService.Terminate(System.Int32)">
      <summary>
        <para>Terminates an editor process.</para>
      </summary>
      <param name="pid">The process ID of the process to terminate.</param>
    </member>
    <member name="T:UnityEditor.MPE.ProcessState">
      <summary>
        <para>Describes the state of a specifc UnityEditor process.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MPE.ProcessState.FinishedSuccessfully">
      <summary>
        <para>The queried UnityEditor process ended successfully.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MPE.ProcessState.FinishedWithError">
      <summary>
        <para>The queried UnityEditor process finished with an error.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MPE.ProcessState.Running">
      <summary>
        <para>The queried UnityEditor process is running.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MPE.ProcessState.UnknownProcess">
      <summary>
        <para>The queried UnityEditor process is unknown.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.MPE.RoleProviderAttribute">
      <summary>
        <para>An attribute used to decorate function that defines how a slave process can interact with a main instance of Unity.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MPE.RoleProviderAttribute.eventType">
      <summary>
        <para>The event that the process triggered.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MPE.RoleProviderAttribute.level">
      <summary>
        <para>The process level (either master or slave) that the handler is registered on.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.MPE.RoleProviderAttribute.name">
      <summary>
        <para>The name of the RoleProvider. For example, StandaloneProfiler.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.MPE.RoleProviderAttribute.#ctor(System.String,UnityEditor.MPE.ProcessEvent)">
      <summary>
        <para>Constructor for a RoleProviderAttribute. Allows you to register a handler that is triggered when a specific ProcessEvent is triggered in a UnityEditor process of a specific ProcessLevel.</para>
      </summary>
      <param name="name">The name of the RoleProvider. For example, StandaloneProfiler.</param>
      <param name="eventType">The event that the process triggered.</param>
      <param name="level">The process level (either master or slave) that this handler should be registered on.</param>
    </member>
    <member name="M:UnityEditor.MPE.RoleProviderAttribute.#ctor(UnityEditor.MPE.ProcessLevel,UnityEditor.MPE.ProcessEvent)">
      <summary>
        <para>Constructor for a RoleProviderAttribute. Allows you to register a handler that is triggered when a specific ProcessEvent is triggered in a UnityEditor process of a specific ProcessLevel.</para>
      </summary>
      <param name="name">The name of the RoleProvider. For example, StandaloneProfiler.</param>
      <param name="eventType">The event that the process triggered.</param>
      <param name="level">The process level (either master or slave) that this handler should be registered on.</param>
    </member>
    <member name="T:UnityEditor.Networking.PlayerConnection.ConnectedPlayer">
      <summary>
        <para>Information of the connected player.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Networking.PlayerConnection.ConnectedPlayer.name">
      <summary>
        <para>The name of the connected player.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Networking.PlayerConnection.ConnectedPlayer.playerId">
      <summary>
        <para>The ID of the player connected.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Networking.PlayerConnection.EditorConnection">
      <summary>
        <para>Handles the connection from the Editor to the Player.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Networking.PlayerConnection.EditorConnection.ConnectedPlayers">
      <summary>
        <para>A list of the connected Players.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Networking.PlayerConnection.EditorConnection.DisconnectAll">
      <summary>
        <para>Disconnects all of the active connections between the Editor and the Players.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Networking.PlayerConnection.EditorConnection.Initialize">
      <summary>
        <para>Initializes the EditorConnection.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Networking.PlayerConnection.EditorConnection.Register(System.Guid,UnityEngine.Events.UnityAction`1&lt;UnityEngine.Networking.PlayerConnection.MessageEventArgs&gt;)">
      <summary>
        <para>Registers a callback on a certain message ID.</para>
      </summary>
      <param name="messageId">The message ID that invokes the callback when received by the Editor.</param>
      <param name="callback">Action that is executed when a message with ID messageId is received by the Editor.
The callback includes the data that is sent from the Player, and the Player's ID.
The Player ID is used to distinguish between multiple Players connected to the same Editor.</param>
    </member>
    <member name="M:UnityEditor.Networking.PlayerConnection.EditorConnection.RegisterConnection(UnityEngine.Events.UnityAction`1&lt;System.Int32&gt;)">
      <summary>
        <para>Registers a callback, executed when a new Player connects to the Editor.</para>
      </summary>
      <param name="callback">Action called when a new Player connects, with the Player ID of the Player.</param>
    </member>
    <member name="M:UnityEditor.Networking.PlayerConnection.EditorConnection.RegisterDisconnection(UnityEngine.Events.UnityAction`1&lt;System.Int32&gt;)">
      <summary>
        <para>Registers a callback on a Player when that Player disconnects.</para>
      </summary>
      <param name="callback">The Action that is called when the Player with the given Player ID disconnects.</param>
    </member>
    <member name="M:UnityEditor.Networking.PlayerConnection.EditorConnection.Send(System.Guid,System.Byte[],System.Int32)">
      <summary>
        <para>Sends data to the connected Players.</para>
      </summary>
      <param name="messageId">The type ID of the message to send to the connected Players.</param>
      <param name="playerId">The ID of the Player that you want to sent this message to. If you want to send it to all Players, set this to 0.</param>
      <param name="data">
      </param>
    </member>
    <member name="M:UnityEditor.Networking.PlayerConnection.EditorConnection.Send(System.Guid,System.Byte[])">
      <summary>
        <para>Sends data to the connected Players.</para>
      </summary>
      <param name="messageId">The type ID of the message to send to the connected Players.</param>
      <param name="playerId">The ID of the Player that you want to sent this message to. If you want to send it to all Players, set this to 0.</param>
      <param name="data">
      </param>
    </member>
    <member name="M:UnityEditor.Networking.PlayerConnection.EditorConnection.TrySend(System.Guid,System.Byte[],System.Int32)">
      <summary>
        <para>Attempts to send data from the Editor to the connected Players.</para>
      </summary>
      <param name="messageId">The type ID of the message to send to the connected Players.</param>
      <param name="playerId">The ID of the Player that you want to sent this message to. If you want to send it to all Players, set this to 0..</param>
      <param name="data">
      </param>
      <returns>
        <para>Returns true when the Editor sends data successfully, and false when there is no space in the socket ring buffer or sending fails.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Networking.PlayerConnection.EditorConnection.TrySend(System.Guid,System.Byte[])">
      <summary>
        <para>Attempts to send data from the Editor to the connected Players.</para>
      </summary>
      <param name="messageId">The type ID of the message to send to the connected Players.</param>
      <param name="playerId">The ID of the Player that you want to sent this message to. If you want to send it to all Players, set this to 0..</param>
      <param name="data">
      </param>
      <returns>
        <para>Returns true when the Editor sends data successfully, and false when there is no space in the socket ring buffer or sending fails.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Networking.PlayerConnection.EditorConnection.Unregister(System.Guid,UnityEngine.Events.UnityAction`1&lt;UnityEngine.Networking.PlayerConnection.MessageEventArgs&gt;)">
      <summary>
        <para>Deregisters a registered callback.</para>
      </summary>
      <param name="messageId">Message ID associated with the callback that you wish to deregister.</param>
      <param name="callback">The Action callback you wish to deregister.</param>
    </member>
    <member name="M:UnityEditor.Networking.PlayerConnection.EditorConnection.UnregisterConnection(UnityEngine.Events.UnityAction`1&lt;System.Int32&gt;)">
      <summary>
        <para>Unregisters the connection callback.</para>
      </summary>
      <param name="callback">
      </param>
    </member>
    <member name="M:UnityEditor.Networking.PlayerConnection.EditorConnection.UnregisterDisconnection(UnityEngine.Events.UnityAction`1&lt;System.Int32&gt;)">
      <summary>
        <para>Unregisters the disconnection callback.</para>
      </summary>
      <param name="callback">
      </param>
    </member>
    <member name="T:UnityEditor.Networking.PlayerConnection.PlayerConnectionGUI">
      <summary>
        <para>This class contains methods to draw IMGUI Editor UI that relates to the Player Connection.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Networking.PlayerConnection.PlayerConnectionGUI.ConnectionTargetSelectionDropdown(UnityEngine.Rect,UnityEngine.Networking.PlayerConnection.IConnectionState,UnityEngine.GUIStyle)">
      <summary>
        <para>Display a drop-down button and menu for the user to choose and establish a connection to a Player.</para>
      </summary>
      <param name="rect">Where to draw the drop-down button.</param>
      <param name="state">The state for the connection that is used in the EditorWindow displaying this drop-down. Use Networking.PlayerConnection.PlayerConnectionGUIUtility.GetConnectionState to get a state in OnEnable and remember to dispose of that state in OnDisable.</param>
      <param name="style">Define the GUIStyle the drop-down button should be drawn in. A default drop-down button will be drawn if no style is specified.</param>
    </member>
    <member name="T:UnityEditor.Networking.PlayerConnection.PlayerConnectionGUILayout">
      <summary>
        <para>This class contains methods to draw and automatically layout IMGUI Editor UI that relates to the Player Connection.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Networking.PlayerConnection.PlayerConnectionGUILayout.ConnectionTargetSelectionDropdown(UnityEngine.Networking.PlayerConnection.IConnectionState,UnityEngine.GUIStyle)">
      <summary>
        <para>Display a drop-down button and menu for the user to choose and establish a connection to a Player.</para>
      </summary>
      <param name="state">The state of the connection that the EditorWindow displaying the drop-down uses. Use Networking.PlayerConnection.PlayerConnectionGUIUtility.GetConnectionState to get a state in OnEnable. Make sure you dispose of that state in OnDisable to avoid leaking it.</param>
      <param name="style">Define the GUIStyle the drop-down button should be drawn in. A default drop-down button will be drawn if non is specified.</param>
    </member>
    <member name="T:UnityEditor.Networking.PlayerConnection.PlayerConnectionGUIUtility">
      <summary>
        <para>Miscellaneous helper methods for Networking.PlayerConnection.PlayerConnectionGUI.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Networking.PlayerConnection.PlayerConnectionGUIUtility.GetConnectionState(UnityEditor.EditorWindow,System.Action`1&lt;System.String&gt;)">
      <summary>
        <para>This method generates a state tracking object for establishing and displaying an Editor to Player Connection.</para>
      </summary>
      <param name="parentWindow">The EditorWindow that will use the connection.</param>
      <param name="connectedCallback">A callback that is fired whenever a user-initiated connection-attempt succeeds.</param>
      <returns>
        <para>Returns the unserialized state of the connection to a Player, which is used in Networking.PlayerConnection.PlayerConnectionGUI.ConnectionTargetSelectionDropdown or Networking.PlayerConnection.PlayerConnectionGUILayout.ConnectionTargetSelectionDropdown. The returned connection state object contains information on what target is connected to the Player, and what targets are available.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.NormalMapEncoding">
      <summary>
        <para>Describes the encoding of normal maps.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.NormalMapEncoding.DXT5nm">
      <summary>
        <para>Two-component DXT5nm-style normal map encoding.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.NormalMapEncoding.XYZ">
      <summary>
        <para>Three-component normal map encoding.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ObjectChangeEvents">
      <summary>
        <para>Exposes events that allow you to track undoable changes to objects in the editor.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.ObjectChangeEvents.changesPublished(UnityEditor.ObjectChangeEvents/ObjectChangeEventsHandler)">
      <summary>
        <para>Event that is raised once per frame if any undoable changes have been recorded.</para>
      </summary>
      <param name="value">The stream of events that have been recorded since the last frame.</param>
    </member>
    <member name="T:UnityEditor.ObjectChangeEvents.ObjectChangeEventsHandler">
      <summary>
        <para>The delegate used for the event publishing the object changes.</para>
      </summary>
      <param name="stream">The stream of events that have been recorded since the last frame.</param>
    </member>
    <member name="T:UnityEditor.ObjectChangeEventStream">
      <summary>
        <para>Represents a stream of events that describes the changes applied to objects in memory over the course of a frame.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ObjectChangeEventStream.isCreated">
      <summary>
        <para>Indicates whether the ObjectChangeEventStream has an allocated memory buffer.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ObjectChangeEventStream.length">
      <summary>
        <para>The number of events in the stream.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ObjectChangeEventStream.Builder">
      <summary>
        <para>Provides a way to construct an instance of ObjectChangeEventStream.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ObjectChangeEventStream.Builder.eventCount">
      <summary>
        <para>The number of events that have been recorded in this instance so far.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.Builder.#ctor(Unity.Collections.Allocator)">
      <summary>
        <para>Constructs a new instance.</para>
      </summary>
      <param name="allocator">The allocator to use.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.Builder.Dispose">
      <summary>
        <para>Releases the memory associated with this instance.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.Builder.PushChangeAssetObjectPropertiesEvent(UnityEditor.ChangeAssetObjectPropertiesEventArgs&amp;)">
      <summary>
        <para>Adds an ChangeAssetObjectPropertiesEventArgs to the end of the stream.</para>
      </summary>
      <param name="data">The event data to add to the stream.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.Builder.PushChangeGameObjectOrComponentPropertiesEvent(UnityEditor.ChangeGameObjectOrComponentPropertiesEventArgs&amp;)">
      <summary>
        <para>Adds an ChangeGameObjectOrComponentPropertiesEventArgs to the end of the stream.</para>
      </summary>
      <param name="data">The event data to add to the stream.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.Builder.PushChangeGameObjectParentEvent(UnityEditor.ChangeGameObjectParentEventArgs&amp;)">
      <summary>
        <para>Adds an ChangeGameObjectParentEventArgs to the end of the stream.</para>
      </summary>
      <param name="data">The event data to add to the stream.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.Builder.PushChangeGameObjectStructureEvent(UnityEditor.ChangeGameObjectStructureEventArgs&amp;)">
      <summary>
        <para>Adds an ChangeGameObjectStructureEventArgs to the end of the stream.</para>
      </summary>
      <param name="data">The event data to add to the stream.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.Builder.PushChangeGameObjectStructureHierarchyEvent(UnityEditor.ChangeGameObjectStructureHierarchyEventArgs&amp;)">
      <summary>
        <para>Adds an ChangeGameObjectStructureHierarchyEventArgs to the end of the stream.</para>
      </summary>
      <param name="data">The event data to add to the stream.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.Builder.PushChangeSceneEvent(UnityEditor.ChangeSceneEventArgs&amp;)">
      <summary>
        <para>Adds an ChangeSceneEventArgs to the end of the stream.</para>
      </summary>
      <param name="data">The event data to add to the stream.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.Builder.PushCreateAssetObjectEvent(UnityEditor.CreateAssetObjectEventArgs&amp;)">
      <summary>
        <para>Adds an CreateAssetObjectEventArgs to the end of the stream.</para>
      </summary>
      <param name="data">The event data to add to the stream.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.Builder.PushCreateGameObjectHierarchyEvent(UnityEditor.CreateGameObjectHierarchyEventArgs&amp;)">
      <summary>
        <para>Adds an CreateGameObjectHierarchyEventArgs to the end of the stream.</para>
      </summary>
      <param name="data">The event data to add to the stream.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.Builder.PushDestroyAssetObjectEvent(UnityEditor.DestroyAssetObjectEventArgs&amp;)">
      <summary>
        <para>Adds an DestroyAssetObjectEventArgs to the end of the stream.</para>
      </summary>
      <param name="data">The event data to add to the stream.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.Builder.PushDestroyGameObjectHierarchyEvent(UnityEditor.DestroyGameObjectHierarchyEventArgs&amp;)">
      <summary>
        <para>Adds an DestroyGameObjectHierarchyEventArgs to the end of the stream.</para>
      </summary>
      <param name="data">The event data to add to the stream.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.Builder.PushUpdatePrefabInstancesEvent(UnityEditor.UpdatePrefabInstancesEventArgs&amp;)">
      <summary>
        <para>Adds an UpdatePrefabInstancesEventArgs to the end of the stream.</para>
      </summary>
      <param name="data">The event data to add to the stream.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.Builder.ToStream(Unity.Collections.Allocator)">
      <summary>
        <para>Copies the data collected in this instance into a new ObjectChangeEventStream instance.</para>
      </summary>
      <param name="allocator">The allocator to use for the new stream.</param>
      <returns>
        <para>A new stream that contains all events recorded in this instance at the time of the function call.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.Clone(Unity.Collections.Allocator)">
      <summary>
        <para>Creates a copy of this stream with the specified allocator.</para>
      </summary>
      <param name="allocator">The allocator to use to allocate the memory for the copy.</param>
      <returns>
        <para>A copy of the stream that contains the same events, but in a separate memory lcoation.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.Dispose">
      <summary>
        <para>Releases the memory associated with this stream.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.GetChangeAssetObjectPropertiesEvent(System.Int32,UnityEditor.ChangeAssetObjectPropertiesEventArgs&amp;)">
      <summary>
        <para>Retrieves the event data at the given index as a ChangeAssetObjectPropertiesEventArgs. Throws an exception if the event type requested does not match the event stored in the stream.</para>
      </summary>
      <param name="eventIdx">The index of the event to get the data for.</param>
      <param name="data">The data associated with the event.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.GetChangeGameObjectOrComponentPropertiesEvent(System.Int32,UnityEditor.ChangeGameObjectOrComponentPropertiesEventArgs&amp;)">
      <summary>
        <para>Retrieves the event data at the given index as a ChangeAssetObjectPropertiesEventArgs. Throws an exception if the event type requested does not match the event stored in the stream.</para>
      </summary>
      <param name="eventIdx">The index of the event to get the data for.</param>
      <param name="data">The data associated with the event.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.GetChangeGameObjectParentEvent(System.Int32,UnityEditor.ChangeGameObjectParentEventArgs&amp;)">
      <summary>
        <para>Retrieves the event data at the given index as a ChangeGameObjectParentEventArgs. Throws an exception if the event type requested does not match the event stored in the stream.</para>
      </summary>
      <param name="eventIdx">The index of the event to get the data for.</param>
      <param name="data">The data associated with the event.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.GetChangeGameObjectStructureEvent(System.Int32,UnityEditor.ChangeGameObjectStructureEventArgs&amp;)">
      <summary>
        <para>Retrieves the event data at the given index as a ChangeGameObjectStructureEventArgs. Throws an exception if the event type requested does not match the event stored in the stream.</para>
      </summary>
      <param name="eventIdx">The index of the event to get the data for.</param>
      <param name="data">The data associated with the event.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.GetChangeGameObjectStructureHierarchyEvent(System.Int32,UnityEditor.ChangeGameObjectStructureHierarchyEventArgs&amp;)">
      <summary>
        <para>Retrieves the event data at the given index as a ChangeGameObjectStructureHierarchyEventArgs. Throws an exception if the event type requested does not match the event stored in the stream.</para>
      </summary>
      <param name="eventIdx">The index of the event to get the data for.</param>
      <param name="data">The data associated with the event.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.GetChangeSceneEvent(System.Int32,UnityEditor.ChangeSceneEventArgs&amp;)">
      <summary>
        <para>Retrieves the event data at the given index as a ChangeSceneEventArgs. Throws an exception if the event type requested does not match the event stored in the stream.</para>
      </summary>
      <param name="eventIdx">The index of the event to get the data for.</param>
      <param name="data">
      </param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.GetCreateAssetObjectEvent(System.Int32,UnityEditor.CreateAssetObjectEventArgs&amp;)">
      <summary>
        <para>Retrieves the event data at the given index as a CreateAssetObjectEventArgs. Throws an exception if the event type requested does not match the event stored in the stream.</para>
      </summary>
      <param name="eventIdx">The index of the event to get the data for.</param>
      <param name="data">The data associated with the event.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.GetCreateGameObjectHierarchyEvent(System.Int32,UnityEditor.CreateGameObjectHierarchyEventArgs&amp;)">
      <summary>
        <para>Retrieves the event data at the given index as a CreateGameObjectHierarchyEventArgs. Throws an exception if the event type requested does not match the event stored in the stream.</para>
      </summary>
      <param name="eventIdx">The index of the event to get the data for.</param>
      <param name="data">The data associated with the event.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.GetDestroyAssetObjectEvent(System.Int32,UnityEditor.DestroyAssetObjectEventArgs&amp;)">
      <summary>
        <para>Retrieves the event data at the given index as a DestroyAssetObjectEventArgs. Throws an exception if the event type requested does not match the event stored in the stream.</para>
      </summary>
      <param name="eventIdx">The index of the event to get the data for.</param>
      <param name="data">The data associated with the event.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.GetDestroyGameObjectHierarchyEvent(System.Int32,UnityEditor.DestroyGameObjectHierarchyEventArgs&amp;)">
      <summary>
        <para>Retrieves the event data at the given index as a DestroyGameObjectHierarchyEventArgs. Throws an exception if the event type requested does not match the event stored in the stream.</para>
      </summary>
      <param name="eventIdx">The index of the event to get the data for.</param>
      <param name="data">The data associated with the event.</param>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.GetEventType(System.Int32)">
      <summary>
        <para>Returns the type of the event at the specified index.</para>
      </summary>
      <param name="eventIdx">The index of the event whose type should be returned.</param>
      <returns>
        <para>The type of the event at the specified index.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ObjectChangeEventStream.GetUpdatePrefabInstancesEvent(System.Int32,UnityEditor.UpdatePrefabInstancesEventArgs&amp;)">
      <summary>
        <para>Retrieves the event data at the given index as a UpdatePrefabInstancesEventArgs. Throws an exception if the event type requested does not match the event stored in the stream.</para>
      </summary>
      <param name="eventIdx">The index of the event to get the data for.</param>
      <param name="data">The data associated with the event.</param>
    </member>
    <member name="T:UnityEditor.ObjectChangeKind">
      <summary>
        <para>This enumeration describes the different kind of changes that can be tracked in an ObjectChangeEventStream. Each event has a corresponding type in ObjectChangeEvents.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ObjectChangeKind.ChangeAssetObjectProperties">
      <summary>
        <para>A change of this type indicates that a property of an asset object in memory has changed. This happens for example when Undo.RecordObject is used with an instance of an asset (e.g. Texture).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ObjectChangeKind.ChangeGameObjectOrComponentProperties">
      <summary>
        <para>A change of this type indicates that a property of a GameObject or Component has changed. This happens for example when Undo.RecordObject is used with an instance of a Component.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ObjectChangeKind.ChangeGameObjectParent">
      <summary>
        <para>A change of this type indicates that the parent of a GameObject has changed. This happens when Undo.SetTransformParent or SceneManager.MoveGameObjectToScene is used.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ObjectChangeKind.ChangeGameObjectStructure">
      <summary>
        <para>A change of this type indicates that the structure of a GameObject has changed. This happens when a component is added to or removed from the GameObject using Undo.AddComponent or Undo.DestroyObjectImmediate.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ObjectChangeKind.ChangeGameObjectStructureHierarchy">
      <summary>
        <para>A change of this type indicates that the structure of a GameObject has changed and any GameObject in the hierarchy below it might have changed. This happens for example when Undo.RegisterFullObjectHierarchyUndo is used.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ObjectChangeKind.ChangeScene">
      <summary>
        <para>A change of this type indicates that an open scene has been changed ("dirtied") without any more specific information available. This happens for example when EditorSceneManager.MarkSceneDirty is used.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ObjectChangeKind.CreateAssetObject">
      <summary>
        <para>A change of this type indicates that an asset object has been created. This happens for example when Undo.RegisterCreatedObjectUndo is used with an instance of an asset (e.g. Texture).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ObjectChangeKind.CreateGameObjectHierarchy">
      <summary>
        <para>A change of this type indicates that a GameObject has been created, possibly with additional objects below it in the hierarchy. This happens for example when Undo.RegisterCreatedObjectUndo is used with a GameObject.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ObjectChangeKind.DestroyAssetObject">
      <summary>
        <para>A change of this type indicates that an asset object has been destroyed. This happens for example when Undo.DestroyObjectImmediate is used with an instance of an asset (e.g. Texture).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ObjectChangeKind.DestroyGameObjectHierarchy">
      <summary>
        <para>A change of this type indicates that a GameObject and the entire hierarchy below it has been destroyed. This happens for example when Undo.DestroyObjectImmediate is used with an GameObject.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ObjectChangeKind.None">
      <summary>
        <para>Indicates an uninitialized value.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ObjectChangeKind.UpdatePrefabInstances">
      <summary>
        <para>A change of this type indicates that prefab instances in an open scene have been updated due to a change to the source prefab.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ObjectFactory">
      <summary>
        <para>Use the DefaultObject to create a new UnityEngine.Object in the editor.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.ObjectFactory.componentWasAdded(System.Action`1&lt;UnityEngine.Component&gt;)">
      <summary>
        <para>This is invoked every time a new Component or MonoBehaviour is added to a GameObject using the ObjectFactory.</para>
      </summary>
      <param name="value">The callback to be added to the invocation list.</param>
    </member>
    <member name="M:UnityEditor.ObjectFactory.AddComponent(UnityEngine.GameObject,System.Type)">
      <summary>
        <para>Creates a new component and adds it to the specified GameObject.</para>
      </summary>
      <param name="gameObject">The GameObject to add the new component to.</param>
      <param name="type">The type of component to create and add to the GameObject.</param>
      <returns>
        <para>Returns the component that was created and added to the GameObject.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ObjectFactory.AddComponent(UnityEngine.GameObject)">
      <summary>
        <para>Creates a new component and adds it to the specified GameObject.</para>
      </summary>
      <param name="gameObject">The GameObject to add the new component to.</param>
      <param name="type">The type of component to create and add to the GameObject.</param>
      <returns>
        <para>Returns the component that was created and added to the GameObject.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ObjectFactory.CreateGameObject(System.String,System.Type[])">
      <summary>
        <para>Creates a new GameObject.</para>
      </summary>
      <param name="name">Name of the GameObject.</param>
      <param name="types">The optional types to add to the GameObject when created.</param>
      <param name="scene">Scene where the GameObject should be created.</param>
      <param name="hideFlags">HideFlags to assign to the GameObject.</param>
      <returns>
        <para>Returns the GameObject that was created.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ObjectFactory.CreateGameObject(UnityEngine.SceneManagement.Scene,UnityEngine.HideFlags,System.String,System.Type[])">
      <summary>
        <para>Creates a new GameObject.</para>
      </summary>
      <param name="name">Name of the GameObject.</param>
      <param name="types">The optional types to add to the GameObject when created.</param>
      <param name="scene">Scene where the GameObject should be created.</param>
      <param name="hideFlags">HideFlags to assign to the GameObject.</param>
      <returns>
        <para>Returns the GameObject that was created.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ObjectFactory.CreateInstance(System.Type)">
      <summary>
        <para>Create a new instance of the given type.</para>
      </summary>
      <param name="type">The type of instance to create.</param>
    </member>
    <member name="M:UnityEditor.ObjectFactory.CreateInstance">
      <summary>
        <para>Create a new instance of the given type.</para>
      </summary>
      <param name="type">The type of instance to create.</param>
    </member>
    <member name="M:UnityEditor.ObjectFactory.CreatePrimitive(UnityEngine.PrimitiveType)">
      <summary>
        <para>Creates a GameObject primitive.</para>
      </summary>
      <param name="type">The type of primitive to create.</param>
    </member>
    <member name="T:UnityEditor.ObjectNames">
      <summary>
        <para>Helper class for constructing displayable names for objects.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ObjectNames.GetClassName(UnityEngine.Object)">
      <summary>
        <para>Class name of an object.</para>
      </summary>
      <param name="obj">
      </param>
    </member>
    <member name="M:UnityEditor.ObjectNames.GetDragAndDropTitle(UnityEngine.Object)">
      <summary>
        <para>Drag and drop title for an object.</para>
      </summary>
      <param name="obj">
      </param>
    </member>
    <member name="M:UnityEditor.ObjectNames.GetInspectorTitle(UnityEngine.Object)">
      <summary>
        <para>Inspector title for an object.</para>
      </summary>
      <param name="obj">
      </param>
    </member>
    <member name="M:UnityEditor.ObjectNames.GetUniqueName(System.String[],System.String)">
      <summary>
        <para>Make a unique name using the provided name as a base.

If the target name is in the provided list of existing names, a unique name is generated by appending the next available numerical increment.</para>
      </summary>
      <param name="existingNames">A list of pre-existing names.</param>
      <param name="name">Desired name to be used as is, or as a base.</param>
      <returns>
        <para>A name not found in the list of pre-existing names.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ObjectNames.NicifyVariableName(System.String)">
      <summary>
        <para>Make a displayable name for a variable.</para>
      </summary>
      <param name="name">
      </param>
    </member>
    <member name="M:UnityEditor.ObjectNames.SetNameSmart(UnityEngine.Object,System.String)">
      <summary>
        <para>Sets the name of an Object.</para>
      </summary>
      <param name="obj">
      </param>
      <param name="name">
      </param>
    </member>
    <member name="T:UnityEditor.ObjectPreview">
      <summary>
        <para>Base Class to derive from when creating Custom Previews.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ObjectPreview.target">
      <summary>
        <para>The object currently being previewed.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ObjectPreview.Cleanup">
      <summary>
        <para>Use this function to release resources allocated by the ObjectPreview implementation.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ObjectPreview.DrawPreview(UnityEngine.Rect)">
      <summary>
        <para>This is the first entry point for Preview Drawing.</para>
      </summary>
      <param name="previewArea">The available area to draw the preview.</param>
    </member>
    <member name="M:UnityEditor.ObjectPreview.GetInfoString">
      <summary>
        <para>Implement this method to show object information on top of the object preview.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ObjectPreview.GetPreviewTitle">
      <summary>
        <para>Override this method if you want to change the label of the Preview area.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ObjectPreview.HasPreviewGUI">
      <summary>
        <para>Can this component be Previewed in its current state?</para>
      </summary>
      <returns>
        <para>True if this component can be Previewed in its current state.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ObjectPreview.Initialize(UnityEngine.Object[])">
      <summary>
        <para>Called when the Preview gets created with the objects being previewed.</para>
      </summary>
      <param name="targets">The objects being previewed.</param>
    </member>
    <member name="M:UnityEditor.ObjectPreview.MoveNextTarget">
      <summary>
        <para>Called to iterate through the targets, this will be used when previewing more than one target.</para>
      </summary>
      <returns>
        <para>True if there is another target available.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ObjectPreview.OnInteractivePreviewGUI(UnityEngine.Rect,UnityEngine.GUIStyle)">
      <summary>
        <para>Implement to create your own interactive custom preview. Interactive custom previews are used in the preview area of the inspector and the object selector.</para>
      </summary>
      <param name="r">Rectangle in which to draw the preview.</param>
      <param name="background">Background image.</param>
    </member>
    <member name="M:UnityEditor.ObjectPreview.OnPreviewGUI(UnityEngine.Rect,UnityEngine.GUIStyle)">
      <summary>
        <para>Implement to create your own custom preview for the preview area of the inspector, primary editor headers and the object selector.</para>
      </summary>
      <param name="r">Rectangle in which to draw the preview.</param>
      <param name="background">Background image.</param>
    </member>
    <member name="M:UnityEditor.ObjectPreview.OnPreviewSettings">
      <summary>
        <para>Override this method if you want to show custom controls in the preview header.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ObjectPreview.ResetTarget">
      <summary>
        <para>Called to Reset the target before iterating through them.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Overlays.IMGUIOverlay">
      <summary>
        <para>IMGUIOverlay is an implementation of Overlay that provides a UIElements.IMGUIContainer.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Overlays.IMGUIOverlay.CreatePanelContent">
      <summary>
        <para>CreatePanelContent is invoked by the OverlayCanvas when this Overlay is shown.</para>
      </summary>
      <returns>
        <para>Returns the contents of this Overlay.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Overlays.IMGUIOverlay.OnGUI">
      <summary>
        <para>Implement IMGUI controls and logic in this method.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Overlays.ISupportsOverlays">
      <summary>
        <para>Implement this interface to enable overlays in the EditorWindow.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Overlays.ITransientOverlay">
      <summary>
        <para>Transient Overlays are a type of Overlay that is not controlled by a user, and only drawn in the active Scene View when requested by the visible property. Implementing ITransientOverlay in an Overlay class designates it for this special behavior.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Overlays.ITransientOverlay.visible">
      <summary>
        <para>Use visible to enable or disable the rendering of this Overlay.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Overlays.Layout">
      <summary>
        <para>Possible layouts for an overlay.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Overlays.Layout.All">
      <summary>
        <para>Equivalent to Layout.Panel | Layout.HorizontalToolbar | Layout.VerticalToolbar.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Overlays.Layout.HorizontalToolbar">
      <summary>
        <para>Contents will be sized to fit within a toolbar and arranged horizontally.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Overlays.Layout.Panel">
      <summary>
        <para>Contents will be presented as a normal overlay with a header title and content area.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Overlays.Layout.VerticalToolbar">
      <summary>
        <para>Contents will be sized to fit within a toolbar and arranged vertically.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Overlays.Overlay">
      <summary>
        <para>Overlays are persistent and customizable panels and toolbars that are available within Editor Windows. Use Overlays to expose actions and tool options in a convenient and user-controllable way.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Overlays.Overlay.collapsed">
      <summary>
        <para>Defines whether the overlay is in collapsed form.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Overlays.Overlay.collapsedChanged(System.Action`1&lt;System.Boolean&gt;)">
      <summary>
        <para>Invoked when Overlay.collapsed value is changed.</para>
      </summary>
      <param name="value">Invoked with true value when Overlay enters collapsed state, false when exiting collapsed state.</param>
    </member>
    <member name="P:UnityEditor.Overlays.Overlay.containerWindow">
      <summary>
        <para>EditorWindow the overlay is contained within.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Overlays.Overlay.displayed">
      <summary>
        <para>Shows or hides the overlay.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Overlays.Overlay.displayedChanged(System.Action`1&lt;System.Boolean&gt;)">
      <summary>
        <para>This callback is invoked when the Overlay.displayed value has been changed.</para>
      </summary>
      <param name="value">A callback accepting the new diplayed state of this overlay.</param>
    </member>
    <member name="P:UnityEditor.Overlays.Overlay.displayName">
      <summary>
        <para>Name of overlay used as title.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Overlays.Overlay.floating">
      <summary>
        <para>Returns true if overlay is floating, returns false if overlay is docked in a corner or in a toolbar.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Overlays.Overlay.floatingChanged(System.Action`1&lt;System.Boolean&gt;)">
      <summary>
        <para>Called when the value of floating has changed.</para>
      </summary>
      <param name="value">A callback accepting the new floating state of this overlay.</param>
    </member>
    <member name="P:UnityEditor.Overlays.Overlay.floatingPosition">
      <summary>
        <para>Local position of closest overlay corner to closest dockposition when floating.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Overlays.Overlay.floatingPositionChanged(System.Action`1&lt;UnityEngine.Vector3&gt;)">
      <summary>
        <para>This event is invoked when Overlay.floatingPosition is changed.</para>
      </summary>
      <param name="value">A callback accepting the new overlay position.</param>
    </member>
    <member name="P:UnityEditor.Overlays.Overlay.id">
      <summary>
        <para>Overlay unique ID.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Overlays.Overlay.isInToolbar">
      <summary>
        <para>Returns true if overlay is docked in a toolbar.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Overlays.Overlay.layout">
      <summary>
        <para>Describes the presentation mode for an Overlay.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Overlays.Overlay.layoutChanged(System.Action`1&lt;UnityEditor.Overlays.Layout&gt;)">
      <summary>
        <para>Subscribe to this event to be notified when the Overlay.Layout property is modified.</para>
      </summary>
      <param name="value">.layoutChanged is invoked when the Overlay.layout is modified.</param>
    </member>
    <member name="F:UnityEditor.Overlays.Overlay.ussClassName">
      <summary>
        <para>USS class name of elements of this type.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Overlays.Overlay.CreatePanelContent">
      <summary>
        <para>Implement this method to return your visual element content.</para>
      </summary>
      <returns>
        <para>Visual element containing the content of your overlay.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Overlays.Overlay.OnCreated">
      <summary>
        <para>OnCreated is invoked when an Overlay is instantiated in an Overlay Canvas.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Overlays.Overlay.OnWillBeDestroyed">
      <summary>
        <para>Called when an Overlay is about to be destroyed.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Overlays.Overlay.Undock">
      <summary>
        <para>If this Overlay is currently in a toolbar, it will be removed and return to a floating state.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Overlays.OverlayAttribute">
      <summary>
        <para>Attribute used to register a class as an overlay.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Overlays.OverlayAttribute.defaultDisplay">
      <summary>
        <para>Set this value to true to ensure that the target Overlay will be shown when a new instance of the EditorWindow type is instantiated.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Overlays.OverlayAttribute.displayName">
      <summary>
        <para>Defines what the display name of the overlay will be.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Overlays.OverlayAttribute.editorWindowType">
      <summary>
        <para>Defines which EditorWindow type the overlay will be used in.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Overlays.OverlayAttribute.id">
      <summary>
        <para>Defines the unique identifier used to identify the overlay.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Overlays.OverlayAttribute.ussName">
      <summary>
        <para>Name of the overlay's root visual element.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Overlays.OverlayAttribute.#ctor(System.Type,System.String,System.String,System.String,System.Boolean)">
      <summary>
        <para>Attribute used to register a class as an Overlay.</para>
      </summary>
      <param name="id">Defines the unique identifier used to identify the overlay.</param>
      <param name="ussName">Name of the overlay's root visual element.</param>
      <param name="editorWindowType">Defines which EditorWindow type the overlay will be used in.</param>
      <param name="displayName">Defines what the display name of the overlay will be.</param>
      <param name="defaultDisplay">True if this Overlay is enabled by default in new windows.</param>
      <param name="defaultLayout">The Layout that this Overlay will be initialized with in new windows.</param>
    </member>
    <member name="M:UnityEditor.Overlays.OverlayAttribute.#ctor(System.Type,System.String,System.String,System.Boolean)">
      <summary>
        <para>Attribute used to register a class as an Overlay.</para>
      </summary>
      <param name="id">Defines the unique identifier used to identify the overlay.</param>
      <param name="ussName">Name of the overlay's root visual element.</param>
      <param name="editorWindowType">Defines which EditorWindow type the overlay will be used in.</param>
      <param name="displayName">Defines what the display name of the overlay will be.</param>
      <param name="defaultDisplay">True if this Overlay is enabled by default in new windows.</param>
      <param name="defaultLayout">The Layout that this Overlay will be initialized with in new windows.</param>
    </member>
    <member name="M:UnityEditor.Overlays.OverlayAttribute.#ctor(System.Type,System.String,System.Boolean)">
      <summary>
        <para>Attribute used to register a class as an Overlay.</para>
      </summary>
      <param name="id">Defines the unique identifier used to identify the overlay.</param>
      <param name="ussName">Name of the overlay's root visual element.</param>
      <param name="editorWindowType">Defines which EditorWindow type the overlay will be used in.</param>
      <param name="displayName">Defines what the display name of the overlay will be.</param>
      <param name="defaultDisplay">True if this Overlay is enabled by default in new windows.</param>
      <param name="defaultLayout">The Layout that this Overlay will be initialized with in new windows.</param>
    </member>
    <member name="T:UnityEditor.Overlays.ToolbarOverlay">
      <summary>
        <para>ToolbarOverlay is an implementation of Overlay that provides a base for Overlays that can be placed in horizontal or vertical toolbars.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Overlays.ToolbarOverlay.CreateHorizontalToolbarContent">
      <summary>
        <para>Creates the root VisualElement of the ToolbarOverlay's horizontal content.</para>
      </summary>
      <returns>
        <para>Root element of ToolbarOverlay's horizontal content.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Overlays.ToolbarOverlay.CreatePanelContent">
      <summary>
        <para>Creates the root VisualElement of the ToolbarOverlay's content in panel layout.</para>
      </summary>
      <returns>
        <para>Root element of ToolbarOverlay's panel content.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Overlays.ToolbarOverlay.CreateVerticalToolbarContent">
      <summary>
        <para>Creates the root VisualElement of the ToolbarOverlay's vertical content.</para>
      </summary>
      <returns>
        <para>Root element of ToolbarOverlay's vertical content.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.PackageManager.AuthorInfo">
      <summary>
        <para>Identifies the author of a package.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.AuthorInfo.email">
      <summary>
        <para>The email address of the author (optional).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.AuthorInfo.name">
      <summary>
        <para>The name of the author.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.AuthorInfo.url">
      <summary>
        <para>The url address of the author (optional).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.BuildUtilities">
      <summary>
        <para>Utility class that allows packages to register build callbacks with the Unity Package Manager.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PackageManager.BuildUtilities.RegisterShouldIncludeInBuildCallback(UnityEditor.PackageManager.IShouldIncludeInBuildCallback)">
      <summary>
        <para>Registers a callback object for a package.</para>
      </summary>
      <param name="cb">Object of a class that implements the IShouldIncludeInBuildCallback interface.</param>
    </member>
    <member name="T:UnityEditor.PackageManager.Client">
      <summary>
        <para>Use the Unity Package Manager Client class to manage the packages used in a project.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PackageManager.Client.Add(System.String)">
      <summary>
        <para>Adds a package dependency to the project. Requesting a new or different dependency often leads to changing installed packages, but only after the Package Manager constructs a dependency graph to solve any version conflicts. For more information, see.</para>
      </summary>
      <param name="identifier">A string representing the package to be added:
               

               
- To install a specific version of a package, use a package identifier ("name@version"). This is the only way to install a version.
               
- To install the latest compatible (.
               
- To install a git package, specify a.
               
- To install a package, specify a value in the format "file:pathtopackagefolder".
               
- To install a package, specify a value in the format "file:pathto/package-file.tgz".
               

               
ArgumentException is thrown if identifier is null or empty.
                </param>
      <returns>
        <para>An AddRequest instance, which you can use to monitor the asynchronous operation, and retrieve the result when the operation is complete.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PackageManager.Client.AddAndRemove(System.String[],System.String[])">
      <summary>
        <para>Adds package dependencies to the project and removes package dependencies from the project. Requesting different dependencies often leads to changing installed packages, but only after the Package Manager constructs a dependency graph to solve any version conflicts. For more information, see.
               

               
Calling this function is much more efficient than calling the Add and Remove functions several times because for this function, the Package Manager only has to solve the dependency list once, instead of constructing a new dependency graph after each call.</para>
      </summary>
      <param name="packagesToAdd">An array of strings representing the package(s) to be added:
               

               
- To install a specific version of a package, use a package identifier ("name@version"). This is the only way to install a version.
               
- To install the latest compatible (.
               
- To install a git package, specify a.
               
- To install a package, specify a value in the format "file:pathtopackagefolder".
               
- To install a package, specify a value in the format "file:pathto/package-file.tgz".
               

               
ArgumentException is thrown if packagesToAdd contains null or empty values.
                </param>
      <param name="packagesToRemove">An array of strings representing the names of package(s) to be removed.
               

               
ArgumentException is thrown if packagesToRemove contains null or empty values.
                </param>
      <returns>
        <para>An AddAndRemoveRequest instance, which you can use to monitor the asynchronous operation, and retrieve the result when the operation is complete.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PackageManager.Client.Embed(System.String)">
      <summary>
        <para> a package inside the project.</para>
      </summary>
      <param name="packageName">The name of the package to embed. This package must be a direct dependency of the project. ArgumentException is thrown if packageName is null or empty.</param>
      <returns>
        <para>An EmbedRequest instance, which you can use to monitor the asynchronous operation, and retrieve the result when the operation is complete.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PackageManager.Client.List">
      <summary>
        <para>Lists the packages the project depends on.</para>
      </summary>
      <param name="offlineMode">Specifies whether or not the Package Manager requests the latest information about the project's packages from the remote Unity package registry. When offlineMode is true, the PackageManager.PackageInfo objects in the PackageCollection returned by the Package Manager contain information obtained from the local package cache, which could be out of date.</param>
      <param name="includeIndirectDependencies">Set to true to include indirect dependencies in the PackageCollection returned by the Package Manager. Indirect dependencies include packages referenced in the manifests of project packages or in the manifests of other indirect dependencies. Set to false to include only the packages listed directly in the project manifest.
Note: The version reported might not match the version requested in the project manifest. For more information, see.</param>
      <returns>
        <para>A ListRequest instance, which you can use to monitor the asynchronous operation, and retrieve the result when the operation is complete.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PackageManager.Client.List(System.Boolean)">
      <summary>
        <para>Lists the packages the project depends on.</para>
      </summary>
      <param name="offlineMode">Specifies whether or not the Package Manager requests the latest information about the project's packages from the remote Unity package registry. When offlineMode is true, the PackageManager.PackageInfo objects in the PackageCollection returned by the Package Manager contain information obtained from the local package cache, which could be out of date.</param>
      <param name="includeIndirectDependencies">Set to true to include indirect dependencies in the PackageCollection returned by the Package Manager. Indirect dependencies include packages referenced in the manifests of project packages or in the manifests of other indirect dependencies. Set to false to include only the packages listed directly in the project manifest.
Note: The version reported might not match the version requested in the project manifest. For more information, see.</param>
      <returns>
        <para>A ListRequest instance, which you can use to monitor the asynchronous operation, and retrieve the result when the operation is complete.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PackageManager.Client.List(System.Boolean,System.Boolean)">
      <summary>
        <para>Lists the packages the project depends on.</para>
      </summary>
      <param name="offlineMode">Specifies whether or not the Package Manager requests the latest information about the project's packages from the remote Unity package registry. When offlineMode is true, the PackageManager.PackageInfo objects in the PackageCollection returned by the Package Manager contain information obtained from the local package cache, which could be out of date.</param>
      <param name="includeIndirectDependencies">Set to true to include indirect dependencies in the PackageCollection returned by the Package Manager. Indirect dependencies include packages referenced in the manifests of project packages or in the manifests of other indirect dependencies. Set to false to include only the packages listed directly in the project manifest.
Note: The version reported might not match the version requested in the project manifest. For more information, see.</param>
      <returns>
        <para>A ListRequest instance, which you can use to monitor the asynchronous operation, and retrieve the result when the operation is complete.</para>
      </returns>
    </member>
    <member name="P:UnityEditor.PackageManager.Client.LogLevel">
      <summary>
        <para>Gets or sets the log level that the Package Manager uses when logging to the Editor.log and upm.log files. Defaults to LogLevel.Info.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PackageManager.Client.Pack(System.String,System.String)">
      <summary>
        <para>Creates a GZip tarball file from a package folder. The format and content of the file is the same as if the package was published to a package registry.</para>
      </summary>
      <param name="packageFolder">Folder containing the package. ArgumentException is thrown if packageFolder is null or empty.</param>
      <param name="targetFolder">Folder where the Package Manager will write the GZip tarball file. The Package Manager will create this folder if it does not already exist. ArgumentException is thrown if targetFolder is null or empty.</param>
      <returns>
        <para>A PackRequest instance, which you can use to monitor the asynchronous operation, and retrieve the result when the operation is complete.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PackageManager.Client.Remove(System.String)">
      <summary>
        <para>Removes a package dependency from the project. Removing a dependency often leads to changing installed packages, but only after the Package Manager constructs a dependency graph to solve any version conflicts. For more information, see.</para>
      </summary>
      <param name="packageName">The name of the package to remove from the project.  ArgumentException is thrown if packageName is null or empty.</param>
      <returns>
        <para>A RemoveRequest instance, which you can use to monitor the status of the asynchronous operation.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PackageManager.Client.ResetToEditorDefaults">
      <summary>
        <para>Resets the list of packages installed for this project to the editor's default configuration. This operation clears all packages added to the project and keeps only the packages set for the current editor's default configuration.</para>
      </summary>
      <returns>
        <para>A ResetToEditorDefaultsRequest instance, which you can use to monitor the status of the asynchronous operation.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PackageManager.Client.Resolve">
      <summary>
        <para>Forces the Package Manager to resolve the project's packages, reinstalling any altered or missing package and removing extraneous packages.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PackageManager.Client.Search(System.String)">
      <summary>
        <para>Searches the Unity package registry for the given package.</para>
      </summary>
      <param name="packageIdOrName">The or ID of the package. ArgumentException is thrown if packageIdOrName is null or empty.
                </param>
      <param name="offlineMode">Specifies whether or not the Package Manager requests the latest information about the project's packages from the remote Unity package registry. When offlineMode is true, the PackageManager.PackageInfo object returned by the Package Manager contains information obtained from the local package cache, which could be out of date.</param>
      <returns>
        <para>A SearchRequest instance, which you can use to monitor the asynchronous operation, and retrieve the result when the operation is complete.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PackageManager.Client.Search(System.String,System.Boolean)">
      <summary>
        <para>Searches the Unity package registry for the given package.</para>
      </summary>
      <param name="packageIdOrName">The or ID of the package. ArgumentException is thrown if packageIdOrName is null or empty.
                </param>
      <param name="offlineMode">Specifies whether or not the Package Manager requests the latest information about the project's packages from the remote Unity package registry. When offlineMode is true, the PackageManager.PackageInfo object returned by the Package Manager contains information obtained from the local package cache, which could be out of date.</param>
      <returns>
        <para>A SearchRequest instance, which you can use to monitor the asynchronous operation, and retrieve the result when the operation is complete.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PackageManager.Client.SearchAll">
      <summary>
        <para>Searches the Unity package registry for all packages compatible with the current Unity version.</para>
      </summary>
      <param name="offlineMode">Specifies whether or not the Package Manager requests the latest information about the project's packages from the remote Unity package registry. When offlineMode is true, the PackageManager.PackageInfo objects returned by the Package Manager contain information obtained from the local package cache, which could be out of date.</param>
      <returns>
        <para>A SearchRequest instance, which you can use to monitor the asynchronous operation, and retrieve the result when the operation is complete.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PackageManager.Client.SearchAll(System.Boolean)">
      <summary>
        <para>Searches the Unity package registry for all packages compatible with the current Unity version.</para>
      </summary>
      <param name="offlineMode">Specifies whether or not the Package Manager requests the latest information about the project's packages from the remote Unity package registry. When offlineMode is true, the PackageManager.PackageInfo objects returned by the Package Manager contain information obtained from the local package cache, which could be out of date.</param>
      <returns>
        <para>A SearchRequest instance, which you can use to monitor the asynchronous operation, and retrieve the result when the operation is complete.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.PackageManager.DependencyInfo">
      <summary>
        <para>Structure describing dependencies to other packages in PackageInfo.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.DependencyInfo.name">
      <summary>
        <para>The name of the dependency.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.DependencyInfo.version">
      <summary>
        <para>The version of the dependency.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.Error">
      <summary>
        <para>Structure describing the error of a package operation.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.Error.errorCode">
      <summary>
        <para>Numerical error code.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.Error.message">
      <summary>
        <para>Error message or description.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.ErrorCode">
      <summary>
        <para>Package operation Error.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.ErrorCode.AggregateError">
      <summary>
        <para>One ore more errors occurred during the operation.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.ErrorCode.Conflict">
      <summary>
        <para>Conflicting package versions were found.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.ErrorCode.Forbidden">
      <summary>
        <para>Operation was not allowed.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.ErrorCode.InvalidParameter">
      <summary>
        <para>Operation had invalid parameters.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.ErrorCode.NotFound">
      <summary>
        <para>A package required to fulfill the operation was not found.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.ErrorCode.Unknown">
      <summary>
        <para>Operation resulted in an unknown error.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.Events">
      <summary>
        <para>An Interface for accessing the package manager events.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.PackageManager.Events.registeredPackages(System.Action`1&lt;UnityEditor.PackageManager.PackageRegistrationEventArgs&gt;)">
      <summary>
        <para>Event raised after applying changes to the registered packages list.</para>
      </summary>
      <param name="value">A PackageRegistrationEventArgs structure describing the modifications to the registered packages list.</param>
    </member>
    <member name="?:UnityEditor.PackageManager.Events.registeringPackages(System.Action`1&lt;UnityEditor.PackageManager.PackageRegistrationEventArgs&gt;)">
      <summary>
        <para>Event raised before applying changes to the registered packages list.</para>
      </summary>
      <param name="value">A PackageRegistrationEventArgs structure describing the modifications to the registered packages list.</param>
    </member>
    <member name="T:UnityEditor.PackageManager.GitInfo">
      <summary>
        <para>Identifies a specific revision for a using a Git commit hash.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.GitInfo.hash">
      <summary>
        <para>Returns the resolved Git commit hash for the requested revision for this package.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.GitInfo.revision">
      <summary>
        <para>Returns the requested Git revision for the Git package.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.PackageManager.IShouldIncludeInBuildCallback">
      <summary>
        <para>Interface used by the Package Manager to request build information about packages.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.IShouldIncludeInBuildCallback.PackageName">
      <summary>
        <para>The package name.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PackageManager.IShouldIncludeInBuildCallback.ShouldIncludeInBuild(System.String)">
      <summary>
        <para>Determines whether to include a managed plugin in a build.</para>
      </summary>
      <param name="path">The absolute path of the managed plugin to include or exclude.</param>
      <returns>
        <para>Returns true to include the plugin identified by path in the build; otherwise, returns false.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.PackageManager.LogLevel">
      <summary>
        <para>Describes different levels of log information the Package Manager supports.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.LogLevel.Debug">
      <summary>
        <para>Debugging messages are reported, in addition to anything from the LogLevel.Verbose level.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.LogLevel.Error">
      <summary>
        <para>Only unexpected errors and failures are logged.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.LogLevel.Info">
      <summary>
        <para>High-level informational messages are reported, in addition to anything from the LogLevel.Warn level.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.LogLevel.Silly">
      <summary>
        <para>Extremely detailed messages are reported, in addition to anything from the LogLevel.Debug level.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.LogLevel.Verbose">
      <summary>
        <para>Detailed informational messages are reported, in addition to anything from the LogLevel.Info level.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.LogLevel.Warn">
      <summary>
        <para>Abnormal situations that may result in problems are reported, in addition to anything from the LogLevel.Error level.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.PackageCollection">
      <summary>
        <para>A collection of PackageManager.PackageInfo objects.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageCollection.error">
      <summary>
        <para>The error associated with the package collection.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.PackageInfo">
      <summary>
        <para>Structure describing a Unity Package.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.assetPath">
      <summary>
        <para>The asset path of the package in the AssetDatabase.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.author">
      <summary>
        <para>An AuthorInfo instance of the author of the package.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.category">
      <summary>
        <para>Category of the package.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.changelogUrl">
      <summary>
        <para>The custom URL for the changelog for the package.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.datePublished">
      <summary>
        <para>The date and time at which the package was published.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.dependencies">
      <summary>
        <para>An array of DependencyInfos listing all the packages this package directly depends on.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.description">
      <summary>
        <para>Detailed description of the package.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.displayName">
      <summary>
        <para>Friendly display name of the package.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.documentationUrl">
      <summary>
        <para>The custom URL for documentation for the package.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.errors">
      <summary>
        <para>The errors associated with the package.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.git">
      <summary>
        <para>A GitInfo instance providing detailed information for a Git package.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.isDirectDependency">
      <summary>
        <para>If the package is a direct dependency of the project.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.keywords">
      <summary>
        <para>An array of keywords associated with the package.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.licensesUrl">
      <summary>
        <para>The custom URL for the licenses of a package.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.name">
      <summary>
        <para>Unique name of the package.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.packageId">
      <summary>
        <para>Identifier of the package.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.registry">
      <summary>
        <para>The registry where the Package Manager might find this package.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.repository">
      <summary>
        <para>A RepositoryInfo instance containing information the repository that the package is hosted on.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.resolvedDependencies">
      <summary>
        <para>An array of DependencyInfo instances listing all the packages this package directly or indirectly depends on and the versions they resolved to.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.resolvedPath">
      <summary>
        <para>The local path of the project on disk.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.source">
      <summary>
        <para>Source of the package contents.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.type">
      <summary>
        <para>Type of the package.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.version">
      <summary>
        <para>Version of the package.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageInfo.versions">
      <summary>
        <para>A VersionsInfo instance containing information about the available versions of the package.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PackageManager.PackageInfo.FindForAssembly(System.Reflection.Assembly)">
      <summary>
        <para>Retrieves information about the package containing an assembly, or the assembly definition used to build that assembly.</para>
      </summary>
      <param name="assembly">The assembly.</param>
      <returns>
        <para>The PackageManager.PackageInfo instance describing the package, or null if the assembly or its assembly definition is not in a package.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PackageManager.PackageInfo.FindForAssetPath(System.String)">
      <summary>
        <para>Retrieves information about the package containing an asset based on the path of that asset.</para>
      </summary>
      <param name="assetPath">The file path of the asset.</param>
      <returns>
        <para>The PackageManager.PackageInfo instance describing the package, or null if the asset is not in a package.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PackageManager.PackageInfo.GetAllRegisteredPackages">
      <summary>
        <para>Retrieves information about all packages that are currently loaded.</para>
      </summary>
      <returns>
        <para>The array of PackageManager.PackageInfo instances describing each package.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.PackageManager.PackageRegistrationEventArgs">
      <summary>
        <para>Structure describing the PackageManager.PackageInfo entries to register or unregister during the Package Manager registration process.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageRegistrationEventArgs.added">
      <summary>
        <para>A collection of PackageManager.PackageInfo entries to add during the Package Manager registration process.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageRegistrationEventArgs.changedFrom">
      <summary>
        <para>A collection of PackageManager.PackageInfo entries describing packages to be overridden by another version during the Package Manager registration process.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageRegistrationEventArgs.changedTo">
      <summary>
        <para>A collection of PackageManager.PackageInfo entries describing packages that will override a previously registered version during the Package Manager registration process.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackageRegistrationEventArgs.removed">
      <summary>
        <para>A collection of PackageManager.PackageInfo entries to remove during the Package Manager registration process.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.PackageSource">
      <summary>
        <para>Source of packages.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.PackageSource.BuiltIn">
      <summary>
        <para>The package is built-in and part of Unity.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.PackageSource.Embedded">
      <summary>
        <para>The package is embedded in the Unity project.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.PackageSource.Git">
      <summary>
        <para>The package is referenced directly by a Git URL.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.PackageSource.Local">
      <summary>
        <para>The package is referenced by a local path.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.PackageSource.LocalTarball">
      <summary>
        <para>The package is referenced by a local path pointing to a GZip tarball file.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.PackageSource.Registry">
      <summary>
        <para>The package is from a registry.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.PackageSource.Unknown">
      <summary>
        <para>The package source is unknown.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.PackOperationResult">
      <summary>
        <para>Structure describing the result of a Client.Pack operation.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.PackOperationResult.tarballPath">
      <summary>
        <para>The path to the file created by the Client.Pack operation.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.RegistryInfo">
      <summary>
        <para>Provides information about a package registry.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.RegistryInfo.isDefault">
      <summary>
        <para>Whether this is the default, Unity registry or one of the scoped registries configured in the project manifest.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.RegistryInfo.name">
      <summary>
        <para>The registry name.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.RegistryInfo.url">
      <summary>
        <para>The registry URL.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.RepositoryInfo">
      <summary>
        <para>Includes information about the repository that hosts the package.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.RepositoryInfo.path">
      <summary>
        <para>The relative path to the package root in the repository, if it is different from the repository root.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.RepositoryInfo.revision">
      <summary>
        <para>The revision id corresponding to the package version.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.RepositoryInfo.type">
      <summary>
        <para>The type of the repository, e.g. git.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.RepositoryInfo.url">
      <summary>
        <para>The url to the source code repository.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.Requests.AddAndRemoveRequest">
      <summary>
        <para>Represents an asynchronous request to add package dependencies to the project and/or remove package dependencies from the project.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.Requests.AddRequest">
      <summary>
        <para>Represents an asynchronous request to add a package to the project.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.Requests.EmbedRequest">
      <summary>
        <para>Represents an asynchronous request to embed a package inside a project.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.Requests.ListRequest">
      <summary>
        <para>Represents an asynchronous request to list the packages in the project.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.Requests.PackRequest">
      <summary>
        <para>Represents an asynchronous request to pack a package folder.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.Requests.RemoveRequest">
      <summary>
        <para>Represents an asynchronous request to remove a package from the project.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.Requests.RemoveRequest.PackageIdOrName">
      <summary>
        <para>The package being removed by this request.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.Requests.Request">
      <summary>
        <para>Tracks the state of an asynchronous Unity Package Manager (Upm) server operation.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.Requests.Request.Error">
      <summary>
        <para>The error returned by the request, if any.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.Requests.Request.IsCompleted">
      <summary>
        <para>Whether the request is complete.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.Requests.Request.Status">
      <summary>
        <para>The request status.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.Requests.Request`1">
      <summary>
        <para>Tracks the state of an asynchronous Unity Package Manager (Upm) server operation that returns a non-empty response.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.Requests.Request_1.Result">
      <summary>
        <para>The response to the request.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.Requests.ResetToEditorDefaultsRequest">
      <summary>
        <para>Represents an asynchronous request to reset the project packages to the current Editor default configuration.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.Requests.SearchRequest">
      <summary>
        <para>Represents an asynchronous request to find a package.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.Requests.SearchRequest.PackageIdOrName">
      <summary>
        <para>The package id or name used in this search operation.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.StatusCode">
      <summary>
        <para>Unity Package Manager operation status.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.StatusCode.Failure">
      <summary>
        <para>Package manager operation failed.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.StatusCode.InProgress">
      <summary>
        <para>Package manager operation is in progress.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PackageManager.StatusCode.Success">
      <summary>
        <para>Package manager operation completed successfully.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PackageManager.VersionsInfo">
      <summary>
        <para>Identifies the available versions of a package and which are the compatible, latest, and recommended versions.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.VersionsInfo.all">
      <summary>
        <para>All available versions of the package.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.VersionsInfo.compatible">
      <summary>
        <para>Versions of the package compatible with the current version of Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.VersionsInfo.latest">
      <summary>
        <para>Latest version of the package.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.VersionsInfo.latestCompatible">
      <summary>
        <para>Latest version of the package compatible with the current version of Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.VersionsInfo.recommended">
      <summary>
        <para>Obsolete. Use the VersionsInfo.verified property instead.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PackageManager.VersionsInfo.verified">
      <summary>
        <para>A version of the package verified to work with the current version of Unity. If there is no verified version, then this property is an empty string.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PauseState">
      <summary>
        <para>Enumeration specifying the current pause state of the Editor.

See Also: PlayModeStateChange, EditorApplication.pauseStateChanged, EditorApplication.isPaused.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PauseState.Paused">
      <summary>
        <para>Occurs as soon as the Editor is paused, which may occur during either edit mode or play mode.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PauseState.Unpaused">
      <summary>
        <para>Occurs as soon as the Editor is unpaused, which may occur during either edit mode or play mode.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PhysicsDebugWindow">
      <summary>
        <para>Displays the Physics Debug Visualization options.

The Physics Debug Visualization is only displayed if this window is visible.

See Also: PhysicsVisualizationSettings.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PhysicsVisualizationSettings">
      <summary>
        <para>This class contains the settings controlling the Physics Debug Visualization.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PhysicsVisualizationSettings.articulationBodyColor">
      <summary>
        <para>Color for Articulation Bodies.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PhysicsVisualizationSettings.baseAlpha">
      <summary>
        <para>Alpha amount used for transparency blending.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PhysicsVisualizationSettings.colorVariance">
      <summary>
        <para>Used to disinguish neighboring Colliders.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PhysicsVisualizationSettings.devOptions">
      <summary>
        <para>Shows extra options used to develop and debug the physics visualization.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PhysicsVisualizationSettings.dirtyCount">
      <summary>
        <para>Dirty marker used for refreshing the GUI.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PhysicsVisualizationSettings.enableMouseSelect">
      <summary>
        <para>Enables the mouse-over highlighting and mouse selection modes.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PhysicsVisualizationSettings.forceOverdraw">
      <summary>
        <para>Forcing the drawing of Colliders on top of any other geometry, regardless of depth.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PhysicsVisualizationSettings.kinematicColor">
      <summary>
        <para>Color for kinematic Rigidbodies.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PhysicsVisualizationSettings.rigidbodyColor">
      <summary>
        <para>Color for Rigidbodies, primarily active ones.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PhysicsVisualizationSettings.showCollisionGeometry">
      <summary>
        <para>Should the PhysicsDebugWindow display the collision geometry.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PhysicsVisualizationSettings.sleepingBodyColor">
      <summary>
        <para>Color for Rigidbodies that are controlled by the physics simulator, but are not currently being simulated.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PhysicsVisualizationSettings.staticColor">
      <summary>
        <para>Color for Colliders that do not have a Rigidbody component.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PhysicsVisualizationSettings.terrainTilesMax">
      <summary>
        <para>Maximum number of mesh tiles available to draw all Terrain Colliders.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PhysicsVisualizationSettings.triggerColor">
      <summary>
        <para>Color for Colliders that are Triggers.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PhysicsVisualizationSettings.useSceneCam">
      <summary>
        <para>Controls whether the SceneView or the GameView camera is used. Not shown in the UI.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PhysicsVisualizationSettings.viewDistance">
      <summary>
        <para>Colliders within this distance will be displayed.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.ClearMouseHighlight">
      <summary>
        <para>Clears the highlighted Collider.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.DeinitDebugDraw">
      <summary>
        <para>Deinitializes the physics debug visualization system and tracking of changes Colliders.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PhysicsVisualizationSettings.FilterWorkflow">
      <summary>
        <para>Decides whether the Workflow in the Physics Debug window should be inclusive
 (&lt;a href="PhysicsVisualizationSettings.FilterWorkflow.ShowSelectedItems.html"&gt;ShowSelectedItems&lt;a&gt;) or exclusive (&lt;a href="PhysicsVisualizationSettings.FilterWorkflow.HideSelectedItems.html"&gt;HideSelectedItems&lt;a&gt;).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PhysicsVisualizationSettings.FilterWorkflow.HideSelectedItems">
      <summary>
        <para>With HideSelectedItems you can hide selected filter items in order to easily discard uninteresting Collider properties thereby making overview and navigation easier.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PhysicsVisualizationSettings.FilterWorkflow.ShowSelectedItems">
      <summary>
        <para>With ShowSelectedItems and the Select None button is it easy to monitor very specific Colliders.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowArticulationBodies">
      <summary>
        <para>Should Articulation Bodies be shown by the Physics Visualizer.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowBoxColliders">
      <summary>
        <para>Should BoxColliders be shown.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowCapsuleColliders">
      <summary>
        <para>Should CapsuleColliders be shown.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowCollisionLayer(System.Int32)">
      <summary>
        <para>Should the given layer be considered by the display filter.</para>
      </summary>
      <param name="layer">
      </param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowCollisionLayerMask">
      <summary>
        <para>Should the mask representing the layers be considered by the display filter.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowKinematicBodies">
      <summary>
        <para>Should the kinematic Rigidbodies be considered by the display filter.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowMeshColliders(UnityEditor.PhysicsVisualizationSettings/MeshColliderType)">
      <summary>
        <para>Should MeshColliders be shown.</para>
      </summary>
      <param name="colliderType">
      </param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowPhysicsSceneMask">
      <summary>
        <para>Return a mask representing scenes that are enabled by display filter</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowRigidbodies">
      <summary>
        <para>Should any Rigidbodies be considered by the display filter.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowSleepingBodies">
      <summary>
        <para>Should the sleeping Rigidbodies be considered by the display filter.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowSphereColliders">
      <summary>
        <para>Should SphereColliders be shown.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowStaticColliders">
      <summary>
        <para>Should the Colliders without a Rigidbody component be considered by the display filter.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowTerrainColliders">
      <summary>
        <para>Should TerrainColliders be shown.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.GetShowTriggers">
      <summary>
        <para>Should the triggers be considered by the display filter.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.HasMouseHighlight">
      <summary>
        <para>Returns true if there currently is any kind of physics object highlighted.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.InitDebugDraw">
      <summary>
        <para>Initializes the physics debug visualization system. The system must be initialized for any physics objects to be visualized. It is normally initialized by the PhysicsDebugWindow.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PhysicsVisualizationSettings.MeshColliderType">
      <summary>
        <para>Is a MeshCollider convex.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PhysicsVisualizationSettings.MeshColliderType.Convex">
      <summary>
        <para>Corresponds to MeshCollider.convex is true.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PhysicsVisualizationSettings.MeshColliderType.NonConvex">
      <summary>
        <para>Corresponds to MeshCollider.convex is false.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.Reset">
      <summary>
        <para>Resets the visualization options to their default state.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowArticulationBodies(System.Boolean)">
      <summary>
        <para>Should Articulation Bodies be shown by the Physics Visualizer.</para>
      </summary>
      <param name="show">Value to set.</param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowBoxColliders(System.Boolean)">
      <summary>
        <para>Should BoxColliders be shown.</para>
      </summary>
      <param name="show">
      </param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowCapsuleColliders(System.Boolean)">
      <summary>
        <para>Should CapsuleColliders be shown.</para>
      </summary>
      <param name="show">
      </param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowCollisionLayer(System.Int32,System.Boolean)">
      <summary>
        <para>Should the given layer be considered by the display filter.</para>
      </summary>
      <param name="layer">
      </param>
      <param name="show">
      </param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowCollisionLayerMask(System.Int32)">
      <summary>
        <para>Should the mask representing the layers be considered by the display filter.</para>
      </summary>
      <param name="mask">
      </param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowForAllFilters(System.Boolean)">
      <summary>
        <para>Enables or disables all filtering items.</para>
      </summary>
      <param name="selected">
      </param>
      <param name="filterWorkflow">
      </param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowForAllFilters(UnityEditor.PhysicsVisualizationSettings/FilterWorkflow,System.Boolean)">
      <summary>
        <para>Enables or disables all filtering items.</para>
      </summary>
      <param name="selected">
      </param>
      <param name="filterWorkflow">
      </param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowKinematicBodies(System.Boolean)">
      <summary>
        <para>Should the kinematic Rigidbodies be considered by the display filter.</para>
      </summary>
      <param name="show">
      </param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowMeshColliders(UnityEditor.PhysicsVisualizationSettings/MeshColliderType,System.Boolean)">
      <summary>
        <para>Should MeshColliders be shown.</para>
      </summary>
      <param name="colliderType">
      </param>
      <param name="show">
      </param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowPhysicsSceneMask(System.Int32)">
      <summary>
        <para>Should the scene mask be considered by the display filter.</para>
      </summary>
      <param name="mask">
      </param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowRigidbodies(System.Boolean)">
      <summary>
        <para>Should any Rigidbodies be considered by the display filter.</para>
      </summary>
      <param name="show">
      </param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowSleepingBodies(System.Boolean)">
      <summary>
        <para>Should sleeping Rigidbodies and Articulation Bodies be considered by the display filter.</para>
      </summary>
      <param name="show">
      </param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowSphereColliders(System.Boolean)">
      <summary>
        <para>Should SphereColliders be shown.</para>
      </summary>
      <param name="show">
      </param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowStaticColliders(System.Boolean)">
      <summary>
        <para>Should the Colliders without a Rigidbody component be considered by the display filter.</para>
      </summary>
      <param name="show">
      </param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowTerrainColliders(System.Boolean)">
      <summary>
        <para>Should TerrainColliders be shown.</para>
      </summary>
      <param name="show">
      </param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.SetShowTriggers(System.Boolean)">
      <summary>
        <para>Should the triggers be considered by the display filter.</para>
      </summary>
      <param name="show">
      </param>
    </member>
    <member name="M:UnityEditor.PhysicsVisualizationSettings.UpdateMouseHighlight(UnityEngine.Vector2)">
      <summary>
        <para>Updates the mouse-over highlight at the given mouse position in screen space.</para>
      </summary>
      <param name="screenPos">
      </param>
    </member>
    <member name="T:UnityEditor.PivotMode">
      <summary>
        <para>Where is the tool handle placed.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PivotMode.Center">
      <summary>
        <para>The tool handle is at the graphical center of the selection.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PivotMode.Pivot">
      <summary>
        <para>The tool handle is on the pivot point of the active object.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PivotRotation">
      <summary>
        <para>How is the tool handle oriented.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PivotRotation.Global">
      <summary>
        <para>The tool handle is aligned along the global axes.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PivotRotation.Local">
      <summary>
        <para>The tool handle is oriented from the active object.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlatformIcon">
      <summary>
        <para>Icon slot container.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlatformIcon.height">
      <summary>
        <para>The height of the icon in pixels.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlatformIcon.kind">
      <summary>
        <para>The PlatformIconKind is specific to the target platform.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlatformIcon.layerCount">
      <summary>
        <para>The number of texture layers the icon slot currently contains.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlatformIcon.maxLayerCount">
      <summary>
        <para>The maximum number of texture layers required by the icon slot.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlatformIcon.minLayerCount">
      <summary>
        <para>The minimum number of texture layers required by the icon slot.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlatformIcon.width">
      <summary>
        <para>The width of the icon in pixels.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PlatformIcon.GetTexture(System.Int32)">
      <summary>
        <para>Retrieve the texture which is currently assigned to the specified layer.</para>
      </summary>
      <param name="layer">Cannot be larger than PlatformIcon.maxLayerCount.</param>
    </member>
    <member name="M:UnityEditor.PlatformIcon.GetTextures">
      <summary>
        <para>Retrieve an array of all textures which are currently assigned to the icon slot.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PlatformIcon.SetTexture(UnityEngine.Texture2D,System.Int32)">
      <summary>
        <para>Assign a texture to the specified layer.</para>
      </summary>
      <param name="layer">Cannot be larger than PlatformIcon.maxLayerCount.</param>
      <param name="texture">
      </param>
    </member>
    <member name="M:UnityEditor.PlatformIcon.SetTextures(UnityEngine.Texture2D[])">
      <summary>
        <para>Assign all available icon layers.</para>
      </summary>
      <param name="textures">Must be an array of size PlatformIcon.maxLayerCount.</param>
    </member>
    <member name="T:UnityEditor.PlatformIconKind">
      <summary>
        <para>Icon kind wrapper.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Playables.PlayableOutputEditorExtensions">
      <summary>
        <para>Editor extensions for all types that implement IPlayableOutput.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Playables.PlayableOutputEditorExtensions.GetEditorName(U)">
      <summary>
        <para>Returns the name of the PlayableOutput.</para>
      </summary>
      <param name="output">The PlayableOutput used by this operation.</param>
    </member>
    <member name="T:UnityEditor.Playables.Utility">
      <summary>
        <para>Editor utility functions for the Playable graph and its nodes.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Playables.Utility.destroyingGraph(System.Action`1&lt;UnityEngine.Playables.PlayableGraph&gt;)">
      <summary>
        <para>Event triggered whenever a PlayableGraph is being destroyed.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="?:UnityEditor.Playables.Utility.graphCreated(System.Action`1&lt;UnityEngine.Playables.PlayableGraph&gt;)">
      <summary>
        <para>Event triggered whenever a new PlayableGraph is created.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="M:UnityEditor.Playables.Utility.GetAllGraphs">
      <summary>
        <para>Returns all existing PlayableGraphs.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerConnectionInitiateMode">
      <summary>
        <para>Describes how the player connects to the Editor.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerConnectionInitiateMode.None">
      <summary>
        <para>Player connection mode not set.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerConnectionInitiateMode.PlayerConnectsToHost">
      <summary>
        <para>Player connection is initiated by the player connecting to the host, usually the host is the Editor.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerConnectionInitiateMode.PlayerListens">
      <summary>
        <para>Player connection is initiated by the player broadcasting its IP address, and then Editor connecting to the player.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings">
      <summary>
        <para>Player Settings is where you define various parameters for the final game that you will build in Unity. Some of these values are used in the Resolution Dialog that launches when you open a standalone game.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.accelerometerFrequency">
      <summary>
        <para>Accelerometer update frequency.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.actionOnDotNetUnhandledException">
      <summary>
        <para>Sets the crash behavior on .NET unhandled exception.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.advancedLicense">
      <summary>
        <para>Is the advanced version being used?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.allowedAutorotateToLandscapeLeft">
      <summary>
        <para>Is auto-rotation to landscape left supported?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.allowedAutorotateToLandscapeRight">
      <summary>
        <para>Is auto-rotation to landscape right supported?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.allowedAutorotateToPortrait">
      <summary>
        <para>Is auto-rotation to portrait supported?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.allowedAutorotateToPortraitUpsideDown">
      <summary>
        <para>Is auto-rotation to portrait upside-down supported?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.allowFullscreenSwitch">
      <summary>
        <para>If enabled, allows the user to switch between full screen and windowed mode using OS specific keyboard short cuts.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.allowUnsafeCode">
      <summary>
        <para>Allow 'unsafe' C# code code to be compiled for predefined assemblies.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.aotOptions">
      <summary>
        <para>Additional AOT compilation options. Shared by AOT platforms.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.apiCompatibilityLevel">
      <summary>
        <para>Deprecated. Use PlayerSettings.GetApiCompatibilityLevel and PlayerSettings.SetApiCompatibilityLevel instead.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.applicationIdentifier">
      <summary>
        <para>The application identifier for the currently selected build target.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.assemblyVersionValidation">
      <summary>
        <para>Set to true to exact version matching for strong named assemblies.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.bakeCollisionMeshes">
      <summary>
        <para>Pre bake collision meshes on player build.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.bundleVersion">
      <summary>
        <para>Application bundle version shared between iOS &amp; Android platforms.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.captureSingleScreen">
      <summary>
        <para>Defines if fullscreen games should darken secondary displays.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.cloudProjectId">
      <summary>
        <para>A unique cloud project identifier. It is unique for every project (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.colorSpace">
      <summary>
        <para>Set the rendering color space for the current project.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.companyName">
      <summary>
        <para>The name of your company.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.cursorHotspot">
      <summary>
        <para>Default cursor's click position in pixels from the top left corner of the cursor image.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.d3d11FullscreenMode">
      <summary>
        <para>Define how to handle fullscreen mode in Windows standalones (Direct3D 11 mode).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.d3d9FullscreenMode">
      <summary>
        <para>Define how to handle fullscreen mode in Windows standalones (Direct3D 9 mode).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.defaultCursor">
      <summary>
        <para>The default cursor for your application.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.defaultInterfaceOrientation">
      <summary>
        <para>Default screen orientation for mobiles.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.defaultIsFullScreen">
      <summary>
        <para>If enabled, the game will default to fullscreen mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.defaultScreenHeight">
      <summary>
        <para>Default vertical dimension of stand-alone player window.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.defaultScreenWidth">
      <summary>
        <para>Default horizontal dimension of stand-alone player window.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.defaultWebScreenHeight">
      <summary>
        <para>Default vertical dimension of web player window.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.defaultWebScreenWidth">
      <summary>
        <para>Default horizontal dimension of web player window.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.displayResolutionDialog">
      <summary>
        <para>Defines the behaviour of the Resolution Dialog on product launch.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.enable360StereoCapture">
      <summary>
        <para>Enable 360 Stereo Capture support on the current build target.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.enableCrashReportAPI">
      <summary>
        <para>Enables CrashReport API.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.enableFrameTimingStats">
      <summary>
        <para>Enable frame timing statistics.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.enableInternalProfiler">
      <summary>
        <para>Enables internal profiler.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.enableMetalAPIValidation">
      <summary>
        <para>Enables Metal API validation in the Editor.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.enableOpenGLProfilerGPURecorders">
      <summary>
        <para>Enable ProfilerRecorder usage to record GPU timings when rendering with OpenGL.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.firstStreamedLevelWithResources">
      <summary>
        <para>First level to have access to all Resources.Load assets in Streamed Web Players.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.forceSingleInstance">
      <summary>
        <para>Restrict standalone players to a single concurrent running instance.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.fullScreenMode">
      <summary>
        <para>Platform agnostic setting to define fullscreen behavior. Not all platforms support all modes.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.gcIncremental">
      <summary>
        <para>Allows you to enable or disable incremental mode for garbage collection.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.gpuSkinning">
      <summary>
        <para>Enable GPU skinning on capable platforms.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.graphicsJobMode">
      <summary>
        <para>Selects the graphics job mode to use on platforms that support both Native and Legacy graphics jobs.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.graphicsJobs">
      <summary>
        <para>Enable graphics jobs (multi threaded rendering).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iPhoneBundleIdentifier">
      <summary>
        <para>The bundle identifier of the iPhone application.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.keyaliasPass">
      <summary>
        <para>Password for the key used for signing an Android application.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.keystorePass">
      <summary>
        <para>Password used for interacting with the Android Keystore.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.legacyClampBlendShapeWeights">
      <summary>
        <para>Defines whether the BlendShape weight range in SkinnedMeshRenderers is clamped.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.locationUsageDescription">
      <summary>
        <para>Describes the reason for access to the user's location data.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.logObjCUncaughtExceptions">
      <summary>
        <para>Are ObjC uncaught exceptions logged?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.macFullscreenMode">
      <summary>
        <para>Define how to handle fullscreen mode in macOS standalones.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.macRetinaSupport">
      <summary>
        <para>Enable Retina support for macOS.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.mipStripping">
      <summary>
        <para>Enable mip stripping for all platforms.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.muteOtherAudioSources">
      <summary>
        <para>Stops or allows audio from other applications to play in the background while your Unity application is running.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.openGLRequireES31">
      <summary>
        <para>Specifies whether the application requires OpenGL ES 3.1 support.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.openGLRequireES31AEP">
      <summary>
        <para>Specifies whether the application requires OpenGL ES 3.1 AEP support.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.openGLRequireES32">
      <summary>
        <para>Specifies whether the application requires OpenGL ES 3.2 support.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.preserveFramebufferAlpha">
      <summary>
        <para>When enabled, preserves the alpha value in the framebuffer to support rendering over native UI on Android.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.productName">
      <summary>
        <para>The name of your product.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.protectGraphicsMemory">
      <summary>
        <para>Protect graphics memory.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.renderingPath">
      <summary>
        <para>Which rendering path is enabled?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.resetResolutionOnWindowResize">
      <summary>
        <para>Indicates whether to reset the application's screen resolution when the native window size changes.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.resizableWindow">
      <summary>
        <para>Use resizable window in standalone player builds.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.resolutionDialogBanner">
      <summary>
        <para>The image to display in the Resolution Dialog window.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.runInBackground">
      <summary>
        <para>If enabled, your game will continue to run after lost focus.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.scriptingRuntimeVersion">
      <summary>
        <para>The scripting runtime version setting. Change this to set the version the Editor uses and restart the Editor to apply the change.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.showUnitySplashScreen">
      <summary>
        <para>Should the builtin Unity splash screen be shown?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.singlePassStereoRendering">
      <summary>
        <para>Should Unity support single-pass stereo rendering?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.splashScreenStyle">
      <summary>
        <para>The style to use for the builtin Unity splash screen.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.statusBarHidden">
      <summary>
        <para>Returns if status bar should be hidden. Supported on iOS only; on Android, the status bar is always hidden.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.stereoRenderingPath">
      <summary>
        <para>Active stereo rendering path</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.stereoscopic3D">
      <summary>
        <para>Should player render in stereoscopic 3d on supported hardware?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.stripEngineCode">
      <summary>
        <para>Remove unused Engine code from your build (IL2CPP-only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.strippingLevel">
      <summary>
        <para>Deprecated. Use PlayerSettings.GetManagedStrippingLevel and PlayerSettings.SetManagedStrippingLevel instead.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.stripUnusedMeshComponents">
      <summary>
        <para>Should unused Mesh components be excluded from game build?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.suppressCommonWarnings">
      <summary>
        <para>Suppresses common C# warnings.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.uploadClearedTextureDataAfterCreationFromScript">
      <summary>
        <para>Upload the initialized Texture data after creation from script.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.use32BitDisplayBuffer">
      <summary>
        <para>32-bit Display Buffer is used.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.useAnimatedAutorotation">
      <summary>
        <para>Let the OS autorotate the screen as the device orientation changes.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.useDirect3D11">
      <summary>
        <para>Should Direct3D 11 be used when available?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.useFlipModelSwapchain">
      <summary>
        <para>Use DXGI flip model swap chain for D3D11.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.useHDRDisplay">
      <summary>
        <para>Switch display to HDR mode (if available).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.useMacAppStoreValidation">
      <summary>
        <para>Enable receipt validation for the Mac App Store.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.usePlayerLog">
      <summary>
        <para>Write a log file with debugging information.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.useReferenceAssemblies">
      <summary>
        <para>Set to true to make Unity use Roslyn reference assemblies when compiling scripts. Enabled by default.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.virtualRealitySplashScreen">
      <summary>
        <para>Virtual Reality specific splash screen.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.virtualRealitySupported">
      <summary>
        <para>Enable Virtual Reality support on the current build target.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.visibleInBackground">
      <summary>
        <para>On Windows, show the application in the background if Fullscreen Windowed mode is used.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.vulkanEnableLateAcquireNextImage">
      <summary>
        <para>Delays acquiring the swapchain image until after the frame is rendered.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.vulkanEnablePreTransform">
      <summary>
        <para>Applies the display rotation during rendering.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.vulkanEnableSetSRGBWrite">
      <summary>
        <para>Enables Graphics.SetSRGBWrite() on Vulkan renderer.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.vulkanNumSwapchainBuffers">
      <summary>
        <para>Set number of swapchain buffers to be used with Vulkan renderer</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.vulkanUseSWCommandBuffers">
      <summary>
        <para>Use software command buffers for building rendering commands on Vulkan.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.Android">
      <summary>
        <para>Android specific player settings.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.androidIsGame">
      <summary>
        <para>Publish the build as a game rather than a regular application. This option affects devices running Android 5.0 Lollipop and later.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.androidTargetDevices">
      <summary>
        <para>Select which devices are allowed to run the Android application (all devices, mobile phones, tablets, and TV devices only, or Chrome OS devices only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.androidTVCompatibility">
      <summary>
        <para>Provide a build that is Android TV compatible.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.blitType">
      <summary>
        <para>Choose how content is drawn to the screen.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.buildApkPerCpuArchitecture">
      <summary>
        <para>Create a separate APK for each CPU architecture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.bundleVersionCode">
      <summary>
        <para>Android bundle version code.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.chromeosInputEmulation">
      <summary>
        <para>Un-check to disable Chrome OS's default behaviour of converting mouse and touchpad input events into touchscreen input events.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.defaultWindowHeight">
      <summary>
        <para>The default vertical size of the Android Player window in pixels.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.defaultWindowWidth">
      <summary>
        <para>The default horizontal size of the Android Player window in pixels.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.disableDepthAndStencilBuffers">
      <summary>
        <para>Disable Depth and Stencil Buffers.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.forceInternetPermission">
      <summary>
        <para>Force internet permission flag.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.forceSDCardPermission">
      <summary>
        <para>Force SD card permission.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.fullscreenMode">
      <summary>
        <para>The display mode for Android Player builds of your application.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.keyaliasName">
      <summary>
        <para>Android key alias name.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.keyaliasPass">
      <summary>
        <para>Android key alias password.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.keystoreName">
      <summary>
        <para>Android keystore name.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.keystorePass">
      <summary>
        <para>Android keystore password.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.licenseVerification">
      <summary>
        <para>License verification flag.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.maxAspectRatio">
      <summary>
        <para>Maximum aspect ratio which is supported by the application.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.minifyDebug">
      <summary>
        <para>Enable to minify debug build.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.minifyRelease">
      <summary>
        <para>Enable to minify release build.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.minifyWithR8">
      <summary>
        <para>Use R8 to perform minification.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.minimumWindowHeight">
      <summary>
        <para>The minimum vertical size of the Android Player window in pixels.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.minimumWindowWidth">
      <summary>
        <para>The minimum horizontal size of the Android Player window in pixels.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.minSdkVersion">
      <summary>
        <para>The minimum API level required for your application to run.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.optimizedFramePacing">
      <summary>
        <para>Enable optimized frame pacing.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.preferredInstallLocation">
      <summary>
        <para>Preferred application install location.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.renderOutsideSafeArea">
      <summary>
        <para>Extends rendering layout into display cutout area, utilizing all of the available screen space.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.resizableWindow">
      <summary>
        <para>Indicates whether Android Player build of your application support a resizable window.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.showActivityIndicatorOnLoading">
      <summary>
        <para>Application should show ActivityIndicator when loading.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.splashScreenScale">
      <summary>
        <para>Android splash screen scale mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.startInFullscreen">
      <summary>
        <para>Start in fullscreen mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.targetArchitectures">
      <summary>
        <para>A set of CPU architectures for the Android build target.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.targetDevice">
      <summary>
        <para>Android target device.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.targetSdkVersion">
      <summary>
        <para>The target API level of your application.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.use24BitDepthBuffer">
      <summary>
        <para>24-bit Depth Buffer is used.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.useAPKExpansionFiles">
      <summary>
        <para>Use APK Expansion Files.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.useCustomKeystore">
      <summary>
        <para>Enable application signing with a custom keystore.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.Android.ARCoreEnabled">
      <summary>
        <para>Enable support for Google ARCore on supported devices.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.D3DHDRBitDepth">
      <summary>
        <para>The number of bits in each color channel for swap chain buffers. (Direct3D 11 and Direct3D 12 mode).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.Facebook">
      <summary>
        <para>Facebook specific Player settings.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetAdditionalCompilerArguments(UnityEditor.Build.NamedBuildTarget)">
      <summary>
        <para>Gets an array of additional compiler arguments set for a specific NamedBuildTarget.</para>
      </summary>
      <param name="buildTarget">The NamedBuildTarget to get the compiler arguments for.</param>
      <returns>
        <para>Returns an array with the compiler arguments associated with a NamedBuildTarget.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetAdditionalCompilerArgumentsForGroup(UnityEditor.BuildTargetGroup)">
      <summary>
        <para>BuildTargetGroup is marked for deprecation in the future. Use PlayerSettings.GetAdditionalCompilerArguments instead.</para>
      </summary>
      <param name="targetGroup">The BuildTargetGroup to get the compiler arguments for.</param>
      <returns>
        <para>Returns an array with the compiler arguments associated with a BuildTargetGroup.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetAdditionalIl2CppArgs">
      <summary>
        <para>Obtain the additional arguments passed to the IL2CPP compiler during the player build process.</para>
      </summary>
      <returns>
        <para>Additional arguments passed to the IL2CPP compiler during the build process.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetApiCompatibilityLevel(UnityEditor.Build.NamedBuildTarget)">
      <summary>
        <para>Gets .NET API compatibility level for specified build target.</para>
      </summary>
      <param name="buildTarget">The NamedBuildTarget.</param>
      <returns>
        <para>Returns the ApiCompatibilityLevel associated with a NamedBuildTarget.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetApiCompatibilityLevel(UnityEditor.BuildTargetGroup)">
      <summary>
        <para>BuildTargetGroup is marked for deprecation in the future. Use NamedBuildTarget instead.</para>
      </summary>
      <param name="buildTargetGroup">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetApplicationIdentifier(UnityEditor.Build.NamedBuildTarget)">
      <summary>
        <para>Get the application identifier for the specified platform.</para>
      </summary>
      <param name="buildTarget">The NamedBuildTarget.</param>
      <returns>
        <para>Returns the application identifier associated with a NamedBuildTarget.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetApplicationIdentifier(UnityEditor.BuildTargetGroup)">
      <summary>
        <para>BuildTargetGroup is marked for deprecation in the future. Use NamedBuildTarget instead.</para>
      </summary>
      <param name="targetGroup">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetArchitecture(UnityEditor.Build.NamedBuildTarget)">
      <summary>
        <para>Gets the architecture for the given build target.</para>
      </summary>
      <param name="buildTarget">The NamedBuildTarget.</param>
      <returns>
        <para>An integer value associated with the architecture of the build target.  0 - None, 1 - ARM64, 2 - Universal.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetArchitecture(UnityEditor.BuildTargetGroup)">
      <summary>
        <para>BuildTargetGroup is marked for deprecation in the future. Use NamedBuildTarget instead.</para>
      </summary>
      <param name="targetGroup">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetDefaultScriptingBackend(UnityEditor.Build.NamedBuildTarget)">
      <summary>
        <para>Returns the default ScriptingImplementation for the build target you select.</para>
      </summary>
      <param name="buildTarget">The NamedBuildTarget.</param>
      <returns>
        <para>A ScriptingImplementation object that describes the default scripting backend for the build target you select.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetDefaultScriptingBackend(UnityEditor.BuildTargetGroup)">
      <summary>
        <para>BuildTargetGroup is marked for deprecation in the future. Use NamedBuildTarget instead.</para>
      </summary>
      <param name="targetGroup">The platform group to retrieve the scripting backend for.</param>
      <returns>
        <para>A ScriptingImplementation object that describes the default scripting backend used on that build target.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetDefaultShaderChunkCount">
      <summary>
        <para>Gets the default limit on the number of shader variant chunks Unity loads and keeps in memory.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetDefaultShaderChunkSizeInMB">
      <summary>
        <para>Gets the default size for compressed shader variant chunks.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetGraphicsAPIs(UnityEditor.BuildTarget)">
      <summary>
        <para>Get graphics APIs to be used on a build platform.</para>
      </summary>
      <param name="platform">Platform to get APIs for.</param>
      <returns>
        <para>Array of graphics APIs.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetIcons(UnityEditor.Build.NamedBuildTarget,UnityEditor.IconKind)">
      <summary>
        <para>Returns the list of assigned icons for the specified build target.</para>
      </summary>
      <param name="buildTarget">The NamedBuildTarget.</param>
      <param name="kind">The IconKind.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetIconsForTargetGroup(UnityEditor.BuildTargetGroup)">
      <summary>
        <para>BuildTargetGroup is marked for deprecation in the future. Use PlayerSettings.GetIcons instead.</para>
      </summary>
      <param name="platform">
      </param>
      <param name="kind">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetIconsForTargetGroup(UnityEditor.BuildTargetGroup,UnityEditor.IconKind)">
      <summary>
        <para>BuildTargetGroup is marked for deprecation in the future. Use PlayerSettings.GetIcons instead.</para>
      </summary>
      <param name="platform">
      </param>
      <param name="kind">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetIconSizes(UnityEditor.Build.NamedBuildTarget,UnityEditor.IconKind)">
      <summary>
        <para>Returns a list of icon sizes for the specified platform.</para>
      </summary>
      <param name="buildTarget">The NamedBuildTarget.</param>
      <param name="kind">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetIconSizesForTargetGroup(UnityEditor.BuildTargetGroup)">
      <summary>
        <para>BuildTargetGroup is marked for deprecation in the future. Use PlayerSettings.GetIconSizes instead.</para>
      </summary>
      <param name="platform">
      </param>
      <param name="kind">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetIconSizesForTargetGroup(UnityEditor.BuildTargetGroup,UnityEditor.IconKind)">
      <summary>
        <para>BuildTargetGroup is marked for deprecation in the future. Use PlayerSettings.GetIconSizes instead.</para>
      </summary>
      <param name="platform">
      </param>
      <param name="kind">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetIl2CppCompilerConfiguration(UnityEditor.Build.NamedBuildTarget)">
      <summary>
        <para>Gets compiler configuration used when compiling generated C++ code for the build target you specify.</para>
      </summary>
      <param name="buildTarget">The NamedBuildTarget.</param>
      <returns>
        <para>Returns compiler configuration.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetIl2CppCompilerConfiguration(UnityEditor.BuildTargetGroup)">
      <summary>
        <para>BuildTargetGroup is marked for deprecation in the future. Use NamedBuildTarget instead.</para>
      </summary>
      <param name="targetGroup">Build target group.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetIncrementalIl2CppBuild(UnityEditor.Build.NamedBuildTarget)">
      <summary>
        <para>Gets the value of incremental il2cpp build option.</para>
      </summary>
      <param name="buildTarget">The NamedBuildTarget.</param>
      <returns>
        <para>Returns a boolean indicating if a IL2CPP supported build target is set to use incremental builds.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetIncrementalIl2CppBuild(UnityEditor.BuildTargetGroup)">
      <summary>
        <para>BuildTargetGroup is marked for deprecation in the future. Use NamedBuildTarget instead.</para>
      </summary>
      <param name="targetGroup">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetManagedStrippingLevel(UnityEditor.Build.NamedBuildTarget)">
      <summary>
        <para>Gets the managed code stripping level set for the build target you select</para>
      </summary>
      <param name="buildTarget">The NamedBuildTarget.</param>
      <returns>
        <para>Returns the default ManagedStrippingLevel for the build target you select.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetManagedStrippingLevel(UnityEditor.BuildTargetGroup)">
      <summary>
        <para>BuildTargetGroup is marked for deprecation in the future. Use NamedBuildTarget instead.</para>
      </summary>
      <param name="targetGroup">The target platform group whose code stripping level you want to retrieve.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetMobileMTRendering(UnityEditor.Build.NamedBuildTarget)">
      <summary>
        <para>Check if multithreaded rendering option for mobile platform is enabled.</para>
      </summary>
      <param name="buildTarget">The NamedBuildTarget. (Only iOS, tvOS and Android).</param>
      <returns>
        <para>Returns true if multithreaded rendering option for build target is enabled.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetMobileMTRendering(UnityEditor.BuildTargetGroup)">
      <summary>
        <para>BuildTargetGroup is marked for deprecation in the future. Use NamedBuildTarget instead.</para>
      </summary>
      <param name="targetGroup">Mobile platform (Only iOS, tvOS and Android).</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetNormalMapEncoding(UnityEditor.Build.NamedBuildTarget)">
      <summary>
        <para>Gets the NormalMapEncoding for the build target you select.</para>
      </summary>
      <param name="buildTarget">The NamedBuildTarget.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetNormalMapEncoding(UnityEditor.BuildTargetGroup)">
      <summary>
        <para>BuildTargetGroup is marked for deprecation in the future. Use NamedBuildTarget instead.</para>
      </summary>
      <param name="platform">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetOverrideShaderChunkSettingsForPlatform(UnityEditor.BuildTarget)">
      <summary>
        <para>If the value is true, settings for the buildTarget override the default settings.</para>
      </summary>
      <param name="buildTarget">The build target to check the override for.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetPlatformIcons(UnityEditor.Build.NamedBuildTarget,UnityEditor.PlatformIconKind)">
      <summary>
        <para>Gets the list of available icon slots for the specified build target and  PlatformIconKind|kind.</para>
      </summary>
      <param name="buildTarget">The NamedBuildTarget.</param>
      <param name="kind">Each platform supports a different set of PlatformIconKind|icon kinds. These can be found in the specific platform namespace (for example iOSPlatformIconKind.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetPlatformIcons(UnityEditor.BuildTargetGroup,UnityEditor.PlatformIconKind)">
      <summary>
        <para>BuildTargetGroup is marked for deprecation in the future. Use NamedBuildTarget instead.</para>
      </summary>
      <param name="platform">The full list of platforms that support this API and the supported icon kinds can be found in PlatformIconKind|icon kinds.</param>
      <param name="kind">Each platform supports a different set of PlatformIconKind|icon kinds. These can be found in the specific platform namespace (for example iOSPlatformIconKind).</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetPreloadedAssets">
      <summary>
        <para>Returns the assets that will be loaded at start up in the player and be kept alive until the player terminates.</para>
      </summary>
      <returns>
        <para>The assets to be preloaded.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetPropertyBool(System.String,UnityEditor.BuildTargetGroup)">
      <summary>
        <para>This is now obsolete. Use an explicit API instead. For example, PlayerSettings.WebGL.useEmbeddedResources.</para>
      </summary>
      <param name="name">Name of the property.</param>
      <param name="target">BuildTarget for which the property should apply (use default value BuildTargetGroup.Unknown to apply to all targets).</param>
      <returns>
        <para>The current value of the property.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetPropertyInt(System.String,UnityEditor.BuildTargetGroup)">
      <summary>
        <para>Returns a PlayerSettings named int property (with an optional build target it should apply to).</para>
      </summary>
      <param name="name">Name of the property.</param>
      <param name="target">BuildTarget for which the property should apply (use default value BuildTargetGroup.Unknown to apply to all targets).</param>
      <returns>
        <para>The current value of the property.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetPropertyOptionalBool(System.String,System.Boolean&amp;,UnityEditor.BuildTargetGroup)">
      <summary>
        <para>Searches for property and assigns it's value to given variable.</para>
      </summary>
      <param name="name">Name of the property.</param>
      <param name="value">Variable, to which to store the value of the property, if set.</param>
      <param name="target">An optional build target group, to which the property applies.</param>
      <returns>
        <para>True if property was set and it's value assigned to given variable.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetPropertyOptionalInt(System.String,System.Int32&amp;,UnityEditor.BuildTargetGroup)">
      <summary>
        <para>Searches for property and assigns it's value to given variable.</para>
      </summary>
      <param name="name">Name of the property.</param>
      <param name="value">Variable, to which to store the value of the property, if set.</param>
      <param name="target">An optional build target group, to which the property applies.</param>
      <returns>
        <para>True if property was set and it's value assigned to given variable.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetPropertyOptionalString(System.String,System.String&amp;,UnityEditor.BuildTargetGroup)">
      <summary>
        <para>Searches for property and assigns it's value to given variable.</para>
      </summary>
      <param name="name">Name of the property.</param>
      <param name="value">Variable, to which to store the value of the property, if set.</param>
      <param name="target">An optional build target group, to which the property applies.</param>
      <returns>
        <para>True if property was set and it's value assigned to given variable.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetPropertyString(System.String,UnityEditor.BuildTargetGroup)">
      <summary>
        <para>Returns a PlayerSettings named string property (with an optional build target it should apply to).</para>
      </summary>
      <param name="name">Name of the property.</param>
      <param name="target">BuildTarget for which the property should apply (use default value BuildTargetGroup.Unknown to apply to all targets).</param>
      <returns>
        <para>The current value of the property.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetScriptingBackend(UnityEditor.Build.NamedBuildTarget)">
      <summary>
        <para>Gets the scripting framework for the build target you select.</para>
      </summary>
      <param name="buildTarget">The NamedBuildTarget.</param>
      <returns>
        <para>Returns IL2CPP, Mono or .NET scripting backends.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetScriptingBackend(UnityEditor.BuildTargetGroup)">
      <summary>
        <para>BuildTargetGroup is marked for deprecation in the future. Use NamedBuildTarget instead.</para>
      </summary>
      <param name="targetGroup">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetScriptingDefineSymbols(UnityEditor.Build.NamedBuildTarget)">
      <summary>
        <para>Gets the user-specified symbols for script compilation for the build target you select.</para>
      </summary>
      <param name="buildTarget">The NamedBuildTarget.</param>
      <returns>
        <para>A string containing the symbols for the given build target name.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetScriptingDefineSymbols(UnityEditor.Build.NamedBuildTarget,System.String[]&amp;)">
      <summary>
        <para>Gets the user-specified symbols for script compilation for the build target you select.</para>
      </summary>
      <param name="buildTarget">The NamedBuildTarget.</param>
      <param name="defines">A string array where Unity stores the symbols for the given build target name.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetScriptingDefineSymbolsForGroup(UnityEditor.BuildTargetGroup)">
      <summary>
        <para>BuildTargetGroup is marked for deprecation in the future. Use PlayerSettings.GetScriptingDefineSymbols instead.</para>
      </summary>
      <param name="targetGroup">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetShaderChunkCountForPlatform(UnityEditor.BuildTarget)">
      <summary>
        <para>Gets the default limit on the number of shader variant chunks Unity loads and keeps in memory for the build target.</para>
      </summary>
      <param name="buildTarget">The build target to get the shader chunk count for.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetShaderChunkSizeInMBForPlatform(UnityEditor.BuildTarget)">
      <summary>
        <para>Gets the default size for compressed shader variant chunks for the build target.</para>
      </summary>
      <param name="buildTarget">The build target to get the shader chunk size for.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetShaderPrecisionModel">
      <summary>
        <para>Gets the active shader precision model.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetStackTraceLogType(UnityEngine.LogType)">
      <summary>
        <para>Gets stack trace logging options.</para>
      </summary>
      <param name="logType">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetSupportedIconKinds(UnityEditor.Build.NamedBuildTarget)">
      <summary>
        <para>Retrieves all icon kinds that the specified build target supports</para>
      </summary>
      <param name="buildTarget">The NamedBuildTarget.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetSupportedIconKindsForPlatform(UnityEditor.BuildTargetGroup)">
      <summary>
        <para>BuildTargetGroup is marked for deprecation in the future. Use PlayerSettings.GetSupportedIconKinds instead.</para>
      </summary>
      <param name="platform">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetTemplateCustomValue(System.String)">
      <summary>
        <para>Returns a value of a custom template variable.</para>
      </summary>
      <param name="name">Name of the variable.</param>
      <returns>
        <para>The current value of the custom template variable.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetUseDefaultGraphicsAPIs(UnityEditor.BuildTarget)">
      <summary>
        <para>Is a build platform using automatic graphics API choice?</para>
      </summary>
      <param name="platform">Platform to get the flag for.</param>
      <returns>
        <para>Should best available graphics API be used.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetVirtualRealitySupported(UnityEditor.BuildTargetGroup)">
      <summary>
        <para>Returns whether or not Virtual Reality Support is enabled for a given BuildTargetGroup.</para>
      </summary>
      <param name="targetGroup">The BuildTargetGroup to return the value for.</param>
      <returns>
        <para>True if Virtual Reality Support is enabled.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.GetVirtualTexturingSupportEnabled">
      <summary>
        <para>Is virtual texturing enabled.</para>
      </summary>
      <returns>
        <para>True if virtual texturing is enabled, false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.HasAspectRatio(UnityEditor.AspectRatio)">
      <summary>
        <para>Returns whether or not the specified aspect ratio is enabled.</para>
      </summary>
      <param name="aspectRatio">
      </param>
    </member>
    <member name="T:UnityEditor.PlayerSettings.iOS">
      <summary>
        <para>iOS specific player settings.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.allowHTTPDownload">
      <summary>
        <para>Should insecure HTTP downloads be allowed?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.appInBackgroundBehavior">
      <summary>
        <para>Application behavior when entering background.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.appleDeveloperTeamID">
      <summary>
        <para>Set this property with your Apple Developer Team ID. You can find this on the Apple Developer website under &lt;a href="https:developer.apple.comaccount#membership"&gt; Account &gt; Membership &lt;/a&gt; . This sets the Team ID for the generated Xcode project, allowing developers to use the Build and Run functionality. An Apple Developer Team ID must be set here for automatic signing of your app.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.appleEnableAutomaticSigning">
      <summary>
        <para>Set this property to true for Xcode to attempt to automatically sign your app based on your appleDeveloperTeamID.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.applicationDisplayName">
      <summary>
        <para>iOS application display name.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.backgroundModes">
      <summary>
        <para>Supported background execution modes (when appInBackgroundBehavior is set to iOSAppInBackgroundBehavior.Custom).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.buildNumber">
      <summary>
        <para>The build number of the bundle</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.cameraUsageDescription">
      <summary>
        <para>Describes the reason for access to the user's camera.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.deferSystemGesturesMode">
      <summary>
        <para>Defer system gestures until the second swipe on specific edges.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.deferSystemGesturesMode">
      <summary>
        <para>Defer system gestures until the second swipe on specific edges.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.disableDepthAndStencilBuffers">
      <summary>
        <para>Disable Depth and Stencil Buffers.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.exitOnSuspend">
      <summary>
        <para>Application should exit when suspended to background.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.forceHardShadowsOnMetal">
      <summary>
        <para>Should hard shadows be enforced when running on (mobile) Metal.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.hideHomeButton">
      <summary>
        <para>Specifies whether the home button should be hidden in the iOS build of this application.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.iOSManualProvisioningProfileID">
      <summary>
        <para>A provisioning profile Universally Unique Identifier (UUID) that Xcode will use to build your iOS app in Manual Signing mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.iOSManualProvisioningProfileType">
      <summary>
        <para>A ProvisioningProfileType that will be set when building an iOS Xcode project.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.iOSUrlSchemes">
      <summary>
        <para>An array of URL Schemes that are supported by the app.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.locationUsageDescription">
      <summary>
        <para>Describes the reason for access to the user's location data.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.microphoneUsageDescription">
      <summary>
        <para>Describes the reason for access to the user's microphone.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.overrideIPodMusic">
      <summary>
        <para>Determines iPod playing behavior.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.prerenderedIcon">
      <summary>
        <para>Icon is prerendered.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.requiresFullScreen">
      <summary>
        <para>RequiresFullScreen maps to Apple's plist build setting UIRequiresFullScreen, which is used to opt out of being eligible to participate in Slide Over and Split View for iOS 9.0 multitasking.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.requiresPersistentWiFi">
      <summary>
        <para>Application requires persistent WiFi.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.scriptCallOptimization">
      <summary>
        <para>Script calling optimization.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.sdkVersion">
      <summary>
        <para>Active iOS SDK version used for build.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.showActivityIndicatorOnLoading">
      <summary>
        <para>Application should show ActivityIndicator when loading.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.statusBarStyle">
      <summary>
        <para>Status bar style.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.targetDevice">
      <summary>
        <para>Targeted device.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.targetOSVersion">
      <summary>
        <para>Deployment minimal version of iOS.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.targetOSVersionString">
      <summary>
        <para>Deployment minimal version of iOS.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.tvOSManualProvisioningProfileID">
      <summary>
        <para>A provisioning profile Universally Unique Identifier (UUID) that Xcode will use to build your tvOS app in Manual Signing mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.tvOSManualProvisioningProfileType">
      <summary>
        <para>A ProvisioningProfileType that will be set when building a tvOS Xcode project.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.iOS.useOnDemandResources">
      <summary>
        <para>Indicates whether application will use On Demand Resources (ODR) API.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PlayerSettings.iOS.SetiPadLaunchScreenType(UnityEditor.iOSLaunchScreenType)">
      <summary>
        <para>Sets the mode which will be used to generate the app's launch screen Interface Builder (.xib) file for iPad.</para>
      </summary>
      <param name="type">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.iOS.SetiPhoneLaunchScreenType(UnityEditor.iOSLaunchScreenType)">
      <summary>
        <para>Sets the mode which will be used to generate the app's launch screen Interface Builder (.xib) file for iPhone.</para>
      </summary>
      <param name="type">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.iOS.SetLaunchScreenImage(UnityEngine.Texture2D,UnityEditor.iOSLaunchScreenImageType)">
      <summary>
        <para>Sets the image to display on screen when the game launches for the specified iOS device.</para>
      </summary>
      <param name="image">
      </param>
      <param name="type">
      </param>
    </member>
    <member name="P:UnityEditor.PlayerSettings.MTRendering">
      <summary>
        <para>Is multi-threaded rendering enabled?</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.PS4">
      <summary>
        <para>Player Settings for the PlayStation®4.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.PS4.PS4AppCategory">
      <summary>
        <para>PS4 application category.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.PS4.PS4AppCategory.Application">
      <summary>
        <para>Application.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.PS4.PS4EnterButtonAssignment">
      <summary>
        <para>PS4 enter button assignment.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.PS4.PS4EnterButtonAssignment.CircleButton">
      <summary>
        <para>Circle button.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.PS4.PS4EnterButtonAssignment.CrossButton">
      <summary>
        <para>Cross button.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.PS4.PS4RemotePlayKeyAssignment">
      <summary>
        <para>Remote Play key assignment.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.PS4.PS4RemotePlayKeyAssignment.None">
      <summary>
        <para>No Remote play key assignment.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.PS4.PS4RemotePlayKeyAssignment.PatternA">
      <summary>
        <para>Remote Play key layout configuration A.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.PS4.PS4RemotePlayKeyAssignment.PatternB">
      <summary>
        <para>Remote Play key layout configuration B.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.PS4.PS4RemotePlayKeyAssignment.PatternC">
      <summary>
        <para>Remote Play key layout configuration C.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.PS4.PS4RemotePlayKeyAssignment.PatternD">
      <summary>
        <para>Remote Play key layout configuration D.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.PS4.PS4RemotePlayKeyAssignment.PatternE">
      <summary>
        <para>Remote Play key layout configuration E.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.PS4.PS4RemotePlayKeyAssignment.PatternF">
      <summary>
        <para>Remote Play key layout configuration F.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.PS4.PS4RemotePlayKeyAssignment.PatternG">
      <summary>
        <para>Remote Play key layout configuration G.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.PS4.PS4RemotePlayKeyAssignment.PatternH">
      <summary>
        <para>Remote Play key layout configuration H.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetAdditionalCompilerArguments(UnityEditor.Build.NamedBuildTarget,System.String[])">
      <summary>
        <para>Sets additional compiler arguments for a build target.</para>
      </summary>
      <param name="buildTarget">The NamedBuildTarget.</param>
      <param name="additionalCompilerArguments">An array of the additional compiler arguments.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetAdditionalCompilerArgumentsForGroup(UnityEditor.BuildTargetGroup,System.String[])">
      <summary>
        <para>BuildTargetGroup is marked for deprecation in the future. Use PlayerSettings.SetAdditionalCompilerArguments instead.</para>
      </summary>
      <param name="targetGroup">The BuildTargetGroup to set the additional compiler arguments for.</param>
      <param name="additionalCompilerArguments">An array of the additional compiler arguments.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetAdditionalIl2CppArgs(System.String)">
      <summary>
        <para>Set additional arguments passed to the IL2CPP compiler during the build process.</para>
      </summary>
      <param name="additionalArgs">The additional arguments passed to the IL2CPP compiler during the build process.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetApiCompatibilityLevel(UnityEditor.Build.NamedBuildTarget,UnityEditor.ApiCompatibilityLevel)">
      <summary>
        <para>Sets .NET API compatibility level for specified build target.</para>
      </summary>
      <param name="buildTarget">The NamedBuildTarget.</param>
      <param name="value">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetApiCompatibilityLevel(UnityEditor.BuildTargetGroup,UnityEditor.ApiCompatibilityLevel)">
      <summary>
        <para>BuildTargetGroup is marked for deprecation in the future. Use NamedBuildTarget instead.</para>
      </summary>
      <param name="buildTargetGroup">
      </param>
      <param name="value">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetApiCompatibilityLevel(UnityEditor.BuildTargetGroup,UnityEditor.ApiCompatibilityLevel)">
      <summary>
        <para>BuildTargetGroup is marked for deprecation in the future. Use NamedBuildTarget instead.</para>
      </summary>
      <param name="buildTargetGroup">
      </param>
      <param name="value">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetApplicationIdentifier(UnityEditor.Build.NamedBuildTarget,System.String)">
      <summary>
        <para>Set the application identifier for the specified platform.</para>
      </summary>
      <param name="buildTarget">The NamedBuildTarget.</param>
      <param name="identifier">
      </param>
      <param name="targetGroup">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetApplicationIdentifier(UnityEditor.BuildTargetGroup,System.String)">
      <summary>
        <para>Set the application identifier for the specified platform.</para>
      </summary>
      <param name="buildTarget">The NamedBuildTarget.</param>
      <param name="identifier">
      </param>
      <param name="targetGroup">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetArchitecture(UnityEditor.Build.NamedBuildTarget,System.Int32)">
      <summary>
        <para>Sets the architecture for the given build target.</para>
      </summary>
      <param name="buildTarget">The NamedBuildTarget.</param>
      <param name="architecture">An integer value associated with the architecture of the build target.  0 - None, 1 - ARM64, 2 - Universal.</param>
      <param name="targetGroup">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetArchitecture(UnityEditor.BuildTargetGroup,System.Int32)">
      <summary>
        <para>Sets the architecture for the given build target.</para>
      </summary>
      <param name="buildTarget">The NamedBuildTarget.</param>
      <param name="architecture">An integer value associated with the architecture of the build target.  0 - None, 1 - ARM64, 2 - Universal.</param>
      <param name="targetGroup">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetAspectRatio(UnityEditor.AspectRatio,System.Boolean)">
      <summary>
        <para>Enables the specified aspect ratio.</para>
      </summary>
      <param name="aspectRatio">
      </param>
      <param name="enable">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetDefaultShaderChunkCount(System.Int32)">
      <summary>
        <para>Sets the default limit on the number of shader variant chunks Unity loads and keeps in memory.</para>
      </summary>
      <param name="buildTarget">The build target to set the shader chunk count for.</param>
      <param name="chunkCount">The maximum number of chunks to keep in memory for each shader.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetDefaultShaderChunkSizeInMB(System.Int32)">
      <summary>
        <para>Sets the default size for compressed shader variant chunks.</para>
      </summary>
      <param name="sizeInMegabytes">The chunk size in megabytes.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetGraphicsAPIs(UnityEditor.BuildTarget,UnityEngine.Rendering.GraphicsDeviceType[])">
      <summary>
        <para>Sets the graphics APIs used on a build platform.</para>
      </summary>
      <param name="platform">Platform to set APIs for.</param>
      <param name="apis">Array of graphics APIs.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetIcons(UnityEditor.Build.NamedBuildTarget,UnityEngine.Texture2D[],UnityEditor.IconKind)">
      <summary>
        <para>Assigns a list of icons for the specified platform.</para>
      </summary>
      <param name="buildTarget">The NamedBuildTarget.</param>
      <param name="icons">
      </param>
      <param name="kind">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetIconsForTargetGroup(UnityEditor.BuildTargetGroup,UnityEngine.Texture2D[])">
      <summary>
        <para>BuildTargetGroup is marked for deprecation in the future. Use PlayerSettings.SetIcons instead.</para>
      </summary>
      <param name="platform">
      </param>
      <param name="icons">
      </param>
      <param name="kind">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetIconsForTargetGroup(UnityEditor.BuildTargetGroup,UnityEngine.Texture2D[],UnityEditor.IconKind)">
      <summary>
        <para>BuildTargetGroup is marked for deprecation in the future. Use PlayerSettings.SetIcons instead.</para>
      </summary>
      <param name="platform">
      </param>
      <param name="icons">
      </param>
      <param name="kind">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetIl2CppCompilerConfiguration(UnityEditor.Build.NamedBuildTarget,UnityEditor.Il2CppCompilerConfiguration)">
      <summary>
        <para>Sets compiler configuration used when compiling generated C++ code for a particular build target.</para>
      </summary>
      <param name="buildTarget">The NamedBuildTarget.</param>
      <param name="targetGroup">Build target group.</param>
      <param name="configuration">Compiler configuration.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetIl2CppCompilerConfiguration(UnityEditor.BuildTargetGroup,UnityEditor.Il2CppCompilerConfiguration)">
      <summary>
        <para>Sets compiler configuration used when compiling generated C++ code for a particular build target.</para>
      </summary>
      <param name="buildTarget">The NamedBuildTarget.</param>
      <param name="targetGroup">Build target group.</param>
      <param name="configuration">Compiler configuration.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetIncrementalIl2CppBuild(UnityEditor.Build.NamedBuildTarget,System.Boolean)">
      <summary>
        <para>Sets incremental build flag.</para>
      </summary>
      <param name="buildTarget">The NamedBuildTarget.</param>
      <param name="enabled">
      </param>
      <param name="targetGroup">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetIncrementalIl2CppBuild(UnityEditor.BuildTargetGroup,System.Boolean)">
      <summary>
        <para>Sets incremental build flag.</para>
      </summary>
      <param name="buildTarget">The NamedBuildTarget.</param>
      <param name="enabled">
      </param>
      <param name="targetGroup">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetManagedStrippingLevel(UnityEditor.Build.NamedBuildTarget,UnityEditor.ManagedStrippingLevel)">
      <summary>
        <para>Sets the managed code stripping level for specified build target.</para>
      </summary>
      <param name="level">The desired managed code stripping level.</param>
      <param name="buildTarget">The NamedBuildTarget.</param>
      <param name="targetGroup">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetManagedStrippingLevel(UnityEditor.BuildTargetGroup,UnityEditor.ManagedStrippingLevel)">
      <summary>
        <para>Sets the managed code stripping level for specified build target.</para>
      </summary>
      <param name="level">The desired managed code stripping level.</param>
      <param name="buildTarget">The NamedBuildTarget.</param>
      <param name="targetGroup">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetManagedStrippingLevel(UnityEditor.BuildTargetGroup,UnityEditor.ManagedStrippingLevel)">
      <summary>
        <para>Sets the managed code stripping level for specified build target.</para>
      </summary>
      <param name="level">The desired managed code stripping level.</param>
      <param name="buildTarget">The NamedBuildTarget.</param>
      <param name="targetGroup">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetMobileMTRendering(UnityEditor.Build.NamedBuildTarget,System.Boolean)">
      <summary>
        <para>Enable or disable multithreaded rendering option for mobile platform.</para>
      </summary>
      <param name="targetGroup">Mobile platform (Only iOS, tvOS and Android).</param>
      <param name="buildTarget">The NamedBuildTarget (Only iOS, tvOS and Android).</param>
      <param name="enable">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetMobileMTRendering(UnityEditor.BuildTargetGroup,System.Boolean)">
      <summary>
        <para>Enable or disable multithreaded rendering option for mobile platform.</para>
      </summary>
      <param name="targetGroup">Mobile platform (Only iOS, tvOS and Android).</param>
      <param name="buildTarget">The NamedBuildTarget (Only iOS, tvOS and Android).</param>
      <param name="enable">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetNormalMapEncoding(UnityEditor.Build.NamedBuildTarget,UnityEditor.NormalMapEncoding)">
      <summary>
        <para>Sets the normal map encoding for the given build target.</para>
      </summary>
      <param name="encoding">The desired normal map encoding.</param>
      <param name="buildTarget">The NamedBuildTarget (only Android, iOS and tvOS).</param>
      <param name="platform">The platform build target group whose normal map encoding you want to set.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetNormalMapEncoding(UnityEditor.BuildTargetGroup,UnityEditor.NormalMapEncoding)">
      <summary>
        <para>Sets the normal map encoding for the given build target.</para>
      </summary>
      <param name="encoding">The desired normal map encoding.</param>
      <param name="buildTarget">The NamedBuildTarget (only Android, iOS and tvOS).</param>
      <param name="platform">The platform build target group whose normal map encoding you want to set.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetOverrideShaderChunkSettingsForPlatform(UnityEditor.BuildTarget,System.Boolean)">
      <summary>
        <para>Enable this to override the default shader variant chunk settings.</para>
      </summary>
      <param name="buildTarget">The build target to set the override for.</param>
      <param name="value">Set the value to true if you want settings for the buildTarget to override the default settings.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetPlatformIcons(UnityEditor.Build.NamedBuildTarget,UnityEditor.PlatformIconKind,UnityEditor.PlatformIcon[])">
      <summary>
        <para>Assign a list of icons for the specified platform and icon kind.</para>
      </summary>
      <param name="platform">The full list of platforms that support this API the supported  kinds can be found in PlatformIconKind|icon kinds.</param>
      <param name="icons">All available PlatformIcon slots must be retrieved with GetPlatformIcons.</param>
      <param name="buildTarget">The NamedBuildTarget.</param>
      <param name="kind">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetPlatformIcons(UnityEditor.BuildTargetGroup,UnityEditor.PlatformIconKind,UnityEditor.PlatformIcon[])">
      <summary>
        <para>Assign a list of icons for the specified platform and icon kind.</para>
      </summary>
      <param name="platform">The full list of platforms that support this API the supported  kinds can be found in PlatformIconKind|icon kinds.</param>
      <param name="icons">All available PlatformIcon slots must be retrieved with GetPlatformIcons.</param>
      <param name="buildTarget">The NamedBuildTarget.</param>
      <param name="kind">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetPreloadedAssets(UnityEngine.Object[])">
      <summary>
        <para>Assigns the assets that will be loaded at start up in the player and be kept alive until the player terminates.</para>
      </summary>
      <param name="assets">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetPropertyBool(System.String,System.Boolean,UnityEditor.BuildTargetGroup)">
      <summary>
        <para>This is now obsolete. Use an explicit API instead. For example, PlayerSettings.WebGL.useEmbeddedResources.</para>
      </summary>
      <param name="name">Name of the property.</param>
      <param name="value">Value of the property (bool).</param>
      <param name="target">BuildTarget for which the property should apply (use default value BuildTargetGroup.Unknown to apply to all targets).</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetPropertyInt(System.String,System.Int32,UnityEditor.BuildTargetGroup)">
      <summary>
        <para>Sets a PlayerSettings named int property.</para>
      </summary>
      <param name="name">Name of the property.</param>
      <param name="value">Value of the property (int).</param>
      <param name="target">BuildTarget for which the property should apply (use default value BuildTargetGroup.Unknown to apply to all targets).</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetPropertyString(System.String,System.String,UnityEditor.BuildTargetGroup)">
      <summary>
        <para>Sets a PlayerSettings named string property.</para>
      </summary>
      <param name="name">Name of the property.</param>
      <param name="value">Value of the property (string).</param>
      <param name="target">BuildTarget for which the property should apply (use default value BuildTargetGroup.Unknown to apply to all targets).</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetScriptingBackend(UnityEditor.Build.NamedBuildTarget,UnityEditor.ScriptingImplementation)">
      <summary>
        <para>Sets the scripting framework for a given build target.</para>
      </summary>
      <param name="buildTarget">The NamedBuildTarget.</param>
      <param name="backend">The ScriptingImplementation.</param>
      <param name="targetGroup">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetScriptingBackend(UnityEditor.BuildTargetGroup,UnityEditor.ScriptingImplementation)">
      <summary>
        <para>Sets the scripting framework for a given build target.</para>
      </summary>
      <param name="buildTarget">The NamedBuildTarget.</param>
      <param name="backend">The ScriptingImplementation.</param>
      <param name="targetGroup">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetScriptingDefineSymbols(UnityEditor.Build.NamedBuildTarget,System.String)">
      <summary>
        <para>Set user-specified symbols for script compilation for the given build target.</para>
      </summary>
      <param name="buildTarget">The NamedBuildTarget.</param>
      <param name="defines">Symbols for this build target are passed as an array or as a string separated by semicolons.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetScriptingDefineSymbols(UnityEditor.Build.NamedBuildTarget,System.String[])">
      <summary>
        <para>Set user-specified symbols for script compilation for the given build target.</para>
      </summary>
      <param name="buildTarget">The NamedBuildTarget.</param>
      <param name="defines">Symbols for this build target are passed as an array or as a string separated by semicolons.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetScriptingDefineSymbolsForGroup(UnityEditor.BuildTargetGroup,System.String)">
      <summary>
        <para>BuildTargetGroup is marked for deprecation in the future. Use PlayerSettings.SetScriptingDefineSymbols instead.</para>
      </summary>
      <param name="targetGroup">The name of the group of devices.</param>
      <param name="defines">Symbols for this group can be passed as an array or as a string separated by semicolons.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetScriptingDefineSymbolsForGroup(UnityEditor.BuildTargetGroup,System.String[])">
      <summary>
        <para>BuildTargetGroup is marked for deprecation in the future. Use PlayerSettings.SetScriptingDefineSymbols instead.</para>
      </summary>
      <param name="targetGroup">The name of the group of devices.</param>
      <param name="defines">Symbols for this group can be passed as an array or as a string separated by semicolons.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetShaderChunkCountForPlatform(UnityEditor.BuildTarget,System.Int32)">
      <summary>
        <para>Sets the default limit on the number of shader variant chunks Unity loads and keeps in memory on the build target.</para>
      </summary>
      <param name="buildTarget">The build target to set the shader chunk count for.</param>
      <param name="chunkCount">The maximum number of chunks to keep in memory for each shader.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetShaderChunkSizeInMBForPlatform(UnityEditor.BuildTarget,System.Int32)">
      <summary>
        <para>Sets the default size for compressed shader variant chunks on the build target.</para>
      </summary>
      <param name="buildTarget">The build target to set the shader chunk size for.</param>
      <param name="sizeInMegabytes">The chunk size in megabytes.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetShaderPrecisionModel(UnityEditor.ShaderPrecisionModel)">
      <summary>
        <para>Sets the shader precision model.</para>
      </summary>
      <param name="model">The new precision model to use.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetStackTraceLogType(UnityEngine.LogType,UnityEngine.StackTraceLogType)">
      <summary>
        <para>Set stack trace logging options.
Note: calling this function will implicitly call Application.SetStackTraceLogType.</para>
      </summary>
      <param name="logType">
      </param>
      <param name="stackTraceType">
      </param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetTemplateCustomValue(System.String,System.String)">
      <summary>
        <para>Sets a value of a custom template variable.</para>
      </summary>
      <param name="name">Name of the variable.</param>
      <param name="value">Value of the custom template variable.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetUseDefaultGraphicsAPIs(UnityEditor.BuildTarget,System.Boolean)">
      <summary>
        <para>Should a build platform use automatic graphics API choice.</para>
      </summary>
      <param name="platform">Platform to set the flag for.</param>
      <param name="automatic">Should best available graphics API be used?</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetVirtualRealitySupported(UnityEditor.BuildTargetGroup,System.Boolean)">
      <summary>
        <para>Sets whether or not Virtual Reality Support is enabled for a given BuildTargetGroup.</para>
      </summary>
      <param name="targetGroup">The BuildTargetGroup to set the value for.</param>
      <param name="value">The value to set, true to enable, false to disable.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SetVirtualTexturingSupportEnabled(System.Boolean)">
      <summary>
        <para>Enable virtual texturing.</para>
      </summary>
      <param name="enabled">True to enable, false to disable.</param>
    </member>
    <member name="T:UnityEditor.PlayerSettings.SplashScreen">
      <summary>
        <para>Interface to splash screen player settings.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.SplashScreen.animationBackgroundZoom">
      <summary>
        <para>The target zoom (from 0 to 1) for the background when it reaches the end of the SplashScreen animation's total duration. Only used when animationMode is PlayerSettings.SplashScreen.AnimationMode.Custom|AnimationMode.Custom.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.SplashScreen.animationLogoZoom">
      <summary>
        <para>The target zoom (from 0 to 1) for the logo when it reaches the end of the logo animation's total duration. Only used when animationMode is PlayerSettings.SplashScreen.AnimationMode.Custom|AnimationMode.Custom.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.SplashScreen.animationMode">
      <summary>
        <para>The type of animation applied during the splash screen.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.SplashScreen.background">
      <summary>
        <para>The background Sprite that is shown in landscape mode. Also shown in portrait mode if backgroundPortrait is null.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.SplashScreen.backgroundColor">
      <summary>
        <para>The background color shown if no background Sprite is assigned. Default is a dark blue RGB(34.44,54).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.SplashScreen.backgroundPortrait">
      <summary>
        <para>The background Sprite that is shown in portrait mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.SplashScreen.blurBackgroundImage">
      <summary>
        <para>Determines whether Unity applies a blur effect to the background Sprite on the Splash Screen.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.SplashScreen.drawMode">
      <summary>
        <para>Determines how the Unity logo should be drawn, if it is enabled. If no Unity logo exists in [logos] then the draw mode defaults to PlayerSettings.SplashScreen.DrawMode.UnityLogoBelow|DrawMode.UnityLogoBelow.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.SplashScreen.logos">
      <summary>
        <para>The collection of logos that is shown during the splash screen. Logos are drawn in ascending order, starting from index 0, followed by 1, etc etc.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.SplashScreen.overlayOpacity">
      <summary>
        <para>In order to increase contrast between the background and the logos, an overlay color modifier is applied. The overlay opacity is the strength of this effect. Note: Reducing the value below 0.5 requires a Plus/Pro license.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.SplashScreen.show">
      <summary>
        <para>Set this to true to display the Splash Screen be shown when the application is launched. Set it to false to disable the Splash Screen. Note: Disabling the Splash Screen requires a Plus/Pro license.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.SplashScreen.showUnityLogo">
      <summary>
        <para>Set this to true to show the Unity logo during the Splash Screen. Set it to false to disable the Unity logo. Note: Disabling the Unity logo requires a Plus/Pro license.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.SplashScreen.unityLogoStyle">
      <summary>
        <para>The style to use for the Unity logo during the Splash Screen.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.SplashScreen.AnimationMode">
      <summary>
        <para>The type of animation applied during the Splash Screen.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.SplashScreen.AnimationMode.Custom">
      <summary>
        <para>Animates the Splash Screen using custom values from PlayerSettings.SplashScreen.animationBackgroundZoom and PlayerSettings.SplashScreen.animationLogoZoom.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.SplashScreen.AnimationMode.Dolly">
      <summary>
        <para>Animates the Splash Screen with a simulated dolly effect.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.SplashScreen.AnimationMode.Static">
      <summary>
        <para>No animation is applied to the Splash Screen logo or background.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.SplashScreen.DrawMode">
      <summary>
        <para>Determines how the Unity logo should be drawn, if it is enabled.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.SplashScreen.DrawMode.AllSequential">
      <summary>
        <para>The Unity logo is shown sequentially providing it exists in the PlayerSettings.SplashScreen.logos collection.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.SplashScreen.DrawMode.UnityLogoBelow">
      <summary>
        <para>The Unity logo is drawn in the lower portion of the screen for the duration of the Splash Screen, while the PlayerSettings.SplashScreen.logos are shown in the centre.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.SplashScreen.UnityLogoStyle">
      <summary>
        <para>The style to use for the Unity logo during the Splash Screen.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.SplashScreen.UnityLogoStyle.DarkOnLight">
      <summary>
        <para>A dark Unity logo with a light background.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.SplashScreen.UnityLogoStyle.LightOnDark">
      <summary>
        <para>A white Unity logo with a dark background.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.SplashScreenLogo">
      <summary>
        <para>A single logo that is shown during the Splash Screen. Controls the Sprite that is displayed and its duration.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.SplashScreenLogo.duration">
      <summary>
        <para>The total time in seconds for which the logo is shown. The minimum duration is 2 seconds.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.SplashScreenLogo.logo">
      <summary>
        <para>The Sprite that is shown during this logo. If this is null, then no logo will be displayed for the duration.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.SplashScreenLogo.unityLogo">
      <summary>
        <para>The Unity logo Sprite.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SplashScreenLogo.Create(System.Single,UnityEngine.Sprite)">
      <summary>
        <para>Creates a new Splash Screen logo with the provided duration and logo Sprite.</para>
      </summary>
      <param name="duration">The total time in seconds that the logo will be shown. Note minimum time is 2 seconds.</param>
      <param name="logo">The logo Sprite to display.</param>
      <returns>
        <para>The new logo.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.SplashScreenLogo.CreateWithUnityLogo(System.Single)">
      <summary>
        <para>Creates a new Splash Screen logo with the provided duration and the unity logo.</para>
      </summary>
      <param name="duration">The total time in seconds that the logo will be shown. Note minimum time is 2 seconds.</param>
      <returns>
        <para>The new logo.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.PlayerSettings.Switch">
      <summary>
        <para>Nintendo Switch Player settings.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.Switch.ApplicationAttribute">
      <summary>
        <para>Player Settings for the Nintendo Switch platform.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.Switch.Languages">
      <summary>
        <para>Player Settings for the Nintendo Switch platform.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.Switch.LogoHandling">
      <summary>
        <para>Player Settings for the Nintendo Switch platform.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.Switch.LogoType">
      <summary>
        <para>Player Settings for the Nintendo Switch platform.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.Switch.RatingCategories">
      <summary>
        <para>Player Settings for the Nintendo Switch platform.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.Switch.StartupUserAccount">
      <summary>
        <para>Player Settings for the Nintendo Switch platform.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.Switch.TouchScreenUsage">
      <summary>
        <para>Player Settings for the Nintendo Switch platform.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.tvOS">
      <summary>
        <para>tvOS specific player settings.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.tvOS.buildNumber">
      <summary>
        <para>The build number of the bundle</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.tvOS.requireExtendedGameController">
      <summary>
        <para>Application requires extended game controller.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.tvOS.sdkVersion">
      <summary>
        <para>Active tvOS SDK version used for build.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.tvOS.targetOSVersion">
      <summary>
        <para>Deployment minimal version of tvOS.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.tvOS.targetOSVersionString">
      <summary>
        <para>Deployment minimal version of tvOS.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.VRWindowsMixedReality">
      <summary>
        <para>Windows Mixed Reality specific Player Settings.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.VRWindowsMixedReality.depthBufferFormat">
      <summary>
        <para>Set the requested depth buffer format to either 16Bit or 24Bit.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.VRWindowsMixedReality.depthBufferSharingEnabled">
      <summary>
        <para>Toggle support for sharing the depth buffer between Unity and the OS. This allows for stability improvements when running in Windows Mixed Reality. For immersive headsets this allows the operating system to reproject the rendered scene when there is a loss of accuracy in tracking. For Holographic headsets this allows for the operating system to automatically set a focus point along the plane that intersects the most content in your scene.

        See Also:</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.VRWindowsMixedReality.DepthBufferFormat">
      <summary>
        <para>Enumeration providing valid values for PlayerSettings.VRWindowsMixedReality.depthBufferFormat.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.VRWindowsMixedReality.DepthBufferFormat.DepthBufferFormat16Bit">
      <summary>
        <para>Set the Windows Mixed Reality depth buffer to 16 bits of depth. This will decrease the amount of memory (and possibly increase performance) at the expense of depth testing and precision.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.VRWindowsMixedReality.DepthBufferFormat.DepthBufferFormat24Bit">
      <summary>
        <para>Set the Windows Mixed Reality depth buffer to 24 bits of depth. This will improve depth testing and precision at the expense of more memory.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.WebGL">
      <summary>
        <para>WebGL specific player settings.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WebGL.compressionFormat">
      <summary>
        <para>CompressionFormat defines the compression type that the WebGL resources are encoded to.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WebGL.dataCaching">
      <summary>
        <para>Enables automatic caching of unityweb files.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WebGL.debugSymbolMode">
      <summary>
        <para>Enables generation of debug symbols file in the build output directory. Supported options: embedded debug symbols and debug symbols in external file.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WebGL.debugSymbols">
      <summary>
        <para>Enables generation of debug symbols file in the build output directory. This property has been deprecated and replaced by debugSymbolMode property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WebGL.decompressionFallback">
      <summary>
        <para>Include decompression fallback code for build files in the loader.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WebGL.exceptionSupport">
      <summary>
        <para>Exception support for WebGL builds.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WebGL.linkerTarget">
      <summary>
        <para>Allows you to specify the WebGLLinkerTarget|web build format that is used when you build your project.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WebGL.memorySize">
      <summary>
        <para>Memory size for WebGL builds in Megabyte.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WebGL.nameFilesAsHashes">
      <summary>
        <para>Enables using MD5 hash of the uncompressed file contents as a filename for each file in the build.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WebGL.template">
      <summary>
        <para>Path to the WebGL template asset.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WebGL.threadsSupport">
      <summary>
        <para>Multithreading support in WebGL.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WebGL.wasmArithmeticExceptions">
      <summary>
        <para>The trapping mode for WebAssembly code.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.WSA">
      <summary>
        <para>Provides access to Microsoft Store App-specific player settings.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.applicationDescription">
      <summary>
        <para>The description text that the Microsoft Store displays with your application.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.certificateIssuer">
      <summary>
        <para>The certificate issuer for the current Universal Windows Platform certificate.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.certificateNotAfter">
      <summary>
        <para>The expiration date for the current Universal Windows Platform certificate.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.certificatePath">
      <summary>
        <para>The file path for the current Universal Windows Platform certificate.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.certificateSubject">
      <summary>
        <para>The subject for the current Universal Windows Platform certificate.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.defaultTileSize">
      <summary>
        <para>The PlayerSettings.WSADefaultTileSize|tile size type to use as the default size for the application's tile.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.enableIndependentInputSource">
      <summary>
        <para>Enables and disables the independent input source feature.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.enableLowLatencyPresentationAPI">
      <summary>
        <para>Enables and disables the low latency presentation API.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.inputSource">
      <summary>
        <para>The PlayerSettings.WSAInputSource|input source type for mouse, pen, and touch input events in a XAML app.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.largeTileShowName">
      <summary>
        <para>The application name to display on the PlayerSettings.WSAImageType.UWPSquare310x310Logo|Large Tile.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.lastRequiredScene">
      <summary>
        <para>The scene index number from the list for the last scene that must be present in a Streaming Install build.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.mediumTileShowName">
      <summary>
        <para>The application name to display on the PlayerSettings.WSAImageType.UWPSquare150x150Logo|Medium Tile.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.packageName">
      <summary>
        <para>The name of the Universal Windows Platform application package to install on the device.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.packageVersion">
      <summary>
        <para>The version of the Universal Windows Platform application package to install on the device.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.splashScreenBackgroundColor">
      <summary>
        <para>The Override background color for the Unity splash screen.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.supportStreamingInstall">
      <summary>
        <para>Indicates whether you can launch the Universal Windows Platform application package before installation is complete.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.tileBackgroundColor">
      <summary>
        <para>The background color to use the application's tiles.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.tileForegroundText">
      <summary>
        <para>The PlayerSettings.WSAApplicationForegroundText|color style to use for the title text within the application's tile.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.tileShortName">
      <summary>
        <para>An alternative, shorter title name to display in the application's tile.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.tileShowName">
      <summary>
        <para>Indicates which PlayerSettings.WSAApplicationShowName|tiles display the application's display name.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.transparentSwapchain">
      <summary>
        <para>Sets AlphaMode on the swap chain to DXGI_ALPHA_MODE_PREMULTIPLIED.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.vcxProjDefaultLanguage">
      <summary>
        <para>Sets the XML &lt;defaultLanguage&gt; value specified in the generated Visual Studio project file (.vcxproj). Applies only to the initial file generation, preexisting files will not be modified. When empty 'en-US' will be used.

Only applies to the UWP platform.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.wideTileShowName">
      <summary>
        <para>Indicates whether to display the application name on the PlayerSettings.WSAImageType.UWPWide310x150Logo|wide tile.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.WSA.Declarations">
      <summary>
        <para>Represents additional Universal Windows Platform application settings written to the package manifest.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.Declarations.fileTypeAssociations">
      <summary>
        <para>The PlayerSettings.WSAFileTypeAssociations|file types to register the application as a default handler for.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PlayerSettings.WSA.Declarations.protocolName">
      <summary>
        <para>A URI scheme to register the application as a default handler for.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PlayerSettings.WSA.GetCapability(UnityEditor.PlayerSettings/WSACapability)">
      <summary>
        <para>Checks if the your project sets the specified PlayerSettings.WSACapability|UWP Capability.</para>
      </summary>
      <param name="capability">PlayerSettings.WSACapability|UWP Capability type to check.</param>
      <returns>
        <para>Returns true if your project sets the specified capability. Otherwise, returns false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.WSA.GetTargetDeviceFamily(UnityEditor.PlayerSettings/WSATargetFamily)">
      <summary>
        <para>Checks if your project targets the specified PlayerSettings.WSATargetFamily|device family.</para>
      </summary>
      <param name="family">PlayerSettings.WSATargetFamily|Device Family type to check.</param>
      <returns>
        <para>Returns true if the project targets the device family. Otherwise, returns false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.WSA.GetVisualAssetsImage(UnityEditor.PlayerSettings/WSAImageType,UnityEditor.PlayerSettings/WSAImageScale)">
      <summary>
        <para>Retrieves the Asset path for the image you set as the Universal Windows Platform package logo.</para>
      </summary>
      <param name="type">PlayerSettings.WSAImageType|UWP Logo type to retrieve the Asset name for.</param>
      <param name="scale">PlayerSettings.WSAImageScale|UWP Scale type to retrieve the Asset name for.</param>
      <returns>
        <para>Returns the asset path for the image currently set as the specified Logo/ If you have not set an image, returns an empty string.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.WSA.SetCapability(UnityEditor.PlayerSettings/WSACapability,System.Boolean)">
      <summary>
        <para>Includes or removes the specified PlayerSettings.WSACapability|UWP Capability in the Universal Windows Platform build.</para>
      </summary>
      <param name="capability">PlayerSettings.WSACapability|UWP Capability type to change.</param>
      <param name="value">True to include the Capability in the UWP build or false to remove it.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.WSA.SetCertificate(System.String,System.String)">
      <summary>
        <para>Sets the certificate to use to sign the Universal Windows Platform application package.</para>
      </summary>
      <param name="path">The relative Asset path to the Certificate file (.pfx).</param>
      <param name="password">The certificate password. If the certificate does not require a password, use an empty string.</param>
      <returns>
        <para>Returns true if Unity successfully updates the certificate. Otherwise, returns false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PlayerSettings.WSA.SetTargetDeviceFamily(UnityEditor.PlayerSettings/WSATargetFamily,System.Boolean)">
      <summary>
        <para>Adds or removes the specified PlayerSettings.WSATargetFamily|UWP device family from the list of device families the Universal Windows Platform application build supports.</para>
      </summary>
      <param name="family">PlayerSettings.WSATargetFamily|Device Family type to change.</param>
      <param name="value">True to target the Device Family in the UWP build or false to remove it.</param>
    </member>
    <member name="M:UnityEditor.PlayerSettings.WSA.SetVisualAssetsImage(System.String,UnityEditor.PlayerSettings/WSAImageType,UnityEditor.PlayerSettings/WSAImageScale)">
      <summary>
        <para>Sets the image to use as the Universal Windows Platform package logo.</para>
      </summary>
      <param name="image">Asset path for the image to use as the specified Logo.</param>
      <param name="type">PlayerSettings.WSAImageType|UWP Logo type to assign an image for.</param>
      <param name="scale">PlayerSettings.WSAImageScale|UWP Scale type to assign an image for.</param>
    </member>
    <member name="T:UnityEditor.PlayerSettings.WSAApplicationForegroundText">
      <summary>
        <para>Values for the color style of the title text that appears within the Universal Windows Platform application tiles.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAApplicationForegroundText.Dark">
      <summary>
        <para>Uses dark text within the Universal Windows Platform application tiles.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAApplicationForegroundText.Light">
      <summary>
        <para>Uses light text within the Universal Windows Platform application tiles.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.WSAApplicationShowName">
      <summary>
        <para>Options for which PlayerSettings.WSAImageType|tile types to display the application name on.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAApplicationShowName.AllLogos">
      <summary>
        <para>Displays the application name on all tile sizes.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAApplicationShowName.NoLogos">
      <summary>
        <para>Doesn't display the application name on any tile size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAApplicationShowName.NotSet">
      <summary>
        <para>Indicates that you have not set the application name and to use the default Universal Windows Platform behavior.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAApplicationShowName.StandardLogoOnly">
      <summary>
        <para>Displays the application name for PlayerSettings.WSAImageType.UWPSquare150x150Logo|medium and PlayerSettings.WSAImageType.UWPSquare310x310Logo|large tiles.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAApplicationShowName.WideLogoOnly">
      <summary>
        <para>Displays the application name for the PlayerSettings.WSAImageType.UWPWide310x150Logo|wide tiles.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.WSACapability">
      <summary>
        <para>Options for Universal Windows Platform application capabilities.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.AllJoyn">
      <summary>
        <para>Allows your application AllJoyn-enabled applications and devices on a network to discover and interact with each other.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.Appointments">
      <summary>
        <para>Allows your application to access the end user's appointment store.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.BackgroundMediaPlayback">
      <summary>
        <para>Allows your application to continue media playback while the application is in the background.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.BlockedChatMessages">
      <summary>
        <para>Allows your application to access SMS and MMS messages that the Spam Filter blocks.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.Bluetooth">
      <summary>
        <para>Allows your application to communicate with Bluetooth devices paired with the device.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.Chat">
      <summary>
        <para>Allows your application to read and delete text messages, and store messages in the system data store.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.CodeGeneration">
      <summary>
        <para>Allows your application to access specific APIs that provide just-in-time compilation.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.Contacts">
      <summary>
        <para>Allows your application limited access  to an aggregated view of contacts from various contacts</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.EnterpriseAuthentication">
      <summary>
        <para>Allows your application to use Windows domain credentials to log into remote resources.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.GazeInput">
      <summary>
        <para>Allows your application to detect where the user is looking when their device is connected to a compatible eye-tracking device.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.HumanInterfaceDevice">
      <summary>
        <para>Allows your application to interact with connected Human Interface Devices (HIDs).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.InputInjectionBrokered">
      <summary>
        <para>Allows your application to inject various forms of input such as HID, touch, pen, keyboard, or mouse into the system programmatically.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.InternetClient">
      <summary>
        <para>Allows your application to receive incoming data from the internet.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.InternetClientServer">
      <summary>
        <para>Allows your application to both send and receive internet data.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.Location">
      <summary>
        <para>Allows your application to access the device's location functionality if one is available.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.LowLevelDevices">
      <summary>
        <para>Allows your application to access custom devices that meet Microsoft-set requirements.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.Microphone">
      <summary>
        <para>Allows your application to access the audio feed of microphones connected to the device.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.MusicLibrary">
      <summary>
        <para>Allows your application to access files within the user's music library.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.Objects3D">
      <summary>
        <para>Allows your application to access files within the Windows 3D Object folder.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.OfflineMapsManagement">
      <summary>
        <para>Allows your application to access offline maps.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.PhoneCall">
      <summary>
        <para>Allows your application to access all of the phone lines on the device and perform various functions.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.PhoneCallHistoryPublic">
      <summary>
        <para>Allows your application to read cellular and some voice over internet protocol (VoIP) call history information on the device.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.PicturesLibrary">
      <summary>
        <para>Allows your application to access files within the user's pictures library.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.PointOfService">
      <summary>
        <para>Allows your application to access APIs in the Windows.Devices.PointOfService namespace.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.PrivateNetworkClientServer">
      <summary>
        <para>Allows your application to send and receive data on the local area network.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.Proximity">
      <summary>
        <para>Allows your application to initiate connections between multiple devices in close proximity to communicate with one another.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.RecordedCallsFolder">
      <summary>
        <para>Allows your application to access the recorded calls folder.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.RemoteSystem">
      <summary>
        <para>Allows your application to access a list of devices associated with the user's Microsoft account.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.RemovableStorage">
      <summary>
        <para>Allows your application to access files on removable storage, such as a USB drive or external hard drive.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.SharedUserCertificates">
      <summary>
        <para>Allows your application to add and access software and hardware-based certificates in the shared user data store.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.SpatialPerception">
      <summary>
        <para>Allows your application to access spatial mapping data through a mixed reality device.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.SystemManagement">
      <summary>
        <para>Allows your application to use basic system administration privileges. This includes shutting down or rebooting the device and accessing the locale and time zone.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.UserAccountInformation">
      <summary>
        <para>Allows your application to access the end user's name and picture.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.UserDataTasks">
      <summary>
        <para>Allows your application to access the current state of the task settings.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.UserNotificationListener">
      <summary>
        <para>Allows your application to access the current state of the notification settings.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.VideosLibrary">
      <summary>
        <para>Allows your application to access files with the user's video library.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.VoipCall">
      <summary>
        <para>Allows your application to access voice over internet protocol (VoIP) calling APIs in the Windows.ApplicationModel.Calls namespace.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSACapability.WebCam">
      <summary>
        <para>Allows your application to access the video feed of built-in and external webcams.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.WSADefaultTileSize">
      <summary>
        <para>Options for the application's default tile size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSADefaultTileSize.Medium">
      <summary>
        <para>Uses the medium-sized tile as the default application tile size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSADefaultTileSize.NotSet">
      <summary>
        <para>Doesn't use a default application tile size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSADefaultTileSize.Wide">
      <summary>
        <para>Uses the wide-sized tile as the default application tile size.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.WSAFileTypeAssociations">
      <summary>
        <para>Represents the file types to register the application as a default handler for.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAFileTypeAssociations.name">
      <summary>
        <para>The name of the file type association. This is to organize and group file types.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAFileTypeAssociations.supportedFileTypes">
      <summary>
        <para>The set of PlayerSettings.WSASupportedFileType|file and content types your application supports.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.WSAImageScale">
      <summary>
        <para>Options for the set of sizing values to apply to the Universal Windows Platform logo and icon images. These options specify variations for different screen sizes and resolutions.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAImageScale.100">
      <summary>
        <para>Uses a scale factor of 100%.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAImageScale.125">
      <summary>
        <para>Uses a scale factor of 125%.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAImageScale.150">
      <summary>
        <para>Uses a scale factor of 150%.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAImageScale.200">
      <summary>
        <para>Uses a scale factor of 200%.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAImageScale.400">
      <summary>
        <para>Uses a scale factor of 400%.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAImageScale.Target16">
      <summary>
        <para>Targets a size of 16x16 pixels.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAImageScale.Target24">
      <summary>
        <para>Targets a size of 24x24 pixels.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAImageScale.Target256">
      <summary>
        <para>Targets a size of 256x256 pixels.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAImageScale.Target32">
      <summary>
        <para>Targets a size of 32x32 pixels.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAImageScale.Target48">
      <summary>
        <para>Targets a size of 48x48 pixels.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.WSAImageType">
      <summary>
        <para>Options for the icon and logo image types that represent the application. For example, images to display within the Microsoft Store, start menu, or taskbar.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAImageType.PackageLogo">
      <summary>
        <para>The image that represents your application within the Microsoft Store.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAImageType.SplashScreenImage">
      <summary>
        <para>The image to display as the splash screen while the Universal Windows Platform application opens.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAImageType.UWPSquare150x150Logo">
      <summary>
        <para>The image to display as the medium tile in the start menu and Microsoft Store.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAImageType.UWPSquare310x310Logo">
      <summary>
        <para>The image to display as the large tile in the start menu and Microsoft Store.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAImageType.UWPSquare44x44Logo">
      <summary>
        <para>The image to display as the application icon within the start menu, taskbar, and task manager.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAImageType.UWPSquare71x71Logo">
      <summary>
        <para>The image to display as the small tile in the start menu.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAImageType.UWPWide310x150Logo">
      <summary>
        <para>The image to display as the wide tile in the start menu and Microsoft Store.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.WSAInputSource">
      <summary>
        <para>Options for the input source from which a XAML application can receive pointer input events.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAInputSource.CoreWindow">
      <summary>
        <para>Indicates that pointer input comes from CoreWindow. This is the default option.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAInputSource.IndependentInputSource">
      <summary>
        <para>Indicates that pointer input comes from SwapChainPanel's core input object.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSAInputSource.SwapChainPanel">
      <summary>
        <para>Indicates that pointer input comes from the SwapChainPanel.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.WSASupportedFileType">
      <summary>
        <para>Represents a single file and content type to register the application as a default handler for.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSASupportedFileType.contentType">
      <summary>
        <para>The MIME content type the file type uses.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSASupportedFileType.fileType">
      <summary>
        <para>The file extension that identifies the file type.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.WSATargetFamily">
      <summary>
        <para>Options for the set of Universal Windows Platform device families your application can directly support.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSATargetFamily.Desktop">
      <summary>
        <para>Targets a device family that includes Desktop PCs, laptops, and tablet devices.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSATargetFamily.Holographic">
      <summary>
        <para>Targets a device family that includes HoloLens devices.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSATargetFamily.IoT">
      <summary>
        <para>Targets a device family that includes Internet-of-Things (IoT) devices.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSATargetFamily.IoTHeadless">
      <summary>
        <para>Targets a device family that includes Internet-of-Things (IoT) devices without any UI.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSATargetFamily.Mobile">
      <summary>
        <para>Targets a device family that includes smartphone devices.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSATargetFamily.Team">
      <summary>
        <para>Targets a device family that includes the Surface Hub.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayerSettings.WSATargetFamily.Xbox">
      <summary>
        <para>Targets a device family that includes Xbox consoles.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayerSettings.XboxOne">
      <summary>
        <para>Xbox One Specific Player Settings.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PlayModeStateChange">
      <summary>
        <para>Enumeration specifying a change in the Editor's play mode state.

See Also: PauseState, EditorApplication.playModeStateChanged, EditorApplication.isPlaying.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayModeStateChange.EnteredEditMode">
      <summary>
        <para>Occurs during the next update of the Editor application if it is in edit mode and was previously in play mode.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayModeStateChange.EnteredPlayMode">
      <summary>
        <para>Occurs during the next update of the Editor application if it is in play mode and was previously in edit mode.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayModeStateChange.ExitingEditMode">
      <summary>
        <para>Occurs when exiting edit mode, before the Editor is in play mode.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PlayModeStateChange.ExitingPlayMode">
      <summary>
        <para>Occurs when exiting play mode, before the Editor is in edit mode.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PluginImporter">
      <summary>
        <para>Represents a plugin importer.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PluginImporter.isNativePlugin">
      <summary>
        <para>Is plugin native or managed? Note: C++ libraries with CLR support are treated as native plugins, because Unity cannot load such libraries. You can still access them via P/Invoke.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PluginImporter.isPreloaded">
      <summary>
        <para>Is a native plugin loaded during startup or on demand?</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PluginImporter.ClearSettings">
      <summary>
        <para>Clear all plugin settings and set the compatability with Any Platform to true.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PluginImporter.#ctor">
      <summary>
        <para>Constructor.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PluginImporter.DefineConstraints">
      <summary>
        <para>Allows you to specify a list of #define directives which controls whether your plug-in should be included.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PluginImporter.GetAllImporters">
      <summary>
        <para>Returns all plugin importers for all platforms.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PluginImporter.GetCompatibleWithAnyPlatform">
      <summary>
        <para>Checks whether a plugin is flagged as being compatible with Any Platform.</para>
      </summary>
      <returns>
        <para>True if the plugin is flagged as being compatible with Any Platform, otherwise returns false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PluginImporter.GetCompatibleWithEditor">
      <summary>
        <para>Is plugin compatible with editor.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PluginImporter.GetCompatibleWithPlatform(UnityEditor.BuildTarget)">
      <summary>
        <para>Is plugin compatible with specified platform.</para>
      </summary>
      <param name="platform">Target platform.</param>
      <param name="platformName">
      </param>
    </member>
    <member name="M:UnityEditor.PluginImporter.GetCompatibleWithPlatform(System.String)">
      <summary>
        <para>Is plugin compatible with specified platform.</para>
      </summary>
      <param name="platform">Target platform.</param>
      <param name="platformName">
      </param>
    </member>
    <member name="M:UnityEditor.PluginImporter.GetEditorData(System.String)">
      <summary>
        <para>Returns editor specific data for specified key.</para>
      </summary>
      <param name="key">Key value for data.</param>
    </member>
    <member name="M:UnityEditor.PluginImporter.GetExcludeEditorFromAnyPlatform">
      <summary>
        <para>Is Editor excluded when Any Platform is set to true.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PluginImporter.GetExcludeFromAnyPlatform(System.String)">
      <summary>
        <para>Is platform excluded when Any Platform set to true.</para>
      </summary>
      <param name="platform">Target platform.</param>
      <param name="platformName">
      </param>
    </member>
    <member name="M:UnityEditor.PluginImporter.GetExcludeFromAnyPlatform(UnityEditor.BuildTarget)">
      <summary>
        <para>Is platform excluded when Any Platform set to true.</para>
      </summary>
      <param name="platform">Target platform.</param>
      <param name="platformName">
      </param>
    </member>
    <member name="M:UnityEditor.PluginImporter.GetIcon(System.String)">
      <summary>
        <para>Gets the custom icon to associate with a MonoScript at import time.</para>
      </summary>
      <param name="className">The fully qualified class name of a MonoScript imported by this plugin.</param>
      <returns>
        <para>Returns the custom icon that will be associated with the imported MonoScript. If no custom icon will be associated with the imported MonoScript, returns null.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PluginImporter.GetImporters(UnityEditor.BuildTarget)">
      <summary>
        <para>Returns all plugin importers for specfied platform.</para>
      </summary>
      <param name="platform">Target platform.</param>
      <param name="platformName">Name of the target platform.</param>
    </member>
    <member name="M:UnityEditor.PluginImporter.GetImporters(System.String)">
      <summary>
        <para>Returns all plugin importers for specfied platform.</para>
      </summary>
      <param name="platform">Target platform.</param>
      <param name="platformName">Name of the target platform.</param>
    </member>
    <member name="M:UnityEditor.PluginImporter.GetIsOverridable">
      <summary>
        <para>Identifies whether or not this plugin will be overridden if a plugin of the same name is placed in your project folder.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PluginImporter.GetPlatformData(UnityEditor.BuildTarget,System.String)">
      <summary>
        <para>Get platform specific data.</para>
      </summary>
      <param name="platform">Target platform.</param>
      <param name="key">Key value for data.</param>
      <param name="platformName">
      </param>
    </member>
    <member name="M:UnityEditor.PluginImporter.GetPlatformData(System.String,System.String)">
      <summary>
        <para>Get platform specific data.</para>
      </summary>
      <param name="platform">Target platform.</param>
      <param name="key">Key value for data.</param>
      <param name="platformName">
      </param>
    </member>
    <member name="T:UnityEditor.PluginImporter.IncludeInBuildDelegate">
      <summary>
        <para>Delegate to be used with SetIncludeInBuildDelegate.</para>
      </summary>
      <param name="path">
      </param>
    </member>
    <member name="M:UnityEditor.PluginImporter.SetCompatibleWithAnyPlatform(System.Boolean)">
      <summary>
        <para>Sets compatibility with Any Platform.</para>
      </summary>
      <param name="enable">Determines whether the plugin is compatible with Any Platform.</param>
    </member>
    <member name="M:UnityEditor.PluginImporter.SetCompatibleWithEditor(System.Boolean)">
      <summary>
        <para>Sets compatibility with any editor.</para>
      </summary>
      <param name="enable">Is plugin compatible with editor.</param>
    </member>
    <member name="M:UnityEditor.PluginImporter.SetCompatibleWithPlatform(UnityEditor.BuildTarget,System.Boolean)">
      <summary>
        <para>Sets compatibility with the specified platform.</para>
      </summary>
      <param name="platform">Target platform.</param>
      <param name="enable">Is plugin compatible with specified platform.</param>
      <param name="platformName">Target platform.</param>
    </member>
    <member name="M:UnityEditor.PluginImporter.SetCompatibleWithPlatform(System.String,System.Boolean)">
      <summary>
        <para>Sets compatibility with the specified platform.</para>
      </summary>
      <param name="platform">Target platform.</param>
      <param name="enable">Is plugin compatible with specified platform.</param>
      <param name="platformName">Target platform.</param>
    </member>
    <member name="M:UnityEditor.PluginImporter.SetEditorData(System.String,System.String)">
      <summary>
        <para>Sets editor specific data.</para>
      </summary>
      <param name="key">Key value for data.</param>
      <param name="value">Data.</param>
    </member>
    <member name="M:UnityEditor.PluginImporter.SetExcludeEditorFromAnyPlatform(System.Boolean)">
      <summary>
        <para>Exclude Editor from compatible platforms when Any Platform is set to true.</para>
      </summary>
      <param name="excludedFromAny">
      </param>
    </member>
    <member name="M:UnityEditor.PluginImporter.SetExcludeFromAnyPlatform(System.String,System.Boolean)">
      <summary>
        <para>Exclude platform from compatible platforms when Any Platform is set to true.</para>
      </summary>
      <param name="platformName">Target platform.</param>
      <param name="excludedFromAny">
      </param>
      <param name="platform">
      </param>
    </member>
    <member name="M:UnityEditor.PluginImporter.SetExcludeFromAnyPlatform(UnityEditor.BuildTarget,System.Boolean)">
      <summary>
        <para>Exclude platform from compatible platforms when Any Platform is set to true.</para>
      </summary>
      <param name="platformName">Target platform.</param>
      <param name="excludedFromAny">
      </param>
      <param name="platform">
      </param>
    </member>
    <member name="M:UnityEditor.PluginImporter.SetIcon(System.String,UnityEngine.Texture2D)">
      <summary>
        <para>Sets the custom icon to associate with a MonoScript imported by a managed plugin.</para>
      </summary>
      <param name="className">The fully qualified class name of a MonoScript imported by this managed plugin.</param>
      <param name="icon">The custom icon to associate with the imported MonoScript. When the value is null, Unity restores the default icon.</param>
    </member>
    <member name="M:UnityEditor.PluginImporter.SetIncludeInBuildDelegate(UnityEditor.PluginImporter/IncludeInBuildDelegate)">
      <summary>
        <para>Setting the delegate function to be called by ShouldIncludeInBuild.</para>
      </summary>
      <param name="includeInBuildDelegate">
      </param>
    </member>
    <member name="M:UnityEditor.PluginImporter.SetPlatformData(UnityEditor.BuildTarget,System.String,System.String)">
      <summary>
        <para>Sets platform specific data.</para>
      </summary>
      <param name="platform">Target platform.</param>
      <param name="key">Key value for data.</param>
      <param name="value">Data.</param>
      <param name="platformName">
      </param>
    </member>
    <member name="M:UnityEditor.PluginImporter.SetPlatformData(System.String,System.String,System.String)">
      <summary>
        <para>Sets platform specific data.</para>
      </summary>
      <param name="platform">Target platform.</param>
      <param name="key">Key value for data.</param>
      <param name="value">Data.</param>
      <param name="platformName">
      </param>
    </member>
    <member name="M:UnityEditor.PluginImporter.ShouldIncludeInBuild">
      <summary>
        <para>Identifies whether or not this plugin should be included in the current build target.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PopupWindow">
      <summary>
        <para>Class used to display popup windows that inherit from PopupWindowContent.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PopupWindow.OnDisable">
      <summary>
        <para>See ScriptableObject.OnEnable.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PopupWindow.OnEnable">
      <summary>
        <para>See ScriptableObject.OnDisable.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PopupWindow.Show(UnityEngine.Rect,UnityEditor.PopupWindowContent)">
      <summary>
        <para>Show a popup with the given PopupWindowContent.</para>
      </summary>
      <param name="activatorRect">The rect of the button that opens the popup.</param>
      <param name="windowContent">The content to show in the popup window.</param>
    </member>
    <member name="T:UnityEditor.PopupWindowContent">
      <summary>
        <para>Class used to implement content for a popup window.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PopupWindowContent.editorWindow">
      <summary>
        <para>The EditorWindow that contains the popup content.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PopupWindowContent.GetWindowSize">
      <summary>
        <para>The size of the popup window.</para>
      </summary>
      <returns>
        <para>The size of the Popup window.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PopupWindowContent.OnClose">
      <summary>
        <para>Callback when the popup window is closed.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PopupWindowContent.OnGUI(UnityEngine.Rect)">
      <summary>
        <para>Callback for drawing GUI controls for the popup window.</para>
      </summary>
      <param name="rect">The rectangle to draw the GUI inside.</param>
    </member>
    <member name="M:UnityEditor.PopupWindowContent.OnOpen">
      <summary>
        <para>Callback when the popup window is opened.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PrefabAssetType">
      <summary>
        <para>Enum indicating the type of Prefab Asset, such as Regular, Model and Variant.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabAssetType.MissingAsset">
      <summary>
        <para>The object being queried is part of a Prefab instance, but because the asset is missing the actual type of Prefab can’t be determined.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabAssetType.Model">
      <summary>
        <para>The object being queried is part of a Model Prefab.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabAssetType.NotAPrefab">
      <summary>
        <para>The object being queried is not part of a Prefab at all.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabAssetType.Regular">
      <summary>
        <para>The object being queried is part of a regular Prefab.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabAssetType.Variant">
      <summary>
        <para>The object being queried is part of a Prefab Variant.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PrefabInstanceStatus">
      <summary>
        <para>Enum with status about whether a Prefab instance is properly connected to its asset.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabInstanceStatus.Connected">
      <summary>
        <para>The Prefab instance is connected to its Prefab Asset.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabInstanceStatus.Disconnected">
      <summary>
        <para>The Prefab instance is not connected to its Prefab Asset.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabInstanceStatus.MissingAsset">
      <summary>
        <para>The Prefab instance is missing its Prefab Asset.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabInstanceStatus.NotAPrefab">
      <summary>
        <para>The object is not part of a Prefab instance.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PrefabType">
      <summary>
        <para>The type of a Prefab object as returned by PrefabUtility.GetPrefabType.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabType.DisconnectedModelPrefabInstance">
      <summary>
        <para>The object is an instance of an imported 3D model, but the connection is broken.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabType.DisconnectedPrefabInstance">
      <summary>
        <para>The object is an instance of a user created Prefab, but the connection is broken.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabType.MissingPrefabInstance">
      <summary>
        <para>The object was an instance of a Prefab, but the original Prefab could not be found.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabType.ModelPrefab">
      <summary>
        <para>The object is an imported 3D model asset.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabType.ModelPrefabInstance">
      <summary>
        <para>The object is an instance of an imported 3D model.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabType.None">
      <summary>
        <para>The object is not a Prefab nor an instance of a Prefab.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabType.Prefab">
      <summary>
        <para>The object is a user created Prefab asset.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabType.PrefabInstance">
      <summary>
        <para>The object is an instance of a user created Prefab.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PrefabUnpackMode">
      <summary>
        <para>Enum used to determine how a Prefab should be unpacked.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabUnpackMode.Completely">
      <summary>
        <para>Use this to strip away all Prefab information from a Prefab instance.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabUnpackMode.OutermostRoot">
      <summary>
        <para>Use this mode to only unpack the outermost layer of a Prefab.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PrefabUtility">
      <summary>
        <para>Utility class for any Prefab related operations.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabUtility.prefabInstanceUpdated">
      <summary>
        <para>Unity calls this method automatically when Prefab instances in the Scene have been updated.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PrefabUtility.ApplyAddedComponent(UnityEngine.Component,System.String,UnityEditor.InteractionMode)">
      <summary>
        <para>Applies the added component to the Prefab Asset at the given asset path.</para>
      </summary>
      <param name="action">The interaction mode for this action.</param>
      <param name="assetPath">The path of the Prefab Asset to apply to.</param>
      <param name="component">The added component on the Prefab instance to apply.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.ApplyAddedGameObject(UnityEngine.GameObject,System.String,UnityEditor.InteractionMode)">
      <summary>
        <para>Applies the added GameObject to the Prefab Asset at the given asset path.</para>
      </summary>
      <param name="gameObject">The added GameObject on the Prefab instance to apply.</param>
      <param name="assetPath">The path of the Prefab Asset to apply to.</param>
      <param name="action">The interaction mode for this action.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.ApplyAddedGameObjects(UnityEngine.GameObject[],System.String,UnityEditor.InteractionMode)">
      <summary>
        <para>Applies the added GameObjects to the Prefab Asset at the given asset path.</para>
      </summary>
      <param name="gameObjects">The added GameObjects on the Prefab instance to apply.</param>
      <param name="assetPath">The path of the Prefab Asset to apply to.</param>
      <param name="action">The interaction mode for this action.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.ApplyObjectOverride(UnityEngine.Object,System.String,UnityEditor.InteractionMode)">
      <summary>
        <para>Applies all overridden properties on a Prefab instance component or GameObject to the Prefab Asset at the given asset path.</para>
      </summary>
      <param name="instanceComponentOrGameObject">The object on the Prefab instance to apply.</param>
      <param name="assetPath">The path of the Prefab Asset to apply to.</param>
      <param name="action">The interaction mode for this action.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.ApplyPrefabInstance(UnityEngine.GameObject,UnityEditor.InteractionMode)">
      <summary>
        <para>Applies all overrides on a Prefab instance to its Prefab Asset.</para>
      </summary>
      <param name="instanceRoot">The root of the given Prefab instance.</param>
      <param name="action">The interaction mode for this action.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.ApplyPropertyOverride(UnityEditor.SerializedProperty,System.String,UnityEditor.InteractionMode)">
      <summary>
        <para>Applies a single overridden property on a Prefab instance to the Prefab Asset at the given asset path.</para>
      </summary>
      <param name="instanceProperty">The SerializedProperty representing the property to apply.</param>
      <param name="assetPath">The path of the Prefab Asset to apply to.</param>
      <param name="action">The interaction mode for this action.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.ApplyRemovedComponent(UnityEngine.GameObject,UnityEngine.Component,UnityEditor.InteractionMode)">
      <summary>
        <para>Removes the component from the Prefab Asset which has the component on it.</para>
      </summary>
      <param name="instanceGameObject">The GameObject on the Prefab instance which the component has been removed from.</param>
      <param name="assetComponent">The component on the Prefab Asset corresponding to the removed component on the instance.</param>
      <param name="action">The interaction mode for this action.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.ConnectGameObjectToPrefab(UnityEngine.GameObject,UnityEngine.GameObject)">
      <summary>
        <para>Connects the source Prefab to the game object.</para>
      </summary>
      <param name="go">The disconnected GameObject that you want to reconnect.</param>
      <param name="sourcePrefab">The source Prefab to connect to the GameObject.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.CreateEmptyPrefab(System.String)">
      <summary>
        <para>Creates an empty Prefab at given path.</para>
      </summary>
      <param name="path">The asset path to use for the new empty Prefab.</param>
      <returns>
        <para>A reference to the new Prefab Asset.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.CreatePrefab(System.String,UnityEngine.GameObject)">
      <summary>
        <para>Creates a Prefab from a game object hierarchy.</para>
      </summary>
      <param name="path">The path where the Prefab is saved.</param>
      <param name="go">The GameObject that you want to create a Prefab from.</param>
      <param name="options">
      </param>
      <returns>
        <para>A reference to the created Prefab.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.CreatePrefab(System.String,UnityEngine.GameObject,UnityEditor.ReplacePrefabOptions)">
      <summary>
        <para>Creates a Prefab from a game object hierarchy.</para>
      </summary>
      <param name="path">The path where the Prefab is saved.</param>
      <param name="go">The GameObject that you want to create a Prefab from.</param>
      <param name="options">
      </param>
      <returns>
        <para>A reference to the created Prefab.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.DisconnectPrefabInstance(UnityEngine.Object)">
      <summary>
        <para>Deprecated. As of 2018.3 this method does nothing.</para>
      </summary>
      <param name="targetObject">
      </param>
    </member>
    <member name="T:UnityEditor.PrefabUtility.EditPrefabContentsScope">
      <summary>
        <para>Disposable helper struct for automatically loading the contents of a Prefab file, saving the contents and unloading the contents again.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabUtility.EditPrefabContentsScope.assetPath">
      <summary>
        <para>File path of the Prefab asset.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PrefabUtility.EditPrefabContentsScope.prefabContentsRoot">
      <summary>
        <para>The root GameObject of the Prefab contents.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PrefabUtility.EditPrefabContentsScope.#ctor(System.String)">
      <summary>
        <para>
        </para>
      </summary>
      <param name="assetPath">File path of a Prefab Asset.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.FindAllInstancesOfPrefab(UnityEngine.GameObject)">
      <summary>
        <para>Retrieves the root GameObjects for all instances of the Prefab asset with root prefabRoot found in all currently loaded scenes. If prefabRoot is not a valid Prefab asset root GameObject, an ArgumentException is thrown.</para>
      </summary>
      <param name="prefabRoot">The root GameObject of a Prefab asset.</param>
      <param name="scene">The scene to search for Prefab instances. The scene you specify must be valid and loaded.</param>
      <returns>
        <para>The root GameObjects for all instances of the Prefab asset with root prefabRoot.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.FindAllInstancesOfPrefab(UnityEngine.GameObject,UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Retrieves the root GameObjects for all instances of the Prefab asset with root prefabRoot found in all currently loaded scenes. If prefabRoot is not a valid Prefab asset root GameObject, an ArgumentException is thrown.</para>
      </summary>
      <param name="prefabRoot">The root GameObject of a Prefab asset.</param>
      <param name="scene">The scene to search for Prefab instances. The scene you specify must be valid and loaded.</param>
      <returns>
        <para>The root GameObjects for all instances of the Prefab asset with root prefabRoot.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.FindPrefabRoot(UnityEngine.GameObject)">
      <summary>
        <para>Retrieves the root GameObject of the Prefab that the supplied GameObject is part of.</para>
      </summary>
      <param name="source">The object to check.</param>
      <returns>
        <para>The Prefab root.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.FindRootGameObjectWithSameParentPrefab(UnityEngine.GameObject)">
      <summary>
        <para>Retrieves the topmost GameObject that has the same Prefab parent as target.</para>
      </summary>
      <param name="target">The GameObject to use in the search.</param>
      <returns>
        <para>The GameObject at the root of the Prefab.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.FindValidUploadPrefabInstanceRoot(UnityEngine.GameObject)">
      <summary>
        <para>Returns the root GameObject of the Prefab instance if that root Prefab instance is a parent of the Prefab.</para>
      </summary>
      <param name="target">GameObject to process.</param>
      <returns>
        <para>Return the root game object of the Prefab Asset.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetAddedComponents(UnityEngine.GameObject)">
      <summary>
        <para>Retrieves a list of PrefabUtility.AddedComponent objects which contain information about added component overrides on the Prefab instance.</para>
      </summary>
      <param name="prefabInstance">The Prefab instance to get information about.</param>
      <returns>
        <para>List of objects with information about added components.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetAddedGameObjects(UnityEngine.GameObject)">
      <summary>
        <para>Retrieves a list of PrefabUtility.AddedGameObject objects which contain information about added GameObjects on the Prefab instance.</para>
      </summary>
      <param name="prefabInstance">The Prefab instance to get information about.</param>
      <returns>
        <para>List of objects with information about added GameObjects.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetCorrespondingObjectFromOriginalSource(TObject)">
      <summary>
        <para>Retrieves the object of origin for the given object.</para>
      </summary>
      <param name="componentOrGameObject">The object to find the corresponding original object from.</param>
      <returns>
        <para>The corresponding object from the original source or null.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetCorrespondingObjectFromSource(TObject)">
      <summary>
        <para>Retrieves the corresponding asset object of source, or null if it can't be found.</para>
      </summary>
      <param name="componentOrGameObject">The object to find the corresponding object from.</param>
      <returns>
        <para>The corresponding object or null.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetCorrespondingObjectFromSourceAtPath(TObject,System.String)">
      <summary>
        <para>Retrieves the corresponding object of the given object from a given Prefab Asset path.</para>
      </summary>
      <param name="componentOrGameObject">The object to find the corresponding object from.</param>
      <param name="assetPath">The asset path of the Prefab Asset to get the corresponding object from.</param>
      <returns>
        <para>The corresponding object or null.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetIconForGameObject(UnityEngine.GameObject)">
      <summary>
        <para>Retrieves the icon for the given GameObject.</para>
      </summary>
      <param name="gameObject">The GameObject to get an icon for.</param>
      <returns>
        <para>The icon for the GameObject.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetNearestPrefabInstanceRoot(UnityEngine.Object)">
      <summary>
        <para>Retrieves the GameObject that is the root of the nearest Prefab instance the object is part of.</para>
      </summary>
      <param name="componentOrGameObject">The object to check. Must be a component or GameObject.</param>
      <returns>
        <para>The nearest Prefab instance root.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetObjectOverrides(UnityEngine.GameObject,System.Boolean)">
      <summary>
        <para>Retrieves a list of objects with information about object overrides on the Prefab instance.</para>
      </summary>
      <param name="prefabInstance">The Prefab instance to get information about.</param>
      <param name="includeDefaultOverrides">If true, components will also be included even if they only contain overrides that are PrefabUtility.IsDefaultOverride|default overrides. False by default.</param>
      <returns>
        <para>List of objects with information about object overrides.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetOutermostPrefabInstanceRoot(UnityEngine.Object)">
      <summary>
        <para>Retrieves the GameObject that is the root of the outermost Prefab instance the object is part of.</para>
      </summary>
      <param name="componentOrGameObject">The object to check. Must be a component or GameObject.</param>
      <returns>
        <para>The outermost Prefab instance root.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetPrefabAssetPathOfNearestInstanceRoot(UnityEngine.Object)">
      <summary>
        <para>Retrieves the asset path of the nearest Prefab instance root the specified object is part of.</para>
      </summary>
      <param name="instanceComponentOrGameObject">An object in the Prefab instance to get the asset path of.</param>
      <returns>
        <para>The asset path.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetPrefabAssetType(UnityEngine.Object)">
      <summary>
        <para>Retrieves an enum value indicating the type of Prefab Asset, such as Regular Prefab, Model Prefab and Prefab Variant.</para>
      </summary>
      <param name="componentOrGameObject">An object that is part of a Prefab Asset or Prefab instance.</param>
      <returns>
        <para>The type of Prefab.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetPrefabInstanceHandle(UnityEngine.Object)">
      <summary>
        <para>Retrieves the PrefabInstance object for the outermost Prefab instance the provided object is part of.</para>
      </summary>
      <param name="instanceComponentOrGameObject">An object from the Prefab instance.</param>
      <returns>
        <para>The Prefab instance handle.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetPrefabInstanceStatus(UnityEngine.Object)">
      <summary>
        <para>Determines whether a Prefab instance is properly connected to its asset.</para>
      </summary>
      <param name="componentOrGameObject">An object that is part of a Prefab instance.</param>
      <returns>
        <para>The status of the Prefab instance.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetPrefabObject(UnityEngine.Object)">
      <summary>
        <para>Retrieves the enclosing Prefab for any object contained within.</para>
      </summary>
      <param name="targetObject">An object contained within a Prefab object.</param>
      <returns>
        <para>The Prefab the object is contained in.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetPrefabParent(UnityEngine.Object)">
      <summary>
        <para>Returns the parent asset object of source, or null if it can't be found.</para>
      </summary>
      <param name="obj">
      </param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetPrefabType(UnityEngine.Object)">
      <summary>
        <para>Given an object, returns its Prefab type (None, if it's not a Prefab).</para>
      </summary>
      <param name="target">
      </param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetPropertyModifications(UnityEngine.Object)">
      <summary>
        <para>Extracts all modifications that are applied to the Prefab instance compared to the parent Prefab.</para>
      </summary>
      <param name="targetPrefab">
      </param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.GetRemovedComponents(UnityEngine.GameObject)">
      <summary>
        <para>Returns a list of objects with information about removed component overrides on the Prefab instance.</para>
      </summary>
      <param name="prefabInstance">The Prefab instance to get information about.</param>
      <returns>
        <para>List of objects with information about removed components.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.HasManagedReferencesWithMissingTypes(UnityEngine.Object)">
      <summary>
        <para>Determines whether the object Prefab asset contains any MonoBehaviours with missing SerializeReference types.</para>
      </summary>
      <param name="componentOrGameObject">An object which is part of a Prefab asset.</param>
      <param name="assetComponentOrGameObject">
      </param>
      <returns>
        <para>Returns true if there are missing SerializeReference types directly within a Prefab asset excluding nested Prefab.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.HasPrefabInstanceAnyOverrides(UnityEngine.GameObject,System.Boolean)">
      <summary>
        <para>Returns true if the given Prefab instance has any overrides.</para>
      </summary>
      <param name="instanceRoot">The root GameObject of the Prefab instance to check.</param>
      <param name="includeDefaultOverrides">Set to true to consider default overrides as overrides too.</param>
      <returns>
        <para>Returns true if there are any overrides.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.InstantiateAttachedAsset(UnityEngine.Object)">
      <summary>
        <para>Instantiate an asset that is referenced by a Prefab and use it on the Prefab instance.</para>
      </summary>
      <param name="targetObject">
      </param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.InstantiatePrefab(UnityEngine.Object)">
      <summary>
        <para>Instantiates the given Prefab in a given Scene.</para>
      </summary>
      <param name="target">Prefab Asset to instantiate.</param>
      <param name="destinationScene">Scene to instantiate the Prefab in.</param>
      <param name="assetComponentOrGameObject">
      </param>
      <returns>
        <para>The GameObject at the root of the Prefab.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.InstantiatePrefab(UnityEngine.Object,UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Instantiates the given Prefab in a given Scene.</para>
      </summary>
      <param name="target">Prefab Asset to instantiate.</param>
      <param name="destinationScene">Scene to instantiate the Prefab in.</param>
      <param name="assetComponentOrGameObject">
      </param>
      <returns>
        <para>The GameObject at the root of the Prefab.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.IsAddedComponentOverride(UnityEngine.Object)">
      <summary>
        <para>Is this component added to a Prefab instance as an override?</para>
      </summary>
      <param name="component">The component to check.</param>
      <returns>
        <para>True if the component is an added component.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.IsAddedGameObjectOverride(UnityEngine.GameObject)">
      <summary>
        <para>Is this GameObject added as a child to a Prefab instance as an override?</para>
      </summary>
      <param name="gameObject">The GameObject to check.</param>
      <returns>
        <para>True if the GameObject is an added GameObject.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.IsAnyPrefabInstanceRoot(UnityEngine.GameObject)">
      <summary>
        <para>Is the GameObject the root of any Prefab instance?</para>
      </summary>
      <param name="gameObject">The GameObject to check.</param>
      <returns>
        <para>True if the GameObject is the root GameObject of any Prefab instance.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.IsDefaultOverride(UnityEditor.PropertyModification)">
      <summary>
        <para>Returns true if the given modification is considered a PrefabUtility.IsDefaultOverride|default override.</para>
      </summary>
      <param name="modification">The modification for the property in question.</param>
      <returns>
        <para>True if the property is a default override.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.IsDisconnectedFromPrefabAsset(UnityEngine.Object)">
      <summary>
        <para>Returns true if the given object is part of an instance where the PrefabInstance object is missing but the given object has a valid corresponding object.</para>
      </summary>
      <param name="componentOrGameObject">The object to check. Must be a GameObject or component.</param>
      <returns>
        <para>True if the instance is disconnected.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.IsOutermostPrefabInstanceRoot(UnityEngine.GameObject)">
      <summary>
        <para>Is the GameObject the root of a Prefab instance, excluding nested Prefabs?</para>
      </summary>
      <param name="gameObject">The GameObject to check.</param>
      <returns>
        <para>True if the GameObject is an outermost Prefab instance root.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.IsPartOfAnyPrefab(UnityEngine.Object)">
      <summary>
        <para>Returns true if the given object is part of any kind of Prefab.</para>
      </summary>
      <param name="componentOrGameObject">The object to check. Must be a component or GameObject.</param>
      <returns>
        <para>True if the object s part of a Prefab.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.IsPartOfImmutablePrefab(UnityEngine.Object)">
      <summary>
        <para>Is this object part of a Prefab that cannot be edited?</para>
      </summary>
      <param name="componentOrGameObject">The object to check. Must be a component or GameObject.</param>
      <returns>
        <para>True if the object is part of a Prefab that cannot be edited.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.IsPartOfModelPrefab(UnityEngine.Object)">
      <summary>
        <para>Returns true if the given object is part of a Model Prefab Asset or Model Prefab instance.</para>
      </summary>
      <param name="componentOrGameObject">The object to check. Must be a component or GameObject.</param>
      <returns>
        <para>True if the given object is part of a Model Prefab.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.IsPartOfNonAssetPrefabInstance(UnityEngine.Object)">
      <summary>
        <para>Returns true if the given object is part of a Prefab instance and not part of an asset.</para>
      </summary>
      <param name="componentOrGameObject">The object to check. Must be a component or GameObject.</param>
      <returns>
        <para>True if the object is part of a Prefab instance that's not inside a Prefab Asset.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.IsPartOfPrefabAsset(UnityEngine.Object)">
      <summary>
        <para>Returns true if the given object is part of a Prefab Asset.</para>
      </summary>
      <param name="componentOrGameObject">The object to check. Must be a component or GameObject.</param>
      <returns>
        <para>True is the object is part of a Prefab Asset.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.IsPartOfPrefabInstance(UnityEngine.Object)">
      <summary>
        <para>Returns true if the given object is part of a Prefab instance.</para>
      </summary>
      <param name="componentOrGameObject">The object to check. Must be a component or GameObject.</param>
      <returns>
        <para>True if the object is part of a Prefab instance.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.IsPartOfPrefabThatCanBeAppliedTo(UnityEngine.Object)">
      <summary>
        <para>Is this object part of a Prefab that cannot be applied to?</para>
      </summary>
      <param name="gameObjectOrComponent">The object to check. Must be a component or GameObject.</param>
      <returns>
        <para>True if the object is part of a Prefab that cannot be applied to.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.IsPartOfRegularPrefab(UnityEngine.Object)">
      <summary>
        <para>Returns true if the given object is part of a regular Prefab instance or Prefab Asset.</para>
      </summary>
      <param name="componentOrGameObject">The object to check. Must be a component or GameObject.</param>
      <returns>
        <para>True if the given object is part of a regular Prefab instance or Prefab Asset.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.IsPartOfVariantPrefab(UnityEngine.Object)">
      <summary>
        <para>Returns true if the given object is part of a Prefab Variant Asset or Prefab Variant instance.</para>
      </summary>
      <param name="componentOrGameObject">The object to check. Must be a component or GameObject.</param>
      <returns>
        <para>True if the given object is part of a Prefab Variant.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.IsPrefabAssetMissing(UnityEngine.Object)">
      <summary>
        <para>Returns true if the given object is part of a Prefab instance but the source asset is missing.</para>
      </summary>
      <param name="instanceComponentOrGameObject">The object to check. Must be a component or GameObject.</param>
      <returns>
        <para>True if the given object is part of a Prefab instance but the source asset is missing.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.LoadPrefabContents(System.String)">
      <summary>
        <para>Loads a Prefab Asset at a given path into an isolated Scene and returns the root GameObject of the Prefab.</para>
      </summary>
      <param name="assetPath">The path of the Prefab Asset to load the contents of.</param>
      <returns>
        <para>The root of the loaded contents.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.LoadPrefabContentsIntoPreviewScene(System.String,UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Loads a Prefab Asset at a given path into a given preview Scene and returns the root GameObject of the Prefab.</para>
      </summary>
      <param name="scene">The Scene to load the contents into.</param>
      <param name="prefabPath">The path of the Prefab Asset to load the contents of.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.MergeAllPrefabInstances(UnityEngine.Object)">
      <summary>
        <para>Force re-merging all Prefab instances of this Prefab.</para>
      </summary>
      <param name="targetObject">
      </param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.MergePrefabInstance(UnityEngine.GameObject)">
      <summary>
        <para>Forces a Prefab instance to merge with changes from the Prefab Asset.</para>
      </summary>
      <param name="instanceRoot">Root of Prefab instance to update.</param>
    </member>
    <member name="T:UnityEditor.PrefabUtility.PrefabInstanceUpdated">
      <summary>
        <para>Delegate for method that is called after Prefab instances in the Scene have been updated.</para>
      </summary>
      <param name="instance">
      </param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.ReconnectToLastPrefab(UnityEngine.GameObject)">
      <summary>
        <para>Connects the game object to the Prefab that it was last connected to.</para>
      </summary>
      <param name="go">
      </param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.RecordPrefabInstancePropertyModifications(UnityEngine.Object)">
      <summary>
        <para>Causes modifications made to the Prefab instance to be recorded.</para>
      </summary>
      <param name="targetObject">Object to process.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.ReplacePrefab(UnityEngine.GameObject,UnityEngine.Object)">
      <summary>
        <para>Replaces the targetPrefab with a copy of the game object hierarchy go.</para>
      </summary>
      <param name="go">
      </param>
      <param name="targetPrefab">
      </param>
      <param name="replaceOptions">
      </param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.ReplacePrefab(UnityEngine.GameObject,UnityEngine.Object,UnityEditor.ReplacePrefabOptions)">
      <summary>
        <para>Replaces the targetPrefab with a copy of the game object hierarchy go.</para>
      </summary>
      <param name="go">
      </param>
      <param name="targetPrefab">
      </param>
      <param name="replaceOptions">
      </param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.ResetToPrefabState(UnityEngine.Object)">
      <summary>
        <para>Resets the properties of the component or game object to the parent Prefab state.</para>
      </summary>
      <param name="obj">
      </param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.RevertAddedComponent(UnityEngine.Component,UnityEditor.InteractionMode)">
      <summary>
        <para>Removes this added component on a Prefab instance.</para>
      </summary>
      <param name="component">The added component on the Prefab instance to revert.</param>
      <param name="action">The interaction mode for this action.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.RevertAddedGameObject(UnityEngine.GameObject,UnityEditor.InteractionMode)">
      <summary>
        <para>Removes this added GameObject from a Prefab instance.</para>
      </summary>
      <param name="action">The interaction mode for this action.</param>
      <param name="gameObject">The added GameObject on the Prefab instance to revert.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.RevertObjectOverride(UnityEngine.Object,UnityEditor.InteractionMode)">
      <summary>
        <para>Reverts all overridden properties on a Prefab instance component or GameObject.</para>
      </summary>
      <param name="action">The interaction mode for this action.</param>
      <param name="instanceComponentOrGameObject">The object on the Prefab instance to revert.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.RevertPrefabInstance(UnityEngine.GameObject)">
      <summary>
        <para>Reverts all overrides on a Prefab instance.</para>
      </summary>
      <param name="instanceRoot">The root of the Prefab instance.</param>
      <param name="action">The interaction mode for this action.</param>
      <param name="go">
      </param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.RevertPrefabInstance(UnityEngine.GameObject,UnityEditor.InteractionMode)">
      <summary>
        <para>Reverts all overrides on a Prefab instance.</para>
      </summary>
      <param name="instanceRoot">The root of the Prefab instance.</param>
      <param name="action">The interaction mode for this action.</param>
      <param name="go">
      </param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.RevertPropertyOverride(UnityEditor.SerializedProperty,UnityEditor.InteractionMode)">
      <summary>
        <para>Revert a single property override on a Prefab instance.</para>
      </summary>
      <param name="action">The interaction mode for this action.</param>
      <param name="instanceProperty">The SerializedProperty representing the property to revert.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.RevertRemovedComponent(UnityEngine.GameObject,UnityEngine.Component,UnityEditor.InteractionMode)">
      <summary>
        <para>Adds this removed component back on the Prefab instance.</para>
      </summary>
      <param name="assetComponent">The removed component on the Prefab instance to revert.</param>
      <param name="action">The interaction mode for this action.</param>
      <param name="instanceGameObject">The GameObject on the Prefab instance which the component has been removed from.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.SaveAsPrefabAsset(UnityEngine.GameObject,System.String)">
      <summary>
        <para>Use this function to create a Prefab Asset at the given path from the given GameObject, including any childen in the Scene without modifying the input objects.</para>
      </summary>
      <param name="instanceRoot">The GameObject to save as a Prefab Asset.</param>
      <param name="assetPath">The path to save the Prefab at.</param>
      <param name="success">The result of the save action, either successful or unsuccessful. Use this together with the console log to get more insight into the save process.</param>
      <returns>
        <para>The root GameObject of the saved Prefab Asset, if available.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.SaveAsPrefabAsset(UnityEngine.GameObject,System.String,System.Boolean&amp;)">
      <summary>
        <para>Use this function to create a Prefab Asset at the given path from the given GameObject, including any childen in the Scene without modifying the input objects.</para>
      </summary>
      <param name="instanceRoot">The GameObject to save as a Prefab Asset.</param>
      <param name="assetPath">The path to save the Prefab at.</param>
      <param name="success">The result of the save action, either successful or unsuccessful. Use this together with the console log to get more insight into the save process.</param>
      <returns>
        <para>The root GameObject of the saved Prefab Asset, if available.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.SaveAsPrefabAssetAndConnect(UnityEngine.GameObject,System.String,UnityEditor.InteractionMode)">
      <summary>
        <para>Use this function to create a Prefab Asset at the given path from the given GameObject, including any children in the Scene and at the same time make the given GameObject into an instance of the new Prefab.</para>
      </summary>
      <param name="instanceRoot">The GameObject to save as a Prefab and make into a Prefab instance.</param>
      <param name="assetPath">The path to save the Prefab at.</param>
      <param name="action">The interaction mode to use for this action.</param>
      <param name="success">The result of the save action, either successful or unsuccessful. Use this together with the console log to get more insight into the save process.</param>
      <returns>
        <para>The root GameObject of the saved Prefab Asset, if available.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.SaveAsPrefabAssetAndConnect(UnityEngine.GameObject,System.String,UnityEditor.InteractionMode,System.Boolean&amp;)">
      <summary>
        <para>Use this function to create a Prefab Asset at the given path from the given GameObject, including any children in the Scene and at the same time make the given GameObject into an instance of the new Prefab.</para>
      </summary>
      <param name="instanceRoot">The GameObject to save as a Prefab and make into a Prefab instance.</param>
      <param name="assetPath">The path to save the Prefab at.</param>
      <param name="action">The interaction mode to use for this action.</param>
      <param name="success">The result of the save action, either successful or unsuccessful. Use this together with the console log to get more insight into the save process.</param>
      <returns>
        <para>The root GameObject of the saved Prefab Asset, if available.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.SavePrefabAsset(UnityEngine.GameObject)">
      <summary>
        <para>Use this function to save the version of an existing Prefab Asset that exists in memory back to disk.</para>
      </summary>
      <param name="asset">Any GameObject that is part of the Prefab Asset to save.</param>
      <param name="savedSuccessfully">The result of the save action, either successful or unsuccessful. Use this together with the console log to get more insight into the save process.</param>
      <returns>
        <para>The root GameObject of the saved Prefab Asset.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.SavePrefabAsset(UnityEngine.GameObject,System.Boolean&amp;)">
      <summary>
        <para>Use this function to save the version of an existing Prefab Asset that exists in memory back to disk.</para>
      </summary>
      <param name="asset">Any GameObject that is part of the Prefab Asset to save.</param>
      <param name="savedSuccessfully">The result of the save action, either successful or unsuccessful. Use this together with the console log to get more insight into the save process.</param>
      <returns>
        <para>The root GameObject of the saved Prefab Asset.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PrefabUtility.SetPropertyModifications(UnityEngine.Object,UnityEditor.PropertyModification[])">
      <summary>
        <para>Assigns all modifications that are applied to the Prefab instance compared to the parent Prefab.</para>
      </summary>
      <param name="targetPrefab">
      </param>
      <param name="modifications">
      </param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.UnloadPrefabContents(UnityEngine.GameObject)">
      <summary>
        <para>Releases the content from a Prefab previously loaded with LoadPrefabContents from memory.</para>
      </summary>
      <param name="contentsRoot">The root of the loaded Prefab contents.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.UnpackAllInstancesOfPrefab(UnityEngine.GameObject,UnityEditor.PrefabUnpackMode,UnityEditor.InteractionMode)">
      <summary>
        <para>Unpacks all instances of a given Prefab Asset root GameObject in all open scenes so that all instances are replaced with the contents of the Prefab Asset while retaining all override values.</para>
      </summary>
      <param name="prefabRoot">The root GameObject of a Prefab Asset used to find all Prefab instances in open scenes that should be unpacked.</param>
      <param name="unpackMode">Whether to unpack the outermost root or unpack completely.</param>
      <param name="action">The interaction mode to use for this action.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.UnpackPrefabInstance(UnityEngine.GameObject,UnityEditor.PrefabUnpackMode,UnityEditor.InteractionMode)">
      <summary>
        <para>Unpacks a given Prefab instance so that it is replaced with the contents of the Prefab Asset while retaining all override values.</para>
      </summary>
      <param name="instanceRoot">The root of the Prefab instance to unpack.</param>
      <param name="unpackMode">Whether to unpack the outermost root or unpack completely.</param>
      <param name="action">The interaction mode to use for this action.</param>
    </member>
    <member name="M:UnityEditor.PrefabUtility.UnpackPrefabInstanceAndReturnNewOutermostRoots(UnityEngine.GameObject,UnityEditor.PrefabUnpackMode)">
      <summary>
        <para>This function will unpack the given Prefab instance using the behaviour specified by unpackMode.</para>
      </summary>
      <param name="instanceRoot">Root GameObject of the Prefab instance.</param>
      <param name="unpackMode">The unpack mode to use.</param>
      <returns>
        <para>Array of GameObjects representing roots of unpacked Prefab instances.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.PreferenceItem">
      <summary>
        <para>(Obsolete: use the SettingsProvider class instead) The PreferenceItem attribute allows you to add preferences sections to the Preferences window.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PreferenceItem.#ctor(System.String)">
      <summary>
        <para>Creates a section in the Settings Window called name and invokes the static function following it for the section's GUI.</para>
      </summary>
      <param name="name">
      </param>
    </member>
    <member name="T:UnityEditor.PreprocessorOverride">
      <summary>
        <para>Sets the preprocessor that Unity uses to compile this shader.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PreprocessorOverride.ForceCachingPreprocessor">
      <summary>
        <para>Use the Caching Shader Preprocessor.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PreprocessorOverride.ForcePlatformPreprocessor">
      <summary>
        <para>Use the platform compilers' preprocessors.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PreprocessorOverride.UseProjectSettings">
      <summary>
        <para>Use the preprocessor defined in your Project's Editor Settings.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Presets.DefaultPreset">
      <summary>
        <para>This structure defines a default Preset.
See Preset.GetDefaultListForType and Preset.SetDefaultListForType for usage.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Presets.DefaultPreset.enabled">
      <summary>
        <para>Set this value to false to disable this DefaultPreset setting from the default preset list without removing it.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Presets.DefaultPreset.filter">
      <summary>
        <para>The search filter that is compared against the object instance. The DefaultPreset.m_Preset is applied to the object instance if it matches the search filter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Presets.DefaultPreset.m_Filter">
      <summary>
        <para>The search filter that is compared against the object instance. The DefaultPreset.m_Preset is applied to the object instance if it matches the search filter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Presets.DefaultPreset.m_Preset">
      <summary>
        <para>The Preset applied to an object instance when it matches the search filter defined by DefaultPreset.m_Filter.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Presets.DefaultPreset.preset">
      <summary>
        <para>The Preset applied to an object instance when it matches the search filter defined by DefaultPreset.m_Filter.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Presets.DefaultPresetSelectorReceiver">
      <summary>
        <para>Basic implementation of the PresetSelectorReceiver.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Presets.DefaultPresetSelectorReceiver.OnSelectionChanged(UnityEditor.Presets.Preset)">
      <summary>
        <para>Applies the Preset to each target. If Preset is null, this method reverts the value of each target.</para>
      </summary>
      <param name="selection">
      </param>
    </member>
    <member name="M:UnityEditor.Presets.DefaultPresetSelectorReceiver.OnSelectionClosed(UnityEditor.Presets.Preset)">
      <summary>
        <para>Applies the current selection and then destroys itself.</para>
      </summary>
      <param name="selection">
      </param>
    </member>
    <member name="T:UnityEditor.Presets.Preset">
      <summary>
        <para>A Preset contains default values for an Object.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Presets.Preset.excludedProperties">
      <summary>
        <para>List of properties to ignore when applying the Preset to an object.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Presets.Preset.ApplyTo(UnityEngine.Object)">
      <summary>
        <para>Applies this Preset to the target object.</para>
      </summary>
      <param name="target">The target object that will be updated with the Preset serialized values.</param>
      <param name="selectedPropertyPaths">Optional list of property names that are applied to the target.</param>
      <returns>
        <para>Returns true if the target object was successfully updated by the Preset, false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Presets.Preset.ApplyTo(UnityEngine.Object,System.String[])">
      <summary>
        <para>Applies this Preset to the target object.</para>
      </summary>
      <param name="target">The target object that will be updated with the Preset serialized values.</param>
      <param name="selectedPropertyPaths">Optional list of property names that are applied to the target.</param>
      <returns>
        <para>Returns true if the target object was successfully updated by the Preset, false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Presets.Preset.CanBeAppliedTo(UnityEngine.Object)">
      <summary>
        <para>Returns true if this Preset can be applied to the target Object.</para>
      </summary>
      <param name="target">
      </param>
    </member>
    <member name="M:UnityEditor.Presets.Preset.#ctor(UnityEngine.Object)">
      <summary>
        <para>Constructs a new Preset from a given Object.</para>
      </summary>
      <param name="source">Used by the Preset to know its target type and serialized values.</param>
    </member>
    <member name="M:UnityEditor.Presets.Preset.DataEquals(UnityEngine.Object)">
      <summary>
        <para>Determines if the target object has the same serialized values as the Preset.</para>
      </summary>
      <param name="target">The target object to be compared against the Preset.</param>
      <returns>
        <para>Returns true when the target object has the same serialized values as the Preset. Otherwise, returns false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Presets.Preset.GetAllDefaultTypes">
      <summary>
        <para>Returns all the PresetType that have at least one DefaultPreset entry in the default Presets list.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Presets.Preset.GetDefaultForObject(UnityEngine.Object)">
      <summary>
        <para>Returns the current default Preset assigned to the same Object type. Returns null if there is no matching default.</para>
      </summary>
      <param name="target">
      </param>
    </member>
    <member name="M:UnityEditor.Presets.Preset.GetDefaultForPreset(UnityEditor.Presets.Preset)">
      <summary>
        <para>Returns the current default Preset assigned to the same Preset type. Returns null if there is no matching default.</para>
      </summary>
      <param name="preset">
      </param>
    </member>
    <member name="M:UnityEditor.Presets.Preset.GetDefaultPresetsForObject(UnityEngine.Object)">
      <summary>
        <para>Gets the ordered list of Presets that set its default values when applied to the target.</para>
      </summary>
      <param name="target">The object instance tested against each DefaultPreset.m_Filter search filter.</param>
      <returns>
        <para>Returns an ordered list of Presets that match the specified target.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Presets.Preset.GetDefaultPresetsForType(UnityEditor.Presets.PresetType)">
      <summary>
        <para>Gets an ordered list of DefaultPreset based on the specified PresetType.</para>
      </summary>
      <param name="type">A valid default PresetType.</param>
      <returns>
        <para>Returns a list of DefaultPreset from the PresetManager that match the specified PresetType.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Presets.Preset.GetPresetType">
      <summary>
        <para>Returns the PresetType of this Preset.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Presets.Preset.GetTargetFullTypeName">
      <summary>
        <para>Returns a human readable string of this Preset's target fulltype, including namespace.</para>
      </summary>
      <returns>
        <para>Fullname of the Preset's target type.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Presets.Preset.GetTargetTypeName">
      <summary>
        <para>Returns a human readable string of this Preset's target type.</para>
      </summary>
      <returns>
        <para>Fullname of the Preset's target type.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Presets.Preset.IsObjectExcludedFromDefaultPresets(UnityEngine.Object)">
      <summary>
        <para>Returns true if this Object cannot have a default Preset.</para>
      </summary>
      <param name="target">
      </param>
    </member>
    <member name="M:UnityEditor.Presets.Preset.IsObjectExcludedFromPresets(UnityEngine.Object)">
      <summary>
        <para>Returns true if this Object is not available in the Preset system.</para>
      </summary>
      <param name="target">
      </param>
    </member>
    <member name="M:UnityEditor.Presets.Preset.IsPresetExcludedFromDefaultPresets(UnityEditor.Presets.Preset)">
      <summary>
        <para>Returns true if this Preset cannot be set as the default.</para>
      </summary>
      <param name="preset">
      </param>
    </member>
    <member name="M:UnityEditor.Presets.Preset.IsValid">
      <summary>
        <para>Returns true if the Preset type of this Preset is valid.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Presets.Preset.PropertyModifications">
      <summary>
        <para>Returns a copy of the PropertyModification array owned by this Preset.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Presets.Preset.RemoveFromDefault(UnityEditor.Presets.Preset)">
      <summary>
        <para>Remove the Preset type from having default values in the project.</para>
      </summary>
      <param name="preset">
      </param>
    </member>
    <member name="M:UnityEditor.Presets.Preset.SetAsDefault(UnityEditor.Presets.Preset)">
      <summary>
        <para>Sets the Preset as the default for its target type in the project.</para>
      </summary>
      <param name="preset">The Preset asset to set as the default.</param>
      <returns>
        <para>Returns true if the Preset is successfully set as the default, or false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Presets.Preset.SetDefaultPresetsForType(UnityEditor.Presets.PresetType,UnityEditor.Presets.DefaultPreset[])">
      <summary>
        <para>Sets a default list of Presets with a filter for a specific PresetType.</para>
      </summary>
      <param name="type">A valid default PresetType.</param>
      <param name="presets">An ordered list of DefaultPreset.</param>
      <returns>
        <para>Returns true if the list was set as default. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Presets.Preset.UpdateProperties(UnityEngine.Object)">
      <summary>
        <para>Updates this Preset's properties from the given Object's values. The given Object's type must match this Preset's type.</para>
      </summary>
      <param name="source">Used by the Preset to get its new serialized values.</param>
      <returns>
        <para>Returns true if the Preset was updated, false otherwise.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Presets.PresetSelector">
      <summary>
        <para>This class implements a modal window that selects a Preset asset from the Project.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Presets.PresetSelector.DrawPresetButton(UnityEngine.Rect,UnityEngine.Object[])">
      <summary>
        <para>Draw a Preset button that opens the default PresetSelector using the targets array.</para>
      </summary>
      <param name="rectangle">The Rect where the PresetSelector icon is drawn.</param>
      <param name="targets">List of objects to which the selected Preset is applied.</param>
    </member>
    <member name="M:UnityEditor.Presets.PresetSelector.ShowSelector(UnityEngine.Object[],UnityEditor.Presets.Preset,System.Boolean)">
      <summary>
        <para>Opens a modal window for selecting a Preset.</para>
      </summary>
      <param name="targets">List of objects to which the selected Preset is applied. DefaultPresetSelectorReceiver applies the Preset selection.</param>
      <param name="currentSelection">The selected Preset when the window is opened. Set to 'null' for no selection.</param>
      <param name="createNewAllowed">Set to true to show the 'Save current to...' button. Set to false to hide this button.</param>
      <param name="target">Object that identifies the type of Preset asset being selected. The modal window filters the selector view based on this object.</param>
      <param name="eventReceiver">The PresetSelectorReceiver instance that the PresetSelector uses to send events.</param>
      <param name="presetType">Filters the list of Presets based on a specific PresetType. Use this param to set the PresetType when no target is specified.</param>
    </member>
    <member name="M:UnityEditor.Presets.PresetSelector.ShowSelector(UnityEngine.Object,UnityEditor.Presets.Preset,System.Boolean,UnityEditor.Presets.PresetSelectorReceiver)">
      <summary>
        <para>Opens a modal window for selecting a Preset.</para>
      </summary>
      <param name="targets">List of objects to which the selected Preset is applied. DefaultPresetSelectorReceiver applies the Preset selection.</param>
      <param name="currentSelection">The selected Preset when the window is opened. Set to 'null' for no selection.</param>
      <param name="createNewAllowed">Set to true to show the 'Save current to...' button. Set to false to hide this button.</param>
      <param name="target">Object that identifies the type of Preset asset being selected. The modal window filters the selector view based on this object.</param>
      <param name="eventReceiver">The PresetSelectorReceiver instance that the PresetSelector uses to send events.</param>
      <param name="presetType">Filters the list of Presets based on a specific PresetType. Use this param to set the PresetType when no target is specified.</param>
    </member>
    <member name="M:UnityEditor.Presets.PresetSelector.ShowSelector(UnityEditor.Presets.PresetType,UnityEditor.Presets.Preset,System.Boolean,UnityEditor.Presets.PresetSelectorReceiver)">
      <summary>
        <para>Opens a modal window for selecting a Preset.</para>
      </summary>
      <param name="targets">List of objects to which the selected Preset is applied. DefaultPresetSelectorReceiver applies the Preset selection.</param>
      <param name="currentSelection">The selected Preset when the window is opened. Set to 'null' for no selection.</param>
      <param name="createNewAllowed">Set to true to show the 'Save current to...' button. Set to false to hide this button.</param>
      <param name="target">Object that identifies the type of Preset asset being selected. The modal window filters the selector view based on this object.</param>
      <param name="eventReceiver">The PresetSelectorReceiver instance that the PresetSelector uses to send events.</param>
      <param name="presetType">Filters the list of Presets based on a specific PresetType. Use this param to set the PresetType when no target is specified.</param>
    </member>
    <member name="T:UnityEditor.Presets.PresetSelectorReceiver">
      <summary>
        <para>Implement this class to control the selection change when selecting a Preset in the PresetSelector.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Presets.PresetSelectorReceiver.OnSelectionChanged(UnityEditor.Presets.Preset)">
      <summary>
        <para>When a new Preset is selected in the modal window, this method is called by PresetSelector.</para>
      </summary>
      <param name="selection">This parameter is set to null when 'None' is the new selection in the PresetSelector.</param>
    </member>
    <member name="M:UnityEditor.Presets.PresetSelectorReceiver.OnSelectionClosed(UnityEditor.Presets.Preset)">
      <summary>
        <para>This method is called by the PresetSelector when the modal window is closed.</para>
      </summary>
      <param name="selection">
      </param>
    </member>
    <member name="T:UnityEditor.Presets.PresetType">
      <summary>
        <para>Stores a type to which a Preset can be applied.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Presets.PresetType.GetManagedTypeName">
      <summary>
        <para>Retrieves a human readable namespace and the name of the target class, regardless of whether it's a managed C# class or a native C++ class.</para>
      </summary>
      <returns>
        <para>Returns the full namespace and type of the target class.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Presets.PresetType.IsValid">
      <summary>
        <para>Checks whether a PresetType corresponds with a valid native or managed class.</para>
      </summary>
      <returns>
        <para>Returns true if the PresetType is valid. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Presets.PresetType.IsValidDefault">
      <summary>
        <para>Checks whether a PresetType can be used within the DefaultPreset system.</para>
      </summary>
      <returns>
        <para>Returns true if the PresetType is a valid default type. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.ProfilerWindow">
      <summary>
        <para>Use the ProfilerWindow class for interactions with the Modules.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ProfilerWindow.cpuModuleIdentifier">
      <summary>
        <para>The identifier of the.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ProfilerWindow.cpuModuleName">
      <summary>
        <para>Deprecated: Use ProfilerWindow.cpuModuleIdentifier instead.
The name of the.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ProfilerWindow.firstAvailableFrameIndex">
      <summary>
        <para>The index of the first frame available in the Profiler Window, or -1 if no frames are available.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ProfilerWindow.gpuModuleIdentifier">
      <summary>
        <para>The identifier of the.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ProfilerWindow.gpuModuleName">
      <summary>
        <para>Deprecated: Use ProfilerWindow.gpuModuleIdentifier instead.
The name of the.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ProfilerWindow.lastAvailableFrameIndex">
      <summary>
        <para>The index of the last frame available in the Profiler Window, or -1 if no frames are available.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ProfilerWindow.selectedFrameIndex">
      <summary>
        <para>The zero-based index of the frame currently selected in the Profiler Window.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ProfilerWindow.selectedModuleIdentifier">
      <summary>
        <para>The identifier of the that is currently selected in the Profiler Window, or null if no Module is currently selected.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ProfilerWindow.selectedModuleName">
      <summary>
        <para>Deprecated: Use ProfilerWindow.selectedModuleIdentifier instead.
The name of the that is currently selected in the Profiler Window, or null if no Module is currently selected.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ProfilerWindow.GetFrameTimeViewSampleSelectionController(System.String)">
      <summary>
        <para>Retrieves an IProfilerFrameTimeSampleSelectionController object that you can use to control the selection in.</para>
      </summary>
      <param name="moduleIdentifier">The identifier of the Profiler module whose selection controller you want to retrieve. Only ProfilerWindow.cpuModuleIdentifier and ProfilerWindow.gpuModuleIdentifier are currently valid, other options will throw and ArgumentException.</param>
      <returns>
        <para>An IProfilerFrameTimeSampleSelectionController object with which you can use to control the selection of the specified Profiler module.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ProfilerWindow.SelectAndStayOnLatestFrame">
      <summary>
        <para>Selects the newest frame that was profiled and if newer frames are profiled or loaded into the profiler window, the Profiler Window will keep showing the newest frame of these.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.ProfilerWindow.SelectedFrameIndexChanged(System.Action`1&lt;System.Int64&gt;)">
      <summary>
        <para>Calls the methods in its invocation list when the Profiler window’s selected frame index changes.</para>
      </summary>
      <param name="value">The zero-based index of the frame currently selected in the Profiler Window. A long.</param>
    </member>
    <member name="T:UnityEditor.Profiling.FrameDataView">
      <summary>
        <para>Base funtionality for accessing the Profiler data.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.FrameDataView.frameFps">
      <summary>
        <para>The current frames per second (FPS) for the frame.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.FrameDataView.frameGpuTimeMs">
      <summary>
        <para>The amount of GPU frame time in milliseconds.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.FrameDataView.frameGpuTimeNs">
      <summary>
        <para>The amount of GPU frame time in nanoseconds.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.FrameDataView.frameIndex">
      <summary>
        <para>The frame index for the FrameDataView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.FrameDataView.frameStartTimeMs">
      <summary>
        <para>The start time of CPU frame in milliseconds.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.FrameDataView.frameStartTimeNs">
      <summary>
        <para>The start time of CPU frame in nanoseconds.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.FrameDataView.frameTimeMs">
      <summary>
        <para>The amount of CPU frame time in milliseconds.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.FrameDataView.frameTimeNs">
      <summary>
        <para>The amount of CPU frame time in nanoseconds.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.FrameDataView.invalidMarkerId">
      <summary>
        <para>Identifier of the invalid marker.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.FrameDataView.invalidThreadId">
      <summary>
        <para>This constant defines a thread id that does not match any valid thread's id.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.FrameDataView.invalidThreadIndex">
      <summary>
        <para>This constant defines a thread index that does not match any valid thread's index.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.FrameDataView.maxDepth">
      <summary>
        <para>Maximum child samples levels in the thread data.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.FrameDataView.sampleCount">
      <summary>
        <para>The amount of samples in the frame for the thread.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.FrameDataView.threadGroupName">
      <summary>
        <para>The name of the group that the thread belongs to.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.FrameDataView.threadId">
      <summary>
        <para>Persistent identifier associated with the thread.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.FrameDataView.threadIndex">
      <summary>
        <para>The index of the thread in the current frame.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.FrameDataView.threadName">
      <summary>
        <para>Name of the thread.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.FrameDataView.valid">
      <summary>
        <para>True after the frame data for the thread is processed and ready for retrieval.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetAllCategories(System.Collections.Generic.List`1&lt;UnityEditor.Profiling.ProfilerCategoryInfo&gt;)">
      <summary>
        <para>Gets all the available Profiler Categories for the current profiling session.</para>
      </summary>
      <param name="categoryInfoList">List filled with ProfilerCategoryInfo.</param>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetCategoryInfo(System.UInt16)">
      <summary>
        <para>Gets the Profiler category information for a given category ID.</para>
      </summary>
      <param name="id">The ID for the Category.</param>
      <returns>
        <para>Returns a ProfilerCategoryInfo struct based on the supplied ID. If the ID doesn't exist, an exception is thrown.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetCounterValueAsDouble(System.Int32)">
      <summary>
        <para>Gets the last value of a counter marker in the frame as a double data type'.</para>
      </summary>
      <param name="markerId">Marker identifier.</param>
      <returns>
        <para>Returns the counter value as double.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetCounterValueAsFloat(System.Int32)">
      <summary>
        <para>Gets the last value of a counter marker in the frame as a float data type'.</para>
      </summary>
      <param name="markerId">Marker identifier.</param>
      <returns>
        <para>Returns the counter value as float.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetCounterValueAsInt(System.Int32)">
      <summary>
        <para>Gets the last value of a counter marker in the frame as an int data type'.</para>
      </summary>
      <param name="markerId">Marker identifier.</param>
      <returns>
        <para>Returns the counter value as int.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetCounterValueAsLong(System.Int32)">
      <summary>
        <para>Gets the last value of a counter marker in the frame as a long data type.</para>
      </summary>
      <param name="markerId">Marker identifier.</param>
      <returns>
        <para>Returns the counter value as long.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetCounterValuePtr(System.Int32)">
      <summary>
        <para>Gets unsafe pointer to the last value of a counter marker in the frame.</para>
      </summary>
      <param name="markerId">Marker identifier.</param>
      <returns>
        <para>Returns unsafe pointer to the counter value.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetFrameMetaData(System.Guid,System.Int32)">
      <summary>
        <para>Retrieves metadata associated with the frame.</para>
      </summary>
      <param name="id">Project or package identifier.</param>
      <param name="tag">Data stream index.</param>
      <param name="index">Chunk index.</param>
      <returns>
        <para>Returns the frame metadata as a NativeArray.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetFrameMetaData(System.Guid,System.Int32,System.Int32)">
      <summary>
        <para>Retrieves metadata associated with the frame.</para>
      </summary>
      <param name="id">Project or package identifier.</param>
      <param name="tag">Data stream index.</param>
      <param name="index">Chunk index.</param>
      <returns>
        <para>Returns the frame metadata as a NativeArray.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetFrameMetaDataCount(System.Guid,System.Int32)">
      <summary>
        <para>Gets the total number of metadata chunks for each id and tag pair in the frame.</para>
      </summary>
      <param name="id">Project or package identifier.</param>
      <param name="tag">Data stream index.</param>
      <returns>
        <para>Returns count of metadata chunks.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetMarkerCategoryIndex(System.Int32)">
      <summary>
        <para>Gets Profiler marker category for the specific marker identifier.</para>
      </summary>
      <param name="markerId">Marker identifier.</param>
      <returns>
        <para>Returns Profiler category index.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetMarkerFlags(System.Int32)">
      <summary>
        <para>Gets Profiler marker flags for the specific marker identifier.</para>
      </summary>
      <param name="markerId">Marker identifier.</param>
      <returns>
        <para>Returns Profiler marker flags.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetMarkerId(System.String)">
      <summary>
        <para>Get Profiler marker identifier for a specific name.</para>
      </summary>
      <param name="markerName">Marker name.</param>
      <returns>
        <para>Returns marker identifier as integer. Returns invalidMarkerId if there is no such marker in the capture.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetMarkerMetadataInfo(System.Int32)">
      <summary>
        <para>Gets Profiler marker metadata information for the specific marker identifier.</para>
      </summary>
      <param name="markerId">Marker identifier.</param>
      <returns>
        <para>Returns an array of metadata information structures.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetMarkerName(System.Int32)">
      <summary>
        <para>Gets Profiler marker name for the specific marker identifier.</para>
      </summary>
      <param name="markerId">Marker identifier.</param>
      <returns>
        <para>Returns marker name. Returns null if identifier is unknown.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetMarkers(System.Collections.Generic.List`1&lt;UnityEditor.Profiling.FrameDataView/MarkerInfo&gt;)">
      <summary>
        <para>Gets all available markers for the current profiling session.</para>
      </summary>
      <param name="markerInfoList">List filled with marker descriptors.</param>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetSessionMetaData(System.Guid,System.Int32)">
      <summary>
        <para>Retrieves the metadata of the session this frame occurred in as a NativeArray.</para>
      </summary>
      <param name="id">Unique identifier associated with the data.</param>
      <param name="tag">Data stream index.</param>
      <param name="index">Chunk index.</param>
      <returns>
        <para>Returns the session metadata as a NativeArray.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetSessionMetaData(System.Guid,System.Int32,System.Int32)">
      <summary>
        <para>Retrieves the metadata of the session this frame occurred in as a NativeArray.</para>
      </summary>
      <param name="id">Unique identifier associated with the data.</param>
      <param name="tag">Data stream index.</param>
      <param name="index">Chunk index.</param>
      <returns>
        <para>Returns the session metadata as a NativeArray.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.GetSessionMetaDataCount(System.Guid,System.Int32)">
      <summary>
        <para>Gets the total number of metadata chunks for each id and tag pair in the Profiler session.</para>
      </summary>
      <param name="id">Unique identifier associated with the data.</param>
      <param name="tag">Data stream index.</param>
      <returns>
        <para>Returns count of metadata chunks.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.HasCounterValue(System.Int32)">
      <summary>
        <para>Returns true for a marker that includes a counter in the active frame.</para>
      </summary>
      <param name="markerId">Marker identifier.</param>
    </member>
    <member name="T:UnityEditor.Profiling.FrameDataView.MarkerInfo">
      <summary>
        <para>Marker descriptor structure.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.FrameDataView.MarkerInfo.category">
      <summary>
        <para>Marker category.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.FrameDataView.MarkerInfo.flags">
      <summary>
        <para>Marker flags.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.FrameDataView.MarkerInfo.id">
      <summary>
        <para>Marker identifier.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.FrameDataView.MarkerInfo.metadataInfo">
      <summary>
        <para>Metadata information.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.FrameDataView.MarkerInfo.name">
      <summary>
        <para>Marker name.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Profiling.FrameDataView.MarkerMetadataInfo">
      <summary>
        <para>Marker metadata descriptor.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.FrameDataView.MarkerMetadataInfo.name">
      <summary>
        <para>Metadata parameter name.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.FrameDataView.MarkerMetadataInfo.type">
      <summary>
        <para>Metadata type.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.FrameDataView.MarkerMetadataInfo.unit">
      <summary>
        <para>Metadata unit.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Profiling.FrameDataView.MethodInfo">
      <summary>
        <para>Managed method descriptor structure.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.FrameDataView.MethodInfo.methodName">
      <summary>
        <para>Fully qualified method name.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.FrameDataView.MethodInfo.sourceFileLine">
      <summary>
        <para>Line number in the source file where the method is defined.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.FrameDataView.MethodInfo.sourceFileName">
      <summary>
        <para>Name of a source file where the method is defined.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.FrameDataView.ResolveMethodInfo(System.UInt64)">
      <summary>
        <para>Returns method name and location information for the specified method address.</para>
      </summary>
      <param name="addr">Instruction pointer.</param>
      <returns>
        <para>Method name and location information.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.HierarchyFrameDataView">
      <summary>
        <para>Provides access to the Profiler data for a specific frame and thread.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.HierarchyFrameDataView.columnCalls">
      <summary>
        <para>The Calls column.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.HierarchyFrameDataView.columnDontSort">
      <summary>
        <para>The column identifier that indicates whether sorting is disabled.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.HierarchyFrameDataView.columnGcMemory">
      <summary>
        <para>The GC Allocation column.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.HierarchyFrameDataView.columnName">
      <summary>
        <para>The Profiler Sample Name column.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.HierarchyFrameDataView.columnObjectName">
      <summary>
        <para>The Object Name column.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.HierarchyFrameDataView.columnSelfPercent">
      <summary>
        <para>The percentage of the time CPU spends in a call itself.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.HierarchyFrameDataView.columnSelfTime">
      <summary>
        <para>The amount of the time CPU spends in a call itself. The amount of time is expressed in milliseconds.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.HierarchyFrameDataView.columnStartTime">
      <summary>
        <para>The start time of a call in milliseconds.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.HierarchyFrameDataView.columnTotalPercent">
      <summary>
        <para>The percentage of time the CPU spends in a call hierarchy.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.HierarchyFrameDataView.columnTotalTime">
      <summary>
        <para>The amount of time the CPU spends in a call hierarchy. The amount of time is expressed in milliseconds.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.HierarchyFrameDataView.columnWarningCount">
      <summary>
        <para>The amount of samples that are inside a code execution path that is suboptimal for performance.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.HierarchyFrameDataView.invalidSampleId">
      <summary>
        <para>Index of the invalid item.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.HierarchyFrameDataView.sortColumn">
      <summary>
        <para>The column identifier that defines the sort column.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.HierarchyFrameDataView.sortColumnAscending">
      <summary>
        <para>Whether the sorting order is ascending, true, or descending, false.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.HierarchyFrameDataView.viewMode">
      <summary>
        <para>The view mode which defines how data is aggregated.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemAncestors(System.Int32,System.Collections.Generic.List`1&lt;System.Int32&gt;)">
      <summary>
        <para>Retrieves a list of hierarchy item ancestors.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <param name="outAncestors">List filled with item ancestor identifiers as a result of a method call.</param>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemCallstack(System.Int32,System.Collections.Generic.List`1&lt;System.UInt64&gt;)">
      <summary>
        <para>Gets the callstack associated with the specified hierarchy item.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <param name="outCallstack">List filled with callstack pointers as a result of a method call.</param>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemCategoryIndex(System.Int32)">
      <summary>
        <para>Gets Profiler marker category for the specific marker identifier.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <returns>
        <para>Returns Profiler category index.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemChildren(System.Int32,System.Collections.Generic.List`1&lt;System.Int32&gt;)">
      <summary>
        <para>Retrieves a list of hierarchy item children.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <param name="outChildren">List filled with item child identifiers as a result of a method call.</param>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemColumnData(System.Int32,System.Int32)">
      <summary>
        <para>Returns string representation of hierarchy item value associated with the column.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <param name="column">Column identifier.</param>
      <returns>
        <para>Value of the correspnding column as string.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemColumnDataAsDouble(System.Int32,System.Int32)">
      <summary>
        <para>Returns double representation of hierarchy item value associated with the column.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <param name="column">Column identifier.</param>
      <returns>
        <para>Value of the correspnding column as double.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemColumnDataAsFloat(System.Int32,System.Int32)">
      <summary>
        <para>Returns float representation of hierarchy item value associated with the column.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <param name="column">Column identifier.</param>
      <returns>
        <para>Value of the correspnding column as float.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemColumnDataAsSingle(System.Int32,System.Int32)">
      <summary>
        <para>Returns float representation of hierarchy item value associated with the column.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <param name="column">Column identifier.</param>
      <returns>
        <para>Value of the correspnding column as float.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemDepth(System.Int32)">
      <summary>
        <para>Returns hierarchy level of the item.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemDescendantsThatHaveChildren(System.Int32,System.Collections.Generic.List`1&lt;System.Int32&gt;)">
      <summary>
        <para>Use to retrieve a list of a hierarchy item descendants which have other children.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <param name="outChildren">List filled with item all child identifiers which have children.</param>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemInstanceID(System.Int32)">
      <summary>
        <para>Returns InstanceID of the UnityEngine.Object associated with the sample.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMarkerFlags(System.Int32)">
      <summary>
        <para>Use to retrieve a marker usage flags.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <returns>
        <para>Marker usage flags.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMarkerID(System.Int32)">
      <summary>
        <para>Returns Profiler marker which uniquely identifies sample name.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMarkerIDPath(System.Int32,System.Collections.Generic.List`1&lt;System.Int32&gt;)">
      <summary>
        <para>Use to retrieve a list of a marker identifiers of all hierarchy item parents.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <param name="outFullIdPath">List filled with marker identifiers of all ancestors of the item as a result of a method call.</param>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMergedSampleCallstack(System.Int32,System.Int32,System.Collections.Generic.List`1&lt;System.UInt64&gt;)">
      <summary>
        <para>Gets the callstack associated with the specified hierarchy item.</para>
      </summary>
      <param name="sampleIndex">Merged sample index.</param>
      <param name="id">Hierarchy item identifier.</param>
      <param name="outCallstack">List filled with callstack pointers as a result of a method call.</param>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMergedSamplesColumnData(System.Int32,System.Int32,System.Collections.Generic.List`1&lt;System.String&gt;)">
      <summary>
        <para>Use to retrieve a values of merged samples of a hierarchy item.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <param name="column">Column identifier.</param>
      <param name="outStrings">List filled with values of merged samples as a result of a method call.</param>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMergedSamplesColumnDataAsDoubles(System.Int32,System.Int32,System.Collections.Generic.List`1&lt;System.Double&gt;)">
      <summary>
        <para>Retrieves the merged samples for a specific hierarchy item. Merged samples are returned as a list of doubles through the outValues param.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <param name="column">Column identifier.</param>
      <param name="outValues">The merged samples for the specified hierarchy item, returned as a list of doubles. This list is resized if necessary.</param>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMergedSamplesColumnDataAsFloats(System.Int32,System.Int32,System.Collections.Generic.List`1&lt;System.Single&gt;)">
      <summary>
        <para>Retrieves the merged samples for a specific hierarchy item. Merged samples are returned as a list of floats through the outValues param.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <param name="column">Column identifier.</param>
      <param name="outValues">The merged samples for the specified hierarchy item, returned as a list of floats. This list is resized if necessary.</param>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMergedSamplesCount(System.Int32)">
      <summary>
        <para>Return merged samples count represented by the hierarchy item.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <returns>
        <para>Returns merged samples count represented by the tree item.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMergedSamplesInstanceID(System.Int32,System.Collections.Generic.List`1&lt;System.Int32&gt;)">
      <summary>
        <para>Retrieves the instanceID of the merged samples corresponding to a hierarchy item.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <param name="outInstanceIds">List filled with InstanceID values of merged samples as a result of a method call.</param>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMergedSamplesMetadata(System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Returns string representation of hierarchy item metadata value.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <param name="sampleIndex">Merged sample index.</param>
      <param name="metadataIndex">Metadata index.</param>
      <returns>
        <para>Returns value of the metadata as string.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMergedSamplesMetadataAsFloat(System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Returns float representation of hierarchy item metadata value.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <param name="sampleIndex">Merged sample index.</param>
      <param name="metadataIndex">Metadata index.</param>
      <returns>
        <para>Returns value of the metadata as float.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMergedSamplesMetadataAsLong(System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Returns long representation of hierarchy item metadata value.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <param name="sampleIndex">Merged sample index.</param>
      <param name="metadataIndex">Metadata index.</param>
      <returns>
        <para>Returns value of the metadata as long.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMergedSamplesMetadataCount(System.Int32,System.Int32)">
      <summary>
        <para>Returns metadata count associated with hierarchy item.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <param name="sampleIndex">Merged sample index.</param>
      <returns>
        <para>Returns metadata count.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMetadata(System.Int32,System.Int32)">
      <summary>
        <para>Returns string representation of hierarchy item metadata value.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <param name="index">Metadata index.</param>
      <returns>
        <para>Value of the metadata as string.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMetadataAsFloat(System.Int32,System.Int32)">
      <summary>
        <para>Returns float representation of hierarchy item metadata value.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <param name="index">Metadata index.</param>
      <returns>
        <para>Value of the metadata as float.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMetadataAsLong(System.Int32,System.Int32)">
      <summary>
        <para>Returns long representation of hierarchy item metadata value.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <param name="index">Metadata index.</param>
      <returns>
        <para>Value of the metadata as long.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemMetadataCount(System.Int32)">
      <summary>
        <para>Returns metadata count associated with hierarchy item.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <returns>
        <para>Metadata count.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemName(System.Int32)">
      <summary>
        <para>Gets the sample name associated with the item.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <returns>
        <para>Returns item name. Returns null if identifier is invalid.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemPath(System.Int32)">
      <summary>
        <para>Retrieves the hierarchy item path as a string. Each level is delimited by forward slashes ('/').</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetItemRawFrameDataViewIndices(System.Int32,System.Collections.Generic.List`1&lt;System.Int32&gt;)">
      <summary>
        <para>Retrieves the raw indices of all samples associated with this Hierarchy item identifier.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <param name="outSampleIndices">List filled with all profiler sample indices represented by the hierarchy item.</param>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.GetRootItemID">
      <summary>
        <para>Gets the identifier for the root tree item.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.HasItemChildren(System.Int32)">
      <summary>
        <para>Checks whether the tree item has children.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.ItemContainsRawFrameDataViewIndex(System.Int32,System.Int32)">
      <summary>
        <para>Checks if the provided raw sample index matches any of the raw sample indices associated with this Hierarchy item identifier.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <param name="sampleIndex">The particular profiler sample index that should be checked if it is represented by this hierarchy item.</param>
      <returns>
        <para>True if the sample index is represented by this hierarchy item, false if it is not.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.ResolveItemCallstack(System.Int32)">
      <summary>
        <para>Gets the callstack associated with the specified hierarchy item.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <returns>
        <para>Returns the callstack associated with the hierarchy item. Returns an empty string if the callstack is empty or if the method is unsuccessful.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.ResolveItemMergedSampleCallstack(System.Int32,System.Int32)">
      <summary>
        <para>Gets the callstack associated with a specific item sample.</para>
      </summary>
      <param name="id">Hierarchy item identifier.</param>
      <param name="sampleIndex">Merged sample index.</param>
      <returns>
        <para>Returns the callstack associated with the specific item sample. Returns an empty string if the callstack is empty or if the method is unsuccessful.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.HierarchyFrameDataView.Sort(System.Int32,System.Boolean)">
      <summary>
        <para>Sorts the hierarchy view.</para>
      </summary>
      <param name="sortColumn">
      </param>
      <param name="sortAscending">
      </param>
    </member>
    <member name="T:UnityEditor.Profiling.HierarchyFrameDataView.ViewModes">
      <summary>
        <para>The ViewModes enum defines data aggregation rules.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.HierarchyFrameDataView.ViewModes.Default">
      <summary>
        <para>Sets the View mode to raw hierarchy which represents each sample by an individual item.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.HierarchyFrameDataView.ViewModes.HideEditorOnlySamples">
      <summary>
        <para>Skips sub-hierarchies that represent Editor-only code paths.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.HierarchyFrameDataView.ViewModes.MergeSamplesWithTheSameName">
      <summary>
        <para>Merges and aggregates samples with the same name into a single hierarchy item.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Profiling.IProfilerFrameTimeViewSampleSelectionController">
      <summary>
        <para>This Interface defines an IProfilerFrameTimeSampleSelectionController object that you can use to control the selection in.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.IProfilerFrameTimeViewSampleSelectionController.focusedThreadIndex">
      <summary>
        <para>The index of the the thread selected to be displayed in the.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.IProfilerFrameTimeViewSampleSelectionController.sampleNameSearchFilter">
      <summary>
        <para>This filters the samples displayed in Hierarchy view to only include the names that include this string.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.IProfilerFrameTimeViewSampleSelectionController.selection">
      <summary>
        <para>Get the current selection in a frame time sample based.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Profiling.IProfilerFrameTimeViewSampleSelectionController.selectionChanged(System.Action`2&lt;UnityEditor.Profiling.IProfilerFrameTimeViewSampleSelectionController,UnityEditor.Profiling.ProfilerTimeSampleSelection&gt;)">
      <summary>
        <para>Calls the methods in its invocation list when the selection in this changes. The first parameter contains the Profiler module the selection change occurred in, the second parameter is the new selection.</para>
      </summary>
      <param name="value">The first parameter contains the Profiler module the selection change occurred in, the second parameter is the new selection.</param>
    </member>
    <member name="M:UnityEditor.Profiling.IProfilerFrameTimeViewSampleSelectionController.ClearSelection">
      <summary>
        <para>Call this method to clear the current selection in this frame time view based.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.IProfilerFrameTimeViewSampleSelectionController.SetSelection(UnityEditor.Profiling.ProfilerTimeSampleSelection)">
      <summary>
        <para>Set the current selection in a frame time sample based Profiler Module, such as the.</para>
      </summary>
      <param name="selection">A fully described selection created via a the ProfilerTimeSampleSelection constructor or previously retrieved via ProfilerWindow.selection.</param>
      <returns>
        <para>Returns true if the selection was successfully set, false if it was rejected because no fitting sample could be found.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.ArrayEntries`1">
      <summary>
        <para>An abstract helper class that provides methods to retrieve arrays of data elements of a generic type.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.ArrayEntries_1.GetEntries(System.UInt32,System.UInt32,T[]&amp;)">
      <summary>
        <para>Retrieves a subset of entries in an array.</para>
      </summary>
      <param name="indexStart">Index to start indexing the entries.</param>
      <param name="numEntries">Number of elements to retrieve.</param>
      <param name="dataOut">An array to store the returned data in.</param>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.ArrayEntries_1.GetNumEntries">
      <summary>
        <para>Gets the number of entries in the source array.</para>
      </summary>
      <returns>
        <para>Number of entries.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.ConnectionEntries">
      <summary>
        <para>A class that houses data entries related to Connection data, returned by PackedMemorySnapshot.connections.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.ConnectionEntries.from">
      <summary>
        <para>An array of indexes into the object array of GC handles referenced by the to property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.ConnectionEntries.to">
      <summary>
        <para>An array of GC handle objects.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.ConnectionEntries.GetNumEntries">
      <summary>
        <para>Gets the number of connection entries.</para>
      </summary>
      <returns>
        <para>The number of entries.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.FieldDescriptionEntries">
      <summary>
        <para>A class that houses Field Description entry data, returned by PackedMemorySnapshot.fieldDescriptions.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.FieldDescriptionEntries.fieldDescriptionName">
      <summary>
        <para>An array of field names.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.FieldDescriptionEntries.isStatic">
      <summary>
        <para>True if this field is static; otherwise false.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.FieldDescriptionEntries.offset">
      <summary>
        <para>An array of offset values from the start of the class for the fields referenced by the fieldDescriptionName property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.FieldDescriptionEntries.typeIndex">
      <summary>
        <para>The typeIndex into PackedMemorySnapshot.typeDescriptions of the type this field belongs to.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.FieldDescriptionEntries.GetNumEntries">
      <summary>
        <para>Gets the number of field description entries.</para>
      </summary>
      <returns>
        <para>The number of entries.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.GCHandleEntries">
      <summary>
        <para>A class that houses GCHandle data. Returned by PackedMemorySnapshot.gcHandles.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.GCHandleEntries.target">
      <summary>
        <para>An array of addresses for the managed objects that the GC handles are referencing.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.GCHandleEntries.GetNumEntries">
      <summary>
        <para>Gets the number of GCHandle entries.</para>
      </summary>
      <returns>
        <para>The number of entries.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.ManagedMemorySectionEntries">
      <summary>
        <para>A class that houses MemorySection data, returned by PackedMemorySnapshot.managedHeapSections and PackedMemorySnapshot.managedStacks.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.ManagedMemorySectionEntries.bytes">
      <summary>
        <para>An array of byte arrays that contain memory dumps.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.ManagedMemorySectionEntries.startAddress">
      <summary>
        <para>An array of addresses of the start location in memory of the memory dumps referenced by the startAddress property.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.ManagedMemorySectionEntries.GetNumEntries">
      <summary>
        <para>Gets the number of managed memory section entries.</para>
      </summary>
      <returns>
        <para>The number of entries.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.NativeAllocationEntries">
      <summary>
        <para>A class that houses native allocation entry data, returned by PackedMemorySnapshot.nativeAllocations.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeAllocationEntries.address">
      <summary>
        <para>An array that contains addresses of native memory allocations.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeAllocationEntries.allocationSiteId">
      <summary>
        <para>The allocation site id of the allocation, used by NativeAllocationSiteEntries.id.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeAllocationEntries.memoryRegionIndex">
      <summary>
        <para>An array of indexes that indicate which memory region, beginning region, inside region, or end region, that the memory allocation represents.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeAllocationEntries.overheadSize">
      <summary>
        <para>An array that specifies, in bytes, how much of the memory in the returned native allocation is not part of your request. The overhead memory is used for allocation headers and other metadata describing the allocation.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeAllocationEntries.paddingSize">
      <summary>
        <para>An array specifying, in bytes, the amount of padding used to align the returned native allocation.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeAllocationEntries.rootReferenceId">
      <summary>
        <para>An array of root reference IDs for the allocation. Corresponds to entries in NativeRootReferenceEntries.id array.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeAllocationEntries.size">
      <summary>
        <para>An array containing the total size, in bytes, of the native allocation.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.NativeAllocationEntries.GetNumEntries">
      <summary>
        <para>Gets the number allocation entries.</para>
      </summary>
      <returns>
        <para>The number of entries.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.NativeAllocationSiteEntries">
      <summary>
        <para>A class that houses native allocation site entries, returned by PackedMemorySnapshot.nativeAllocationSites.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeAllocationSiteEntries.callstackSymbols">
      <summary>
        <para>An array of callstack symbols corresponding to this allocation site, referring to NativeCallstackSymbolEntries.symbol.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeAllocationSiteEntries.id">
      <summary>
        <para>An array containing allocation site IDs.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeAllocationSiteEntries.memoryLabelIndex">
      <summary>
        <para>An array containing memory labels attached to allocation sites. Referenced by index into PackedMemorySnapshot.nativeMemoryLabels.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.NativeAllocationSiteEntries.GetNumEntries">
      <summary>
        <para>Gets the number of native allocation site entries.</para>
      </summary>
      <returns>
        <para>The number of entries.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.NativeCallstackSymbolEntries">
      <summary>
        <para>A class housing native callstack symbol data, returned by PackedMemorySnapshot.nativeCallstackSymbols.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeCallstackSymbolEntries.readableStackTrace">
      <summary>
        <para>An array of readable stack traces of the callback symbols.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeCallstackSymbolEntries.symbol">
      <summary>
        <para>An array of addresses to the callback symbols, referenced by the NativeAllocationSiteEntries.callstackSymbols property.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.NativeCallstackSymbolEntries.GetNumEntries">
      <summary>
        <para>Gets the number of callstack symbol entries.</para>
      </summary>
      <returns>
        <para>The number of entries.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.NativeMemoryLabelEntries">
      <summary>
        <para>A class that houses native memory label data, returned by PackedMemorySnapshot.nativeMemoryLabels.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeMemoryLabelEntries.memoryLabelName">
      <summary>
        <para>An array containing the names of the memory labels.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.NativeMemoryLabelEntries.GetNumEntries">
      <summary>
        <para>Gets the number of memory label entries.</para>
      </summary>
      <returns>
        <para>The number of entries.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.NativeMemoryRegionEntries">
      <summary>
        <para>A class housing native memory region data, returned by PackedMemorySnapshot.nativeMemoryRegions.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeMemoryRegionEntries.addressBase">
      <summary>
        <para>An array containing addresses of the memory regions. Non-leaf entries containing child memory regions are set to 0.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeMemoryRegionEntries.addressSize">
      <summary>
        <para>An array that contains the accumulated size, in bytes, including all of its children, of the memory region.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeMemoryRegionEntries.firstAllocationIndex">
      <summary>
        <para>An array that contains indexes into the PackedMemorySnapshot.nativeAllocations array that identify the first allocation that the memory region contains.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeMemoryRegionEntries.memoryRegionName">
      <summary>
        <para>An array containing the names of the memory regions.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeMemoryRegionEntries.numAllocations">
      <summary>
        <para>An array that contains the number of allocations, including children, that the memory regions contain.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeMemoryRegionEntries.parentIndex">
      <summary>
        <para>The parent of this memory region, referenced by index into this entry array. The root memory region contains parent index of -1.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.NativeMemoryRegionEntries.GetNumEntries">
      <summary>
        <para>Gets the number of memory region entries.</para>
      </summary>
      <returns>
        <para>The number of entries.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.NativeObjectEntries">
      <summary>
        <para>A class that houses native object data, returned by PackedMemorySnapshot.nativeObjects.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeObjectEntries.flags">
      <summary>
        <para>An array the contains the flags attached to the native memory objects referenced in the NativeObjectEntries.nativeObjectAddress array.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeObjectEntries.gcHandleIndex">
      <summary>
        <para>Index of a handle inside the PackedMemorySnapshot.gcHandles array.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeObjectEntries.hideFlags">
      <summary>
        <para>The hide flags attached to this native object.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeObjectEntries.instanceId">
      <summary>
        <para>The instance id of this native object.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeObjectEntries.nativeObjectAddress">
      <summary>
        <para>An array of memory addresses that point to native C++ objects. This matches the "m_CachePtr" field of a UnityEngine.Object.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeObjectEntries.nativeTypeArrayIndex">
      <summary>
        <para>An array of indexes into the PackedMemorySnapshot.nativeTypes array used to retrieve the the native C++ type description.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeObjectEntries.objectName">
      <summary>
        <para>An array containing the names of the native objects.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeObjectEntries.rootReferenceId">
      <summary>
        <para>An array containing the root reference ids of the native objects. Corresponds to entries in NativeRootReferenceEntries.id array.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeObjectEntries.size">
      <summary>
        <para>The size in bytes of this object.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.NativeObjectEntries.GetNumEntries">
      <summary>
        <para>Gets the number of native object entries.</para>
      </summary>
      <returns>
        <para>The number of entries.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.NativeRootReferenceEntries">
      <summary>
        <para>A class that houses native root reference data, returned by PackedMemorySnapshot.rootReferences.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeRootReferenceEntries.accumulatedSize">
      <summary>
        <para>An array that contains the accumulated sizes of all allocations registered for the root references.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeRootReferenceEntries.areaName">
      <summary>
        <para>An array that contains the area names of the root references.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeRootReferenceEntries.id">
      <summary>
        <para>An array that contains the IDs of the root references.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeRootReferenceEntries.objectName">
      <summary>
        <para>An array containing the object names of the root references.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.NativeRootReferenceEntries.GetNumEntries">
      <summary>
        <para>Gets the number of root reference entries.</para>
      </summary>
      <returns>
        <para>The number of entries.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.NativeTypeEntries">
      <summary>
        <para>A class that houses native type entries, returned by PackedMemorySnapshot.nativeTypes.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeTypeEntries.nativeBaseTypeArrayIndex">
      <summary>
        <para>An array of indexes into the PackedMemorySnapshot.nativeTypes array used to retrieve native C++ base class description.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.NativeTypeEntries.typeName">
      <summary>
        <para>An array of names of the C++ unity type.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.NativeTypeEntries.GetNumEntries">
      <summary>
        <para>Gets the number of native type entries.</para>
      </summary>
      <returns>
        <para>The number of entries.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.ObjectFlags">
      <summary>
        <para>Flags that can be set on a Native Object.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.Memory.Experimental.ObjectFlags.IsDontDestroyOnLoad">
      <summary>
        <para>Specifies that the object is marked as DontDestroyOnLoad.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.Memory.Experimental.ObjectFlags.IsManager">
      <summary>
        <para>Specifies that the object is marked as a manager.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.Memory.Experimental.ObjectFlags.IsPersistent">
      <summary>
        <para>Specifies that the object is set as persistent.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.ObjectFlagsExtensions">
      <summary>
        <para>An extension class that contains member functions to ObjectFlags.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.ObjectFlagsExtensions.IsDontDestroyOnLoad(UnityEditor.Profiling.Memory.Experimental.ObjectFlags)">
      <summary>
        <para>True if the object is marked as DontDestroyOnLoad; otherwise false.</para>
      </summary>
      <param name="flags">The ObjectFlags to compute from (accessible via this).</param>
      <returns>
        <para>Returns true if the object associated with this ObjectFlags is marked as DontDestroyOnLoad.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.ObjectFlagsExtensions.IsManager(UnityEditor.Profiling.Memory.Experimental.ObjectFlags)">
      <summary>
        <para>True if the object is a manager, otherwise false.</para>
      </summary>
      <param name="flags">The ObjectFlags to compute from (accessible via this).</param>
      <returns>
        <para>Returns true if the object associated with this ObjectFlags is a manager.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.ObjectFlagsExtensions.IsPersistent(UnityEditor.Profiling.Memory.Experimental.ObjectFlags)">
      <summary>
        <para>True if the object is marked as Persistent, otherwise false.</para>
      </summary>
      <param name="flags">The ObjectFlags to operate on (accessible via this).</param>
      <returns>
        <para>Returns true if the object associated with this ObjectFlags is marked as Persistent.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot">
      <summary>
        <para>PackedMemorySnapshot is a compact representation of a memory snapshot that a player has sent through the profiler connection.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.captureFlags">
      <summary>
        <para>Flags corresponding to the fields present in a returned memory snapshot.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.connections">
      <summary>
        <para>Connections is an array of from,to pairs that describe which things are keeping which other things alive.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.fieldDescriptions">
      <summary>
        <para>Array of Field Descriptions, referenced by Type Description entries by array index.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.filePath">
      <summary>
        <para>Path to the memory snapshot file.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.gcHandles">
      <summary>
        <para>All GC handles in use in the memorysnapshot.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.managedHeapSections">
      <summary>
        <para>Array of actual managed heap memory sections.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.managedStacks">
      <summary>
        <para>Array of managed stacks in a memory snapshot.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.metadata">
      <summary>
        <para>Meta data that was collected during memory snapshot capture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.nativeAllocations">
      <summary>
        <para>Array of native allocation data, captured in C++.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.nativeAllocationSites">
      <summary>
        <para>Array of native allocation site data, captured in C++.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.nativeCallstackSymbols">
      <summary>
        <para>Array of callstack symbols, used by native allocation site data.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.nativeMemoryLabels">
      <summary>
        <para>Array of memory labels, used by native allocation site data.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.nativeMemoryRegions">
      <summary>
        <para>Array of native memory regions, which houses native allocations.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.nativeObjects">
      <summary>
        <para>All native C++ objects that were loaded at time of the snapshot.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.nativeRootReferences">
      <summary>
        <para>Array of native root references, which represent ownership of native allocation data.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.nativeTypes">
      <summary>
        <para>Descriptions of all the C++ unity types the profiled player knows about.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.recordDate">
      <summary>
        <para>The time and date at which the snapshot was recorded.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.typeDescriptions">
      <summary>
        <para>An array of indexes into PackedMemorySnapshot.typeDescriptions indetifying the type this field belongs to.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.version">
      <summary>
        <para>The current snapshot format version.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.virtualMachineInformation">
      <summary>
        <para>Information about the virtual machine running executing the managed code inside the player.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.Convert(UnityEditor.MemoryProfiler.PackedMemorySnapshot,System.String)">
      <summary>
        <para>Converts the specified old format MemoryProfiler.PackedMemorySnapshot object to a new PackedMemorySnapshot format object and writes it to the location and file name specified the the write path.</para>
      </summary>
      <param name="snapshot">The old format snapshot object.</param>
      <param name="writePath">Destination path and file name for the file containing the converted snapshot.</param>
      <returns>
        <para>True if the conversion was successful; otherwise false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.Dispose">
      <summary>
        <para>Disposes of an existing PackedMemorySnapshot object and closes the file reader.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.Load(System.String)">
      <summary>
        <para>Load memory snapshot from given file path.</para>
      </summary>
      <param name="path">An absolute file path to load a snapshot file from.</param>
      <returns>
        <para>Memory snapshot.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot.Save(UnityEditor.Profiling.Memory.Experimental.PackedMemorySnapshot,System.String)">
      <summary>
        <para>Copy the memory snapshot file to the given file path.</para>
      </summary>
      <param name="snapshot">Source memory snapshot.</param>
      <param name="writePath">Where to create copy of memory snapshot.</param>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.TypeDescriptionEntries">
      <summary>
        <para>A class that houses type description entries, returned from PackedMemorySnapshot.typeDescriptions.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.TypeDescriptionEntries.assembly">
      <summary>
        <para>Name of the assembly this type was loaded from.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.TypeDescriptionEntries.baseOrElementTypeIndex">
      <summary>
        <para>The base type for this type, pointed to by an index into PackedMemorySnapshot.typeDescriptions.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.TypeDescriptionEntries.fieldIndices">
      <summary>
        <para>An array containing indices pointing to descriptions of all fields of this type, accessible from PackedMemorySnapshot.fieldDescriptions.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.TypeDescriptionEntries.flags">
      <summary>
        <para>Flags set for this type description, that define whether this type is an array or a value type, and the array rank of the type.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.TypeDescriptionEntries.size">
      <summary>
        <para>Size in bytes of an instance of this type. If this type is an array type, this describes the amount of bytes a single element in the array will take up.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.TypeDescriptionEntries.staticFieldBytes">
      <summary>
        <para>The actual contents of the bytes that store this types static fields, at the point of time when the snapshot was taken.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.TypeDescriptionEntries.typeDescriptionName">
      <summary>
        <para>The name of this type.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.TypeDescriptionEntries.typeIndex">
      <summary>
        <para>The type index of this type. This index is an index into the PackedMemorySnapshot.typeDescriptions array.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.TypeDescriptionEntries.typeInfoAddress">
      <summary>
        <para>The address in memory that contains the description of this type inside the virtual machine. This can be used to match managed objects in the heap to their corresponding TypeDescription, as the first pointer of a managed object points to its type description.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.TypeDescriptionEntries.GetNumEntries">
      <summary>
        <para>The number of type description entries.</para>
      </summary>
      <returns>
        <para>The number of entries.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.TypeFlags">
      <summary>
        <para>An enum encoding information for a type description about whether it is a value type or an array type, and the rank of the array if the type is an array. Returned by TypeDescriptionEntries.flags.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.Memory.Experimental.TypeFlags.kArray">
      <summary>
        <para>Set if this type is an array.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.Memory.Experimental.TypeFlags.kArrayRankMask">
      <summary>
        <para>If TypeFlags.kArray is set, the enum masked by this value will return the rank of the array (1 for a 1-dimensional array, 2 for a 2-dimensional array, etc).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.Memory.Experimental.TypeFlags.kValueType">
      <summary>
        <para>Set if this value is a value type. If not set, the type is a reference type.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.TypeFlagsExtensions">
      <summary>
        <para>An extension class that contains member functions to TypeFlags.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.TypeFlagsExtensions.ArrayRank(UnityEditor.Profiling.Memory.Experimental.TypeFlags)">
      <summary>
        <para>If the type is an array type, retrieves the array rank of the type flags.</para>
      </summary>
      <param name="flags">The TypeFlags to compute the array rank of (assessible via this).</param>
      <returns>
        <para>The array rank encoded in the Type Flags.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.TypeFlagsExtensions.IsArray(UnityEditor.Profiling.Memory.Experimental.TypeFlags)">
      <summary>
        <para>Returns whether the flag describes an array type.</para>
      </summary>
      <param name="flags">The TypeFlags to compute from (accessible via this).</param>
      <returns>
        <para>Returns true if the Type associated with this TypeFlags is an array.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.Memory.Experimental.TypeFlagsExtensions.IsValueType(UnityEditor.Profiling.Memory.Experimental.TypeFlags)">
      <summary>
        <para>Returns whether the type describes a value type.</para>
      </summary>
      <param name="flags">The TypeFlags to compute from (accessible via this).</param>
      <returns>
        <para>Returns true if the type associated with this TypeFlags is a value type (as opposed to a reference type).</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.Memory.Experimental.VirtualMachineInformation">
      <summary>
        <para>Information about a virtual machine that provided a memory snapshot.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.VirtualMachineInformation.allocationGranularity">
      <summary>
        <para>Allocation granularity in bytes used by the virtual machine allocator.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.VirtualMachineInformation.arrayBoundsOffsetInHeader">
      <summary>
        <para>Offset in bytes inside the object header of an array object where the bounds of the array is stored.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.VirtualMachineInformation.arrayHeaderSize">
      <summary>
        <para>Size in bytes of the header of an array object.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.VirtualMachineInformation.arraySizeOffsetInHeader">
      <summary>
        <para>Offset in bytes inside the object header of an array object where the size of the array is stored.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.VirtualMachineInformation.objectHeaderSize">
      <summary>
        <para>Size in bytes of the header of each managed object.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.Memory.Experimental.VirtualMachineInformation.pointerSize">
      <summary>
        <para>Size in bytes of a pointer.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Profiling.ProfilerCategoryInfo">
      <summary>
        <para>Category information descriptor structure.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.ProfilerCategoryInfo.color">
      <summary>
        <para>The color of the Profiler category, as a Color32.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.ProfilerCategoryInfo.flags">
      <summary>
        <para>Flags for showing if the Category is user defined or built into Unity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.ProfilerCategoryInfo.id">
      <summary>
        <para>Id used by Unity for tracking the Category.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.ProfilerCategoryInfo.name">
      <summary>
        <para>The name used by Unity for the Category.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Profiling.ProfilerEditorUtility">
      <summary>
        <para>A Utility class for Profiler tooling in the Unity Editor.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.ProfilerEditorUtility.SetSelection(UnityEditor.Profiling.IProfilerFrameTimeViewSampleSelectionController,System.String,System.Int64,System.String,System.String,System.UInt64)">
      <summary>
        <para>Set the current selection in a frame time sample based Profiler Module, such as the.</para>
      </summary>
      <param name="controller">The controller object of the Profiler module whose selection you want to set. When the value is null, Unity throws a NullArgumentException.</param>
      <param name="markerNameOrMarkerNamePath">The name of the sample to be selected, or the names of all samples in the sample stack. Separate each name with a , ending on the sample that should be selected. Do not add a trailing . If Unity cannot find a sample that matches this name or sample stack, it does not set a selection and this method returns false. When this value is null or an empty string, Unity throws an ArgumentException.</param>
      <param name="frameIndex">The 0 based frame index. This value defaults to -1 which means the selection is set on the currently shown frame. Note that the Profiler Window UI shows the frame index as n+1. When this value is outside of the range described by ProfilerWindow.firstAvailableFrameIndex and ProfilerWindow.lastAvailableFrameIndex, or not -1, Unity throws an ArgumentOutOfRangeException.</param>
      <param name="threadGroupName">The name of the thread group. The parameter defaults to an empty string. Null or an empty string signify that the thread isn't part of a thread group. "Job", "Loading" and "Scripting Threads" are examples of such thread group names.</param>
      <param name="threadName">The Name of the thread, e.g. "Main Thread", "Render Thread" or "Worker 0". This parameter defaults to "Main Thread". When this value is null or an empty string, Unity throws an ArgumentException.</param>
      <param name="threadId">The ID of the thread. When the default value of FrameDataView.invalidThreadId is passed, Unity searches for the sample in the first thread matching the provided threadGroupName and threadName. Specify this threadId if there are multiple threads with the same name. Use a RawFrameDataView.threadId or HierarchyFrameDataView.threadId to retrieve the ID to a specific thread, if you need it to be specific.</param>
      <returns>
        <para>Returns true if the selection was successfully set, false if it was rejected because no fitting sample could be found.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.ProfilerEditorUtility.SetSelection(UnityEditor.Profiling.IProfilerFrameTimeViewSampleSelectionController,System.Int64,System.String,System.String,System.String,System.String,System.UInt64)">
      <summary>
        <para>Set the current selection in a frame time sample based Profiler Module, such as the.</para>
      </summary>
      <param name="controller">The controller object of the Profiler module whose selection you want to set. When the value is null, Unity throws a NullArgumentException.</param>
      <param name="frameIndex">The 0 based frame index. Note that the Profiler Window UI shows the frame index as n+1. When this value is outside of the range described by ProfilerWindow.firstAvailableFrameIndex and ProfilerWindow.lastAvailableFrameIndex, or smaller than 0, Unity throws an ArgumentOutOfRangeException.</param>
      <param name="threadGroupName">The name of the thread group. Null or an empty string signify that the thread isn't part of a thread group. "Job", "Loading" and "Scripting Threads" are examples of such thread group names.</param>
      <param name="threadName">The Name of the thread, e.g. "Main Thread", "Render Thread" or "Worker 0". When this value is null or an empty string, Unity throws an ArgumentException.</param>
      <param name="sampleName">The name of the sample to select. If Unity cannot find a sample that matches this name, it does not set a selection and this method returns false. When this value is null or an empty string, Unity throws an ArgumentNullException or ArgumentException respectively.</param>
      <param name="markerNamePath">The names of all samples in the sample stack, each separated by a , that define the base path for the search. Similar to a file folder structure, this base path defines where Unity looks for a sample which matches the sampleName. The searched sampleName can be the last item in that marker path or any child sample of it. Do not add a trailing . If no sample can be found matching this sample stack path and the sampleName, no selection is set and this method returns false. This defaults to null which means no requirement is set on the sample's sample stack and the first sample fitting the sampleName is selected.</param>
      <param name="threadId">The ID of the thread. When the default value of FrameDataView.invalidThreadId is passed, Unity searches for the sample in the first thread matching the provided threadGroupName and threadName. Specify this threadId if there are multiple threads with the same name. Use a RawFrameDataView.threadId or HierarchyFrameDataView.threadId to retrieve the ID to a specific thread, if you need it to be specific.</param>
      <param name="sampleMarkerId">Use HierarchyFrameDataView or RawFrameDataView to get the Marker Ids. When no sample can be found matching this sample stack path and the sampleMarkerId, no selection is set and this method returns false.</param>
      <param name="markerIdPath">A list of Profiler marker IDs for all samples in the sample stack, that define the base path for the search. Similar to a file folder structure, this base path defines where Unity looks for a sample which matches the sampleMarkerId. The searched sampleMarkerId can be the last item in that marker path or any child sample of it. If no sample can be found matching this sample stack path and the sampleMarkerId, no selection is set and this method returns false. This defaults to null which means no requirement is set on the sample's sample stack and the first sample fitting the sampleMarkerId is selected.</param>
      <returns>
        <para>Returns true if the selection was successfully set, false if it was rejected because no fitting sample could be found.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.ProfilerEditorUtility.SetSelection(UnityEditor.Profiling.IProfilerFrameTimeViewSampleSelectionController,System.Int64,System.String,System.String,System.Int32,System.Collections.Generic.List`1&lt;System.Int32&gt;,System.UInt64)">
      <summary>
        <para>Set the current selection in a frame time sample based Profiler Module, such as the.</para>
      </summary>
      <param name="controller">The controller object of the Profiler module whose selection you want to set. When the value is null, Unity throws a NullArgumentException.</param>
      <param name="frameIndex">The 0 based frame index. Note that the Profiler Window UI shows the frame index as n+1. When this value is outside of the range described by ProfilerWindow.firstAvailableFrameIndex and ProfilerWindow.lastAvailableFrameIndex, or smaller than 0, Unity throws an ArgumentOutOfRangeException.</param>
      <param name="threadGroupName">The name of the thread group. Null or an empty string signify that the thread isn't part of a thread group. "Job", "Loading" and "Scripting Threads" are examples of such thread group names.</param>
      <param name="threadName">The Name of the thread, e.g. "Main Thread", "Render Thread" or "Worker 0". When this value is null or an empty string, Unity throws an ArgumentException.</param>
      <param name="sampleName">The name of the sample to select. If Unity cannot find a sample that matches this name, it does not set a selection and this method returns false. When this value is null or an empty string, Unity throws an ArgumentNullException or ArgumentException respectively.</param>
      <param name="markerNamePath">The names of all samples in the sample stack, each separated by a , that define the base path for the search. Similar to a file folder structure, this base path defines where Unity looks for a sample which matches the sampleName. The searched sampleName can be the last item in that marker path or any child sample of it. Do not add a trailing . If no sample can be found matching this sample stack path and the sampleName, no selection is set and this method returns false. This defaults to null which means no requirement is set on the sample's sample stack and the first sample fitting the sampleName is selected.</param>
      <param name="threadId">The ID of the thread. When the default value of FrameDataView.invalidThreadId is passed, Unity searches for the sample in the first thread matching the provided threadGroupName and threadName. Specify this threadId if there are multiple threads with the same name. Use a RawFrameDataView.threadId or HierarchyFrameDataView.threadId to retrieve the ID to a specific thread, if you need it to be specific.</param>
      <param name="sampleMarkerId">Use HierarchyFrameDataView or RawFrameDataView to get the Marker Ids. When no sample can be found matching this sample stack path and the sampleMarkerId, no selection is set and this method returns false.</param>
      <param name="markerIdPath">A list of Profiler marker IDs for all samples in the sample stack, that define the base path for the search. Similar to a file folder structure, this base path defines where Unity looks for a sample which matches the sampleMarkerId. The searched sampleMarkerId can be the last item in that marker path or any child sample of it. If no sample can be found matching this sample stack path and the sampleMarkerId, no selection is set and this method returns false. This defaults to null which means no requirement is set on the sample's sample stack and the first sample fitting the sampleMarkerId is selected.</param>
      <returns>
        <para>Returns true if the selection was successfully set, false if it was rejected because no fitting sample could be found.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Profiling.ProfilerTimeSampleSelection">
      <summary>
        <para>An object describing a selection made in a frame time sample based.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.ProfilerTimeSampleSelection.frameIndex">
      <summary>
        <para>The 0 based frame index. Note that the Profiler Window UI shows the frame index as n+1.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.ProfilerTimeSampleSelection.markerNamePath">
      <summary>
        <para>A list of the names of all ProfilerMarker|ProfilerMarkers that make up the Sample Stack of this selection. Unity populates this list on a selection object if it was passed to IProfilerFrameTimeSampleSelectionController.SetSelection and was accepted as a valid selection.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.ProfilerTimeSampleSelection.markerPathDepth">
      <summary>
        <para>A shorthand for _markerNamePath.Count. When _markerNamePath is null, this value is 0. </para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.ProfilerTimeSampleSelection.rawSampleIndex">
      <summary>
        <para>The raw index of a sample, i.e. the index as if would be used with RawFrameDataView and NOT an Item ID as it would be used with HierarchyFrameDataView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.ProfilerTimeSampleSelection.rawSampleIndices">
      <summary>
        <para>A sample selected in Hierarchy view might correspond to multiple samples in RawFrameDataView. This is a list of all of these sample indices.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.ProfilerTimeSampleSelection.sampleDisplayName">
      <summary>
        <para>The name of the Sample as it is displayed in the. This might be a shorter version than the last item in _markerNamePath.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.ProfilerTimeSampleSelection.threadGroupName">
      <summary>
        <para>The name of the group of the thread this sample resides in. When the thread is not part of a thread group, this value is string.empty.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.ProfilerTimeSampleSelection.threadId">
      <summary>
        <para>The ID of the thread this sample resides in.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Profiling.ProfilerTimeSampleSelection.threadName">
      <summary>
        <para>The name of the thread this sample resides in.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.ProfilerTimeSampleSelection.#ctor(System.Int64,System.String,System.String,System.UInt64,System.Int32,System.String)">
      <summary>
        <para>Constructs a selection object that can be passed to IProfilerFrameTimeSampleSelectionController.SetSelection to change the selection.</para>
      </summary>
      <param name="frameIndex">The 0 based index of the frame the sample exists in. Note that the Profiler Window UI shows the frame index as n+1. When this value is outside of the range described by ProfilerWindow.firstAvailableFrameIndex and ProfilerWindow.lastAvailableFrameIndex, or smaller than 0, Unity will throw an ArgumentOutOfRangeException.</param>
      <param name="threadGroupName">The name of the thread group. An empty string, which means the thread isn't part of a thread group. "Job", "Loading" and "Scripting Threads" are examples of such thread group names.</param>
      <param name="threadName">The name of the thread, e.g. "Main Thread", "Render Thread" or "Worker 0". When this value is null or an empty string, Unity will throw an ArgumentException.</param>
      <param name="threadId">The ID of the thread. When the default value of FrameDataView.invalidThreadId is passed, Unity searches for the sample in the first thread matching the provided threadGroupName and threadName. Specify this threadId if there are multiple threads with the same name. Use a RawFrameDataView.threadId or HierarchyFrameDataView.threadId to retrieve the ID to a specific thread, if you need it to be specific.</param>
      <param name="rawSampleIndex">The raw index of a sample, i.e. the index as if would be used with RawFrameDataView and NOT an Item ID as it would be used with HierarchyFrameDataView. Use HierarchyFrameDataView.ViewMode.MergeSamplesWithTheSameName to get raw sample indices when working with HierarchyFrameDataView.</param>
      <param name="sampleName">The name of the sample. When this value is null or empty, it will be filled by Unity on making a valid selection by passing this object to IProfilerFrameTimeSampleSelectionController.SetSelection.</param>
      <param name="rawSampleIndices">A list of sample indices as used with RawFrameDataView and NOT a list of Item ID as would be used with HierarchyFrameDataView. Use HierarchyFrameDataView.ViewMode.MergeSamplesWithTheSameName to get raw sample indices when working with HierarchyFrameDataView. When this list is empty, Unity throws an ArgumentException.</param>
      <param name="selection">An existing selection to make a copy of. When this value is null, Unity throws an ArgumentNullException.</param>
    </member>
    <member name="M:UnityEditor.Profiling.ProfilerTimeSampleSelection.#ctor(System.Int64,System.String,System.String,System.UInt64,System.Collections.Generic.IList`1&lt;System.Int32&gt;,System.String)">
      <summary>
        <para>Constructs a selection object that can be passed to IProfilerFrameTimeSampleSelectionController.SetSelection to change the selection.</para>
      </summary>
      <param name="frameIndex">The 0 based index of the frame the sample exists in. Note that the Profiler Window UI shows the frame index as n+1. When this value is outside of the range described by ProfilerWindow.firstAvailableFrameIndex and ProfilerWindow.lastAvailableFrameIndex, or smaller than 0, Unity will throw an ArgumentOutOfRangeException.</param>
      <param name="threadGroupName">The name of the thread group. An empty string, which means the thread isn't part of a thread group. "Job", "Loading" and "Scripting Threads" are examples of such thread group names.</param>
      <param name="threadName">The name of the thread, e.g. "Main Thread", "Render Thread" or "Worker 0". When this value is null or an empty string, Unity will throw an ArgumentException.</param>
      <param name="threadId">The ID of the thread. When the default value of FrameDataView.invalidThreadId is passed, Unity searches for the sample in the first thread matching the provided threadGroupName and threadName. Specify this threadId if there are multiple threads with the same name. Use a RawFrameDataView.threadId or HierarchyFrameDataView.threadId to retrieve the ID to a specific thread, if you need it to be specific.</param>
      <param name="rawSampleIndex">The raw index of a sample, i.e. the index as if would be used with RawFrameDataView and NOT an Item ID as it would be used with HierarchyFrameDataView. Use HierarchyFrameDataView.ViewMode.MergeSamplesWithTheSameName to get raw sample indices when working with HierarchyFrameDataView.</param>
      <param name="sampleName">The name of the sample. When this value is null or empty, it will be filled by Unity on making a valid selection by passing this object to IProfilerFrameTimeSampleSelectionController.SetSelection.</param>
      <param name="rawSampleIndices">A list of sample indices as used with RawFrameDataView and NOT a list of Item ID as would be used with HierarchyFrameDataView. Use HierarchyFrameDataView.ViewMode.MergeSamplesWithTheSameName to get raw sample indices when working with HierarchyFrameDataView. When this list is empty, Unity throws an ArgumentException.</param>
      <param name="selection">An existing selection to make a copy of. When this value is null, Unity throws an ArgumentNullException.</param>
    </member>
    <member name="M:UnityEditor.Profiling.ProfilerTimeSampleSelection.#ctor(UnityEditor.Profiling.ProfilerTimeSampleSelection)">
      <summary>
        <para>Constructs a selection object that can be passed to IProfilerFrameTimeSampleSelectionController.SetSelection to change the selection.</para>
      </summary>
      <param name="frameIndex">The 0 based index of the frame the sample exists in. Note that the Profiler Window UI shows the frame index as n+1. When this value is outside of the range described by ProfilerWindow.firstAvailableFrameIndex and ProfilerWindow.lastAvailableFrameIndex, or smaller than 0, Unity will throw an ArgumentOutOfRangeException.</param>
      <param name="threadGroupName">The name of the thread group. An empty string, which means the thread isn't part of a thread group. "Job", "Loading" and "Scripting Threads" are examples of such thread group names.</param>
      <param name="threadName">The name of the thread, e.g. "Main Thread", "Render Thread" or "Worker 0". When this value is null or an empty string, Unity will throw an ArgumentException.</param>
      <param name="threadId">The ID of the thread. When the default value of FrameDataView.invalidThreadId is passed, Unity searches for the sample in the first thread matching the provided threadGroupName and threadName. Specify this threadId if there are multiple threads with the same name. Use a RawFrameDataView.threadId or HierarchyFrameDataView.threadId to retrieve the ID to a specific thread, if you need it to be specific.</param>
      <param name="rawSampleIndex">The raw index of a sample, i.e. the index as if would be used with RawFrameDataView and NOT an Item ID as it would be used with HierarchyFrameDataView. Use HierarchyFrameDataView.ViewMode.MergeSamplesWithTheSameName to get raw sample indices when working with HierarchyFrameDataView.</param>
      <param name="sampleName">The name of the sample. When this value is null or empty, it will be filled by Unity on making a valid selection by passing this object to IProfilerFrameTimeSampleSelectionController.SetSelection.</param>
      <param name="rawSampleIndices">A list of sample indices as used with RawFrameDataView and NOT a list of Item ID as would be used with HierarchyFrameDataView. Use HierarchyFrameDataView.ViewMode.MergeSamplesWithTheSameName to get raw sample indices when working with HierarchyFrameDataView. When this list is empty, Unity throws an ArgumentException.</param>
      <param name="selection">An existing selection to make a copy of. When this value is null, Unity throws an ArgumentNullException.</param>
    </member>
    <member name="T:UnityEditor.Profiling.RawFrameDataView">
      <summary>
        <para>Provides access to the Profiler data for a specific frame and thread.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.RawFrameDataView.invalidSampleIndex">
      <summary>
        <para>This constant defines a sample index that does not match any valid Profiler Sample.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Profiling.RawFrameDataView.FlowEvent">
      <summary>
        <para>This struct describes profiler flow and its relation to the specific sample in the frame.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.RawFrameDataView.FlowEvent.FlowEventType">
      <summary>
        <para>Use to determine flow event type.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.RawFrameDataView.FlowEvent.FlowId">
      <summary>
        <para>Flow identifier.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Profiling.RawFrameDataView.FlowEvent.ParentSampleIndex">
      <summary>
        <para>Use to determine the sample index the flow event belongs to.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetFlowEvents(System.Collections.Generic.List`1&lt;UnityEditor.Profiling.RawFrameDataView/FlowEvent&gt;)">
      <summary>
        <para>Gets all flow events for the current frame and thread.</para>
      </summary>
      <param name="outFlowEvents">Returns the list of all profiler flow events for the current frame and thread.</param>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleCallstack(System.Int32,System.Collections.Generic.List`1&lt;System.UInt64&gt;)">
      <summary>
        <para>Gets the callstack associated with the specified sample.</para>
      </summary>
      <param name="sampleIndex">Index of the Profiler sample.</param>
      <param name="outCallstack">List filled with callstack pointers as a result of a method call.</param>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleCategoryIndex(System.Int32)">
      <summary>
        <para>Gets Profiler marker category for the specific sample.</para>
      </summary>
      <param name="sampleIndex">Index of the Profiler sample.</param>
      <returns>
        <para>Returns Profiler category index.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleChildrenCount(System.Int32)">
      <summary>
        <para>Gets amount of child samples for the specific sample.</para>
      </summary>
      <param name="sampleIndex">Index of the Profiler sample.</param>
      <returns>
        <para>Returns amount of child samples.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleChildrenCountRecursive(System.Int32)">
      <summary>
        <para>Gets amount of direct and indirect child samples for the specific sample.</para>
      </summary>
      <param name="sampleIndex">Index of the Profiler sample.</param>
      <returns>
        <para>Returns amount of direct and indirect child samples.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleFlags(System.Int32)">
      <summary>
        <para>Gets Profiler marker flags for the specific sample.</para>
      </summary>
      <param name="sampleIndex">Index of the Profiler sample.</param>
      <returns>
        <para>Returns Profiler marker flags.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleFlowEvents(System.Int32,System.Collections.Generic.List`1&lt;UnityEditor.Profiling.RawFrameDataView/FlowEvent&gt;)">
      <summary>
        <para>Gets the flow events that originate from the specific sample.</para>
      </summary>
      <param name="sampleIndex">Index of the Profiler sample.</param>
      <param name="outFlowEvents">Returns the list of profiler flow events for the sample in the current frame and thread.</param>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleMarkerId(System.Int32)">
      <summary>
        <para>Gets Profiler marker indentifier which uniquely identifies sample name.</para>
      </summary>
      <param name="sampleIndex">Index of the Profiler sample.</param>
      <returns>
        <para>Returns Profiler marker indentifier. Returns invalidMarkerId for invalid index.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleMetadataAsDouble(System.Int32,System.Int32)">
      <summary>
        <para>Gets sample metadata value as double.</para>
      </summary>
      <param name="sampleIndex">Index of the Profiler sample.</param>
      <param name="metadataIndex">Metadata index.</param>
      <returns>
        <para>Returns double representation of sample metadata value.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleMetadataAsFloat(System.Int32,System.Int32)">
      <summary>
        <para>Gets sample metadata value as float.</para>
      </summary>
      <param name="sampleIndex">Index of the Profiler sample.</param>
      <param name="metadataIndex">Metadata index.</param>
      <returns>
        <para>Returns float representation of sample metadata value.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleMetadataAsInt(System.Int32,System.Int32)">
      <summary>
        <para>Gets sample metadata value as integer.</para>
      </summary>
      <param name="sampleIndex">Index of the Profiler sample.</param>
      <param name="metadataIndex">Metadata index.</param>
      <returns>
        <para>Returns integer representation of sample metadata value.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleMetadataAsLong(System.Int32,System.Int32)">
      <summary>
        <para>Gets sample metadata value as long.</para>
      </summary>
      <param name="sampleIndex">Index of the Profiler sample.</param>
      <param name="metadataIndex">Metadata index.</param>
      <returns>
        <para>Returns long representation of sample metadata value.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleMetadataAsString(System.Int32,System.Int32)">
      <summary>
        <para>Gets sample metadata value as string.</para>
      </summary>
      <param name="sampleIndex">Index of the Profiler sample.</param>
      <param name="metadataIndex">Metadata index.</param>
      <returns>
        <para>Returns string representation of sample metadata value.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleMetadataCount(System.Int32)">
      <summary>
        <para>Gets metadata count associated with the specific sample.</para>
      </summary>
      <param name="sampleIndex">Index of the Profiler sample.</param>
      <returns>
        <para>Amount of metadata values.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleName(System.Int32)">
      <summary>
        <para>Gets the name of the specific sample.</para>
      </summary>
      <param name="sampleIndex">Index of the Profiler sample.</param>
      <returns>
        <para>Returns sample name. Returns null if sample index is invalid.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleStartTimeMs(System.Int32)">
      <summary>
        <para>Gets the start time of the sample. The amount of time is expressed in milliseconds.</para>
      </summary>
      <param name="sampleIndex">Index of the Profiler sample.</param>
      <returns>
        <para>Returns sample start time in milliseconds.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleStartTimeNs(System.Int32)">
      <summary>
        <para>Gets the start time of the sample. The amount of time is expressed in nanoseconds.</para>
      </summary>
      <param name="sampleIndex">Index of the Profiler sample.</param>
      <returns>
        <para>Returns sample start time in nanoseconds.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleTimeMs(System.Int32)">
      <summary>
        <para>Gets the duration of sample. The amount of time is expressed in milliseconds.</para>
      </summary>
      <param name="sampleIndex">Index of the Profiler sample.</param>
      <returns>
        <para>Returns sample duration in milliseconds.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Profiling.RawFrameDataView.GetSampleTimeNs(System.Int32)">
      <summary>
        <para>Gets the duration of sample. The amount of time is expressed in nanoseconds.</para>
      </summary>
      <param name="sampleIndex">Index of the Profiler sample.</param>
      <returns>
        <para>Returns sample duration in nanoseconds.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Progress">
      <summary>
        <para>The Progress utility class reports the progress of asynchronous tasks to Unity.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Progress.added(System.Action`1&lt;UnityEditor.Progress/Item[]&gt;)">
      <summary>
        <para>An event raised when a new progress indicator starts.</para>
      </summary>
      <param name="value">Array of new progress indicators.</param>
    </member>
    <member name="P:UnityEditor.Progress.globalProgress">
      <summary>
        <para>Returns the global average progression of all running tasks.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.globalRemainingTime">
      <summary>
        <para>Returns the maximum time remaining for all running progress indicators.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Progress.removed(System.Action`1&lt;UnityEditor.Progress/Item[]&gt;)">
      <summary>
        <para>An event raised when a progress indicator is removed.</para>
      </summary>
      <param name="value">Array of removed progress indicators.</param>
    </member>
    <member name="P:UnityEditor.Progress.running">
      <summary>
        <para>Returns true if there is at least one running progress indicator, false otherwise.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Progress.updated(System.Action`1&lt;UnityEditor.Progress/Item[]&gt;)">
      <summary>
        <para>An event raised when a progress indicator's state updates.</para>
      </summary>
      <param name="value">Array of updated progress indicators.</param>
    </member>
    <member name="M:UnityEditor.Progress.Cancel(System.Int32)">
      <summary>
        <para>Cancels a runnning progress indicator, and invokes the cancel callback for the associated task.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <returns>
        <para>True if the associated task is cancelled, false if it cannot be cancelled.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.ClearRemainingTime(System.Int32)">
      <summary>
        <para>Resets the computation of a progress indicator's remaining time.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
    </member>
    <member name="M:UnityEditor.Progress.EnumerateItems">
      <summary>
        <para>Returns an enumerator to loop over all progress indicators.</para>
      </summary>
      <returns>
        <para>The enumerable progress indicators.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.Exists(System.Int32)">
      <summary>
        <para>Checks whether a progress indicator with the specified ID exists.</para>
      </summary>
      <param name="id">The unique ID to search for.</param>
      <returns>
        <para>True if the progress indicator exists, false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.Finish(System.Int32,UnityEditor.Progress/Status)">
      <summary>
        <para>Marks the progress indicator as finished.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <param name="status">The status of the associated task when the progress indicator finishes. Indicates whether the task succeeded, failed, or was canceled.</param>
    </member>
    <member name="M:UnityEditor.Progress.GetCount">
      <summary>
        <para>Gets the number of available progress indicators.</para>
      </summary>
      <returns>
        <para>The number of available progress indicators.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetCountPerStatus">
      <summary>
        <para>For each available status, gets the number of progress indicators with that status.</para>
      </summary>
      <returns>
        <para>An array that contains the count of progress indicators per status. Each index maps a single status from the Progress.Status enum.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetCurrentStep(System.Int32)">
      <summary>
        <para>Gets the current step for a progress indicator.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <returns>
        <para>The current step.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetDescription(System.Int32)">
      <summary>
        <para>Gets a progress indicator's description.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <returns>
        <para>The description, if one exists.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetId(System.Int32)">
      <summary>
        <para>Finds a progress indicator's unique ID using its index in the set of all available progress indicators.</para>
      </summary>
      <param name="index">The valid index for a progress indicator.</param>
      <returns>
        <para>The progress indicator's unique ID, or -1 if the unique ID is not available.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetName(System.Int32)">
      <summary>
        <para>Gets a progress indicator's name.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <returns>
        <para>The matching progress indicator's name.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetOptions(System.Int32)">
      <summary>
        <para>Gets the options that you specified when you started the progress indicator.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <returns>
        <para>The progress indicator's option flags.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetParentId(System.Int32)">
      <summary>
        <para>Gets the unique ID of the progress indicator's parent, if any.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <returns>
        <para>The unique ID of the progress indicator's parent. If the progress indicator is not a child of any other progress indicators, returns -1.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetPriority(System.Int32)">
      <summary>
        <para>Gets a progress indicator's priority.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <returns>
        <para>The priority.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetProgress(System.Int32)">
      <summary>
        <para>Gets a progress indicator's progress.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <returns>
        <para>The current progress.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetProgressById(System.Int32)">
      <summary>
        <para>Gets information about a progress indicator.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <returns>
        <para>The progress indicator's data structure.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetRemainingTime(System.Int32)">
      <summary>
        <para>Gets a progress indicator's remaining time, in seconds.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <returns>
        <para>The number of seconds remaining.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetRunningProgressCount">
      <summary>
        <para>Gets the number of active or running progress indicators.</para>
      </summary>
      <returns>
        <para>The number of active and running progress indicators.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetStartDateTime(System.Int32)">
      <summary>
        <para>Gets the timestamp of when the progress indicator started.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <returns>
        <para>The progress indicator's start timestamp.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetStatus(System.Int32)">
      <summary>
        <para>Gets the progress indicator's status.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <returns>
        <para>The progress indicator's current status.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetStepLabel(System.Int32)">
      <summary>
        <para>Gets the label that displays a progress indicator's steps.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <returns>
        <para>The step label.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetTimeDisplayMode(System.Int32)">
      <summary>
        <para>Get a progress indicator's time display mode.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <returns>
        <para>The progress indicator's time display mode.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetTotalSteps(System.Int32)">
      <summary>
        <para>Gets the total number of steps, from start to finish, for a progress indicator.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <returns>
        <para>The number of steps.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.GetUpdateDateTime(System.Int32)">
      <summary>
        <para>Gets the time that the progress indicator last changed, or finished.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <returns>
        <para>The timestamp of the progress indicator's last update.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.IsCancellable(System.Int32)">
      <summary>
        <para>Indicates whether you can cancel the progress indicator's associated task.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <returns>
        <para>True if you can cancel the task, false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.IsPausable(System.Int32)">
      <summary>
        <para>Indicates whether you can pause the progress indicator's task.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <returns>
        <para>True if you can pause the task, false otherwise.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Progress.Item">
      <summary>
        <para>A data structure that provides information about a progress indicator.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.cancellable">
      <summary>
        <para>Returns true if the progress indicator's associated event can be canceled.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.currentStep">
      <summary>
        <para>Returns the current step for this progress indicator.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.description">
      <summary>
        <para>Returns the progress indicator's description.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.elapsedTime">
      <summary>
        <para>Returns the number of seconds that the progress indicator has been running for.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.exists">
      <summary>
        <para>Checks whether the progress indicator exists.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.finished">
      <summary>
        <para>Returns true if the progress indicator is finished, but not removed.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.id">
      <summary>
        <para>Returns the progress indicator's unique identifier.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.indefinite">
      <summary>
        <para>Returns true if the progress indicator is indefinite.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.name">
      <summary>
        <para>Returns the progress indicator's name.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.options">
      <summary>
        <para>Returns the option flags used to start the progress indicator.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.parentId">
      <summary>
        <para>Returns the unique ID of the progress indicator's parent, or -1 if the progress indicator is not a child of another progress indicator.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.pausable">
      <summary>
        <para>Returns true if the progress indicator's task can be paused.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.paused">
      <summary>
        <para>Returns true if the progress indicator is paused.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.priority">
      <summary>
        <para>Returns the progress indicator's priority.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.progress">
      <summary>
        <para>Returns the progress value of a progress indicator's associated task.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.remainingTime">
      <summary>
        <para>Returns this progress indicator's remaining time to completion.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.responding">
      <summary>
        <para>Returns true if progress is ongoing, false if the progress indicator has not received any progress report for more than 5 seconds.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.running">
      <summary>
        <para>Returns true if the progress indicator is running and active.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.startTime">
      <summary>
        <para>Returns the time when the progress indicator started.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.status">
      <summary>
        <para>Returns the progress indicator's status.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.stepLabel">
      <summary>
        <para>Returns the label that displays the progress indicator's steps.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.timeDisplayMode">
      <summary>
        <para>Returns the progress indicator's time display mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.totalSteps">
      <summary>
        <para>Returns the total number of steps, from start to finish, for this progress indicator.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Progress.Item.updateTime">
      <summary>
        <para>Returns the last time the progress indicator was updated.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Progress.Item.Cancel">
      <summary>
        <para>Cancels a running progress indicator.</para>
      </summary>
      <returns>
        <para>True if the associated task is cancelled, false if something prevents it from being cancelled.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.Item.ClearRemainingTime">
      <summary>
        <para>Resets the computation of the progress indicator's remaining time.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Progress.Item.Finish(UnityEditor.Progress/Status)">
      <summary>
        <para>Marks the progress indicator as finished.</para>
      </summary>
      <param name="finishedStatus">The status of the associated task when the progress indicator finishes. Indicates whether the task succeeded, failed, or was canceled.</param>
    </member>
    <member name="M:UnityEditor.Progress.Item.Pause">
      <summary>
        <para>Pauses a running progress indicator.</para>
      </summary>
      <returns>
        <para>True if the task is paused, false if it cannot be paused.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.Item.RegisterCancelCallback(System.Func`1&lt;System.Boolean&gt;)">
      <summary>
        <para>Registers a callback that is called when the user cancels a running progress indicator's associated task.</para>
      </summary>
      <param name="callback">The function called when a progress indicator's associated task is canceled.</param>
    </member>
    <member name="M:UnityEditor.Progress.Item.RegisterPauseCallback(System.Func`2&lt;System.Boolean,System.Boolean&gt;)">
      <summary>
        <para>Registers a callback that is called when a user pauses a running progress indicator's task.</para>
      </summary>
      <param name="callback">This function is called when a progress indicator's task is paused. It takes a boolean parameter that specifies whether the task needs to pause or resume. When the value is true, the task needs to pause. When the value is false, the task needs to resume. The function returns true if it actually performed the requested action.</param>
    </member>
    <member name="M:UnityEditor.Progress.Item.Remove">
      <summary>
        <para>Finishes and removes an active progress indicator.</para>
      </summary>
      <returns>
        <para>-1 if the progress indicator is removed, otherwise returns the progress indicator's id.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.Item.Report(System.Single)">
      <summary>
        <para>Reports the progress indicator's current status.</para>
      </summary>
      <param name="newProgress">A new progress value between 0 and 1.</param>
      <param name="newDescription">An updated description of the progress indicator. If the the progress status has not changed, or you do not set a description, this is null. To clear the current progress description, pass an empty string such as "".</param>
      <param name="newCurrentStep">An updated current step.</param>
      <param name="newTotalSteps">An updated total number of steps.</param>
    </member>
    <member name="M:UnityEditor.Progress.Item.Report(System.Single,System.String)">
      <summary>
        <para>Reports the progress indicator's current status.</para>
      </summary>
      <param name="newProgress">A new progress value between 0 and 1.</param>
      <param name="newDescription">An updated description of the progress indicator. If the the progress status has not changed, or you do not set a description, this is null. To clear the current progress description, pass an empty string such as "".</param>
      <param name="newCurrentStep">An updated current step.</param>
      <param name="newTotalSteps">An updated total number of steps.</param>
    </member>
    <member name="M:UnityEditor.Progress.Item.Report(System.Int32,System.Int32)">
      <summary>
        <para>Reports the progress indicator's current status.</para>
      </summary>
      <param name="newProgress">A new progress value between 0 and 1.</param>
      <param name="newDescription">An updated description of the progress indicator. If the the progress status has not changed, or you do not set a description, this is null. To clear the current progress description, pass an empty string such as "".</param>
      <param name="newCurrentStep">An updated current step.</param>
      <param name="newTotalSteps">An updated total number of steps.</param>
    </member>
    <member name="M:UnityEditor.Progress.Item.Report(System.Int32,System.Int32,System.String)">
      <summary>
        <para>Reports the progress indicator's current status.</para>
      </summary>
      <param name="newProgress">A new progress value between 0 and 1.</param>
      <param name="newDescription">An updated description of the progress indicator. If the the progress status has not changed, or you do not set a description, this is null. To clear the current progress description, pass an empty string such as "".</param>
      <param name="newCurrentStep">An updated current step.</param>
      <param name="newTotalSteps">An updated total number of steps.</param>
    </member>
    <member name="M:UnityEditor.Progress.Item.Resume">
      <summary>
        <para>Resumes a paused progress indicator.</para>
      </summary>
      <returns>
        <para>True if the task resumes, false if it cannot resume.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.Item.SetDescription(System.String)">
      <summary>
        <para>Sets the progress indicator's description. To clear the description pass null.</para>
      </summary>
      <param name="newDescription">The progress indicator's new description.</param>
    </member>
    <member name="M:UnityEditor.Progress.Item.SetPriority(System.Int32)">
      <summary>
        <para>Sets the progress indicator's priority.</para>
      </summary>
      <param name="priority">The priority.</param>
    </member>
    <member name="M:UnityEditor.Progress.Item.SetPriority(UnityEditor.Progress/Priority)">
      <summary>
        <para>Sets the progress indicator's priority.</para>
      </summary>
      <param name="priority">The priority.</param>
    </member>
    <member name="M:UnityEditor.Progress.Item.SetRemainingTime(System.Int64)">
      <summary>
        <para>Sets the progress indicator's remaining time, in seconds.</para>
      </summary>
      <param name="seconds">The progress indicator's remaining time, in seconds.</param>
    </member>
    <member name="M:UnityEditor.Progress.Item.SetStepLabel(System.String)">
      <summary>
        <para>Sets the label that displays the progress indicator's steps.</para>
      </summary>
      <param name="label">The steps label.</param>
    </member>
    <member name="M:UnityEditor.Progress.Item.SetTimeDisplayMode(UnityEditor.Progress/TimeDisplayMode)">
      <summary>
        <para>Set a progress indicator's time display mode.</para>
      </summary>
      <param name="mode">The progress indicator's time display mode.</param>
    </member>
    <member name="M:UnityEditor.Progress.Item.UnregisterCancelCallback">
      <summary>
        <para>Unregisters a previously registered progress cancellation callback.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Progress.Item.UnregisterPauseCallback">
      <summary>
        <para>Unregisters a previously registered progress pause callback.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Progress.Options">
      <summary>
        <para>Options that define how a progress indicator behaves.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.Options.Indefinite">
      <summary>
        <para>An indefinite progress indicator shows that the associated task is in progress, but does not show how close it is to completion.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.Options.Managed">
      <summary>
        <para>Unity manages progress indicators. When a domain reload happens, the system cancels tasks that support cancellation, and removes their progress indicators. This is the default for progress indicators started from C#.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.Options.None">
      <summary>
        <para>A progress indicator that starts with no other options activated. This is the default.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.Options.Sticky">
      <summary>
        <para>A sticky progress indicator displays progress information even after the task is complete. The system does not remove it automatically. You must remove it using a remove operation.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.Options.Synchronous">
      <summary>
        <para>A synchronous progress indicator updates the Editor UI as soon as it reports progress. This is the opposite of the default behavior, which is to report all progress asynchronously.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.Options.Unmanaged">
      <summary>
        <para>An unmanaged progress indicator is one that Unity does not manage. Unity does not cancel unmanaged progress indicators when a domain reload happens. This is the default behavior for internal-use progress indicators started from C++ code.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Progress.Pause(System.Int32)">
      <summary>
        <para>Pauses a runnning progress indicator, and invokes the pause callback for its task.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <returns>
        <para>True if the task is paused, false if it cannot be paused.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Progress.Priority">
      <summary>
        <para>An enumeration that defines task priorities.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.Priority.High">
      <summary>
        <para>A high priority task can be unresponsive, and is displayed in the global progress bar.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.Priority.Idle">
      <summary>
        <para>An idle priority task cannot be unresponsive, and is not displayed in the global progress bar.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.Priority.Low">
      <summary>
        <para>A low priority task cannot be unresponsive, but is displayed in the global progress bar.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.Priority.Normal">
      <summary>
        <para>A normal priority task can be unresponsive, and is displayed in the global progress bar.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.Priority.Unresponsive">
      <summary>
        <para>An unresponsive task is always shown as unresponsive.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Progress.RegisterCancelCallback(System.Int32,System.Func`1&lt;System.Boolean&gt;)">
      <summary>
        <para>Registers a callback that is called when the user cancels a running progress indicator's associated task.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <param name="callback">The function called when a progress indicator's associated task is canceled.</param>
    </member>
    <member name="M:UnityEditor.Progress.RegisterPauseCallback(System.Int32,System.Func`2&lt;System.Boolean,System.Boolean&gt;)">
      <summary>
        <para>Registers a callback that is called when the user pauses a running progress indicator's task.</para>
      </summary>
      <param name="callback">This function is called when a progress indicator's task is paused. It takes a boolean parameter that specifies whether the task needs to pause or resume. When the value is true, the task needs to pause. When the value is false, the task needs to resume. The function returns true if it actually performed the requested action.</param>
      <param name="id">The progress indicator's unique ID.</param>
    </member>
    <member name="M:UnityEditor.Progress.Remove(System.Int32)">
      <summary>
        <para>Finishes and removes an active progress indicator.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <param name="forceSynchronous">When you set this parameter to true it forces this method to remove the progress indicator synchronously.</param>
      <returns>
        <para>-1 if the progress indicator is removed. Otherwise, returns the progress indicator's ID.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.Remove(System.Int32,System.Boolean)">
      <summary>
        <para>Finishes and removes an active progress indicator.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <param name="forceSynchronous">When you set this parameter to true it forces this method to remove the progress indicator synchronously.</param>
      <returns>
        <para>-1 if the progress indicator is removed. Otherwise, returns the progress indicator's ID.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.Report(System.Int32,System.Single)">
      <summary>
        <para>Reports a running progress indicator's current status.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <param name="progress">A new progress value between 0 and 1.</param>
      <param name="description">An updated description of the progress indicator. If the the progress status has not changed, or you do not set a description, this is null. To clear the current progress description, pass an empty string such as "".</param>
      <param name="currentStep">An updated current step.</param>
      <param name="totalSteps">An updated total number of steps, from start to finish.</param>
    </member>
    <member name="M:UnityEditor.Progress.Report(System.Int32,System.Single,System.String)">
      <summary>
        <para>Reports a running progress indicator's current status.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <param name="progress">A new progress value between 0 and 1.</param>
      <param name="description">An updated description of the progress indicator. If the the progress status has not changed, or you do not set a description, this is null. To clear the current progress description, pass an empty string such as "".</param>
      <param name="currentStep">An updated current step.</param>
      <param name="totalSteps">An updated total number of steps, from start to finish.</param>
    </member>
    <member name="M:UnityEditor.Progress.Report(System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Reports a running progress indicator's current status.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <param name="progress">A new progress value between 0 and 1.</param>
      <param name="description">An updated description of the progress indicator. If the the progress status has not changed, or you do not set a description, this is null. To clear the current progress description, pass an empty string such as "".</param>
      <param name="currentStep">An updated current step.</param>
      <param name="totalSteps">An updated total number of steps, from start to finish.</param>
    </member>
    <member name="M:UnityEditor.Progress.Report(System.Int32,System.Int32,System.Int32,System.String)">
      <summary>
        <para>Reports a running progress indicator's current status.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <param name="progress">A new progress value between 0 and 1.</param>
      <param name="description">An updated description of the progress indicator. If the the progress status has not changed, or you do not set a description, this is null. To clear the current progress description, pass an empty string such as "".</param>
      <param name="currentStep">An updated current step.</param>
      <param name="totalSteps">An updated total number of steps, from start to finish.</param>
    </member>
    <member name="M:UnityEditor.Progress.Resume(System.Int32)">
      <summary>
        <para>Resumes a paused progress indicator, and invokes the pause callback for the associated task.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <returns>
        <para>True if the task resumes, false if it cannot resume.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Progress.SetDescription(System.Int32,System.String)">
      <summary>
        <para>Sets the progress indicator's description. To clear the description pass null.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <param name="description">The progress indicator's new description.</param>
    </member>
    <member name="M:UnityEditor.Progress.SetPriority(System.Int32,System.Int32)">
      <summary>
        <para>Sets a progress indicator's priority.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <param name="priority">The priority.</param>
    </member>
    <member name="M:UnityEditor.Progress.SetPriority(System.Int32,UnityEditor.Progress/Priority)">
      <summary>
        <para>Sets a progress indicator's priority.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <param name="priority">The priority.</param>
    </member>
    <member name="M:UnityEditor.Progress.SetRemainingTime(System.Int32,System.Int64)">
      <summary>
        <para>Sets the progress indicator's remaining time, in seconds.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <param name="seconds">The progress indicator's remaining time, in seconds.</param>
    </member>
    <member name="M:UnityEditor.Progress.SetStepLabel(System.Int32,System.String)">
      <summary>
        <para>Sets the label that displays a progress indicator's steps.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <param name="label">The steps label.</param>
    </member>
    <member name="M:UnityEditor.Progress.SetTimeDisplayMode(System.Int32,UnityEditor.Progress/TimeDisplayMode)">
      <summary>
        <para>Set a progress indicator's time display mode.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
      <param name="displayMode">The progress indicator's time display mode.</param>
    </member>
    <member name="M:UnityEditor.Progress.ShowDetails(System.Boolean)">
      <summary>
        <para>Opens the progress window for background tasks.</para>
      </summary>
      <param name="shouldReposition">To place the window in the bottom right corner of the main Editor window, pass True. To restore the last window position, pass False.</param>
    </member>
    <member name="M:UnityEditor.Progress.Start(System.String,System.String,UnityEditor.Progress/Options,System.Int32)">
      <summary>
        <para>This method starts a new progress indicator.</para>
      </summary>
      <param name="name">The progress indicator's name. You can display the name as a title in the progress window. Use / (slash) as a separator to group child progress indicators together.</param>
      <param name="description">The progress indicator's initial description. You can change it using Report or SetDescription.</param>
      <param name="parentId">The unique ID of the parent progress indicator, if any. If the progress indicator has no parent, pass -1.</param>
      <param name="options">The progress indicator's initial progress options.</param>
      <returns>
        <para>The newly created progress identifier. This identifier is used for all other APIs to update the progress status.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Progress.Status">
      <summary>
        <para>Indicates the status of a progress indicator's associated task.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.Status.Canceled">
      <summary>
        <para>Indicates that the task was canceled.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.Status.Failed">
      <summary>
        <para>Indicates that the task failed.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.Status.Paused">
      <summary>
        <para>Indicates that the task is paused.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.Status.Running">
      <summary>
        <para>Indicates that the task is still running.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.Status.Succeeded">
      <summary>
        <para>Indicates that the task succeeded.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Progress.TimeDisplayMode">
      <summary>
        <para>Specifies what kind of time information the progress indicator displays.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.TimeDisplayMode.NoTimeShown">
      <summary>
        <para>The progress indicator does not display any time information.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.TimeDisplayMode.ShowRemainingTime">
      <summary>
        <para>The progress indicator displays the time remaining.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Progress.TimeDisplayMode.ShowRunningTime">
      <summary>
        <para>The progress indicator displays the running time.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Progress.UnregisterCancelCallback(System.Int32)">
      <summary>
        <para>Unregisters a previously registered progress cancellation callback.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
    </member>
    <member name="M:UnityEditor.Progress.UnregisterPauseCallback(System.Int32)">
      <summary>
        <para>Unregisters a previously registered progress pause callback.</para>
      </summary>
      <param name="id">The progress indicator's unique ID.</param>
    </member>
    <member name="M:UnityEditor.ProjectWindowCallback.EndNameEditAction.Action(System.Int32,System.String,System.String)">
      <summary>
        <para>Unity calls this function when the user accepts an edited name, either by pressing the Enter key or by losing the keyboard input focus.</para>
      </summary>
      <param name="instanceId">The instance ID of the edited asset.</param>
      <param name="pathName">The path to the asset.</param>
      <param name="resourceFile">The resource file string argument passed to ProjectWindowUtil.StartNameEditingIfProjectWindowExists.</param>
    </member>
    <member name="M:UnityEditor.ProjectWindowCallback.EndNameEditAction.Cancelled(System.Int32,System.String,System.String)">
      <summary>
        <para>Unity calls this function when the user presses the Escape key to cancel editing a name.</para>
      </summary>
      <param name="instanceId">The instance ID of the asset that the user attempted to edit.</param>
      <param name="pathName">The path to the asset.</param>
      <param name="resourceFile">The resource file string argument passed to ProjectWindowUtil.StartNameEditingIfProjectWindowExists.</param>
    </member>
    <member name="T:UnityEditor.PropertyDrawer">
      <summary>
        <para>Base class to derive custom property drawers from. Use this to create custom drawers for your own Serializable classes or for script variables with custom PropertyAttributes.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PropertyDrawer.attribute">
      <summary>
        <para>The PropertyAttribute for the property. Not applicable for custom class drawers. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.PropertyDrawer.fieldInfo">
      <summary>
        <para>The reflection FieldInfo for the member this property represents. (Read Only)</para>
      </summary>
    </member>
    <member name="M:UnityEditor.PropertyDrawer.CanCacheInspectorGUI(UnityEditor.SerializedProperty)">
      <summary>
        <para>Override this method to determine whether the inspector GUI for your property can be cached.</para>
      </summary>
      <param name="property">The SerializedProperty to make the custom GUI for.</param>
      <returns>
        <para>Whether the drawer's UI can be cached.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PropertyDrawer.CreatePropertyGUI(UnityEditor.SerializedProperty)">
      <summary>
        <para>Override this method to make your own UIElements based GUI for the property.</para>
      </summary>
      <param name="property">The SerializedProperty to make the custom GUI for.</param>
      <returns>
        <para>The element containing the custom GUI.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PropertyDrawer.GetPropertyHeight(UnityEditor.SerializedProperty,UnityEngine.GUIContent)">
      <summary>
        <para>Override this method to specify how tall the GUI for this field is in pixels.</para>
      </summary>
      <param name="property">The SerializedProperty to make the custom GUI for.</param>
      <param name="label">The label of this property.</param>
      <returns>
        <para>The height in pixels.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.PropertyDrawer.OnGUI(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent)">
      <summary>
        <para>Override this method to make your own IMGUI based GUI for the property.</para>
      </summary>
      <param name="position">Rectangle on the screen to use for the property GUI.</param>
      <param name="property">The SerializedProperty to make the custom GUI for.</param>
      <param name="label">The label of this property.</param>
    </member>
    <member name="T:UnityEditor.PropertyModification">
      <summary>
        <para>Defines a single modified property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PropertyModification.objectReference">
      <summary>
        <para>The value being applied when it is an object reference (which can not be represented as a string).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PropertyModification.propertyPath">
      <summary>
        <para>Property path of the property being modified (Matches as SerializedProperty.propertyPath).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PropertyModification.target">
      <summary>
        <para>Object that will be modified.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PropertyModification.value">
      <summary>
        <para>The value being applied.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ProvisioningProfileType">
      <summary>
        <para>The type of the iOS provisioning profile if manual signing is used.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ProvisioningProfileType.Automatic">
      <summary>
        <para>The provisioning profile type will be determined automatically when building the Xcode project.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ProvisioningProfileType.Development">
      <summary>
        <para>Development provisioning profiles are used to install development apps on test devices.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ProvisioningProfileType.Distribution">
      <summary>
        <para>Distribution provisioning profiles can be used when uploading the app to the App Store or for Ad Hoc and in house distribution.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.PS4BuildSubtarget">
      <summary>
        <para>Type of build to generate.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PS4BuildSubtarget.Package">
      <summary>
        <para>Package build for installation on either a dev or test kit.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.PS4BuildSubtarget.PCHosted">
      <summary>
        <para>Build hosted on a PC, for file serving to a dev or test kit.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Purchasing.PurchasingSettings">
      <summary>
        <para>Editor API for the Unity Services editor feature. Normally Purchasing is enabled from the Services window, but if writing your own editor extension, this API can be used.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Purchasing.PurchasingSettings.enabled">
      <summary>
        <para>This Boolean field will cause the Purchasing feature in Unity to be enabled if true, or disabled if false.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.RemoveAssetOptions">
      <summary>
        <para>Options for removing assets</para>
      </summary>
    </member>
    <member name="F:UnityEditor.RemoveAssetOptions.DeleteAssets">
      <summary>
        <para>Delete the asset without moving it to the trash.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.RemoveAssetOptions.MoveAssetToTrash">
      <summary>
        <para>The asset should be moved to trash.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Rendering.AlbedoSwatchInfo">
      <summary>
        <para>Contains the custom albedo swatch data.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.AlbedoSwatchInfo.color">
      <summary>
        <para>Color of the albedo swatch that is shown in the physically based rendering validator user interface.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.AlbedoSwatchInfo.maxLuminance">
      <summary>
        <para>The maximum luminance value used to validate the albedo for the physically based rendering albedo validator.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.AlbedoSwatchInfo.minLuminance">
      <summary>
        <para>The minimum luminance value used to validate the albedo for the physically based rendering albedo validator.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.AlbedoSwatchInfo.name">
      <summary>
        <para>Name of the albedo swatch to show in the physically based renderer validator user interface.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Rendering.EditorCameraUtils">
      <summary>
        <para>Utilities for Camera rendering in the Editor.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Rendering.EditorCameraUtils.RenderToCubemap(UnityEngine.Camera,UnityEngine.Texture,System.Int32,UnityEditor.StaticEditorFlags)">
      <summary>
        <para>Renders this Camera into a static cubemap.</para>
      </summary>
      <param name="camera">The Camera to use during rendering.</param>
      <param name="target">The cubemap to render to.</param>
      <param name="faceMask">A bitmask which determines which of the six faces to render to.</param>
      <param name="culledFlags">The flags of objects to cull during rendering.</param>
      <returns>
        <para>If the render process succeeds, returns true. Otherwise, returns false.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.Rendering.EditorGraphicsSettings">
      <summary>
        <para>Editor-specific script interface for.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Rendering.EditorGraphicsSettings.albedoSwatches">
      <summary>
        <para>Returns an array of Rendering.AlbedoSwatchInfo.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Rendering.EditorGraphicsSettings.GetShaderSettingsForPlatform(UnityEditor.BuildTargetGroup,UnityEngine.Rendering.ShaderHardwareTier)">
      <summary>
        <para>Will return PlatformShaderSettings for given platform and shader hardware tier.</para>
      </summary>
      <param name="target">
      </param>
      <param name="tier">
      </param>
    </member>
    <member name="M:UnityEditor.Rendering.EditorGraphicsSettings.GetTierSettings(UnityEditor.Build.NamedBuildTarget,UnityEngine.Rendering.GraphicsTier)">
      <summary>
        <para>Returns TierSettings for a given build target and.</para>
      </summary>
      <param name="target">
      </param>
      <param name="tier">
      </param>
    </member>
    <member name="M:UnityEditor.Rendering.EditorGraphicsSettings.GetTierSettings(UnityEditor.BuildTargetGroup,UnityEngine.Rendering.GraphicsTier)">
      <summary>
        <para>Returns TierSettings for a given build target and.</para>
      </summary>
      <param name="target">
      </param>
      <param name="tier">
      </param>
    </member>
    <member name="M:UnityEditor.Rendering.EditorGraphicsSettings.GetTierSettings(UnityEditor.BuildTargetGroup,UnityEngine.Rendering.ShaderHardwareTier)">
      <summary>
        <para>TODO.</para>
      </summary>
      <param name="target">
      </param>
      <param name="tier">
      </param>
    </member>
    <member name="M:UnityEditor.Rendering.EditorGraphicsSettings.SetShaderSettingsForPlatform(UnityEditor.BuildTargetGroup,UnityEngine.Rendering.ShaderHardwareTier,UnityEditor.Rendering.PlatformShaderSettings)">
      <summary>
        <para>Allows you to set the PlatformShaderSettings for the specified platform and shader hardware tier.</para>
      </summary>
      <param name="target">
      </param>
      <param name="tier">
      </param>
      <param name="settings">
      </param>
    </member>
    <member name="M:UnityEditor.Rendering.EditorGraphicsSettings.SetTierSettings(UnityEditor.Build.NamedBuildTarget,UnityEngine.Rendering.GraphicsTier,UnityEditor.Rendering.TierSettings)">
      <summary>
        <para>Set the TierSettings for a given build target and.</para>
      </summary>
      <param name="target">
      </param>
      <param name="tier">
      </param>
      <param name="settings">
      </param>
    </member>
    <member name="M:UnityEditor.Rendering.EditorGraphicsSettings.SetTierSettings(UnityEditor.BuildTargetGroup,UnityEngine.Rendering.GraphicsTier,UnityEditor.Rendering.TierSettings)">
      <summary>
        <para>Set the TierSettings for a given build target and.</para>
      </summary>
      <param name="target">
      </param>
      <param name="tier">
      </param>
      <param name="settings">
      </param>
    </member>
    <member name="M:UnityEditor.Rendering.EditorGraphicsSettings.SetTierSettings(UnityEditor.BuildTargetGroup,UnityEngine.Rendering.ShaderHardwareTier,UnityEditor.Rendering.TierSettings)">
      <summary>
        <para>TODO.</para>
      </summary>
      <param name="target">
      </param>
      <param name="tier">
      </param>
      <param name="settings">
      </param>
    </member>
    <member name="T:UnityEditor.Rendering.PlatformShaderSettings">
      <summary>
        <para>Used to set up shader settings, per-platform and per-shader-hardware-tier.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.PlatformShaderSettings.cascadedShadowMaps">
      <summary>
        <para>Allows you to specify whether cascaded shadow maps should be used.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.PlatformShaderSettings.reflectionProbeBlending">
      <summary>
        <para>Allows you to specify whether Reflection Probes Blending should be enabled.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.PlatformShaderSettings.reflectionProbeBoxProjection">
      <summary>
        <para>Allows you to specify whether Reflection Probes Box Projection should be used.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.PlatformShaderSettings.standardShaderQuality">
      <summary>
        <para>Allows you to select Standard Shader Quality.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Rendering.RenderPipelineEditorUtility">
      <summary>
        <para>Helper class that contains a utility function on ScriptableRenderPipeline for Editor.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Rendering.RenderPipelineEditorUtility.FetchFirstCompatibleTypeUsingScriptableRenderPipelineExtension">
      <summary>
        <para>Returns the first type that is a child of TBaseClass and has a ScriptableRenderPipelineExtensionAttribute filter corresponding to the ScriptableRenderPipeline that you are using.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Rendering.ScriptableRenderPipelineExtensionAttribute">
      <summary>
        <para>Use this attribute to apply a condition to a filter that finds the class based on which ScriptableRenderPipeline you are currently using.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Rendering.ScriptableRenderPipelineExtensionAttribute.inUse">
      <summary>
        <para>Determines whether the current ScriptableRenderPipeline is the same type as the one given by the constructor. Returns true if the ScriptableRenderPipeline is of the type used when constructing the attribute. Otherwise, returns false.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Rendering.ScriptableRenderPipelineExtensionAttribute.#ctor(System.Type)">
      <summary>
        <para>Construct a ScriptableRenderPipelineExtensionAttribute.</para>
      </summary>
      <param name="renderPipelineAsset">Type inheriting from RenderPipelineAsset used for filtering.</param>
    </member>
    <member name="T:UnityEditor.Rendering.ShaderCompilerData">
      <summary>
        <para>Collection of data used for shader variants generation, including targeted platform data and the keyword set representing a specific shader variant.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Rendering.ShaderCompilerData.buildTarget">
      <summary>
        <para>The build target to compile the shader variant for. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Rendering.ShaderCompilerData.graphicsTier">
      <summary>
        <para> A GraphicsTier classifies low, medium and high performance hardware. You can only set a Graphics Tier in the Built-in Render Pipeline. </para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderCompilerData.platformKeywordSet">
      <summary>
        <para>A collection of Rendering.ShaderKeyword that represents a specific platform shader variant.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Rendering.ShaderCompilerData.shaderCompilerPlatform">
      <summary>
        <para>Shader compiler used to generate player data shader variants.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderCompilerData.shaderKeywordSet">
      <summary>
        <para>A collection of Rendering.ShaderKeyword that represents a specific shader variant.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Rendering.ShaderCompilerData.shaderRequirements">
      <summary>
        <para>Shader features required by a specific shader.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Rendering.ShaderCompilerMessageSeverity">
      <summary>
        <para>Indicates the severity of a message returned by the Unity Shader Compiler.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderCompilerMessageSeverity.Error">
      <summary>
        <para>Indicates that a message returned by the Unity Shader Compiler is an error and the compilation failed.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderCompilerMessageSeverity.Warning">
      <summary>
        <para>Indicates that a message returned by the Unity Shader Compiler is a warning.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Rendering.ShaderCompilerPlatform">
      <summary>
        <para>Shader compiler used to generate player data shader variants.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderCompilerPlatform.D3D">
      <summary>
        <para>Compiler used with Direct3D 11 and Direct3D 12 graphics API on Windows platforms.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderCompilerPlatform.GameCore">
      <summary>
        <para>Compiler used with Direct3D 12 graphics API on Game Core platforms.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderCompilerPlatform.GLES20">
      <summary>
        <para>Compiler used with OpenGL ES 2.0 and WebGL 1.0 graphics APIs on Android, iOS, Windows and WebGL platforms.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderCompilerPlatform.GLES3x">
      <summary>
        <para>Compiler used with OpenGL ES 3.x and WebGL 2.0 graphics APIs on Android, iOS, Windows and WebGL platforms.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderCompilerPlatform.Metal">
      <summary>
        <para>Compiler used with Metal graphics API on macOS, iOS and tvOS platforms.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderCompilerPlatform.None">
      <summary>
        <para>Provide a reasonable value for non initialized variables.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderCompilerPlatform.OpenGLCore">
      <summary>
        <para>Compiler used with OpenGL core graphics API on macOS, Linux and Windows platforms.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderCompilerPlatform.PS4">
      <summary>
        <para>Compiler used on PlayStation 4.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderCompilerPlatform.Switch">
      <summary>
        <para>Compiler used on Nintendo Switch.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderCompilerPlatform.Vulkan">
      <summary>
        <para>Compiler used with Vulkan graphics API on Android, Linux and Windows platforms.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderCompilerPlatform.XboxOneD3D11">
      <summary>
        <para>Compiler used with Direct3D 11 graphics API on XBox One.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderCompilerPlatform.XboxOneD3D12">
      <summary>
        <para>Compiler used with Direct3D 12 graphics API on XBox One.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Rendering.ShaderQuality">
      <summary>
        <para>Shader quality preset.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderQuality.High">
      <summary>
        <para>High quality shader preset.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderQuality.Low">
      <summary>
        <para>Low quality shader preset.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderQuality.Medium">
      <summary>
        <para>Medium quality shader preset.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Rendering.ShaderRequirements">
      <summary>
        <para>Shader features required by a specific shader. Features are bit flags.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.BaseShaders">
      <summary>
        <para>Indicates that basic shader capability i.e. Shader Model level 2.0 is required.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.Compute">
      <summary>
        <para>
                    Indicates that compute shader support is required.
                </para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.CubeArray">
      <summary>
        <para>Indicates that cubemap array (TextureCubeArray) support is required.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.Derivatives">
      <summary>
        <para>Indicates that support for derivative (ddx/ddy) instructions from the fragment shader stage is required.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.FragClipDepth">
      <summary>
        <para>Indicates that support for pixel depth (SV_Position.zw) input to the fragment shader stage is required.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.FragCoord">
      <summary>
        <para>Indicates that support for pixel position (SV_Position) input to the fragment shader stage is required.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.FramebufferFetch">
      <summary>
        <para>Indicates that framebuffer fetch support is required. This is the ability to have fragment shader color arguments with in/out modifiers.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.Geometry">
      <summary>
        <para>Indicates that geometry shader stage support is required.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.Instancing">
      <summary>
        <para>Indicates that support for the SV_InstanceID input semantic is required.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.Interpolators10">
      <summary>
        <para>Indicates that support for at least 10 interpolators is required.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.Interpolators15Integers">
      <summary>
        <para>Indicates that support for at least 15 integers and interpolators in total are required. Unity bundles them together because it is extremely unlikely a GPU/API will ever exist that only has part of that.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.Interpolators32">
      <summary>
        <para>Indicates that support for at least 32 interpolators is required.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.MRT4">
      <summary>
        <para>Indicates that support for multiple render targets (at least 4) is required i.e. support for fragment shaders that can output at least 4 values.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.MRT8">
      <summary>
        <para>Indicates that support for multiple render targets (at least 8) is required i.e. support for fragment shaders that can output at least 8 values.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.MSAATextureSamples">
      <summary>
        <para>Indicates that support for MSAA textures (e.g. Texture2DMS) is required.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.None">
      <summary>
        <para>No shader requirements.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.RandomWrite">
      <summary>
        <para>Indicates that support for random-write textures (UAVs) is required.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.SampleLOD">
      <summary>
        <para>Indicates that support for texture sampling from the fragment shader stage with an explicit mipmap level is required.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.SetRTArrayIndexFromAnyShader">
      <summary>
        <para>Indicates that support for setting the render target array index (SV_RenderTargetArrayIndex) from all shader stages (not just from the geometry shader stage) is required.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.SparseTexelResident">
      <summary>
        <para>Indicates that support of sparse textures with sampling instructions that return residency information is requred.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.TessellationCompute">
      <summary>
        <para>Indicates that support for tessellation using a compute shader for control point processing is required. The Metal graphics API requires this feature for tessellation.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.TessellationShaders">
      <summary>
        <para>Indicates that support for tessellation using hull and domain shader stages is required.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderRequirements.Texture2DArray">
      <summary>
        <para>Indicates that support for 2D array textures (Texture2DArray) is required.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Rendering.ShaderSnippetData">
      <summary>
        <para>Collection of properties about the specific shader code being compiled.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Rendering.ShaderSnippetData.pass">
      <summary>
        <para>An opaque identifier for the being compiled.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Rendering.ShaderSnippetData.passName">
      <summary>
        <para>Shader.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Rendering.ShaderSnippetData.passType">
      <summary>
        <para>Shader pass type for Unity's lighting pipeline.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Rendering.ShaderSnippetData.shaderType">
      <summary>
        <para>Shader stage in the rendering the pipeline.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Rendering.ShaderType">
      <summary>
        <para>Identifies the stage in the rendering pipeline.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderType.Count">
      <summary>
        <para>The number of ShaderTypes that Unity supports.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderType.Domain">
      <summary>
        <para>Identifier for the domain Shader stage.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderType.Fragment">
      <summary>
        <para>Identifier for the fragment Shader stage.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderType.Geometry">
      <summary>
        <para>Identifier for the geometry Shader stage.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderType.Hull">
      <summary>
        <para>Identifier for the hull Shader stage.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderType.RayTracing">
      <summary>
        <para>Identifier for the ray tracing Shader stage.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderType.Surface">
      <summary>
        <para>Identifier for the surface Shader stage.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.ShaderType.Vertex">
      <summary>
        <para>Identifier for the vertex Shader stage.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Rendering.TierSettings">
      <summary>
        <para>A struct that represents graphics settings for a given build target and.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.TierSettings.cascadedShadowMaps">
      <summary>
        <para>Whether to use cascaded shadow maps.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.TierSettings.detailNormalMap">
      <summary>
        <para>Whether to sample a Detail Normal Map, if assigned.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.TierSettings.enableLPPV">
      <summary>
        <para>Whether Light Probe Proxy Volume should be used.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.TierSettings.hdr">
      <summary>
        <para>Whether to enable High Dynamic Range (HDR) rendering.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.TierSettings.hdrMode">
      <summary>
        <para>The format to use for the HDR buffer.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.TierSettings.prefer32BitShadowMaps">
      <summary>
        <para>Whether Unity should try to use 32-bit shadow maps, where possible.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.TierSettings.realtimeGICPUUsage">
      <summary>
        <para>The RealtimeGICPUUsage to use.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.TierSettings.reflectionProbeBlending">
      <summary>
        <para>Whether to enable Reflection Probes Blending.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.TierSettings.reflectionProbeBoxProjection">
      <summary>
        <para>Whether to use Reflection Probes Box Projection.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.TierSettings.renderingPath">
      <summary>
        <para>The rendering path to use.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.TierSettings.semitransparentShadows">
      <summary>
        <para>Whether to enable Semitransparent Shadows.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Rendering.TierSettings.standardShaderQuality">
      <summary>
        <para>The Standard Shader Quality.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ReplacePrefabOptions">
      <summary>
        <para>Flags for the PrefabUtility.ReplacePrefab function.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ReplacePrefabOptions.ConnectToPrefab">
      <summary>
        <para>Connects the passed objects to the Prefab after uploading the Prefab.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ReplacePrefabOptions.Default">
      <summary>
        <para>Replaces Prefabs by matching pre-existing connections to the Prefab.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ReplacePrefabOptions.ReplaceNameBased">
      <summary>
        <para>Replaces the Prefab using name based lookup in the transform hierarchy.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ResolutionDialogSetting">
      <summary>
        <para>Resolution dialog setting.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ResolutionDialogSetting.Disabled">
      <summary>
        <para>Never show the resolution dialog.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ResolutionDialogSetting.Enabled">
      <summary>
        <para>Show the resolution dialog on first launch.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ResolutionDialogSetting.HiddenByDefault">
      <summary>
        <para>Hide the resolution dialog on first launch.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SceneAsset">
      <summary>
        <para>SceneAsset is used to reference Scene objects in the Editor.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SceneManagement.AddedComponent">
      <summary>
        <para>Class with information about a component that has been added to a Prefab instance.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.AddedComponent.instanceComponent">
      <summary>
        <para>The added component on the Prefab instance.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.AddedComponent.Apply">
      <summary>
        <para>See PrefabOverride.Apply.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.AddedComponent.GetAssetObject">
      <summary>
        <para>See PrefabOverride.GetAssetObject.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.AddedComponent.Revert(UnityEditor.InteractionMode)">
      <summary>
        <para>See PrefabOverride.Revert.</para>
      </summary>
      <param name="mode">
      </param>
    </member>
    <member name="T:UnityEditor.SceneManagement.AddedGameObject">
      <summary>
        <para>Class with information about a GameObject that has been added as a child under a Prefab instance.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.AddedGameObject.instanceGameObject">
      <summary>
        <para>The added GameObject on the Prefab instance.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.AddedGameObject.siblingIndex">
      <summary>
        <para>The sibling index of the added GameObject.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.AddedGameObject.Apply">
      <summary>
        <para>See PrefabOverride.Apply.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.AddedGameObject.GetAssetObject">
      <summary>
        <para>See PrefabOverride.GetAssetObject.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.AddedGameObject.Revert(UnityEditor.InteractionMode)">
      <summary>
        <para>See PrefabOverride.Revert.</para>
      </summary>
      <param name="mode">
      </param>
    </member>
    <member name="T:UnityEditor.SceneManagement.EditorSceneManager">
      <summary>
        <para>Scene management in the Editor.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.SceneManagement.EditorSceneManager.activeSceneChangedInEditMode(UnityEngine.Events.UnityAction`2&lt;UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene&gt;)">
      <summary>
        <para>Subscribe to this event to get notified when the active Scene has changed in Edit mode in the Editor.</para>
      </summary>
      <param name="value">Previous active Scene and the new active Scene.</param>
    </member>
    <member name="P:UnityEditor.SceneManagement.EditorSceneManager.loadedSceneCount">
      <summary>
        <para>The number of loaded Scenes.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.SceneManagement.EditorSceneManager.newSceneCreated(UnityEditor.SceneManagement.EditorSceneManager/NewSceneCreatedCallback)">
      <summary>
        <para>This event is called after a new Scene has been created.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="P:UnityEditor.SceneManagement.EditorSceneManager.playModeStartScene">
      <summary>
        <para>Loads this SceneAsset when you start Play Mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.EditorSceneManager.preventCrossSceneReferences">
      <summary>
        <para>Controls whether cross-Scene references are allowed in the Editor.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.EditorSceneManager.previewSceneCount">
      <summary>
        <para>The current amount of active preview Scenes.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.SceneManagement.EditorSceneManager.sceneClosed(UnityEditor.SceneManagement.EditorSceneManager/SceneClosedCallback)">
      <summary>
        <para>This event is called after a Scene has been closed in the editor.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="?:UnityEditor.SceneManagement.EditorSceneManager.sceneClosing(UnityEditor.SceneManagement.EditorSceneManager/SceneClosingCallback)">
      <summary>
        <para>This event is called before closing an open Scene after you have requested that the Scene is closed.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="?:UnityEditor.SceneManagement.EditorSceneManager.sceneDirtied(UnityEditor.SceneManagement.EditorSceneManager/SceneDirtiedCallback)">
      <summary>
        <para>This event is called after a Scene has been modified in the editor.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="?:UnityEditor.SceneManagement.EditorSceneManager.sceneOpened(UnityEditor.SceneManagement.EditorSceneManager/SceneOpenedCallback)">
      <summary>
        <para>This event is called after a Scene has been opened in the editor.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="?:UnityEditor.SceneManagement.EditorSceneManager.sceneOpening(UnityEditor.SceneManagement.EditorSceneManager/SceneOpeningCallback)">
      <summary>
        <para>This event is called before opening an existing Scene.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="?:UnityEditor.SceneManagement.EditorSceneManager.sceneSaved(UnityEditor.SceneManagement.EditorSceneManager/SceneSavedCallback)">
      <summary>
        <para>This event is called after a Scene has been saved.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="?:UnityEditor.SceneManagement.EditorSceneManager.sceneSaving(UnityEditor.SceneManagement.EditorSceneManager/SceneSavingCallback)">
      <summary>
        <para>This event is called before a Scene is saved disk after you have requested the Scene to be saved.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.CalculateAvailableSceneCullingMask">
      <summary>
        <para>Go through all Scenes and find the smallest unused bit in the unition of all Scene culling masks.</para>
      </summary>
      <returns>
        <para>The lowest unused bit of the union of all culling masks.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.ClosePreviewScene(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Closes a preview Scene created by NewPreviewScene.</para>
      </summary>
      <param name="scene">The preview Scene to close.</param>
      <returns>
        <para>True if the Scene was successfully closed.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.CloseScene(UnityEngine.SceneManagement.Scene,System.Boolean)">
      <summary>
        <para>Close the Scene. If removeScene flag is true, the closed Scene will also be removed from EditorSceneManager.</para>
      </summary>
      <param name="scene">The Scene to be closed/removed.</param>
      <param name="removeScene">Bool flag to indicate if the Scene should be removed after closing.</param>
      <returns>
        <para>Returns true if the Scene is closed/removed.</para>
      </returns>
    </member>
    <member name="F:UnityEditor.SceneManagement.EditorSceneManager.DefaultSceneCullingMask">
      <summary>
        <para>Use SceneCullingMasks.DefaultSceneCullingMask instead.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.DetectCrossSceneReferences(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Detects cross-Scene references in a Scene.</para>
      </summary>
      <param name="scene">Scene to check for cross-Scene references.</param>
      <returns>
        <para>Was any cross-Scene references found.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.EnsureUntitledSceneHasBeenSaved(System.String)">
      <summary>
        <para>Shows a save dialog if an Untitled Scene exists in the current Scene manager setup.</para>
      </summary>
      <param name="dialogContent">Text shown in the save dialog.</param>
      <returns>
        <para>True if the Scene is saved or if there is no Untitled Scene.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.GetSceneCullingMask(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Return the culling mask set on the given Scene.</para>
      </summary>
      <param name="scene">The scene to get the culling mask from.</param>
      <returns>
        <para>The scene's current culling mask as a bitfield.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.GetSceneManagerSetup">
      <summary>
        <para>Returns the current setup of the SceneManager.</para>
      </summary>
      <returns>
        <para>An array of SceneSetup classes - one item for each Scene.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.IsPreviewScene(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Is the Scene a preview Scene?</para>
      </summary>
      <param name="scene">The Scene to check.</param>
      <returns>
        <para>True if the Scene is a preview Scene.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.IsPreviewSceneObject(UnityEngine.Object)">
      <summary>
        <para>Is this object part of a preview Scene?</para>
      </summary>
      <param name="obj">The object to check.</param>
      <returns>
        <para>True if this object is part of a preview Scene.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.LoadSceneAsyncInPlayMode(System.String,UnityEngine.SceneManagement.LoadSceneParameters)">
      <summary>
        <para>This method allows you to load a Scene during playmode in the editor, without requiring the Scene to be included in the Scene list.</para>
      </summary>
      <param name="path">Path to Scene to load.</param>
      <param name="parameters">Parameters to apply to loading. See SceneManagement.LoadSceneParameters.</param>
      <returns>
        <para>Use the AsyncOperation to determine if the operation has completed.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.LoadSceneInPlayMode(System.String,UnityEngine.SceneManagement.LoadSceneParameters)">
      <summary>
        <para>This method allows you to load a Scene during playmode in the editor, without requiring the Scene to be included in the Scene list.</para>
      </summary>
      <param name="path">Path to Scene to load.</param>
      <param name="parameters">Parameters used to load the Scene SceneManagement.LoadSceneParameters.</param>
      <returns>
        <para>Scene that is loading.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.MarkAllScenesDirty">
      <summary>
        <para>Mark all the loaded Scenes as modified.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.MarkSceneDirty(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Mark the specified Scene as modified.</para>
      </summary>
      <param name="scene">The Scene to be marked as modified.</param>
      <returns>
        <para>Whether the Scene was successfully marked as dirty.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.MoveSceneAfter(UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Allows you to reorder the Scenes currently open in the Hierarchy window. Moves the source Scene so it comes after the destination Scene.</para>
      </summary>
      <param name="src">The Scene to move.</param>
      <param name="dst">The Scene which should come directly before the source Scene in the hierarchy.</param>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.MoveSceneBefore(UnityEngine.SceneManagement.Scene,UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Allows you to reorder the Scenes currently open in the Hierarchy window. Moves the source Scene so it comes before the destination Scene.</para>
      </summary>
      <param name="src">The Scene to move.</param>
      <param name="dst">The Scene which should come directly after the source Scene in the hierarchy.</param>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.NewPreviewScene">
      <summary>
        <para>Creates a new preview Scene.  Any object added to a preview Scene will only be rendered in that Scene.</para>
      </summary>
      <returns>
        <para>The new preview Scene.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.NewScene(UnityEditor.SceneManagement.NewSceneSetup,UnityEditor.SceneManagement.NewSceneMode)">
      <summary>
        <para>Create a new Scene.</para>
      </summary>
      <param name="setup">Whether the new Scene should use the default set of GameObjects.</param>
      <param name="mode">Whether to keep existing Scenes open.</param>
      <returns>
        <para>A reference to the new Scene.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.SceneManagement.EditorSceneManager.NewSceneCreatedCallback">
      <summary>
        <para>Callbacks of this type which have been added to the newSceneCreated event are called after a new Scene has been created.</para>
      </summary>
      <param name="scene">The Scene that was created.</param>
      <param name="setup">The setup mode used when creating the Scene.</param>
      <param name="mode">The mode used for creating the Scene.</param>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.OpenScene(System.String,UnityEditor.SceneManagement.OpenSceneMode)">
      <summary>
        <para>Open a Scene in the Editor.</para>
      </summary>
      <param name="scenePath">The path of the Scene. This should be relative to the Project folder; for example, "AssetsMyScenesMyScene.unity".</param>
      <param name="mode">Allows you to select how to open the specified Scene, and whether to keep existing Scenes in the Hierarchy. See SceneManagement.OpenSceneMode for more information about the options.</param>
      <returns>
        <para>A reference to the opened Scene.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.RestoreSceneManagerSetup(UnityEditor.SceneManagement.SceneSetup[])">
      <summary>
        <para>Restore the setup of the SceneManager.</para>
      </summary>
      <param name="value">In this array, at least one Scene should be loaded, and there must be one active Scene.</param>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.SaveCurrentModifiedScenesIfUserWantsTo">
      <summary>
        <para>Asks the user if they want to save the current open modified Scene or Scenes in the Hierarchy.</para>
      </summary>
      <returns>
        <para>Returns true if the user clicked Save or Don't Save to indicate that that it is ok to close the open scenes after the dialog closes. Returns false if the user clicked Cancel to abort.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.SaveModifiedScenesIfUserWantsTo(UnityEngine.SceneManagement.Scene[])">
      <summary>
        <para>Asks whether the modfied input Scenes should be saved.</para>
      </summary>
      <param name="scenes">Scenes that should be saved if they are modified.</param>
      <returns>
        <para>Returns true if the user clicked Save or Don't Save to indicate that that it is ok to close the input scenes after the dialog closes. Returns false if the user clicked Cancel to abort.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.SaveOpenScenes">
      <summary>
        <para>Save all open Scenes.</para>
      </summary>
      <returns>
        <para>Returns true if all open Scenes are successfully saved.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.SaveScene(UnityEngine.SceneManagement.Scene,System.String,System.Boolean)">
      <summary>
        <para>Save a Scene.</para>
      </summary>
      <param name="scene">The Scene to be saved.</param>
      <param name="dstScenePath">The file path to save the Scene to. If the path is empty, the current open Scene is overwritten. If it has not yet been saved at all, a save dialog is shown.</param>
      <param name="saveAsCopy">If set to true, the Scene is saved without changing the current Scene, and without clearing the unsaved changes marker.</param>
      <returns>
        <para>True if the save succeeded, otherwise false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.SaveScenes(UnityEngine.SceneManagement.Scene[])">
      <summary>
        <para>Save a list of Scenes.</para>
      </summary>
      <param name="scenes">List of Scenes that should be saved.</param>
      <returns>
        <para>True if the save succeeded. Otherwise false.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.SceneManagement.EditorSceneManager.SceneClosedCallback">
      <summary>
        <para>Callbacks of this type which have been added to the sceneClosed event are called immediately after the Scene has been closed.</para>
      </summary>
      <param name="scene">The Scene that was closed.</param>
    </member>
    <member name="T:UnityEditor.SceneManagement.EditorSceneManager.SceneClosingCallback">
      <summary>
        <para>Callbacks of this type which have been added to the sceneClosing event are called just before a Scene is closed.</para>
      </summary>
      <param name="scene">The Scene that is going to be closed.</param>
      <param name="removingScene">Whether or not the Scene is also going to be removed from the Scene Manager after closing. If true the Scene is removed after closing.</param>
    </member>
    <member name="T:UnityEditor.SceneManagement.EditorSceneManager.SceneDirtiedCallback">
      <summary>
        <para>Callbacks of this type which have been added to the sceneDirtied event are called after a Scene changes from being unmodified to being modified.</para>
      </summary>
      <param name="scene">
      </param>
    </member>
    <member name="T:UnityEditor.SceneManagement.EditorSceneManager.SceneOpenedCallback">
      <summary>
        <para>Callbacks of this type which have been added to the sceneOpened event are called after a Scene has been opened.</para>
      </summary>
      <param name="scene">The Scene that was opened.</param>
      <param name="mode">The mode used to open the Scene.</param>
    </member>
    <member name="T:UnityEditor.SceneManagement.EditorSceneManager.SceneOpeningCallback">
      <summary>
        <para>Callbacks of this type which have been added to the sceneOpening event are called just before opening a Scene.</para>
      </summary>
      <param name="path">Path of the Scene to be opened. This is relative to the Project path.</param>
      <param name="mode">Mode that is used when opening the Scene.</param>
    </member>
    <member name="T:UnityEditor.SceneManagement.EditorSceneManager.SceneSavedCallback">
      <summary>
        <para>Callbacks of this type which have been added to the sceneSaved event are called after a Scene has been saved.</para>
      </summary>
      <param name="scene">The Scene that was saved.</param>
    </member>
    <member name="T:UnityEditor.SceneManagement.EditorSceneManager.SceneSavingCallback">
      <summary>
        <para>Callbacks of this type which have been added to the sceneSaving event are called just before the Scene is saved.</para>
      </summary>
      <param name="scene">The Scene to be saved.</param>
      <param name="path">The path to which the Scene is saved.</param>
    </member>
    <member name="M:UnityEditor.SceneManagement.EditorSceneManager.SetSceneCullingMask(UnityEngine.SceneManagement.Scene,System.UInt64)">
      <summary>
        <para>Set the culling mask on this scene to this value.
Cameras will only render objects in Scenes that have the same bits set in their culling mask.</para>
      </summary>
      <param name="scene">The scene to set the culling mask on.</param>
      <param name="sceneCullingMask">The value of the culling mask, stored as a bitfield.</param>
    </member>
    <member name="T:UnityEditor.SceneManagement.MainStage">
      <summary>
        <para>The Main Stage contains all the currently open regular Scenes and is always available.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SceneManagement.NewSceneMode">
      <summary>
        <para>Used when creating a new Scene in the Editor.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneManagement.NewSceneMode.Additive">
      <summary>
        <para>The newly created Scene is added to the current open Scenes.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneManagement.NewSceneMode.Single">
      <summary>
        <para>All current open Scenes are closed and the newly created Scene are opened.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SceneManagement.NewSceneSetup">
      <summary>
        <para>Used when creating a new Scene in the Editor.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneManagement.NewSceneSetup.DefaultGameObjects">
      <summary>
        <para>Adds default game objects to the new Scene (a light and camera).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneManagement.NewSceneSetup.EmptyScene">
      <summary>
        <para>No game objects are added to the new Scene.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SceneManagement.ObjectOverride">
      <summary>
        <para>Class with information about an object on a Prefab instance with overridden properties.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.ObjectOverride.coupledOverride">
      <summary>
        <para>Access the coupled component modifications of the object being overidden, if present.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.ObjectOverride.instanceObject">
      <summary>
        <para>The object on the Prefab instance.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.ObjectOverride.Apply">
      <summary>
        <para>See PrefabOverride.Apply.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.ObjectOverride.GetAssetObject">
      <summary>
        <para>See PrefabOverride.GetAssetObject.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.ObjectOverride.Revert">
      <summary>
        <para>See PrefabOverride.Revert.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SceneManagement.OpenSceneMode">
      <summary>
        <para>Used when opening a Scene in the Editor to specify how a Scene should be opened.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneManagement.OpenSceneMode.Additive">
      <summary>
        <para>Adds a Scene to the current open Scenes and loads it.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneManagement.OpenSceneMode.AdditiveWithoutLoading">
      <summary>
        <para>Adds a Scene to the current open Scenes without loading it. It will show up as 'unloaded' in the Hierarchy Window.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneManagement.OpenSceneMode.Single">
      <summary>
        <para>Closes all current open Scenes and loads a Scene.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SceneManagement.PrefabOverride">
      <summary>
        <para>Class with information about a given override on a Prefab instance.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.PrefabOverride.Apply(System.String)">
      <summary>
        <para>Applies the override to the Prefab Asset at the given path.</para>
      </summary>
      <param name="prefabAssetPath">The path of the Prefab Asset to apply to.</param>
    </member>
    <member name="M:UnityEditor.SceneManagement.PrefabOverride.Apply">
      <summary>
        <para>Applies the override to the Prefab Asset at the given path.</para>
      </summary>
      <param name="prefabAssetPath">The path of the Prefab Asset to apply to.</param>
    </member>
    <member name="M:UnityEditor.SceneManagement.PrefabOverride.FindApplyTargetAssetObject(System.String)">
      <summary>
        <para>Finds the object in the Prefab Asset at the given path which will be applied to.</para>
      </summary>
      <param name="prefabAssetPath">The asset path of the Prefab Asset to apply to.</param>
      <returns>
        <para>The object inside the Prefab Asset affected by the override.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.PrefabOverride.GetAssetObject">
      <summary>
        <para>Returns the asset object of the override in the outermost Prefab that the Prefab instance comes from.</para>
      </summary>
      <returns>
        <para>The object inside the Prefab Asset affected by the override.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.PrefabOverride.Revert">
      <summary>
        <para>Reverts the override on the Prefab instance.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SceneManagement.PrefabStage">
      <summary>
        <para>The PrefabStage class represents an editing context for Prefab Assets.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.PrefabStage.assetPath">
      <summary>
        <para>The asset path where the Prefab Asset file is stored, relative to the project root.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.PrefabStage.mode">
      <summary>
        <para>The Prefab Stage can be opened either in isolation or in context.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.PrefabStage.openedFromInstanceObject">
      <summary>
        <para>A GameObject inside the Prefab instance that you opened Prefab Mode through.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.PrefabStage.openedFromInstanceRoot">
      <summary>
        <para>The root of the Prefab instance that you opened Prefab Mode through.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.PrefabStage.prefabAssetPath">
      <summary>
        <para>The path of the Prefab Asset that is open in this Prefab stage.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.PrefabStage.prefabContentsRoot">
      <summary>
        <para>The root GameObject of the loaded Prefab Asset contents.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.SceneManagement.PrefabStage.prefabSaved(System.Action`1&lt;UnityEngine.GameObject&gt;)">
      <summary>
        <para>Callback that is invoked whenever the contents of a Prefab stage has been saved.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="?:UnityEditor.SceneManagement.PrefabStage.prefabSaving(System.Action`1&lt;UnityEngine.GameObject&gt;)">
      <summary>
        <para>Callback that's invoked whenever the contents of a Prefab stage is about to be saved.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="?:UnityEditor.SceneManagement.PrefabStage.prefabStageClosing(System.Action`1&lt;UnityEditor.SceneManagement.PrefabStage&gt;)">
      <summary>
        <para>Callback that's invoked whenever a Prefab stage is about to be opened.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="?:UnityEditor.SceneManagement.PrefabStage.prefabStageDirtied(System.Action`1&lt;UnityEditor.SceneManagement.PrefabStage&gt;)">
      <summary>
        <para>Callback that's invoked whenever a Prefab stage changes from unmodified to modified.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="?:UnityEditor.SceneManagement.PrefabStage.prefabStageOpened(System.Action`1&lt;UnityEditor.SceneManagement.PrefabStage&gt;)">
      <summary>
        <para>Callback that's invoked whenever a Prefab stage has been opened.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="M:UnityEditor.SceneManagement.PrefabStage.ClearDirtiness">
      <summary>
        <para>Clear the dirtyness flag for the Prefab stage.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.PrefabStage.IsPartOfPrefabContents(UnityEngine.GameObject)">
      <summary>
        <para>Is this GameObject part of the loaded Prefab Asset contents in the Prefab stage?</para>
      </summary>
      <param name="gameObject">The GameObject to check.</param>
      <returns>
        <para>True if the GameObject is part of the Prefab contents.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.SceneManagement.PrefabStage.Mode">
      <summary>
        <para>Specifies the mode that Unity uses to open a Prefab stage. You can open the stage either in isolation or in context.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneManagement.PrefabStage.Mode.InContext">
      <summary>
        <para>Editing in context means that you can edit a Prefab Asset in Prefab Mode and still retain the context of the Prefab instance you opened through.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneManagement.PrefabStage.Mode.InIsolation">
      <summary>
        <para>Editing in isolation means that you can edit a Prefab Asset on its own in Prefab Mode.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SceneManagement.PrefabStageUtility">
      <summary>
        <para>Utility methods related to Prefab stages.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.PrefabStageUtility.GetCurrentPrefabStage">
      <summary>
        <para>Get the current Prefab stage, or null if there is none.</para>
      </summary>
      <returns>
        <para>The current Prefab stage or null.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.PrefabStageUtility.GetPrefabStage(UnityEngine.GameObject)">
      <summary>
        <para>Get the Prefab stage which contains the given GameObject.</para>
      </summary>
      <param name="gameObject">The GameObject to check.</param>
      <returns>
        <para>The containing Prefab stage.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.PrefabStageUtility.OpenPrefab(System.String)">
      <summary>
        <para>Opens a Prefab Asset in Prefab Mode.</para>
      </summary>
      <param name="prefabAssetPath">File path for the Prefab Asset to open in Prefab Mode.</param>
      <param name="openedFromInstance">Opens Prefab Mode in context of this Prefab instance GameObject.</param>
      <param name="prefabStageMode">Mode that determines whether to open in isolation or in context.</param>
      <returns>
        <para>The opened PrefabStage.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.PrefabStageUtility.OpenPrefab(System.String,UnityEngine.GameObject)">
      <summary>
        <para>Opens a Prefab Asset in Prefab Mode.</para>
      </summary>
      <param name="prefabAssetPath">File path for the Prefab Asset to open in Prefab Mode.</param>
      <param name="openedFromInstance">Opens Prefab Mode in context of this Prefab instance GameObject.</param>
      <param name="prefabStageMode">Mode that determines whether to open in isolation or in context.</param>
      <returns>
        <para>The opened PrefabStage.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.PrefabStageUtility.OpenPrefab(System.String,UnityEngine.GameObject,UnityEditor.SceneManagement.PrefabStage/Mode)">
      <summary>
        <para>Opens a Prefab Asset in Prefab Mode.</para>
      </summary>
      <param name="prefabAssetPath">File path for the Prefab Asset to open in Prefab Mode.</param>
      <param name="openedFromInstance">Opens Prefab Mode in context of this Prefab instance GameObject.</param>
      <param name="prefabStageMode">Mode that determines whether to open in isolation or in context.</param>
      <returns>
        <para>The opened PrefabStage.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.SceneManagement.PreviewSceneStage">
      <summary>
        <para>The PreviewSceneStage class represents an editing context based on a single preview Scene.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.PreviewSceneStage.scene">
      <summary>
        <para>The preview Scene this stage controls. Stage content should be moved into this Scene.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.PreviewSceneStage.stageHandle">
      <summary>
        <para>See Stage.stageHandle.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.PreviewSceneStage.OnCloseStage">
      <summary>
        <para>Unity calls this method when the Stage is closed. Classes that inherit from PreviewSceneStage should implement cleanup logic in this method.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.PreviewSceneStage.OnOpenStage">
      <summary>
        <para>Unity calls this method when the Stage is opened. Classes that inherit from PreviewSceneStage should implement initialization logic in this method.</para>
      </summary>
      <returns>
        <para>If your Stage opened successfully return true, otherwise return false.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.SceneManagement.RemovedComponent">
      <summary>
        <para>Class with information about a component that has been removed from a Prefab instance.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.RemovedComponent.assetComponent">
      <summary>
        <para>The components on the Prefab Asset which has been removed on the Prefab instance.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.RemovedComponent.containingInstanceGameObject">
      <summary>
        <para>The GameObject on the Prefab instance that the component has been removed from.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.RemovedComponent.Apply">
      <summary>
        <para>See PrefabOverride.Apply.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.RemovedComponent.GetAssetObject">
      <summary>
        <para>See PrefabOverride.GetAssetObject.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.RemovedComponent.Revert(UnityEditor.InteractionMode)">
      <summary>
        <para>See PrefabOverride.Revert.</para>
      </summary>
      <param name="mode">
      </param>
    </member>
    <member name="T:UnityEditor.SceneManagement.SceneCullingMasks">
      <summary>
        <para>Masks that control what kind of Scene views and Game views Unity should render a GameObject in.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneManagement.SceneCullingMasks.DefaultSceneCullingMask">
      <summary>
        <para>Specifies the default culling mask for a Scene.  Use the bits from this Scene culling mask for objects that you want to render in both in the Game view and the Scene view.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneManagement.SceneCullingMasks.GameViewObjects">
      <summary>
        <para>The bits from this mask specify GameObjects that Unity should render in Game view.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneManagement.SceneCullingMasks.MainStageSceneViewObjects">
      <summary>
        <para>The bits from this mask specify GameObjects that Unity should render in Scene views showing the main stage.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SceneManagement.SceneSetup">
      <summary>
        <para>The setup information for a Scene in the SceneManager. This cannot be used in Play Mode. </para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.SceneSetup.isActive">
      <summary>
        <para>If the Scene is active.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.SceneSetup.isLoaded">
      <summary>
        <para>If the Scene is loaded.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.SceneSetup.path">
      <summary>
        <para>Path of the Scene. Should be relative to the project folder. Like: "AssetsMyScenesMyScene.unity".</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SceneManagement.Stage">
      <summary>
        <para>The Stage class represents an editing context which includes a collection of Scenes.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.Stage.assetPath">
      <summary>
        <para>The path of the Asset file associated with the stage, relative to the project root folder.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneManagement.Stage.stageHandle">
      <summary>
        <para>The StageHandle struct for this stage.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.Stage.CreateHeaderContent">
      <summary>
        <para>Creates the header content for this Stage. Both the Hierarchy window header and Scene view breadcrumb bar use this content.</para>
      </summary>
      <returns>
        <para>The header content for this Stage.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.Stage.FindComponentOfType">
      <summary>
        <para>Returns the first active loaded object of the given type.</para>
      </summary>
      <returns>
        <para>This returns the object that matches the specified type. It returns null if no object matches the type.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.Stage.FindComponentsOfType">
      <summary>
        <para>Returns a list of all active loaded objects of the given type.</para>
      </summary>
      <returns>
        <para>An array of objects found matching the type specified.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.Stage.GetCombinedSceneCullingMaskForCamera">
      <summary>
        <para>Gets the Scene culling mask from this Stage.</para>
      </summary>
      <returns>
        <para>The combined Scene culling mask for this Stage. Unity uses this mask on the Scene view Camera for renderer filtering.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.Stage.GetHashForStateStorage">
      <summary>
        <para>Unity calls this method to get a hash code that is used to save the state of the Stage to disk.</para>
      </summary>
      <returns>
        <para>The hash code identifying this stage.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.Stage.OnCloseStage">
      <summary>
        <para>Unity calls this method when the Stage is closed. Classes that inherit from Stage should implement cleanup logic in this method.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.Stage.OnDisable">
      <summary>
        <para>See ScriptableObject.OnDisable.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.Stage.OnEnable">
      <summary>
        <para>See ScriptableObject.OnEnable.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.Stage.OnFirstTimeOpenStageInSceneView(UnityEditor.SceneView)">
      <summary>
        <para>Unity calls this method the first time a Stage is opened for a specific Asset, for a specific Scene view.</para>
      </summary>
      <param name="sceneView">The Scene view the Stage is opened in.</param>
    </member>
    <member name="M:UnityEditor.SceneManagement.Stage.OnOpenStage">
      <summary>
        <para>Unity calls this method when the Stage is opened. Classes that inherit from Stage should implement initialization logic in this method.</para>
      </summary>
      <returns>
        <para>true if Unity opened the Stage successfully, otherwise returns false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.Stage.OnReturnToStage">
      <summary>
        <para>Unity calls this method when you return to a Stage that is already open.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SceneManagement.StageHandle">
      <summary>
        <para>Struct that represents a stage handle.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageHandle.Contains(UnityEngine.GameObject)">
      <summary>
        <para>Does the stage contain the given GameObject?</para>
      </summary>
      <param name="gameObject">The GameObject to check.</param>
      <returns>
        <para>True if the stage contains the given GameObject.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageHandle.FindComponentOfType">
      <summary>
        <para>Returns the first active loaded object of the given type.</para>
      </summary>
      <returns>
        <para>This returns the object that matches the specified type. It returns null if no object matches the type.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageHandle.FindComponentsOfType">
      <summary>
        <para>Returns a list of all active loaded objects of the given type.</para>
      </summary>
      <returns>
        <para>An array of objects found matching the type specified.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageHandle.IsValid">
      <summary>
        <para>Is this stage handle valid?</para>
      </summary>
      <returns>
        <para>True if the stage handle is valid.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.SceneManagement.StageUtility">
      <summary>
        <para>Utility methods related to stages.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageUtility.GetCurrentStage">
      <summary>
        <para>The current Stage can either be the MainStage or any other opened Stage, visualized in the Scene view as the last breadcrumb in the breadcrumb bar.</para>
      </summary>
      <returns>
        <para>The current Stage that is currently being rendered in the Scene view and shown in the Hierarchy.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageUtility.GetCurrentStageHandle">
      <summary>
        <para>Get the current stage being edited.</para>
      </summary>
      <returns>
        <para>The current stage.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageUtility.GetMainStage">
      <summary>
        <para>Get the MainStage object. This object is always available.</para>
      </summary>
      <returns>
        <para>The Main Stage object.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageUtility.GetMainStageHandle">
      <summary>
        <para>Get the main stage which contains all the currently open regular Scenes.</para>
      </summary>
      <returns>
        <para>The main stage.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageUtility.GetStage(UnityEngine.GameObject)">
      <summary>
        <para>Get the Stage object that contains the input GameObject or Scene.</para>
      </summary>
      <param name="gameObject">
      </param>
      <param name="scene">
      </param>
      <returns>
        <para>The Stage that contains either the GameObject or the Scene.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageUtility.GetStage(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Get the Stage object that contains the input GameObject or Scene.</para>
      </summary>
      <param name="gameObject">
      </param>
      <param name="scene">
      </param>
      <returns>
        <para>The Stage that contains either the GameObject or the Scene.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageUtility.GetStageHandle(UnityEngine.GameObject)">
      <summary>
        <para>Get the stage in which the given GameObject exists.</para>
      </summary>
      <param name="gameObject">The GameObject to find the stage of.</param>
      <returns>
        <para>The stage of the GameObject.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageUtility.GetStageHandle(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Get the stage in which the given Scene exists.</para>
      </summary>
      <param name="scene">The Scene to find the stage of.</param>
      <returns>
        <para>The stage of the Scene.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageUtility.GoBackToPreviousStage">
      <summary>
        <para>Navigate the Editor to the previous stage.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageUtility.GoToMainStage">
      <summary>
        <para>Navigate the Editor to the main stage.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageUtility.GoToStage(UnityEditor.SceneManagement.Stage,System.Boolean)">
      <summary>
        <para>Navigates the Editor to the specified stage.</para>
      </summary>
      <param name="stage">The stage to navigate to.</param>
      <param name="setAsFirstItemAfterMainStage">When set to true, the new stage replaces existing stages in the breadcrumbs, apart from the main stage.</param>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageUtility.IsGameObjectRenderedByCamera(UnityEngine.GameObject,UnityEngine.Camera)">
      <summary>
        <para>Is the given GameObject rendered by the given Camera?</para>
      </summary>
      <param name="gameObject">The GameObject to check.</param>
      <param name="camera">The camera to check.</param>
      <returns>
        <para>True if the GameObject is rendered by the camera.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageUtility.IsGameObjectRenderedByCameraAndPartOfEditableScene(UnityEngine.GameObject,UnityEngine.Camera)">
      <summary>
        <para>Specifies whether the given Camera currently renders the given GameObject and the GameObject is also part of an editable scene.</para>
      </summary>
      <param name="gameObject">The GameObject to check.</param>
      <param name="camera">The Camera to check.</param>
      <returns>
        <para>True if the GameObject is rendered by the camera and part of an editable scene.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneManagement.StageUtility.PlaceGameObjectInCurrentStage(UnityEngine.GameObject)">
      <summary>
        <para>Place the given GameObject in the current stage being edited.</para>
      </summary>
      <param name="gameObject">The GameObject to be placed in the current stage.</param>
    </member>
    <member name="T:UnityEditor.SceneView">
      <summary>
        <para>Use this class to manage SceneView settings, change the SceneView camera properties, subscribe to events, call SceneView methods, and render open scenes.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.audioPlay">
      <summary>
        <para>Enables or disables Scene view audio effects.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.SceneView.beforeSceneGui(System.Action`1&lt;UnityEditor.SceneView&gt;)">
      <summary>
        <para>The event issued when the OnGUI method is called.</para>
      </summary>
      <param name="value">The [[SceneView] that invokes this callback.</param>
    </member>
    <member name="P:UnityEditor.SceneView.camera">
      <summary>
        <para>The Camera that is rendering this SceneView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.cameraDistance">
      <summary>
        <para>The distance from camera to pivot.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.cameraMode">
      <summary>
        <para>The current DrawCameraMode for the Scene view camera.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.cameraSettings">
      <summary>
        <para>Use CameraSettings to set the properties for the SceneView Camera.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.currentDrawingSceneView">
      <summary>
        <para>The SceneView that is being drawn.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.drawGizmos">
      <summary>
        <para>Sets the visibility of all Gizmos in the Scene view.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.SceneView.duringSceneGui(System.Action`1&lt;UnityEditor.SceneView&gt;)">
      <summary>
        <para>Subscribe to this event to receive a callback whenever the Scene view calls the OnGUI method.</para>
      </summary>
      <param name="value">The Scene view invoking this callback.</param>
    </member>
    <member name="?:UnityEditor.SceneView.gridVisibilityChanged(System.Action`1&lt;System.Boolean&gt;)">
      <summary>
        <para>Invoked when grid visibility changes.</para>
      </summary>
      <param name="value">New state of grid visibility.</param>
    </member>
    <member name="P:UnityEditor.SceneView.in2DMode">
      <summary>
        <para>Whether the SceneView is in 2D mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.isRotationLocked">
      <summary>
        <para>Whether the Scene view camera can be rotated.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.isUsingSceneFiltering">
      <summary>
        <para>Whether this SceneView is using scene filtering.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.lastActiveSceneView">
      <summary>
        <para>The SceneView that was most recently in focus.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneView.lastActiveSceneViewChanged">
      <summary>
        <para>Register to this callback to get notified when the active Scene View changes.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.lastSceneViewRotation">
      <summary>
        <para>When the Scene view is in 2D mode, this property contains the last camera rotation.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneView.m_AudioPlay">
      <summary>
        <para>M_AudioPlay has been deprecated. Use audioPlay instead (UnityUpgradable) -&gt; audioPlay.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneView.m_RenderMode">
      <summary>
        <para>M_RenderMode has been deprecated. Use cameraMode instead.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneView.m_ValidateTrueMetals">
      <summary>
        <para>M_ValidateTrueMetals has been deprecated. Use validateTrueMetals instead (UnityUpgradable) -&gt; validateTrueMetals.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.SceneView.onCameraModeChanged(System.Action`1&lt;UnityEditor.SceneView/CameraMode&gt;)">
      <summary>
        <para>An event that is invoked when the selected cameraMode changes.</para>
      </summary>
      <param name="value">The new camera mode.</param>
    </member>
    <member name="P:UnityEditor.SceneView.orthographic">
      <summary>
        <para>Whether the Scene view camera is set to orthographic mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.pivot">
      <summary>
        <para>The central point that the camera orbits within the Scene view.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.renderMode">
      <summary>
        <para>RenderMode has been deprecated. Use cameraMode instead.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.rotation">
      <summary>
        <para>The direction of the camera to the pivot of the SceneView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.sceneLighting">
      <summary>
        <para>Whether lighting is enabled or disabled in the Scene view.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.sceneViews">
      <summary>
        <para>The list of all open Scene view windows.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.sceneViewState">
      <summary>
        <para>Use SceneViewState to set the debug options for the Scene view.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.selectedOutlineColor">
      <summary>
        <para>Gets the Color of selected outline.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.showGrid">
      <summary>
        <para>Gets or sets whether to enable the grid for an instance of the SceneView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.size">
      <summary>
        <para>The size of the Scene view measured diagonally.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.validateTrueMetals">
      <summary>
        <para>Whether the albedo is black for materials with an average specular color above 0.45.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneView.AddCameraMode(System.String,System.String)">
      <summary>
        <para>Add a custom camera mode to the Scene view camera mode list.</para>
      </summary>
      <param name="name">The name for the new mode.</param>
      <param name="section">The section in which the new mode will be added. This can be an existing or new section.</param>
      <returns>
        <para>A CameraMode with the provided name and section.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneView.AlignViewToObject(UnityEngine.Transform)">
      <summary>
        <para>Moves the Scene view to frame a transform.</para>
      </summary>
      <param name="t">The transform to frame in the Scene view.</param>
    </member>
    <member name="M:UnityEditor.SceneView.AlignWithView">
      <summary>
        <para>Aligns the current selection with the position and rotation of the Scene view camera.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SceneView.CameraMode">
      <summary>
        <para>Describes a built-in Scene view mode.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneView.CameraMode.drawMode">
      <summary>
        <para>The CameraDrawMode associated with the CameraMode.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneView.CameraMode.name">
      <summary>
        <para>The name of the CameraMode.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneView.CameraMode.section">
      <summary>
        <para>The section in the toolbar drop-down that this CameraMode belongs to.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneView.CameraMode.Equals(System.Object)">
      <summary>
        <para>Compares this CameraMode object against a specified CameraMode object.</para>
      </summary>
      <param name="otherObject">The CameraMode to compare.</param>
      <returns>
        <para>Returns true if the CameraMode objects are equal. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneView.CameraMode.ToString">
      <summary>
        <para>Gets a string summary of this CameraMode.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SceneView.CameraSettings">
      <summary>
        <para>Use this class to set SceneView Camera properties.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.CameraSettings.accelerationEnabled">
      <summary>
        <para>Enables Camera movement acceleration in the SceneView. This makes the Camera accelerate for the duration of movement.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.CameraSettings.dynamicClip">
      <summary>
        <para>When enabled, the SceneView Camera's near and far clipping planes are calculated relative to the viewport size of the Scene. When disabled, nearClip and farClip are used instead.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.CameraSettings.easingDuration">
      <summary>
        <para>How long it takes for the speed of the SceneView Camera to accelerate to its initial full speed. Measured in seconds. Valid values are between [0.1, 2].</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.CameraSettings.easingEnabled">
      <summary>
        <para>Enables Camera movement easing in the SceneView. This makes the Camera ease in when it starts moving, and ease out when it stops.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.CameraSettings.farClip">
      <summary>
        <para>The furthest point from the SceneView Camera that drawing occurs. The valid minimum value is 0.02.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.CameraSettings.fieldOfView">
      <summary>
        <para>The height of the view angle for the SceneView Camera. Measured in degrees vertically, or along the local Y axis.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.CameraSettings.nearClip">
      <summary>
        <para>The closest point to the SceneView Camera where drawing occurs. The valid minimum value is 0.01.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.CameraSettings.occlusionCulling">
      <summary>
        <para>Enables occlusion culling in the SceneView. This prevents Unity from rendering GameObjects that the Camera cannot see because they are hidden by other GameObjects.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.CameraSettings.speed">
      <summary>
        <para>The speed of the SceneView Camera.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.CameraSettings.speedMax">
      <summary>
        <para>The maximum speed of the SceneView Camera. Valid values are between [0.0002, 10000].</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.CameraSettings.speedMin">
      <summary>
        <para>The minimum speed of the SceneView Camera. Valid values are between [0.0001, 9999].</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.CameraSettings.speedNormalized">
      <summary>
        <para>The normalized speed of the SceneView Camera, relative to the current minimum/maximum range. Valid values are between [0, 1].</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneView.CameraSettings.#ctor">
      <summary>
        <para>Create a new CameraSettings object.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneView.ClearUserDefinedCameraModes">
      <summary>
        <para>Remove all user-defined camera modes.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneView.Frame(UnityEngine.Bounds)">
      <summary>
        <para>Frames the given bounds in the Scene view.</para>
      </summary>
      <param name="bounds">The bounds to frame in the Scene view.</param>
      <param name="instant">Set to true to immediately frame the camera. Set to false to animate the action.</param>
      <returns>
        <para>Returns true if the given bounds can be encompassed in the Scene view. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneView.FrameLastActiveSceneView">
      <summary>
        <para>Frames the currently selected object(s) in the last active Scene view.</para>
      </summary>
      <returns>
        <para>Returns true if the camera frame successfully frames the current selection.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneView.FrameSelected">
      <summary>
        <para>Frame the object selection in the Scene view.</para>
      </summary>
      <param name="lockView">Whether the view should be locked to the selection.</param>
      <returns>
        <para>Returns true if the current selection fits in the Scene view. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneView.FrameSelected(System.Boolean)">
      <summary>
        <para>Frame the object selection in the Scene view.</para>
      </summary>
      <param name="lockView">Whether the view should be locked to the selection.</param>
      <returns>
        <para>Returns true if the current selection fits in the Scene view. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneView.GetAllSceneCameras">
      <summary>
        <para>Retrieves an array of all camera components from all open Scene views.</para>
      </summary>
      <returns>
        <para>Returns an array of camera components.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneView.GetBuiltinCameraMode(UnityEditor.DrawCameraMode)">
      <summary>
        <para>Gets the built-in CameraMode that matches the specified DrawCameraMode.</para>
      </summary>
      <param name="mode">The DrawCameraMode to match.</param>
      <returns>
        <para>Returns a built-in CameraMode.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneView.IsCameraDrawModeEnabled(UnityEditor.SceneView/CameraMode)">
      <summary>
        <para>Returns true if mode is enabled in the current rendering setup, including custom validators.</para>
      </summary>
      <param name="mode">A CameraMode to check.</param>
      <returns>
        <para>Returns true if the CameraMode is available in this SceneView. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneView.IsCameraDrawModeSupported(UnityEditor.SceneView/CameraMode)">
      <summary>
        <para>Checks if the current rendering configuration supports the CameraMode. The check includes custom validators. </para>
      </summary>
      <param name="mode">A CameraMode to check.</param>
      <returns>
        <para>Returns true if the current rendering configuration supports the CameraMode.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneView.LookAt(UnityEngine.Vector3)">
      <summary>
        <para>Moves the Scene view to focus on a target.</para>
      </summary>
      <param name="point">The position in world space to frame.</param>
      <param name="direction">The direction that the Scene view should view the target point from.</param>
      <param name="newSize">The amount of camera zoom. Sets size.</param>
      <param name="ortho">Whether the camera focus is in orthographic mode (true) or perspective mode (false).</param>
      <param name="instant">Apply the movement immediately (true) or animate the transition (false).</param>
    </member>
    <member name="M:UnityEditor.SceneView.LookAt(UnityEngine.Vector3,UnityEngine.Quaternion)">
      <summary>
        <para>Moves the Scene view to focus on a target.</para>
      </summary>
      <param name="point">The position in world space to frame.</param>
      <param name="direction">The direction that the Scene view should view the target point from.</param>
      <param name="newSize">The amount of camera zoom. Sets size.</param>
      <param name="ortho">Whether the camera focus is in orthographic mode (true) or perspective mode (false).</param>
      <param name="instant">Apply the movement immediately (true) or animate the transition (false).</param>
    </member>
    <member name="M:UnityEditor.SceneView.LookAt(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single)">
      <summary>
        <para>Moves the Scene view to focus on a target.</para>
      </summary>
      <param name="point">The position in world space to frame.</param>
      <param name="direction">The direction that the Scene view should view the target point from.</param>
      <param name="newSize">The amount of camera zoom. Sets size.</param>
      <param name="ortho">Whether the camera focus is in orthographic mode (true) or perspective mode (false).</param>
      <param name="instant">Apply the movement immediately (true) or animate the transition (false).</param>
    </member>
    <member name="M:UnityEditor.SceneView.LookAt(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,System.Boolean)">
      <summary>
        <para>Moves the Scene view to focus on a target.</para>
      </summary>
      <param name="point">The position in world space to frame.</param>
      <param name="direction">The direction that the Scene view should view the target point from.</param>
      <param name="newSize">The amount of camera zoom. Sets size.</param>
      <param name="ortho">Whether the camera focus is in orthographic mode (true) or perspective mode (false).</param>
      <param name="instant">Apply the movement immediately (true) or animate the transition (false).</param>
    </member>
    <member name="M:UnityEditor.SceneView.LookAt(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single,System.Boolean,System.Boolean)">
      <summary>
        <para>Moves the Scene view to focus on a target.</para>
      </summary>
      <param name="point">The position in world space to frame.</param>
      <param name="direction">The direction that the Scene view should view the target point from.</param>
      <param name="newSize">The amount of camera zoom. Sets size.</param>
      <param name="ortho">Whether the camera focus is in orthographic mode (true) or perspective mode (false).</param>
      <param name="instant">Apply the movement immediately (true) or animate the transition (false).</param>
    </member>
    <member name="M:UnityEditor.SceneView.LookAtDirect(UnityEngine.Vector3,UnityEngine.Quaternion)">
      <summary>
        <para>.LookAt without animating the scene movement.</para>
      </summary>
      <param name="point">The position in world space to frame.</param>
      <param name="direction">The direction from which the Scene view should view the point.</param>
      <param name="newSize">The amount of camera zoom. Sets size.</param>
    </member>
    <member name="M:UnityEditor.SceneView.LookAtDirect(UnityEngine.Vector3,UnityEngine.Quaternion,System.Single)">
      <summary>
        <para>.LookAt without animating the scene movement.</para>
      </summary>
      <param name="point">The position in world space to frame.</param>
      <param name="direction">The direction from which the Scene view should view the point.</param>
      <param name="newSize">The amount of camera zoom. Sets size.</param>
    </member>
    <member name="M:UnityEditor.SceneView.MoveToView">
      <summary>
        <para>Transforms all selected object to the scene pivot.</para>
      </summary>
      <param name="target">A transform to place at the scene pivot.</param>
    </member>
    <member name="M:UnityEditor.SceneView.MoveToView(UnityEngine.Transform)">
      <summary>
        <para>Transforms all selected object to the scene pivot.</para>
      </summary>
      <param name="target">A transform to place at the scene pivot.</param>
    </member>
    <member name="M:UnityEditor.SceneView.RepaintAll">
      <summary>
        <para>Repaints every open SceneView.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneView.ResetCameraSettings">
      <summary>
        <para>Resets the CameraSettings for the SceneView Camera to default.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SceneView.SceneViewState">
      <summary>
        <para>A collection of graphic settings for this SceneView. All graphic settings are boolean.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.SceneViewState.allEnabled">
      <summary>
        <para>Whether all graphic settings are enabled for this SceneViewState.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.SceneViewState.alwaysRefresh">
      <summary>
        <para>Whether to redraw SceneView at a fixed interval.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.SceneViewState.alwaysRefreshEnabled">
      <summary>
        <para>Whether to redraw SceneView at a fixed interval.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.SceneViewState.flaresEnabled">
      <summary>
        <para>Whether lens flares render in this SceneView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.SceneViewState.fogEnabled">
      <summary>
        <para>Whether fog renders in this SceneView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.SceneViewState.fxEnabled">
      <summary>
        <para>Whether to render (when enabled) effects in this SceneView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.SceneViewState.imageEffectsEnabled">
      <summary>
        <para>Whether image effects (post processing) render in this SceneView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.SceneViewState.materialUpdateEnabled">
      <summary>
        <para>Whether animated materials render in this SceneView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.SceneViewState.particleSystemsEnabled">
      <summary>
        <para>Whether particle systems render in this SceneView.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneView.SceneViewState.showFlares">
      <summary>
        <para>Whether lens flare rendering is enabled in this SceneView.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneView.SceneViewState.showFog">
      <summary>
        <para>Whether fog rendering is enabled in this SceneView.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneView.SceneViewState.showImageEffects">
      <summary>
        <para>Whether image effects (post processing) rendering is enabled in this SceneView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.SceneViewState.showMaterialUpdate">
      <summary>
        <para>Whether animated materials rendering is enabled in this SceneView.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneView.SceneViewState.showParticleSystems">
      <summary>
        <para>Whether particle systems rendering is enabled in this SceneView.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneView.SceneViewState.showSkybox">
      <summary>
        <para>Whether the skybox rendering is enabled in this SceneView.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SceneView.SceneViewState.showVisualEffectGraphs">
      <summary>
        <para>Whether visual effect graphs rendering is enabled in this SceneView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.SceneViewState.skyboxEnabled">
      <summary>
        <para>Whether the skybox renders in this SceneView.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SceneView.SceneViewState.visualEffectGraphsEnabled">
      <summary>
        <para>Whether visual effect graphs render in this SceneView.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneView.SceneViewState.#ctor">
      <summary>
        <para>Creates a new SceneViewState with either default values or values from another SceneViewState.</para>
      </summary>
      <param name="other">Specify a SceneViewState to copy values from when creating the new SceneViewState. If this param is not specified, the new SceneViewState is created with default values.</param>
    </member>
    <member name="M:UnityEditor.SceneView.SceneViewState.#ctor(UnityEditor.SceneView/SceneViewState)">
      <summary>
        <para>Creates a new SceneViewState with either default values or values from another SceneViewState.</para>
      </summary>
      <param name="other">Specify a SceneViewState to copy values from when creating the new SceneViewState. If this param is not specified, the new SceneViewState is created with default values.</param>
    </member>
    <member name="M:UnityEditor.SceneView.SceneViewState.SetAllEnabled(System.Boolean)">
      <summary>
        <para>Sets all graphic settings, for this SceneViewState, to either true or false.</para>
      </summary>
      <param name="value">The new value for all graphic settings in this SceneViewState. Possible values are true or false.</param>
    </member>
    <member name="M:UnityEditor.SceneView.SetSceneViewShaderReplace(UnityEngine.Shader,System.String)">
      <summary>
        <para>Sets a replacement shader for rendering this Scene view.</para>
      </summary>
      <param name="shader">The replacement shader.</param>
      <param name="replaceString">The replacement shader tag.</param>
    </member>
    <member name="M:UnityEditor.SceneView.SupportsStageHandling">
      <summary>
        <para>Override this method to control whether the Scene view should change when you switch from one stage to another stage.</para>
      </summary>
      <returns>
        <para>True if the Scene view automatically reacts to stage changes.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.SceneViewCameraWindow">
      <summary>
        <para>Use this class to instantiate a SceneViewCameraWindow window.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.SceneViewCameraWindow.additionalSettingsGui(System.Action`1&lt;UnityEditor.SceneView&gt;)">
      <summary>
        <para>Subscribe to this event to receive a callback when the SceneViewCameraWindow.OnGUI function is called.</para>
      </summary>
      <param name="value">The SceneView that opened the SceneViewCameraWindow window.</param>
    </member>
    <member name="M:UnityEditor.SceneViewCameraWindow.#ctor(UnityEditor.SceneView)">
      <summary>
        <para>Creates an instance of the SceneViewCameraWindow window.</para>
      </summary>
      <param name="sceneView">The SceneView inspected by the SceneViewCameraWindow window.</param>
    </member>
    <member name="M:UnityEditor.SceneViewCameraWindow.GetWindowSize">
      <summary>
        <para>Retrieves the dimensions of the SceneViewCameraWindow window.</para>
      </summary>
      <returns>
        <para>Returns the width and height of the SceneViewCameraWindow window.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneViewCameraWindow.OnGUI(UnityEngine.Rect)">
      <summary>
        <para>A callback used for drawing the GUI controls of the SceneViewCameraWindow window.</para>
      </summary>
      <param name="rect">The rectangle where the GUI controls are drawn.</param>
    </member>
    <member name="T:UnityEditor.SceneVisibilityManager">
      <summary>
        <para>Manages Scene Visibility in the editor.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.SceneVisibilityManager.pickingChanged(System.Action)">
      <summary>
        <para>The event raised whenever the picking state of a GameObject changes.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="?:UnityEditor.SceneVisibilityManager.visibilityChanged(System.Action)">
      <summary>
        <para>The event raised whenever the visibility of a GameObject changes.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.AreAllDescendantsHidden(UnityEngine.GameObject)">
      <summary>
        <para>Checks whether all the descendants of a GameObject are hidden.</para>
      </summary>
      <param name="gameObject">GameObject to check.</param>
      <returns>
        <para>Returns true if all descendants are hidden.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.AreAllDescendantsHidden(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Checks whether root GameObjects, and all their descendants, are hidden in a Scene.</para>
      </summary>
      <param name="scene">Scene to check.</param>
      <returns>
        <para>Returns true if all root GameObjects of the Scene and all their descendants are hidden.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.AreAllDescendantsVisible(UnityEngine.GameObject)">
      <summary>
        <para>Checks whether all the descendants are visible.</para>
      </summary>
      <param name="gameObject">GameObject to check.</param>
      <returns>
        <para>Returns true if all descendants of the GameObject are visible.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.AreAnyDescendantsHidden(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Checks whether any descendants are hidden.</para>
      </summary>
      <param name="scene">Scene to check.</param>
      <returns>
        <para>Returns true when at least one hidden descendant is found.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.DisableAllPicking">
      <summary>
        <para>Disables picking on all GameObjects.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.DisablePicking(UnityEngine.GameObject,System.Boolean)">
      <summary>
        <para>Disables picking on a GameObject, or an Array of GameObjects, and their descendants.</para>
      </summary>
      <param name="gameObject">GameObject on which to disable picking.</param>
      <param name="includeDescendants">Whether to include descendants.</param>
      <param name="gameObjects">Array of GameObjects on which to disable picking.</param>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.DisablePicking(UnityEngine.GameObject[],System.Boolean)">
      <summary>
        <para>Disables picking on a GameObject, or an Array of GameObjects, and their descendants.</para>
      </summary>
      <param name="gameObject">GameObject on which to disable picking.</param>
      <param name="includeDescendants">Whether to include descendants.</param>
      <param name="gameObjects">Array of GameObjects on which to disable picking.</param>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.DisablePicking(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Disables picking on all GameObjects in a Scene.</para>
      </summary>
      <param name="scene">Scene containing GameObjects on which to disable picking.</param>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.EnableAllPicking">
      <summary>
        <para>Enables picking on all GameObjects.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.EnablePicking(UnityEngine.GameObject,System.Boolean)">
      <summary>
        <para>Enables picking on a GameObject, or an array of GameObjects, and its descendants.</para>
      </summary>
      <param name="includeDescendants">Whether to include descendants.</param>
      <param name="gameObject">GameObject on which to enable picking.</param>
      <param name="gameObjects">Array of GameObjects on which to enable picking.</param>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.EnablePicking(UnityEngine.GameObject[],System.Boolean)">
      <summary>
        <para>Enables picking on a GameObject, or an array of GameObjects, and its descendants.</para>
      </summary>
      <param name="includeDescendants">Whether to include descendants.</param>
      <param name="gameObject">GameObject on which to enable picking.</param>
      <param name="gameObjects">Array of GameObjects on which to enable picking.</param>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.EnablePicking(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Enables picking on all GameObjects in a Scene.</para>
      </summary>
      <param name="scene">Scene containing GameObjects on which to enable picking.</param>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.ExitIsolation">
      <summary>
        <para>Exits Isolation Mode.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.Hide(UnityEngine.GameObject,System.Boolean)">
      <summary>
        <para>Hides a GameObject, or an Array of GameObjects,  and their descendants.</para>
      </summary>
      <param name="gameObject">GameObject to hide.</param>
      <param name="gameObjects">Array of GameObjects to hide.</param>
      <param name="includeDescendants">Whether to also hide descendants.</param>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.Hide(UnityEngine.GameObject[],System.Boolean)">
      <summary>
        <para>Hides a GameObject, or an Array of GameObjects,  and their descendants.</para>
      </summary>
      <param name="gameObject">GameObject to hide.</param>
      <param name="gameObjects">Array of GameObjects to hide.</param>
      <param name="includeDescendants">Whether to also hide descendants.</param>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.Hide(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Hides all GameObjects in a scene.</para>
      </summary>
      <param name="scene">Scene containing GameObjects to hide.</param>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.HideAll">
      <summary>
        <para>Hides all GameObjects.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.IsCurrentStageIsolated">
      <summary>
        <para>Checks whether the current stage is in Isolation mode.</para>
      </summary>
      <returns>
        <para>Returns true if current stage is in Isolation mode. Otherwise, returns false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.IsHidden(UnityEngine.GameObject,System.Boolean)">
      <summary>
        <para>Checks the hidden state of a GameObject and, optionally, its descendants.</para>
      </summary>
      <param name="gameObject">GameObject to check.</param>
      <param name="includeDescendants">Specify true to check the GameObject and all its descendants. Set to false to check the GameObject.</param>
      <returns>
        <para>When includeDescendants is true, this method returns true when the GameObject and all its descendants are hidden. When includeDescendants is false, this method returns true when the GameObject is hidden.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.Isolate(UnityEngine.GameObject,System.Boolean)">
      <summary>
        <para>Isolates a GameObject and its descendants.</para>
      </summary>
      <param name="gameObject">GameObject to isolate.</param>
      <param name="includeDescendants">Whether to include descendants.</param>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.Isolate(UnityEngine.GameObject[],System.Boolean)">
      <summary>
        <para>Isolates an Array of GameObjects and their descendants.</para>
      </summary>
      <param name="gameObjects">Array of GameObjects to isolate.</param>
      <param name="includeDescendants">Whether to include descendants.</param>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.IsPickingDisabled(UnityEngine.GameObject,System.Boolean)">
      <summary>
        <para>Checks the picking state of a GameObject and, optionally, its descendants.</para>
      </summary>
      <param name="gameObject">GameObject to check.</param>
      <param name="includeDescendants">Specify true to check the GameObject and all its descendants. Set to false to check the GameObject.</param>
      <returns>
        <para>When includeDescendants is true, this method returns true when the GameObject and all its descendants have picking disabled. When includeDescendants is false, this method returns true when the GameObject has picking disabled.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.IsPickingDisabledOnAllDescendants(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Checks whether all the descendants of a GameObject have picking disabled.</para>
      </summary>
      <param name="scene">Scene to check.</param>
      <returns>
        <para>Returns true if all descendants have picking disabled.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.IsPickingDisabledOnAllDescendants(UnityEngine.GameObject)">
      <summary>
        <para>Checks whether root GameObjects, and all their descendants, have picking disabled in a scene.</para>
      </summary>
      <param name="gameObject">GameObject to check.</param>
      <returns>
        <para>Returns true if all root GameObjects of the Scene and all their descendants have picking disabled.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.IsPickingDisabledOnAnyDescendant(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Checks whether any descendants have picking disabled.</para>
      </summary>
      <param name="scene">Scene to check.</param>
      <returns>
        <para>Returns true when at least one descendant with picking disabled is found.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.IsPickingEnabledOnAllDescendants(UnityEngine.GameObject)">
      <summary>
        <para>Checks whether all the descendants are pickable.</para>
      </summary>
      <param name="gameObject">GameObject on which to do the check.</param>
      <returns>
        <para>Returns true if all descendants of the GameObject are pickable.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.Show(UnityEngine.GameObject,System.Boolean)">
      <summary>
        <para>Shows a GameObject, or an array of GameObjects, and its descendants.</para>
      </summary>
      <param name="gameObject">GameObject to show.</param>
      <param name="gameObjects">Array of GameObjects to show.</param>
      <param name="includeDescendants">Whether to include descendants.</param>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.Show(UnityEngine.GameObject[],System.Boolean)">
      <summary>
        <para>Shows a GameObject, or an array of GameObjects, and its descendants.</para>
      </summary>
      <param name="gameObject">GameObject to show.</param>
      <param name="gameObjects">Array of GameObjects to show.</param>
      <param name="includeDescendants">Whether to include descendants.</param>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.Show(UnityEngine.SceneManagement.Scene)">
      <summary>
        <para>Shows all GameObjects in scene.</para>
      </summary>
      <param name="scene">Scene containing GameObjects to show.</param>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.ShowAll">
      <summary>
        <para>Shows all GameObjects.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.TogglePicking(UnityEngine.GameObject,System.Boolean)">
      <summary>
        <para>Toggles the picking ability of a GameObject.</para>
      </summary>
      <param name="gameObject">GameObject on which to toggle picking ability.</param>
      <param name="includeDescendants">Whether to include descendants.</param>
    </member>
    <member name="M:UnityEditor.SceneVisibilityManager.ToggleVisibility(UnityEngine.GameObject,System.Boolean)">
      <summary>
        <para>Toggles the visible state of a GameObject.</para>
      </summary>
      <param name="gameObject">GameObject on which to toggle visibility.</param>
      <param name="includeDescendants">Whether to include descendants.</param>
    </member>
    <member name="T:UnityEditor.ScriptableSingleton`1">
      <summary>
        <para>Generic class for storing Editor state.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ScriptableSingleton_1.instance">
      <summary>
        <para>Gets the instance of the Singleton. Unity creates the Singleton instance when this property is accessed for the first time. If you use the FilePathAttribute, then Unity loads the data on the first access as well.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ScriptableSingleton_1.GetFilePath">
      <summary>
        <para>Get the file path where this ScriptableSingleton is saved to.</para>
      </summary>
      <returns>
        <para>The file path where this ScriptableSingleton is saved to.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ScriptableSingleton_1.Save(System.Boolean)">
      <summary>
        <para>Saves the current state of the ScriptableSingleton.</para>
      </summary>
      <param name="saveAsText">If true then the file is saved as text, if false it is saved as binary.</param>
    </member>
    <member name="T:UnityEditor.ScriptableWizard">
      <summary>
        <para>Derive from this class to create an editor wizard.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ScriptableWizard.createButtonName">
      <summary>
        <para>Allows you to set the text shown on the create button of the wizard.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ScriptableWizard.errorString">
      <summary>
        <para>Allows you to set the error text of the wizard.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ScriptableWizard.helpString">
      <summary>
        <para>Allows you to set the help text of the wizard.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ScriptableWizard.isValid">
      <summary>
        <para>Allows you to enable and disable the wizard create button, so that the user can not click it.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ScriptableWizard.otherButtonName">
      <summary>
        <para>Allows you to set the text shown on the optional other button of the wizard. Leave this parameter out to leave the button out.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ScriptableWizard.DisplayWizard(System.String)">
      <summary>
        <para>Creates a wizard.</para>
      </summary>
      <param name="title">The title shown at the top of the wizard window.</param>
      <returns>
        <para>The wizard.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ScriptableWizard.DisplayWizard(System.String,System.String)">
      <summary>
        <para>Creates a wizard.</para>
      </summary>
      <param name="title">The title shown at the top of the wizard window.</param>
      <param name="createButtonName">The text shown on the create button.</param>
      <param name="otherButtonName">The text shown on the optional other button. Leave this parameter out to leave the button out.</param>
      <returns>
        <para>The wizard.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ScriptableWizard.DisplayWizard(System.String,System.String,System.String)">
      <summary>
        <para>Creates a wizard.</para>
      </summary>
      <param name="title">The title shown at the top of the wizard window.</param>
      <param name="createButtonName">The text shown on the create button.</param>
      <param name="otherButtonName">The text shown on the optional other button. Leave this parameter out to leave the button out.</param>
      <returns>
        <para>The wizard.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ScriptableWizard.DisplayWizard(System.String,System.Type,System.String,System.String)">
      <summary>
        <para>Creates a wizard.</para>
      </summary>
      <param name="title">The title shown at the top of the wizard window.</param>
      <param name="klass">The class implementing the wizard. It has to derive from ScriptableWizard.</param>
      <param name="createButtonName">The text shown on the create button.</param>
      <param name="otherButtonName">The text shown on the optional other button. Leave this parameter out to leave the button out.</param>
      <returns>
        <para>The wizard.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ScriptableWizard.DrawWizardGUI">
      <summary>
        <para>Will be called for drawing contents when the ScriptableWizard needs to update its GUI.</para>
      </summary>
      <returns>
        <para>Returns true if any property has been modified.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.ScriptCallOptimizationLevel">
      <summary>
        <para>Script call optimization level.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ScriptCallOptimizationLevel.FastButNoExceptions">
      <summary>
        <para>Script method call overhead decreased at the expense of limited compatibility.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ScriptCallOptimizationLevel.SlowAndSafe">
      <summary>
        <para>Default setting.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ScriptCompiler">
      <summary>
        <para>Represents different C# compilers that can be used to compile C# scripts.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ScriptCompiler.Mono">
      <summary>
        <para>Mono C# Compiler.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ScriptCompiler.Roslyn">
      <summary>
        <para>Roslyn C# Compiler.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Scripting.ManagedDebugger">
      <summary>
        <para>Representation of managed debugger in UnityEditor.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Scripting.ManagedDebugger.debuggerAttached(System.Action`1&lt;System.Boolean&gt;)">
      <summary>
        <para>This event triggers whenever managed debugger is attached or detached.</para>
      </summary>
      <param name="value">if the debugger is attached or not.</param>
    </member>
    <member name="P:UnityEditor.Scripting.ManagedDebugger.isAttached">
      <summary>
        <para>Returns true if there is a managed debugger attached to the UnityEditor, or false if there is not.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Scripting.ManagedDebugger.isEnabled">
      <summary>
        <para>Returns true if managed debugger is enabled, or false if it is not.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Scripting.ManagedDebugger.Disconnect">
      <summary>
        <para>Disconnects the managed debugger attached to the UnityEditor.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ScriptingImplementation">
      <summary>
        <para>Scripting implementation (backend).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ScriptingImplementation.IL2CPP">
      <summary>
        <para>Unity's .NET runtime.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ScriptingImplementation.Mono2x">
      <summary>
        <para>The standard Mono 2.6 runtime.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ScriptingImplementation.WinRTDotNET">
      <summary>
        <para>Microsoft's .NET runtime.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ScriptingRuntimeVersion">
      <summary>
        <para>Available scripting runtimes to be used by the Editor and Players.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ScriptingRuntimeVersion.Latest">
      <summary>
        <para>Use the most recent version of the scripting runtime available.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ScriptingRuntimeVersion.Legacy">
      <summary>
        <para>Use the stable version of the scripting runtime.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.SearchService.IFilterEngine_1">
      <summary>
        <para>The base interface for search engines that implement a filter operation.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SearchService.IFilterEngine_1.Filter(UnityEditor.SearchService.ISearchContext,System.String,T)">
      <summary>
        <para>This function checks whether or not the specified element satisfies the search query.</para>
      </summary>
      <param name="context">The search context.</param>
      <param name="query">The query string used for the search.</param>
      <param name="objectToFilter">The element to test against the search query.</param>
      <returns>
        <para>True if the element satisfies the search query, false otherwise.</para>
      </returns>
    </member>
    <member name="?:UnityEditor.SearchService.IObjectSelectorEngine">
      <summary>
        <para>An interface that ObjectSelector engines implement. It inherits from SearchService.ISelectorEngine.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.SearchService.IProjectSearchEngine">
      <summary>
        <para>The interface for Project engines to implement. It inherits from SearchService.ISearchEngine_1.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.SearchService.ISceneSearchEngine">
      <summary>
        <para>The interface for Scene engines to implement. It inherits from SearchService.IFilterEngine_1.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.SearchService.ISearchContext">
      <summary>
        <para>The base interface for search contexts.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ISearchContext.engineScope">
      <summary>
        <para>An enum that identifies the current search scope.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ISearchContext.guid">
      <summary>
        <para>A unique identifier for this search context.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ISearchContext.requiredTypeNames">
      <summary>
        <para>An IEnumerable of strings that contains the type name constraints for this search.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ISearchContext.requiredTypes">
      <summary>
        <para>IEnumerable of types that contains the type constraints for this search.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.SearchService.ISearchEngine_1">
      <summary>
        <para>The base interface for search engines that implement a search operation.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SearchService.ISearchEngine_1.Search(UnityEditor.SearchService.ISearchContext,System.String,System.Action`1&lt;System.Collections.Generic.IEnumerable`1&lt;T&gt;&gt;)">
      <summary>
        <para>This function returns an IEnumerable of items that satisfy the search query.</para>
      </summary>
      <param name="context">The search context.</param>
      <param name="query">The query string used for the search.</param>
      <param name="asyncItemsReceived">Callback used to return results asynchronously.</param>
      <returns>
        <para>The initial search results, if any are available. If you want to return results asynchronously, and no results are available yet, return an empty list instead. If you return null, then Unity uses the default implementation.</para>
      </returns>
    </member>
    <member name="?:UnityEditor.SearchService.ISearchEngineBase">
      <summary>
        <para>The base interface for all search engines.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ISearchEngineBase.name">
      <summary>
        <para>The name displayed in the Preferences window in the Unity Editor. This name is used to store the active engine in the preferences.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SearchService.ISearchEngineBase.BeginSearch(UnityEditor.SearchService.ISearchContext,System.String)">
      <summary>
        <para>A function called at the beginning of each search.</para>
      </summary>
      <param name="context">The search context.</param>
      <param name="query">The query string used for the search.</param>
    </member>
    <member name="M:UnityEditor.SearchService.ISearchEngineBase.BeginSession(UnityEditor.SearchService.ISearchContext)">
      <summary>
        <para>A function called at the beginning of a search session.</para>
      </summary>
      <param name="context">The search context.</param>
    </member>
    <member name="M:UnityEditor.SearchService.ISearchEngineBase.EndSearch(UnityEditor.SearchService.ISearchContext)">
      <summary>
        <para>A function called at the end of a search.</para>
      </summary>
      <param name="context">The search context.</param>
    </member>
    <member name="M:UnityEditor.SearchService.ISearchEngineBase.EndSession(UnityEditor.SearchService.ISearchContext)">
      <summary>
        <para>A function called at the end of a search session.</para>
      </summary>
      <param name="context">The search context.</param>
    </member>
    <member name="?:UnityEditor.SearchService.ISelectorEngine">
      <summary>
        <para>The base interface for search engines that implement an object select operation.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SearchService.ISelectorEngine.SelectObject(UnityEditor.SearchService.ISearchContext,System.Action`2&lt;UnityEngine.Object,System.Boolean&gt;,System.Action`1&lt;UnityEngine.Object&gt;)">
      <summary>
        <para>This function is called when a window must be opened to perform a search and select operation.</para>
      </summary>
      <param name="context">The search context.</param>
      <param name="onObjectSelectorClosed">Callback to call when the selector window is closed. The callback takes two arguments. The first argument is the selected object, or null for none. The second is a boolean that indicates whether the operation was cancelled or not.</param>
      <param name="onObjectSelectedUpdated">Callback to call when the selection in the window changes. This callback takes one argument: the selected object, or null for none.</param>
      <returns>
        <para>True if the search engine handles the object select operation, false otherwise. If false is returned, the default object selector is used instead.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SearchService.ISelectorEngine.SetSearchFilter(UnityEditor.SearchService.ISearchContext,System.String)">
      <summary>
        <para>This function is called when the initial search text for the object selector window is set.</para>
      </summary>
      <param name="context">The search context.</param>
      <param name="searchFilter">The search filter to set on the object selector window.</param>
    </member>
    <member name="T:UnityEditor.SearchService.ObjectSelector">
      <summary>
        <para>Use this API to select objects. Engines for this type of search implement the SearchService.IObjectSelectorEngine interface.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SearchService.ObjectSelector.EngineScope">
      <summary>
        <para>A enum that indicates the search scope of ObjectSelector engines. Used by ObjectSelectorSearchContext.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SearchService.ObjectSelector.RegisterEngine(UnityEditor.SearchService.IObjectSelectorEngine)">
      <summary>
        <para>Registers an ObjectSelector search engine dynamically.</para>
      </summary>
      <param name="engine">The ObjectSelector search engine to register.</param>
    </member>
    <member name="M:UnityEditor.SearchService.ObjectSelector.UnregisterEngine(UnityEditor.SearchService.IObjectSelectorEngine)">
      <summary>
        <para>Unregisters a dynamically registered engine.</para>
      </summary>
      <param name="engine">The ObjectSelector search engine to unregister.</param>
    </member>
    <member name="T:UnityEditor.SearchService.ObjectSelectorEngineAttribute">
      <summary>
        <para>Use this class attribute to register ObjectSelector search engines automatically. Search engines with this attribute must implement the SearchService.IObjectSelectorEngine interface.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SearchService.ObjectSelectorHandlerAttribute">
      <summary>
        <para>A class attribute that allows you to define dynamic constraint on a MonoBehavior or ScriptableObject's field for the object selector.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ObjectSelectorHandlerAttribute.attributeType">
      <summary>
        <para>The attribute type.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SearchService.ObjectSelectorHandlerAttribute.#ctor(System.Type)">
      <summary>
        <para>Constructor used to declare the SearchService.ObjectSelectorHandlerAttribute on a method.</para>
      </summary>
      <param name="attributeType">The attribute type.</param>
    </member>
    <member name="T:UnityEditor.SearchService.ObjectSelectorSearch">
      <summary>
        <para>Use this API to select objects. Engines for this type of search implement the SearchService.IObjectSelectorEngine interface.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SearchService.ObjectSelectorSearch.EngineScope">
      <summary>
        <para>A enum that indicates the search scope of ObjectSelectorSearch engines. Used by ObjectSelectorSearchContext.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SearchService.ObjectSelectorSearch.RegisterEngine(UnityEditor.SearchService.IObjectSelectorEngine)">
      <summary>
        <para>Registers an ObjectSelector search engine dynamically.</para>
      </summary>
      <param name="engine">The ObjectSelector search engine to register.</param>
    </member>
    <member name="M:UnityEditor.SearchService.ObjectSelectorSearch.UnregisterEngine(UnityEditor.SearchService.IObjectSelectorEngine)">
      <summary>
        <para>Unregisters a dynamically registered engine.</para>
      </summary>
      <param name="engine">The ObjectSelector search engine to unregister.</param>
    </member>
    <member name="T:UnityEditor.SearchService.ObjectSelectorSearchContext">
      <summary>
        <para>A search context implementation for ObjectSelector search engines. All methods that are called on an ObjectSelector search engine, and expect a SearchService.ISearchContext, receive an object of this type.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ObjectSelectorSearchContext.allowedInstanceIds">
      <summary>
        <para>IEnumerable of integers that contains the instanceIds of objects that the search can include in its results.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ObjectSelectorSearchContext.currentObject">
      <summary>
        <para>Identifies the currently selected object.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ObjectSelectorSearchContext.editedObjects">
      <summary>
        <para>When the object selector is opened from an Inspector, this property indicates which objects are currently being edited.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ObjectSelectorSearchContext.engineScope">
      <summary>
        <para>An enum that identifies the scope of the current search. This property is automatically set to SearchService.ObjectSelector.EngineScope.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ObjectSelectorSearchContext.guid">
      <summary>
        <para>A unique identifier for this search context.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ObjectSelectorSearchContext.requiredTypeNames">
      <summary>
        <para>An IEnumerable of strings that contains the type name constraints for this search.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ObjectSelectorSearchContext.requiredTypes">
      <summary>
        <para>An IEnumerable of types that contains the type constraints for this search.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ObjectSelectorSearchContext.selectorConstraint">
      <summary>
        <para>A function that, when called, indicates whether the object selector should show an item.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ObjectSelectorSearchContext.visibleObjects">
      <summary>
        <para>Indicates which categories of objects are visible in the window. For example, GameObjects, Assets, or both.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SearchService.ObjectSelectorTargetInfo">
      <summary>
        <para>A structure that contains information about an item that is about to be shown.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ObjectSelectorTargetInfo.globalObjectId">
      <summary>
        <para>The object's global identifier. It is always valid.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ObjectSelectorTargetInfo.targetObject">
      <summary>
        <para>If the object is already loaded in Unity, this is its instance. The instance can be null.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ObjectSelectorTargetInfo.type">
      <summary>
        <para>If the object is currently loaded in Unity, this is its underlying type. The type can be null.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SearchService.ObjectSelectorTargetInfo.#ctor(UnityEditor.GlobalObjectId,UnityEngine.Object,System.Type)">
      <summary>
        <para>Creates an ObjectSelectorTargetInfo.</para>
      </summary>
      <param name="globalObjectId">The object's global identifier.</param>
      <param name="targetObject">The object's instance. It can be null if the object is not loaded.</param>
      <param name="type">The object's underlying type. It can be null if the object is not loaded.</param>
    </member>
    <member name="M:UnityEditor.SearchService.ObjectSelectorTargetInfo.LoadObject">
      <summary>
        <para>Loads an object instance if it is not already loaded in Unity. This can return null if the object is part of a Scene or Prefab that is not loaded.</para>
      </summary>
      <returns>
        <para>The object instance.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.SearchService.Project">
      <summary>
        <para>Use this API to perform searches in the Project. Engines for this type of search implement the SearchService.IProjectSearchEngine interface.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SearchService.Project.EngineScope">
      <summary>
        <para>A enum that indicates the search scope for Project engines. It is used by ProjectSearchContext.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SearchService.Project.RegisterEngine(UnityEditor.SearchService.IProjectSearchEngine)">
      <summary>
        <para>Registers a Project search engine dynamically.</para>
      </summary>
      <param name="engine">The Project search engine to register.</param>
    </member>
    <member name="M:UnityEditor.SearchService.Project.UnregisterEngine(UnityEditor.SearchService.IProjectSearchEngine)">
      <summary>
        <para>Unregisters a dynamically registered engine.</para>
      </summary>
      <param name="engine">The Project search engine to unregister.</param>
    </member>
    <member name="T:UnityEditor.SearchService.ProjectSearch">
      <summary>
        <para>Use this API to perform searches in the Project. Engines for this type of search implement the SearchService.IProjectSearchEngine interface.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SearchService.ProjectSearch.EngineScope">
      <summary>
        <para>A enum that indicates the search scope for ProjectSearch engines. It is used by ProjectSearchContext.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SearchService.ProjectSearch.RegisterEngine(UnityEditor.SearchService.IProjectSearchEngine)">
      <summary>
        <para>Registers a Project search engine dynamically.</para>
      </summary>
      <param name="engine">The Project search engine to register.</param>
    </member>
    <member name="M:UnityEditor.SearchService.ProjectSearch.UnregisterEngine(UnityEditor.SearchService.IProjectSearchEngine)">
      <summary>
        <para>Unregisters a dynamically registered engine.</para>
      </summary>
      <param name="engine">The Project search engine to unregister.</param>
    </member>
    <member name="T:UnityEditor.SearchService.ProjectSearchContext">
      <summary>
        <para>A search context implementation for Project search engines. All methods that are called on a Project search engine, and expect a SearchService.ISearchContext, receive an object of this type.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ProjectSearchContext.engineScope">
      <summary>
        <para>An enum that identifies the scope of the current search. This property is automatically set to SearchService.Project.EngineScope.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ProjectSearchContext.guid">
      <summary>
        <para>A unique identifier for this search context.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ProjectSearchContext.requiredTypeNames">
      <summary>
        <para>An IEnumerable of strings that contains the type name constraints for this search.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.ProjectSearchContext.requiredTypes">
      <summary>
        <para>An IEnumerable of types that contains the type constraints for this search.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SearchService.ProjectSearchEngineAttribute">
      <summary>
        <para>A class attribute that registers Project search engines automatically. Search engines with this attribute must implement the SearchService.IProjectSearchEngine interface.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SearchService.Scene">
      <summary>
        <para>Use this API to perform searches in the Scene. Engines for this type of search implement the SearchService.ISceneSearchEngine interface.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SearchService.Scene.EngineScope">
      <summary>
        <para>A enum that indicates the search scope for Scene engines. It is used by SceneSearchContext.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SearchService.Scene.RegisterEngine(UnityEditor.SearchService.ISceneSearchEngine)">
      <summary>
        <para>Registers a Scene search engine dynamically.</para>
      </summary>
      <param name="engine">The Scene search engine to register.</param>
    </member>
    <member name="M:UnityEditor.SearchService.Scene.UnregisterEngine(UnityEditor.SearchService.ISceneSearchEngine)">
      <summary>
        <para>Unregisters a dynamically registered engine.</para>
      </summary>
      <param name="engine">The Scene search engine to unregister.</param>
    </member>
    <member name="T:UnityEditor.SearchService.SceneSearch">
      <summary>
        <para>Use this API to perform searches in the Scene. Engines for this type of search implement the SearchService.ISceneSearchEngine interface.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SearchService.SceneSearch.EngineScope">
      <summary>
        <para>A enum that indicates the search scope for SceneSearch engines. It is used by SceneSearchContext.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SearchService.SceneSearch.RegisterEngine(UnityEditor.SearchService.ISceneSearchEngine)">
      <summary>
        <para>Registers a Scene search engine dynamically.</para>
      </summary>
      <param name="engine">The Scene search engine to register.</param>
    </member>
    <member name="M:UnityEditor.SearchService.SceneSearch.UnregisterEngine(UnityEditor.SearchService.ISceneSearchEngine)">
      <summary>
        <para>Unregisters a dynamically registered engine.</para>
      </summary>
      <param name="engine">The Scene search engine to unregister.</param>
    </member>
    <member name="T:UnityEditor.SearchService.SceneSearchContext">
      <summary>
        <para>A search context implementation for Scene search engines. All methods that are called on a Scene search engine, and expect a SearchService.ISearchContext, receive an object of this type.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.SceneSearchContext.engineScope">
      <summary>
        <para>An enum that identifies the scope of the current search. This property is automatically set to SearchService.Scene.EngineScope.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.SceneSearchContext.guid">
      <summary>
        <para>A unique identifier for this search context.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.SceneSearchContext.requiredTypeNames">
      <summary>
        <para>An IEnumerable of strings that contains the type name constraints for this search.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.SceneSearchContext.requiredTypes">
      <summary>
        <para>An IEnumerable of types that contains the type constraints for this search.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SearchService.SceneSearchContext.rootProperty">
      <summary>
        <para>The root HierarchyProperty on which the search is started.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SearchService.SceneSearchEngineAttribute">
      <summary>
        <para>A class attribute that registers Scene search engines automatically. Search engines with this attribute must implement the SearchService.ISceneSearchEngine interface.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SearchService.SearchEngineScope">
      <summary>
        <para>An enumeration that contains the available search engine scopes.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SearchService.SearchEngineScope.ObjectSelector">
      <summary>
        <para>Identifies a search for ObjectSelector engines.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SearchService.SearchEngineScope.Project">
      <summary>
        <para>Identifies a search for Project engines.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SearchService.SearchEngineScope.Scene">
      <summary>
        <para>Identifies a search for Scene engines.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SearchService.VisibleObjects">
      <summary>
        <para>A bit field that contains the different categories of object that the object selector window can display.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SearchService.VisibleObjects.All">
      <summary>
        <para>The object selector window can display all categories.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SearchService.VisibleObjects.Assets">
      <summary>
        <para>The object selector window can only display Assets.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SearchService.VisibleObjects.None">
      <summary>
        <para>The object selector window cannot display any objects.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SearchService.VisibleObjects.Scene">
      <summary>
        <para>The object selector window can only display GameObjects.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Selection">
      <summary>
        <para>Access to the selection in the editor.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Selection.activeContext">
      <summary>
        <para>Returns the current context object, as was set via SetActiveObjectWithContext.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Selection.activeGameObject">
      <summary>
        <para>Returns the active game object. (The one shown in the inspector).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Selection.activeInstanceID">
      <summary>
        <para>Returns the instanceID of the actual object selection. Includes Prefabs, non-modifiable objects.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Selection.activeObject">
      <summary>
        <para>Returns the actual object selection. Includes Prefabs, non-modifiable objects.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Selection.activeTransform">
      <summary>
        <para>Returns the active transform. (The one shown in the inspector).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Selection.assetGUIDs">
      <summary>
        <para>Returns the guids of the selected assets.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Selection.count">
      <summary>
        <para>Returns the number of objects in the Selection.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Selection.gameObjects">
      <summary>
        <para>Returns the actual game object selection. Includes Prefabs, non-modifiable objects.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Selection.instanceIDs">
      <summary>
        <para>The actual unfiltered selection from the Scene returned as instance ids instead of objects.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Selection.objects">
      <summary>
        <para>The actual unfiltered selection from the Scene.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Selection.selectionChanged">
      <summary>
        <para>Delegate callback triggered when currently active/selected item has changed.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Selection.transforms">
      <summary>
        <para>Returns the top level selection, excluding Prefabs.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Selection.Contains(System.Int32)">
      <summary>
        <para>Returns whether an object is contained in the current selection.</para>
      </summary>
      <param name="instanceID">
      </param>
      <param name="obj">
      </param>
    </member>
    <member name="M:UnityEditor.Selection.Contains(UnityEngine.Object)">
      <summary>
        <para>Returns whether an object is contained in the current selection.</para>
      </summary>
      <param name="instanceID">
      </param>
      <param name="obj">
      </param>
    </member>
    <member name="M:UnityEditor.Selection.GetFiltered(System.Type,UnityEditor.SelectionMode)">
      <summary>
        <para>Returns the current selection filtered by type and mode.</para>
      </summary>
      <param name="type">Only objects of this type will be retrieved.</param>
      <param name="mode">Further options to refine the selection.</param>
    </member>
    <member name="M:UnityEditor.Selection.GetTransforms(UnityEditor.SelectionMode)">
      <summary>
        <para>Allows for fine grained control of the selection type using the SelectionMode bitmask.</para>
      </summary>
      <param name="mode">Options for refining the selection.</param>
    </member>
    <member name="M:UnityEditor.Selection.SetActiveObjectWithContext(UnityEngine.Object,UnityEngine.Object)">
      <summary>
        <para>Selects an object with a context.</para>
      </summary>
      <param name="obj">Object being selected (will be equal activeObject).</param>
      <param name="context">Context object.</param>
    </member>
    <member name="T:UnityEditor.SelectionMode">
      <summary>
        <para>SelectionMode can be used to tweak the selection returned by Selection.GetTransforms.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SelectionMode.Assets">
      <summary>
        <para>Only return objects that are assets in the Asset directory.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SelectionMode.Deep">
      <summary>
        <para>Return the selection and all child transforms of the selection.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SelectionMode.DeepAssets">
      <summary>
        <para>If the selection contains folders, also include all assets and subfolders within that folder in the file hierarchy.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SelectionMode.Editable">
      <summary>
        <para>Excludes any objects which shall not be modified.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SelectionMode.ExcludePrefab">
      <summary>
        <para>Excludes any Prefabs from the selection.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SelectionMode.TopLevel">
      <summary>
        <para>Only return the topmost selected transform. A selected child of another selected transform will be filtered out.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SelectionMode.Unfiltered">
      <summary>
        <para>Return the whole selection.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SemanticMergeMode">
      <summary>
        <para>Behavior of semantic merge.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SemanticMergeMode.Off">
      <summary>
        <para>Disable use of semantic merging.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SerializationUtility">
      <summary>
        <para>Utility functions related to Serialization.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SerializationUtility.ClearAllManagedReferencesWithMissingTypes(UnityEngine.Object)">
      <summary>
        <para>Removes all managed references that are missing their type.</para>
      </summary>
      <param name="obj">
      </param>
    </member>
    <member name="M:UnityEditor.SerializationUtility.ClearManagedReferenceWithMissingType(UnityEngine.Object,System.Int64)">
      <summary>
        <para>Drop the serialized data associated with a specific managed reference object that is missing its type.</para>
      </summary>
      <param name="obj">
      </param>
      <param name="id">
      </param>
    </member>
    <member name="M:UnityEditor.SerializationUtility.GetManagedReference(UnityEngine.Object,System.Int64)">
      <summary>
        <para>Retrieves an object based on its managed reference Id.</para>
      </summary>
      <param name="obj">
      </param>
      <param name="id">
      </param>
    </member>
    <member name="M:UnityEditor.SerializationUtility.GetManagedReferenceIdForObject(UnityEngine.Object,System.Object)">
      <summary>
        <para>Retrieves the managed reference Id for an object that is referenced using SerializeReference.</para>
      </summary>
      <param name="obj">
      </param>
      <param name="scriptObj">
      </param>
    </member>
    <member name="M:UnityEditor.SerializationUtility.GetManagedReferenceIds(UnityEngine.Object)">
      <summary>
        <para>Retrieves the list of managed reference Ids assigned to objects that are referenced using SerializeReference.</para>
      </summary>
      <param name="obj">
      </param>
    </member>
    <member name="M:UnityEditor.SerializationUtility.GetManagedReferencesWithMissingTypes(UnityEngine.Object)">
      <summary>
        <para>Returns the list of managed references that could not be deserialized because of a missing type.</para>
      </summary>
      <param name="obj">
      </param>
    </member>
    <member name="M:UnityEditor.SerializationUtility.HasManagedReferencesWithMissingTypes(UnityEngine.Object)">
      <summary>
        <para>This API returns true if one or more managed references is missing its type.</para>
      </summary>
      <param name="obj">
      </param>
    </member>
    <member name="F:UnityEditor.SerializationUtility.RefIdNull">
      <summary>
        <para>Special value, -2, used as the managed reference Id of any field decorated with SerializeReference that has no object assigned to it.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializationUtility.RefIdUnknown">
      <summary>
        <para>Special value, -1, used when the managed reference Id for an object is unknown, for example if GetManagedReferenceIdForObject is called with invalid arguments.
                </para>
      </summary>
    </member>
    <member name="M:UnityEditor.SerializationUtility.SetManagedReferenceIdForObject(UnityEngine.Object,System.Object,System.Int64)">
      <summary>
        <para>Assigns a managed reference Id to an object that is referenced using SerializeReference.</para>
      </summary>
      <param name="obj">
      </param>
      <param name="scriptObj">
      </param>
      <param name="refId">
      </param>
    </member>
    <member name="T:UnityEditor.SerializedObject">
      <summary>
        <para>SerializedObject and SerializedProperty are classes for editing serialized fields on Object|Unity objects in a completely generic way. These classes automatically handle dirtying individual serialized fields so they will be processed by the Undo system and styled correctly for Prefab overrides when drawn in the Inspector.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedObject.context">
      <summary>
        <para>The context used to store and resolve ExposedReference types. This is set by the SerializedObject constructor.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedObject.forceChildVisibility">
      <summary>
        <para>Controls the visibility of the child hidden fields.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedObject.hasModifiedProperties">
      <summary>
        <para>Is true when the SerializedObject has a modified property that has not been applied.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedObject.isEditingMultipleObjects">
      <summary>
        <para>Does the serialized object represents multiple objects due to multi-object editing? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedObject.maxArraySizeForMultiEditing">
      <summary>
        <para>Defines the maximum size beyond which arrays cannot be edited when multiple objects are selected.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedObject.targetObject">
      <summary>
        <para>The inspected object (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedObject.targetObjects">
      <summary>
        <para>The inspected objects (Read Only).</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SerializedObject.ApplyModifiedProperties">
      <summary>
        <para>Apply property modifications.</para>
      </summary>
      <returns>
        <para>Returns true if any pending property changes were applied to the SerializedObject.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SerializedObject.ApplyModifiedPropertiesWithoutUndo">
      <summary>
        <para>Applies property modifications without registering an undo operation.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SerializedObject.CopyFromSerializedProperty(UnityEditor.SerializedProperty)">
      <summary>
        <para>Copies a value from a SerializedProperty to the corresponding serialized property on the serialized object.</para>
      </summary>
      <param name="prop">
      </param>
    </member>
    <member name="M:UnityEditor.SerializedObject.CopyFromSerializedPropertyIfDifferent(UnityEditor.SerializedProperty)">
      <summary>
        <para>Copies a changed value from a SerializedProperty to the corresponding serialized property on the serialized object.</para>
      </summary>
      <param name="prop">
      </param>
    </member>
    <member name="M:UnityEditor.SerializedObject.#ctor(UnityEngine.Object)">
      <summary>
        <para>Create SerializedObject for inspected object.</para>
      </summary>
      <param name="obj">
      </param>
    </member>
    <member name="M:UnityEditor.SerializedObject.#ctor(UnityEngine.Object[])">
      <summary>
        <para>Create SerializedObject for inspected object.</para>
      </summary>
      <param name="objs">
      </param>
    </member>
    <member name="M:UnityEditor.SerializedObject.#ctor(UnityEngine.Object,UnityEngine.Object)">
      <summary>
        <para>Create SerializedObject for inspected object by specifying a context to be used to store and resolve ExposedReference types.</para>
      </summary>
      <param name="obj">
      </param>
      <param name="context">
      </param>
    </member>
    <member name="M:UnityEditor.SerializedObject.#ctor(UnityEngine.Object[],UnityEngine.Object)">
      <summary>
        <para>Create SerializedObject for inspected object by specifying a context to be used to store and resolve ExposedReference types.</para>
      </summary>
      <param name="objs">
      </param>
      <param name="context">
      </param>
    </member>
    <member name="M:UnityEditor.SerializedObject.FindProperty(System.String)">
      <summary>
        <para>Find serialized property by name.</para>
      </summary>
      <param name="propertyPath">
      </param>
    </member>
    <member name="M:UnityEditor.SerializedObject.GetIterator">
      <summary>
        <para>Get the first serialized property.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SerializedObject.SetIsDifferentCacheDirty">
      <summary>
        <para>Update hasMultipleDifferentValues cache on the next Update() call.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SerializedObject.Update">
      <summary>
        <para>Update serialized object's representation.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SerializedObject.UpdateIfDirtyOrScript">
      <summary>
        <para>This has been made obsolete. See SerializedObject.UpdateIfRequiredOrScript instead.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SerializedObject.UpdateIfRequiredOrScript">
      <summary>
        <para>Update serialized object's representation, only if the object has been modified since the last call to Update or if it is a script.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SerializedProperty">
      <summary>
        <para>SerializedProperty and SerializedObject are classes for editing properties on objects in a completely generic way that automatically handles undo, multi-object editing and Prefab overrides.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.animationCurveValue">
      <summary>
        <para>Value of a animation curve property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.arrayElementType">
      <summary>
        <para>Type name of the element in an array property. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.arraySize">
      <summary>
        <para>The number of elements in the array.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.boolValue">
      <summary>
        <para>Value of a boolean property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.boundsIntValue">
      <summary>
        <para>Value of bounds with integer values property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.boundsValue">
      <summary>
        <para>Value of bounds property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.colorValue">
      <summary>
        <para>Value of a color property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.depth">
      <summary>
        <para>Nesting depth of the property. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.displayName">
      <summary>
        <para>Nice display name of the property. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.doubleValue">
      <summary>
        <para>Value of a float property as a double.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.editable">
      <summary>
        <para>Is this property editable? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.enumDisplayNames">
      <summary>
        <para>Display-friendly names of enumeration of an enum property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.enumNames">
      <summary>
        <para>Names of enumeration of an enum property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.enumValueFlag">
      <summary>
        <para>Int32 representation of an enum property with Mixed Values.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.enumValueIndex">
      <summary>
        <para>Enum index of an enum property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.exposedReferenceValue">
      <summary>
        <para>A reference to another Object in the Scene. This reference is resolved in the context of the SerializedObject containing the SerializedProperty.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.fixedBufferSize">
      <summary>
        <para>The number of elements in the fixed buffer. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.floatValue">
      <summary>
        <para>Value of a float property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.hasChildren">
      <summary>
        <para>Does it have child properties? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.hash128Value">
      <summary>
        <para>The value of a Hash128 property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.hasMultipleDifferentValues">
      <summary>
        <para>Does this property represent multiple different values due to multi-object editing? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.hasVisibleChildren">
      <summary>
        <para>Does it have visible child properties? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.intValue">
      <summary>
        <para>Value of an integer property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.isArray">
      <summary>
        <para>Is this property an array? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.isDefaultOverride">
      <summary>
        <para>Allows you to check whether his property is a PrefabUtility.IsDefaultOverride|default override.

Certain properties on Prefab instances are default overrides.

See PrefabUtility.IsDefaultOverride for more information.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.isExpanded">
      <summary>
        <para>Is this property expanded in the inspector?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.isFixedBuffer">
      <summary>
        <para>Is this property a fixed buffer? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.isInstantiatedPrefab">
      <summary>
        <para>Is property part of a Prefab instance? (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.longValue">
      <summary>
        <para>Value of a integer property as a long.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.managedReferenceFieldTypename">
      <summary>
        <para>String corresponding to the value of the managed reference field full type string.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.managedReferenceFullTypename">
      <summary>
        <para>String corresponding to the value of the managed reference object (dynamic) full type string.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.managedReferenceId">
      <summary>
        <para>Id associated with a managed reference.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.managedReferenceValue">
      <summary>
        <para>The object assigned to a field with SerializeReference attribute.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.minArraySize">
      <summary>
        <para>The smallest number of elements in the array across all target objects. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.name">
      <summary>
        <para>Name of the property. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.objectReferenceValue">
      <summary>
        <para>Value of an object reference property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.prefabOverride">
      <summary>
        <para>Allows you to check whether a property's value is overriden (i.e. different to the Prefab it belongs to).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.propertyPath">
      <summary>
        <para>Full path of the property. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.propertyType">
      <summary>
        <para>Type of this property (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.quaternionValue">
      <summary>
        <para>Value of a quaternion property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.rectIntValue">
      <summary>
        <para>Value of a rectangle with integer values property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.rectValue">
      <summary>
        <para>Value of a rectangle property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.serializedObject">
      <summary>
        <para>SerializedObject this property belongs to (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.stringValue">
      <summary>
        <para>Value of a string property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.tooltip">
      <summary>
        <para>Tooltip of the property. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.type">
      <summary>
        <para>Type name of the property. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.vector2IntValue">
      <summary>
        <para>Value of a 2D integer vector property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.vector2Value">
      <summary>
        <para>Value of a 2D vector property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.vector3IntValue">
      <summary>
        <para>Value of a 3D integer vector property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.vector3Value">
      <summary>
        <para>Value of a 3D vector property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SerializedProperty.vector4Value">
      <summary>
        <para>Value of a 4D vector property.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SerializedProperty.ClearArray">
      <summary>
        <para>Remove all elements from the array.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SerializedProperty.Copy">
      <summary>
        <para>Returns a copy of the SerializedProperty iterator in its current state. This is useful if you want to keep a reference to the current property but continue with the iteration.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SerializedProperty.CountInProperty">
      <summary>
        <para>Count visible children of this property, including this property itself.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SerializedProperty.CountRemaining">
      <summary>
        <para>Count remaining visible properties.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SerializedProperty.DataEquals(UnityEditor.SerializedProperty,UnityEditor.SerializedProperty)">
      <summary>
        <para>Compares the data for two SerializedProperties. This method ignores paths and SerializedObjects.</para>
      </summary>
      <param name="x">
      </param>
      <param name="y">
      </param>
    </member>
    <member name="M:UnityEditor.SerializedProperty.DeleteArrayElementAtIndex(System.Int32)">
      <summary>
        <para>Delete the element at the specified index in the array.</para>
      </summary>
      <param name="index">
      </param>
    </member>
    <member name="M:UnityEditor.SerializedProperty.DeleteCommand">
      <summary>
        <para>Deletes the serialized property.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SerializedProperty.DuplicateCommand">
      <summary>
        <para>Duplicates the serialized property.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SerializedProperty.EqualContents(UnityEditor.SerializedProperty,UnityEditor.SerializedProperty)">
      <summary>
        <para>See if contained serialized properties are equal.</para>
      </summary>
      <param name="x">
      </param>
      <param name="y">
      </param>
    </member>
    <member name="M:UnityEditor.SerializedProperty.FindPropertyRelative(System.String)">
      <summary>
        <para>Retrieves the SerializedProperty at a relative path to the current property.</para>
      </summary>
      <param name="relativePropertyPath">
      </param>
    </member>
    <member name="M:UnityEditor.SerializedProperty.GetArrayElementAtIndex(System.Int32)">
      <summary>
        <para>Returns the element at the specified index in the array.</para>
      </summary>
      <param name="index">
      </param>
    </member>
    <member name="M:UnityEditor.SerializedProperty.GetEndProperty">
      <summary>
        <para>Retrieves the SerializedProperty that defines the end range of this property.</para>
      </summary>
      <param name="includeInvisible">
      </param>
    </member>
    <member name="M:UnityEditor.SerializedProperty.GetEndProperty(System.Boolean)">
      <summary>
        <para>Retrieves the SerializedProperty that defines the end range of this property.</para>
      </summary>
      <param name="includeInvisible">
      </param>
    </member>
    <member name="M:UnityEditor.SerializedProperty.GetEnumerator">
      <summary>
        <para>Retrieves an iterator for enumerating over the visible child properties of the current property.  If the property is an array it will enumerate over the array elements.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SerializedProperty.GetFixedBufferElementAtIndex(System.Int32)">
      <summary>
        <para>Returns the element at the specified index in the fixed buffer.</para>
      </summary>
      <param name="index">
      </param>
    </member>
    <member name="M:UnityEditor.SerializedProperty.InsertArrayElementAtIndex(System.Int32)">
      <summary>
        <para>Insert an empty element at the specified index in the array.</para>
      </summary>
      <param name="index">
      </param>
    </member>
    <member name="M:UnityEditor.SerializedProperty.MoveArrayElement(System.Int32,System.Int32)">
      <summary>
        <para>Move an array element from srcIndex to dstIndex.</para>
      </summary>
      <param name="srcIndex">
      </param>
      <param name="dstIndex">
      </param>
    </member>
    <member name="M:UnityEditor.SerializedProperty.Next(System.Boolean)">
      <summary>
        <para>Move to next property.</para>
      </summary>
      <param name="enterChildren">
      </param>
    </member>
    <member name="M:UnityEditor.SerializedProperty.NextVisible(System.Boolean)">
      <summary>
        <para>Move to next visible property.</para>
      </summary>
      <param name="enterChildren">
      </param>
    </member>
    <member name="M:UnityEditor.SerializedProperty.Reset">
      <summary>
        <para>Move to first property of the object.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SerializedPropertyType">
      <summary>
        <para>Type of a SerializedProperty.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.AnimationCurve">
      <summary>
        <para>AnimationCurve property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.ArraySize">
      <summary>
        <para>Array size property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.Boolean">
      <summary>
        <para>Boolean property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.Bounds">
      <summary>
        <para>Bounds property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.BoundsInt">
      <summary>
        <para>Bounds with Integer values property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.Character">
      <summary>
        <para>Character property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.Color">
      <summary>
        <para>Color property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.Enum">
      <summary>
        <para>Enumeration property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.ExposedReference">
      <summary>
        <para>A reference to another Object in the Scene.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.FixedBufferSize">
      <summary>
        <para>Fixed buffer size property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.Float">
      <summary>
        <para>Float or Double property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.Gradient">
      <summary>
        <para>Gradient property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.Hash128">
      <summary>
        <para>A Hash128 property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.Integer">
      <summary>
        <para>Integer property, for example int, byte, short, uint and long. </para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.LayerMask">
      <summary>
        <para>LayerMask property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.ManagedReference">
      <summary>
        <para>Property that references an object that does not derive from UnityEngine.Object.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.ObjectReference">
      <summary>
        <para>Reference to an object that derives from UnityEngine.Object.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.Quaternion">
      <summary>
        <para>Quaternion property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.Rect">
      <summary>
        <para>Rectangle property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.RectInt">
      <summary>
        <para>Rectangle with Integer values property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.String">
      <summary>
        <para>String property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.Vector2">
      <summary>
        <para>2D vector property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.Vector2Int">
      <summary>
        <para>2D integer vector property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.Vector3">
      <summary>
        <para>3D vector property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.Vector3Int">
      <summary>
        <para>3D integer vector property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SerializedPropertyType.Vector4">
      <summary>
        <para>4D vector property.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SessionState">
      <summary>
        <para>SessionState is a Key-Value Store intended for storing and retrieving Editor session state that should survive assembly reloading.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SessionState.EraseBool(System.String)">
      <summary>
        <para>Erase a Boolean entry in the key-value store.</para>
      </summary>
      <param name="key">
      </param>
    </member>
    <member name="M:UnityEditor.SessionState.EraseFloat(System.String)">
      <summary>
        <para>Erase a Float entry in the key-value store.</para>
      </summary>
      <param name="key">
      </param>
    </member>
    <member name="M:UnityEditor.SessionState.EraseInt(System.String)">
      <summary>
        <para>Erase an Integer entry in the key-value store.</para>
      </summary>
      <param name="key">
      </param>
    </member>
    <member name="M:UnityEditor.SessionState.EraseIntArray(System.String)">
      <summary>
        <para>Erase an Integer array entry in the key-value store.</para>
      </summary>
      <param name="key">
      </param>
    </member>
    <member name="M:UnityEditor.SessionState.EraseString(System.String)">
      <summary>
        <para>Erase a String entry in the key-value store.</para>
      </summary>
      <param name="key">
      </param>
    </member>
    <member name="M:UnityEditor.SessionState.EraseVector3(System.String)">
      <summary>
        <para>Erase a Vector3 entry in the key-value store.</para>
      </summary>
      <param name="key">
      </param>
    </member>
    <member name="M:UnityEditor.SessionState.GetBool(System.String,System.Boolean)">
      <summary>
        <para>Retrieve a Boolean value.</para>
      </summary>
      <param name="key">
      </param>
      <param name="defaultValue">
      </param>
    </member>
    <member name="M:UnityEditor.SessionState.GetFloat(System.String,System.Single)">
      <summary>
        <para>Retrieve a Float value.</para>
      </summary>
      <param name="key">
      </param>
      <param name="defaultValue">
      </param>
    </member>
    <member name="M:UnityEditor.SessionState.GetInt(System.String,System.Int32)">
      <summary>
        <para>Retrieve an Integer value.</para>
      </summary>
      <param name="key">
      </param>
      <param name="defaultValue">
      </param>
    </member>
    <member name="M:UnityEditor.SessionState.GetIntArray(System.String,System.Int32[])">
      <summary>
        <para>Retrieve an Integer array.</para>
      </summary>
      <param name="key">
      </param>
      <param name="defaultValue">
      </param>
    </member>
    <member name="M:UnityEditor.SessionState.GetString(System.String,System.String)">
      <summary>
        <para>Retrieve a String value.</para>
      </summary>
      <param name="key">
      </param>
      <param name="defaultValue">
      </param>
    </member>
    <member name="M:UnityEditor.SessionState.GetVector3(System.String,UnityEngine.Vector3)">
      <summary>
        <para>Retrieve a Vector3.</para>
      </summary>
      <param name="key">
      </param>
      <param name="defaultValue">
      </param>
    </member>
    <member name="M:UnityEditor.SessionState.SetBool(System.String,System.Boolean)">
      <summary>
        <para>Store a Boolean value.</para>
      </summary>
      <param name="key">
      </param>
      <param name="value">
      </param>
    </member>
    <member name="M:UnityEditor.SessionState.SetFloat(System.String,System.Single)">
      <summary>
        <para>Store a Float value.</para>
      </summary>
      <param name="key">
      </param>
      <param name="value">
      </param>
    </member>
    <member name="M:UnityEditor.SessionState.SetInt(System.String,System.Int32)">
      <summary>
        <para>Store an Integer value.</para>
      </summary>
      <param name="key">
      </param>
      <param name="value">
      </param>
    </member>
    <member name="M:UnityEditor.SessionState.SetIntArray(System.String,System.Int32[])">
      <summary>
        <para>Store an Integer array.</para>
      </summary>
      <param name="key">
      </param>
      <param name="value">
      </param>
    </member>
    <member name="M:UnityEditor.SessionState.SetString(System.String,System.String)">
      <summary>
        <para>Store a String value.</para>
      </summary>
      <param name="key">
      </param>
      <param name="value">
      </param>
    </member>
    <member name="M:UnityEditor.SessionState.SetVector3(System.String,UnityEngine.Vector3)">
      <summary>
        <para>Store a Vector3.</para>
      </summary>
      <param name="key">
      </param>
      <param name="value">
      </param>
    </member>
    <member name="T:UnityEditor.SettingsProvider">
      <summary>
        <para>SettingsProvider is the configuration class that specifies how a Project setting or a preference should appear in the Settings or Preferences window.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SettingsProvider.activateHandler">
      <summary>
        <para>Overrides SettingsProvider.OnActivate.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SettingsProvider.deactivateHandler">
      <summary>
        <para>Overrides SettingsProvider.OnDeactivate.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SettingsProvider.footerBarGuiHandler">
      <summary>
        <para>Overrides SettingsProvider.OnFooterBarGUI.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SettingsProvider.guiHandler">
      <summary>
        <para>Overrides SettingsProvider.OnGUI.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SettingsProvider.hasSearchInterestHandler">
      <summary>
        <para>Overrides SettingsProvider.HasSearchInterest.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SettingsProvider.inspectorUpdateHandler">
      <summary>
        <para>Overrides SettingsProvider.OnInspectorUpdate.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SettingsProvider.keywords">
      <summary>
        <para>Gets or sets the list of keywords to compare against what the user is searching for. When the user enters values in the search box on the Settings window, SettingsProvider.HasSearchInterest tries to match those keywords to this list.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SettingsProvider.label">
      <summary>
        <para>Gets or sets the display name of the SettingsProvider as it appears in the Settings window. If not set, the Settings window uses last token of SettingsProvider.settingsPath instead.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SettingsProvider.scope">
      <summary>
        <para>Gets the Scope of the SettingsProvider. The Scope determines whether the SettingsProvider appears in the Preferences window (SettingsScope.User) or the Settings window (SettingsScope.Project).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SettingsProvider.settingsPath">
      <summary>
        <para>Gets Path used to place the SettingsProvider in the tree view of the Settings window. The path should be unique among all other settings paths and should use "/" as its separator.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SettingsProvider.titleBarGuiHandler">
      <summary>
        <para>Overrides SettingsProvider.OnTitleBarGUI.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SettingsProvider.#ctor(System.String,UnityEditor.SettingsScope,System.Collections.Generic.IEnumerable`1&lt;System.String&gt;)">
      <summary>
        <para>Creates a new SettingsProvider.</para>
      </summary>
      <param name="path">Path of the settings in the Settings window. Uses "/" as separator. The last token becomes the settings label if none is provided.</param>
      <param name="scope">Scope of the Settings. The Scope determines where the setting appears: in the Settings or the Preferences windows.</param>
      <param name="keywords">List of keywords to compare against what the user is searching for. When the user enters values in the search box on the Settings window, SettingsProvider.HasSearchInterest tries to match those keywords to this list.</param>
      <param name="scopes">
      </param>
    </member>
    <member name="M:UnityEditor.SettingsProvider.GetSearchKeywordsFromGUIContentProperties">
      <summary>
        <para>Extract search keywords from all public static memebers in a specific Type.</para>
      </summary>
      <returns>
        <para>Returns the list of keywords extracted from the static GUIContent.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SettingsProvider.GetSearchKeywordsFromPath(System.String)">
      <summary>
        <para>Extract search keywords from the serialized properties of an Asset at a specific path.</para>
      </summary>
      <param name="path">Path of the Asset on disk.</param>
      <returns>
        <para>Returns the list of keywords.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SettingsProvider.GetSearchKeywordsFromSerializedObject(UnityEditor.SerializedObject)">
      <summary>
        <para>Extract search keywords from from the serialized properties of a SerializedObject.</para>
      </summary>
      <param name="serializedObject">Object to extract properties from.</param>
      <returns>
        <para>Returns the list of keywords.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SettingsProvider.HasSearchInterest(System.String)">
      <summary>
        <para>Checks whether the SettingsProvider should appear when the user types something in the Settings window search box. SettingsProvider tries to match the search terms (even partially) to any of the SettingsProvider.keywords. The search is case insensitive.</para>
      </summary>
      <param name="searchContext">Search terms that the user entered in the search box on the Settings window.</param>
      <returns>
        <para>True if the SettingsProvider matched the search term and if it should appear.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SettingsProvider.OnActivate(System.String,UnityEngine.UIElements.VisualElement)">
      <summary>
        <para>Use this function to implement a handler for when the user clicks on the Settings in the Settings window. You can fetch a settings Asset or set up UIElements UI from this function.</para>
      </summary>
      <param name="searchContext">Search context in the search box on the Settings window.</param>
      <param name="rootElement">Root of the UIElements tree. If you add to this root, the SettingsProvider uses UIElements instead of calling SettingsProvider.OnGUI to build the UI. If you do not add to this VisualElement, then you must use the IMGUI to build the UI.</param>
    </member>
    <member name="M:UnityEditor.SettingsProvider.OnDeactivate">
      <summary>
        <para>Use this function to implement a handler for when the user clicks on another setting or when the Settings window closes.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SettingsProvider.OnFooterBarGUI">
      <summary>
        <para>Use this function to override drawing the footer for the SettingsProvider using IMGUI.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SettingsProvider.OnGUI(System.String)">
      <summary>
        <para>Use this function to draw the UI based on IMGUI. This assumes you haven't added any children to the rootElement passed to the OnActivate function.</para>
      </summary>
      <param name="searchContext">Search context for the Settings window. Used to show or hide relevant properties.</param>
    </member>
    <member name="M:UnityEditor.SettingsProvider.OnInspectorUpdate">
      <summary>
        <para>OnInspectorUpdate is called at 10 frames per second to give the inspector a chance to update. See EditorWindow.OnInspectorUpdate for more details.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SettingsProvider.OnTitleBarGUI">
      <summary>
        <para>Use this function to override drawing the title for the SettingsProvider using IMGUI. This allows you to add custom UI (such as a toolbar button) next to the title. AssetSettingsProvider uses this mecanism to display the "add to preset" and the "help" buttons.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SettingsProvider.Repaint">
      <summary>
        <para>Request the SettingsWindow for a repaint.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SettingsProviderAttribute">
      <summary>
        <para>Attribute used to register a new SettingsProvider. Use this attribute to decorate a function that returns an instance of a SettingsProvider. If the function returns null, no SettingsProvider appears in the Settings window.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SettingsProviderAttribute.#ctor">
      <summary>
        <para>Creates a new SettingsProviderAttribute used to register new SettingsProvider. </para>
      </summary>
    </member>
    <member name="T:UnityEditor.SettingsProviderGroupAttribute">
      <summary>
        <para>Attribute used to register multiple SettingsProvider items. Use this attribute to decorate a function that returns an array of SettingsProvider instances. If the function returns null, no SettingsProvider appears in the Settings window.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SettingsProviderGroupAttribute.#ctor">
      <summary>
        <para>Creates a SettingsProviderGroupAttribute used to register multiple SettingsProviders. </para>
      </summary>
    </member>
    <member name="T:UnityEditor.SettingsScope">
      <summary>
        <para>Sets the scope of a SettingsProvider. The Scope determines where it appears in the UI. For example, whether it appears with the Project settings in the Settings window, or in the Preferences window, or in both windows.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SettingsScope.Project">
      <summary>
        <para>The SettingsProvider appears only in the Project Settings window.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SettingsScope.User">
      <summary>
        <para>The SettingsProvider appears only in the Preferences window.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SettingsService">
      <summary>
        <para>This class provides global APIs to interact with the Settings window.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SettingsService.NotifySettingsProviderChanged">
      <summary>
        <para>Use this function to notify the SettingsService that a SettingsProvider changed.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SettingsService.OpenProjectSettings(System.String)">
      <summary>
        <para>Open the Project Settings window with the specified settings item already selected.</para>
      </summary>
      <param name="settingsPath">Settings paths of the item to select (for example, 'ProjectPlayer' or 'ProjectQuality').</param>
      <returns>
        <para>Returns an instance to the Settings window.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SettingsService.OpenUserPreferences(System.String)">
      <summary>
        <para>Open the Preferences window with the specified settings item already selected.</para>
      </summary>
      <param name="settingsPath">Settings path of the item to select (for example, 'PreferencesKeys' or 'Preferences2D').</param>
      <returns>
        <para>Returns an instance to the Settings window.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SettingsService.RepaintAllSettingsWindow">
      <summary>
        <para>Notifies the SettingsService that all open Settings windows must be repainted.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ShaderData">
      <summary>
        <para>This class describes a shader.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.ActiveSubshader">
      <summary>
        <para>Returns the active subshader or null if none is currently active.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.ActiveSubshaderIndex">
      <summary>
        <para>Returns the index of the active subshader or -1 if none is currently active.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ShaderData.ConstantBufferInfo">
      <summary>
        <para>Provides resource layout information about a shader constant buffer.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.ConstantBufferInfo.Fields">
      <summary>
        <para>The fields in this constant buffer (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.ConstantBufferInfo.Name">
      <summary>
        <para>The name of this constant buffer (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.ConstantBufferInfo.Size">
      <summary>
        <para>The size (in bytes) of this constant buffer (Read Only).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ShaderData.ConstantInfo">
      <summary>
        <para>Provides information about a shader constant (uniform) value.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.ConstantInfo.ArraySize">
      <summary>
        <para>The number of elements in this constant (Read Only). If this value is greater than 1, the constant is an array.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.ConstantInfo.Columns">
      <summary>
        <para>If the constant is a matrix or vector type, this stores the number of columns. Otherwise, the value is 0. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.ConstantInfo.ConstantType">
      <summary>
        <para>This constant's type (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.ConstantInfo.DataType">
      <summary>
        <para>The element data type of this constant (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.ConstantInfo.Index">
      <summary>
        <para>The index of this constant in its buffer (Read Only). Typically, this is the byte offset from the start of the cbuffer, but depending on the platform, it may indicate another type of index.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.ConstantInfo.Name">
      <summary>
        <para>The name of this constant (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.ConstantInfo.Rows">
      <summary>
        <para>If the constant is a matrix type, this stores the number of rows. If the constant is a vector type, this value will be 1. Otherwise, the value is 0. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.ConstantInfo.StructFields">
      <summary>
        <para>If the constant is a struct, this stores the fields of that struct. Otherwise, the value is null. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.ConstantInfo.StructSize">
      <summary>
        <para>If the constant is a struct, this stores the size (in bytes) of the struct. Otherwise, the value is 0. (Read Only)</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ShaderData.GetSubshader(System.Int32)">
      <summary>
        <para>Get a subshader.</para>
      </summary>
      <param name="index">The index of the subshader.</param>
      <returns>
        <para>The associated subshader or null if none exists.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.ShaderData.Pass">
      <summary>
        <para>This class describes a pass of a subshader.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ShaderData.Pass.CompileVariant(UnityEditor.Rendering.ShaderType,System.String[],UnityEditor.Rendering.ShaderCompilerPlatform,UnityEditor.BuildTarget)">
      <summary>
        <para>Compiles a shader variant for this shader pass and returns its bytecode and resource layout.</para>
      </summary>
      <param name="shaderType">The shader type within this pass to compile. (e.g. Vertex, Fragment, etc.)  Some platforms (OpenGLCore, GLES20, GLES3x, Switch and Vulkan) include all stages within the Vertex shader type.</param>
      <param name="keywords">The keywords to use during the compilation.</param>
      <param name="shaderCompilerPlatform">The shader compiler platform to compile for.</param>
      <param name="buildTarget">The build target to compile for.</param>
      <param name="forExternalTool">Indicates whether to prepare the bytecode for Unity or to use with external tools.</param>
      <param name="tier">An optional graphics tier.</param>
      <param name="platformKeywords">An optional set of platform keywords. If you do not provide any, Unity uses the default keywords for the given platform, target, and tier.</param>
      <returns>
        <para>The compiled variant result, including resource layout information and bytecode. If the pass doesn't include the requested program, or if the pass is not the correct type, this function still succeeds but returns empty bytecode.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderData.Pass.CompileVariant(UnityEditor.Rendering.ShaderType,System.String[],UnityEditor.Rendering.ShaderCompilerPlatform,UnityEditor.BuildTarget,System.Boolean)">
      <summary>
        <para>Compiles a shader variant for this shader pass and returns its bytecode and resource layout.</para>
      </summary>
      <param name="shaderType">The shader type within this pass to compile. (e.g. Vertex, Fragment, etc.)  Some platforms (OpenGLCore, GLES20, GLES3x, Switch and Vulkan) include all stages within the Vertex shader type.</param>
      <param name="keywords">The keywords to use during the compilation.</param>
      <param name="shaderCompilerPlatform">The shader compiler platform to compile for.</param>
      <param name="buildTarget">The build target to compile for.</param>
      <param name="forExternalTool">Indicates whether to prepare the bytecode for Unity or to use with external tools.</param>
      <param name="tier">An optional graphics tier.</param>
      <param name="platformKeywords">An optional set of platform keywords. If you do not provide any, Unity uses the default keywords for the given platform, target, and tier.</param>
      <returns>
        <para>The compiled variant result, including resource layout information and bytecode. If the pass doesn't include the requested program, or if the pass is not the correct type, this function still succeeds but returns empty bytecode.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderData.Pass.CompileVariant(UnityEditor.Rendering.ShaderType,System.String[],UnityEditor.Rendering.ShaderCompilerPlatform,UnityEditor.BuildTarget,UnityEngine.Rendering.GraphicsTier)">
      <summary>
        <para>Compiles a shader variant for this shader pass and returns its bytecode and resource layout.</para>
      </summary>
      <param name="shaderType">The shader type within this pass to compile. (e.g. Vertex, Fragment, etc.)  Some platforms (OpenGLCore, GLES20, GLES3x, Switch and Vulkan) include all stages within the Vertex shader type.</param>
      <param name="keywords">The keywords to use during the compilation.</param>
      <param name="shaderCompilerPlatform">The shader compiler platform to compile for.</param>
      <param name="buildTarget">The build target to compile for.</param>
      <param name="forExternalTool">Indicates whether to prepare the bytecode for Unity or to use with external tools.</param>
      <param name="tier">An optional graphics tier.</param>
      <param name="platformKeywords">An optional set of platform keywords. If you do not provide any, Unity uses the default keywords for the given platform, target, and tier.</param>
      <returns>
        <para>The compiled variant result, including resource layout information and bytecode. If the pass doesn't include the requested program, or if the pass is not the correct type, this function still succeeds but returns empty bytecode.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderData.Pass.CompileVariant(UnityEditor.Rendering.ShaderType,System.String[],UnityEditor.Rendering.ShaderCompilerPlatform,UnityEditor.BuildTarget,UnityEngine.Rendering.GraphicsTier,System.Boolean)">
      <summary>
        <para>Compiles a shader variant for this shader pass and returns its bytecode and resource layout.</para>
      </summary>
      <param name="shaderType">The shader type within this pass to compile. (e.g. Vertex, Fragment, etc.)  Some platforms (OpenGLCore, GLES20, GLES3x, Switch and Vulkan) include all stages within the Vertex shader type.</param>
      <param name="keywords">The keywords to use during the compilation.</param>
      <param name="shaderCompilerPlatform">The shader compiler platform to compile for.</param>
      <param name="buildTarget">The build target to compile for.</param>
      <param name="forExternalTool">Indicates whether to prepare the bytecode for Unity or to use with external tools.</param>
      <param name="tier">An optional graphics tier.</param>
      <param name="platformKeywords">An optional set of platform keywords. If you do not provide any, Unity uses the default keywords for the given platform, target, and tier.</param>
      <returns>
        <para>The compiled variant result, including resource layout information and bytecode. If the pass doesn't include the requested program, or if the pass is not the correct type, this function still succeeds but returns empty bytecode.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderData.Pass.CompileVariant(UnityEditor.Rendering.ShaderType,System.String[],UnityEditor.Rendering.ShaderCompilerPlatform,UnityEditor.BuildTarget,UnityEngine.Rendering.BuiltinShaderDefine[])">
      <summary>
        <para>Compiles a shader variant for this shader pass and returns its bytecode and resource layout.</para>
      </summary>
      <param name="shaderType">The shader type within this pass to compile. (e.g. Vertex, Fragment, etc.)  Some platforms (OpenGLCore, GLES20, GLES3x, Switch and Vulkan) include all stages within the Vertex shader type.</param>
      <param name="keywords">The keywords to use during the compilation.</param>
      <param name="shaderCompilerPlatform">The shader compiler platform to compile for.</param>
      <param name="buildTarget">The build target to compile for.</param>
      <param name="forExternalTool">Indicates whether to prepare the bytecode for Unity or to use with external tools.</param>
      <param name="tier">An optional graphics tier.</param>
      <param name="platformKeywords">An optional set of platform keywords. If you do not provide any, Unity uses the default keywords for the given platform, target, and tier.</param>
      <returns>
        <para>The compiled variant result, including resource layout information and bytecode. If the pass doesn't include the requested program, or if the pass is not the correct type, this function still succeeds but returns empty bytecode.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderData.Pass.CompileVariant(UnityEditor.Rendering.ShaderType,System.String[],UnityEditor.Rendering.ShaderCompilerPlatform,UnityEditor.BuildTarget,UnityEngine.Rendering.BuiltinShaderDefine[],System.Boolean)">
      <summary>
        <para>Compiles a shader variant for this shader pass and returns its bytecode and resource layout.</para>
      </summary>
      <param name="shaderType">The shader type within this pass to compile. (e.g. Vertex, Fragment, etc.)  Some platforms (OpenGLCore, GLES20, GLES3x, Switch and Vulkan) include all stages within the Vertex shader type.</param>
      <param name="keywords">The keywords to use during the compilation.</param>
      <param name="shaderCompilerPlatform">The shader compiler platform to compile for.</param>
      <param name="buildTarget">The build target to compile for.</param>
      <param name="forExternalTool">Indicates whether to prepare the bytecode for Unity or to use with external tools.</param>
      <param name="tier">An optional graphics tier.</param>
      <param name="platformKeywords">An optional set of platform keywords. If you do not provide any, Unity uses the default keywords for the given platform, target, and tier.</param>
      <returns>
        <para>The compiled variant result, including resource layout information and bytecode. If the pass doesn't include the requested program, or if the pass is not the correct type, this function still succeeds but returns empty bytecode.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderData.Pass.CompileVariant(UnityEditor.Rendering.ShaderType,System.String[],UnityEditor.Rendering.ShaderCompilerPlatform,UnityEditor.BuildTarget,UnityEngine.Rendering.BuiltinShaderDefine[],UnityEngine.Rendering.GraphicsTier)">
      <summary>
        <para>Compiles a shader variant for this shader pass and returns its bytecode and resource layout.</para>
      </summary>
      <param name="shaderType">The shader type within this pass to compile. (e.g. Vertex, Fragment, etc.)  Some platforms (OpenGLCore, GLES20, GLES3x, Switch and Vulkan) include all stages within the Vertex shader type.</param>
      <param name="keywords">The keywords to use during the compilation.</param>
      <param name="shaderCompilerPlatform">The shader compiler platform to compile for.</param>
      <param name="buildTarget">The build target to compile for.</param>
      <param name="forExternalTool">Indicates whether to prepare the bytecode for Unity or to use with external tools.</param>
      <param name="tier">An optional graphics tier.</param>
      <param name="platformKeywords">An optional set of platform keywords. If you do not provide any, Unity uses the default keywords for the given platform, target, and tier.</param>
      <returns>
        <para>The compiled variant result, including resource layout information and bytecode. If the pass doesn't include the requested program, or if the pass is not the correct type, this function still succeeds but returns empty bytecode.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderData.Pass.CompileVariant(UnityEditor.Rendering.ShaderType,System.String[],UnityEditor.Rendering.ShaderCompilerPlatform,UnityEditor.BuildTarget,UnityEngine.Rendering.BuiltinShaderDefine[],UnityEngine.Rendering.GraphicsTier,System.Boolean)">
      <summary>
        <para>Compiles a shader variant for this shader pass and returns its bytecode and resource layout.</para>
      </summary>
      <param name="shaderType">The shader type within this pass to compile. (e.g. Vertex, Fragment, etc.)  Some platforms (OpenGLCore, GLES20, GLES3x, Switch and Vulkan) include all stages within the Vertex shader type.</param>
      <param name="keywords">The keywords to use during the compilation.</param>
      <param name="shaderCompilerPlatform">The shader compiler platform to compile for.</param>
      <param name="buildTarget">The build target to compile for.</param>
      <param name="forExternalTool">Indicates whether to prepare the bytecode for Unity or to use with external tools.</param>
      <param name="tier">An optional graphics tier.</param>
      <param name="platformKeywords">An optional set of platform keywords. If you do not provide any, Unity uses the default keywords for the given platform, target, and tier.</param>
      <returns>
        <para>The compiled variant result, including resource layout information and bytecode. If the pass doesn't include the requested program, or if the pass is not the correct type, this function still succeeds but returns empty bytecode.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderData.Pass.FindTagValue(UnityEngine.Rendering.ShaderTagId)">
      <summary>
        <para>Searches for the tag specified by tagName on this SubShader and returns the value of the tag.</para>
      </summary>
      <param name="tagName">The name of the tag.</param>
    </member>
    <member name="M:UnityEditor.ShaderData.Pass.HasShaderStage(UnityEditor.Rendering.ShaderType)">
      <summary>
        <para>Checks whether this pass includes a shader stage.</para>
      </summary>
      <param name="shaderType">The shader stage to check.</param>
      <returns>
        <para>Returns true if the shader stage is present in the pass. Otherwise, returns false.</para>
      </returns>
    </member>
    <member name="P:UnityEditor.ShaderData.Pass.Name">
      <summary>
        <para>The name of this pass (may be empty).</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ShaderData.Pass.PreprocessVariant(UnityEditor.Rendering.ShaderType,System.String[],UnityEditor.Rendering.ShaderCompilerPlatform,UnityEditor.BuildTarget,System.Boolean)">
      <summary>
        <para>Preprocesses a shader variant for this shader pass and returns the preprocessed code.</para>
      </summary>
      <param name="shaderType">The shader type within this pass to preprocess. (e.g. Vertex, Fragment, etc.)  Some platforms (OpenGLCore, GLES20, GLES3x, Switch and Vulkan) include all stages within the Vertex shader type.</param>
      <param name="keywords">The keywords to use during the preprocessing.</param>
      <param name="shaderCompilerPlatform">The shader compiler platform to preprocess for.</param>
      <param name="buildTarget">The build target to preprocess for.</param>
      <param name="tier">An optional graphics tier.</param>
      <param name="platformKeywords">An optional set of platform keywords. If you do not provide any, Unity uses the default keywords for the given platform, target, and tier.</param>
      <param name="stripLineDirectives">Whether to skip line number directives in the preprocessed output. When enabled, Unity produces more human-readable preprocessed source code and skips the line directives when the file name doesn't change. Otherwise, this method produces the exact preprocessed source that Unity passes to the compiler.</param>
      <returns>
        <para>The preprocessed variant result. If the pass doesn't include the requested program, or if the pass is not the correct type, this function still succeeds but returns empty preprocessed code.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderData.Pass.PreprocessVariant(UnityEditor.Rendering.ShaderType,System.String[],UnityEditor.Rendering.ShaderCompilerPlatform,UnityEditor.BuildTarget,UnityEngine.Rendering.GraphicsTier,System.Boolean)">
      <summary>
        <para>Preprocesses a shader variant for this shader pass and returns the preprocessed code.</para>
      </summary>
      <param name="shaderType">The shader type within this pass to preprocess. (e.g. Vertex, Fragment, etc.)  Some platforms (OpenGLCore, GLES20, GLES3x, Switch and Vulkan) include all stages within the Vertex shader type.</param>
      <param name="keywords">The keywords to use during the preprocessing.</param>
      <param name="shaderCompilerPlatform">The shader compiler platform to preprocess for.</param>
      <param name="buildTarget">The build target to preprocess for.</param>
      <param name="tier">An optional graphics tier.</param>
      <param name="platformKeywords">An optional set of platform keywords. If you do not provide any, Unity uses the default keywords for the given platform, target, and tier.</param>
      <param name="stripLineDirectives">Whether to skip line number directives in the preprocessed output. When enabled, Unity produces more human-readable preprocessed source code and skips the line directives when the file name doesn't change. Otherwise, this method produces the exact preprocessed source that Unity passes to the compiler.</param>
      <returns>
        <para>The preprocessed variant result. If the pass doesn't include the requested program, or if the pass is not the correct type, this function still succeeds but returns empty preprocessed code.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderData.Pass.PreprocessVariant(UnityEditor.Rendering.ShaderType,System.String[],UnityEditor.Rendering.ShaderCompilerPlatform,UnityEditor.BuildTarget,UnityEngine.Rendering.BuiltinShaderDefine[],System.Boolean)">
      <summary>
        <para>Preprocesses a shader variant for this shader pass and returns the preprocessed code.</para>
      </summary>
      <param name="shaderType">The shader type within this pass to preprocess. (e.g. Vertex, Fragment, etc.)  Some platforms (OpenGLCore, GLES20, GLES3x, Switch and Vulkan) include all stages within the Vertex shader type.</param>
      <param name="keywords">The keywords to use during the preprocessing.</param>
      <param name="shaderCompilerPlatform">The shader compiler platform to preprocess for.</param>
      <param name="buildTarget">The build target to preprocess for.</param>
      <param name="tier">An optional graphics tier.</param>
      <param name="platformKeywords">An optional set of platform keywords. If you do not provide any, Unity uses the default keywords for the given platform, target, and tier.</param>
      <param name="stripLineDirectives">Whether to skip line number directives in the preprocessed output. When enabled, Unity produces more human-readable preprocessed source code and skips the line directives when the file name doesn't change. Otherwise, this method produces the exact preprocessed source that Unity passes to the compiler.</param>
      <returns>
        <para>The preprocessed variant result. If the pass doesn't include the requested program, or if the pass is not the correct type, this function still succeeds but returns empty preprocessed code.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderData.Pass.PreprocessVariant(UnityEditor.Rendering.ShaderType,System.String[],UnityEditor.Rendering.ShaderCompilerPlatform,UnityEditor.BuildTarget,UnityEngine.Rendering.BuiltinShaderDefine[],UnityEngine.Rendering.GraphicsTier,System.Boolean)">
      <summary>
        <para>Preprocesses a shader variant for this shader pass and returns the preprocessed code.</para>
      </summary>
      <param name="shaderType">The shader type within this pass to preprocess. (e.g. Vertex, Fragment, etc.)  Some platforms (OpenGLCore, GLES20, GLES3x, Switch and Vulkan) include all stages within the Vertex shader type.</param>
      <param name="keywords">The keywords to use during the preprocessing.</param>
      <param name="shaderCompilerPlatform">The shader compiler platform to preprocess for.</param>
      <param name="buildTarget">The build target to preprocess for.</param>
      <param name="tier">An optional graphics tier.</param>
      <param name="platformKeywords">An optional set of platform keywords. If you do not provide any, Unity uses the default keywords for the given platform, target, and tier.</param>
      <param name="stripLineDirectives">Whether to skip line number directives in the preprocessed output. When enabled, Unity produces more human-readable preprocessed source code and skips the line directives when the file name doesn't change. Otherwise, this method produces the exact preprocessed source that Unity passes to the compiler.</param>
      <returns>
        <para>The preprocessed variant result. If the pass doesn't include the requested program, or if the pass is not the correct type, this function still succeeds but returns empty preprocessed code.</para>
      </returns>
    </member>
    <member name="P:UnityEditor.ShaderData.Pass.SourceCode">
      <summary>
        <para>The source code for this pass.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ShaderData.PreprocessedVariant">
      <summary>
        <para>Represents the results of preprocessing a variant using ShaderData.Pass.PreprocessVariant.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.PreprocessedVariant.Messages">
      <summary>
        <para>Stores errors and warnings produced during preprocessing (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.PreprocessedVariant.PreprocessedCode">
      <summary>
        <para>Stores the preprocessed code for the shader variant (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.PreprocessedVariant.Success">
      <summary>
        <para>Indicates whether the variant preprocessing succeeded (Read Only). If it did, this is true. Otherwise, this is false and ShaderData.PreprocessedVariant.Messages contains the errors.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.SourceShader">
      <summary>
        <para>The shader attached to this data set.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ShaderData.Subshader">
      <summary>
        <para>This class describes a subshader.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ShaderData.Subshader.FindTagValue(UnityEngine.Rendering.ShaderTagId)">
      <summary>
        <para>Searches for the tag specified by tagName on this SubShader and returns the value of the tag.</para>
      </summary>
      <param name="tagName">The name of the tag.</param>
    </member>
    <member name="M:UnityEditor.ShaderData.Subshader.GetPass(System.Int32)">
      <summary>
        <para>Get a pass of a subshader.</para>
      </summary>
      <param name="passIndex">The index of the pass.</param>
      <returns>
        <para>The specified pass or null, if none exists.</para>
      </returns>
    </member>
    <member name="P:UnityEditor.ShaderData.Subshader.LevelOfDetail">
      <summary>
        <para>The level of detail (LOD) specified in this subshader (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.Subshader.PassCount">
      <summary>
        <para>The number of passes for this subshader.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.SubshaderCount">
      <summary>
        <para>The number of subshaders used by this shader.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ShaderData.TextureBindingInfo">
      <summary>
        <para>Provides resource layout information about a texture binding.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.TextureBindingInfo.ArraySize">
      <summary>
        <para>The number of elements in this texture binding. If the value is greater than 1, the texture binding is an array. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.TextureBindingInfo.Dim">
      <summary>
        <para>The texture binding's type (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.TextureBindingInfo.Index">
      <summary>
        <para>The index of the texture binding (Read Only). Depending on the platform, this value represents different things.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.TextureBindingInfo.Multisampled">
      <summary>
        <para>Indicates if the texture is multisampled (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.TextureBindingInfo.Name">
      <summary>
        <para>The name of the texture binding (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.TextureBindingInfo.SamplerIndex">
      <summary>
        <para>The index of the sampler for this texture binding (Read Only). Depending on the platform, this value represents different things.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ShaderData.VariantCompileInfo">
      <summary>
        <para>Represents the results of compiling a variant using ShaderData.Pass.CompileVariant.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.VariantCompileInfo.Attributes">
      <summary>
        <para>Vertex attributes the compiled variant uses (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.VariantCompileInfo.ConstantBuffers">
      <summary>
        <para>Constant buffers the compiled variant uses (Read Only). Some platforms don't have constant buffers; however, Unity reports all global constants/uniforms in a single constant buffer.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.VariantCompileInfo.Messages">
      <summary>
        <para>Stores errors and warnings produced during compilation (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.VariantCompileInfo.ShaderData">
      <summary>
        <para>Stores the raw platform-specific bytecode for the compiled shader (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.VariantCompileInfo.Success">
      <summary>
        <para>Indicates whether the variant compilation succeeded (Read Only). If it did, it is true. Otherwise, this is false and ShaderData.VariantCompileInfo.Messages contains the errors.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderData.VariantCompileInfo.TextureBindings">
      <summary>
        <para>Texture bindings the compiled variant uses (Read Only).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ShaderGUI">
      <summary>
        <para>Abstract class to derive from for defining custom GUI for shader properties and for extending the material preview.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ShaderGUI.AssignNewShaderToMaterial(UnityEngine.Material,UnityEngine.Shader,UnityEngine.Shader)">
      <summary>
        <para>This method is called when a new shader has been selected for a Material.</para>
      </summary>
      <param name="material">The material the newShader should be assigned to.</param>
      <param name="oldShader">Previous shader.</param>
      <param name="newShader">New shader to assign to the material.</param>
    </member>
    <member name="M:UnityEditor.ShaderGUI.FindProperty(System.String,UnityEditor.MaterialProperty[])">
      <summary>
        <para>Find shader properties.</para>
      </summary>
      <param name="propertyName">The name of the material property.</param>
      <param name="properties">The array of available material properties.</param>
      <param name="propertyIsMandatory">If true then this method will throw an exception if a property with propertyName was not found.</param>
      <returns>
        <para>The material property found, otherwise null.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderGUI.FindProperty(System.String,UnityEditor.MaterialProperty[],System.Boolean)">
      <summary>
        <para>Find shader properties.</para>
      </summary>
      <param name="propertyName">The name of the material property.</param>
      <param name="properties">The array of available material properties.</param>
      <param name="propertyIsMandatory">If true then this method will throw an exception if a property with propertyName was not found.</param>
      <returns>
        <para>The material property found, otherwise null.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderGUI.OnClosed(UnityEngine.Material)">
      <summary>
        <para>This method is called when the ShaderGUI is being closed.</para>
      </summary>
      <param name="material">
      </param>
    </member>
    <member name="M:UnityEditor.ShaderGUI.OnGUI(UnityEditor.MaterialEditor,UnityEditor.MaterialProperty[])">
      <summary>
        <para>To define a custom shader GUI use the methods of materialEditor to render controls for the properties array.</para>
      </summary>
      <param name="materialEditor">The MaterialEditor that are calling this OnGUI (the 'owner').</param>
      <param name="properties">Material properties of the current selected shader.</param>
    </member>
    <member name="M:UnityEditor.ShaderGUI.OnMaterialPreviewGUI(UnityEditor.MaterialEditor,UnityEngine.Rect,UnityEngine.GUIStyle)">
      <summary>
        <para>Override for extending the rendering of the Preview area or completly replace the preview (by not calling base.OnMaterialPreviewGUI).</para>
      </summary>
      <param name="materialEditor">The MaterialEditor that are calling this method (the 'owner').</param>
      <param name="r">Preview rect.</param>
      <param name="background">Style for the background.</param>
    </member>
    <member name="M:UnityEditor.ShaderGUI.OnMaterialPreviewSettingsGUI(UnityEditor.MaterialEditor)">
      <summary>
        <para>Override for extending the functionality of the toolbar of the preview area or completly replace the toolbar by not calling base.OnMaterialPreviewSettingsGUI.</para>
      </summary>
      <param name="materialEditor">The MaterialEditor that are calling this method (the 'owner').</param>
    </member>
    <member name="M:UnityEditor.ShaderGUI.ValidateMaterial(UnityEngine.Material)">
      <summary>
        <para>When the user loads a Material using this ShaderGUI into memory or changes a value in the Inspector, the Editor calls this method.</para>
      </summary>
      <param name="material">The material to validate.</param>
    </member>
    <member name="T:UnityEditor.ShaderImporter">
      <summary>
        <para>Shader importer lets you modify shader import settings from Editor scripts.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderImporter.preprocessorOverride">
      <summary>
        <para>The preprocessor that Unity uses to compile this shader.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ShaderImporter.GetDefaultTexture(System.String)">
      <summary>
        <para>Gets the default texture assigned to the shader importer for the shader property with given name.</para>
      </summary>
      <param name="name">
      </param>
    </member>
    <member name="M:UnityEditor.ShaderImporter.GetNonModifiableTexture(System.String)">
      <summary>
        <para>Gets the non-modifiable texture assigned to the shader importer for the shader property with given name.</para>
      </summary>
      <param name="name">
      </param>
    </member>
    <member name="M:UnityEditor.ShaderImporter.GetShader">
      <summary>
        <para>Gets the reference to the shader imported by this importer.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ShaderImporter.SetDefaultTextures(System.String[],UnityEngine.Texture[])">
      <summary>
        <para>Sets the default textures for each texture material property.</para>
      </summary>
      <param name="name">
      </param>
      <param name="textures">
      </param>
    </member>
    <member name="M:UnityEditor.ShaderImporter.SetNonModifiableTextures(System.String[],UnityEngine.Texture[])">
      <summary>
        <para>Sets the non-modifiable textures for each texture material property.</para>
      </summary>
      <param name="name">
      </param>
      <param name="textures">
      </param>
    </member>
    <member name="T:UnityEditor.ShaderInclude">
      <summary>
        <para>Shader include file asset.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ShaderIncludePathAttribute">
      <summary>
        <para>This attribute is no longer supported.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ShaderInfo">
      <summary>
        <para>Contains the following information about a shader:
-If the shader has compilation errors or warnings.
-If the shader is supported on the currently selected platform.
-The name of the shader.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderInfo.hasErrors">
      <summary>
        <para>Indicates whether the shader has compilation errors (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderInfo.hasWarnings">
      <summary>
        <para>Indicates whether the shader has compilation warnings (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderInfo.name">
      <summary>
        <para>The name of the shader (Read Only).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderInfo.supported">
      <summary>
        <para>Indicates whether the current platform supports the shader (Read Only).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ShaderMessage">
      <summary>
        <para>Contains information about messages generated by Unity's Shader Compiler.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderMessage.file">
      <summary>
        <para>The source file where the shader message was found.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderMessage.line">
      <summary>
        <para>The line of code where the shader message was found.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderMessage.message">
      <summary>
        <para>The message returned by the Unity Shader Compiler.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderMessage.messageDetails">
      <summary>
        <para>An (optional) detailed message returned from the Unity Shader Compiler.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderMessage.platform">
      <summary>
        <para>The specific platform where the Unity Shader Compiler discovered the message.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderMessage.severity">
      <summary>
        <para>Indicates the severity of the message returned from the Unity Shader Compiler.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ShaderMessage.#ctor(System.String,UnityEditor.Rendering.ShaderCompilerMessageSeverity)">
      <summary>
        <para>Creates a new ShaderMessage with the given message and severity.</para>
      </summary>
      <param name="msg">The message to report.</param>
      <param name="sev">Indicates the severity of the message.</param>
    </member>
    <member name="M:UnityEditor.ShaderMessage.Equals(UnityEditor.ShaderMessage)">
      <summary>
        <para>Compares two ShaderMessage on an element-by-element basis.</para>
      </summary>
      <param name="other">
      </param>
      <param name="obj">
      </param>
      <returns>
        <para>True if all fields of the message are equal, otherwise false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderMessage.Equals(System.Object)">
      <summary>
        <para>Compares two ShaderMessage on an element-by-element basis.</para>
      </summary>
      <param name="other">
      </param>
      <param name="obj">
      </param>
      <returns>
        <para>True if all fields of the message are equal, otherwise false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderMessage.GetHashCode">
      <summary>
        <para>Generates a hash value based on the contents of the message.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.ShaderMessage.op_Equal(UnityEditor.ShaderMessage,UnityEditor.ShaderMessage)">
      <summary>
        <para>Returns true if all memebers of the two arguments are equal.</para>
      </summary>
      <param name="left">
      </param>
      <param name="right">
      </param>
    </member>
    <member name="?:UnityEditor.ShaderMessage.op_NotEqual(UnityEditor.ShaderMessage,UnityEditor.ShaderMessage)">
      <summary>
        <para>Returns true if any of the elements of the two arguments are not equal.</para>
      </summary>
      <param name="left">
      </param>
      <param name="right">
      </param>
    </member>
    <member name="T:UnityEditor.ShaderPrecisionModel">
      <summary>
        <para>Options for the shader precision model.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShaderPrecisionModel.PlatformDefault">
      <summary>
        <para>Use the target platform defaults for sampler precision. This results in lower precision on mobile targets and full precision elsewhere.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShaderPrecisionModel.Unified">
      <summary>
        <para>Use full sampler precision by default and make it so you have to explicitly declare when you want to use lower precision. This sets Rendering.BuiltinShaderDefine.UNITY_UNIFIED_SHADER_PRECISION_MODEL when Unity compiles shaders.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ShaderUtil">
      <summary>
        <para>Utility functions to assist with working with shaders from the editor.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderUtil.allowAsyncCompilation">
      <summary>
        <para>When true, asynchronous Shader compilation is allowed at the current call site.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderUtil.anythingCompiling">
      <summary>
        <para>When true, the Editor is compiling some Shaders asynchronously at the point of query.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShaderUtil.hardwareSupportsRectRenderTexture">
      <summary>
        <para>Does the current hardware support render textues.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ShaderUtil.ClearCachedData(UnityEngine.Shader)">
      <summary>
        <para>Clears all internally-cached data that was generated for the given shader, such as errors and compilation info.</para>
      </summary>
      <param name="s">
      </param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.ClearShaderErrors(UnityEngine.Shader)">
      <summary>
        <para>Clears compile time messages for the given shader.</para>
      </summary>
      <param name="s">
      </param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.ClearShaderMessages(UnityEngine.Shader)">
      <summary>
        <para>Clear compile time messages for the given shader.</para>
      </summary>
      <param name="s">
      </param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.CompilePass(UnityEngine.Material,System.Int32,System.Boolean)">
      <summary>
        <para>Request the Editor to compile the Shader Variant needed for the specific pass of the given Material.</para>
      </summary>
      <param name="material">Target Material.</param>
      <param name="pass">Index of the target Shader pass.</param>
      <param name="forceSync">Forces the script execution to wait until the compilation has finished. Optional.</param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.CreateShaderAsset(UnityEditor.AssetImporters.AssetImportContext,System.String,System.Boolean)">
      <summary>
        <para>Creates a new Shader object from the provided source code string. You can use this method alongside the ScriptedImporter to create custom shader generation tools in the Editor.</para>
      </summary>
      <param name="context">A context object that the asset system needs to register shader dependencies properly.</param>
      <param name="source">A string that contains a shader written in code.</param>
      <param name="compileInitialShaderVariants">Set to true to compile the code contained in the source string; otherwise false.</param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.CreateShaderAsset(System.String,System.Boolean)">
      <summary>
        <para>Creates a new Shader object from the provided source code string. You can use this method alongside the ScriptedImporter to create custom shader generation tools in the Editor.</para>
      </summary>
      <param name="context">A context object that the asset system needs to register shader dependencies properly.</param>
      <param name="source">A string that contains a shader written in code.</param>
      <param name="compileInitialShaderVariants">Set to true to compile the code contained in the source string; otherwise false.</param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.CreateShaderAsset(System.String)">
      <summary>
        <para>Creates a new Shader object from the provided source code string. You can use this method alongside the ScriptedImporter to create custom shader generation tools in the Editor.</para>
      </summary>
      <param name="context">A context object that the asset system needs to register shader dependencies properly.</param>
      <param name="source">A string that contains a shader written in code.</param>
      <param name="compileInitialShaderVariants">Set to true to compile the code contained in the source string; otherwise false.</param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetAllShaderInfo">
      <summary>
        <para>Returns an array of ShaderInfo of all available shaders. That includes built-in shaders.</para>
      </summary>
      <returns>
        <para>ShaderInfo array of all available shaders.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetCallableShaderCount(UnityEngine.Experimental.Rendering.RayTracingShader)">
      <summary>
        <para>Returns the number of callable Shaders defined whitin a given RayTracingShader.</para>
      </summary>
      <param name="s">The RayTracingShader instance.</param>
      <returns>
        <para>The number of callable Shaders defined in the RayTracingShader instance passed as argument.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetCallableShaderName(UnityEngine.Experimental.Rendering.RayTracingShader,System.Int32)">
      <summary>
        <para>Returns the name of a user-defined callable Shader from within a RayTracingShader.</para>
      </summary>
      <param name="s">The RayTracingShader instance.</param>
      <param name="shaderIndex">The callable Shader index for which to retrieve the name. The callable Shaders defined in a RayTracingShader are sorted alphabetically by the Shader compiler.</param>
      <returns>
        <para>The name of the callable Shader at the index passed using the "shaderIndex" argument.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetCallableShaderParamSize(UnityEngine.Experimental.Rendering.RayTracingShader,System.Int32)">
      <summary>
        <para>Returns the parameter size of a user-defined callable Shader from within a RayTracingShader.</para>
      </summary>
      <param name="s">The RayTracingShader instance.</param>
      <param name="shaderIndex">The callable Shader index for which to retrieve the parameter size.</param>
      <returns>
        <para>The parameter size in bytes.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetComputeShaderMessageCount(UnityEngine.ComputeShader)">
      <summary>
        <para>Returns the number of errors and warnings generated by the Unity Shader Compiler for the given ComputeShader.</para>
      </summary>
      <param name="s">The ComputeShader instance to check for messages.</param>
      <returns>
        <para>The number of errors and warnings generated by the Unity Shader Compiler.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetComputeShaderMessages(UnityEngine.ComputeShader)">
      <summary>
        <para>Returns each error and warning generated by the Unity Shader Compiler for the given ComputeShader.</para>
      </summary>
      <param name="s">The ComputeShader instance to check for messages.</param>
      <returns>
        <para>An array of ShaderMessage structs containing the generated messages.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetCurrentCustomEditor(UnityEngine.Shader)">
      <summary>
        <para>Gets the current custom editor for the shader you pass in.

Depending on the render pipeline asset assigned in your Graphics Settings, the custom editor can change if the shader has a different custom editor for one or multiple render pipeline assets.</para>
      </summary>
      <param name="shader">The shader to check against.</param>
      <returns>
        <para>The current custom editor full class name.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetCustomEditorForRenderPipeline(UnityEngine.Shader,System.Type)">
      <summary>
        <para>Gets the shader's custom editor class name for a specific render pipeline asset type.</para>
      </summary>
      <param name="renderPipelineType">The render pipeline asset type.</param>
      <param name="shader">The shader to check against.</param>
      <returns>
        <para>Returns the full class name of the custom editor.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetCustomEditorForRenderPipeline(UnityEngine.Shader,System.String)">
      <summary>
        <para>Gets the shader's custom editor class name for a specific render pipeline asset type.</para>
      </summary>
      <param name="renderPipelineType">The render pipeline asset type.</param>
      <param name="shader">The shader to check against.</param>
      <returns>
        <para>Returns the full class name of the custom editor.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetMissShaderCount(UnityEngine.Experimental.Rendering.RayTracingShader)">
      <summary>
        <para>Returns the number of miss Shaders defined whitin a given RayTracingShader.</para>
      </summary>
      <param name="s">The RayTracingShader instance.</param>
      <returns>
        <para>The number of miss Shaders defined in the RayTracingShader instance passed as argument.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetMissShaderName(UnityEngine.Experimental.Rendering.RayTracingShader,System.Int32)">
      <summary>
        <para>Returns the name of a user-defined miss Shader from within a RayTracingShader.</para>
      </summary>
      <param name="s">The RayTracingShader instance.</param>
      <param name="shaderIndex">The miss Shader index for which to retrieve the name. The miss Shaders defined in a RayTracingShader are sorted alphabetically by the Shader compiler.</param>
      <returns>
        <para>The name of the miss Shader at the index passed using the "shaderIndex" argument.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetMissShaderRayPayloadSize(UnityEngine.Experimental.Rendering.RayTracingShader,System.Int32)">
      <summary>
        <para>Returns the ray payload size of a user-defined miss Shader from within a RayTracingShader.</para>
      </summary>
      <param name="s">The RayTracingShader instance.</param>
      <param name="shaderIndex">The miss Shader index for which to retrieve the ray payload size.</param>
      <returns>
        <para>The ray payload size in bytes.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetPassKeywords">
      <summary>
        <para>Gets the local shader keywords that are valid for a Pass within a particular shader.</para>
      </summary>
      <param name="s">The shader the Pass belongs to.</param>
      <param name="passIdentifier">The identifier of a Pass within the given shader.</param>
      <returns>
        <para>Returns an array of LocalKeywords that are valid for the Pass you identify. If the Rendering.PassIdentifier you use is invalid, this function returns an empty array and Unity displays an error in the Console window.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetPassKeywords">
      <summary>
        <para>Gets the local shader keywords that are valid for a specified shader stage of a Pass within a particular shader.</para>
      </summary>
      <param name="s">The shader the Pass belongs to.</param>
      <param name="passIdentifier">The identifier of a Pass within the given shader.</param>
      <param name="shaderType">The shader stage of the given Pass.</param>
      <returns>
        <para>Returns an array of LocalKeywords that are valid for the given Rendering.ShaderType|shader stage of the Pass you identify. If the Rendering.PassIdentifier you use is invalid, this function returns an empty array and Unity displays an error in the Console window. If the shader stage doesn't exist in the pass, this function returns an empty array.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetPropertyCount(UnityEngine.Shader)">
      <summary>
        <para>Get the number of properties in Shader s.</para>
      </summary>
      <param name="s">The shader to check against.</param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetPropertyDescription(UnityEngine.Shader,System.Int32)">
      <summary>
        <para>Get the description of the shader propery at index propertyIdx of Shader s.</para>
      </summary>
      <param name="s">The shader to check against.</param>
      <param name="propertyIdx">The property index to use.</param>
      <returns>
        <para>Returns the description of the given shader property.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetPropertyName(UnityEngine.Shader,System.Int32)">
      <summary>
        <para>Get the name of the shader propery at index propertyIdx of Shader s.</para>
      </summary>
      <param name="s">The shader to check against.</param>
      <param name="propertyIdx">The property index to use.</param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetPropertyType(UnityEngine.Shader,System.Int32)">
      <summary>
        <para>Get the ShaderProperyType of the shader propery at index propertyIdx of Shader s.</para>
      </summary>
      <param name="s">The shader to check against.</param>
      <param name="propertyIdx">The property index to use.</param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetRangeLimits(UnityEngine.Shader,System.Int32,System.Int32)">
      <summary>
        <para>Get Limits for a range property at index propertyIdx of Shader s.</para>
      </summary>
      <param name="defminmax">Which value to get: 0 = default, 1 = min, 2 = max.</param>
      <param name="s">The shader to check against.</param>
      <param name="propertyIdx">The property index to use.</param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetRayGenerationShaderCount(UnityEngine.Experimental.Rendering.RayTracingShader)">
      <summary>
        <para>Returns the number of ray generation Shaders defined whitin a given RayTracingShader.</para>
      </summary>
      <param name="s">The RayTracingShader instance.</param>
      <returns>
        <para>The number of ray generation Shaders defined in the RayTracingShader instance passed as argument.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetRayGenerationShaderName(UnityEngine.Experimental.Rendering.RayTracingShader,System.Int32)">
      <summary>
        <para>Returns the name of a user-defined ray generation Shader from within a RayTracingShader.</para>
      </summary>
      <param name="s">The RayTracingShader instance.</param>
      <param name="shaderIndex">The ray generation Shader index for which to retrieve the name. The ray generation Shaders defined in a RayTracingShader are sorted alphabetically by the Shader compiler.</param>
      <returns>
        <para>The name of the ray generation Shader at the index passed using the "shaderIndex" argument.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetRayTracingShaderMessageCount(UnityEngine.Experimental.Rendering.RayTracingShader)">
      <summary>
        <para>Returns the number of errors and warnings generated by the Shader Compiler for the given RayTracingShader.</para>
      </summary>
      <param name="s">The RayTracingShader instance to check for messages.</param>
      <returns>
        <para>The number of errors and warnings generated by the Shader Compiler.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetRayTracingShaderMessages(UnityEngine.Experimental.Rendering.RayTracingShader)">
      <summary>
        <para>Returns each error and warning generated by the Shader Compiler for the given RayTracingShader.</para>
      </summary>
      <param name="s">The RayTracingShader instance to check for messages.</param>
      <returns>
        <para>An array of ShaderMessage structs containing the generated messages.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetShaderData(UnityEngine.Shader)">
      <summary>
        <para>Get the shader data for a specific shader.</para>
      </summary>
      <param name="shader">The shader to get data from.</param>
      <returns>
        <para>The shader data for the provided shader.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetShaderInfo(UnityEngine.Shader)">
      <summary>
        <para>Gets ShaderInfo for the given shader.</para>
      </summary>
      <param name="shader">The shader to get information about.</param>
      <returns>
        <para>Returns an instance of ShaderInfo for the given shader.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetShaderMessageCount(UnityEngine.Shader)">
      <summary>
        <para>Returns the number of errors and warnings generated by the Unity Shader Compiler for the given Shader.</para>
      </summary>
      <param name="s">The Shader instance to check for messages.</param>
      <returns>
        <para>The number of errors and warnings generated by the Unity Shader Compiler.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetShaderMessages(UnityEngine.Shader,UnityEditor.Rendering.ShaderCompilerPlatform)">
      <summary>
        <para>Returns each error and warning generated by the Unity Shader Compiler for the given Shader.</para>
      </summary>
      <param name="s">The Shader instance to check for messages.</param>
      <param name="platform">The ShaderCompilerPlatform to check for messages.</param>
      <returns>
        <para>An array of ShaderMessage structs containing the generated messages.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetShaderMessages(UnityEngine.Shader)">
      <summary>
        <para>Returns each error and warning generated by the Unity Shader Compiler for the given Shader.</para>
      </summary>
      <param name="s">The Shader instance to check for messages.</param>
      <param name="platform">The ShaderCompilerPlatform to check for messages.</param>
      <returns>
        <para>An array of ShaderMessage structs containing the generated messages.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetShaderPlatformKeywordsForBuildTarget(UnityEditor.Rendering.ShaderCompilerPlatform,UnityEditor.BuildTarget,UnityEngine.Rendering.GraphicsTier)">
      <summary>
        <para>Gets the platform keywords for a shader, given a shader compiler platform, build target, and optional graphics tier. These platform keywords are necessary to properly compile a shader for a given target.</para>
      </summary>
      <param name="shaderCompilerPlatform">The shader compiler platform.</param>
      <param name="buildTarget">The build target.</param>
      <param name="tier">An optional graphics tier.</param>
      <returns>
        <para>Returns an array of built-in shader defines needed to compile a shader for the given target.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetShaderPlatformKeywordsForBuildTarget(UnityEditor.Rendering.ShaderCompilerPlatform,UnityEditor.BuildTarget)">
      <summary>
        <para>Gets the platform keywords for a shader, given a shader compiler platform, build target, and optional graphics tier. These platform keywords are necessary to properly compile a shader for a given target.</para>
      </summary>
      <param name="shaderCompilerPlatform">The shader compiler platform.</param>
      <param name="buildTarget">The build target.</param>
      <param name="tier">An optional graphics tier.</param>
      <returns>
        <para>Returns an array of built-in shader defines needed to compile a shader for the given target.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.GetTexDim(UnityEngine.Shader,System.Int32)">
      <summary>
        <para>Gets texture dimension of a shader property.</para>
      </summary>
      <param name="s">The shader to get the property from.</param>
      <param name="propertyIdx">The property index to use.</param>
      <returns>
        <para>Texture dimension.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.HasProceduralInstancing(UnityEngine.Shader)">
      <summary>
        <para>Determines whether the specified Shader contains a valid Procedural Instancing variant.</para>
      </summary>
      <param name="s">The Shader to check.</param>
      <returns>
        <para>Returns true if the Shader has a valid Procedural Instancing variant. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.IsPassCompiled(UnityEngine.Material,System.Int32)">
      <summary>
        <para>Checks if the Shader variant for the given pass in the Material has already been compiled.</para>
      </summary>
      <param name="material">The Material to check against.</param>
      <param name="pass">The index of the Shader pass to check.</param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.IsShaderPropertyHidden(UnityEngine.Shader,System.Int32)">
      <summary>
        <para>Is the shader propery at index propertyIdx of Shader s hidden?</para>
      </summary>
      <param name="s">The shader to check against.</param>
      <param name="propertyIdx">The property index to use.</param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.IsShaderPropertyNonModifiableTexureProperty(UnityEngine.Shader,System.Int32)">
      <summary>
        <para>Is the shader propery at index propertyIdx of Shader s a NonModifiableTextureProperty?</para>
      </summary>
      <param name="s">The shader to check against.</param>
      <param name="propertyIdx">The property index to use.</param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.PassHasKeyword">
      <summary>
        <para>Checks whether a local shader keyword is valid for a Pass within a particular shader.</para>
      </summary>
      <param name="s">The shader the Pass belongs to.</param>
      <param name="passIdentifier">The identifier of a Pass within the given shader.</param>
      <param name="keyword">The local shader keyword to check.</param>
      <returns>
        <para>Returns true if the keyword is valid for the given Pass. Otherwise, returns false. If the Rendering.PassIdentifier you use is invalid, this function returns false and Unity displays an error in the Console window.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.PassHasKeyword">
      <summary>
        <para>Checks whether a local shader keyword is valid for a particular shader stage of a Pass within a particular shader.</para>
      </summary>
      <param name="s">The shader the Pass belongs to.</param>
      <param name="passIdentifier">The identifier of a Pass within the given shader.</param>
      <param name="keyword">The local shader keyword to check.</param>
      <param name="shaderType">The shader stage of the given pass.</param>
      <returns>
        <para>Returns true if the keyword is valid for the given shader stage of the Pass. Otherwise, returns false. If the Rendering.PassIdentifier you use is invalid, this function returns false and Unity displays an error in the Console window.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.PassHasKeyword">
      <summary>
        <para>Checks whether a local shader keyword is valid for a particular shader stage of a Pass within a particular shader for the given shader compiler platform.</para>
      </summary>
      <param name="s">The shader the Pass belongs to.</param>
      <param name="passIdentifier">The identifier of a Pass within the given shader.</param>
      <param name="keyword">The local shader keyword to check.</param>
      <param name="shaderType">The shader stage of the given pass.</param>
      <param name="shaderCompilerPlatform">The shader compiler platform to check against.</param>
      <returns>
        <para>Returns true if the keyword is valid for the given shader stage of the Pass for the given ShaderCompilerPlatform. Otherwise, returns false. If the Rendering.PassIdentifier you use is invalid, this function returns false and Unity displays an error in the Console window.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.RegisterShader(UnityEngine.Shader)">
      <summary>
        <para>Register a user created shader.</para>
      </summary>
      <param name="shader">
      </param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.RestoreAsyncCompilation(UnityEngine.Rendering.CommandBuffer)">
      <summary>
        <para>Restores the previous Shader compilation mode in this CommandBuffer scope.</para>
      </summary>
      <param name="cmd">Target CommandBuffer.</param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.SetAsyncCompilation(UnityEngine.Rendering.CommandBuffer,System.Boolean)">
      <summary>
        <para>Adds shader compilation mode command in the CommandBuffer.</para>
      </summary>
      <param name="cmd">Target CommandBuffer.</param>
      <param name="allow">Is async Shader compilation allowed or not.</param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.ShaderHasError(UnityEngine.Shader)">
      <summary>
        <para>Checks if a shader has any compilation errors. Ignores warnings.</para>
      </summary>
      <param name="shader">The shader to check for compilation errors.</param>
      <returns>
        <para>Returns true if the shader has any compilation errors. Otherwise, returns false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShaderUtil.ShaderHasWarnings(UnityEngine.Shader)">
      <summary>
        <para>Checks if a shader has any compilation warnings. Ignores errors.</para>
      </summary>
      <param name="shader">The shader to check for compilation warnings.</param>
      <returns>
        <para>Returns true if the shader has any compilation warnings. Otherwise, returns false.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.ShaderUtil.ShaderPropertyType">
      <summary>
        <para>Type of a given texture property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShaderUtil.ShaderPropertyType.Color">
      <summary>
        <para>Color Property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShaderUtil.ShaderPropertyType.Float">
      <summary>
        <para>Float Property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShaderUtil.ShaderPropertyType.Int">
      <summary>
        <para>Int Property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShaderUtil.ShaderPropertyType.Range">
      <summary>
        <para>Range Property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShaderUtil.ShaderPropertyType.TexEnv">
      <summary>
        <para>Texture Property.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShaderUtil.ShaderPropertyType.Vector">
      <summary>
        <para>Vector Property.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ShaderUtil.UpdateShaderAsset(UnityEditor.AssetImporters.AssetImportContext,UnityEngine.Shader,System.String,System.Boolean)">
      <summary>
        <para>Replaces the existing source code in the specified shader with the source code in the supplied string.</para>
      </summary>
      <param name="context">A context object that the asset system needs to register shader dependencies properly.</param>
      <param name="source">A string that contains a shader written in code.</param>
      <param name="compileInitialShaderVariants">Set to true to compile the code contained in the source string; otherwise false.</param>
      <param name="shader">The Shader to update.</param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.UpdateShaderAsset(UnityEngine.Shader,System.String,System.Boolean)">
      <summary>
        <para>Replaces the existing source code in the specified shader with the source code in the supplied string.</para>
      </summary>
      <param name="context">A context object that the asset system needs to register shader dependencies properly.</param>
      <param name="source">A string that contains a shader written in code.</param>
      <param name="compileInitialShaderVariants">Set to true to compile the code contained in the source string; otherwise false.</param>
      <param name="shader">The Shader to update.</param>
    </member>
    <member name="M:UnityEditor.ShaderUtil.UpdateShaderAsset(UnityEngine.Shader,System.String)">
      <summary>
        <para>Replaces the existing source code in the specified shader with the source code in the supplied string.</para>
      </summary>
      <param name="context">A context object that the asset system needs to register shader dependencies properly.</param>
      <param name="source">A string that contains a shader written in code.</param>
      <param name="compileInitialShaderVariants">Set to true to compile the code contained in the source string; otherwise false.</param>
      <param name="shader">The Shader to update.</param>
    </member>
    <member name="T:UnityEditor.ShortcutManagement.ActiveProfileChangedEventArgs">
      <summary>
        <para>Provides data for the ShortcutManagement.IShortcutManager.activeProfileChanged event.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShortcutManagement.ActiveProfileChangedEventArgs.currentActiveProfileId">
      <summary>
        <para>The ID of the current active profile.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShortcutManagement.ActiveProfileChangedEventArgs.previousActiveProfileId">
      <summary>
        <para>The ID of the previous active profile.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.ActiveProfileChangedEventArgs.#ctor(System.String,System.String)">
      <summary>
        <para>Initializes a new instance of the ShortcutManagement.ActiveProfileChangedEventArgs struct using the specified previous active profile ID and current active profile ID.</para>
      </summary>
      <param name="previousActiveProfileId">Previous active profile ID.</param>
      <param name="currentActiveProfileId">Current active profile ID.</param>
    </member>
    <member name="T:UnityEditor.ShortcutManagement.ClutchShortcutAttribute">
      <summary>
        <para>Attribute used to register a static method as the action for a clutch shortcut.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.ClutchShortcutAttribute.#ctor(System.String,System.Type)">
      <summary>
        <para>Creates an attribute for a clutch shortcut with an ID, optional context, and optional default binding.</para>
      </summary>
      <param name="id">Shortcut ID.</param>
      <param name="context">Optional shortcut context type.</param>
      <param name="defaultKeyCode">Optional key code for default binding.</param>
      <param name="defaultShortcutModifiers">Optional shortcut modifiers for default binding.</param>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.ClutchShortcutAttribute.#ctor(System.String,System.Type,UnityEngine.KeyCode,UnityEditor.ShortcutManagement.ShortcutModifiers)">
      <summary>
        <para>Creates an attribute for a clutch shortcut with an ID, optional context, and optional default binding.</para>
      </summary>
      <param name="id">Shortcut ID.</param>
      <param name="context">Optional shortcut context type.</param>
      <param name="defaultKeyCode">Optional key code for default binding.</param>
      <param name="defaultShortcutModifiers">Optional shortcut modifiers for default binding.</param>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.ClutchShortcutAttribute.#ctor(System.String,UnityEngine.KeyCode,UnityEditor.ShortcutManagement.ShortcutModifiers)">
      <summary>
        <para>Creates an attribute for a clutch shortcut with an ID, optional context, and optional default binding.</para>
      </summary>
      <param name="id">Shortcut ID.</param>
      <param name="context">Optional shortcut context type.</param>
      <param name="defaultKeyCode">Optional key code for default binding.</param>
      <param name="defaultShortcutModifiers">Optional shortcut modifiers for default binding.</param>
    </member>
    <member name="?:UnityEditor.ShortcutManagement.IShortcutManager">
      <summary>
        <para>Represents a manager that configures a particular instance of the shortcuts system.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.ShortcutManagement.IShortcutManager.activeProfileChanged(System.Action`1&lt;UnityEditor.ShortcutManagement.ActiveProfileChangedEventArgs&gt;)">
      <summary>
        <para>Raised when the ID of the active profile is changed.</para>
      </summary>
      <param name="value">Active profile changed event handler.</param>
    </member>
    <member name="P:UnityEditor.ShortcutManagement.IShortcutManager.activeProfileId">
      <summary>
        <para>Gets or sets the ID of the currently active profile.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.ShortcutManagement.IShortcutManager.shortcutBindingChanged(System.Action`1&lt;UnityEditor.ShortcutManagement.ShortcutBindingChangedEventArgs&gt;)">
      <summary>
        <para>Raised when shortcut overrides are changed on the active profile.</para>
      </summary>
      <param name="value">Shortcut binding changed event handler.</param>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.IShortcutManager.ClearShortcutOverride(System.String)">
      <summary>
        <para>Clears the binding for shortcut with given shortcut ID from the active profile.</para>
      </summary>
      <param name="shortcutId">ID of shortcut to clear override for.</param>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.IShortcutManager.CreateProfile(System.String)">
      <summary>
        <para>Creates a new profile with the given profile ID.</para>
      </summary>
      <param name="profileId">ID of created profile.</param>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.IShortcutManager.DeleteProfile(System.String)">
      <summary>
        <para>Deletes profile with the given profile ID.</para>
      </summary>
      <param name="profileId">ID of profile to delete.</param>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.IShortcutManager.GetAvailableProfileIds">
      <summary>
        <para>Returns an enumeration of all of avaliable profile IDs.</para>
      </summary>
      <returns>
        <para>Enumerable of available profile IDs.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.IShortcutManager.GetAvailableShortcutIds">
      <summary>
        <para>Returns an enumeration of all available shortcut IDs.</para>
      </summary>
      <returns>
        <para>Enumeration of available shortcut IDs.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.IShortcutManager.GetShortcutBinding(System.String)">
      <summary>
        <para>Returns the active binding for the given shortcut ID.</para>
      </summary>
      <param name="shortcutId">ID of shortcut to retrieve binding for.</param>
      <returns>
        <para>Active binding for shortcut.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.IShortcutManager.IsProfileIdValid(System.String)">
      <summary>
        <para>Checks that the profile ID is valid.</para>
      </summary>
      <param name="profileId">The profile ID to be checked. If a null string is specified, the method throws an ArgumentNullException error.</param>
      <returns>
        <para>Returns true if the profile ID is valid. Returns false if the profile ID is empty or equals ShortcutManager.defaultProfileId.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.IShortcutManager.IsProfileReadOnly(System.String)">
      <summary>
        <para>Is the profile for the given profile ID read-only?</para>
      </summary>
      <param name="profileId">ID of profile to determine read-only status for.</param>
      <returns>
        <para>true if the profile with ID profileId is read-only: otherwise, false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.IShortcutManager.IsShortcutOverridden(System.String)">
      <summary>
        <para>Does the active profile override the binding for the given shortcut ID?</para>
      </summary>
      <param name="shortcutId">ID of shortcut to determine overridden status for.</param>
      <returns>
        <para>true if the shortcut with ID shortcutId is overridden in the active profile; otherwise, false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.IShortcutManager.RebindShortcut(System.String,UnityEditor.ShortcutManagement.ShortcutBinding)">
      <summary>
        <para>Rebinds the shortcut for the given shortcut ID to the given binding in the active profile.</para>
      </summary>
      <param name="shortcutId">ID of shortcut to rebind.</param>
      <param name="binding">New binding of shortcut.</param>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.IShortcutManager.RenameProfile(System.String,System.String)">
      <summary>
        <para>Renames the ID of a profile.</para>
      </summary>
      <param name="profileId">ID of existing profile.</param>
      <param name="newProfileId">New ID for profile.</param>
    </member>
    <member name="T:UnityEditor.ShortcutManagement.KeyCombination">
      <summary>
        <para>Represents a combination of a non-modifier key and zero or more modifier keys.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShortcutManagement.KeyCombination.action">
      <summary>
        <para>Is the action key modifier part of the key combination? The action key represents the Control key on Windows and Linux, and the Command key on macOS.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShortcutManagement.KeyCombination.alt">
      <summary>
        <para>Is the Alt key (or Option key on macOS) modifier part of the key combination?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShortcutManagement.KeyCombination.control">
      <summary>
        <para>Determines if the Control key modifier is part of the key combination. Represents the Control key on Windows, macOS, and Linux.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShortcutManagement.KeyCombination.keyCode">
      <summary>
        <para>Key code representing non-modifier key of key combination.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShortcutManagement.KeyCombination.modifiers">
      <summary>
        <para>Modifier keys of key combination.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShortcutManagement.KeyCombination.shift">
      <summary>
        <para>Is the Shift key modifier part of key combination?</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.KeyCombination.#ctor(UnityEngine.KeyCode,UnityEditor.ShortcutManagement.ShortcutModifiers)">
      <summary>
        <para>Creates a new key combination with given key code and shortcut modifiers.</para>
      </summary>
      <param name="keyCode">Non-modifier key code of key combination.</param>
      <param name="shortcutModifiers">Shortcut modifiers keys of key combination.</param>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.KeyCombination.ToString">
      <summary>
        <para>Returns string representation of key combination.</para>
      </summary>
      <returns>
        <para>String representation of key combination.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.ShortcutManagement.ShortcutArguments">
      <summary>
        <para>Provides data for shortcut action methods invoked by the shortcut system.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShortcutManagement.ShortcutArguments.context">
      <summary>
        <para>Instance of the context in which the shortcut was triggered.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShortcutManagement.ShortcutArguments.stage">
      <summary>
        <para>The stage at which a shortcut action was invoked.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ShortcutManagement.ShortcutAttribute">
      <summary>
        <para>Attribute used to register a static method as the action for an action shortcut.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShortcutManagement.ShortcutAttribute.displayName">
      <summary>
        <para>Optional override of the Shortcut ID when listing the Shortcut in the configuration interface.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.ShortcutAttribute.#ctor(System.String,System.Type)">
      <summary>
        <para>Creates an attribute for an action shortcut with an ID, optional context, and optional default binding.</para>
      </summary>
      <param name="id">Shortcut ID.</param>
      <param name="context">Optional shortcut context type.</param>
      <param name="defaultKeyCode">Optional key code for default binding.</param>
      <param name="defaultShortcutModifiers">Optional shortcut modifiers for default binding.</param>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.ShortcutAttribute.#ctor(System.String,System.Type,UnityEngine.KeyCode,UnityEditor.ShortcutManagement.ShortcutModifiers)">
      <summary>
        <para>Creates an attribute for an action shortcut with an ID, optional context, and optional default binding.</para>
      </summary>
      <param name="id">Shortcut ID.</param>
      <param name="context">Optional shortcut context type.</param>
      <param name="defaultKeyCode">Optional key code for default binding.</param>
      <param name="defaultShortcutModifiers">Optional shortcut modifiers for default binding.</param>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.ShortcutAttribute.#ctor(System.String,UnityEngine.KeyCode,UnityEditor.ShortcutManagement.ShortcutModifiers)">
      <summary>
        <para>Creates an attribute for an action shortcut with an ID, optional context, and optional default binding.</para>
      </summary>
      <param name="id">Shortcut ID.</param>
      <param name="context">Optional shortcut context type.</param>
      <param name="defaultKeyCode">Optional key code for default binding.</param>
      <param name="defaultShortcutModifiers">Optional shortcut modifiers for default binding.</param>
    </member>
    <member name="T:UnityEditor.ShortcutManagement.ShortcutBaseAttribute">
      <summary>
        <para>Abstract base class for ShortcutManagement.ShortcutAttribute and ShortcutManagement.ClutchShortcutAttribute.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ShortcutManagement.ShortcutBinding">
      <summary>
        <para>Represents a key binding used to trigger a shortcut.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShortcutManagement.ShortcutBinding.empty">
      <summary>
        <para>A key combination representing the empty binding.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShortcutManagement.ShortcutBinding.keyCombinationSequence">
      <summary>
        <para>The sequence of key combinations required to trigger a shortcut with this binding.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.ShortcutBinding.#ctor(UnityEditor.ShortcutManagement.KeyCombination)">
      <summary>
        <para>Creates a shortcut binding from a single key combination.</para>
      </summary>
      <param name="keyCombination">Key combination used to trigger a shortcut with this binding.</param>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.ShortcutBinding.Equals(UnityEditor.ShortcutManagement.ShortcutBinding)">
      <summary>
        <para>Determines whether this instance and another specified ShortcutBinding instance have the same value.</para>
      </summary>
      <param name="other">The ShortcutBinding to compare to this instance.</param>
      <returns>
        <para>true if the value of the other parameter is the same as the value of this instance; otherwise, false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.ShortcutBinding.Equals(System.Object)">
      <summary>
        <para>Determines whether this instance and a specified object, which must also be a [[ShortcutBinding}} object, have the same value.</para>
      </summary>
      <param name="obj">The ShortcutBinding to compare to this instance.</param>
      <returns>
        <para>true if obj is a ShortcutBinding and its value is the same as this instance; otherwise, false. If obj is null, the method returns false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.ShortcutBinding.GetHashCode">
      <summary>
        <para>Returns the hash code for the value of this instance.</para>
      </summary>
      <returns>
        <para>A 32-bit signed integer hash code.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.ShortcutBinding.ToString">
      <summary>
        <para>Converts the value of the current ShortcutManagement.ShortcutBinding object to its equivalent string representation.</para>
      </summary>
      <returns>
        <para>The string representation of the current ShortcutManagement.ShortcutBinding value.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.ShortcutManagement.ShortcutBindingChangedEventArgs">
      <summary>
        <para>Provides data for the ShortcutManagement.IShortcutManager.shortcutBindingChanged event.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShortcutManagement.ShortcutBindingChangedEventArgs.newBinding">
      <summary>
        <para>The new binding for the shortcut that had its binding changed.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShortcutManagement.ShortcutBindingChangedEventArgs.oldBinding">
      <summary>
        <para>The old binding for the shortcut that had its binding changed.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShortcutManagement.ShortcutBindingChangedEventArgs.shortcutId">
      <summary>
        <para>The ID of the shortcut that had its binding changed.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.ShortcutManagement.ShortcutBindingChangedEventArgs.#ctor(System.String,UnityEditor.ShortcutManagement.ShortcutBinding,UnityEditor.ShortcutManagement.ShortcutBinding)">
      <summary>
        <para>Initializes a new instance of the ShortcutManagement.ShortcutBindingChangedEventArgs struct using the specified shortcut ID, old binding, and new binding.</para>
      </summary>
      <param name="shortcutId">The ID of the shortcut that had its binding changed.</param>
      <param name="oldBinding">The old binding of the shortcut that had its binding changed.</param>
      <param name="newBinding">The new binding of the shortcut that had its binding changed.</param>
    </member>
    <member name="T:UnityEditor.ShortcutManagement.ShortcutManager">
      <summary>
        <para>Provides access to an instance of ShortcutManagement.IShortcutManager for managing shortcuts.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShortcutManagement.ShortcutManager.defaultProfileId">
      <summary>
        <para>A constant defining the ID of the default shortcut profile. See the documentation for the ShortcutManagement.IShortcutManager.activeProfileId property.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.ShortcutManagement.ShortcutManager.instance">
      <summary>
        <para>An instance of the ShortcutManagement.IShortcutManager interface used for managing shortcuts in the editor.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ShortcutManagement.ShortcutModifiers">
      <summary>
        <para>Represents modifier keys for use in a shortcut binding.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShortcutManagement.ShortcutModifiers.Action">
      <summary>
        <para>Control key on Windows and Linux. Command key on macOS.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShortcutManagement.ShortcutModifiers.Alt">
      <summary>
        <para>Alt key (or Option key on macOS).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShortcutManagement.ShortcutModifiers.Control">
      <summary>
        <para>Marks that the Control key modifier is part of the key combination. Resolves to control key on Windows, macOS, and Linux.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShortcutManagement.ShortcutModifiers.None">
      <summary>
        <para>No modifier keys.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShortcutManagement.ShortcutModifiers.Shift">
      <summary>
        <para>Shift key.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ShortcutManagement.ShortcutStage">
      <summary>
        <para>Represents the stage at which a shortcut action was invoked.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShortcutManagement.ShortcutStage.Begin">
      <summary>
        <para>Represents that a shortcut action has begun.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ShortcutManagement.ShortcutStage.End">
      <summary>
        <para>Represents that a shortcut action has ended.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SketchUpImportCamera">
      <summary>
        <para>Structure to hold camera data extracted from a SketchUp file.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SketchUpImportCamera.aspectRatio">
      <summary>
        <para>Aspect ratio of the camera.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SketchUpImportCamera.farPlane">
      <summary>
        <para>The near clipping plane distance.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SketchUpImportCamera.fieldOfView">
      <summary>
        <para>Field of view of the camera.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SketchUpImportCamera.isPerspective">
      <summary>
        <para>Indicate if the camera is using a perspective or orthogonal projection.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SketchUpImportCamera.lookAt">
      <summary>
        <para>The position the camera is looking at.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SketchUpImportCamera.nearPlane">
      <summary>
        <para>The far clipping plane distance.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SketchUpImportCamera.orthoSize">
      <summary>
        <para>The orthogonal projection size of the camera. This value only make sense if SketchUpImportCamera.isPerspective is false.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SketchUpImportCamera.position">
      <summary>
        <para>The position of the camera.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SketchUpImportCamera.up">
      <summary>
        <para>Up vector of the camera.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SketchUpImporter">
      <summary>
        <para>Derives from AssetImporter to handle importing of SketchUp files.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SketchUpImporter.latitude">
      <summary>
        <para>Retrieves the latitude Geo Coordinate imported from the SketchUp file.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SketchUpImporter.longitude">
      <summary>
        <para>Retrieves the longitude Geo Coordinate imported from the SketchUp file.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SketchUpImporter.northCorrection">
      <summary>
        <para>Retrieves the north correction value imported from the SketchUp file.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SketchUpImporter.GetDefaultCamera">
      <summary>
        <para>The default camera or the camera of the active Scene which the SketchUp file was saved with.</para>
      </summary>
      <returns>
        <para>The default camera.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.SketchUpImporter.GetScenes">
      <summary>
        <para>The method returns an array of SketchUpImportScene which represents SketchUp scenes.</para>
      </summary>
      <returns>
        <para>Array of scenes extracted from a SketchUp file.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.SketchUpImportScene">
      <summary>
        <para>Structure to hold scene data extracted from a SketchUp file.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SketchUpImportScene.camera">
      <summary>
        <para>The camera data of the SketchUp scene.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SketchUpImportScene.name">
      <summary>
        <para>The name of the SketchUp scene.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SpeedTreeImporter">
      <summary>
        <para>AssetImportor for importing SpeedTree model assets.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.alphaTestRef">
      <summary>
        <para>Gets and sets a default alpha test reference values.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.animateCrossFading">
      <summary>
        <para>Indicates if the cross-fade LOD transition, applied to the last mesh LOD and the billboard, should be animated.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.bestWindQuality">
      <summary>
        <para>Returns the best-possible wind quality on this asset (configured in SpeedTree modeler).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.billboardTransitionCrossFadeWidth">
      <summary>
        <para>Proportion of the last 3D mesh LOD region width which is used for cross-fading to billboard tree.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.castShadows">
      <summary>
        <para>Gets and sets an array of booleans to enable shadow casting for each LOD.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.defaultBillboardShader">
      <summary>
        <para>Returns the default SpeedTree billboard shader for the active render pipeline, or null if the asset is a SpeedTree v8 asset.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.defaultShader">
      <summary>
        <para>Returns the default SpeedTree shader for the active render pipeline (either v7 or v8 according to the asset version).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.enableBump">
      <summary>
        <para>Gets and sets an array of booleans to enable normal mapping for each LOD.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.enableHue">
      <summary>
        <para>Gets and sets an array of booleans to enable Hue variation effect for each LOD.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.enableSmoothLODTransition">
      <summary>
        <para>Enables smooth LOD transitions.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.enableSubsurface">
      <summary>
        <para>Gets and sets an array of booleans to enable Subsurface effect for each LOD (affects only SpeedTree v8 assets).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.fadeOutWidth">
      <summary>
        <para>Proportion of the billboard LOD region width which is used for fading out the billboard.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.hasBillboard">
      <summary>
        <para>Tells if there is a billboard LOD.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.hasImported">
      <summary>
        <para>Tells if the SPM file has been previously imported.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.hueVariation">
      <summary>
        <para>Gets and sets a default Hue variation color and amount (in alpha).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.isV8">
      <summary>
        <para>Returns true if the asset is a SpeedTree v8 asset.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.mainColor">
      <summary>
        <para>Gets and sets a default main color.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.materialFolderPath">
      <summary>
        <para>Returns the folder path where generated materials will be placed in.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.materialLocation">
      <summary>
        <para>Material import location options.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.receiveShadows">
      <summary>
        <para>Gets and sets an array of booleans to enable shadow receiving for each LOD.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.scaleFactor">
      <summary>
        <para>How much to scale the tree model compared to what is in the .spm file.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.shininess">
      <summary>
        <para>Gets and sets a default Shininess value.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.specColor">
      <summary>
        <para>Gets and sets a default specular color.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.useLightProbes">
      <summary>
        <para>Gets and sets an array of booleans to enable Light Probe lighting for each LOD.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.windQualities">
      <summary>
        <para>Gets and sets an array of integers of the wind qualities on each LOD. Values will be clampped by bestWindQuality internally.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpeedTreeImporter.windQualityNames">
      <summary>
        <para>Gets an array of name strings for wind quality value.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SpeedTreeImporter.#ctor">
      <summary>
        <para>Construct a new SpeedTreeImporter object.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SpeedTreeImporter.GenerateMaterials">
      <summary>
        <para>Generates all necessary materials under materialFolderPath. If Version Control is enabled please first check out the folder.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.SpeedTreeImporter.LODHeights">
      <summary>
        <para>Gets and sets an array of floats of each LOD's screen height value.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SpeedTreeImporter.MaterialLocation">
      <summary>
        <para>Material import location options.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpeedTreeImporter.MaterialLocation.External">
      <summary>
        <para>Extract the materials and textures from the model.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpeedTreeImporter.MaterialLocation.InPrefab">
      <summary>
        <para>Unity imports materials as sub-assets.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.SpeedTreeImporter.SearchAndRemapMaterials(System.String)">
      <summary>
        <para>Search the project for matching materials and use them instead of the internal materials.</para>
      </summary>
      <param name="materialFolderPath">The path to search for matching materials.</param>
      <returns>
        <para>Returns true if any materials have been remapped, otherwise false.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.SplashScreenStyle">
      <summary>
        <para>The style of builtin splash screen to use.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SplashScreenStyle.Dark">
      <summary>
        <para>Dark background with light logo and text.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SplashScreenStyle.Light">
      <summary>
        <para>White background with dark logo and text.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SpriteImportMode">
      <summary>
        <para>Texture importer modes for Sprite import.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpriteImportMode.Multiple">
      <summary>
        <para>Sprites are multiple image sections extracted from the texture.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpriteImportMode.None">
      <summary>
        <para>Graphic is not a Sprite.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpriteImportMode.Polygon">
      <summary>
        <para>Sprite has it own mesh outline defined.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpriteImportMode.Single">
      <summary>
        <para>Sprite is a single image section extracted automatically from the texture.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SpriteMetaData">
      <summary>
        <para>Editor data used in producing a Sprite.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpriteMetaData.alignment">
      <summary>
        <para>Edge-relative alignment of the sprite graphic.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpriteMetaData.border">
      <summary>
        <para>Edge border size for a sprite (in pixels).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpriteMetaData.name">
      <summary>
        <para>Name of the Sprite.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpriteMetaData.pivot">
      <summary>
        <para>The pivot point of the Sprite, relative to its bounding rectangle.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpriteMetaData.rect">
      <summary>
        <para>Bounding rectangle of the sprite's graphic within the atlas image.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.SpritePackerMode">
      <summary>
        <para>Sprite Packer mode for the current project.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpritePackerMode.AlwaysOn">
      <summary>
        <para>Always maintain an up-to-date sprite atlas cache for Sprite with packing tag (legacy).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpritePackerMode.AlwaysOnAtlas">
      <summary>
        <para>Always pack all the SpriteAtlas.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpritePackerMode.BuildTimeOnly">
      <summary>
        <para>Updates the sprite atlas cache when the Player or bundles builds containing Sprite with the legacy packing tag.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpritePackerMode.BuildTimeOnlyAtlas">
      <summary>
        <para>Pack all the SpriteAtlas when building player/bundles.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpritePackerMode.Disabled">
      <summary>
        <para>Doesn't pack sprites.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.SpritePackerMode.SpriteAtlasV2">
      <summary>
        <para>If enabled, will automatically migrate all *.spriteatlas assets to *.spriteatlasv2 assets. Old *.spriteatlas assets will be removed.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Sprites.AtlasSettings">
      <summary>
        <para>Describes the final atlas texture.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Sprites.AtlasSettings.allowsAlphaSplitting">
      <summary>
        <para>Marks this atlas so that it contains textures that have been flagged for Alpha splitting when needed (for example ETC1 compression for textures with transparency).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Sprites.AtlasSettings.anisoLevel">
      <summary>
        <para>Anisotropic filtering level of the atlas texture.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Sprites.AtlasSettings.colorSpace">
      <summary>
        <para>Desired color space of the atlas.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Sprites.AtlasSettings.compressionQuality">
      <summary>
        <para>Quality of atlas texture compression in the range [0..100].</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Sprites.AtlasSettings.enableRotation">
      <summary>
        <para>Allows Sprite Packer to rotate/flip the Sprite to ensure optimal Packing.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Sprites.AtlasSettings.filterMode">
      <summary>
        <para>Filtering mode of the atlas texture.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Sprites.AtlasSettings.format">
      <summary>
        <para>The format of the atlas texture.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Sprites.AtlasSettings.generateMipMaps">
      <summary>
        <para>Detemines if sprite atlas textures generate mipmaps.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Sprites.AtlasSettings.maxHeight">
      <summary>
        <para>Maximum height of the atlas texture.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Sprites.AtlasSettings.maxWidth">
      <summary>
        <para>Maximum width of the atlas texture.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Sprites.AtlasSettings.paddingPower">
      <summary>
        <para>The amount of extra padding between packed sprites.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Sprites.IPackerPolicy">
      <summary>
        <para>Sprite packing policy interface. Provide a custom implementation to control which Sprites go into which atlases.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Sprites.IPackerPolicy.AllowSequentialPacking">
      <summary>
        <para>Specifies whether sequential processing of atlas tags is enabled. If enabled, sprite packing tags are processed one by one to reduce memory usage.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Sprites.IPackerPolicy.GetVersion">
      <summary>
        <para>Return the version of your policy. Sprite Packer needs to know if atlas grouping logic changed.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Sprites.IPackerPolicy.OnGroupAtlases(UnityEditor.BuildTarget,UnityEditor.Sprites.PackerJob,System.Int32[])">
      <summary>
        <para>Implement custom atlas grouping here.</para>
      </summary>
      <param name="target">
      </param>
      <param name="job">
      </param>
      <param name="textureImporterInstanceIDs">
      </param>
    </member>
    <member name="T:UnityEditor.Sprites.Packer">
      <summary>
        <para>Sprite Packer helpers.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Sprites.Packer.atlasNames">
      <summary>
        <para>Array of Sprite atlas names found in the current atlas cache.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Sprites.Packer.kDefaultPolicy">
      <summary>
        <para>Name of the default Sprite Packer policy.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Sprites.Packer.Execution">
      <summary>
        <para>Sprite Packer execution mode.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Sprites.Packer.Execution.ForceRegroup">
      <summary>
        <para>Will always trigger IPackerPolicy.OnGroupAtlases.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Sprites.Packer.Execution.Normal">
      <summary>
        <para>Normal execution. Will not trigger IPackerPolicy.OnGroupAtlases unless IPackerPolicy, IPackerPolicy version or TextureImporter settings have changed.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Sprites.Packer.GetAlphaTexturesForAtlas(System.String)">
      <summary>
        <para>Returns all alpha atlas textures generated for the specified atlas.</para>
      </summary>
      <param name="atlasName">Name of the atlas.</param>
    </member>
    <member name="M:UnityEditor.Sprites.Packer.GetAtlasDataForSprite(UnityEngine.Sprite,System.String&amp;,UnityEngine.Texture2D&amp;)">
      <summary>
        <para>Returns atlasing data for the specified Sprite.</para>
      </summary>
      <param name="sprite">Sprite to query.</param>
      <param name="atlasName">Gets set to the name of the atlas containing the specified Sprite.</param>
      <param name="atlasTexture">Gets set to the Texture containing the specified Sprite.</param>
    </member>
    <member name="M:UnityEditor.Sprites.Packer.GetTexturesForAtlas(System.String)">
      <summary>
        <para>Returns all atlas textures generated for the specified atlas.</para>
      </summary>
      <param name="atlasName">Atlas name.</param>
    </member>
    <member name="P:UnityEditor.Sprites.Packer.Policies">
      <summary>
        <para>Available Sprite Packer policies for this project.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Sprites.Packer.RebuildAtlasCacheIfNeeded(UnityEditor.BuildTarget,System.Boolean,UnityEditor.Sprites.Packer/Execution)">
      <summary>
        <para>Rebuilds the Sprite atlas cache.</para>
      </summary>
      <param name="target">
      </param>
      <param name="displayProgressBar">
      </param>
      <param name="execution">
      </param>
    </member>
    <member name="P:UnityEditor.Sprites.Packer.SelectedPolicy">
      <summary>
        <para>The active Sprite Packer policy for this project.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Sprites.PackerJob">
      <summary>
        <para>Current Sprite Packer job definition.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Sprites.PackerJob.AddAtlas(System.String,UnityEditor.Sprites.AtlasSettings)">
      <summary>
        <para>Registers a new atlas.</para>
      </summary>
      <param name="atlasName">
      </param>
      <param name="settings">
      </param>
    </member>
    <member name="M:UnityEditor.Sprites.PackerJob.AssignToAtlas(System.String,UnityEngine.Sprite,UnityEngine.SpritePackingMode,UnityEngine.SpritePackingRotation)">
      <summary>
        <para>Assigns a Sprite to an already registered atlas.</para>
      </summary>
      <param name="atlasName">
      </param>
      <param name="sprite">
      </param>
      <param name="packingMode">
      </param>
      <param name="packingRotation">
      </param>
    </member>
    <member name="T:UnityEditor.Sprites.SpriteUtility">
      <summary>
        <para>Helper utilities for accessing Sprite data.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Sprites.SpriteUtility.GetSpriteIndices(UnityEngine.Sprite,System.Boolean)">
      <summary>
        <para>Returns the generated Sprite mesh indices.</para>
      </summary>
      <param name="sprite">If Sprite is packed, it is possible to access data as if it was on the atlas texture.</param>
      <param name="getAtlasData">
      </param>
    </member>
    <member name="M:UnityEditor.Sprites.SpriteUtility.GetSpriteMesh(UnityEngine.Sprite,System.Boolean)">
      <summary>
        <para>Returns the generated Sprite mesh positions.</para>
      </summary>
      <param name="getAtlasData">If Sprite is packed, it is possible to access data as if it was on the atlas texture.</param>
      <param name="sprite">
      </param>
    </member>
    <member name="M:UnityEditor.Sprites.SpriteUtility.GetSpriteTexture(UnityEngine.Sprite,System.Boolean)">
      <summary>
        <para>Returns the generated Sprite texture. If Sprite is packed, it is possible to query for both source and atlas textures.</para>
      </summary>
      <param name="getAtlasData">If Sprite is packed, it is possible to access data as if it was on the atlas texture.</param>
      <param name="sprite">
      </param>
    </member>
    <member name="M:UnityEditor.Sprites.SpriteUtility.GetSpriteUVs(UnityEngine.Sprite,System.Boolean)">
      <summary>
        <para>Returns the generated Sprite mesh uvs.</para>
      </summary>
      <param name="sprite">If Sprite is packed, it is possible to access data as if it was on the atlas texture.</param>
      <param name="getAtlasData">
      </param>
    </member>
    <member name="T:UnityEditor.StandaloneBuildSubtarget">
      <summary>
        <para>Desktop platform subtarget type.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StandaloneBuildSubtarget.Player">
      <summary>
        <para>Build the default Desktop player.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StandaloneBuildSubtarget.Server">
      <summary>
        <para>Build a player that is optimized for running as a headless server.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.StaticEditorFlags">
      <summary>
        <para>Describes which Unity systems consider the GameObject as static, and include the GameObject in their precomputations in the Unity Editor.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StaticEditorFlags.BatchingStatic">
      <summary>
        <para>Combine the GameObject's Mesh with other eligible Meshes, to potentially reduce runtime rendering costs.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StaticEditorFlags.ContributeGI">
      <summary>
        <para>Include the target in global illumination calculations.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StaticEditorFlags.LightmapStatic">
      <summary>
        <para>Include the GameObject when precomputing lighting data.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StaticEditorFlags.NavigationStatic">
      <summary>
        <para>Include the GameObject when precomputing navigation data.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StaticEditorFlags.OccludeeStatic">
      <summary>
        <para>Mark the GameObject as a Static Occludee in the occlusion culling system.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StaticEditorFlags.OccluderStatic">
      <summary>
        <para>Mark the GameObject as a Static Occluder in the occlusion culling system.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StaticEditorFlags.OffMeshLinkGeneration">
      <summary>
        <para>Attempt to generate an Off-Mesh Link that starts from this GameObject when precomputing navigation data.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StaticEditorFlags.ReflectionProbeStatic">
      <summary>
        <para>Include this GameObject when when precomputing data for Reflection Probes whose Type property is set to Baked.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.StaticOcclusionCulling">
      <summary>
        <para>StaticOcclusionCulling lets you perform static occlusion culling operations.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.StaticOcclusionCulling.doesSceneHaveManualPortals">
      <summary>
        <para>Does the Scene contain any occlusion portals that were added manually rather than automatically?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.StaticOcclusionCulling.isRunning">
      <summary>
        <para>Used to check if asynchronous generation of static occlusion culling data is still running.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.StaticOcclusionCulling.umbraDataSize">
      <summary>
        <para>Returns the size in bytes that the PVS data is currently taking up in this Scene on disk.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.StaticOcclusionCulling.Cancel">
      <summary>
        <para>Used to cancel asynchronous generation of static occlusion culling data.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.StaticOcclusionCulling.Clear">
      <summary>
        <para>Clears the PVS of the opened Scene.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.StaticOcclusionCulling.Compute">
      <summary>
        <para>Used to generate static occlusion culling data.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.StaticOcclusionCulling.GenerateInBackground">
      <summary>
        <para>Used to compute static occlusion culling data asynchronously.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.StaticOcclusionCulling.RemoveCacheFolder">
      <summary>
        <para>Removes temporary folder used when baking occlusion.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.StaticOcclusionCullingVisualization">
      <summary>
        <para>Used to visualize static occlusion culling at development time in Scene view.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.StaticOcclusionCullingVisualization.showGeometryCulling">
      <summary>
        <para>If set to true, culling of geometry is enabled.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.StaticOcclusionCullingVisualization.showOcclusionCulling">
      <summary>
        <para>If set to true, visualization of target volumes is enabled.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.StaticOcclusionCullingVisualization.showPortals">
      <summary>
        <para>If set to true, visualization of portals is enabled.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.StaticOcclusionCullingVisualization.showPreVisualization">
      <summary>
        <para>If set to true, the visualization lines of the PVS volumes will show all cells rather than cells after culling.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.StaticOcclusionCullingVisualization.showViewVolumes">
      <summary>
        <para>If set to true, visualization of view volumes is enabled.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.StaticOcclusionCullingVisualization.showVisibilityLines">
      <summary>
        <para>If set to true, visualization of portals is enabled.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.StatusQueryOptions">
      <summary>
        <para>Options for querying the version control system status of a file.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StatusQueryOptions.ForceUpdate">
      <summary>
        <para>Force a refresh of the version control system status of the file. This is slow but accurate.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StatusQueryOptions.UseCachedAsync">
      <summary>
        <para>This option sets the status query to first use the latest valid version control system status of the file and query for a valid status asynchronously if otherwise.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StatusQueryOptions.UseCachedIfPossible">
      <summary>
        <para>This option sets the status query to first use the latest valid version control system status of the file and query for a valid status synchronously if otherwise.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.StereoRenderingPath">
      <summary>
        <para>Enum used to specify what stereo rendering path to use.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StereoRenderingPath.Instancing">
      <summary>
        <para>Single pass VR rendering ( via instanced rendering ).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StereoRenderingPath.MultiPass">
      <summary>
        <para>Multiple pass VR rendering.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StereoRenderingPath.SinglePass">
      <summary>
        <para>Single pass VR rendering ( via double-wide render texture ).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.StrippingLevel">
      <summary>
        <para>Managed code stripping level.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StrippingLevel.Disabled">
      <summary>
        <para>Deprecated. See ManagedStrippingLevel.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StrippingLevel.StripAssemblies">
      <summary>
        <para>Deprecated. See ManagedStrippingLevel.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StrippingLevel.StripByteCode">
      <summary>
        <para>Deprecated. See ManagedStrippingLevel.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.StrippingLevel.UseMicroMSCorlib">
      <summary>
        <para>Deprecated. See ManagedStrippingLevel.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Sysroot">
      <summary>
        <para>Base class for implementing sysroots and toolchains for IL2CPP</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Sysroot.GetIl2CppArguments">
      <summary>
        <para>Returns the next Il2Cpp argument on each call</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Sysroot.HostArch">
      <summary>
        <para>Returns name of the host architecture</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Sysroot.HostPlatform">
      <summary>
        <para>Returns name of the host platform</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Sysroot.Initialize">
      <summary>
        <para>Initializes sysroot</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Sysroot.Name">
      <summary>
        <para>Returns name of the sysroot</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Sysroot.TargetArch">
      <summary>
        <para>Returns name of the target architecture</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Sysroot.TargetPlatform">
      <summary>
        <para>Returns name of the target platform</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TakeInfo">
      <summary>
        <para>A Takeinfo object contains all the information needed to describe a take.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TakeInfo.bakeStartTime">
      <summary>
        <para>Start time in second.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TakeInfo.bakeStopTime">
      <summary>
        <para>Stop time in second.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TakeInfo.defaultClipName">
      <summary>
        <para>This is the default clip name for the clip generated for this take.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TakeInfo.name">
      <summary>
        <para>Take name as define from imported file.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TakeInfo.sampleRate">
      <summary>
        <para>Sample rate of the take.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TakeInfo.startTime">
      <summary>
        <para>Start time in second.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TakeInfo.stopTime">
      <summary>
        <para>Stop time in second.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TerrainLayerInspector">
      <summary>
        <para>The default Inspector class for Terrain Layer.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TerrainLayerInspector.ApplyCustomUI(UnityEditor.ITerrainLayerCustomUI,UnityEngine.Terrain)">
      <summary>
        <para>Applies the custom UI for the Terrain Layer object.</para>
      </summary>
      <param name="customUI">The custom UI object.</param>
      <param name="terrain">The Terrain object.</param>
    </member>
    <member name="M:UnityEditor.TerrainLayerInspector.HasPreviewGUI">
      <summary>
        <para>Returns true if the Terrain Layer has a preview GUI.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TerrainLayerInspector.OnInspectorGUI">
      <summary>
        <para>Draws the default Terrain Layer Inspector GUI.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TerrainLayerInspector.OnPreviewGUI(UnityEngine.Rect,UnityEngine.GUIStyle)">
      <summary>
        <para>Draws the default Terrain Layer preview GUI.</para>
      </summary>
      <param name="r">
      </param>
      <param name="background">
      </param>
    </member>
    <member name="M:UnityEditor.TerrainLayerInspector.RenderStaticPreview(System.String,UnityEngine.Object[],System.Int32,System.Int32)">
      <summary>
        <para>Draws the default Terrain Layer static preview.</para>
      </summary>
      <param name="assetPath">
      </param>
      <param name="subAssets">
      </param>
      <param name="width">
      </param>
      <param name="height">
      </param>
    </member>
    <member name="T:UnityEditor.TerrainLayerUtility">
      <summary>
        <para>A set of helper functions for using terrain layers.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TerrainLayerUtility.CheckNormalMapTextureType(UnityEngine.Texture2D)">
      <summary>
        <para>Checks whether the texture is correctly imported as a normal map texture.</para>
      </summary>
      <param name="texture">The texture to check.</param>
      <returns>
        <para>True if texture is correctly imported, otherwise false.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TerrainLayerUtility.ShowTerrainLayerGUI(UnityEngine.Terrain,UnityEngine.TerrainLayer,UnityEditor.Editor&amp;,UnityEditor.ITerrainLayerCustomUI)">
      <summary>
        <para>This helper function shows the Terrain Layer Inspector GUI nested inside the current Inspector GUI.</para>
      </summary>
      <param name="terrain">The Terrain from which the Terrain Layer originates.</param>
      <param name="terrainLayer">The Terrain Layer object to show the Inspector for.</param>
      <param name="terrainLayerEditor">Reference to a variable of type Editor in which Unity caches the Terrain Layer Inspector object.</param>
      <param name="customGUI">The custom Terrain Layer GUI object.</param>
    </member>
    <member name="M:UnityEditor.TerrainLayerUtility.ShowTerrainLayersSelectionHelper(UnityEngine.Terrain,System.Int32)">
      <summary>
        <para>Helper function to show the layer selection window for selecting terrain layers in inspector.</para>
      </summary>
      <param name="terrain">Terrain tile.</param>
      <param name="activeTerrainLayer">Currently selected terrain layer index.</param>
      <returns>
        <para>Newly selected terrain layer index.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TerrainLayerUtility.TilingSettingsUI(UnityEngine.TerrainLayer)">
      <summary>
        <para>Displays the tiling settings UI.</para>
      </summary>
      <param name="terrainLayer">The terrain layer that contains the tiling settings to display.</param>
      <param name="tileSize">The tile size property to display.</param>
      <param name="tileOffset">The tile offset property to display.</param>
    </member>
    <member name="M:UnityEditor.TerrainLayerUtility.TilingSettingsUI(UnityEditor.SerializedProperty,UnityEditor.SerializedProperty)">
      <summary>
        <para>Displays the tiling settings UI.</para>
      </summary>
      <param name="terrainLayer">The terrain layer that contains the tiling settings to display.</param>
      <param name="tileSize">The tile size property to display.</param>
      <param name="tileOffset">The tile offset property to display.</param>
    </member>
    <member name="M:UnityEditor.TerrainLayerUtility.ValidateDiffuseTextureUI(UnityEngine.Texture2D)">
      <summary>
        <para>Checks whether the texture is a valid TerrainLayer diffuse texture. If it detects that the texture is not valid, it displays a warning message that identifies the issue.</para>
      </summary>
      <param name="texture">The texture to validate.</param>
    </member>
    <member name="M:UnityEditor.TerrainLayerUtility.ValidateMaskMapTextureUI(UnityEngine.Texture2D)">
      <summary>
        <para>Checks whether the texture is a valid TerrainLayer mask map texture. If it detects that the texture is not valid, it displays a warning message that identifies the issue.</para>
      </summary>
      <param name="texture">The texture to validate.</param>
    </member>
    <member name="M:UnityEditor.TerrainLayerUtility.ValidateNormalMapTextureUI(UnityEngine.Texture2D,System.Boolean)">
      <summary>
        <para>Checks whether the texture is a valid TerrainLayer normal map texture. If it detects that the texture is not valid, it displays a warning message that identifies the issue.</para>
      </summary>
      <param name="texture">The texture to validate.</param>
      <param name="normalMapTextureType">The return value from the CheckNormalMapTextureType method indicating whether the texture is imported as a normal map.</param>
    </member>
    <member name="T:UnityEditor.TerrainTools.BrushGUIEditFlags">
      <summary>
        <para>Flags that specify which brush controls the [IOnInspectorGUI.ShowBrushesGUI] method displays.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TerrainTools.BrushGUIEditFlags.All">
      <summary>
        <para>Display all brush controls.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TerrainTools.BrushGUIEditFlags.Inspect">
      <summary>
        <para>Display the brush inspector for the currently selected brush.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TerrainTools.BrushGUIEditFlags.None">
      <summary>
        <para>Don't display any brush controls.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TerrainTools.BrushGUIEditFlags.Opacity">
      <summary>
        <para>Display the brush opacity control.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TerrainTools.BrushGUIEditFlags.Select">
      <summary>
        <para>Display the brush selection control.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TerrainTools.BrushGUIEditFlags.SelectAndInspect">
      <summary>
        <para>Display the brush selection control, and the brush inspector for the currently selected brush.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TerrainTools.BrushGUIEditFlags.Size">
      <summary>
        <para>Display the brush size control.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.TerrainTools.IOnInspectorGUI">
      <summary>
        <para>Interface that provides parameters and utility functions for the OnInspectorGUI event in the terrain paint tools.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TerrainTools.IOnInspectorGUI.Repaint(UnityEditor.TerrainTools.RepaintFlags)">
      <summary>
        <para>Instructs the Editor to repaint the tool UI and/or the scene view.</para>
      </summary>
      <param name="flags">What to repaint.</param>
    </member>
    <member name="M:UnityEditor.TerrainTools.IOnInspectorGUI.ShowBrushesGUI(System.Int32,UnityEditor.TerrainTools.BrushGUIEditFlags,System.Int32)">
      <summary>
        <para>Displays the default controls for the brush in the tool inspector.</para>
      </summary>
      <param name="spacing">Pixel spacing for the brush GUI controls.</param>
      <param name="flags">Specifies which brush controls to display in the Terrain tool UI.</param>
      <param name="textureResolutionPerTile">The resolution per Terrain tile of the Texture, which the tool is editing.  Unity uses this value to calculate Brush size limits.</param>
    </member>
    <member name="?:UnityEditor.TerrainTools.IOnPaint">
      <summary>
        <para>Interface that provides parameters and utility functions for the OnPaint event of the terrain paint tools.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TerrainTools.IOnPaint.brushSize">
      <summary>
        <para>Read only. Current brush size in Terrain units (equivalent size to world units).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TerrainTools.IOnPaint.brushStrength">
      <summary>
        <para>Read only. Current brush strength.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TerrainTools.IOnPaint.brushTexture">
      <summary>
        <para>Read only. Current selected brush texture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TerrainTools.IOnPaint.hitValidTerrain">
      <summary>
        <para>Read only. True if the mouse is over a valid Terrain object; otherwise false.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TerrainTools.IOnPaint.raycastHit">
      <summary>
        <para>Read only. The raycast result for the current mouse position.  This is valid when hitValidTerrain is true.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TerrainTools.IOnPaint.uv">
      <summary>
        <para>Read only. The normalized position (between 0 and 1) on the active Terrain.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TerrainTools.IOnPaint.Repaint(UnityEditor.TerrainTools.RepaintFlags)">
      <summary>
        <para>Instructs the Editor to repaint the tool UI, the Scene view, or both.</para>
      </summary>
      <param name="flags">Specifies what to repaint.</param>
    </member>
    <member name="M:UnityEditor.TerrainTools.IOnPaint.RepaintAllInspectors">
      <summary>
        <para>Instructs the Editor to repaint the inspector UI.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.TerrainTools.IOnSceneGUI">
      <summary>
        <para>Interface that provides parameters and utility functions for the OnSceneGUI event of the terrain paint tools.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TerrainTools.IOnSceneGUI.brushSize">
      <summary>
        <para>Read only. Current brush size in terrain units (equivalent size to world units).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TerrainTools.IOnSceneGUI.brushStrength">
      <summary>
        <para>Read only. Current brush strength.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TerrainTools.IOnSceneGUI.brushTexture">
      <summary>
        <para>Read only. Current selected brush texture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TerrainTools.IOnSceneGUI.controlId">
      <summary>
        <para>The control ID for the current Terrain Inspector. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TerrainTools.IOnSceneGUI.hitValidTerrain">
      <summary>
        <para>Read only. True if the mouse is over a valid Terrain object; otherwise false.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TerrainTools.IOnSceneGUI.raycastHit">
      <summary>
        <para>Read only. The raycast result for the current mouse position.  This is valid when hitValidTerrain is true.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TerrainTools.IOnSceneGUI.sceneView">
      <summary>
        <para>Read only. SceneView object.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TerrainTools.IOnSceneGUI.Repaint(UnityEditor.TerrainTools.RepaintFlags)">
      <summary>
        <para>Instructs the Editor to repaint the tool UI, the Scene view, or both.</para>
      </summary>
      <param name="flags">Specifies what to repaint.</param>
    </member>
    <member name="T:UnityEditor.TerrainTools.RepaintFlags">
      <summary>
        <para>Flags that indicate what to repaint on the Terrain tools.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TerrainTools.RepaintFlags.Scene">
      <summary>
        <para>Repaint the Scene view.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TerrainTools.RepaintFlags.UI">
      <summary>
        <para>Repaint the tool UI.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TerrainTools.TerrainBrushPreviewMode">
      <summary>
        <para>Enum to specify whether DrawBrushPreview previews the source render texture or the destination render texture of a PaintContext.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TerrainTools.TerrainBrushPreviewMode.DestinationRenderTexture">
      <summary>
        <para>Specifies that TerrainTools.TerrainPaintUtilityEditor.DrawBrushPreview uses the destination render texture of the PaintContext.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TerrainTools.TerrainBrushPreviewMode.SourceRenderTexture">
      <summary>
        <para>Specifies that TerrainTools.TerrainPaintUtilityEditor.DrawBrushPreview uses the source render texture of the PaintContext.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TerrainTools.TerrainInspectorUtility">
      <summary>
        <para>Utility class for Terrain Inspector GUI.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TerrainTools.TerrainInspectorUtility.TerrainShaderValidationGUI(UnityEngine.Material)">
      <summary>
        <para>Checks whether a Material is compatible with Terrain.</para>
      </summary>
      <param name="material">The Material to validate.</param>
    </member>
    <member name="T:UnityEditor.TerrainTools.TerrainPaintTool`1">
      <summary>
        <para>Base class for terrain painting tools.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TerrainTools.TerrainPaintTool_1.GetDescription">
      <summary>
        <para>Retrieves the description of the custom terrain tool.</para>
      </summary>
      <returns>
        <para>Tool description.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TerrainTools.TerrainPaintTool_1.GetName">
      <summary>
        <para>Retrieves the name of the custom terrain tool.</para>
      </summary>
      <returns>
        <para>Tool name.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TerrainTools.TerrainPaintTool_1.OnDisable">
      <summary>
        <para>Called when the tool is destroyed.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TerrainTools.TerrainPaintTool_1.OnEnable">
      <summary>
        <para>Called when the tool is created.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TerrainTools.TerrainPaintTool_1.OnEnterToolMode">
      <summary>
        <para>Called when the tool is activated.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TerrainTools.TerrainPaintTool_1.OnExitToolMode">
      <summary>
        <para>Called when the tool becomes inactive.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TerrainTools.TerrainPaintTool_1.OnInspectorGUI(UnityEngine.Terrain,UnityEditor.TerrainTools.IOnInspectorGUI)">
      <summary>
        <para>Custom terrain tool OnInspectorGUI callback.</para>
      </summary>
      <param name="terrain">Active Terrain object.</param>
      <param name="editContext">Interface used to communicate between Editor and Paint tools.</param>
    </member>
    <member name="M:UnityEditor.TerrainTools.TerrainPaintTool_1.OnPaint(UnityEngine.Terrain,UnityEditor.TerrainTools.IOnPaint)">
      <summary>
        <para>Custom terrain tool paint callback.</para>
      </summary>
      <param name="terrain">Active Terrain object.</param>
      <param name="editContext">Interface used to communicate between Editor and Paint tools.</param>
      <returns>
        <para>Return true to temporarily hide tree, grass, and detail layers on the terrain.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TerrainTools.TerrainPaintTool_1.OnRenderBrushPreview(UnityEngine.Terrain,UnityEditor.TerrainTools.IOnSceneGUI)">
      <summary>
        <para>Use this method to implement custom tool preview and UI behavior that will only render while the mouse is within the SceneView bounds or while you're actively using this tool.</para>
      </summary>
      <param name="terrain">Active Terrain object.</param>
      <param name="editContext">Interface for communication between Editor and Paint tools.</param>
    </member>
    <member name="M:UnityEditor.TerrainTools.TerrainPaintTool_1.OnSceneGUI(UnityEngine.Terrain,UnityEditor.TerrainTools.IOnSceneGUI)">
      <summary>
        <para>Custom terrain tool OnSceneGUI callback.</para>
      </summary>
      <param name="terrain">Active Terrain object.</param>
      <param name="editContext">Interface for communication between Editor and Paint tools.</param>
    </member>
    <member name="T:UnityEditor.TerrainTools.TerrainPaintUtilityEditor">
      <summary>
        <para>Terrain paint utility editor helper functions.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TerrainTools.TerrainPaintUtilityEditor.DrawBrushPreview">
      <summary>
        <para>Draws a Terrain brush preview mesh from a heightmap PaintContext using the provided procedural material.</para>
      </summary>
      <param name="heightmapPC">PaintContext describing the heightmap from which to build the preview mesh.</param>
      <param name="previewTexture">Specifies Whether to build the mesh using the source or destination render texture in heightmapPC.</param>
      <param name="brushTexture">The brush texture to preview.</param>
      <param name="brushXform">Describes the position and orientation of the brush.</param>
      <param name="proceduralMaterial">Material used to render the preview.</param>
      <param name="materialPassIndex">Material pass to render.</param>
    </member>
    <member name="M:UnityEditor.TerrainTools.TerrainPaintUtilityEditor.GetDefaultBrushPreviewMaterial">
      <summary>
        <para>Returns the default brush preview material.  This material supports procedural mesh generation for use with DrawBrushPreview.</para>
      </summary>
      <returns>
        <para>Default brush preview material.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TerrainTools.TerrainPaintUtilityEditor.ShowDefaultPreviewBrush(UnityEngine.Terrain,UnityEngine.Texture,System.Single)">
      <summary>
        <para>Helper function to display a default preview brush with no rotation or custom materials.</para>
      </summary>
      <param name="terrain">Terrain object.</param>
      <param name="brushTexture">Brush texture.</param>
      <param name="brushSize">Brush size.</param>
    </member>
    <member name="T:UnityEditor.TerrainTools.TerrainToolShortcutContext">
      <summary>
        <para>The shortcut context that is active while editing Terrain.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TerrainTools.TerrainToolShortcutContext.SelectPaintTool">
      <summary>
        <para>Changes the selected Terrain paint tool.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TextureCompressionQuality">
      <summary>
        <para>Compression Quality.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureCompressionQuality.Best">
      <summary>
        <para>Best compression.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureCompressionQuality.Fast">
      <summary>
        <para>Fast compression.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureCompressionQuality.Normal">
      <summary>
        <para>Normal compression (default).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TextureImporter">
      <summary>
        <para>Texture importer lets you modify Texture2D import settings from editor scripts.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.allowAlphaSplitting">
      <summary>
        <para>Allows alpha splitting on relevant platforms for this texture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.alphaIsTransparency">
      <summary>
        <para>If the provided alpha channel is transparency, enable this to prefilter the color to avoid filtering artifacts.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.alphaSource">
      <summary>
        <para>Select how the alpha of the imported texture is generated.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.alphaTestReferenceValue">
      <summary>
        <para>Returns or assigns the alpha test reference value.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.androidETC2FallbackOverride">
      <summary>
        <para>ETC2 texture decompression fallback override on Android devices that don't support ETC2.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.anisoLevel">
      <summary>
        <para>Anisotropic filtering level of the texture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.borderMipmap">
      <summary>
        <para>Keeps texture borders the same when generating mipmaps.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.compressionQuality">
      <summary>
        <para>Quality of Texture Compression in the range [0..100].</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.convertToNormalmap">
      <summary>
        <para>Convert heightmap to normal map</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.crunchedCompression">
      <summary>
        <para>Use crunched compression when available.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.fadeout">
      <summary>
        <para>Fade out mip levels to gray color.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.filterMode">
      <summary>
        <para>Filtering mode of the texture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.generateCubemap">
      <summary>
        <para>Cubemap generation mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.generateMipsInLinearSpace">
      <summary>
        <para>Generates mipmaps with gamma correction.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.grayscaleToAlpha">
      <summary>
        <para>Generate alpha channel from intensity.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.heightmapScale">
      <summary>
        <para>Amount of bumpyness in the heightmap.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.ignorePngGamma">
      <summary>
        <para>Ignore the Gamma attribute in PNG files. This property does not effect other file formats.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.isReadable">
      <summary>
        <para>Whether Unity stores an additional copy of the imported texture's pixel data in CPU-addressable memory.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.lightmap">
      <summary>
        <para>Determines whether this texture is a lightmap.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.linearTexture">
      <summary>
        <para>Obsolete. Use TextureImporter.sRGBTexture instead.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.maxTextureSize">
      <summary>
        <para>Maximum texture size.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.mipMapBias">
      <summary>
        <para>Mip map bias of the texture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.mipmapEnabled">
      <summary>
        <para>Generate Mip Maps.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.mipmapFadeDistanceEnd">
      <summary>
        <para>Mip level where texture is faded out completely.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.mipmapFadeDistanceStart">
      <summary>
        <para>Mip level where texture begins to fade out.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.mipmapFilter">
      <summary>
        <para>Mipmap filtering mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.mipMapsPreserveCoverage">
      <summary>
        <para>Enables or disables coverage-preserving alpha mipmapping.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.normalmap">
      <summary>
        <para>Determines whether this texture is a normal map.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.normalmapFilter">
      <summary>
        <para>Normal map filtering mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.npotScale">
      <summary>
        <para>Scaling mode for non power of two textures.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.qualifiesForSpritePacking">
      <summary>
        <para>Returns true if this TextureImporter is setup for Sprite packing.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.secondarySpriteTextures">
      <summary>
        <para>Secondary textures for the imported Sprites.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.spriteBorder">
      <summary>
        <para>Border sizes of the generated sprites.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.spriteImportMode">
      <summary>
        <para>Selects Single or Manual import mode for Sprite textures.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.spritePackingTag">
      <summary>
        <para>Selects the Sprite packing tag.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.spritePivot">
      <summary>
        <para>The point in the Sprite object's coordinate space where the graphic is located.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.spritePixelsPerUnit">
      <summary>
        <para>The number of pixels in the sprite that correspond to one unit in world space.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.spritePixelsToUnits">
      <summary>
        <para>Scale factor for mapping pixels in the graphic to units in world space.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.spritesheet">
      <summary>
        <para>Array representing the sections of the atlas corresponding to individual sprite graphics.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.sRGBTexture">
      <summary>
        <para>Whether this texture stores data in sRGB (also called gamma) color space.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.streamingMipmaps">
      <summary>
        <para>Enable mipmap streaming for this texture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.streamingMipmapsPriority">
      <summary>
        <para>Relative priority for this texture when reducing memory size in order to hit the memory budget.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.textureCompression">
      <summary>
        <para>Compression of imported texture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.textureFormat">
      <summary>
        <para>Format of imported texture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.textureShape">
      <summary>
        <para>The shape of the imported texture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.textureType">
      <summary>
        <para>Which type of texture are we dealing with here.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.vtOnly">
      <summary>
        <para>When enabled, this texture can solely be used in combination with a Texture Stack for Virtual Texturing. When enabled the texture is not guaranteed to be available as a Texture2D in the Player (e.g., not accessible from a script). When disabled, the Player includes the texture both as a Texture2D (e.g., accessible from script) and as a streamable texture in a Texture Stack.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.wrapMode">
      <summary>
        <para>Texture coordinate wrapping mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.wrapModeU">
      <summary>
        <para>Texture U coordinate wrapping mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.wrapModeV">
      <summary>
        <para>Texture V coordinate wrapping mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporter.wrapModeW">
      <summary>
        <para>Texture W coordinate wrapping mode for Texture3D.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TextureImporter.ClearPlatformTextureSettings(System.String)">
      <summary>
        <para>Clear specific target platform settings.</para>
      </summary>
      <param name="platform">The platform whose settings are to be cleared (see below).</param>
    </member>
    <member name="M:UnityEditor.TextureImporter.DoesSourceTextureHaveAlpha">
      <summary>
        <para>Allows you to check whether the texture source image has an alpha channel.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TextureImporter.DoesSourceTextureHaveColor">
      <summary>
        <para>Does textures source image have RGB channels.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TextureImporter.GetAllowsAlphaSplitting">
      <summary>
        <para>Getter for the flag that allows Alpha splitting on the imported texture when needed (for example ETC1 compression for textures with transparency).</para>
      </summary>
      <returns>
        <para>True if the importer allows alpha split on the imported texture, False otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TextureImporter.GetAutomaticFormat(System.String)">
      <summary>
        <para>Returns the TextureImporterFormat that would be automatically chosen for this platform.</para>
      </summary>
      <param name="platform">
      </param>
      <returns>
        <para>Format chosen by the system for the provided platform, TextureImporterFormat.Automatic if the platform does not exist.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TextureImporter.GetDefaultPlatformTextureSettings">
      <summary>
        <para>Get the default platform specific texture settings.</para>
      </summary>
      <returns>
        <para>A TextureImporterPlatformSettings structure containing the default platform parameters.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TextureImporter.GetPlatformTextureSettings(System.String,System.Int32&amp;,UnityEditor.TextureImporterFormat&amp;,System.Int32&amp;,System.Boolean&amp;)">
      <summary>
        <para>Get platform specific texture settings.</para>
      </summary>
      <param name="platform">The platform for which settings are required (see options below).</param>
      <param name="maxTextureSize">Maximum texture width/height in pixels.</param>
      <param name="textureFormat">Format of the texture for the given platform.</param>
      <param name="compressionQuality">Value from 0..100, equivalent to the standard JPEG quality setting.</param>
      <param name="etc1AlphaSplitEnabled">Status of the ETC1 and alpha split flag.</param>
      <returns>
        <para>True if the platform override was found, false if no override was found.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TextureImporter.GetPlatformTextureSettings(System.String,System.Int32&amp;,UnityEditor.TextureImporterFormat&amp;,System.Int32&amp;)">
      <summary>
        <para>Get platform specific texture settings.</para>
      </summary>
      <param name="platform">The platform whose settings are required (see below).</param>
      <param name="maxTextureSize">Maximum texture width/height in pixels.</param>
      <param name="textureFormat">Format of the texture.</param>
      <param name="compressionQuality">Value from 0..100, equivalent to the standard JPEG quality setting.</param>
      <returns>
        <para>True if the platform override was found, false if no override was found.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TextureImporter.GetPlatformTextureSettings(System.String,System.Int32&amp;,UnityEditor.TextureImporterFormat&amp;)">
      <summary>
        <para>Get platform specific texture settings.</para>
      </summary>
      <param name="platform">The platform whose settings are required (see below).</param>
      <param name="maxTextureSize">Maximum texture width/height in pixels.</param>
      <param name="textureFormat">Format of the texture.</param>
      <returns>
        <para>True if the platform override was found, false if no override was found.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TextureImporter.GetPlatformTextureSettings(System.String)">
      <summary>
        <para>Get platform specific texture settings.</para>
      </summary>
      <param name="platform">The platform whose settings are required (see below).</param>
      <returns>
        <para>A TextureImporterPlatformSettings structure containing the platform parameters.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TextureImporter.GetSourceTextureWidthAndHeight(System.Int32&amp;,System.Int32&amp;)">
      <summary>
        <para>Gets the source texture's width and height.</para>
      </summary>
      <param name="width">The source texture's width.</param>
      <param name="height">The source texture's height.</param>
    </member>
    <member name="M:UnityEditor.TextureImporter.IsDefaultPlatformTextureFormatValid(UnityEditor.TextureImporterType,UnityEditor.TextureImporterFormat)">
      <summary>
        <para>Validates TextureImporterFormat based on the type of the current format (TextureImporterType) and the default platform.</para>
      </summary>
      <param name="currentFormat">The TextureImporterType that the importer uses.</param>
      <param name="textureType">The TextureImporterFormat to validate.</param>
      <returns>
        <para>Returns true if TextureImporterFormat is valid and can be set. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TextureImporter.IsPlatformTextureFormatValid(UnityEditor.TextureImporterType,UnityEditor.BuildTarget,UnityEditor.TextureImporterFormat)">
      <summary>
        <para>Validates TextureImporterFormat based on a specified import type (TextureImporterType) and a specified build target (BuildTarget.).</para>
      </summary>
      <param name="textureType">The TextureImporterType that the importer uses.</param>
      <param name="target">The platform that the setting targets, referred to as the BuilTarget.</param>
      <param name="currentFormat">The TextureImporterFormat to validate.</param>
      <returns>
        <para>Returns true if TextureImporterFormat is valid and can be set. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TextureImporter.ReadTextureImportInstructions">
      <summary>
        <para>Reads the active texture output instructions of this TextureImporter.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TextureImporter.ReadTextureSettings(UnityEditor.TextureImporterSettings)">
      <summary>
        <para>Read texture settings into TextureImporterSettings class.</para>
      </summary>
      <param name="dest">
      </param>
    </member>
    <member name="M:UnityEditor.TextureImporter.SetAllowsAlphaSplitting(System.Boolean)">
      <summary>
        <para>Setter for the flag that allows Alpha splitting on the imported texture when needed (for example ETC1 compression for textures with transparency).</para>
      </summary>
      <param name="flag">
      </param>
    </member>
    <member name="M:UnityEditor.TextureImporter.SetPlatformTextureSettings(System.String,System.Int32,UnityEditor.TextureImporterFormat,System.Boolean)">
      <summary>
        <para>Set specific target platform settings.</para>
      </summary>
      <param name="platform">The platforms whose settings are to be changed (see below).</param>
      <param name="maxTextureSize">Maximum texture width/height in pixels.</param>
      <param name="textureFormat">Data format for the texture.</param>
      <param name="compressionQuality">Value from 0..100, with 0, 50 and 100 being respectively Fast, Normal, Best quality options in the texture importer UI. For Crunch texture formats, this roughly corresponds to JPEG quality levels.</param>
      <param name="allowsAlphaSplit">Allows splitting of imported texture into RGB+A so that ETC1 compression can be applied (Android only, and works only on textures that are a part of some atlas).</param>
    </member>
    <member name="M:UnityEditor.TextureImporter.SetPlatformTextureSettings(System.String,System.Int32,UnityEditor.TextureImporterFormat,System.Int32,System.Boolean)">
      <summary>
        <para>Set specific target platform settings.</para>
      </summary>
      <param name="platform">The platforms whose settings are to be changed (see below).</param>
      <param name="maxTextureSize">Maximum texture width/height in pixels.</param>
      <param name="textureFormat">Data format for the texture.</param>
      <param name="compressionQuality">Value from 0..100, with 0, 50 and 100 being respectively Fast, Normal, Best quality options in the texture importer UI. For Crunch texture formats, this roughly corresponds to JPEG quality levels.</param>
      <param name="allowsAlphaSplit">Allows splitting of imported texture into RGB+A so that ETC1 compression can be applied (Android only, and works only on textures that are a part of some atlas).</param>
    </member>
    <member name="M:UnityEditor.TextureImporter.SetPlatformTextureSettings(UnityEditor.TextureImporterPlatformSettings)">
      <summary>
        <para>Set specific target platform settings.</para>
      </summary>
      <param name="platformSettings">Structure containing the platform settings.</param>
    </member>
    <member name="M:UnityEditor.TextureImporter.SetTextureSettings(UnityEditor.TextureImporterSettings)">
      <summary>
        <para>Set texture importers settings from TextureImporterSettings class.</para>
      </summary>
      <param name="src">
      </param>
    </member>
    <member name="T:UnityEditor.TextureImporterAlphaSource">
      <summary>
        <para>Select how the alpha of the imported texture is generated.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterAlphaSource.FromGrayScale">
      <summary>
        <para>Generate Alpha from image gray scale.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterAlphaSource.FromInput">
      <summary>
        <para>Use Alpha from the input texture if one is provided.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterAlphaSource.None">
      <summary>
        <para>No Alpha will be used.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TextureImporterCompression">
      <summary>
        <para>Select the kind of compression you want for your texture.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterCompression.Compressed">
      <summary>
        <para>Texture will be compressed using a standard format depending on the platform (DXT, ASTC, ...).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterCompression.CompressedHQ">
      <summary>
        <para>Texture will be compressed using a high quality format depending on the platform and availability (BC7, ASTC4x4, ...).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterCompression.CompressedLQ">
      <summary>
        <para>Texture will be compressed using a low quality but high performance, high compression format depending on the platform and availability (2bpp PVRTC, ASTC8x8, ...).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterCompression.Uncompressed">
      <summary>
        <para>Texture will not be compressed.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TextureImporterCubemapConvolution">
      <summary>
        <para>Defines Cubemap convolution mode.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterCubemapConvolution.Diffuse">
      <summary>
        <para>Diffuse convolution (aka irradiance Cubemap).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterCubemapConvolution.None">
      <summary>
        <para>No convolution needed. This Cubemap texture represents mirror reflection or Skybox.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterCubemapConvolution.Specular">
      <summary>
        <para>Specular convolution (aka Prefiltered Environment Map).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TextureImporterFormat">
      <summary>
        <para>Imported texture format for TextureImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.Alpha8">
      <summary>
        <para>TextureFormat.Alpha8 texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ARGB16">
      <summary>
        <para>TextureFormat.ARGB4444 texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ARGB32">
      <summary>
        <para>TextureFormat.ARGB32 texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_10x10">
      <summary>
        <para>ASTC compressed RGB(A) texture format, 10x10 block size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_12x12">
      <summary>
        <para>ASTC compressed RGB(A) texture format, 12x12 block size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_4x4">
      <summary>
        <para>ASTC compressed RGB(A) texture format, 4x4 block size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_5x5">
      <summary>
        <para>ASTC compressed RGB(A) texture format, 5x5 block size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_6x6">
      <summary>
        <para>ASTC compressed RGB(A) texture format, 6x6 block size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_8x8">
      <summary>
        <para>ASTC compressed RGB(A) texture format, 8x8 block size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_HDR_10x10">
      <summary>
        <para>ASTC compressed RGB(A) HDR texture format, 10x10 block size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_HDR_12x12">
      <summary>
        <para>ASTC compressed RGB(A) HDR texture format, 12x12 block size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_HDR_4x4">
      <summary>
        <para>ASTC compressed RGB(A) HDR texture format, 4x4 block size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_HDR_5x5">
      <summary>
        <para>ASTC compressed RGB(A) HDR texture format, 5x5 block size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_HDR_6x6">
      <summary>
        <para>ASTC compressed RGB(A) HDR texture format, 6x6 block size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_HDR_8x8">
      <summary>
        <para>ASTC compressed RGB(A) HDR texture format, 8x8 block size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_RGB_10x10">
      <summary>
        <para>ASTC compressed RGB texture format, 10x10 block size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_RGB_12x12">
      <summary>
        <para>ASTC compressed RGB texture format, 12x12 block size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_RGB_4x4">
      <summary>
        <para>ASTC compressed RGB texture format, 4x4 block size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_RGB_5x5">
      <summary>
        <para>ASTC compressed RGB texture format, 5x5 block size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_RGB_6x6">
      <summary>
        <para>ASTC compressed RGB texture format, 6x6 block size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_RGB_8x8">
      <summary>
        <para>ASTC compressed RGB texture format, 8x8 block size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_RGBA_10x10">
      <summary>
        <para>ASTC compressed RGBA texture format, 10x10 block size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_RGBA_12x12">
      <summary>
        <para>ASTC compressed RGBA texture format, 12x12 block size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_RGBA_4x4">
      <summary>
        <para>ASTC compressed RGBA texture format, 4x4 block size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_RGBA_5x5">
      <summary>
        <para>ASTC compressed RGBA texture format, 5x5 block size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_RGBA_6x6">
      <summary>
        <para>ASTC compressed RGBA texture format, 6x6 block size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ASTC_RGBA_8x8">
      <summary>
        <para>ASTC compressed RGBA texture format, 8x8 block size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.Automatic">
      <summary>
        <para>Choose texture format automatically based on the texture parameters.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.Automatic16bit">
      <summary>
        <para>Choose a 16 bit format automatically.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.AutomaticCompressed">
      <summary>
        <para>Choose a compressed format automatically.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.AutomaticCompressedHDR">
      <summary>
        <para>Choose a compressed HDR format automatically.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.AutomaticCrunched">
      <summary>
        <para>Choose a crunched format automatically.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.AutomaticHDR">
      <summary>
        <para>Choose an HDR format automatically.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.AutomaticTruecolor">
      <summary>
        <para>Choose a Truecolor format automatically.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.BC4">
      <summary>
        <para>TextureFormat.BC4 compressed texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.BC5">
      <summary>
        <para>TextureFormat.BC5 compressed texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.BC6H">
      <summary>
        <para>TextureFormat.BC6H compressed HDR texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.BC7">
      <summary>
        <para>TextureFormat.BC7 compressed texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.DXT1">
      <summary>
        <para>TextureFormat.DXT1 (BC1) compressed texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.DXT1Crunched">
      <summary>
        <para>DXT1 (BC1) compressed texture format using Crunch compression for smaller storage sizes.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.DXT5">
      <summary>
        <para>TextureFormat.DXT5 (BC3) compressed texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.DXT5Crunched">
      <summary>
        <para>DXT5 (BC3) compressed texture format using Crunch compression for smaller storage sizes.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.EAC_R">
      <summary>
        <para>ETC2EAC compressed 4 bits  pixel unsigned R texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.EAC_R_SIGNED">
      <summary>
        <para>ETC2EAC compressed 4 bits  pixel signed R texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.EAC_RG">
      <summary>
        <para>ETC2EAC compressed 8 bits  pixel unsigned RG texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.EAC_RG_SIGNED">
      <summary>
        <para>ETC2EAC compressed 4 bits  pixel signed RG texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ETC_RGB4">
      <summary>
        <para>ETC (GLES2.0) 4 bits/pixel compressed RGB texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ETC_RGB4_3DS">
      <summary>
        <para>ETC (Nintendo 3DS) 4 bits/pixel compressed RGB texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ETC_RGB4Crunched">
      <summary>
        <para>ETC_RGB4 compressed texture format using Crunch compression for smaller storage sizes.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ETC_RGBA8_3DS">
      <summary>
        <para>ETC (Nintendo 3DS) 8 bits/pixel compressed RGBA texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ETC2_RGB4">
      <summary>
        <para>ETC2 compressed 4 bits / pixel RGB texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ETC2_RGB4_PUNCHTHROUGH_ALPHA">
      <summary>
        <para>ETC2 compressed 4 bits / pixel RGB + 1-bit alpha texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ETC2_RGBA8">
      <summary>
        <para>ETC2 compressed 8 bits / pixel RGBA texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.ETC2_RGBA8Crunched">
      <summary>
        <para>ETC2_RGBA8 compressed color with alpha channel texture format using Crunch compression for smaller storage sizes.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.PVRTC_RGB2">
      <summary>
        <para>PowerVR/iOS TextureFormat.PVRTC_RGB2 compressed texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.PVRTC_RGB4">
      <summary>
        <para>PowerVR/iOS TextureFormat.PVRTC_RGB4 compressed texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.PVRTC_RGBA2">
      <summary>
        <para>PowerVR/iOS TextureFormat.PVRTC_RGBA2 compressed texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.PVRTC_RGBA4">
      <summary>
        <para>PowerVR/iOS TextureFormat.PVRTC_RGBA4 compressed texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.R16">
      <summary>
        <para>TextureFormat.R16 texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.R8">
      <summary>
        <para>TextureFormat.R8 texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.RFloat">
      <summary>
        <para>TextureFormat.RFloat floating point texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.RG16">
      <summary>
        <para>TextureFormat.RG16 texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.RG32">
      <summary>
        <para>TextureFormat.RG32 texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.RGB16">
      <summary>
        <para>TextureFormat.RGB565 texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.RGB24">
      <summary>
        <para>TextureFormat.RGB24 texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.RGB48">
      <summary>
        <para>TextureFormat.RGB48 texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.RGB9E5">
      <summary>
        <para>TextureFormat.RGB9e5Float packed unsigned floating point texture format with shared exponent.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.RGBA16">
      <summary>
        <para>TextureFormat.RGBA4444 texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.RGBA32">
      <summary>
        <para>TextureFormat.RGBA32 texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.RGBA64">
      <summary>
        <para>TextureFormat.RGBA64 texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.RGBAFloat">
      <summary>
        <para>TextureFormat.RGBAFloat floating point RGBA texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.RGBAHalf">
      <summary>
        <para>TextureFormat.RGBAHalf half-precision floating point texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.RGFloat">
      <summary>
        <para>TextureFormat.RGFloat floating point texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.RGHalf">
      <summary>
        <para>TextureFormat.RGHalf half-precision floating point texture format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterFormat.RHalf">
      <summary>
        <para>TextureFormat.RHalf half-precision floating point texture format.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TextureImporterGenerateCubemap">
      <summary>
        <para>Cubemap generation mode for TextureImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterGenerateCubemap.AutoCubemap">
      <summary>
        <para>Automatically determine type of cubemap generation from the source image.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterGenerateCubemap.Cylindrical">
      <summary>
        <para>Generate cubemap from cylindrical texture.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterGenerateCubemap.FullCubemap">
      <summary>
        <para>Generate cubemap from vertical or horizontal cross texture.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterGenerateCubemap.None">
      <summary>
        <para>Do not generate cubemap (default).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterGenerateCubemap.Spheremap">
      <summary>
        <para>Generate cubemap from spheremap texture.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TextureImporterMipFilter">
      <summary>
        <para>Mip map filter for TextureImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterMipFilter.BoxFilter">
      <summary>
        <para>Box mipmap filter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterMipFilter.KaiserFilter">
      <summary>
        <para>Kaiser mipmap filter.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TextureImporterNormalFilter">
      <summary>
        <para>Normal map filtering mode for TextureImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterNormalFilter.Sobel">
      <summary>
        <para>Sobel normal map filter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterNormalFilter.Standard">
      <summary>
        <para>Standard normal map filter.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TextureImporterNPOTScale">
      <summary>
        <para>Scaling mode for non power of two textures in TextureImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterNPOTScale.None">
      <summary>
        <para>Keep non power of two textures as is.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterNPOTScale.ToLarger">
      <summary>
        <para>Scale to larger power of two.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterNPOTScale.ToNearest">
      <summary>
        <para>Scale to nearest power of two.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterNPOTScale.ToSmaller">
      <summary>
        <para>Scale to smaller power of two.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TextureImporterPlatformSettings">
      <summary>
        <para>Stores platform specifics settings of a TextureImporter.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterPlatformSettings.allowsAlphaSplitting">
      <summary>
        <para>Allows Alpha splitting on the imported texture when needed (for example ETC1 compression for textures with transparency).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterPlatformSettings.androidETC2FallbackOverride">
      <summary>
        <para>Override for ETC2 decompression fallback on Android devices that don't support ETC2.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterPlatformSettings.compressionQuality">
      <summary>
        <para>Quality of texture compression in the range [0..100].</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterPlatformSettings.crunchedCompression">
      <summary>
        <para>Use crunch compression when available.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterPlatformSettings.format">
      <summary>
        <para>Format of imported texture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterPlatformSettings.maxTextureSize">
      <summary>
        <para>Maximum texture size.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterPlatformSettings.name">
      <summary>
        <para>Name of the build target.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterPlatformSettings.overridden">
      <summary>
        <para>Set to true in order to override the Default platform parameters by those provided in the TextureImporterPlatformSettings structure.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterPlatformSettings.resizeAlgorithm">
      <summary>
        <para>For Texture to be scaled down choose resize algorithm. ( Applyed only when Texture dimension is bigger than Max Size ).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterPlatformSettings.textureCompression">
      <summary>
        <para>Compression of imported texture.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TextureImporterPlatformSettings.CopyTo(UnityEditor.TextureImporterPlatformSettings)">
      <summary>
        <para>Copy parameters into another TextureImporterPlatformSettings object.</para>
      </summary>
      <param name="target">TextureImporterPlatformSettings object to copy settings to.</param>
    </member>
    <member name="T:UnityEditor.TextureImporterRGBMMode">
      <summary>
        <para>RGBM encoding mode for HDR textures in TextureImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterRGBMMode.Auto">
      <summary>
        <para>Do RGBM encoding when source data is HDR in TextureImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterRGBMMode.Encoded">
      <summary>
        <para>Source texture is already RGBM encoded in TextureImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterRGBMMode.Off">
      <summary>
        <para>Do not perform RGBM encoding in TextureImporter.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterRGBMMode.On">
      <summary>
        <para>Do RGBM encoding in TextureImporter.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TextureImporterSettings">
      <summary>
        <para>Stores settings of a TextureImporter.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.alphaIsTransparency">
      <summary>
        <para>If the provided alpha channel is transparency, enable this to dilate the color to avoid filtering artifacts on the edges.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.alphaSource">
      <summary>
        <para>Select how the alpha of the imported texture is generated.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.alphaTestReferenceValue">
      <summary>
        <para>Returns or assigns the alpha test reference value.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.aniso">
      <summary>
        <para>Anisotropic filtering level of the texture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.borderMipmap">
      <summary>
        <para>Enable this to avoid colors seeping out to the edge of the lower Mip levels. Used for light cookies.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.convertToNormalMap">
      <summary>
        <para>Convert heightmap to normal map?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.cubemapConvolution">
      <summary>
        <para>Convolution mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.cubemapConvolutionExponent">
      <summary>
        <para>Defines how fast Phong exponent wears off in mipmaps. Higher value will apply less blur to high resolution mipmaps.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.cubemapConvolutionSteps">
      <summary>
        <para>Defines how many different Phong exponents to store in mipmaps. Higher value will give better transition between glossy and rough reflections, but will need higher texture resolution.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.fadeOut">
      <summary>
        <para>Fade out mip levels to gray color?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.filterMode">
      <summary>
        <para>Filtering mode of the texture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.flipbookColumns">
      <summary>
        <para>The number of columns in the source image for a Texture2DArray or Texture3D.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.flipbookRows">
      <summary>
        <para>The number of rows in the source image for a Texture2DArray or Texture3D.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.generateCubemap">
      <summary>
        <para>Cubemap generation mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.grayscaleToAlpha">
      <summary>
        <para>Generate alpha channel from intensity?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.heightmapScale">
      <summary>
        <para>Amount of bumpyness in the heightmap.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.ignorePngGamma">
      <summary>
        <para>Ignore the Gamma attribute in PNG files. This property does not effect other file formats.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.mipmapBias">
      <summary>
        <para>Mipmap bias of the texture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.mipmapEnabled">
      <summary>
        <para>Generate mipmaps for the texture?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.mipmapFadeDistanceEnd">
      <summary>
        <para>Mip level where texture is faded out to gray completely.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.mipmapFadeDistanceStart">
      <summary>
        <para>Mip level where texture begins to fade out to gray.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.mipmapFilter">
      <summary>
        <para>Mipmap filtering mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.mipMapsPreserveCoverage">
      <summary>
        <para>Enables or disables coverage-preserving alpha mipmapping.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.normalMapFilter">
      <summary>
        <para>Normal map filtering mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.npotScale">
      <summary>
        <para>Scaling mode for non power of two textures.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.readable">
      <summary>
        <para>Is texture data readable from scripts.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.rgbm">
      <summary>
        <para>RGBM encoding mode for HDR textures in TextureImporter.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.singleChannelComponent">
      <summary>
        <para>Color or Alpha component TextureImporterType|Single Channel Textures uses.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.spriteAlignment">
      <summary>
        <para>Edge-relative alignment of the sprite graphic.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.spriteBorder">
      <summary>
        <para>Border sizes of the generated sprites.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.spriteExtrude">
      <summary>
        <para>The number of blank pixels to leave between the edge of the graphic and the mesh.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.spriteGenerateFallbackPhysicsShape">
      <summary>
        <para>Generates a default physics shape for a Sprite if a physics shape has not been set by the user.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.spriteMeshType">
      <summary>
        <para>SpriteMeshType defines the type of Mesh that TextureImporter generates for a Sprite.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.spriteMode">
      <summary>
        <para>Sprite texture import mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.spritePivot">
      <summary>
        <para>Pivot point of the Sprite relative to its graphic's rectangle.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.spritePixelsPerUnit">
      <summary>
        <para>The number of pixels in the sprite that correspond to one unit in world space.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.spritePixelsToUnits">
      <summary>
        <para>Scale factor between pixels in the sprite graphic and world space units.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.spriteTessellationDetail">
      <summary>
        <para>The tessellation detail to be used for generating the mesh for the associated sprite if the SpriteMode is set to Single. For Multiple sprites, use the SpriteEditor to specify the value per sprite.
Valid values are in the range [0-1], with higher values generating a tighter mesh. A default of -1 will allow Unity to determine the value automatically.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.sRGBTexture">
      <summary>
        <para>Whether this texture stores data in sRGB (also called gamma) color space.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.streamingMipmaps">
      <summary>
        <para>Enable mipmap streaming for this texture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.streamingMipmapsPriority">
      <summary>
        <para>Relative priority for this texture when reducing memory size in order to hit the memory budget.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.textureShape">
      <summary>
        <para>The shape of the imported texture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.textureType">
      <summary>
        <para>Which type of texture are we dealing with here.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.vtOnly">
      <summary>
        <para>Enable if the texture is purposed solely for use with a Texture Stack for Virtual Texturing.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.wrapMode">
      <summary>
        <para>Texture coordinate wrapping mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.wrapModeU">
      <summary>
        <para>Texture U coordinate wrapping mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.wrapModeV">
      <summary>
        <para>Texture V coordinate wrapping mode.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TextureImporterSettings.wrapModeW">
      <summary>
        <para>Texture W coordinate wrapping mode for Texture3D.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TextureImporterSettings.ApplyTextureType(UnityEditor.TextureImporterType,System.Boolean)">
      <summary>
        <para>Configure parameters to import a texture for a purpose of type, as described TextureImporterType|here.</para>
      </summary>
      <param name="type">Texture type. See TextureImporterType.</param>
      <param name="applyAll">If false, change only specific properties. Exactly which, depends on type.</param>
    </member>
    <member name="M:UnityEditor.TextureImporterSettings.CopyTo(UnityEditor.TextureImporterSettings)">
      <summary>
        <para>Copy parameters into another TextureImporterSettings object.</para>
      </summary>
      <param name="target">TextureImporterSettings object to copy settings to.</param>
    </member>
    <member name="M:UnityEditor.TextureImporterSettings.Equal(UnityEditor.TextureImporterSettings,UnityEditor.TextureImporterSettings)">
      <summary>
        <para>Test texture importer settings for equality.</para>
      </summary>
      <param name="a">
      </param>
      <param name="b">
      </param>
    </member>
    <member name="T:UnityEditor.TextureImporterShape">
      <summary>
        <para>The shape of the imported texture.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterShape.Texture2D">
      <summary>
        <para>Import the texture as a 2D texture (default).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterShape.Texture2DArray">
      <summary>
        <para>Import the texture as a 2D Array texture.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterShape.Texture3D">
      <summary>
        <para>Import the texture as a 3D texture.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterShape.TextureCube">
      <summary>
        <para>Import the texture as a Cubemap.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TextureImporterSingleChannelComponent">
      <summary>
        <para>Selects which Color/Alpha channel TextureImporterType|Single Channel Textures uses.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterSingleChannelComponent.Alpha">
      <summary>
        <para>Use the Alpha channel.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterSingleChannelComponent.Red">
      <summary>
        <para>Use the red Color channel.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TextureImporterType">
      <summary>
        <para>Select this to set basic parameters depending on the purpose of your texture.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterType.Cookie">
      <summary>
        <para>This sets up your texture with the basic parameters used for the Cookies of your lights.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterType.Cursor">
      <summary>
        <para>Use this if your texture is going to be used as a cursor.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterType.Default">
      <summary>
        <para>This is the most common setting used for all the textures in general.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterType.DirectionalLightmap">
      <summary>
        <para>Use this for textures that contain directional lightmap data.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterType.GUI">
      <summary>
        <para>Use this if your texture is going to be used on any HUD/GUI Controls.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterType.Image">
      <summary>
        <para>This is the most common setting used for all the textures in general.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterType.Lightmap">
      <summary>
        <para>This sets up your texture with the parameters used by the lightmap.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterType.NormalMap">
      <summary>
        <para>Select this to turn the color channels into a format suitable for real-time normal mapping.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterType.Shadowmask">
      <summary>
        <para>Use this for textures that contain shadowmask data.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterType.SingleChannel">
      <summary>
        <para>Use this for texture containing a single channel.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureImporterType.Sprite">
      <summary>
        <para>Select this if you will be using your texture for Sprite graphics.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TextureResizeAlgorithm">
      <summary>
        <para>For Texture to be scaled down choose resize algorithm. ( Applyed only when Texture dimension is bigger than Max Size ).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureResizeAlgorithm.Bilinear">
      <summary>
        <para>Might provide better result than Mitchell for some noise textures preserving more sharp details.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.TextureResizeAlgorithm.Mitchell">
      <summary>
        <para>Default high quality resize algorithm.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Tool">
      <summary>
        <para>Which tool is active in the editor.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Tool.Custom">
      <summary>
        <para>Any tool that is not one of the built-in tools.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Tool.Move">
      <summary>
        <para>The move tool is active.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Tool.None">
      <summary>
        <para>No tool is active. Set this to implement your own in-inspector toolbar (like the terrain editor does).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Tool.Rect">
      <summary>
        <para>The rect tool is active.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Tool.Rotate">
      <summary>
        <para>The rotate tool is active.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Tool.Scale">
      <summary>
        <para>The scale tool is active.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Tool.Transform">
      <summary>
        <para>The transform tool is active.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Tool.View">
      <summary>
        <para>The view tool is active - Use Tools.viewTool to find out which view tool we're talking about.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Toolbars.EditorToolbarElementAttribute">
      <summary>
        <para>The EditorToolbarElement attribute allows you to make available a specific VisualElement for use in an Editor Toolbar.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Toolbars.EditorToolbarElementAttribute.id">
      <summary>
        <para>Element's ID.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Toolbars.EditorToolbarElementAttribute.targetWindows">
      <summary>
        <para>Targeted contexts.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Toolbars.EditorToolbarElementAttribute.#ctor(System.String,System.Type[])">
      <summary>
        <para>The EditorToolbarElement attribute allows you to make available a specific VisualElement for use in an Editor Toolbar.</para>
      </summary>
      <param name="id">Element's ID.</param>
      <param name="targetWindows">Targeted contexts.</param>
    </member>
    <member name="T:UnityEditor.Toolbars.EditorToolbarUtility">
      <summary>
        <para>Editor utility functions when working with EditorToolbar.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Toolbars.EditorToolbarUtility.SetupChildrenAsButtonStrip(UnityEngine.UIElements.VisualElement)">
      <summary>
        <para>Assigns the required USS classes to child elements so that they appear as a single button strip.</para>
      </summary>
      <param name="root">Root VisualElement of the button strip.</param>
    </member>
    <member name="?:UnityEditor.Toolbars.IAccessContainerWindow">
      <summary>
        <para>Implement this interface to gain access to toolbar's container EditorWindow.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Toolbars.IAccessContainerWindow.containerWindow">
      <summary>
        <para>EditorToolbar's container EditorWindow.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Tools">
      <summary>
        <para>Class used to manipulate the tools used in Unity's Scene View.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Tools.current">
      <summary>
        <para>The tool that is currently selected for the Scene View.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Tools.handlePosition">
      <summary>
        <para>The position of the tool handle in world space.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Tools.handleRect">
      <summary>
        <para>The rectangle used for the rect tool.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Tools.handleRectRotation">
      <summary>
        <para>The rotation of the rect tool handle in world space.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Tools.handleRotation">
      <summary>
        <para>The rotation of the tool handle in world space.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Tools.hidden">
      <summary>
        <para>Hides the Tools(Move, Rotate, Resize) on the Scene view.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Tools.pivotMode">
      <summary>
        <para>Are we in Center or Pivot mode.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Tools.pivotModeChanged(System.Action)">
      <summary>
        <para>Callback triggered when the pivot mode changes.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="P:UnityEditor.Tools.pivotRotation">
      <summary>
        <para>What's the rotation of the tool handle.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Tools.pivotRotationChanged(System.Action)">
      <summary>
        <para>Callback triggered when the pivot rotation changes.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="P:UnityEditor.Tools.rectBlueprintMode">
      <summary>
        <para>Is the rect handle in blueprint mode?</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Tools.viewTool">
      <summary>
        <para>The option that is currently active for the View tool in the Scene view.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.Tools.viewToolActive">
      <summary>
        <para>Returns true if the active tool is a view or navigation tool.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.Tools.viewToolChanged(System.Action)">
      <summary>
        <para>Callback triggered when the view tool changes.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="P:UnityEditor.Tools.visibleLayers">
      <summary>
        <para>Which layers are visible in the Scene view.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TransformUtils">
      <summary>
        <para>Editor Transform Utility Class.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TransformUtils.GetInspectorRotation(UnityEngine.Transform)">
      <summary>
        <para>Returns the rotation of a transform as it is shown in the Transform Inspector window.</para>
      </summary>
      <param name="t">Transform to get the rotation from.</param>
      <returns>
        <para>Rotation as it is shown in the Transform Inspector window.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TransformUtils.SetInspectorRotation(UnityEngine.Transform,UnityEngine.Vector3)">
      <summary>
        <para>Sets the rotation of a transform as it would be set by the Transform Inspector window.</para>
      </summary>
      <param name="t">Transform to set the rotation on.</param>
      <param name="r">Rotation as it would be set by the Transform Inspector window.</param>
    </member>
    <member name="T:UnityEditor.TrueTypeFontImporter">
      <summary>
        <para>AssetImporter for importing Fonts.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TrueTypeFontImporter.ascentCalculationMode">
      <summary>
        <para>Calculation mode for determining font's ascent.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TrueTypeFontImporter.characterPadding">
      <summary>
        <para>Border pixels added to character images for padding. This is useful if you want to render text using a shader which needs to render outside of the character area (like an outline shader).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TrueTypeFontImporter.characterSpacing">
      <summary>
        <para>Spacing between character images in the generated texture in pixels. This is useful if you want to render text using a shader which samples pixels outside of the character area (like an outline shader).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TrueTypeFontImporter.customCharacters">
      <summary>
        <para>A custom set of characters to be included in the Font Texture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TrueTypeFontImporter.fontNames">
      <summary>
        <para>An array of font names, to be used when includeFontData is set to false.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TrueTypeFontImporter.fontReferences">
      <summary>
        <para>References to other fonts to be used looking for fallbacks.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TrueTypeFontImporter.fontRenderingMode">
      <summary>
        <para>Font rendering mode to use for this font.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TrueTypeFontImporter.fontSize">
      <summary>
        <para>Font size to use for importing the characters.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TrueTypeFontImporter.fontTextureCase">
      <summary>
        <para>Use this to adjust which characters should be imported.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TrueTypeFontImporter.fontTTFName">
      <summary>
        <para>The internal font name of the TTF file.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TrueTypeFontImporter.includeFontData">
      <summary>
        <para>If this is enabled, the actual font will be embedded into the asset for Dynamic fonts.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TrueTypeFontImporter.shouldRoundAdvanceValue">
      <summary>
        <para>Set this property to true if you want to round the internal advance width of the font to the nearest integer.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TrueTypeFontImporter.GenerateEditableFont(System.String)">
      <summary>
        <para>Create an editable copy of the font asset at path.</para>
      </summary>
      <param name="path">
      </param>
    </member>
    <member name="T:UnityEditor.tvOSSdkVersion">
      <summary>
        <para>Supported tvOS SDK versions.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.tvOSSdkVersion.Device">
      <summary>
        <para>Device SDK.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.tvOSSdkVersion.Simulator">
      <summary>
        <para>Simulator SDK.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.tvOSTargetOSVersion">
      <summary>
        <para>Supported tvOS deployment versions.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.tvOSTargetOSVersion.tvOS_9_0">
      <summary>
        <para>Target tvOS 9.0.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.tvOSTargetOSVersion.tvOS_9_1">
      <summary>
        <para>Target tvOS 9.1.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.tvOSTargetOSVersion.Unknown">
      <summary>
        <para>Unknown tvOS version, managed by user.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TypeCache">
      <summary>
        <para>Provides methods for fast type extraction from assemblies loaded into the Unity Domain.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TypeCache.FieldInfoCollection">
      <summary>
        <para>Represents a read-only collection of FieldInfo and implements an IList interface.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TypeCache.FieldInfoCollection.Contains(System.Reflection.FieldInfo)">
      <summary>
        <para>Determines whether an element is in the FieldInfoCollection.</para>
      </summary>
      <param name="item">The object to locate in the collection.</param>
      <returns>
        <para>Returns true if the item is found in the collection. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.FieldInfoCollection.Contains(System.Object)">
      <summary>
        <para>Determines whether an element is in the FieldInfoCollection.</para>
      </summary>
      <param name="item">The object to locate in the collection.</param>
      <returns>
        <para>Returns true if the item is found in the collection. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.FieldInfoCollection.CopyTo(System.Reflection.FieldInfo[],System.Int32)">
      <summary>
        <para>Copies the collection to an array.</para>
      </summary>
      <param name="array">The one-dimensional destination array that the elements from FieldInfoCollection are copied to.</param>
      <param name="arrayIndex">The zero-based index where elements are copied to in the destination array.</param>
    </member>
    <member name="M:UnityEditor.TypeCache.FieldInfoCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <para>Copies the collection to an array.</para>
      </summary>
      <param name="array">The one-dimensional destination array that the elements from FieldInfoCollection are copied to.</param>
      <param name="arrayIndex">The zero-based index where elements are copied to in the destination array.</param>
    </member>
    <member name="P:UnityEditor.TypeCache.FieldInfoCollection.Count">
      <summary>
        <para>The number of elements in FieldInfoCollection.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TypeCache.FieldInfoCollection.Enumerator">
      <summary>
        <para>Enumerates the elements of a FieldInfoCollection.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TypeCache.FieldInfoCollection.Enumerator.Current">
      <summary>
        <para>Gets the element at the current position of the enumerator.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TypeCache.FieldInfoCollection.Enumerator.Dispose">
      <summary>
        <para>Releases all resources used by the Enumerator.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TypeCache.FieldInfoCollection.Enumerator.MoveNext">
      <summary>
        <para>Advances the enumerator to the next element of the collection.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TypeCache.FieldInfoCollection.GetEnumerator">
      <summary>
        <para>Gets an enumerator that iterates through a FieldInfoCollection.</para>
      </summary>
      <returns>
        <para>Returns a FieldInfoCollection.Enumerator.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.FieldInfoCollection.IndexOf(System.Reflection.FieldInfo)">
      <summary>
        <para>Gets the first occurrence of an item in the FieldInfoCollection.</para>
      </summary>
      <param name="item">The object to locate in the collection.</param>
      <returns>
        <para>Returns the zero-based index of the first occurrence of the item. Returns -1 if the item is not found.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.FieldInfoCollection.IndexOf(System.Object)">
      <summary>
        <para>Gets the first occurrence of an item in the FieldInfoCollection.</para>
      </summary>
      <param name="item">The object to locate in the collection.</param>
      <returns>
        <para>Returns the zero-based index of the first occurrence of the item. Returns -1 if the item is not found.</para>
      </returns>
    </member>
    <member name="P:UnityEditor.TypeCache.FieldInfoCollection.IsFixedSize">
      <summary>
        <para>Whether the FieldInfoCollection is of a fixed size. This property is always set to true.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TypeCache.FieldInfoCollection.IsReadOnly">
      <summary>
        <para>Whether the FieldInfoCollection is read-only. This property is always set to true.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TypeCache.FieldInfoCollection.IsSynchronized">
      <summary>
        <para>Whether the FieldInfoCollection is synchronized. This property is always set to true.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TypeCache.FieldInfoCollection.this">
      <summary>
        <para>Gets the element at the specified index.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TypeCache.GetFieldsWithAttribute(System.Type)">
      <summary>
        <para>Retrieves a collection of fields marked with the T attribute.</para>
      </summary>
      <param name="attrType">Attribute type.</param>
      <returns>
        <para>Returns a FieldInfo collection of fields marked with the T attribute.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.GetFieldsWithAttribute">
      <summary>
        <para>Retrieves a collection of fields marked with the T attribute.</para>
      </summary>
      <param name="attrType">Attribute type.</param>
      <returns>
        <para>Returns a FieldInfo collection of fields marked with the T attribute.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.GetMethodsWithAttribute">
      <summary>
        <para>Retrieves a collection of methods marked with the T attribute.</para>
      </summary>
      <param name="attrType">Attribute type.</param>
      <returns>
        <para>Returns a MethodInfo collection of methods marked with the T attribute.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.GetMethodsWithAttribute(System.Type)">
      <summary>
        <para>Retrieves a collection of methods marked with the T attribute.</para>
      </summary>
      <param name="attrType">Attribute type.</param>
      <returns>
        <para>Returns a MethodInfo collection of methods marked with the T attribute.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.GetTypesDerivedFrom">
      <summary>
        <para>Retrieves a collection of types derived from the T type.</para>
      </summary>
      <param name="parentType">Type of a class or interface.</param>
      <returns>
        <para>Returns a collection of derived types.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.GetTypesDerivedFrom(System.Type)">
      <summary>
        <para>Retrieves a collection of types derived from the T type.</para>
      </summary>
      <param name="parentType">Type of a class or interface.</param>
      <returns>
        <para>Returns a collection of derived types.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.GetTypesWithAttribute">
      <summary>
        <para>Retrieves a collection of types marked with the T attribute.</para>
      </summary>
      <param name="attrType">Attribute type.</param>
      <returns>
        <para>Returns a collection of types.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.GetTypesWithAttribute(System.Type)">
      <summary>
        <para>Retrieves a collection of types marked with the T attribute.</para>
      </summary>
      <param name="attrType">Attribute type.</param>
      <returns>
        <para>Returns a collection of types.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.TypeCache.MethodCollection">
      <summary>
        <para>Represents a read-only collection of MethodInfo and implements an IList interface.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TypeCache.MethodCollection.Contains(System.Reflection.MethodInfo)">
      <summary>
        <para>Determines whether an element is in the MethodCollection.</para>
      </summary>
      <param name="item">The object to locate in the collection.</param>
      <returns>
        <para>Returns true if the item is found in the collection. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.MethodCollection.Contains(System.Object)">
      <summary>
        <para>Determines whether an element is in the MethodCollection.</para>
      </summary>
      <param name="item">The object to locate in the collection.</param>
      <returns>
        <para>Returns true if the item is found in the collection. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.MethodCollection.CopyTo(System.Reflection.MethodInfo[],System.Int32)">
      <summary>
        <para>Copies the collection to an array.</para>
      </summary>
      <param name="array">The one-dimensional destination Array to which elements are copied from MethodCollection.</param>
      <param name="arrayIndex">The zero-based index where elements are copied to in the destination Array.</param>
    </member>
    <member name="M:UnityEditor.TypeCache.MethodCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <para>Copies the collection to an array.</para>
      </summary>
      <param name="array">The one-dimensional destination Array to which elements are copied from MethodCollection.</param>
      <param name="arrayIndex">The zero-based index where elements are copied to in the destination Array.</param>
    </member>
    <member name="P:UnityEditor.TypeCache.MethodCollection.Count">
      <summary>
        <para>The number of elements in MethodCollection.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TypeCache.MethodCollection.Enumerator">
      <summary>
        <para>Enumerates the elements of a MethodCollection.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TypeCache.MethodCollection.Enumerator.Current">
      <summary>
        <para>Gets the element at the current position of the enumerator.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TypeCache.MethodCollection.Enumerator.Dispose">
      <summary>
        <para>Releases all resources used by the Enumerator.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TypeCache.MethodCollection.Enumerator.MoveNext">
      <summary>
        <para>Advances the enumerator to the next element of the collection.</para>
      </summary>
      <returns>
        <para>Returns true if the enumerator is successfully advanced to the next element. Returns false if the enumerator reaches the end of the collection.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.MethodCollection.GetEnumerator">
      <summary>
        <para>Gets an enumerator that iterates through a MethodCollection.</para>
      </summary>
      <returns>
        <para>Returns a MethodCollection.Enumerator.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.MethodCollection.IndexOf(System.Reflection.MethodInfo)">
      <summary>
        <para>Gets the first occurrence of an item in the MethodCollection.</para>
      </summary>
      <param name="item">The object to locate in the collection.</param>
      <returns>
        <para>Returns the zero-based index of the first occurrence of the item. Returns -1 if the item is not found.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.MethodCollection.IndexOf(System.Object)">
      <summary>
        <para>Gets the first occurrence of an item in the MethodCollection.</para>
      </summary>
      <param name="item">The object to locate in the collection.</param>
      <returns>
        <para>Returns the zero-based index of the first occurrence of the item. Returns -1 if the item is not found.</para>
      </returns>
    </member>
    <member name="P:UnityEditor.TypeCache.MethodCollection.IsFixedSize">
      <summary>
        <para>Whether the MethodCollection is of a fixed size. This property is always set to true.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TypeCache.MethodCollection.IsReadOnly">
      <summary>
        <para>Whether the MethodCollection is read-only. This property is always set to true.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TypeCache.MethodCollection.IsSynchronized">
      <summary>
        <para>Whether the MethodCollection is synchronized. This property is always set to true.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TypeCache.MethodCollection.this">
      <summary>
        <para>Gets the element at the specified index.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TypeCache.TypeCollection">
      <summary>
        <para>Represents a read-only collection of Type and implements an IList interface.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TypeCache.TypeCollection.Contains(System.Type)">
      <summary>
        <para>Determines whether an element is in the TypeCollection.</para>
      </summary>
      <param name="item">The object to locate in the collection.</param>
      <returns>
        <para>Returns true if the item is found in the TypeCollection. Returnsfalse otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.TypeCollection.Contains(System.Object)">
      <summary>
        <para>Determines whether an element is in the TypeCollection.</para>
      </summary>
      <param name="item">The object to locate in the collection.</param>
      <returns>
        <para>Returns true if the item is found in the TypeCollection. Returnsfalse otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.TypeCollection.CopyTo(System.Type[],System.Int32)">
      <summary>
        <para>Copies the collection to an array.</para>
      </summary>
      <param name="array">The one-dimensional destination Array to which elements are copied from TypeCollection.</param>
      <param name="arrayIndex">The zero-based index where elements are copied to in the destination Array.</param>
    </member>
    <member name="M:UnityEditor.TypeCache.TypeCollection.CopyTo(System.Array,System.Int32)">
      <summary>
        <para>Copies the collection to an array.</para>
      </summary>
      <param name="array">The one-dimensional destination Array to which elements are copied from TypeCollection.</param>
      <param name="arrayIndex">The zero-based index where elements are copied to in the destination Array.</param>
    </member>
    <member name="P:UnityEditor.TypeCache.TypeCollection.Count">
      <summary>
        <para>The number of elements in TypeCollection.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.TypeCache.TypeCollection.Enumerator">
      <summary>
        <para>Enumerates the elements of a TypeCollection.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TypeCache.TypeCollection.Enumerator.Current">
      <summary>
        <para>Gets the element at the current position of the enumerator.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TypeCache.TypeCollection.Enumerator.Dispose">
      <summary>
        <para>Releases all resources used by the Enumerator.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.TypeCache.TypeCollection.Enumerator.MoveNext">
      <summary>
        <para>Advances the enumerator to the next element of the collection.</para>
      </summary>
      <returns>
        <para>Returns true if the enumerator is successfully advanced to the next element. Returns false if the enumerator reaches the end of the collection.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.TypeCollection.GetEnumerator">
      <summary>
        <para>Gets an enumerator that iterates through the TypeCollection.</para>
      </summary>
      <returns>
        <para>Returns a TypeCollection.Enumerator for the collection.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.TypeCollection.IndexOf(System.Type)">
      <summary>
        <para>Gets the first occurrence of an item in the TypeCollection.</para>
      </summary>
      <param name="item">The object to locate in the TypeCollection.</param>
      <returns>
        <para>Returns the zero-based index of the first occurrence of the item. Returns -1 if the item is not found.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.TypeCache.TypeCollection.IndexOf(System.Object)">
      <summary>
        <para>Gets the first occurrence of an item in the TypeCollection.</para>
      </summary>
      <param name="item">The object to locate in the TypeCollection.</param>
      <returns>
        <para>Returns the zero-based index of the first occurrence of the item. Returns -1 if the item is not found.</para>
      </returns>
    </member>
    <member name="P:UnityEditor.TypeCache.TypeCollection.IsFixedSize">
      <summary>
        <para>Whether the TypeCollection is of a fixed size. This property is always set to true.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TypeCache.TypeCollection.IsReadOnly">
      <summary>
        <para>Whether the TypeCollection is read-only. This property is always set to true.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TypeCache.TypeCollection.IsSynchronized">
      <summary>
        <para>Whether the TypeCollection is synchronized. This property is always set to true.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.TypeCache.TypeCollection.this">
      <summary>
        <para>Gets the element at the specified index.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.U2D.SpriteAtlasAsset">
      <summary>
        <para>SpriteAtlasAsset stores inputs for generating SpriteAtlas and generates atlas textures on Import.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.U2D.SpriteAtlasAsset.isVariant">
      <summary>
        <para>Checks whether the Sprite Atlas Importer set the Sprite Atlas as a Variant.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasAsset.Add(UnityEngine.Object[])">
      <summary>
        <para>Add an array of Assets to the packable objects list.</para>
      </summary>
      <param name="objects">
      </param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasAsset.GetMasterAtlas">
      <summary>
        <para>Gets the Master Sprite Atlas for the given Variant Sprite Atlas.</para>
      </summary>
      <returns>
        <para>Returns the Master Sprite Atlas if set. Otherwise, returns null.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasAsset.GetPackingSettings">
      <summary>
        <para>Gets the current SpriteAtlasPackingSettings to use when packing SpriteAtlas.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasAsset.GetPlatformSettings(System.String)">
      <summary>
        <para>Gets the platform settings of the build target specified.</para>
      </summary>
      <param name="buildTarget">The name of the build target.</param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasAsset.GetTextureSettings">
      <summary>
        <para>Gets the SpriteAtlasTextureSettings of packed Textures generated by this SpriteAtlasAsset.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasAsset.IsIncludeInBuild">
      <summary>
        <para>Checks whether this Sprite Atlas is marked to be included in the build.</para>
      </summary>
      <returns>
        <para>Returns true if the Sprite Atlas is included in the build.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasAsset.Load(System.String)">
      <summary>
        <para>Loads SpriteAtlasAsset at the given path. File extension of SpriteAtlasAsset is *.spriteatlasv2.</para>
      </summary>
      <param name="assetPath">The path of the SpriteAtlasAsset file on disk.</param>
      <returns>
        <para>Returns the loaded SpriteAtlasAsset.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasAsset.Remove(UnityEngine.Object[])">
      <summary>
        <para>Removes objects from the Atlas's packable objects list.</para>
      </summary>
      <param name="objects">
      </param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasAsset.Save(UnityEditor.U2D.SpriteAtlasAsset,System.String)">
      <summary>
        <para>Saves SpriteAtlasAsset to disk. File extension of SpriteAtlasAsset is *.spriteatlasv2.</para>
      </summary>
      <param name="asset">The SpriteAtlasAsset object to be saved.</param>
      <param name="assetPath">The path of the SpriteAtlasAsset file on disk.</param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasAsset.SetIncludeInBuild(System.Boolean)">
      <summary>
        <para>Defines if the SpriteAtlas's packed Textures that the Importer generates are included in the build with the Sprite after packing is done.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasAsset.SetIsVariant(System.Boolean)">
      <summary>
        <para>Sets whether this Sprite Atlas is a Variant or not.</para>
      </summary>
      <param name="value">
      </param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasAsset.SetMasterAtlas(UnityEngine.U2D.SpriteAtlas)">
      <summary>
        <para>Sets an Atlas to be the Master Atlas.</para>
      </summary>
      <param name="atlas">
      </param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasAsset.SetPackingSettings(UnityEditor.U2D.SpriteAtlasPackingSettings)">
      <summary>
        <para>Sets the SpriteAtlasPackingSettings to use when packing this SpriteAtlas.</para>
      </summary>
      <param name="src">
      </param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasAsset.SetPlatformSettings(UnityEditor.TextureImporterPlatformSettings)">
      <summary>
        <para>Set the platform specific settings.</para>
      </summary>
      <param name="src">
      </param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasAsset.SetTextureSettings(UnityEditor.U2D.SpriteAtlasTextureSettings)">
      <summary>
        <para>Sets the SpriteAtlasTextureSettings for the packed Texture generated by this SpriteAtlas.</para>
      </summary>
      <param name="src">
      </param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasAsset.SetVariantScale(System.Single)">
      <summary>
        <para>Sets the value used to downscale the Master's Texture.</para>
      </summary>
      <param name="value">The multiplier to downscale the Master Atlas's Texture by, the recommended range  is from [0.1 ~ 0.99].</param>
    </member>
    <member name="T:UnityEditor.U2D.SpriteAtlasExtensions">
      <summary>
        <para>Method extensions for SpriteAtlas in Editor.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasExtensions.Add(UnityEngine.U2D.SpriteAtlas,UnityEngine.Object[])">
      <summary>
        <para>Add an array of Assets to the packable objects list.</para>
      </summary>
      <param name="objects">Array of Object to be packed into the atlas.</param>
      <param name="spriteAtlas">
      </param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasExtensions.GetMasterAtlas(UnityEngine.U2D.SpriteAtlas)">
      <summary>
        <para>Gets the Master Sprite Atlas for the given Variant Sprite Atlas.</para>
      </summary>
      <param name="spriteAtlas">The Sprite Atlas to be queried for Master Sprite Atlas status.</param>
      <returns>
        <para>Returns the Master Sprite Atlas if set. Otherwise, returns null.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasExtensions.GetPackables(UnityEngine.U2D.SpriteAtlas)">
      <summary>
        <para>Return all the current packed packables in the atlas.</para>
      </summary>
      <param name="spriteAtlas">
      </param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasExtensions.GetPackingSettings(UnityEngine.U2D.SpriteAtlas)">
      <summary>
        <para>Current SpriteAtlasPackingSettings to use when packing this SpriteAtlas.</para>
      </summary>
      <param name="spriteAtlas">
      </param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasExtensions.GetPlatformSettings(UnityEngine.U2D.SpriteAtlas,System.String)">
      <summary>
        <para>Returns the platform settings of the build target you specify.</para>
      </summary>
      <param name="buildTarget">The name of the build target.</param>
      <param name="spriteAtlas">
      </param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasExtensions.GetTextureSettings(UnityEngine.U2D.SpriteAtlas)">
      <summary>
        <para>Current SpriteAtlasTextureSettings of the packed texture generated by this SpriteAtlas.</para>
      </summary>
      <param name="spriteAtlas">
      </param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasExtensions.IsIncludeInBuild(UnityEngine.U2D.SpriteAtlas)">
      <summary>
        <para>Checks whether this Sprite Atlas is marked to be included in the build.</para>
      </summary>
      <param name="spriteAtlas">Whether the Sprite Atlas is included in the build.</param>
      <returns>
        <para>Returns true if the Sprite Atlas is included in the build.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasExtensions.Remove(UnityEngine.U2D.SpriteAtlas,UnityEngine.Object[])">
      <summary>
        <para>Remove objects from the atlas's packable objects list.</para>
      </summary>
      <param name="objects">Object in the array you wish to remove.</param>
      <param name="spriteAtlas">
      </param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasExtensions.SetIncludeInBuild(UnityEngine.U2D.SpriteAtlas,System.Boolean)">
      <summary>
        <para>Define if this sprite atlas's packed texture is included in the build with the Sprite after packing is done.</para>
      </summary>
      <param name="spriteAtlas">
      </param>
      <param name="value">
      </param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasExtensions.SetIsVariant(UnityEngine.U2D.SpriteAtlas,System.Boolean)">
      <summary>
        <para>Sets whether this Sprite Atlas is a variant or not.</para>
      </summary>
      <param name="spriteAtlas">
      </param>
      <param name="value">
      </param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasExtensions.SetMasterAtlas(UnityEngine.U2D.SpriteAtlas,UnityEngine.U2D.SpriteAtlas)">
      <summary>
        <para>Set an atlas to be the master atlas.</para>
      </summary>
      <param name="spriteAtlas">
      </param>
      <param name="value">
      </param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasExtensions.SetPackingSettings(UnityEngine.U2D.SpriteAtlas,UnityEditor.U2D.SpriteAtlasPackingSettings)">
      <summary>
        <para>Set the SpriteAtlasPackingSettings to use when packing this SpriteAtlas</para>
      </summary>
      <param name="spriteAtlas">
      </param>
      <param name="src">
      </param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasExtensions.SetPlatformSettings(UnityEngine.U2D.SpriteAtlas,UnityEditor.TextureImporterPlatformSettings)">
      <summary>
        <para>Set the platform specific settings.</para>
      </summary>
      <param name="spriteAtlas">
      </param>
      <param name="src">
      </param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasExtensions.SetTextureSettings(UnityEngine.U2D.SpriteAtlas,UnityEditor.U2D.SpriteAtlasTextureSettings)">
      <summary>
        <para>Set the SpriteAtlasTextureSettings for the packed texture generated by this SpriteAtlas.</para>
      </summary>
      <param name="spriteAtlas">
      </param>
      <param name="src">
      </param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasExtensions.SetVariantScale(UnityEngine.U2D.SpriteAtlas,System.Single)">
      <summary>
        <para>Set the value used to downscale the master's texture.</para>
      </summary>
      <param name="value">Recommended value is [0.1 ~ 0.99].</param>
      <param name="spriteAtlas">
      </param>
    </member>
    <member name="T:UnityEditor.U2D.SpriteAtlasImporter">
      <summary>
        <para>SpriteAtlasImporter imports SpriteAtlasAsset and generates SpriteAtlas.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.U2D.SpriteAtlasPackingSettings">
      <summary>
        <para>Settings to use during the packing process for this SpriteAtlas.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.U2D.SpriteAtlasPackingSettings.blockOffset">
      <summary>
        <para>Block offset to use while packing.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.U2D.SpriteAtlasPackingSettings.enableAlphaDilation">
      <summary>
        <para>Sets the boundary padding pixels alpha to 0 when packed into a Sprite Atlas.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.U2D.SpriteAtlasPackingSettings.enableRotation">
      <summary>
        <para>Determines if rotating a sprite is possible during packing.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.U2D.SpriteAtlasPackingSettings.enableTightPacking">
      <summary>
        <para>Determines if sprites should be packed tightly during packing.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.U2D.SpriteAtlasPackingSettings.padding">
      <summary>
        <para>Value to add boundary (padding) to sprites when packing into the atlas.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.U2D.SpriteAtlasTextureSettings">
      <summary>
        <para>Texture settings for the packed texture generated by SpriteAtlas.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.U2D.SpriteAtlasTextureSettings.anisoLevel">
      <summary>
        <para>Packed texture's Anisotropic filtering level.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.U2D.SpriteAtlasTextureSettings.filterMode">
      <summary>
        <para>Filter mode of the packed texture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.U2D.SpriteAtlasTextureSettings.generateMipMaps">
      <summary>
        <para>Set whether mipmaps should be generated for the packed texture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.U2D.SpriteAtlasTextureSettings.readable">
      <summary>
        <para>Readable state of the packed texture.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.U2D.SpriteAtlasTextureSettings.sRGB">
      <summary>
        <para>Checks if the packed texture uses sRGB read/write conversions (Read Only).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.U2D.SpriteAtlasUtility">
      <summary>
        <para>Utility methods to pack atlases in the Project.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasUtility.PackAllAtlases(UnityEditor.BuildTarget)">
      <summary>
        <para>Pack all the SpriteAtlas Assets in the Project for the particular BuildTarget.</para>
      </summary>
      <param name="target">
      </param>
      <param name="canCancel">
      </param>
    </member>
    <member name="M:UnityEditor.U2D.SpriteAtlasUtility.PackAtlases(UnityEngine.U2D.SpriteAtlas[],UnityEditor.BuildTarget)">
      <summary>
        <para>Pack all the provided SpriteAtlas for the particular BuildTarget.</para>
      </summary>
      <param name="atlases">
      </param>
      <param name="target">
      </param>
      <param name="canCancel">
      </param>
    </member>
    <member name="T:UnityEditor.U2D.SpriteEditorExtension">
      <summary>
        <para>Sprite extension methods that are accessible in Editor only.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.U2D.SpriteEditorExtension.GetSpriteID(UnityEngine.Sprite)">
      <summary>
        <para>Gets the Sprite's GUID.</para>
      </summary>
      <param name="sprite">The Sprite to query.</param>
      <returns>
        <para>GUID stored in the Sprite.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.U2D.SpriteEditorExtension.SetSpriteID(UnityEngine.Sprite,UnityEditor.GUID)">
      <summary>
        <para>Sets a Sprite's Global Unique Identifier (GUID) for easy identification later.</para>
      </summary>
      <param name="sprite">The Sprite to set.</param>
      <param name="guid">The GUID to set for the Sprite.</param>
    </member>
    <member name="T:UnityEditor.UIOrientation">
      <summary>
        <para>Default mobile device orientation.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.UIOrientation.AutoRotation">
      <summary>
        <para>Auto Rotation Enabled.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.UIOrientation.LandscapeLeft">
      <summary>
        <para>Landscape : counter-clockwise from Portrait.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.UIOrientation.LandscapeRight">
      <summary>
        <para>Landscape: clockwise from Portrait.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.UIOrientation.Portrait">
      <summary>
        <para>Portrait.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.UIOrientation.PortraitUpsideDown">
      <summary>
        <para>Portrait upside down.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Undo">
      <summary>
        <para>Lets you register undo operations on specific objects you are about to perform changes on.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Undo.postprocessModifications">
      <summary>
        <para>Callback that is triggered whenever a new set of property modifications is created.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Undo.undoRedoPerformed">
      <summary>
        <para>Callback that is triggered after an undo or redo was executed.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.Undo.willFlushUndoRecord">
      <summary>
        <para>Invoked before the Undo system performs a flush.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Undo.AddComponent(UnityEngine.GameObject,System.Type)">
      <summary>
        <para>Adds a component to the game object and registers an undo operation for this action.</para>
      </summary>
      <param name="gameObject">The game object you want to add the component to.</param>
      <param name="type">The type of component you want to add.</param>
      <returns>
        <para>The newly added component.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Undo.AddComponent(UnityEngine.GameObject)">
      <summary>
        <para>Generic version.</para>
      </summary>
      <param name="gameObject">The game object you want to add the component to.</param>
      <returns>
        <para>The newly added component.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Undo.ClearAll">
      <summary>
        <para>Removes all undo and redo operations from  respectively the undo and redo stacks.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Undo.ClearUndo(UnityEngine.Object)">
      <summary>
        <para>Removes all Undo operation for the identifier object registered using Undo.RegisterCompleteObjectUndo from the undo stack.</para>
      </summary>
      <param name="identifier">
      </param>
    </member>
    <member name="M:UnityEditor.Undo.CollapseUndoOperations(System.Int32)">
      <summary>
        <para>Collapses all undo operation up to group index together into one step.</para>
      </summary>
      <param name="groupIndex">
      </param>
    </member>
    <member name="M:UnityEditor.Undo.DestroyObjectImmediate(UnityEngine.Object)">
      <summary>
        <para>Destroys the object and records an undo operation so that it can be recreated.</para>
      </summary>
      <param name="objectToUndo">The object that will be destroyed.</param>
    </member>
    <member name="M:UnityEditor.Undo.FlushUndoRecordObjects">
      <summary>
        <para>Ensure objects recorded using RecordObject or RecordObjects are registered as an undoable action. In most cases there is no reason to invoke FlushUndoRecordObjects since it's automatically done right after mouse-up and certain other events that conventionally marks the end of an action.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Undo.GetCurrentGroup">
      <summary>
        <para>Unity automatically groups undo operations by the current group index.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Undo.GetCurrentGroupName">
      <summary>
        <para>Get the name that will be shown in the UI for the current undo group.</para>
      </summary>
      <returns>
        <para>Name of the current group or an empty string if the current group is empty.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Undo.IncrementCurrentGroup">
      <summary>
        <para>Unity automatically groups undo operations by the current group index.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Undo.MoveGameObjectToScene(UnityEngine.GameObject,UnityEngine.SceneManagement.Scene,System.String)">
      <summary>
        <para>Move a GameObject from its current Scene to a new Scene.
It is required that the GameObject is at the root of its current Scene.</para>
      </summary>
      <param name="go">GameObject to move.</param>
      <param name="scene">Scene to move the GameObject into.</param>
      <param name="name">Name of the undo action.</param>
    </member>
    <member name="M:UnityEditor.Undo.PerformRedo">
      <summary>
        <para>Perform an Redo operation.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Undo.PerformUndo">
      <summary>
        <para>Perform an Undo operation.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Undo.PostprocessModifications">
      <summary>
        <para>Delegate used for postprocessModifications.</para>
      </summary>
      <param name="modifications">The set of property modifications to process.</param>
    </member>
    <member name="M:UnityEditor.Undo.RecordObject(UnityEngine.Object,System.String)">
      <summary>
        <para>Records any changes done on the object after the RecordObject function.</para>
      </summary>
      <param name="objectToUndo">The reference to the object that you will be modifying.</param>
      <param name="name">The title of the action to appear in the undo history (i.e. visible in the undo menu).</param>
    </member>
    <member name="M:UnityEditor.Undo.RecordObjects(UnityEngine.Object[],System.String)">
      <summary>
        <para>Records multiple undoable objects in a single call. This is the same as calling Undo.RecordObject multiple times.</para>
      </summary>
      <param name="objectsToUndo">
      </param>
      <param name="name">
      </param>
    </member>
    <member name="M:UnityEditor.Undo.RegisterChildrenOrderUndo(UnityEngine.Object,System.String)">
      <summary>
        <para>Stores a copy of the order of the object's children on the undo stack.</para>
      </summary>
      <param name="objectToUndo">The object whose child order should be recorded on the undo stack.</param>
      <param name="name">The name of the undo operation.</param>
    </member>
    <member name="M:UnityEditor.Undo.RegisterCompleteObjectUndo(UnityEngine.Object,System.String)">
      <summary>
        <para>Stores a copy of the object states on the undo stack.</para>
      </summary>
      <param name="objectToUndo">The object whose state changes need to be undone.</param>
      <param name="name">The name of the undo operation.</param>
    </member>
    <member name="M:UnityEditor.Undo.RegisterCompleteObjectUndo(UnityEngine.Object[],System.String)">
      <summary>
        <para>This is equivalent to calling the first overload mutiple times, save for the fact that only one undo operation will be generated for this one.</para>
      </summary>
      <param name="objectsToUndo">An array of objects whose state changes need to be undone.</param>
      <param name="name">The name of the undo operation.</param>
    </member>
    <member name="M:UnityEditor.Undo.RegisterCreatedObjectUndo(UnityEngine.Object,System.String)">
      <summary>
        <para>Registers an undo operation to undo the creation of an object.</para>
      </summary>
      <param name="objectToUndo">The newly created object. This object is destroyed when the undo operation is performed. When the value is a GameObject, Unity registers the GameObject and its child GameObjects, but not sibling or parent GameObjects.</param>
      <param name="name">The name of the action to undo. Use this string to provide a short description of the action to be undone. For Undo or Redo items in the Edit menu, Unity adds "Undo" or "Redo" to the string that you provide. For example, if you provide the string "Create GameObject", the Unity Editor displays the menu item Edit &gt; Undo Create GameObject.</param>
    </member>
    <member name="M:UnityEditor.Undo.RegisterFullObjectHierarchyUndo(UnityEngine.Object,System.String)">
      <summary>
        <para>Copy the states of a hierarchy of objects onto the undo stack.</para>
      </summary>
      <param name="objectToUndo">The object used to determine a hierarchy of objects whose state changes need to be undone.</param>
      <param name="name">The name of the undo operation.</param>
    </member>
    <member name="M:UnityEditor.Undo.RegisterFullObjectHierarchyUndo(UnityEngine.Object)">
      <summary>
        <para>This overload is deprecated. Use Undo.RegisterFullObjectHierarchyUndo(Object, string) instead.</para>
      </summary>
      <param name="objectToUndo">
      </param>
    </member>
    <member name="M:UnityEditor.Undo.RegisterImporterUndo(System.String,System.String)">
      <summary>
        <para>Copies the state of the importer for the given asset path.</para>
      </summary>
      <param name="path">Path of the asset importer to register for Undo.</param>
      <param name="name">The name of the undo operation.</param>
    </member>
    <member name="M:UnityEditor.Undo.RevertAllDownToGroup(System.Int32)">
      <summary>
        <para>Performs all undo operations up to the group index without storing a redo operation in the process.</para>
      </summary>
      <param name="group">
      </param>
    </member>
    <member name="M:UnityEditor.Undo.RevertAllInCurrentGroup">
      <summary>
        <para>Performs the last undo operation but does not record a redo operation.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Undo.SetCurrentGroupName(System.String)">
      <summary>
        <para>Set the name of the current undo group.</para>
      </summary>
      <param name="name">New name of the current undo group.</param>
    </member>
    <member name="M:UnityEditor.Undo.SetTransformParent(UnityEngine.Transform,UnityEngine.Transform,System.String)">
      <summary>
        <para>Sets the parent of transform to the new parent and records an undo operation.</para>
      </summary>
      <param name="transform">The Transform component whose parent is to be changed.</param>
      <param name="newParent">The parent Transform to be assigned.</param>
      <param name="name">The name of this action, to be stored in the Undo history buffer.</param>
    </member>
    <member name="T:UnityEditor.Undo.UndoRedoCallback">
      <summary>
        <para>Delegate used for undoRedoPerformed.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.Undo.WillFlushUndoRecord">
      <summary>
        <para>Delegate used for willFlushUndoRecord.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.UndoPropertyModification">
      <summary>
        <para>See Also: Undo.postprocessModifications.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.UndoPropertyModification.currentValue">
      <summary>
        <para>
                  The current value of the modified property.
                  See Also: PropertyModification.
                </para>
      </summary>
    </member>
    <member name="P:UnityEditor.UndoPropertyModification.keepPrefabOverride">
      <summary>
        <para>Indicates whether to retain modifications when the targeted object is an instance of a Prefab.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.UndoPropertyModification.previousValue">
      <summary>
        <para>
                  The previous value of the modified property.
                  See Also: PropertyModification .
                </para>
      </summary>
    </member>
    <member name="T:Unity.CodeEditor.CodeEditor">
      <summary>
        <para>Handles interaction with the code editor.</para>
      </summary>
    </member>
    <member name="P:Unity.CodeEditor.CodeEditor.CurrentCodeEditor">
      <summary>
        <para>Returns the current IExternalCodeEditor instance for the code editor.</para>
      </summary>
    </member>
    <member name="P:Unity.CodeEditor.CodeEditor.CurrentEditorPath">
      <summary>
        <para>The path to the external code editor that Unity uses used to open script assets.</para>
      </summary>
    </member>
    <member name="P:Unity.CodeEditor.CodeEditor.CurrentInstallation">
      <summary>
        <para>Returns the current CodeEditor.Installation instance for the code editor.</para>
      </summary>
    </member>
    <member name="P:Unity.CodeEditor.CodeEditor.Editor">
      <summary>
        <para>A singleton instance of CodeEditor. The Unity Editor references this instance to handle code editor callbacks.</para>
      </summary>
    </member>
    <member name="M:Unity.CodeEditor.CodeEditor.GetCodeEditorForPath(System.String)">
      <summary>
        <para>Each registered code editor package has an instance of IExternalCodeEditor. This method invokes IExternalCodeEditor.TryGetInstallationForPath on that instance. It returns the first instance that returns a valid installation.</para>
      </summary>
      <param name="editorPath">The absolute path to an executable.</param>
      <returns>
        <para>Returns an IExternalCodeEditor representing the package responsible for the editor path.</para>
      </returns>
    </member>
    <member name="M:Unity.CodeEditor.CodeEditor.GetFoundScriptEditorPaths">
      <summary>
        <para>Collects all installations from registered instances of IExternalCodeEditor. This is done using IExternalCodeEditor.Installations.</para>
      </summary>
      <returns>
        <para>A Dictionary that maps names to editor paths.</para>
      </returns>
    </member>
    <member name="M:Unity.CodeEditor.CodeEditor.GetInstallationForPath(System.String)">
      <summary>
        <para>Each registered code editor package has an instance of IExternalCodeEditor. This method invokes IExternalCodeEditor.TryGetInstallationForPath on that instance. It finds the first instance that returns a valid installation, and returns the installation.</para>
      </summary>
      <param name="editorPath">The absolute path to an executable.</param>
      <returns>
        <para>An Installation representation of the path.</para>
      </returns>
    </member>
    <member name="T:Unity.CodeEditor.CodeEditor.Installation">
      <summary>
        <para>Data class for code editor installation.</para>
      </summary>
    </member>
    <member name="F:Unity.CodeEditor.CodeEditor.Installation.Name">
      <summary>
        <para>The name of the code editor.</para>
      </summary>
    </member>
    <member name="F:Unity.CodeEditor.CodeEditor.Installation.Path">
      <summary>
        <para>The path for the code editor.</para>
      </summary>
    </member>
    <member name="M:Unity.CodeEditor.CodeEditor.OSOpenFile(System.String,System.String)">
      <summary>
        <para>Open an application with a quoted string of arguments.</para>
      </summary>
      <param name="appPath">The absolute path of the application to open.</param>
      <param name="arguments">The arguments to be passed to the application. You must make sure any paths are quoted correctly for the current platform.</param>
    </member>
    <member name="M:Unity.CodeEditor.CodeEditor.ParseArgument(System.String,System.String,System.Int32,System.Int32)">
      <summary>
        <para>Parse a string using the rules defined under.</para>
      </summary>
      <param name="arguments">The string that contains the template arguments to parse.</param>
      <param name="path">The file path to open.</param>
      <param name="line">The Line number to place the cursor.</param>
      <param name="column">The column number that represents where on the line to place the cursor.</param>
      <returns>
        <para>Returns the arguments parameter with replacements based on the values passed in to the method.</para>
      </returns>
    </member>
    <member name="M:Unity.CodeEditor.CodeEditor.QuoteForProcessStart(System.String)">
      <summary>
        <para>Quotes a string to pass to Process.Start as a single argument, and appends it to this string builder.</para>
      </summary>
      <param name="argument">
      </param>
    </member>
    <member name="M:Unity.CodeEditor.CodeEditor.Register(Unity.CodeEditor.IExternalCodeEditor)">
      <summary>
        <para>Register an instance of IExternalCodeEditor to use when populating Preferences/External Tools menu. Calls ref::Initialize if you select the instance.</para>
      </summary>
      <param name="externalCodeEditor">The instance of IExternalCodeEditor to register and use to communicate with script Assets.</param>
    </member>
    <member name="M:Unity.CodeEditor.CodeEditor.SetCodeEditor(System.String)">
      <summary>
        <para>Sets the path to the code editor that Unity uses to open script assets.</para>
      </summary>
      <param name="path">The absolute path to the code editor executable. Unity uses this to open files you request.</param>
      <param name="editorPath">
      </param>
    </member>
    <member name="M:Unity.CodeEditor.CodeEditor.Unregister(Unity.CodeEditor.IExternalCodeEditor)">
      <summary>
        <para>Remove an instance of IExternalCodeEditor from the list of registered code editors. Calls ref::Initialize if you select the instance.</para>
      </summary>
      <param name="externalCodeEditor">The instance of IExternalCodeEditor to remove.</param>
    </member>
    <member name="?:Unity.CodeEditor.IExternalCodeEditor">
      <summary>
        <para>Defines the responsibilities of handling external script editor integration into UnityEditor.</para>
      </summary>
    </member>
    <member name="M:Unity.CodeEditor.IExternalCodeEditor.Initialize(System.String)">
      <summary>
        <para>Callback to the IExternalCodeEditor when it has been chosen from the PreferenceWindow.</para>
      </summary>
      <param name="editorInstallationPath">Path of the chosen code editor.</param>
    </member>
    <member name="P:Unity.CodeEditor.IExternalCodeEditor.Installations">
      <summary>
        <para>Provide the editor with a list of known and supported editors that this instance supports.</para>
      </summary>
    </member>
    <member name="M:Unity.CodeEditor.IExternalCodeEditor.OnGUI">
      <summary>
        <para>Unity calls this methodf when it populates "Preferences/External Tools" in order to allow the code editor to generate necessary GUI. For example, when creating an an argument field for modifying the arguments sent to the code editor.</para>
      </summary>
    </member>
    <member name="M:Unity.CodeEditor.IExternalCodeEditor.OpenProject(System.String,System.Int32,System.Int32)">
      <summary>
        <para>The external code editor needs to handle the request to open a file.</para>
      </summary>
      <param name="line">Line number to open the file on.</param>
      <param name="column">Column to move cursor to on the specific line.</param>
      <param name="filePath">
      </param>
      <returns>
        <para>Whether the request went successfully.</para>
      </returns>
    </member>
    <member name="M:Unity.CodeEditor.IExternalCodeEditor.SyncAll">
      <summary>
        <para>Unity calls this function during initialization in order to sync the Project. This is different from SyncIfNeeded in that it does not get a list of changes.</para>
      </summary>
    </member>
    <member name="M:Unity.CodeEditor.IExternalCodeEditor.SyncIfNeeded(System.String[],System.String[],System.String[],System.String[],System.String[])">
      <summary>
        <para>When you change Assets in Unity, this method for the current chosen instance of IExternalCodeEditor parses the new and changed Assets.</para>
      </summary>
      <param name="addedFiles">Added files through Unity's UI.</param>
      <param name="movedFiles">Files that was added but has been moved.</param>
      <param name="movedFromFiles">Same list as movedFiles, but contains the location of where these was moved from.</param>
      <param name="importedFiles">Imported files, which were not added through Unity's UI.</param>
      <param name="deletedFiles">
      </param>
    </member>
    <member name="M:Unity.CodeEditor.IExternalCodeEditor.TryGetInstallationForPath(System.String,Unity.CodeEditor.CodeEditor/Installation&amp;)">
      <summary>
        <para>Unity stores the path of the chosen editor. An instance of IExternalCodeEditor can take responsibility for this path, by returning true when this method is being called. The out variable installation need to be constructed with the path and the name that should be shown in the "External Tools" code editor list.</para>
      </summary>
      <param name="editorPath">The absolute path of the chosen code editor.</param>
      <param name="installation">To store the resulting Installation. If return value is false, this result is ignored.</param>
      <returns>
        <para>Whether this IExternalCodeEditor can support the editorPath implementation.</para>
      </returns>
    </member>
    <member name="T:Unity.Profiling.Editor.ProfilerCounterDescriptor">
      <summary>
        <para>Provides a descriptor for a Profiler counter.</para>
      </summary>
    </member>
    <member name="P:Unity.Profiling.Editor.ProfilerCounterDescriptor.CategoryName">
      <summary>
        <para>The category name of the described Profiler counter.</para>
      </summary>
    </member>
    <member name="M:Unity.Profiling.Editor.ProfilerCounterDescriptor.#ctor(System.String,Unity.Profiling.ProfilerCategory)">
      <summary>
        <para>Initializes and returns an instance of ProfilerCounterDescriptor.</para>
      </summary>
      <param name="name">The name of the Profiler counter to describe. A string.</param>
      <param name="category">The category of the Profiler counter to describe. A Unity.Profiling.ProfilerCategory.</param>
    </member>
    <member name="M:Unity.Profiling.Editor.ProfilerCounterDescriptor.#ctor(System.String,System.String)">
      <summary>
        <para>Initializes and returns an instance of ProfilerCounterDescriptor.</para>
      </summary>
      <param name="name">The name of the Profiler counter to describe, as a string.</param>
      <param name="categoryName">The category name of the Profiler counter to describe, as a string.</param>
    </member>
    <member name="P:Unity.Profiling.Editor.ProfilerCounterDescriptor.Name">
      <summary>
        <para>The name of the described Profiler counter.</para>
      </summary>
    </member>
    <member name="T:Unity.Profiling.Editor.ProfilerModule">
      <summary>
        <para>Represents a Profiler module in the Profiler window.</para>
      </summary>
    </member>
    <member name="M:Unity.Profiling.Editor.ProfilerModule.CreateDetailsViewController">
      <summary>
        <para>Creates a View Controller object that draws the Profiler module’s Details View in the Profiler window. Unity calls this method automatically when the module is selected in the Profiler window.</para>
      </summary>
      <returns>
        <para>Returns a ProfilerModuleViewController derived object that draws the module’s Details View in the Profiler window. The default value is a view controller that displays a list of the module’s chart counters alongside their current values in the selected frame.</para>
      </returns>
    </member>
    <member name="P:Unity.Profiling.Editor.ProfilerModule.DisplayName">
      <summary>
        <para>The module’s display name.</para>
      </summary>
    </member>
    <member name="P:Unity.Profiling.Editor.ProfilerModule.ProfilerWindow">
      <summary>
        <para>The Profiler window that the module instance belongs to.</para>
      </summary>
    </member>
    <member name="T:Unity.Profiling.Editor.ProfilerModuleChartType">
      <summary>
        <para>Options for a Profiler module’s chart type.</para>
      </summary>
    </member>
    <member name="F:Unity.Profiling.Editor.ProfilerModuleChartType.Line">
      <summary>
        <para>Display a line chart.</para>
      </summary>
    </member>
    <member name="F:Unity.Profiling.Editor.ProfilerModuleChartType.StackedTimeArea">
      <summary>
        <para>Display a stacked-area chart.</para>
      </summary>
    </member>
    <member name="T:Unity.Profiling.Editor.ProfilerModuleMetadataAttribute">
      <summary>
        <para>Provides metadata related to a ProfilerModule, such as its name and icon path.</para>
      </summary>
    </member>
    <member name="M:Unity.Profiling.Editor.ProfilerModuleMetadataAttribute.#ctor(System.String)">
      <summary>
        <para>Initializes and returns an instance of ProfilerModuleMetadataAttribute.</para>
      </summary>
      <param name="displayName">The display name of the attributed module.</param>
    </member>
    <member name="P:Unity.Profiling.Editor.ProfilerModuleMetadataAttribute.DisplayName">
      <summary>
        <para>The attributed Profiler module’s display name.</para>
      </summary>
    </member>
    <member name="P:Unity.Profiling.Editor.ProfilerModuleMetadataAttribute.IconPath">
      <summary>
        <para>The path to the attributed Profiler module’s icon.</para>
      </summary>
    </member>
    <member name="T:Unity.Profiling.Editor.ProfilerModuleViewController">
      <summary>
        <para>Provides a single view of content for a ProfilerModule displayed in the Profiler window.</para>
      </summary>
    </member>
    <member name="M:Unity.Profiling.Editor.ProfilerModuleViewController.CreateView">
      <summary>
        <para>Creates the view controller’s view. Unity calls this method automatically when it is about to display the view controller’s view for the first time.</para>
      </summary>
      <returns>
        <para>Returns the view controller’s view. A UIElements.VisualElement.</para>
      </returns>
    </member>
    <member name="M:Unity.Profiling.Editor.ProfilerModuleViewController.Dispose">
      <summary>
        <para>Disposes the view controller. Unity calls this method automatically when the view controller is no longer required, and its view will be removed from the window hierarchy.</para>
      </summary>
      <param name="disposing">The flag to indicate whether the method call comes from a Dispose method or from a finalizer. A bool. When the value is true, the method call comes from a Dispose method.
                Otherwise, the method call comes from a finalizer.</param>
    </member>
    <member name="M:Unity.Profiling.Editor.ProfilerModuleViewController.Dispose">
      <summary>
        <para>TODO.</para>
      </summary>
    </member>
    <member name="P:Unity.Profiling.Editor.ProfilerModuleViewController.ProfilerWindow">
      <summary>
        <para>The Profiler window that the view controller belongs to.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.UnityLinker.UnityLinkerBuildPipelineData">
      <summary>
        <para>Contains information for various IUnityLinkerProcessor callbacks.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.UnityLinker.UnityLinkerBuildPipelineData.inputDirectory">
      <summary>
        <para>The directory containing the assemblies that UnityLinker will process.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.UnityLinker.UnityLinkerBuildPipelineData.target">
      <summary>
        <para>The build target.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.UnityLinker.UnityLinkerBuildPipelineData.#ctor(UnityEditor.BuildTarget,System.String)">
      <summary>
        <para>Creates a new instance of an UnityLinkerBuildPipelineData.</para>
      </summary>
      <param name="target">
      </param>
      <param name="inputDirectory">
      </param>
    </member>
    <member name="T:UnityEditor.UnwrapParam">
      <summary>
        <para>Unwrapping settings.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.UnwrapParam.angleError">
      <summary>
        <para>Maximum allowed angle distortion (0..1).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.UnwrapParam.areaError">
      <summary>
        <para>Maximum allowed area distortion (0..1).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.UnwrapParam.hardAngle">
      <summary>
        <para>This angle (in degrees) or greater between triangles will cause seam to be created.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.UnwrapParam.packMargin">
      <summary>
        <para>How much uv-islands will be padded.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.UnwrapParam.SetDefaults(UnityEditor.UnwrapParam&amp;)">
      <summary>
        <para>Will set default values for params.</para>
      </summary>
      <param name="param">
      </param>
    </member>
    <member name="T:UnityEditor.Unwrapping">
      <summary>
        <para>This class holds everything you may need in regard to uv-unwrapping.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.Unwrapping.GeneratePerTriangleUV(UnityEngine.Mesh)">
      <summary>
        <para>Will generate per-triangle uv (3 UVs for each triangle) with default settings.</para>
      </summary>
      <param name="src">The source mesh to generate UVs for.</param>
      <returns>
        <para>The list of UVs generated.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Unwrapping.GeneratePerTriangleUV(UnityEngine.Mesh,UnityEditor.UnwrapParam)">
      <summary>
        <para>Will generate per-triangle uv (3 UVs for each triangle) with provided settings.</para>
      </summary>
      <param name="src">The source mesh to generate UVs for.</param>
      <param name="settings">Allows you to specify custom parameters to control the unwrapping.</param>
      <returns>
        <para>The list of UVs generated.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.Unwrapping.GenerateSecondaryUVSet(UnityEngine.Mesh)">
      <summary>
        <para>Will auto generate uv2 with default settings for provided mesh, and fill them in.</para>
      </summary>
      <param name="src">
      </param>
    </member>
    <member name="M:UnityEditor.Unwrapping.GenerateSecondaryUVSet(UnityEngine.Mesh,UnityEditor.UnwrapParam)">
      <summary>
        <para>Will auto generate uv2 with provided settings for provided mesh, and fill them in.</para>
      </summary>
      <param name="src">
      </param>
      <param name="settings">
      </param>
    </member>
    <member name="T:UnityEditor.UpdatePrefabInstancesEventArgs">
      <summary>
        <para>A change of this type indicates that prefab instances in an open scene have been updated due to a change to the source prefab.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.UpdatePrefabInstancesEventArgs.instanceIds">
      <summary>
        <para>The instance ID for each root GameObject of the prefab instances that have been updated.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.UpdatePrefabInstancesEventArgs.scene">
      <summary>
        <para>The scene containing all of the prefab instances that have been updated.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.UpdatePrefabInstancesEventArgs.#ctor(UnityEngine.SceneManagement.Scene,Unity.Collections.NativeArray`1/ReadOnly&lt;System.Int32&gt;)">
      <summary>
        <para>Constructs a new instance.</para>
      </summary>
      <param name="scene">The scene containing all of the prefab instances that have been updated.</param>
      <param name="instanceIds">The instance ID for each root GameObject of the prefab instances that have been updated.</param>
    </member>
    <member name="T:UnityEditor.VersionControl.Asset">
      <summary>
        <para>This class containes information about the version control state of an asset.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Asset.assetPath">
      <summary>
        <para>Gets the path of the Asset relative to the project root. If the Asset is a meta file, the path to the meta file is returned.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Asset.fullName">
      <summary>
        <para>Gets the full name of the asset including extension.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Asset.isFolder">
      <summary>
        <para>Returns true if the asset is a folder.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Asset.isInCurrentProject">
      <summary>
        <para>Returns true if the asset file exists and is in the current project.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Asset.isMeta">
      <summary>
        <para>Returns true if the instance of the Asset class actually refers to a .meta file.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Asset.locked">
      <summary>
        <para>Returns true if the asset is locked by the version control system.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Asset.metaPath">
      <summary>
        <para>Gets the path of the meta file for this Asset relative to the project root. If the Asset is a meta file, the path to the meta file is returned.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Asset.name">
      <summary>
        <para>Get the name of the asset.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Asset.path">
      <summary>
        <para>Gets the path of the asset.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Asset.readOnly">
      <summary>
        <para>Returns true is the asset is read only.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Asset.state">
      <summary>
        <para>Gets the version control state of the asset.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.Asset.Edit">
      <summary>
        <para>Opens the assets in an associated editor.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.Asset.IsOneOfStates(UnityEditor.VersionControl.Asset/States[])">
      <summary>
        <para>Returns true if the version control state of the assets is one of the input states.</para>
      </summary>
      <param name="states">Array of states to test for.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Asset.IsState(UnityEditor.VersionControl.Asset/States)">
      <summary>
        <para>Returns true if the version control state of the asset exactly matches the input state.</para>
      </summary>
      <param name="state">State to check for.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Asset.Load">
      <summary>
        <para>Loads the asset to memory.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.Asset.States">
      <summary>
        <para>Describes the various version control states an asset can have.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.AddedLocal">
      <summary>
        <para>The asset was locally added to version control.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.AddedRemote">
      <summary>
        <para>Remotely this asset was added to version control.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.CheckedOutLocal">
      <summary>
        <para>The asset has been checked out on the local machine.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.CheckedOutRemote">
      <summary>
        <para>The asset has been checked out on a remote machine.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.Conflicted">
      <summary>
        <para>There is a conflict with the asset that needs to be resolved.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.DeletedLocal">
      <summary>
        <para>The asset has been deleted locally.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.DeletedRemote">
      <summary>
        <para>The asset has been deleted on a remote machine.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.Exclusive">
      <summary>
        <para>Only a single user can checkout this asset</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.Local">
      <summary>
        <para>The asset is not under version control.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.LockedLocal">
      <summary>
        <para>The asset is locked by the local machine.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.LockedRemote">
      <summary>
        <para>The asset is locked by a remote machine.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.MetaFile">
      <summary>
        <para>This instance of the class actaully refers to a .meta file.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.Missing">
      <summary>
        <para>The asset exists in version control but is missing on the local machine.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.MovedLocal">
      <summary>
        <para>The asset has been moved locally.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.MovedRemote">
      <summary>
        <para>The asset has been moved on a remote machine.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.None">
      <summary>
        <para>The version control state is unknown.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.OutOfSync">
      <summary>
        <para>A newer version of the asset is available on the version control server.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.ReadOnly">
      <summary>
        <para>The asset is read only.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.Synced">
      <summary>
        <para>The asset is up to date.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.Unversioned">
      <summary>
        <para>This asset is either ignored or doesn't exist in version control.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Asset.States.Updating">
      <summary>
        <para>The state of the asset is currently being queried from the version control server.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.AssetList">
      <summary>
        <para>A list of version control information about assets.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.AssetList.Filter(System.Boolean,UnityEditor.VersionControl.Asset/States[])">
      <summary>
        <para>Based on the current list and the states a new list is returned which only contains the assets with the requested states.</para>
      </summary>
      <param name="includeFolder">Whether or not folders should be included.</param>
      <param name="states">Which states to filter by.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.AssetList.FilterChildren">
      <summary>
        <para>Create an optimised list of assets by removing children of folders in the same list.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.AssetList.FilterCount(System.Boolean,UnityEditor.VersionControl.Asset/States[])">
      <summary>
        <para>Count the list of assets by given a set of states.</para>
      </summary>
      <param name="includeFolder">Whether or not to include folders.</param>
      <param name="states">Which states to include in the count.</param>
    </member>
    <member name="T:UnityEditor.VersionControl.ChangeSet">
      <summary>
        <para>Wrapper around a changeset description and ID.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.ChangeSet.defaultID">
      <summary>
        <para>The ID of  the default changeset.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.ChangeSet.description">
      <summary>
        <para>Description of a changeset.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.ChangeSet.id">
      <summary>
        <para>Version control specific ID of a changeset.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.ChangeSets">
      <summary>
        <para>A list of the ChangeSet class.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.CheckoutMode">
      <summary>
        <para>What to checkout when starting the Checkout task through the version control Provider.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.CheckoutMode.Asset">
      <summary>
        <para>Checkout the asset only.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.CheckoutMode.Both">
      <summary>
        <para>Checkout both asset and .meta file.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.CheckoutMode.Exact">
      <summary>
        <para>Checkout only those assets provided in the asset list.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.CheckoutMode.Meta">
      <summary>
        <para>Checkout .meta file only.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.CompletionAction">
      <summary>
        <para>Different actions a version control task can do upon completion.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.CompletionAction.OnAddedChangeWindow">
      <summary>
        <para>Refresh windows upon task completion.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.CompletionAction.OnChangeContentsPendingWindow">
      <summary>
        <para>Update the content of a pending changeset with the result of the task upon completion.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.CompletionAction.OnChangeSetsPendingWindow">
      <summary>
        <para>Update the pending changesets with the result of the task upon completion.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.CompletionAction.OnCheckoutCompleted">
      <summary>
        <para>Show or update the checkout failure window.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.CompletionAction.OnGotLatestPendingWindow">
      <summary>
        <para>Refreshes the incoming and pensing changes window upon task completion.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.CompletionAction.OnIncomingPendingWindow">
      <summary>
        <para>Update incoming changes window with the result of the task upon completion.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.CompletionAction.OnSubmittedChangeWindow">
      <summary>
        <para>Refresh the submit window with the result of the task upon completion.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.CompletionAction.UpdatePendingWindow">
      <summary>
        <para>Update the list of pending changes when a task completes.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.ConfigField">
      <summary>
        <para>Describes the configuration fields of the version control that the user has selected in the Unity Editor.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.ConfigField.description">
      <summary>
        <para>Descrition of the configuration field.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.ConfigField.isPassword">
      <summary>
        <para>This is true if the configuration field is a password field.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.ConfigField.isRequired">
      <summary>
        <para>This is true if the configuration field is required for the version control plugin to function correctly.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.ConfigField.label">
      <summary>
        <para>Label that is displayed next to the configuration field in the editor.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.ConfigField.name">
      <summary>
        <para>Name of the configuration field.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.FileMode">
      <summary>
        <para>Mode of the file.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.FileMode.Binary">
      <summary>
        <para>Binary file.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.FileMode.None">
      <summary>
        <para>No mode set.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.FileMode.Text">
      <summary>
        <para>Text file.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.IconOverlayType">
      <summary>
        <para>Type of icon overlay.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.IconOverlayType.Hierarchy">
      <summary>
        <para>Hierarchy window icon overlay.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.IconOverlayType.Other">
      <summary>
        <para>Other icon overlay.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.IconOverlayType.Project">
      <summary>
        <para>Project window icon overlay.</para>
      </summary>
    </member>
    <member name="?:UnityEditor.VersionControl.IIconOverlayExtension">
      <summary>
        <para>Version control system extension that allows drawing icon overlays.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.IIconOverlayExtension.DrawOverlay(System.String,UnityEditor.VersionControl.IconOverlayType,UnityEngine.Rect)">
      <summary>
        <para>Draws icon overlay.</para>
      </summary>
      <param name="assetPath">Asset path.</param>
      <param name="type">Icon overlay type.</param>
      <param name="rect">Icon bounding box.</param>
    </member>
    <member name="?:UnityEditor.VersionControl.IInspectorWindowExtension">
      <summary>
        <para>Version control system extension that allows extending inspector.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.IInspectorWindowExtension.InvalidateVersionControlBarState">
      <summary>
        <para>Resets any cached state for the version control bar.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.IInspectorWindowExtension.OnVersionControlBar(UnityEditor.Editor)">
      <summary>
        <para>Allows you to add custom GUI controls to the version control bar in the specified inspector.</para>
      </summary>
      <param name="editor">Inspector that contains the version control bar.</param>
    </member>
    <member name="?:UnityEditor.VersionControl.IPopupMenuExtension">
      <summary>
        <para>Version control system extension that allows displaying VCS specific context menu.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.IPopupMenuExtension.DisplayPopupMenu(UnityEngine.Rect)">
      <summary>
        <para>Displays a version control system context menu.</para>
      </summary>
      <param name="position">The position of the context menu.</param>
    </member>
    <member name="?:UnityEditor.VersionControl.ISettingsInspectorExtension">
      <summary>
        <para>Version control system extension that allows extending Version Control settings inspector.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.ISettingsInspectorExtension.OnInspectorGUI">
      <summary>
        <para>Allows you to add custom GUI controls to the version control settings in the inspector.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.MergeMethod">
      <summary>
        <para>Which method to use when merging.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.MergeMethod.MergeAll">
      <summary>
        <para>Merge all changes.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.MergeMethod.MergeNonConflicting">
      <summary>
        <para>Merge non-conflicting changes.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.MergeMethod.MergeNone">
      <summary>
        <para>Don't merge any changes.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.Message">
      <summary>
        <para>Messages from the version control system.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Message.message">
      <summary>
        <para>The message text.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Message.severity">
      <summary>
        <para>The severity of the message.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.Message.Severity">
      <summary>
        <para>Severity of a version control message.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Message.Severity.Error">
      <summary>
        <para>Error message.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Message.Severity.Info">
      <summary>
        <para>Informational message.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Message.Severity.Verbose">
      <summary>
        <para>Verbose message.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Message.Severity.Warning">
      <summary>
        <para>Warning message.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.Message.Show">
      <summary>
        <para>Write the message to the console.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.OnlineState">
      <summary>
        <para>Represent the connection state of the version control provider.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.OnlineState.Offline">
      <summary>
        <para>Connection to the version control server could not be established.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.OnlineState.Online">
      <summary>
        <para>Connection to the version control server has been established.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.OnlineState.Updating">
      <summary>
        <para>The version control provider is currently trying to connect to the version control server.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.Plugin">
      <summary>
        <para>The plug-in class describes the currently active version control plug-in and its configuration options.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Plugin.configFields">
      <summary>
        <para>Configuration fields of the plugin.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Plugin.name">
      <summary>
        <para>The name of the currently active version control.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.Provider">
      <summary>
        <para>This class provides access to the version control API.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Provider.activeTask">
      <summary>
        <para>Gets the currently executing task.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Provider.enabled">
      <summary>
        <para>Returns true if the version control provider is enabled and a valid Unity Pro License was found.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Provider.hasCheckoutSupport">
      <summary>
        <para>This is true if the currently selected version control plugin supports the Checkout method.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Provider.hasLockingSupport">
      <summary>
        <para>This is true if the currently selected version control plugin supports the Lock and Unlock methods.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Provider.isActive">
      <summary>
        <para>Returns true if a version control plugin has been selected and configured correctly.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Provider.offlineReason">
      <summary>
        <para>Returns the reason for the version control provider being offline (if it is offline).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Provider.onlineState">
      <summary>
        <para>Returns the OnlineState of the version control provider.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Provider.preCheckoutCallback">
      <summary>
        <para>User-supplied callback to be called before Version Control check out operation.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.Provider.preSubmitCallback">
      <summary>
        <para>User-supplied callback to be called before Version Control Submit operation.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Provider.requiresNetwork">
      <summary>
        <para>This is true if a network connection is required by the currently selected version control plugin to perform any action.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Add(UnityEditor.VersionControl.AssetList,System.Boolean)">
      <summary>
        <para>Allows you to add files to via script.</para>
      </summary>
      <param name="assets">List of assets to add to version control system.</param>
      <param name="asset">Single asset to add to version control system.</param>
      <param name="recursive">Set this to true if adding should be done recursively into subfolders.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Add(UnityEditor.VersionControl.Asset,System.Boolean)">
      <summary>
        <para>Allows you to add files to via script.</para>
      </summary>
      <param name="assets">List of assets to add to version control system.</param>
      <param name="asset">Single asset to add to version control system.</param>
      <param name="recursive">Set this to true if adding should be done recursively into subfolders.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.AddIsValid(UnityEditor.VersionControl.AssetList)">
      <summary>
        <para>Given a list of assets this function returns true if Provider.Add is a valid task to perform on at least one of the assets in the list.</para>
      </summary>
      <param name="assets">List of assets to test.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.ChangeSetDescription(UnityEditor.VersionControl.ChangeSet)">
      <summary>
        <para>Given a changeset only containing the changeset ID, this will start a task for quering the description of the changeset.</para>
      </summary>
      <param name="changeset">Changeset to query description of.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.ChangeSetMove(UnityEditor.VersionControl.AssetList,UnityEditor.VersionControl.ChangeSet)">
      <summary>
        <para>Move an Asset or a list of Assets from their current changeset to a new changeset.</para>
      </summary>
      <param name="assets">List of Assets to move to changeset.</param>
      <param name="changeset">Changeset to move an Asset to.</param>
      <param name="asset">Asset to move to changeset.</param>
      <param name="changesetID">ChangesetID to move an Asset to.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.ChangeSetMove(UnityEditor.VersionControl.Asset,UnityEditor.VersionControl.ChangeSet)">
      <summary>
        <para>Move an Asset or a list of Assets from their current changeset to a new changeset.</para>
      </summary>
      <param name="assets">List of Assets to move to changeset.</param>
      <param name="changeset">Changeset to move an Asset to.</param>
      <param name="asset">Asset to move to changeset.</param>
      <param name="changesetID">ChangesetID to move an Asset to.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.ChangeSetMove(UnityEditor.VersionControl.AssetList,System.String)">
      <summary>
        <para>Move an Asset or a list of Assets from their current changeset to a new changeset.</para>
      </summary>
      <param name="assets">List of Assets to move to changeset.</param>
      <param name="changeset">Changeset to move an Asset to.</param>
      <param name="asset">Asset to move to changeset.</param>
      <param name="changesetID">ChangesetID to move an Asset to.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.ChangeSetMove(UnityEditor.VersionControl.Asset,System.String)">
      <summary>
        <para>Move an Asset or a list of Assets from their current changeset to a new changeset.</para>
      </summary>
      <param name="assets">List of Assets to move to changeset.</param>
      <param name="changeset">Changeset to move an Asset to.</param>
      <param name="asset">Asset to move to changeset.</param>
      <param name="changesetID">ChangesetID to move an Asset to.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.ChangeSets">
      <summary>
        <para>Gets a list of pending changesets owned by the current user.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.ChangeSetStatus(UnityEditor.VersionControl.ChangeSet)">
      <summary>
        <para>Retrieves a list of assets belonging to a changeset.</para>
      </summary>
      <param name="changeset">Changeset to query for assets.</param>
      <param name="changesetID">ChangesetID to query for assets.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.ChangeSetStatus(System.String)">
      <summary>
        <para>Retrieves a list of assets belonging to a changeset.</para>
      </summary>
      <param name="changeset">Changeset to query for assets.</param>
      <param name="changesetID">ChangesetID to query for assets.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Checkout(UnityEditor.VersionControl.Asset,UnityEditor.VersionControl.CheckoutMode)">
      <summary>
        <para>Checkout an asset or a list of assets from the version control system.</para>
      </summary>
      <param name="assets">List of assets to checkout.</param>
      <param name="asset">Asset to checkout.</param>
      <param name="mode">Tell the Provider to checkout just the asset file, the .meta file or both.</param>
      <param name="changeset">Tell the Provider to checkout the assets to a specific changeset.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Checkout(UnityEditor.VersionControl.Asset,UnityEditor.VersionControl.CheckoutMode,UnityEditor.VersionControl.ChangeSet)">
      <summary>
        <para>Checkout an asset or a list of assets from the version control system.</para>
      </summary>
      <param name="assets">List of assets to checkout.</param>
      <param name="asset">Asset to checkout.</param>
      <param name="mode">Tell the Provider to checkout just the asset file, the .meta file or both.</param>
      <param name="changeset">Tell the Provider to checkout the assets to a specific changeset.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Checkout(UnityEditor.VersionControl.AssetList,UnityEditor.VersionControl.CheckoutMode)">
      <summary>
        <para>Checkout an asset or a list of assets from the version control system.</para>
      </summary>
      <param name="assets">List of assets to checkout.</param>
      <param name="asset">Asset to checkout.</param>
      <param name="mode">Tell the Provider to checkout just the asset file, the .meta file or both.</param>
      <param name="changeset">Tell the Provider to checkout the assets to a specific changeset.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Checkout(UnityEditor.VersionControl.AssetList,UnityEditor.VersionControl.CheckoutMode,UnityEditor.VersionControl.ChangeSet)">
      <summary>
        <para>Checkout an asset or a list of assets from the version control system.</para>
      </summary>
      <param name="assets">List of assets to checkout.</param>
      <param name="asset">Asset to checkout.</param>
      <param name="mode">Tell the Provider to checkout just the asset file, the .meta file or both.</param>
      <param name="changeset">Tell the Provider to checkout the assets to a specific changeset.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Checkout(System.String,UnityEditor.VersionControl.CheckoutMode)">
      <summary>
        <para>Checkout an asset or a list of assets from the version control system.</para>
      </summary>
      <param name="assets">List of assets to checkout.</param>
      <param name="asset">Asset to checkout.</param>
      <param name="mode">Tell the Provider to checkout just the asset file, the .meta file or both.</param>
      <param name="changeset">Tell the Provider to checkout the assets to a specific changeset.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Checkout(System.String,UnityEditor.VersionControl.CheckoutMode,UnityEditor.VersionControl.ChangeSet)">
      <summary>
        <para>Checkout an asset or a list of assets from the version control system.</para>
      </summary>
      <param name="assets">List of assets to checkout.</param>
      <param name="asset">Asset to checkout.</param>
      <param name="mode">Tell the Provider to checkout just the asset file, the .meta file or both.</param>
      <param name="changeset">Tell the Provider to checkout the assets to a specific changeset.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Checkout(System.String[],UnityEditor.VersionControl.CheckoutMode)">
      <summary>
        <para>Checkout an asset or a list of assets from the version control system.</para>
      </summary>
      <param name="assets">List of assets to checkout.</param>
      <param name="asset">Asset to checkout.</param>
      <param name="mode">Tell the Provider to checkout just the asset file, the .meta file or both.</param>
      <param name="changeset">Tell the Provider to checkout the assets to a specific changeset.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Checkout(System.String[],UnityEditor.VersionControl.CheckoutMode,UnityEditor.VersionControl.ChangeSet)">
      <summary>
        <para>Checkout an asset or a list of assets from the version control system.</para>
      </summary>
      <param name="assets">List of assets to checkout.</param>
      <param name="asset">Asset to checkout.</param>
      <param name="mode">Tell the Provider to checkout just the asset file, the .meta file or both.</param>
      <param name="changeset">Tell the Provider to checkout the assets to a specific changeset.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Checkout(UnityEngine.Object,UnityEditor.VersionControl.CheckoutMode,UnityEditor.VersionControl.ChangeSet)">
      <summary>
        <para>Checkout an asset or a list of assets from the version control system.</para>
      </summary>
      <param name="assets">List of assets to checkout.</param>
      <param name="asset">Asset to checkout.</param>
      <param name="mode">Tell the Provider to checkout just the asset file, the .meta file or both.</param>
      <param name="changeset">Tell the Provider to checkout the assets to a specific changeset.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Checkout(UnityEngine.Object,UnityEditor.VersionControl.CheckoutMode)">
      <summary>
        <para>Checkout an asset or a list of assets from the version control system.</para>
      </summary>
      <param name="assets">List of assets to checkout.</param>
      <param name="asset">Asset to checkout.</param>
      <param name="mode">Tell the Provider to checkout just the asset file, the .meta file or both.</param>
      <param name="changeset">Tell the Provider to checkout the assets to a specific changeset.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Checkout(UnityEngine.Object[],UnityEditor.VersionControl.CheckoutMode)">
      <summary>
        <para>Checkout an asset or a list of assets from the version control system.</para>
      </summary>
      <param name="assets">List of assets to checkout.</param>
      <param name="asset">Asset to checkout.</param>
      <param name="mode">Tell the Provider to checkout just the asset file, the .meta file or both.</param>
      <param name="changeset">Tell the Provider to checkout the assets to a specific changeset.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Checkout(UnityEngine.Object[],UnityEditor.VersionControl.CheckoutMode,UnityEditor.VersionControl.ChangeSet)">
      <summary>
        <para>Checkout an asset or a list of assets from the version control system.</para>
      </summary>
      <param name="assets">List of assets to checkout.</param>
      <param name="asset">Asset to checkout.</param>
      <param name="mode">Tell the Provider to checkout just the asset file, the .meta file or both.</param>
      <param name="changeset">Tell the Provider to checkout the assets to a specific changeset.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.CheckoutIsValid(UnityEditor.VersionControl.AssetList)">
      <summary>
        <para>Given an asset or a  list of assets this function returns true if Provider.Checkout is a valid task to perform on at least one of the given assets.</para>
      </summary>
      <param name="assets">List of assets.</param>
      <param name="asset">Single asset.</param>
      <param name="mode">Specify to check only asset files, meta files or both.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.CheckoutIsValid(UnityEditor.VersionControl.Asset)">
      <summary>
        <para>Given an asset or a  list of assets this function returns true if Provider.Checkout is a valid task to perform on at least one of the given assets.</para>
      </summary>
      <param name="assets">List of assets.</param>
      <param name="asset">Single asset.</param>
      <param name="mode">Specify to check only asset files, meta files or both.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.CheckoutIsValid(UnityEditor.VersionControl.AssetList,UnityEditor.VersionControl.CheckoutMode)">
      <summary>
        <para>Given an asset or a  list of assets this function returns true if Provider.Checkout is a valid task to perform on at least one of the given assets.</para>
      </summary>
      <param name="assets">List of assets.</param>
      <param name="asset">Single asset.</param>
      <param name="mode">Specify to check only asset files, meta files or both.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.CheckoutIsValid(UnityEditor.VersionControl.Asset,UnityEditor.VersionControl.CheckoutMode)">
      <summary>
        <para>Given an asset or a  list of assets this function returns true if Provider.Checkout is a valid task to perform on at least one of the given assets.</para>
      </summary>
      <param name="assets">List of assets.</param>
      <param name="asset">Single asset.</param>
      <param name="mode">Specify to check only asset files, meta files or both.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.ClearCache">
      <summary>
        <para>This will invalidate the cached state information for all assets.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Delete(System.String)">
      <summary>
        <para>Starts a task to delete an Asset or a list of Assets from the disk and from the version control system.</para>
      </summary>
      <param name="assetProjectPath">The path to the asset that is to be deleted.</param>
      <param name="assets">List of assets to delete.</param>
      <param name="asset">Asset to delete.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Delete(UnityEditor.VersionControl.AssetList)">
      <summary>
        <para>Starts a task to delete an Asset or a list of Assets from the disk and from the version control system.</para>
      </summary>
      <param name="assetProjectPath">The path to the asset that is to be deleted.</param>
      <param name="assets">List of assets to delete.</param>
      <param name="asset">Asset to delete.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Delete(UnityEditor.VersionControl.Asset)">
      <summary>
        <para>Starts a task to delete an Asset or a list of Assets from the disk and from the version control system.</para>
      </summary>
      <param name="assetProjectPath">The path to the asset that is to be deleted.</param>
      <param name="assets">List of assets to delete.</param>
      <param name="asset">Asset to delete.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.DeleteChangeSets(UnityEditor.VersionControl.ChangeSets)">
      <summary>
        <para>Starts a task that will attempt to delete the given changesets.</para>
      </summary>
      <param name="changesets">List of changetsets to delete.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.DeleteChangeSetsIsValid(UnityEditor.VersionControl.ChangeSets)">
      <summary>
        <para>Tests if deleting the given changesets is a valid task to perform.</para>
      </summary>
      <param name="changesets">Changesets to test.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.DiffHead(UnityEditor.VersionControl.AssetList,System.Boolean)">
      <summary>
        <para>Starts a task for showing a diff of the given assest versus their head revision.</para>
      </summary>
      <param name="assets">List of assets to diff.</param>
      <param name="includingMetaFiles">Whether or not to include the .meta file.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.DiffIsValid(UnityEditor.VersionControl.AssetList)">
      <summary>
        <para>Returns true if starting a Diff task is a valid operation for at least one asset in the given AssetList.</para>
      </summary>
      <param name="assets">List of assets.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.GetActiveConfigFields">
      <summary>
        <para>Returns the configuration fields for the currently active version control plugin.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.GetActivePlugin">
      <summary>
        <para>Gets the current, user selected verson control Plugin.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.GetAssetByGUID(System.String)">
      <summary>
        <para>Returns version control information about an asset from a given GUID.</para>
      </summary>
      <param name="guid">GUID of asset.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.GetAssetByPath(System.String)">
      <summary>
        <para>Returns the version control information about an asset. Can be used with "AssetList.Add" to add assets to a list for further version control actions.</para>
      </summary>
      <param name="unityPath">Path to asset.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.GetAssetListFromSelection">
      <summary>
        <para>Returns the version control information about the currently selected Assets.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.GetLatest(UnityEditor.VersionControl.AssetList)">
      <summary>
        <para>Start a task for getting the latest version of an out of sync asset from the version control server.</para>
      </summary>
      <param name="assets">List of assets to update.</param>
      <param name="asset">Asset to update.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.GetLatest(UnityEditor.VersionControl.Asset)">
      <summary>
        <para>Start a task for getting the latest version of an out of sync asset from the version control server.</para>
      </summary>
      <param name="assets">List of assets to update.</param>
      <param name="asset">Asset to update.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.GetLatestIsValid(UnityEditor.VersionControl.AssetList)">
      <summary>
        <para>The task tests the given asset list and returns true if Provider.GetLatest is valid operation for one or more assets.</para>
      </summary>
      <param name="assets">List of assets to test.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.GetLatestIsValid(UnityEditor.VersionControl.Asset)">
      <summary>
        <para>TODO.</para>
      </summary>
      <param name="asset">
      </param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Incoming">
      <summary>
        <para>Starts a task that queries the version control server for incoming changes.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.IncomingChangeSetAssets(UnityEditor.VersionControl.ChangeSet)">
      <summary>
        <para>Given an incoming changeset this will start a task to query the version control server for which assets are part of the changeset.</para>
      </summary>
      <param name="changeset">Incoming changeset.</param>
      <param name="changesetID">Incoming changesetid.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.IncomingChangeSetAssets(System.String)">
      <summary>
        <para>Given an incoming changeset this will start a task to query the version control server for which assets are part of the changeset.</para>
      </summary>
      <param name="changeset">Incoming changeset.</param>
      <param name="changesetID">Incoming changesetid.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.IsOpenForEdit(UnityEditor.VersionControl.Asset)">
      <summary>
        <para>Returns true if an asset can be edited.</para>
      </summary>
      <param name="asset">Asset to test.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Lock(UnityEditor.VersionControl.AssetList,System.Boolean)">
      <summary>
        <para>Attempt to lock an asset for exclusive editing.</para>
      </summary>
      <param name="asset">Asset to lock/unlock.</param>
      <param name="assets">List of assets to lock/unlock.</param>
      <param name="locked">True to lock assets, false to unlock assets.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Lock(UnityEditor.VersionControl.Asset,System.Boolean)">
      <summary>
        <para>Attempt to lock an asset for exclusive editing.</para>
      </summary>
      <param name="asset">Asset to lock/unlock.</param>
      <param name="assets">List of assets to lock/unlock.</param>
      <param name="locked">True to lock assets, false to unlock assets.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.LockIsValid(UnityEditor.VersionControl.AssetList)">
      <summary>
        <para>Returns true if the Provider.Lock task can be executed on one or more assets from the given asset list.</para>
      </summary>
      <param name="assets">List of assets to test.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.LockIsValid(UnityEditor.VersionControl.Asset)">
      <summary>
        <para>TODO.</para>
      </summary>
      <param name="asset">
      </param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Merge(UnityEditor.VersionControl.AssetList)">
      <summary>
        <para>Initiates a merge task to handle the merging of conflicting Assets. This invokes a merge tool, which you can set in the External Tools section of the Preferences window, on the conflicting Assets. When the merge task finishes, the AssetList only contains the Assets that the tool could merge.</para>
      </summary>
      <param name="assets">The list of conflicting assets to be merged.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Move(System.String,System.String)">
      <summary>
        <para>Uses the version control plugin to move an asset from one path to another.</para>
      </summary>
      <param name="from">Path to the source asset.</param>
      <param name="to">Path to the destination.</param>
    </member>
    <member name="T:UnityEditor.VersionControl.Provider.PreCheckoutCallback">
      <summary>
        <para>Delegate for a user-supplied callback to be called before Version Control Checkout.</para>
      </summary>
      <param name="list">The list of Assets that will be passed on to the Checkout command. Assets can be removed from or added to this list in the callback.</param>
      <param name="changesetID">Set this to the ID of an existing changeset to check out the listed Assets in that changeset. If no changeset matching the specified ID is found, the checkout will be blocked and an error message raised. Do not set both this and the changesetDescription parameter - this is not supported and an error will be raised.</param>
      <param name="changesetDescription">To check the Assets out in a new changeset, set this description string. This action creates a new changeset, where the Assets open. Do not set both this description string and the changesetID parameter. Setting both causes an error.</param>
    </member>
    <member name="T:UnityEditor.VersionControl.Provider.PreSubmitCallback">
      <summary>
        <para>Delegate for a user-supplied callback to be called before Version Control Submit.</para>
      </summary>
      <param name="list">The list of Assets that will be passed on to the Checkout command. Assets can be removed from or added to this list in the callback.</param>
      <param name="changesetID">Set this to the ID of an existing changeset to submit the listed Assets in that changeset. If no changeset matching the specified ID is found, the submission will be blocked and an error message raised.</param>
      <param name="changesetDescription">If you wish to submit the Assets out in a new changeset, set this description string and a new changeset will be created and the Assets submitted there.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Resolve(UnityEditor.VersionControl.AssetList,UnityEditor.VersionControl.ResolveMethod)">
      <summary>
        <para>Starts a task that will resolve the conflicting assets in version control.</para>
      </summary>
      <param name="assets">List of assets to resolve.</param>
      <param name="resolveMethod">How the assets should be resolved.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.ResolveIsValid(UnityEditor.VersionControl.AssetList)">
      <summary>
        <para>Tests if any of the assets in the list have the conflicted state and can be resolved.</para>
      </summary>
      <param name="assets">The list of asset to be resolved.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Revert(UnityEditor.VersionControl.AssetList,UnityEditor.VersionControl.RevertMode)">
      <summary>
        <para>Reverts the specified assets by undoing any changes done since the last time you synced.</para>
      </summary>
      <param name="assets">The list of assets to be reverted.</param>
      <param name="asset">The asset to be reverted.</param>
      <param name="mode">How to revert the assets.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Revert(UnityEditor.VersionControl.Asset,UnityEditor.VersionControl.RevertMode)">
      <summary>
        <para>Reverts the specified assets by undoing any changes done since the last time you synced.</para>
      </summary>
      <param name="assets">The list of assets to be reverted.</param>
      <param name="asset">The asset to be reverted.</param>
      <param name="mode">How to revert the assets.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.RevertIsValid(UnityEditor.VersionControl.AssetList,UnityEditor.VersionControl.RevertMode)">
      <summary>
        <para>Returns true if Provider.Revert is a valid task to perform on at least one of the given assets in the list.</para>
      </summary>
      <param name="assets">List of assets to test.</param>
      <param name="asset">Asset to test.</param>
      <param name="mode">Revert mode to test for.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.RevertIsValid(UnityEditor.VersionControl.Asset,UnityEditor.VersionControl.RevertMode)">
      <summary>
        <para>Returns true if Provider.Revert is a valid task to perform on at least one of the given assets in the list.</para>
      </summary>
      <param name="assets">List of assets to test.</param>
      <param name="asset">Asset to test.</param>
      <param name="mode">Revert mode to test for.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Status(UnityEditor.VersionControl.AssetList)">
      <summary>
        <para>Starts a task that will fetch the most recent status about the asset or assets from the revision control system.</para>
      </summary>
      <param name="assets">The asset list to fetch state information for.</param>
      <param name="asset">The asset to fetch state information for.</param>
      <param name="recursively">If any assets specified are folders this flag will get status for all descendants of the folder as well.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Status(UnityEditor.VersionControl.Asset)">
      <summary>
        <para>Starts a task that will fetch the most recent status about the asset or assets from the revision control system.</para>
      </summary>
      <param name="assets">The asset list to fetch state information for.</param>
      <param name="asset">The asset to fetch state information for.</param>
      <param name="recursively">If any assets specified are folders this flag will get status for all descendants of the folder as well.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Status(UnityEditor.VersionControl.AssetList,System.Boolean)">
      <summary>
        <para>Starts a task that will fetch the most recent status about the asset or assets from the revision control system.</para>
      </summary>
      <param name="assets">The asset list to fetch state information for.</param>
      <param name="asset">The asset to fetch state information for.</param>
      <param name="recursively">If any assets specified are folders this flag will get status for all descendants of the folder as well.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Status(UnityEditor.VersionControl.Asset,System.Boolean)">
      <summary>
        <para>Starts a task that will fetch the most recent status about the asset or assets from the revision control system.</para>
      </summary>
      <param name="assets">The asset list to fetch state information for.</param>
      <param name="asset">The asset to fetch state information for.</param>
      <param name="recursively">If any assets specified are folders this flag will get status for all descendants of the folder as well.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Status(System.String[])">
      <summary>
        <para>Starts a task that will fetch the most recent status about the asset or assets from the revision control system.</para>
      </summary>
      <param name="assets">The asset list to fetch state information for.</param>
      <param name="asset">The asset to fetch state information for.</param>
      <param name="recursively">If any assets specified are folders this flag will get status for all descendants of the folder as well.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Status(System.String[],System.Boolean)">
      <summary>
        <para>Starts a task that will fetch the most recent status about the asset or assets from the revision control system.</para>
      </summary>
      <param name="assets">The asset list to fetch state information for.</param>
      <param name="asset">The asset to fetch state information for.</param>
      <param name="recursively">If any assets specified are folders this flag will get status for all descendants of the folder as well.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Status(System.String)">
      <summary>
        <para>Starts a task that will fetch the most recent status about the asset or assets from the revision control system.</para>
      </summary>
      <param name="assets">The asset list to fetch state information for.</param>
      <param name="asset">The asset to fetch state information for.</param>
      <param name="recursively">If any assets specified are folders this flag will get status for all descendants of the folder as well.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Status(System.String,System.Boolean)">
      <summary>
        <para>Starts a task that will fetch the most recent status about the asset or assets from the revision control system.</para>
      </summary>
      <param name="assets">The asset list to fetch state information for.</param>
      <param name="asset">The asset to fetch state information for.</param>
      <param name="recursively">If any assets specified are folders this flag will get status for all descendants of the folder as well.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.Submit(UnityEditor.VersionControl.ChangeSet,UnityEditor.VersionControl.AssetList,System.String,System.Boolean)">
      <summary>
        <para>Starts a task that submits the assets to version control.</para>
      </summary>
      <param name="changeset">The changeset to submit.</param>
      <param name="list">The list of assets to submit.</param>
      <param name="description">The description of the changeset.</param>
      <param name="saveOnly">If true then only save the changeset to be submitted later.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.SubmitIsValid(UnityEditor.VersionControl.ChangeSet,UnityEditor.VersionControl.AssetList)">
      <summary>
        <para>Returns true if submitting the assets is a valid operation.</para>
      </summary>
      <param name="changeset">The changeset to submit.</param>
      <param name="assets">The asset to submit.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.UnlockIsValid(UnityEditor.VersionControl.AssetList)">
      <summary>
        <para>Returns true if unlocking the assets is a valid operation.</para>
      </summary>
      <param name="assets">The asset list to test.</param>
      <param name="asset">The asset to test.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.UnlockIsValid(UnityEditor.VersionControl.Asset)">
      <summary>
        <para>Returns true if unlocking the assets is a valid operation.</para>
      </summary>
      <param name="assets">The asset list to test.</param>
      <param name="asset">The asset to test.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Provider.UpdateSettings">
      <summary>
        <para>Starts a task that sends the version control settings to the version control system.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.ResolveMethod">
      <summary>
        <para>How assets should be resolved.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.ResolveMethod.UseMerged">
      <summary>
        <para>Use merged version.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.ResolveMethod.UseMine">
      <summary>
        <para>Use "mine" (local version).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.ResolveMethod.UseTheirs">
      <summary>
        <para>Use "theirs" (other/remote version).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.RevertMode">
      <summary>
        <para>Defines the behaviour of the version control revert methods.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.RevertMode.KeepModifications">
      <summary>
        <para>Revert files but keep locally changed ones.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.RevertMode.Normal">
      <summary>
        <para>Use the version control regular revert approach.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.RevertMode.Unchanged">
      <summary>
        <para>Revert only unchanged files.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.SubmitResult">
      <summary>
        <para>The status of an operation returned by the VCS.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.SubmitResult.ConflictingFiles">
      <summary>
        <para>Files conflicted.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.SubmitResult.Error">
      <summary>
        <para>An error was returned.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.SubmitResult.OK">
      <summary>
        <para>Submission worked.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VersionControl.SubmitResult.UnaddedFiles">
      <summary>
        <para>Files were unable to be added.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.Task">
      <summary>
        <para>A Task describes an instance of a version control operation.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Task.assetList">
      <summary>
        <para>The result of some types of tasks.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Task.changeSets">
      <summary>
        <para>List of changesets returned by some tasks.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Task.description">
      <summary>
        <para>A short description of the current task.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Task.messages">
      <summary>
        <para>May contain messages from the version control plugins.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Task.progressPct">
      <summary>
        <para>A progress percentage for the current task.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Task.resultCode">
      <summary>
        <para>Some task return result codes, these are stored here.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Task.secondsSpent">
      <summary>
        <para>Total time spent in task since the task was started.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Task.success">
      <summary>
        <para>Get whether or not the task was completed succesfully.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.Task.text">
      <summary>
        <para>Will contain the result of the Provider.ChangeSetDescription task.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.Task.SetCompletionAction(UnityEditor.VersionControl.CompletionAction)">
      <summary>
        <para>Upon completion of a task a completion task will be performed if it is set.</para>
      </summary>
      <param name="action">Which completion action to perform.</param>
    </member>
    <member name="M:UnityEditor.VersionControl.Task.Wait">
      <summary>
        <para>A blocking wait for the task to complete.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.VersionControlAttribute">
      <summary>
        <para>Allows you to mark a class as a version control system object.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.VersionControlAttribute.displayName">
      <summary>
        <para>Version control system display name.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.VersionControlAttribute.name">
      <summary>
        <para>Version control system name.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.VersionControlAttribute.#ctor(System.String,System.String)">
      <summary>
        <para>Constructs VersionControlAttribute.</para>
      </summary>
      <param name="name">Version control system name.</param>
      <param name="displayName">Version control system display name.</param>
    </member>
    <member name="T:UnityEditor.VersionControl.VersionControlDescriptor">
      <summary>
        <para>Contains unique version control system name.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.VersionControlDescriptor.displayName">
      <summary>
        <para>Version control system display name.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.VersionControlDescriptor.name">
      <summary>
        <para>Version control system name.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.VersionControlManager">
      <summary>
        <para>Manages version control systems.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.VersionControlManager.activeVersionControlObject">
      <summary>
        <para>The VersionControlObject representing active VCS.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.VersionControlManager.versionControlDescriptors">
      <summary>
        <para>An array containing all available version control systems.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.VersionControlManager.SetVersionControl(System.String)">
      <summary>
        <para>Sets the active version control system.</para>
      </summary>
      <param name="name">Unique version control system name.</param>
      <returns>
        <para>Returns true if VCS has been activated. false otherwise.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.VersionControl.VersionControlObject">
      <summary>
        <para>The abstract base class for representing a version control system.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VersionControl.VersionControlObject.isConnected">
      <summary>
        <para>Tests whether the VersionControlObject is connected to an underlying version control system.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.VersionControlObject.GetExtension">
      <summary>
        <para>Gets optional extension object.</para>
      </summary>
      <returns>
        <para>Extension object if it's supported by VersionControlObject. null otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.VersionControl.VersionControlObject.OnActivate">
      <summary>
        <para>Called when your version control system is activated.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.VersionControlObject.OnDeactivate">
      <summary>
        <para>Called when your version control system is deactivated.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.VersionControlObject.Refresh">
      <summary>
        <para>Called when the cached state should be discarded and the new state should be retrieved from the underlying VCS.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VersionControl.VersionControlUtils">
      <summary>
        <para>Contains version control system specific utility methods.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VersionControl.VersionControlUtils.IsPathVersioned(System.String)">
      <summary>
        <para>Allows you to check whether the specified file is tracked by version control.</para>
      </summary>
      <param name="path">Path to the file.</param>
      <returns>
        <para>true if the file should be tracked by VCS. false otherwise.</para>
      </returns>
    </member>
    <member name="T:UnityEditor.VertexChannelCompressionFlags">
      <summary>
        <para>Use these enum flags to specify which elements of a vertex to compress.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VertexChannelCompressionFlags.Color">
      <summary>
        <para>Color compression enabled.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VertexChannelCompressionFlags.None">
      <summary>
        <para>Vertex compression disabled.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VertexChannelCompressionFlags.Normal">
      <summary>
        <para>Normal compression enabled.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VertexChannelCompressionFlags.Position">
      <summary>
        <para>Position compression enabled.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VertexChannelCompressionFlags.Tangent">
      <summary>
        <para>Tangent compression enabled.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VertexChannelCompressionFlags.TexCoord0">
      <summary>
        <para>Texture coordinate 0 compression enabled.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VertexChannelCompressionFlags.TexCoord1">
      <summary>
        <para>Texture coordinate 1 compression enabled.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VertexChannelCompressionFlags.TexCoord2">
      <summary>
        <para>Texture coordinate 2 compression enabled.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VertexChannelCompressionFlags.TexCoord3">
      <summary>
        <para>Texture coordinate 3 compression enabled.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VideoBitrateMode">
      <summary>
        <para>Bit rate after the clip is transcoded.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoBitrateMode.High">
      <summary>
        <para>High value, possibly exceeding typical internet connection capabilities.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoBitrateMode.Low">
      <summary>
        <para>Low value, safe for slower internet connections or clips where visual quality is not critical.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoBitrateMode.Medium">
      <summary>
        <para>Typical bit rate supported by internet connections.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VideoClipImporter">
      <summary>
        <para>VideoClipImporter lets you modify Video.VideoClip import settings from Editor scripts.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.defaultTargetSettings">
      <summary>
        <para>Default values for the platform-specific import settings.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.deinterlaceMode">
      <summary>
        <para>Images are deinterlaced during transcode.  This tells the importer how to interpret fields in the source, if any.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.flipHorizontal">
      <summary>
        <para>Apply a horizontal flip during import.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.flipVertical">
      <summary>
        <para>Apply a vertical flip during import.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.frameCount">
      <summary>
        <para>Number of frames in the clip.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.frameRate">
      <summary>
        <para>Frame rate of the clip.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.importAudio">
      <summary>
        <para>Import audio tracks from source file.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.isPlayingPreview">
      <summary>
        <para>Whether the preview is currently playing.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.keepAlpha">
      <summary>
        <para>Whether to keep the alpha from the source into the transcoded clip.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.outputFileSize">
      <summary>
        <para>Size in bytes of the file once imported.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.pixelAspectRatioDenominator">
      <summary>
        <para>Denominator of the pixel aspect ratio (num:den).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.pixelAspectRatioNumerator">
      <summary>
        <para>Numerator of the pixel aspect ratio (num:den).</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.sourceAudioTrackCount">
      <summary>
        <para>Number of audio tracks in the source file.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.sourceFileSize">
      <summary>
        <para>Size in bytes of the file before importing.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.sourceHasAlpha">
      <summary>
        <para>True if the source file has a channel for per-pixel transparency.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.sRGBClip">
      <summary>
        <para>Whether the imported clip contains sRGB color data.</para>
      </summary>
    </member>
    <member name="P:UnityEditor.VideoClipImporter.transcodeSkipped">
      <summary>
        <para>Returns true if transcoding was skipped during import, false otherwise. (Read Only)

When VideoImporterTargetSettings.enableTranscoding is set to true, the resulting transcoding operation done at import time may be quite long, up to many hours depending on source resolution and content duration. An option to skip this process is offered in the asset import progress bar. When skipped, the transcoding instead provides a non-transcoded verision of the asset. However, the importer settings stay intact so this property can be inspected to detect the incoherence with the generated artifact.

Re-importing without stopping the transcode process, or with transcode turned off, causes this property to become false.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VideoClipImporter.ClearTargetSettings(System.String)">
      <summary>
        <para>Clear the platform-specific import settings for the specified platform, causing them to go back to the default settings.</para>
      </summary>
      <param name="platform">Platform name.</param>
    </member>
    <member name="M:UnityEditor.VideoClipImporter.Equals(UnityEditor.VideoClipImporter)">
      <summary>
        <para>Performs a value comparison with another VideoClipImporter.</para>
      </summary>
      <param name="rhs">The importer to compare with.</param>
      <returns>
        <para>Returns true if the settings for both VideoClipImporters match. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.VideoClipImporter.GetPreviewTexture">
      <summary>
        <para>Returns a texture with the transcoded clip's current frame.
Returns frame 0 when not playing, and frame at current time when playing.</para>
      </summary>
      <returns>
        <para>Texture containing the current frame.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.VideoClipImporter.GetResizeHeight(UnityEditor.VideoResizeMode)">
      <summary>
        <para>Get the resulting height of the resize operation for the specified resize mode.</para>
      </summary>
      <param name="mode">Mode for which the height is queried.</param>
      <returns>
        <para>Height for the specified resize mode.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.VideoClipImporter.GetResizeModeName(UnityEditor.VideoResizeMode)">
      <summary>
        <para>Get the full name of the resize operation for the specified resize mode.</para>
      </summary>
      <param name="mode">Mode for which the width is queried.</param>
      <returns>
        <para>Name for the specified resize mode.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.VideoClipImporter.GetResizeWidth(UnityEditor.VideoResizeMode)">
      <summary>
        <para>Get the resulting width of the resize operation for the specified resize mode.</para>
      </summary>
      <param name="mode">Mode for which the width is queried.</param>
      <returns>
        <para>Width for the specified resize mode.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.VideoClipImporter.GetSourceAudioChannelCount(System.UInt16)">
      <summary>
        <para>Number of audio channels in the specified source track.</para>
      </summary>
      <param name="audioTrackIdx">Index of the audio track to query.</param>
      <returns>
        <para>Number of channels.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.VideoClipImporter.GetSourceAudioSampleRate(System.UInt16)">
      <summary>
        <para>Sample rate of the specified audio track.</para>
      </summary>
      <param name="audioTrackIdx">Index of the audio track to query.</param>
      <returns>
        <para>Sample rate in Hertz.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.VideoClipImporter.GetTargetSettings(System.String)">
      <summary>
        <para>Returns the platform-specific import settings for the specified platform.</para>
      </summary>
      <param name="platform">Platform name.</param>
      <returns>
        <para>The platform-specific import settings. Throws an exception if the platform is unknown.</para>
      </returns>
    </member>
    <member name="M:UnityEditor.VideoClipImporter.PlayPreview">
      <summary>
        <para>Starts preview playback.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VideoClipImporter.SetTargetSettings(System.String,UnityEditor.VideoImporterTargetSettings)">
      <summary>
        <para>Sets the platform-specific import settings for the specified platform.</para>
      </summary>
      <param name="platform">Platform name.</param>
      <param name="settings">The new platform-specific import settings. Throws an exception if the platform is unknown.</param>
    </member>
    <member name="M:UnityEditor.VideoClipImporter.StopPreview">
      <summary>
        <para>Stops preview playback.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VideoCodec">
      <summary>
        <para>Video codec to use when importing video clips.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoCodec.Auto">
      <summary>
        <para>Choose the codec that supports hardware decoding on the target platform.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoCodec.H264">
      <summary>
        <para>Encode video with the H.264 codec.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoCodec.H265">
      <summary>
        <para>Encode video with the H.265 codec.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoCodec.VP8">
      <summary>
        <para>Encode video using the vp8 codec.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VideoDeinterlaceMode">
      <summary>
        <para>Describes how the fields in the image, if any, should be interpreted.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoDeinterlaceMode.Even">
      <summary>
        <para>First field is in the even lines.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoDeinterlaceMode.Odd">
      <summary>
        <para>First field is in the odd lines.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoDeinterlaceMode.Off">
      <summary>
        <para>Clip is not interlaced.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VideoEncodeAspectRatio">
      <summary>
        <para>Methods to compensate for aspect ratio discrepancies between the source resolution and the wanted encoding size.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoEncodeAspectRatio.NoScaling">
      <summary>
        <para>Perform no operation.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoEncodeAspectRatio.Stretch">
      <summary>
        <para>Stretch the source to fill the target resolution without preserving the aspect ratio.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VideoEncodingProfile">
      <summary>
        <para>Options for the encoder profile.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoEncodingProfile.H264Baseline">
      <summary>
        <para>Encode video with the baseline profile.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoEncodingProfile.H264High">
      <summary>
        <para>Encode video with the high profile.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoEncodingProfile.H264Main">
      <summary>
        <para>Encode video using the main profile.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VideoImporterTargetSettings">
      <summary>
        <para>Importer settings that can have platform-specific values.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoImporterTargetSettings.aspectRatio">
      <summary>
        <para>How the aspect ratio discrepancies, if any, will be handled if the chosen import resolution has a different ratio than the source.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoImporterTargetSettings.bitrateMode">
      <summary>
        <para>Bit rate type for the transcoded clip.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoImporterTargetSettings.codec">
      <summary>
        <para>Codec that the resulting VideoClip will use.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoImporterTargetSettings.customHeight">
      <summary>
        <para>Height of the transcoded clip when the resizeMode is set to custom.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoImporterTargetSettings.customWidth">
      <summary>
        <para>Width of the transcoded clip when the resizeMode is set to custom.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoImporterTargetSettings.enableTranscoding">
      <summary>
        <para>Controls whether the movie file will be transcoded during import. When transcoding is not enabled, the file will be imported in its original format.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoImporterTargetSettings.resizeMode">
      <summary>
        <para>How to resize the images when going into the imported clip.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoImporterTargetSettings.spatialQuality">
      <summary>
        <para>Controls an internal image resize, resulting in blurrier images but smaller image dimensions and file size.</para>
      </summary>
    </member>
    <member name="M:UnityEditor.VideoImporterTargetSettings.#ctor">
      <summary>
        <para>Constructs an object with all members initialized with the default value inherent to their type.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VideoResizeMode">
      <summary>
        <para>How the video clip's images will be resized during transcoding.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoResizeMode.CustomSize">
      <summary>
        <para>Resulting size will be driven by VideoClipImporter.customWidth and VideoClipImporter.customHeight.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoResizeMode.HalfRes">
      <summary>
        <para>Half width and height.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoResizeMode.OriginalSize">
      <summary>
        <para>Same width and height as the source.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoResizeMode.QuarterRes">
      <summary>
        <para>Quarter width and height.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoResizeMode.Square1024">
      <summary>
        <para>Fit source in a 1024x1024 rectangle.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoResizeMode.Square256">
      <summary>
        <para>Fit source in a 256x256 rectangle.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoResizeMode.Square512">
      <summary>
        <para>Fit source in a 512x512 rectangle.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoResizeMode.ThreeQuarterRes">
      <summary>
        <para>3/4 width and height.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.VideoSpatialQuality">
      <summary>
        <para>Controls the imported clip's internal resize to save space at the cost of blurrier images.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoSpatialQuality.HighSpatialQuality">
      <summary>
        <para>No resize performed.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoSpatialQuality.LowSpatialQuality">
      <summary>
        <para>Scales width and height by 1/2.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.VideoSpatialQuality.MediumSpatialQuality">
      <summary>
        <para>Scales width and height by 3/4.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.ViewTool">
      <summary>
        <para>Enum for Tools.viewTool.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ViewTool.FPS">
      <summary>
        <para>The FPS tool is selected.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ViewTool.None">
      <summary>
        <para>View tool is not selected.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ViewTool.Orbit">
      <summary>
        <para>The orbit tool is selected.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ViewTool.Pan">
      <summary>
        <para>The pan tool is selected.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.ViewTool.Zoom">
      <summary>
        <para>The zoom tool is selected.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.WebGLCompressionFormat">
      <summary>
        <para>An enum containing different compression types.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WebGLCompressionFormat.Brotli">
      <summary>
        <para>WebGL resources are stored using Brotli compression.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WebGLCompressionFormat.Disabled">
      <summary>
        <para>WebGL resources are uncompressed.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WebGLCompressionFormat.Gzip">
      <summary>
        <para>WebGL resources are stored using Gzip compression.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.WebGLDebugSymbolMode">
      <summary>
        <para>An enum containing different modes for debug symbols.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WebGLDebugSymbolMode.Embedded">
      <summary>
        <para>Debug symbols are embedded into the wasm file.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WebGLDebugSymbolMode.External">
      <summary>
        <para>Debug symbols are stored in an external file.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WebGLDebugSymbolMode.Off">
      <summary>
        <para>No debug symbols are added to the build.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.WebGLExceptionSupport">
      <summary>
        <para>Options for Exception support in WebGL.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WebGLExceptionSupport.ExplicitlyThrownExceptionsOnly">
      <summary>
        <para>Enable throw support.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WebGLExceptionSupport.FullWithoutStacktrace">
      <summary>
        <para>Enable exception support for all exceptions, without stack trace information.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WebGLExceptionSupport.FullWithStacktrace">
      <summary>
        <para>Enable exception support for all exceptions, including stack trace information.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WebGLExceptionSupport.None">
      <summary>
        <para>Disable exception support.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.WebGLLinkerTarget">
      <summary>
        <para>The build format options available when building to WebGL.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WebGLLinkerTarget.Asm">
      <summary>
        <para>Only asm.js output will be generated. This setting has been deprecated.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WebGLLinkerTarget.Both">
      <summary>
        <para>Both asm.js and WebAssembly output will be generated. The WebAssembly version of the generated content will be used if supported by the browser, otherwise, the asm.js version will be used. This setting has been deprecated.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WebGLLinkerTarget.Wasm">
      <summary>
        <para>Only WebAssembly output will be generated. This will require a browser with WebAssembly support to run the generated content.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.WebGLTextureSubtarget">
      <summary>
        <para>Compressed texture format for target build platform.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WebGLTextureSubtarget.ASTC">
      <summary>
        <para>ASTC texture compression.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WebGLTextureSubtarget.DXT">
      <summary>
        <para>S3 texture compression. Supported on devices with NVidia Tegra, Vivante and Intel GPUs.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WebGLTextureSubtarget.ETC2">
      <summary>
        <para>ETC2 texture compression. Available on devices which support OpenGL ES 3.0; on OpenGL ES 2 devices the texture is decompressed on CPU.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WebGLTextureSubtarget.Generic">
      <summary>
        <para>Don't override texture compression.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.WebGLWasmArithmeticExceptions">
      <summary>
        <para>An enum containing different trapping modes for WebAssembly code.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WebGLWasmArithmeticExceptions.Ignore">
      <summary>
        <para>This mode avoids traps by clamping floating point value to a reasonable range when performing arithmetic operations.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WebGLWasmArithmeticExceptions.Throw">
      <summary>
        <para>WebAssembly code will throw an exception on things like division by zero, rounding a very large float to an int, and so forth.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.WSABuildAndRunDeployTarget">
      <summary>
        <para>Specifies the Windows device to deploy and launch the UWP app on when using Build and Run from the Editor.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WSABuildAndRunDeployTarget.DevicePortal">
      <summary>
        <para>Runs the app on a remote Windows device using the Windows DevicePortal (WDP) transport.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WSABuildAndRunDeployTarget.LocalMachine">
      <summary>
        <para>Runs the app on the local Windows PC.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.WSABuildType">
      <summary>
        <para>Build configurations for Windows Store Visual Studio solutions.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WSABuildType.Debug">
      <summary>
        <para>Debug configuation.
No optimizations, profiler code enabled.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WSABuildType.Master">
      <summary>
        <para>Master configuation.
Optimizations enabled, profiler code disabled. This configuration is used when submitting the application to Windows Store.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WSABuildType.Release">
      <summary>
        <para>Release configuration.
Optimization enabled, profiler code enabled.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.WSASubtarget">
      <summary>
        <para>Target device type for a Windows Store application to run on.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WSASubtarget.AnyDevice">
      <summary>
        <para>The application targets all devices that run Windows Store applications.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WSASubtarget.HoloLens">
      <summary>
        <para>The application targets HoloLens.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WSASubtarget.Mobile">
      <summary>
        <para>Application targets mobile devices.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WSASubtarget.PC">
      <summary>
        <para>Application targets PCs.</para>
      </summary>
    </member>
    <member name="T:UnityEditor.WSAUWPBuildType">
      <summary>
        <para>Determines the output build type when building to Universal Windows Platform.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WSAUWPBuildType.D3D">
      <summary>
        <para>D3D Project</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WSAUWPBuildType.ExecutableOnly">
      <summary>
        <para>Executable Only</para>
      </summary>
    </member>
    <member name="F:UnityEditor.WSAUWPBuildType.XAML">
      <summary>
        <para>XAML Project</para>
      </summary>
    </member>
    <member name="T:UnityEditor.XboxBuildSubtarget">
      <summary>
        <para>Target Xbox build type.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.XboxBuildSubtarget.Debug">
      <summary>
        <para>Debug player (for building with source code).</para>
      </summary>
    </member>
    <member name="F:UnityEditor.XboxBuildSubtarget.Development">
      <summary>
        <para>Development player.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.XboxBuildSubtarget.Master">
      <summary>
        <para>Master player (submission-proof).</para>
      </summary>
    </member>
    <member name="T:UnityEditor.XcodeBuildConfig">
      <summary>
        <para>Build configurations for the Xcode project Unity generates.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.XcodeBuildConfig.Debug">
      <summary>
        <para>Sets the build configuration to Debug for the Xcode project Unity generates.</para>
      </summary>
    </member>
    <member name="F:UnityEditor.XcodeBuildConfig.Release">
      <summary>
        <para>Sets the build configuration to Release for the Xcode project Unity generates.</para>
      </summary>
    </member>
  </members>
</doc>